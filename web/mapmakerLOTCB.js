/**
 * Created by skyelipson on 5/6/18.
 */
function buildMaster()
{
    if (map == "world") //If the map is the main world map.
    {
        if (region == "central") //Y < 6870
        {
            if (change != "central")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units
                //The master thief of teshir
                if (quests.theMasterThiefOfTeshirNeevSlain != true)
                {
                    ArtificialIntelligenceAccess.push(new Unit(2100, 1050, "Neev", false, "Easter"));
                }

                //ArtificialIntelligenceAccess.push(new Unit(3000, 1500, "Griffin", "massive", "Criaad The Voracious"));
                //ArtificialIntelligenceAccess.push(new Unit(3000, 1400, "Peacock", true, "Deriere"));
                //ArtificialIntelligenceAccess.push(new Unit(3000, 1500, "Horse", true, "player"));
                //ArtificialIntelligenceAccess.push(new Unit(3050, 1650, "Boar", true, "Deedee"));
                //scenicList.push(new Scenery("thegolthornPlant", 3000, 1500, 0.1, true));
                //ArtificialIntelligenceAccess.push(new Unit(3000, 1500, "ThegolThorn", true, "pugil"));
                //ArtificialIntelligenceAccess.push(new Unit(3000, 1500, "Bat", false, "ifi"));
                //ArtificialIntelligenceAccess.push(new Unit(3000, 1500, "Cheshire", true, "Faxic"));
                //ArtificialIntelligenceAccess.push(new Unit(3000, 1500, "Person", false, "Dave the Wolf", {race: "Freynor", faction: "arena2", personality: "violent", outfit: ["northernClothing", 0], weapon: ["none", [0.1, 0.4], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: false, route:[[0, 0]], lycan: true}));
                //ArtificialIntelligenceAccess.push(new Unit(3000, 1500, "Person", false, "Loria the Bloodsucker", {race: "Vardan", faction: "arena2", personality: "violent", outfit: ["none", 0], weapon: ["none", [0.1, 0.4], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: false, route:[[0, 0]], vamp: true}));
                //ArtificialIntelligenceAccess.push(new Unit(3000, 1500, "Bovine", true, "Wifi Cow"));
                //ArtificialIntelligenceAccess.push(new Unit(3000, 1500, "Sheep", false, "Double-0-Fuzzball"));
                //ArtificialIntelligenceAccess.push(new Unit(3000, 1500, "Toad", true, "Hurgar"));
                //ArtificialIntelligenceAccess.push(new Unit(5550, 2500, "Koivaya", true, "Hamber"));
                //ArtificialIntelligenceAccess.push(new Unit(5550, 2500, "Koivaya", false, "Hem"));
                //ArtificialIntelligenceAccess.push(new Unit(3000, 2500, "ZafBeetle", true, "Tzalit"));
                //scenicList.push(new Scenery("viudaTunnel", 3500, 2500, 0, true, false));
                //scenicList.push(new Scenery("vinePatch", 3500, 2500, 0, 1));
                //scenicList.push(new Scenery("cerebrisPlant", 3500, 2500, 0, 1));
                //scenicList.push(new Scenery("gojiiPlant", 3500, 2500, 0, true));
                //scenicList.push(new Scenery("bahabPlant", 3500, 2500, 0, true));
                //scenicList.push(new Scenery("araneaDen", 3500, 2500, 0, false, true));
                //ArtificialIntelligenceAccess.push(new Unit(3500, 2500, "Borea", true, "Ipskwich"));
                //ArtificialIntelligenceAccess.push(new Unit(3500, 2500, "Salisea", false, "Digit"));
                //ArtificialIntelligenceAccess.push(new Unit(3000, 2500, "Gorgon", false, "Gra"));
                //ArtificialIntelligenceAccess.push(new Unit(3000, 2500, "Cruorcca", "massive", "Cruor"));
                //ArtificialIntelligenceAccess.push(new Unit(3908, 2500, "Dalger", true, "Apom"));
                //ArtificialIntelligenceAccess.push(new Unit(3908, 2500, "Kigarii", true, "Apex"));
                //ArtificialIntelligenceAccess.push(new Unit(3600, 2500, "Crenid", "massive", "Bulgg"));
                //scenicList.push(new Scenery("athergmPlant", 3990, 2500, 0, 1));
                //scenicList.push(new Scenery("decipulaBasePlant", 3670, 2500, 0, "massive"));
                //ArtificialIntelligenceAccess.push(new Unit(3500, 2500, "Zancudo", false, "proboscis"));
                //ArtificialIntelligenceAccess.push(new Unit(3550, 2500, "Venandi", true, "hunter"));
                //ArtificialIntelligenceAccess.push(new Unit(3570, 2500, "EtyrVenandi", true, "scout"));
                //ArtificialIntelligenceAccess.push(new Unit(3570, 2500, "AraneaVenandi", true, "tank"));
                //scenicList.push(new Scenery("valumPlant", 3990, 2500, 0, 1));
                //scenicList.push(new Scenery("decipulaPlant", 3670, 2500, 0, true));
                //scenicList.push(new Scenery("porstolPlant", 3750, 2500, 0, true));
                //scenicList.push(new Scenery("ashaiCampFire", 3750, 2500, 0, true));
                //scenicList.push(new Scenery("ashaiTree", 3750, 2500, 0, 1));
                //scenicList.push(new Scenery("iodPlant", 3750, 2500, 0, true));
                //scenicList.push(new Scenery("poegroonPlant", 3800, 2500, 0, true));
                //scenicList.push(new Scenery("gribnoyPlant", 3700, 2500, 0, true));
                //scenicList.push(new Scenery("maleotPlant", 3600, 2500, 0, true));
                //ArtificialIntelligenceAccess.push(new Unit(3700, 2500, "Boa", false, "constricto"));
                //ArtificialIntelligenceAccess.push(new Unit(3600, 2500, "PoisonDartFrog", true, "coqui"));
                //scenicList.push(new Scenery("sonjaTree", 3600, 2500, 0, true));
                //scenicList.push(new Scenery("matnaWeb", 3600, 2500, 0, 2.1));
                //ArtificialIntelligenceAccess.push(new Unit(3600, 2500, "Matna", false, "deathByter"));
                //ArtificialIntelligenceAccess.push(new Unit(3600, 2500, "Babosa", true, "Glubber", {patrolStops: 3, patrolLoop: true, route:[[3600, 2500], [3500, 2550], [3650, 2600]]}));
                //scenicList.push(new Scenery("pyromothWeb", 3700, 2500, 0, 1, true));
                //ArtificialIntelligenceAccess.push(new Unit(3700, 2500, "Pyromoth", true, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[3600, 2500], [3500, 2550], [3650, 2600]]}));
                //scenicList.push(new Scenery("crilkPlant", 3600, 2500, 3.2, true));
                //ArtificialIntelligenceAccess.push(new Unit(3600, 2500, "Person", false, "Mr. Dumpty", {race: "Humpty", faction: "Cephrite", personality: "violent", outfit: ["none", 8], weapon: ["none", [3, 2], 3, 22, 2], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: false, route:[[0, 0], [0, 0]], kid: true, kidSize: 2}));
                //ArtificialIntelligenceAccess.push(new Unit(3400, 2500, "Soldier", false, "Mrs. Dumpty", {race: "Humpty", faction: "Cephrite", con: 5, speed: 0.85, outfit: ["none", 9], weapon: ["none", [3, 3], 3.5, 25, 2], ranged: [false, "arrow", 8, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: false, route:[[0, 0], [0, 0]], kid: true, kidSize: 2.1}));
                //ArtificialIntelligenceAccess.push(new Unit(3500, 2500, "BlackTroll", false, "Brufga"));
                //scenicList.push(new Scenery("overVines", 3600, 2500, 0, 4, 1));
                //scenicList.push(new Scenery("webVictim", 3600, 2500, 0, 3, 1));
                //scenicList.push(new Scenery("jungleStuff", 3600, 2500, 0.23, 2, 1));
                //scenicList.push(new Scenery("selvaTree", 3600, 2500, 0, 0));
                //scenicList.push(new Scenery("kozlyakPlant", 3600, 2500, 3.2, true));
                //ArtificialIntelligenceAccess.push(new Unit(4000, 2500, "MudToad", true, "Slub"));
                //ArtificialIntelligenceAccess.push(new Unit(4000, 2500, "Ghoul", true, "Slub"));
                //ArtificialIntelligenceAccess.push(new Unit(4000, 2900, "Ghoul", false, "Sluba"));
                //ArtificialIntelligenceAccess[ArtificialIntelligenceAccess.length - 1].eggs = "fecundo";
                //scenicList.push(new Scenery("eyewortPlant", 3400, 2400, 2.2, true));
                //scenicList.push(new Scenery("sciltPlant", 3400, 2400, 1.6, true, 1));
                //scenicList.push(new Scenery("korceidaPlant", 3400, 2400, 2, true));
                //scenicList.push(new Scenery("lauminPlant", 3600, 2400, 2, true));
                //ArtificialIntelligenceAccess.push(new Unit(3900, 2900, "Xormid", false, "Sluba"));
                //ArtificialIntelligenceAccess.push(new Unit(3900, 2900, "Silter", false, "Screpa"));
                //ArtificialIntelligenceAccess.push(new Unit(3900, 2900, "KorskBeetle", true, "Scraupp"));
                //scenicList.push(new Scenery("nechrovite", 2000 , 1000, 7, 1, 1));
                //scenicList.push(new Scenery("meklePlant", 3400, 2400, 2.2, true));
                //scenicList.push(new Scenery("laicaumPlant", 3200, 2400, 1.2, true));
                //scenicList.push(new Scenery("danzigPlant", 3000, 2400, 3, true));
                //ArtificialIntelligenceAccess.push(new Unit(3400, 2400, "Vreck", true, "Skeever", {patrolStops: 5, patrolLoop: true, route:[[4000, 2000], [3400, 2400], [3100, 2600], [3500, 3000], [4500, 2500]]}));
                //scenicList.push(new Scenery("vardanianBasin", 3600, 2400, 2, true));
                //scenicList.push(new Scenery("swampWalk", 3600, 2400, 2, true));
                //scenicList.push(new Scenery("swampWalkShort", 3530, 2291, 2 + 1/2 * Math.PI, true));
                //scenicList.push(new Scenery("swampStilt", 3599, 2255, 0, true));
                //scenicList.push(new Scenery("swampPlank", 3585, 2306, 0.2, true));
                //scenicList.push(new Scenery("swampBridge", 3500, 2442, 0, false));
                //scenicList.push(new Scenery("swampPlatform", 3346, 2506, 0.13, true));
                //scenicList.push(new Scenery("vardanianPyre", 3304, 2529, 2.2, false, 0.8));
                //scenicList.push(new Scenery("pikeWall", 3280, 2435, 0.23, true));
                //scenicList.push(new Scenery("mimicry", 3369, 2651, 1.2, "TentMimic"));
                //ArtificialIntelligenceAccess.push(new Unit(4000, 2300, "Hydra", false, "Hercules"));
                //ArtificialIntelligenceAccess.push(new Unit(3900, 2900, "Mimic", false, "Mimmi"));
                //scenicList.push(new Scenery("door", 3346, 2506, -1/2 * Math.PI, 3, [true, "abc"]));
                //scenicList.push(new Scenery("appleTree", 3002.861389777469, 2550.1841011505403, 6, true));
                //scenicList.push(new Scenery("ogoTree", 4202.861389777469, 2700.2841011505403, 6, true));
                //scenicList.push(new Scenery("greatPineTree", 3791.380634648301, 2587.5857670519786, 3.0663822932121048, 8.646700282896546, "snowy"));
                //scenicList.push(new Scenery("vardanBuilding1", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding2", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding3", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding4", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding5", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding6", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding7", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding8", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding9", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding10", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding11", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding12", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding13", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding14", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding15", 5500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding16", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding17", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding18", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding19", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding20", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding21", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding22", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding23", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding24", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding25", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding26", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding27", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding28", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding29", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding30", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding31", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding32", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding33", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding34", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding35", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding36", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding37", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding38", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding39", 4500, 2400, -1/2 * Math.PI, 1));
                //scenicList.push(new Scenery("vardanBuilding40", 4500, 2400, Math.PI, 1.5));
                //ArtificialIntelligenceAccess.push(new Unit(4000, 2500, "Cirmusid", false, "Sluch"));
                //ArtificialIntelligenceAccess.push(new Unit(4000, 2500, "Borgal", false, "Sluch"));
                //ArtificialIntelligenceAccess.push(new Unit(4000, 2500, "Mornid", false, "Slewuch"));
                //scenicList.push(new Scenery("ribbackWeb", 4500, 2400, 0, 1));
                //scenicList.push(new Scenery("ribbackNest", 4500, 2400, 0, 1));
                //ArtificialIntelligenceAccess.push(new Unit(4100, 3200, "Ribback", false, "humpi"));
                //ArtificialIntelligenceAccess.push(new Unit(4000, 2500, "Ribback", false, "humphump"));
                //ArtificialIntelligenceAccess.push(new Unit(5000, 2400, "Ribback", true, "humpa"));
                //ArtificialIntelligenceAccess.push(new Unit(3900, 2900, "Fegil", false, "hik"));
                //ArtificialIntelligenceAccess.push(new Unit(3700, 2800, "Fegil", true, "hik"));
                //ArtificialIntelligenceAccess.push(new Unit(3700, 2800, "Palinsyda", true, "Monm"));
                //scenicList.push(new Scenery("vardanianWell", 3500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanianMueble", 3500, 2400, 0, 22, 1)); //flag stand royal
                //scenicList.push(new Scenery("vardanianMueble", 3500, 2400, 0, 23, 1)); //flag stand rebel
                //scenicList.push(new Scenery("vardanCastle1", 5800, 2700, 0, 2.4));
                //scenicList.push(new Scenery("vardanBed", 5800, 2700, 0, [true, 0.8], 3));
                //scenicList.push(new Scenery("vardanianHearth", 3500, 2400, 2/3 * Math.PI, true));
                //sscenicList.push(new Scenery("thenganBuilding6", 4500, 2400, 0, 2));
                //ArtificialIntelligenceAccess.push(new Unit(4100, 2300, "GreyHorse", false, "player"));
                //ArtificialIntelligenceAccess.push(new Unit(4100, 2300, "BlackBeruln", true, "Hutu"));
                //ArtificialIntelligenceAccess.push(new Unit(4100, 2500, "Skeleton", false, "Boneboy"));
                //ArtificialIntelligenceAccess.push(new Unit(4100, 2500, "Lich", true, "Boneman"));
                //ArtificialIntelligenceAccess.push(new Unit(4100, 2500, "CorpseGolem", false, "Boneburg"));
                //scenicList.push(new Scenery("trainingDummy", 4000, 2400, 0, 1.5));
                //scenicList.push(new Scenery("rangedTarget", 3900, 2400, 0, 1.5));
                //ArtificialIntelligenceAccess.push(new Unit(4100, 2500, "Fox", false, "Berney"));
                //ArtificialIntelligenceAccess.push(new Unit(4300, 2500, "ArcticFox", true, "Berney"));
                //scenicList.push(new Scenery("thenganBuilding7", 3900, 2400, 1/2 * Math.PI, 1.4));
                //scenicList.push(new Scenery("thenganBuilding8", 3900, 2400, 1/2 * Math.PI, 1));
                //scenicList.push(new Scenery("bloatGas", 4900, 2400, 0, true, 2));
                //scenicList.push(new Scenery("bloatGas", 4500, 2400, 0, false));
                //scenicList.push(new Scenery("thenganBuilding9", 3900, 2400, 0, 1));
                //scenicList.push(new Scenery("thenganBridges", 3900, 2400, 1/2 * Math.PI, 1, 0));
                //scenicList.push(new Scenery("deadDeer", 3200, 2200, 0.25, true, false));
                //ArtificialIntelligenceAccess.push(new Unit(4100, 2500, "Deer", true, "Iclom"));
                //ArtificialIntelligenceAccess.push(new Unit(3900, 2600, "Badger", false, "Malta"));
                //scenicList.push(new Scenery("jollePlant", 3400, 2400, 0.2, true));
                //ArtificialIntelligenceAccess.push(new Unit(4200, 2500, "GrizzlyBear", "kag", "Kag the scarred devourer"));
                //ArtificialIntelligenceAccess.push(new Unit(4200, 2500, "GrizzlyBear", true, "Kaaguf"));
                //ArtificialIntelligenceAccess.push(new Unit(4200, 2500, "StovolBeetle", false, "escarabajo"));
                //ArtificialIntelligenceAccess.push(new Unit(4200, 2500, "Skindler", false, "bloathead"));
                //ArtificialIntelligenceAccess.push(new Unit(4300, 2450, "Skindler", true, "grendle"));
                //scenicList.push(new Scenery("thenganorCastles", 4500, 2600, 1/2 * Math.PI, 2.6, 3));
                //ArtificialIntelligenceAccess.push(new Unit(4100, 2500, "Sowt", false, "Sosluk"));
                //ArtificialIntelligenceAccess.push(new Unit(4500, 2500, "Wendigo", false, "wendy"));
                //ArtificialIntelligenceAccess.push(new Unit(4500, 2500, "Crow", true, "Seven"));
                //ArtificialIntelligenceAccess.push(new Unit(4520, 2550, "Crow", "shadow", "Eight"));
                //scenicList.push(new Scenery("sewer", 3400, 2400, 0, [0, 0], "world"));
                //scenicList.push(new Scenery("metalLadder", 0, 0, 0, [3400, 2400], "world"));

                //scenicList.push(new Scenery("wendigoCircle", 3900, 2400, 0.38, true));

                //scenicList.push(new Scenery("mrbAssets", 4900, 2100, 1/2 * Math.PI, 5, 2)); //wall sml
                //scenicList.push(new Scenery("mrbAssets", 4900, 2100, 1/2 * Math.PI, 6, 2)); //window sml
                //scenicList.push(new Scenery("mrbAssets", 4900, 2100, 1/2 * Math.PI, 7, 2)); //wall lrg
                //scenicList.push(new Scenery("mrbAssets", 4900, 2100, 1/2 * Math.PI, 8, 2)); //window lrg
                //scenicList.push(new Scenery("mrbAssets", 4900, 2100, 1/2 * Math.PI, 9, 2)); //door

                //scenicList.push(new Scenery("dethMasterHut", 3600, 2500, 0, 0, "deth1"));
                //scenicList.push(new Scenery("dethTotem", 3600, 3400, 0, 0, "deth1"));
                //scenicList.push(new Scenery("dethArmory", 4000, 3000, 0, true, "deth1"));
                //scenicList.push(new Scenery("dethOutfitter", 3700, 3000, 0, 1, "deth1"));
                //scenicList.push(new Scenery("dethElkPile", 4200, 2600, 0, true, "deth1"));
                //ArtificialIntelligenceAccess.push(new Unit(3450, 2010, "Deth", false, "deth1", {age: 3, CON: 18, DEX: 17, APR: 19, PER: 14, ING: 8}));
                //ArtificialIntelligenceAccess.push(new Unit(3500, 2020, "Deth", false, "deth1", {age: 3, CON: 19, DEX: 15, APR: 15, PER: 18, ING: 15}));
                //ArtificialIntelligenceAccess.push(new Unit(3475, 2030, "Deth", false, "deth1", {age: 3, CON: 16, DEX: 19, APR: 20, PER: 12, ING: 4}));
                //ArtificialIntelligenceAccess.push(new Unit(3400, 2000, "Deth", false, "deth1", {age: 4, CON: 14, DEX: 18, APR: 12, PER: 15, ING: 16}));

                //Friches in the plains
                ArtificialIntelligenceAccess.push(new Unit(2921, -1125, "Frich", false, "Fuzzy Wuzzy"));
                ArtificialIntelligenceAccess.push(new Unit(2683, -1204, "Frich", false, "Ruby Soho"));
                ArtificialIntelligenceAccess.push(new Unit(2786, -1398, "Frich", true, "Brufe"));
                ArtificialIntelligenceAccess.push(new Unit(1739, -863, "Frich", true, "Nosey"));
                ArtificialIntelligenceAccess.push(new Unit(1513, -803, "Frich", true, "Friskers"));
                ArtificialIntelligenceAccess.push(new Unit(5000, 226, "Frich", false, "Tiddle"));
                ArtificialIntelligenceAccess.push(new Unit(4976, 316, "Frich", false, "Toodle"));
                ArtificialIntelligenceAccess.push(new Unit(4908, 230, "Frich", false, "Takkle"));
                ArtificialIntelligenceAccess.push(new Unit(4874, 37, "Frich", false, "Tooble"));
                ArtificialIntelligenceAccess.push(new Unit(4791, 82, "Frich", false, "Tuddle"));
                ArtificialIntelligenceAccess.push(new Unit(-1110, 10, "Frich", false, "Tuk"));
                ArtificialIntelligenceAccess.push(new Unit(-1166, 85, "Frich", false, "Tud"));
                ArtificialIntelligenceAccess.push(new Unit(-1152, -22, "Frich", false, "Tux"));
                ArtificialIntelligenceAccess.push(new Unit(-1558, -1017, "Frich", false, "boo"));
                ArtificialIntelligenceAccess.push(new Unit(-1536, -1108, "Frich", true, "baa"));
                ArtificialIntelligenceAccess.push(new Unit(-1687, -1365, "Frich", true, "bei"));
                ArtificialIntelligenceAccess.push(new Unit(-1555, -1412, "Frich", false, "ban"));
                ArtificialIntelligenceAccess.push(new Unit(-1358, 128, "Frich", false, "buk"));
                ArtificialIntelligenceAccess.push(new Unit(4458, 3109, "Frich", false, "uk"));
                ArtificialIntelligenceAccess.push(new Unit(4544, 3162, "Frich", false, "us"));
                ArtificialIntelligenceAccess.push(new Unit(4422, 3236, "Frich", true, "au"));
                ArtificialIntelligenceAccess.push(new Unit(6181, 3940, "Frich", false, "Zuke"));
                ArtificialIntelligenceAccess.push(new Unit(6071, 3847, "Frich", false, "Cuke"));
                ArtificialIntelligenceAccess.push(new Unit(6030, 4102, "Frich", false, "kook"));
                ArtificialIntelligenceAccess.push(new Unit(6142, 4141, "Frich", false, "Zook"));
                ArtificialIntelligenceAccess.push(new Unit(5333, 1329, "Frich", true, "Luke"));
                ArtificialIntelligenceAccess.push(new Unit(5212, 1254, "Frich", false, "shook"));
                ArtificialIntelligenceAccess.push(new Unit(3428, 4445, "Frich", false, "Tuco"));
                ArtificialIntelligenceAccess.push(new Unit(3215, 4393, "Frich", true, "Zuko"));
                ArtificialIntelligenceAccess.push(new Unit(3045, 4011, "Frich", false, "Jango"));
                ArtificialIntelligenceAccess.push(new Unit(3226, 4819, "Frich", false, "Franco"));
                ArtificialIntelligenceAccess.push(new Unit(3397, 4777, "Frich", true, "Bilbo"));
                ArtificialIntelligenceAccess.push(new Unit(3467, 4626, "Frich", true, "Frodo"));
                ArtificialIntelligenceAccess.push(new Unit(-339, 4588, "Frich", false, "Bambi"));
                ArtificialIntelligenceAccess.push(new Unit(-377, 4684, "Frich", true, "Hunter"));
                ArtificialIntelligenceAccess.push(new Unit(-622, 4606, "Frich", false, "MamaDeer"));
                ArtificialIntelligenceAccess.push(new Unit(-692, 4814, "Frich", false, "PapaBuck"));
                ArtificialIntelligenceAccess.push(new Unit(-2132, 5878, "Frich", true, "Rathair"));
                ArtificialIntelligenceAccess.push(new Unit(-730, 3592, "Frich", false, "Richard"));
                ArtificialIntelligenceAccess.push(new Unit(-923, 3404, "Frich", false, "John"));
                ArtificialIntelligenceAccess.push(new Unit(-955, 3520, "Frich", true, "Izzy"));
                ArtificialIntelligenceAccess.push(new Unit(-910, 3645, "Frich", false, "Charles"));
                ArtificialIntelligenceAccess.push(new Unit(-596, 3860, "Frich", false, "Edward"));
                ArtificialIntelligenceAccess.push(new Unit(-30, -833, "Frich", true, "Chak"));
                ArtificialIntelligenceAccess.push(new Unit(-221, -891, "Frich", false, "Eduk"));
                ArtificialIntelligenceAccess.push(new Unit(-121, -1062, "Frich", false, "Toog"));
                ArtificialIntelligenceAccess.push(new Unit(-389, 2569, "Frich", false, "Gud"));
                ArtificialIntelligenceAccess.push(new Unit(-1673, -2423, "Frich", true, "mayonzuko"));
                //Alpha only frich pack guarding the lone farm house
                ArtificialIntelligenceAccess.push(new Unit(-885, -1994, "Frich", true, "Chucky"));
                ArtificialIntelligenceAccess.push(new Unit(-836, -2136, "Frich", true, "Chucky2"));
                ArtificialIntelligenceAccess.push(new Unit(-1048, -1858, "Frich", true, "Chucky3"));
                ArtificialIntelligenceAccess.push(new Unit(-1156, -1766, "Frich", true, "Chucky4"));
                ArtificialIntelligenceAccess.push(new Unit(-1277, -1974, "Frich", true, "Chucky5"));
                ArtificialIntelligenceAccess.push(new Unit(-1080, -2190, "Frich", true, "Chucky6"));

                if (quests.huntingWagerFrichPack == true && quests.huntingWagerKillCount < 3)
                {
                    if (quests.huntingWagerKillCount == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(3665, -624, "Frich", "massive", "Pucker"));
                        ArtificialIntelligenceAccess.push(new Unit(3927, -494, "Frich", "massive", "Tucker"));
                        ArtificialIntelligenceAccess.push(new Unit(3792, -802, "Frich", "massive", "Hunky-Dory"));
                    }
                    else if (quests.huntingWagerKillCount == 1)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(3665, -624, "Frich", "massive", "Pucker"));
                        ArtificialIntelligenceAccess.push(new Unit(3927, -494, "Frich", "massive", "Tucker"));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(3792, -802, "Frich", "massive", "Hunky-Dory"));
                    }
                }

                if (duendeSwarm == true)
                {
                    for (var i =0; i < 12;i++)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(3050, 1650, "Duende", "true", "Krico"));
                    }
                    for (var i =0; i < 12;i++)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(892, 1308, "Duende", "true", "Krica"));
                    }
                }


                //Citizens of Teshir

                //Projectile(TYPE ultra.ranged[1],startX, startY, startAngle, SPEED ultra.ranged[2], RANGE ultra.ranged[3], NEGATION ultra.ranged[4], list, DAMAGE ultra.ranged[5], MAGIC DAMAGE ultra.ranged[6], ABILITY ultra.ranged[7])

                ArtificialIntelligenceAccess.push(new Unit(1661, 2311, "Soldier", false, "Tor Captain", {race: "Freynor", faction: "Freynor", con: 9, speed: 1.15, outfit: ["chainArmour", 10], weapon: ["freydicGreatSword", [25, 14], 0, 35, 2.25], ranged: [false, "arrow", 7, 1800, 1, 6, 0, "stunI", 2.4], patrolStops: 4, patrolLoop: true, route:[[1654, 1507], [1661, 2311], [1864, 2315], [1852, 1499]]}));
                ArtificialIntelligenceAccess.push(new Unit(2254, 311, "Soldier", false, "Tor Soldier", {race: "Freynor", faction: "Freynor", con: 5, speed: 1.50, outfit: ["chainArmour", 7], weapon: ["freydicSword", [9, 7], 0, 16, 1], ranged: [false, "arrow", 5, 1500, 1, 3, 0, "none", 1.50], patrolStops: 3, patrolLoop: true, route:[[3071, 314], [3014, 394], [2218, 346]]}));
                ArtificialIntelligenceAccess.push(new Unit(2741, 1421, "Soldier", false, "Tor Soldier", {race: "Freynor", faction: "Freynor", con: 4, speed: 1.25, outfit: ["chainArmour", 9], weapon: ["freydicSword", [8, 6], 0, 16, 1], ranged: [false, "arrow", 7, 2000, 1, 6, 0, "none", 1.25], patrolStops: 4, patrolLoop: true, route:[[1833, 1424], [1848, 2413], [3046, 2407], [2741, 1421]]}));
                ArtificialIntelligenceAccess.push(new Unit(1430, 2238, "Soldier", false, "Tor Soldier", {race: "Freynor", faction: "Freynor", con: 8, speed: 1.1, outfit: ["chainArmour", 9], weapon: ["freydicSword", [7, 9], 0, 16, 1], ranged: [false, "arrow", 8, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: false, route:[]}));
                ArtificialIntelligenceAccess.push(new Unit(1247, 1210, "Soldier", false, "Tor Soldier", {race: "Freynor", faction: "Freynor", con: 6, speed: 1.40, outfit: ["chainArmour", 8], weapon: ["freydicSword", [8, 9], 0, 16, 1], ranged: [false, "arrow", 6, 1950, 1, 4, 0, "none", 1.35], patrolStops: 6, patrolLoop: true, route:[[901, 1195], [969, 527], [1932, 549], [1941, 814], [1932, 549], [969, 527]]}));

                ArtificialIntelligenceAccess.push(new Unit(2360, 2341, "Person", false, "Freynor Villager", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["frichFurClothing", 0], weapon: ["none", [0.1, 0.4], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 10, patrolLoop: true, route:[[2284, 2430], [1677, 2425], [1712, 1410], [1405, 1459], [1405, 1637], [1237, 1637], [1405, 1637], [1405, 1459], [1699, 1434], [1692, 2500]]}));
                ArtificialIntelligenceAccess.push(new Unit(2249, 754, "Person", false, "Freynor Villager", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["frichFurClothing", 0], weapon: ["none", [0.1, 0.4], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 9, patrolLoop: true, route:[[2144, 751], [2154, 504], [2942, 536], [2884, 2455], [1655, 2430], [1663, 1165], [2152, 1141], [2181, 795], [2249, 754]]}));
                ArtificialIntelligenceAccess.push(new Unit(1807, 645, "Person", false, "Freynor Villager", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["frichFurClothing", 0], weapon: ["none", [0.1, 0.4], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 7, patrolLoop: true, route:[[1793, 314], [761, 337], [749, 1431], [1663, 1439], [2138, 1272], [2165, 697], [1807, 645]]}));

                //barFolk
                ArtificialIntelligenceAccess.push(new Unit(2346, 2005, "Person", false, "Freynor Villager", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["frichFurClothing", 0], weapon: ["none", [0.1, 0.4], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[2348, 1978]]}));
                ArtificialIntelligenceAccess.push(new Unit(2259, 1710, "Person", false, "Freynor Villager", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["frichFurClothing", 0], weapon: ["none", [0.1, 0.4], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[2289, 1710]]}));
                //innGuest (Random)
                var rnnd = Math.random();
                var travelerFood = 0;
                if (rnnd <= 0.4) //freydic traveler
                {
                    if (Math.round(Math.random()))
                    {
                        if (Math.random() > 0.3)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(2241, 2030, "Person", false, "Traveler", {race: "Freynor", faction: "arena2", personality: "violent", outfit: ["northernClothing", 0], weapon: ["none", [0.1, 0.4], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[2242, 2062]]}));
                            travelerFood = 1; //to the right of kedwin
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(2138, 2078, "Person", false, "Traveler", {race: "Freynor", faction: "arena2", personality: "violent", outfit: ["northernClothing", 0], weapon: ["none", [0.1, 0.4], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[2102, 2077]]}));
                            travelerFood = 2; //in upper room
                        }
                    }
                    else
                    {
                        if (Math.random() > 0.3)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(2241, 2030, "Person", false, "Traveler", {race: "Freynor", faction: "arena2", personality: "violent", outfit: ["sealSkinClothing", 0], weapon: ["none", [0.1, 0.4], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[2242, 2062]]}));
                            travelerFood = 1; //to the right of kedwin
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(2138, 2078, "Person", false, "Traveler", {race: "Freynor", faction: "arena2", personality: "violent", outfit: ["sealSkinClothing", 0], weapon: ["none", [0.1, 0.4], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[2102, 2077]]}));
                            travelerFood = 2; //in upper room
                        }
                    }
                }
                else if (rnnd <= 0.5) //kellish traveler
                {
                    if (Math.random() > 0.3)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(2241, 2030, "Person", false, "Traveler", {race: "Kel", faction: "Kel", personality: "violent", outfit: ["naapridLeatherArmour", 3.5], weapon: ["none", [0.28, 0.5], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[2242, 2062]]}));
                        travelerFood = 3; //to the right of kedwin
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(2138, 2078, "Person", false, "Traveler", {race: "Kel", faction: "Kel", personality: "violent", outfit: ["naapridLeatherArmour", 3.5], weapon: ["none", [0.28, 0.5], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[2102, 2077]]}));
                        travelerFood = 4; //in upper room
                    }
                }
                else if (rnnd <= 0.7)
                {
                    if (Math.random() > 0.3)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(2291, 1939, "Person", false, "Traveler", {race: "Thengar", faction: "Thengar", personality: "violent", outfit: ["none", 0], weapon: ["none", [0.3, 0.65], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[2317, 1938]]}));
                        travelerFood = 5; //middle chair in middle of room
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(2051, 1787, "Person", false, "Traveler", {race: "Thengar", faction: "Thengar", personality: "violent", outfit: ["none", 0], weapon: ["none", [0.3, 0.65], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[2050, 1755]]}));
                        travelerFood = 6; //in lower room top chair
                    }
                }
                else if (rnnd <= 0.9)
                {
                    if (Math.random() > 0.25)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(2130, 1707, "Person", false, "Traveler", {race: "Orgell", faction: "Orgell", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.3, 0.35], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[2087, 1706]]}));
                        travelerFood = 7; //lower room left chair
                    }
                }
                else
                {
                    if (Math.random() > 0.3)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(2291, 1939, "Person", false, "Traveler", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.3, 0.4], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[2317, 1938]]}));
                        travelerFood = 8; //middle chair in middle of room
                    }
                    else
                    {
                        travelerFood = 9; //in lower room left chair
                        ArtificialIntelligenceAccess.push(new Unit(2130, 1707, "Person", false, "Traveler", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.3, 0.4], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[2087, 1706]]}));

                    }
                }

                //The Jarl's Guards
                ArtificialIntelligenceAccess.push(new Unit(-95, 645, "Soldier", false, "Tor Huskarl", {race: "Freynor", faction: "Freynor", con: 16, speed: 1.55, outfit: ["chainArmour", 12], weapon: ["freydicSword", [11, 9], 0, 17, 1], ranged: [false, "arrow", 7, 2000, 1, 6, 0, "none", 1.25], rot: -1/2*Math.PI, patrolStops: 2, patrolLoop: true, route:[[-95, 645], [-95, 645]]}));
                ArtificialIntelligenceAccess.push(new Unit(-620, 645, "Soldier", false, "Tor Huskarl", {race: "Freynor", faction: "Freynor", con: 16, speed: 1.55, outfit: ["chainArmour", 12], weapon: ["freydicSword", [11, 9], 0, 17, 1], ranged: [false, "arrow", 7, 2000, 1, 6, 0, "none", 1.25], rot: -1/2*Math.PI, patrolStops: 2, patrolLoop: true, route:[[-620, 645], [-620, 645]]}));

                if (uniqueChars.drohforLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Drohfor")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(1875, 243, "Person", false, "Drohfor", {race: "Freynor", faction: "Freynor", personality: "violent", outfit: ["walrusLeatherArmour", 5], weapon: ["longbow", [0.1, 0.4], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [true, "arrow", 8, 2000, 1, 6, 0, "none", 0.95], patrolStops: 7, patrolLoop: true, route:[[1875, 243], [1600, -181], [987, -45], [384, -299], [1707, -151], [1420, -366], [1581, 21]]}));
                    }
                }
                if (quests.teshirNorthRoadQuest != "complete")
                {
                    if (uniqueChars.togginLDS == true)
                    {
                        var hits = 0;
                        for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                        {
                            if (ArtificialIntelligenceAccess[i].ID == "Toggin")
                            {
                                hits += 1;
                            }
                        }
                        if (hits == 0)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(1830, 2767, "Person", false, "Toggin", {race: "Freynor", faction: "Freynor", personality: "violent", outfit: ["blackBearFurClothing", 0], weapon: ["timberAxe", [10, 4], 1.5, 12, 1.55], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 3, patrolLoop: true, route:[[1771, 2698], [1675, 2861], [1830, 2767]]}));
                            for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                            {
                                if (ArtificialIntelligenceAccess[i].ID == "Toggin")
                                {
                                    ArtificialIntelligenceAccess[i].healthMAX = 16;
                                    ArtificialIntelligenceAccess[i].health = 16;
                                }
                            }
                        }
                    }
                }
                if (uniqueChars.kedwinLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Kedwin")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(2287, 2031, "Person", false, "Kedwin", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["frichFurClothing", 0], weapon: ["none", [0.5, 1], 0, 0, 1.1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[2287, 2065]]}));
                        for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                        {
                            if (ArtificialIntelligenceAccess[i].ID == "Kedwin")
                            {
                                ArtificialIntelligenceAccess[i].healthMAX = 19;
                                ArtificialIntelligenceAccess[i].health = 19;
                            }
                        }
                    }
                }
                if (uniqueChars.aarniLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Aarni the Stablemaster")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(644, 1513, "Person", false, "Aarni the Stablemaster", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["varnFurClothing", 0], weapon: ["none", [0.5, 0.6], 0, 0, 1.1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[644, 1525]]}));
                        for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                        {
                            if (ArtificialIntelligenceAccess[i].ID == "Aarni")
                            {
                                ArtificialIntelligenceAccess[i].healthMAX = 9;
                                ArtificialIntelligenceAccess[i].health = 9;
                            }
                        }
                    }
                }
                if (uniqueChars.garldLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Garld the Crazy Beggar" || ArtificialIntelligenceAccess[i].ID == "Garld, Sage of Gemith")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(2523, 1489, "Person", false, "Garld the Crazy Beggar", {race: "Freynor", faction: "Freynor", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.5, 1], 0, 0, 1.1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: false, route:[[2072, 1535], [1939, 1509], [2033, 1499]]}));
                        for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                        {
                            if (ArtificialIntelligenceAccess[i].ID == "Garld the Crazy Beggar" || ArtificialIntelligenceAccess[i].ID == "Garld, Sage of Gemith")
                            {
                                ArtificialIntelligenceAccess[i].healthMAX = 12.1;
                                ArtificialIntelligenceAccess[i].health = 12.1;
                            }
                        }
                    }
                }
                if (uniqueChars.odeeLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Odee the Banker")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(1155, 1632, "Person", false, "Odee the Banker", {race: "Orgell", faction: "Freynor", personality: "calculated", outfit: ["winterWolfClothing", 0], weapon: ["none", [0.1, 0.4], 0, 0, 0.85], ranged: [false, "arrow", 8, 2000, 1, 6, 0, "none", 0.95], patrolStops: 1, patrolLoop: false, route:[[1170, 1632]], banker: true}));
                    }
                }
                if (uniqueChars.stendorLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Tor Commissioner Stendor")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(1949, 2282, "Soldier", false, "Tor Commissioner Stendor", {race: "Freynor", faction: "Freynor", con: 12, speed: 1.32, outfit: ["chainArmour", 10], weapon: ["freydicGreatSword", [25, 14], 0, 35, 2.25], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], patrolStops: 0, patrolLoop: true, route:[[1654, 1507], [1661, 2311], [1864, 2315], [1852, 1499]]}));
                    }
                }
                if (uniqueChars.OrjovTorLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Jarl Orjov Tor")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-344, -48, "Soldier", false, "Jarl Orjov Tor", {race: "Freynor", faction: "Freynor", con: 40, speed: 0.6, outfit: ["northernPlateArmour", 22], weapon: ["freydicGreatSword", [37, 20], 0, 37, 5], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, patrolStops: 1, patrolLoop: false, route:[[-341, -24]]}));
                    }
                }

                if (uniqueChars.pynskeLDS == true && quests.atalinTeshirAnnexed == false)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Ser Olis Pynske")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-514, 277, "Soldier", false, "Ser Olis Pynske", {race: "Freynor", faction: "Freynor", con: 20, speed: 0.55, outfit: ["northernPlateArmour", 16], weapon: ["freydicGreatSword", [25, 14], 0, 37, 5.5], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, patrolStops: 2, patrolLoop: true, route:[[-514, 277], [-514, 277]]}));
                    }
                }

                if (quests.atalinSisterJarl == true)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-514, 277, "Soldier", false, "Nirwaden Knight", {race: "Nirwaden", faction: "Nirwaden", con: 15, speed: 1.3, outfit: ["nirwadenPlateArmour", 19], weapon: ["nirineseSabre", [9, 8], 0, 0, 1.25], ranged: [false, "steelBolt", 13, 2200, 16, 15 /3, 0, "none", 3.55], patrolStops: 2, patrolLoop: true, route:[[-514, 277], [-514, 277]]}));
                }

                if (uniqueChars.lailionaLDS && quests.atalinSisterJarl == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Lailiona")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-344, -48, "Person", false, "Lailiona", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenNobleDress", 0], weapon: ["none", [0.04, 0.05], 0, 0, 2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-341, -24]], kid: true}));
                    }
                }

                if (uniqueChars.emyliaLDS && quests.atalinSisterJarl == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "High Dame Emylia Altezor")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-380, -54, "Person", false, "High Dame Emylia Altezor", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenLadyPointyCap", 0], weapon: ["none", [0.15, 0.15], 0, 0, 2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-375, -22]]}));
                    }
                }


                if (uniqueChars.laandegLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Laandeg the Alchemist")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(1193, 777, "Person", false, "Laandeg the Alchemist", {race: "Freynor", faction: "Freynor", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.1, 0.4], 0, 0, 1.1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[1193, 777]], merchant: true, merchandise: [[new Item("coins", false, false), 29], [new Item("culprisBandage", false, false), 2], [new Item("healingSalve", false, false), 4], [new Item("trollsBlood", false, false), 1], [new Item("stomwikCream", false, false), 2], [new Item("rawTrollsBlood", false, false), 1], [new Item("cleansingPotion", false, false), 1], [new Item("energyPotionI", false, false), 3], [new Item("speedPotionI", false, false), 2], [new Item("energilPotionI", false, false), 2], [new Item("energilPotionII", false, false), 1], [new Item("mightPotionI", false, false), 3], [new Item("pouchOfGlowDust", false, false), 2], [new Item("pouchOfIrilDust", false, false), 2], [new Item("ogardPerfume", false, false), 8], [new Item("potionGlass", false, false), 18], [new Item("glassJar", false, false), 14], [new Item("rawWolfLiver", false, false), 4], [new Item("salt", false, false), 3]]}));
                    }
                }
                if (uniqueChars.hilmundChildLDS == true && quests.hilmundChild)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "[ " + quests.hilmundChildName + " ]")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(2346, 1788, "Person", false, "[ " + quests.hilmundChildName + " ]", {race: player.raceName, faction: "player", personality: "violent", outfit: ["frichFurClothing", 0], weapon: ["none", [0.2, 0.2], 0, 0, 1.2], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[2164, 1656]], kid: true}));
                    }
                }
                if (uniqueChars.hilmundLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Hilmund the Innkeeper")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(2346, 1756, "Person", false, "Hilmund the Innkeeper", {race: "Freynor", faction: "Freynor", personality: "violent", outfit: ["none", 0], weapon: ["none", [0.3, 0.7], 0, 0, 0.8], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[2164, 1656]], merchant: true, merchandise: [[new Item("coins", false, false), 86 + quests.hilmundNewWealth], [new Item("harstAle", false, false), 64], [new Item("mead", false, false), 8], [new Item("santhAle", false, false), 5], [new Item("pluttWine", false, false), 19], [new Item("glassBottleOfPluttWine", false, false), 6], [new Item("pluttCiderPintGlass", false, false), 7], [new Item("waterPintGlass", false, false), 9], [new Item("bucketOfWater", false, false), 1], [new Item("walrusLeatherWaterskinFull", false, false), 11], [new Item("walrusMeat", false, false), 8], [new Item("bearMeat", false, false), 3], [new Item("winterWolfMeat", false, false), 5], [new Item("frichMeat", false, false), 17], [new Item("wolfLiver", false, false), 6], [new Item("harstBread", false, false), 1], [new Item("suuliMelonSlice", false, false), 14]]}));
                    }
                }
                if (uniqueChars.bobithLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Svehn the Smith")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        if (quests.lostDeliveryCompletionStyle != "keptShipment" && quests.lostDeliveryQuest == "complete")
                        {
                            ArtificialIntelligenceAccess.push(new Unit(1690, 1021, "Person", false, "Svehn the Smith", {race: "Freynor", faction: "Freynor", personality: "violent", outfit: ["none", 0], weapon: ["none", [0.1, 0.4], 0, 0, 0.65], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[2049, 1021], [1943, 1127], [1690, 1021]], merchant: true, merchandise: [[new Item("coins", false, false), 124 + quests.bobithNewWealth], [new Item("thriceForgedSteel", false, false), 1], [new Item("steel", false, false), 8], [new Item("iron", false, false), 6], [new Item("mace", false, false), 3], [new Item("hammer", false, false), 2], [new Item("freydicSpear", false, false), 5], [new Item("freydicSword", false, false), 2], [new Item("freydicWarAxe", false, false), 1], [new Item("freydicGreatSword", false, false), 1], [new Item("chainArmour", false, false), 2], [new Item("longbow", false, false), 2], [new Item("arrow", false, false), 92], [new Item("steelArrow", false, false), 61], [new Item("timberAxe", false, false), 3], [new Item("nirineseSpear", false, false), 1], [new Item("nirineseSabre", false, false), 1], [new Item("pickaxe", false, false), 1], [new Item("beartrap", false, false), 1], [new Item("clawtrap", false, false), 1], [new Item("jacks", false, false), 14]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(1690, 1021, "Person", false, "Svehn the Smith", {race: "Freynor", faction: "Freynor", personality: "violent", outfit: ["none", 0], weapon: ["none", [0.1, 0.4], 0, 0, 0.65], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[2049, 1021], [1943, 1127], [1690, 1021]], merchant: true, merchandise: [[new Item("coins", false, false), 103 + quests.bobithNewWealth], [new Item("steel", false, false), 8], [new Item("iron", false, false), 6], [new Item("mace", false, false), 3], [new Item("hammer", false, false), 2], [new Item("freydicSpear", false, false), 5], [new Item("freydicSword", false, false), 2], [new Item("freydicWarAxe", false, false), 1], [new Item("freydicGreatSword", false, false), 1], [new Item("chainArmour", false, false), 2], [new Item("longbow", false, false), 2], [new Item("arrow", false, false), 92], [new Item("steelArrow", false, false), 61], [new Item("timberAxe", false, false), 3], [new Item("pickaxe", false, false), 1], [new Item("beartrap", false, false), 1], [new Item("clawtrap", false, false), 1], [new Item("jacks", false, false), 14]]}));
                        }
                    }
                }
                if (uniqueChars.medliaLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Medlia the Merchant")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(1406, 1941, "Person", false, "Medlia the Merchant", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["winterWolfClothing", 0], weapon: ["none", [0.1, 0.4], 0, 0, 1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[1425, 1941]], merchant: true, merchandise: [[new Item("coins", false, false), 179 + quests.medliaNewWealth], [new Item("wood", false, false), 48], [new Item("tent", false, false), 2], [new Item("fireStarter", false, false), 3], [new Item("jarOfOil", false, false), 1], [new Item("rawWalrusFlesh", false, false), 8], [new Item("walrusHide", false, false), 1], [new Item("walrusTusks", false, false), 1], [new Item("oilLampEmpty", false, false), 2], [new Item("oilLanternEmpty", false, false), 5], [new Item("candle", false, false), 12], [new Item("beesWax", false, false), 9], [new Item("ogardPerfume", false, false), 2], [new Item("frichPelt", false, false), 3], [new Item("rawFrichFlesh", false, false), 22], [new Item("winterWolfPelt", false, false), 3], [new Item("rawWinterWolfFlesh", false, false), 2], [new Item("rawWolfLiver", false, false), 1], [new Item("walrusLeatherWaterskin", false, false), 2], [new Item("harstGrain", false, false), 29], [new Item("potato", false, false), 8], [new Item("carrot", false, false), 13], [new Item("suuliMelon", false, false), 5], [new Item("driedTechiLeaf", false, false), 14], [new Item("ogard", false, false), 1], [new Item("freydicFolkTales", false, false), 1]]}));
                    }
                }
                if (uniqueChars.teberLDS == true && quests.bountyTeberCompletionStyle == "royal pardon")
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Teber the Artisan")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        if (quests.bankruptNeculai)
                        {
                            var xx = 2644;
                            var yy = 2006;
                        }
                        else
                        {
                            var xx = 1999;
                            var yy = 1604;
                        }

                        ArtificialIntelligenceAccess.push(new Unit(xx, yy, "Person", false, "Teber the Artisan", {race: "Freynor", faction: "Kel", personality: "scared", outfit: ["winterWolfClothing", 0], weapon: ["none", [0.4, 0.6], 0, 0, 1.15], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[2049, 1021], [1943, 1127], [1690, 1021]], merchant: true, merchandise: [[new Item("coins", false, false), 75], [new Item("naapridFiber", false, false), 7], [new Item("pintGlass", false, false), 19], [new Item("potionGlass", false, false), 18], [new Item("glassJar", false, false), 10]]}));
                        for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                        {
                            if (ArtificialIntelligenceAccess[i].ID == "Teber the Artisan")
                            {
                                ArtificialIntelligenceAccess[i].healthMAX = 29;
                                ArtificialIntelligenceAccess[i].health = 29;
                                ArtificialIntelligenceAccess[i].speed += 0.05;
                                ArtificialIntelligenceAccess[i].grudge = 340;
                            }
                        }
                    }
                }
                if (uniqueChars.maggyLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Maggy the Tailor")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(2672, 1594, "Person", false, "Maggy the Tailor", {race: "Freynor", faction: "Freynor", personality: "scared", outfit: ["ardilFurSkirt", 0], weapon: ["none", [0.1, 0.4], 0, 0, 1.2], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[2836, 2058], [2858, 1524]], merchant: true, merchandise: [[new Item("coins", false, false), 180], [new Item("frichFurClothing", false, false), 12], [new Item("frichFurMittens", false, false), 5], [new Item("varnFurClothing", false, false), 5], [new Item("varnFurCloak", false, false), 2], [new Item("varnFurDress", false, false), 3], [new Item("ardilFurClothing", false, false), 1], [new Item("ardilFurSkirt", false, false), 2], [new Item("ardilFurGloves", false, false), 4], [new Item("winterWolfClothing", false, false), 1], [new Item("winterWolfOutfit", false, false), 1], [new Item("winterWolfDress", false, false), 1], [new Item("naapridLeatherArmour", false, false), 2], [new Item("walrusLeatherArmour", false, false), 3], [new Item("blackBearFurClothing", false, false), 1], [new Item("emptyBagHarst", false, false), 3]]}));
                    }
                }

                //a vardanian merchant who can be kicked out of town in a quest.
                if (uniqueChars.neculaiLDS == true && quests.medliaCompetitionControlQuest != "complete")
                {
                    if (player.raceName != "Freynor" || player.title != "Royalty" || player.raceName == "Freynor" && player.title == "Royalty" && player.vardanFaction >= 0) // if you are royalty of freynor your actions determine the nations friends and enemies.
                    {
                        var hits = 0;
                        for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                        {
                            if (ArtificialIntelligenceAccess[i].ID == "Neculai the Merchant" || ArtificialIntelligenceAccess[i].ID == "Neculai the Beggar")
                            {
                                hits += 1;
                            }
                        }
                        if (hits == 0)
                        {
                            if (quests.bankruptNeculai != true)
                            {
                                if (quests.theBalgurMercenariesCompletionStyle == "killedMercs" && quests.theBalgurMercenariesQuest == "complete" || quests.theBalgurMercenariesCompletionStyle == "royalProtection" && quests.theBalgurMercenariesQuest == "complete"|| quests.theBalgurMercenariesCompletionStyle == "threaten" && quests.theBalgurMercenariesQuest == "complete" || quests.theBalgurMercenariesCompletionStyle == "paidMercs" && quests.theBalgurMercenariesQuest == "complete") //if you beat neculai's quest in a way positive for neculai he likes you enough to sell his swamp walker armour.
                                {
                                    ArtificialIntelligenceAccess.push(new Unit(2498, 1144, "Person", false, "Neculai the Merchant", {race: "Vardan", faction: "Vardan", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.2, 0.5], 0, 0, 0.55], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[], merchant: true, merchandise: [[new Item("coins", false, false), 37], [new Item("frichFurClothing", false, false), 3], [new Item("mace", false, false), 1], [new Item("vardanianAxe", false, false), 3], [new Item("vardanianAxeDual", false, false), 2], [new Item("vardanianCleaver", false, false), 1], [new Item("vardanianClub", false, false), 1], [new Item("smashStick", false, false), 1], [new Item("rawWolfLiver", false, false), 4], [new Item("blackChainArmour", false, false), 2], [new Item("trollFlesh", false, false), 2], [new Item("wood", false, false), 14], [new Item("freydicSword", false, false), 1], [new Item("frichPelt", false, false), 6], [new Item("rawWalrusFlesh", false, false), 5], [new Item("walrusMeat", false, false), 1], [new Item("swampWalkerArmour", false, false), 1]]}));
                                }
                                else
                                {
                                    ArtificialIntelligenceAccess.push(new Unit(2498, 1144, "Person", false, "Neculai the Merchant", {race: "Vardan", faction: "Vardan", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.2, 0.5], 0, 0, 0.55], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[], merchant: true, merchandise: [[new Item("coins", false, false), 37], [new Item("frichFurClothing", false, false), 3], [new Item("mace", false, false), 1], [new Item("vardanianAxe", false, false), 3], [new Item("vardanianAxeDual", false, false), 2], [new Item("vardanianCleaver", false, false), 1], [new Item("smashStick", false, false), 1], [new Item("rawWolfLiver", false, false), 4], [new Item("blackChainArmour", false, false), 2], [new Item("trollFlesh", false, false), 2], [new Item("wood", false, false), 14], [new Item("freydicSword", false, false), 1], [new Item("frichPelt", false, false), 6], [new Item("rawWalrusFlesh", false, false), 5], [new Item("walrusMeat", false, false), 1]]}));
                                }
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(2756, 1815, "Person", false, "Neculai the Beggar", {race: "Vardan", faction: "Vardan", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.2, 0.5], 0, 0, 0.55], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[]}));
                            }

                        }
                    }
                }

                if (quests.spouseTrackerQuest == "complete" && quests.spouseTrackerCompletionStyle == "bienEscort" || quests.spouseTrackerQuest == "complete" && quests.spouseTrackerCompletionStyle == "malEscort")
                {
                    if (uniqueChars.bellaLDS == true)
                    {
                        var hits = 0;
                        for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                        {
                            if (ArtificialIntelligenceAccess[i].ID == "Madam Bella")
                            {
                                hits += 1;
                            }
                        }
                        if (hits == 0)
                        {
                            if (player.gamemode == "protagonist")
                            {
                                ArtificialIntelligenceAccess.push(new Unit(2687.167015109158, 2240.688924879708, "Person", false, "Bouncy Ball Saleswoman", {race: "Thengar", faction: "Freynor", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.1, 0.1], 0, 0, 1.5], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[2686.756821173579, 2251.491555658622]]}));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(2687.167015109158, 2240.688924879708, "Person", false, "Madam Bella", {race: "Thengar", faction: "Freynor", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.1, 0.1], 0, 0, 1.5], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[2686.756821173579, 2251.491555658622]]}));
                            }
                        }
                    }
                    if (uniqueChars.mesekLDS == true)
                    {
                        var hits = 0;
                        for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                        {
                            if (ArtificialIntelligenceAccess[i].ID == "Mesek the Runaway")
                            {
                                hits += 1;
                            }
                        }
                        if (hits == 0)
                        {
                            if (player.gamemode == "protagonist")
                            {
                                ArtificialIntelligenceAccess.push(new Unit(2702.149154924032, 2308.4115238442287, "Person", false, "Bouncy Ball Salesman", {race: "Kel", faction: "Freynor", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 2, 1.12], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[2695.3375492293803, 2301.4451089292443]]}));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(2702.149154924032, 2308.4115238442287, "Person", false, "Mesek the Runaway", {race: "Kel", faction: "Freynor", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 2, 1.12], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[2695.3375492293803, 2301.4451089292443]]}));
                            }
                        }
                    }
                }

                //A stray herd of Naaprids in the northern grassland
                ArtificialIntelligenceAccess.push(new Unit(4942, -1180, "Naaprid", true, "Naanav"));
                ArtificialIntelligenceAccess.push(new Unit(4860, -1377, "Naaprid", true, "Naarimov"));
                ArtificialIntelligenceAccess.push(new Unit(5265, -1535, "Naaprid", true, "Naastelav"));
                ArtificialIntelligenceAccess.push(new Unit(5513, -1322, "Naaprid", false, "Naanava"));
                ArtificialIntelligenceAccess.push(new Unit(5468, -1244, "Naaprid", "baby", "Naarimova"));
                ArtificialIntelligenceAccess.push(new Unit(5634, -1223, "Naaprid", false, "Naastelava"));
                ArtificialIntelligenceAccess.push(new Unit(5737, -1388, "Naaprid", false, "kaastelava"));
                ArtificialIntelligenceAccess.push(new Unit(5896, -1482, "Naaprid", false, "Laastelava"));
                ArtificialIntelligenceAccess.push(new Unit(5986, -1355, "Naaprid", "baby", "Aaptelava"));
                ArtificialIntelligenceAccess.push(new Unit(6111, -943, "Naaprid", true, "Paaktolav"));

                //Domestic Naaprid
                if (uniqueChars.aarniLDS)
                {
                    ArtificialIntelligenceAccess.push(new Unit(574, 1804, "Naaprid", true, "Stovilav"));
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Stovilav")
                        {
                            ArtificialIntelligenceAccess[i].baseTeam = "Freynor";
                        }
                    }
                }


                //Grassland Ardils
                ArtificialIntelligenceAccess.push(new Unit(-24, -235, "Ardil", true, "Fuzzybut"));
                ArtificialIntelligenceAccess.push(new Unit(1796, -2657, "Ardil", true, "Fannyfur"));
                ArtificialIntelligenceAccess.push(new Unit(-3756, -1947, "Ardil", true, "Fannybut"));
                ArtificialIntelligenceAccess.push(new Unit(-3953, -2040, "Ardil", false, "Fannyfran"));
                ArtificialIntelligenceAccess.push(new Unit(-3432, 884, "Ardil", false, "Frannyfran"));
                ArtificialIntelligenceAccess.push(new Unit(-103, 1881, "Ardil", true, "Fannylanlan"));
                ArtificialIntelligenceAccess.push(new Unit(301, 4049, "Ardil", false, "Frannyfranfran"));
                ArtificialIntelligenceAccess.push(new Unit(4575, 4970, "Ardil", false, "fuzybut"));
                ArtificialIntelligenceAccess.push(new Unit(5756, 5372, "Ardil", true, "furrybut"));
                ArtificialIntelligenceAccess.push(new Unit(6183, 1172, "Ardil", false, "Furryfran"));
                ArtificialIntelligenceAccess.push(new Unit(4742, 2099, "Ardil", true, "Fuzzyfran"));

                //Wild Varns ventured into grassland to find new food source (because of clearcut)
                ArtificialIntelligenceAccess.push(new Unit(-42, -1983, "Varn", true, "Scrag"));
                ArtificialIntelligenceAccess.push(new Unit(-420, -1871, "Varn", false, "Kretta"));
                ArtificialIntelligenceAccess.push(new Unit(-2190, -1403, "Varn", false, "Arlea"));
                ArtificialIntelligenceAccess.push(new Unit(-2033, -1369, "Varn", true, "Valentina"));
                ArtificialIntelligenceAccess.push(new Unit(-1257, -6310, "Varn", false, "Racho"));
                ArtificialIntelligenceAccess.push(new Unit(-1910, 4940, "Varn", false, "Ferra"));
                ArtificialIntelligenceAccess.push(new Unit(-1549, -5102, "Varn", false, "Juanito"));
                ArtificialIntelligenceAccess.push(new Unit(-905, 2130, "Varn", false, "Domingo"));
                ArtificialIntelligenceAccess.push(new Unit(3918, -2387, "Varn", false, "Wyhay"));
                ArtificialIntelligenceAccess.push(new Unit(-2340, -2853, "Varn", true, "Wandigo"));
                ArtificialIntelligenceAccess.push(new Unit(-2357, -3126, "Varn", false, "Wandago"));
                ArtificialIntelligenceAccess.push(new Unit(-2012, -3280, "Varn", true, "wandoo"));
                ArtificialIntelligenceAccess.push(new Unit(-2406, 757, "Varn", false, "Wiggin"));
                ArtificialIntelligenceAccess.push(new Unit(-2206, 2201, "Varn", true, "Ender"));
                ArtificialIntelligenceAccess.push(new Unit(-1712, 2328, "Varn", false, "Starter"));
                ArtificialIntelligenceAccess.push(new Unit(-2187, 3320, "Varn", false, "Easer"));

                if (uniqueChars.hetmerLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Hetmer The Bandit Chief")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(35 - 750, 5540, "Soldier", false, "Hetmer The Bandit Chief", {race: "Freynor", faction: "hostile", con: 7, speed: 1.2, outfit: ["hetmerArmour", 5.5], weapon: ["freydicSword", [7, 7], 0, 16, 1], ranged: [false, "arrow", 9, 2100, 1, 7, 0, "none", 1.2], patrolStops: 1, patrolLoop: false, route:[[221 -750, 5517]]}));
                    }
                }

                //Bandits and bandit chief (Bandidos Nortenos)
                if (quests.teshirNorthRoadBandits == true)
                {
                    //ArtificialIntelligenceAccess.push(new Unit(1663, 5750, "Soldier", false, "Northern Bandit", {race: "Freynor", faction: "hostile", con: 5, speed: 1.10, outfit: ["walrusLeatherArmour", 4], weapon: ["crossbow", [0.1, 0.4], 0, 16, 1], ranged: [true, "steelBolt", 10, 2000, 12, 23 /3, 0, "none", 2.2], patrolStops: 1, patrolLoop: false, route:[[586, 6301]]}));
                    ArtificialIntelligenceAccess.push(new Unit(1563, 5864, "Soldier", false, "Northern Bandit", {race: "Freynor", faction: "hostile", con: 2, speed: 1.05, outfit: ["walrusLeatherArmour", 4], weapon: ["freydicSword", [4, 4], 0, 16, 1], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 4, patrolLoop: true, route:[[506, 6152], [1042, 6325], [1551, 6202], [1563, 5864]]}));
                    ArtificialIntelligenceAccess.push(new Unit(1941, 5902, "Soldier", false, "Northern Bandit", {race: "Freynor", faction: "hostile", con: 4, speed: 1.15, outfit: ["none", 0], weapon: ["longbow", [0.1, 0.4], 0, 0, 0.85], ranged: [true, "arrow", 6, 1750, 1, 4, 0, "none", 1.4], patrolStops: 3, patrolLoop: true, route:[[1941, 5902], [2384, 5809], [1926, 6003]]}));
                    ArtificialIntelligenceAccess.push(new Unit(435 - 750, 5563, "Soldier", false, "Northern Bandit", {race: "Freynor", faction: "hostile", con: 3, speed: 1.05, outfit: ["walrusLeatherArmour", 4], weapon: ["longbow", [0.1, 0.4], 0, 16, 1], ranged: [true, "arrow", 7, 1900, 1, 4, 0, "none", 1.5], patrolStops: 4, patrolLoop: true, route:[[435 - 750, 5563], [400 - 750, 5668], [636 - 750, 5860], [827 - 750, 5357]]}));
                    ArtificialIntelligenceAccess.push(new Unit(348 - 750, 5428, "Soldier", false, "Northern Bandit", {race: "Freynor", faction: "hostile", con: 5, speed: 0.90, outfit: ["none", 1], weapon: ["freydicSword", [6, 4], 0, 16, 1], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 3, patrolLoop: true, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                }

                //a well known thengan mercenary crew's captain.
                if (uniqueChars.kronheimeLDS == true && quests.theBalgurMercenariesQuest == true && quests.theBalgurMercenariesCompletionStyle != "threaten" && quests.theBalgurMercenariesCompletionStyle != "paidMercs"&& quests.theBalgurMercenariesCompletionStyle != "royalProtection")
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Mercenary Captain Kronheime")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(4062, 2531, "Soldier", false, "Mercenary Captain Kronheime", {race: "Thengar", faction: "TheBalgurMercenaries", con: 20, speed: 1.3, outfit: ["balgurCaptainArmour", 7], weapon: ["flail", [25, 7], 11, 63, 3.1], ranged: [false, "arrow", 7, 1800, 1, 6, 0, "none", 2.4], patrolStops: 0, patrolLoop: false, route:[[1654, 1507], [1661, 2311], [1864, 2315], [1852, 1499]]}));
                    }
                }
                //balgur mercenaries
                if (quests.theBalgurMercenariesQuest == true && quests.theBalgurMercenariesCompletionStyle != "threaten" && quests.theBalgurMercenariesCompletionStyle != "paidMercs" && quests.theBalgurMercenariesCompletionStyle != "royalProtection")
                {
                    ArtificialIntelligenceAccess.push(new Unit(4143, 2400, "Soldier", false, "Balgur Mercenary", {race: "Thengar", faction: "TheBalgurMercenaries", con: 10, speed: 1.2, outfit: ["balgurMercArmour", 5], weapon: ["longSpikedMorningStar", [13, 5], 14, 20, 2.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(4138, 2642, "Soldier", false, "Balgur Mercenary", {race: "Thengar", faction: "TheBalgurMercenaries", con: 8, speed: 1.25, outfit: ["balgurMercArmour", 3.5], weapon: ["longSpikedMorningStar", [11, 4], 14, 20, 2.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(4321, 2575, "Soldier", false, "Balgur Mercenary", {race: "Thengar", faction: "TheBalgurMercenaries", con: 10, speed: 1.3, outfit: ["balgurMercArmour", 3.5], weapon: ["longSpikedMorningStar", [12, 4], 14, 20, 2.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(4322, 2486, "Soldier", false, "Balgur Mercenary", {race: "Thengar", faction: "TheBalgurMercenaries", con: 12, speed: 1.225, outfit: ["balgurMercArmour", 4.5], weapon: ["longSpikedMorningStar", [14, 6], 14, 20, 2.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(3912, 2723, "Soldier", false, "Balgur Mercenary", {race: "Thengar", faction: "TheBalgurMercenaries", con: 7, speed: 1.175, outfit: ["balgurMercArmour", 3.5], weapon: ["longSpikedMorningStar", [10, 3], 14, 20, 2.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(3924, 2341, "Soldier", false, "Balgur Mercenary", {race: "Thengar", faction: "TheBalgurMercenaries", con: 13, speed: 1.3, outfit: ["balgurMercArmour", 5], weapon: ["longSpikedMorningStar", [14, 7], 14, 20, 2.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(3796, 2347, "Soldier", false, "Balgur Mercenary", {race: "Thengar", faction: "TheBalgurMercenaries", con: 11, speed: 1.25, outfit: ["balgurMercArmour", 4], weapon: ["longSpikedMorningStar", [13, 6], 14, 20, 2.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 2, patrolLoop: true, route:[[3409, 2704], [3796, 2347]]}));
                    ArtificialIntelligenceAccess.push(new Unit(3785, 2716, "Soldier", false, "Balgur Mercenary", {race: "Thengar", faction: "TheBalgurMercenaries", con: 9, speed: 1.25, outfit: ["balgurMercArmour", 4], weapon: ["longSpikedMorningStar", [12, 5], 14, 20, 2.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 2, patrolLoop: true, route:[[3414, 2337], [3785, 2716]]}));
                }

                //Scenery
                //buildings in the city
                scenicList.push(new Scenery("freydicBuilding1", 2142, 1900, 0, true));
                scenicList.push(new Scenery("freydicBuilding2", 2111, 2268, 0, true));
                scenicList.push(new Scenery("freydicBuilding2", 2430, 2268, 0, true));
                scenicList.push(new Scenery("freydicBuilding2", 2698, 2268, 0, true));
                scenicList.push(new Scenery("freydicBuilding2", 2319, 876, 0, true));
                scenicList.push(new Scenery("freydicBuilding2", 2319, 683, 0, true));
                scenicList.push(new Scenery("freydicBuilding2", 2319, 1064, 0, true));
                scenicList.push(new Scenery("freydicBuilding2", 1149, 1043, 0, true));
                scenicList.push(new Scenery("freydicBuilding2", 1149, 2256, 0, true));
                scenicList.push(new Scenery("freydicBuilding2", 1149, 2078, 0, true));
                scenicList.push(new Scenery("freydicBuilding2", 1149, 1900, 0, true));
                scenicList.push(new Scenery("freydicBuilding3", 2654, 2000, 0, true));
                scenicList.push(new Scenery("freydicBuilding3", 2654, 1644, 0, true));
                scenicList.push(new Scenery("freydicBuilding3", 1430, 1051, 0, true));
                scenicList.push(new Scenery("freydicBuilding3", 1450, 2240, 0, true));
                scenicList.push(new Scenery("freydicBuilding3", 1450, 1943, 0, true));
                scenicList.push(new Scenery("freydicBuilding4", 1260, 734, 0, true));
                scenicList.push(new Scenery("freydicBuilding4", 1306, 1643, 0, true));
                scenicList.push(new Scenery("freydicBuilding5", 1735, 715, 0, true));
                scenicList.push(new Scenery("freydicBuilding5", 2678, 1064, 0, true));
                scenicList.push(new Scenery("freydicBuilding5", 2678, 876, 0, true));
                scenicList.push(new Scenery("freydicBuilding5", 2678, 683, 0, true));
                scenicList.push(new Scenery("freydicBuilding3", 576, 1590, 0, true));

                //interior design
                //bank
                scenicList.push(new Scenery("woodenBench", 1205, 1635, -1/2 * Math.PI, 0));
                scenicList.push(new Scenery("stumpStool", 1168, 1632, -1/2 * Math.PI, 0));
                scenicList.push(new Scenery("stumpStoolSml", 1235, 1635, -1/2 * Math.PI, 0));
                scenicList.push(new Scenery("crate", 1142, 1700, -3/4 * Math.PI, 1, [1.5]));
                scenicList.push(new Scenery("crate", 1147, 1572, 6.5/4 * Math.PI, 1, [1.15]));
                scenicList.push(new Scenery("crate", 1376, 1699, 1.4/4 * Math.PI, 1, [1.38]));
                scenicList.push(new Scenery("crate", 1498, 1719, 0/4 * Math.PI, 1, [1]));
                scenicList.push(new Scenery("crate", 1491, 1614, -5/4 * Math.PI, 1, [1.2]));
                //tailors
                scenicList.push(new Scenery("woodenBench", 2654, 1743, -1 * Math.PI, 0));
                scenicList.push(new Scenery("woodenBench", 2548, 1653, -1/2 * Math.PI, 0));
                scenicList.push(new Scenery("item", 2737, 1564, 0, "freynor", ["bucketOfWater", 1, -15]));
                scenicList.push(new Scenery("item", 2687, 1741, 0, "freynor", ["frichPelt", 1, -5]));
                scenicList.push(new Scenery("item", 2651, 1741, 0, "freynor", ["frichPelt", 1, -5]));
                scenicList.push(new Scenery("item", 2614, 1741, 0, "freynor", ["frichPelt", 1, -5]));
                scenicList.push(new Scenery("item", 2548, 1686, 0, "freynor", ["ardilPelt", 1, -7]));
                scenicList.push(new Scenery("item", 2548, 1666, 0, "freynor", ["ardilPelt", 1, -7]));
                scenicList.push(new Scenery("item", 2548, 1630, 0, "freynor", ["varnPelt", 1, -8]));
                scenicList.push(new Scenery("item", 2550, 1608, 0, "freynor", ["varnPelt", 1, -8]));
                //Inn
                scenicList.push(new Scenery("barrel", 2345, 1689, -1/2 * Math.PI, 1));
                scenicList.push(new Scenery("woodenBench", 2276, 2101, -1 * Math.PI, 0));
                scenicList.push(new Scenery("stumpStoolSml", 2287, 2065, -1/2 * Math.PI, 0));
                scenicList.push(new Scenery("stumpStoolSml", 2243, 2066, -1/2 * Math.PI, 0));
                scenicList.push(new Scenery("stumpStoolSml", 2323, 2064, -1/2 * Math.PI, 0));
                scenicList.push(new Scenery("smallTable", 2353, 1940, -1/2 * Math.PI, 0));
                scenicList.push(new Scenery("stumpStoolSml", 2347, 1904, -1/2 * Math.PI, 0));
                scenicList.push(new Scenery("stumpStoolSml", 2348, 1979, -1/2 * Math.PI, 0));
                scenicList.push(new Scenery("stumpStoolSml", 2314, 1940, -1/2 * Math.PI, 0));
                scenicList.push(new Scenery("smallTable", 2056, 2079, -1/2 * Math.PI, 0));
                scenicList.push(new Scenery("stumpStoolSml", 2106, 2081, -1/2 * Math.PI, 0));
                scenicList.push(new Scenery("smallTable", 2052, 1711, -1/2 * Math.PI, 0));
                scenicList.push(new Scenery("stumpStoolSml", 2089, 1708, -1/2 * Math.PI, 0));
                scenicList.push(new Scenery("stumpStoolSml", 2053, 1756, -1/2 * Math.PI, 0));
                //barracks
                scenicList.push(new Scenery("woodenBench", 1351, 2229, -1/2 * Math.PI, 0));
                if (player.raceName == "Freynor" && player.title == "Royalty" || player.title == "Nobility" && player.raceName == "Freynor" || quests.atalinTeshirAnnexed == true)
                {
                    scenicList.push(new Scenery("item", 1348, 2202, 0, "freynor", ["freydicSword", 1, 0]));
                    scenicList.push(new Scenery("item", 1349, 2256, 0, "freynor", ["arrow", 7, 0]));
                    scenicList.push(new Scenery("item", 1349, 2246, 0, "freynor", ["arrow", 8, 0]));
                    scenicList.push(new Scenery("item", 1349, 2236, 0, "freynor", ["arrow", 7, 0]));
                }
                else
                {
                    scenicList.push(new Scenery("item", 1348, 2202, 0, "freynor", ["freydicSword", 1, -17, "Tor Soldier"]));
                    scenicList.push(new Scenery("item", 1349, 2256, 0, "freynor", ["arrow", 7, -6, "Tor Soldier"]));
                    scenicList.push(new Scenery("item", 1349, 2246, 0, "freynor", ["arrow", 8, -6, "Tor Soldier"]));
                    scenicList.push(new Scenery("item", 1349, 2236, 0, "freynor", ["arrow", 7, -6, "Tor Soldier"]));
                }
                scenicList.push(new Scenery("smallTable", 1530, 2323, -1/2 * Math.PI, 0));
                scenicList.push(new Scenery("stumpStoolSml", 1528, 2285, -1/2 * Math.PI, 0));
                scenicList.push(new Scenery("stumpStoolSml", 1497, 2322, -1/2 * Math.PI, 0));
                scenicList.push(new Scenery("crate", 1532, 2168, -4.38/4 * Math.PI, 1, [1.24]));
                //alchemyshopstuff
                scenicList.push(new Scenery("hearth", 1119, 820, 0/4 * Math.PI, "lit"));
                scenicList.push(new Scenery("woodenBench", 1158, 738, -1 * Math.PI, 0));
                scenicList.push(new Scenery("item", 1158, 738, 0, "freynor", ["rawWolfLiver", 1, -5]));
                scenicList.push(new Scenery("item", 1140, 738, 0, "freynor", ["potionGlass", 1, -2]));
                scenicList.push(new Scenery("item", 1176, 738, 0, "freynor", ["vialOfWater", 1, -3]));
                scenicList.push(new Scenery("item", 1123, 738, 0, "freynor", ["potionGlass", 1, -2]));
                scenicList.push(new Scenery("item", 1194, 739, 0, "freynor", ["salt", 2, -11]));
                scenicList.push(new Scenery("crate", 1107, 671, -5/4 * Math.PI, 2, [1.4]));
                scenicList.push(new Scenery("crate", 1347, 805, 4.1/4 * Math.PI, 2, [1.2]));
                scenicList.push(new Scenery("crate", 1450, 771, 4.9/4 * Math.PI, 1, [1.3]));
                scenicList.push(new Scenery("crate", 1404, 674, 13.91/4 * Math.PI, 2, [1.1]));
                //medlia shop stuff
                scenicList.push(new Scenery("crate", 1497, 2002, 7/4 * Math.PI, 2, [1.51]));
                scenicList.push(new Scenery("crate", 1373, 1983, 6.333/4 * Math.PI, 1, [1.1515]));
                scenicList.push(new Scenery("crate", 1458, 1881, 1.6/4 * Math.PI, 1, [1.41]));
                //smithy's
                scenicList.push(new Scenery("woodenBench", 1394, 1091, -1/2 * Math.PI, 0));
                scenicList.push(new Scenery("item", 1394, 1071, 0, "freynor", ["freydicSword", 1, -17]));
                scenicList.push(new Scenery("item", 1394, 1112, 0, "freynor", ["freydicSword", 1, -17]));
                scenicList.push(new Scenery("woodenBench", 1475, 1091, -1/2 * Math.PI, 0));
                scenicList.push(new Scenery("item", 1475, 1091, 0, "freynor", ["freydicGreatSword", 1, -26]));
                scenicList.push(new Scenery("woodenBench", 1435, 959, -1 * Math.PI, 0));
                scenicList.push(new Scenery("item", 1472, 960, 0, "freynor", ["hammer", 1, -8]));
                scenicList.push(new Scenery("item", 1446, 959, 0, "freynor", ["iron", 1, -7]));
                scenicList.push(new Scenery("item", 1420, 958, 0, "freynor", ["iron", 1, -7]));
                scenicList.push(new Scenery("item", 1393, 962, 0, "freynor", ["steel", 1, -13]));
                scenicList.push(new Scenery("crate", 1346, 973, 0.556781792/4 * Math.PI, 1, [1.55]));
                //Stable
                scenicList.push(new Scenery("crate", 633, 1656, -6/4 * Math.PI, 1, [1.3]));
                scenicList.push(new Scenery("crate", 497, 1604, -1/4 * Math.PI, 1, [1]));
                scenicList.push(new Scenery("crate", 578, 1522, 8/4 * Math.PI, 1, [1.4]));
                scenicList.push(new Scenery("crate", 552, 1659, 1/5 * Math.PI, 1, [1.25]));


                //Signs
                scenicList.push(new Scenery("sign", 1570, 1115, 1/2 * Math.PI, 3, "Svehn's Smithy"));
                scenicList.push(new Scenery("sign", 2792, 1706, 1/2 * Math.PI, 3, "Northfolk Outfitters"));
                scenicList.push(new Scenery("sign", 1583, 2026, 1/2 * Math.PI, 3, "Teshir General Goods"));
                scenicList.push(new Scenery("sign", 1583, 2316, 1/2 * Math.PI, 3, "Teshir City Barracks"));
                scenicList.push(new Scenery("sign", 1484, 1514, 0 * Math.PI, 3, "Teshir City Bank"));
                scenicList.push(new Scenery("sign", 2175, 1657, 0 * Math.PI, 3, "The Harvest's Bounty - Inn"));
                scenicList.push(new Scenery("sign", 1446, 611, 0 * Math.PI, 3, "Bubbling Creations - Alchemy Shop"));
                scenicList.push(new Scenery("sign", 700, 1530, 1/2 * Math.PI, 3, "Teshir Stablehouse"));

                //filler and the rest
                //the inn
                scenicList.push(new Scenery("bartop", 2308, 1736, -1/2 * Math.PI, true));
                scenicList.push(new Scenery("bed", 1985, 1850, 1/2 * Math.PI, false));
                scenicList.push(new Scenery("bed", 2105, 1913, -1/2 * Math.PI, false));
                scenicList.push(new Scenery("hearth", 2186, 1880, 1/2 * Math.PI, "lit"));

                //The Players Home (purchasable)
                if (quests.teshirHomeOwned || quests.atalinTeshirAnnexed == true)
                {
                    scenicList.push(new Scenery("walrusHideRug", 2663, 1989, 0, 1.65));
                    scenicList.push(new Scenery("sign", 2792, 2056, 1/2 * Math.PI, 3, "Fairfield Lodge"));
                    scenicList.push(new Scenery("bed", 2594, 2082, 1/2 * Math.PI, true));
                    scenicList.push(new Scenery("hearth", 2555, 1910, 3/4 * Math.PI, true));
                    scenicList.push(new Scenery("crate", 2731, 2080, 3.5/4 * Math.PI, 3, [1.2, "teshirHomeCrate1", 6, [[new Item("woodenBowl", false, false), 7]], false, 0]));
                }
                else
                {
                    scenicList.push(new Scenery("walrusHideRug", 2663, 1989, 0, 1.65));
                    scenicList.push(new Scenery("sign", 2792, 2056, 1/2 * Math.PI, 3, "For Sale - 6200 coins"));
                    scenicList.push(new Scenery("bed", 2594, 2082, 1/2 * Math.PI, false));
                    scenicList.push(new Scenery("hearth", 2555, 1910, 3/4 * Math.PI, false));
                    scenicList.push(new Scenery("crate", 2731, 2080, 3.5/4 * Math.PI, 1, [1.2]));
                }
                scenicList.push(new Scenery("smallTable", 2679, 1917, 0, 0));
                scenicList.push(new Scenery("stumpStoolSml", 2716, 1916, -4, 0));
                scenicList.push(new Scenery("stumpStoolSml", 2642, 1912, 1, 0));

                if (quests.teshirConverted == true)
                {
                    scenicList.push(new Scenery("nirwadenBuilding5", 500, 2533, 0, true));
                    if (uniqueChars.OrjovTorLDS == false)
                    {
                        scenicList.push(new Scenery("pyre", 562, 2224, 0, false));
                    }
                    if (uniqueChars.bernardoLDS)
                    {
                        var hits = 0;
                        for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                        {
                            if (ArtificialIntelligenceAccess[i].ID == "Bishop Bernardo")
                            {
                                hits += 1;
                                break;
                            }
                        }
                        if (hits == 0)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(333, 2538, "Person", false, "Bishop Bernardo", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenPriestRobes", 0], weapon: ["none", [0.04, 0.05], 0, 0, 1.6], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[368, 2538]]}));
                        }
                        for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                        {
                            if (ArtificialIntelligenceAccess[i].ID == "Bishop Bernardo")
                            {
                                ArtificialIntelligenceAccess[i].healthMAX = 19;
                                ArtificialIntelligenceAccess[i].health = 19;
                                ArtificialIntelligenceAccess[i].magicalResistance = 6;
                                break;
                            }
                        }
                    }
                    if (uniqueChars.aavaiLDS)
                    {
                        var hits = 0;
                        for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                        {
                            if (ArtificialIntelligenceAccess[i].ID == "Aavai the Reformed Northern Bandit")
                            {
                                hits += 1;
                                break;
                            }
                        }
                        if (hits == 0)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(531, 2438, "Soldier", false, "Aavai the Reformed Northern Bandit", {race: "Freynor", faction: "Freynor", con: 5, speed: 0.90, outfit: ["none", 1], weapon: ["none", [0.4, 0.4], 0, 0, 0.95], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: true, route:[[0, 0]]}));
                        }
                    }
                    ArtificialIntelligenceAccess.push(new Unit(480, 2623, "Person", false, "Freynor Villager", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["frichFurClothing", 0], weapon: ["none", [0.25, 0.6], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: false, route:[[2348, 1978]]}));
                    ArtificialIntelligenceAccess.push(new Unit(589, 2475, "Person", false, "Freynor Villager", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["frichFurClothing", 0], weapon: ["none", [0.3, 0.5], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: false, route:[[2289, 1710]]}));
                }
                //The Jarl's Estate
                scenicList.push(new Scenery("freydicBuilding6", -102, 474, 0, true));
                scenicList.push(new Scenery("freydicBuilding7", -338, 127, 0, true));
                scenicList.push(new Scenery("freydicBuilding3", -603, 474, 0, true));
                scenicList.push(new Scenery("woodenGate", -348, 597, 0, true));
                scenicList.push(new Scenery("smallRockCircle", -348 , 464, 4, true));
                scenicList.push(new Scenery("smallRockCircle", -348 , 464, 4 * 1/2 * Math.PI, true));
                scenicList.push(new Scenery("smallRockCircle", -348 , 464, 4 * -1/4 * Math.PI, true));
                if (quests.atalinTeshirAnnexed == true)
                {
                    scenicList.push(new Scenery("tylunPlant", -348 , 464, 4, "nirwaden", "theGreatFlowerOfTheJarlOfTeshir"));
                }
                else
                {
                    scenicList.push(new Scenery("tylunPlant", -348 , 464, 4, "freynor", "theGreatFlowerOfTheJarlOfTeshir"));
                }
                //The noble player's room
                scenicList.push(new Scenery("walrusHideRug", -90, 466, 0, 2));
                if (player.title == "Nobility" && player.raceName == "Freynor" || player.title == "Royalty" && player.raceName == "Freynor" || quests.atalinTeshirAnnexed == true)
                {
                    scenicList.push(new Scenery("hearth", -339, -79, 0, "flame"));
                    scenicList.push(new Scenery("bed", -33, 563, -1/2 * Math.PI, true));
                    scenicList.push(new Scenery("hearth", 0, 471, -1/2 * Math.PI, "flame"));
                }
                else
                {
                    scenicList.push(new Scenery("hearth", -339, -79, 0, "lit"));
                    scenicList.push(new Scenery("bed", -33, 563, -1/2 * Math.PI, false));
                    scenicList.push(new Scenery("hearth", 0, 471, -1/2 * Math.PI, "lit"));
                }
                if (player.gender == "Female" && player.title == "Nobility" && player.raceName == "Freynor" || quests.atalinTeshirAnnexed == true)
                {
                    scenicList.push(new Scenery("loom", -183, 392, 3/4 * Math.PI, true));
                }
                //The Jarls Chamber
                scenicList.push(new Scenery("walrusHideRug", -331, 141, -1/2 * Math.PI, 2.5));
                scenicList.push(new Scenery("feastingTable", -476, 156, -1/2 * Math.PI, true));
                scenicList.push(new Scenery("feastingTable", -187, 156, -1/2 * Math.PI, true));
                scenicList.push(new Scenery("bartop", -335, -3, 0 * Math.PI, true));
                //food occasionally
                if (Math.round(Math.random()))
                {
                    if (player.raceName == "Freynor" && player.title == "Royalty" || player.title == "Nobility" && player.raceName == "Freynor" || quests.atalinTeshirAnnexed == true)
                    {
                        scenicList.push(new Scenery("item", -342, 8, 0, "freynor", ["bearMeat", 1, 0]));
                        scenicList.push(new Scenery("item", -342, 8, 0, "freynor", ["pluttBerries", 2, 0]));
                        scenicList.push(new Scenery("item", -342, 8, 0, "freynor", ["salt", 1, 0]));
                        scenicList.push(new Scenery("item", -360, 5, 0, "freynor", ["pluttWine", 1, 0]));
                        scenicList.push(new Scenery("item", -393, 8, 0, "freynor", ["pluttWine", 1, 0]));
                        if (player.title == "Nobility" && player.raceName == "Freynor")
                        {
                            var rnnd = Math.random();
                            if (rnnd < 0.33)
                            {
                                if (player.gender != "Female")
                                {
                                    scenicList.push(new Scenery("item", -380, 3, 0, "freynor", ["mofuMeat", 1, 0]));
                                }
                                else
                                {
                                    scenicList.push(new Scenery("item", -380, 6, 0, "freynor", ["akerBerries", 1, 0]));
                                    scenicList.push(new Scenery("item", -378, 3, 0, "freynor", ["suuliMelonSlice", 1, 0]));
                                    scenicList.push(new Scenery("item", -386, 3, 0, "freynor", ["suuliMelonSlice", 1, 0]));
                                }
                            }
                            else if (rnnd < 0.667)
                            {
                                scenicList.push(new Scenery("item", -380, 1, 0, "freynor", ["pluttMoffling", 1, 0]));
                            }
                            else
                            {
                                scenicList.push(new Scenery("item", -380, 1, 0, "freynor", ["akerMoffling", 1, 0]));
                            }
                        }
                    }
                    else
                    {
                        scenicList.push(new Scenery("item", -342, 8, 0, "freynor", ["bearMeat", 1, -25]));
                        scenicList.push(new Scenery("item", -342, 8, 0, "freynor", ["pluttBerries", 2, -14]));
                        scenicList.push(new Scenery("item", -342, 8, 0, "freynor", ["salt", 1, -15]));
                        scenicList.push(new Scenery("item", -360, 5, 0, "freynor", ["pluttWine", 1, -16]));
                    }
                }
                //knight/huskarl's quarters
                scenicList.push(new Scenery("hearth", -709, 471, 1/2 * Math.PI, "lit"));
                scenicList.push(new Scenery("crate", -519, 555, 0.012/4 * Math.PI, 1, [1.29]));
                scenicList.push(new Scenery("bed", -545, 388, -1/2 * Math.PI, false));
                scenicList.push(new Scenery("bed", -668, 561, 1/2 * Math.PI, false));
                scenicList.push(new Scenery("bed", -668, 387, 1/2 * Math.PI, false));

                //bandit Camp in the north east
                //tents
                scenicList.push(new Scenery("tent", 74 - 750, 5672, (0.5/5 * 2 * Math.PI), true));
                scenicList.push(new Scenery("tent", 544 - 750, 5618, (4.5/5 * 2 * Math.PI), true));
                scenicList.push(new Scenery("tent", 280 - 750, 5700, 0, true));
                scenicList.push(new Scenery("tent", 255 - 750, 5249, Math.PI, true));
                scenicList.push(new Scenery("tent", -12 - 750, 5426, 1/2 * Math.PI, true));
                //campfire
                scenicList.push(new Scenery("campFire", 248 - 750, 5494, 3/4 * Math.PI, true));
                //Teshir Shop Stuff (outdoor until buildings are added)
                scenicList.push(new Scenery("anvil", 1751, 948, Math.PI * 3.45/4, true));
                scenicList.push(new Scenery("forge", 1770, 1086, Math.PI, true));
                scenicList.push(new Scenery("loom", 2625, 1569, 1/2 * Math.PI, true));
                scenicList.push(new Scenery("lab", 1199, 824, 0, true));
                if (quests.theBrokenWellFixed)
                {
                    scenicList.push(new Scenery("well", 2446, 1712, 0, true));
                }
                else
                {
                    scenicList.push(new Scenery("brokenWell", 2446, 1712, 0, true));
                }

                //The lonely farm house
                scenicList.push(new Scenery("rubbledHome", -1107, -1974, 0, true));
                //its own broken well
                scenicList.push(new Scenery("brokenWell", -1398, -1886, -2.74, true));
                //its little farm
                scenicList.push(new Scenery("harstPlant", -940 , -1944, Math.PI * 0.58, "freynor"));
                scenicList.push(new Scenery("harstPlant", -987 , -2007, Math.PI * 1, "freynor"));
                scenicList.push(new Scenery("harstPlant", -892 , -2019, -Math.PI * 2.2, "freynor"));
                scenicList.push(new Scenery("harstPlant", -822 , -1975, Math.PI * 3, "freynor"));
                scenicList.push(new Scenery("harstPlant", -816 , -2069, -Math.PI * 0.4675, "freynor"));

                if (travelerFood == 1)
                {
                    scenicList.push(new Scenery("item", 2228, 2101, 0, "freynor", ["harstAle", 1, 0, "Traveler"]));
                    scenicList.push(new Scenery("item", 2242, 2098, 0, "freynor", ["frichMeat", 1, 0, "Traveler"]));
                }
                else if (travelerFood == 2)
                {
                    if (Math.round(Math.random()))
                    {
                        scenicList.push(new Scenery("item", 2060, 2074, 0, "freynor", ["pintGlass", 1, 0, "Traveler"]));
                    }
                    else
                    {
                        scenicList.push(new Scenery("item", 2063, 2082, 0, "freynor", ["harstAle", 1, 0, "Traveler"]));
                    }
                }
                else if (travelerFood == 3)
                {
                    scenicList.push(new Scenery("item", 2228, 2101, 0, "freynor", ["santhAle", 1, 0, "Traveler"]));
                    scenicList.push(new Scenery("item", 2242, 2098, 0, "freynor", ["wolfLiver", 1, 0, "Traveler"]));
                }
                else if (travelerFood == 4)
                {
                    scenicList.push(new Scenery("item", 2063, 2082, 0, "freynor", ["frichMeat", 1, 0, "Traveler"]));
                }
                else if (travelerFood == 5)
                {
                    scenicList.push(new Scenery("item", 2343, 1941, 0, "freynor", ["harstAle", 1, 0, "Traveler"]));
                }
                else if (travelerFood == 6)
                {
                    scenicList.push(new Scenery("item", 2041, 1712, 0, "freynor", ["harstAle", 1, 0, "Traveler"]));
                    scenicList.push(new Scenery("item", 2052, 1720, 0, "freynor", ["frichMeat", 1, 0, "Traveler"]));
                }
                else if (travelerFood == 7)
                {
                    scenicList.push(new Scenery("item", 2061, 1710, 0, "orgell", ["walrusMeat", 1, -5, "Traveler"]));
                }
                else if (travelerFood == 9)
                {
                    scenicList.push(new Scenery("item", 2061, 1710, 0, "freynor", ["walrusMeat", 1, 0, "Traveler"]));
                }
                else if (travelerFood == 8)
                {
                    scenicList.push(new Scenery("item", 2342, 1940, 0, "freynor", ["bearMeat", 1, 0, "Traveler"]));
                    scenicList.push(new Scenery("item", 2353, 1932, 0, "freynor", ["harstAle", 1, 0, "Traveler"]));
                }

                scenicList.push(new Scenery("item", 2311, 1709, 0, "freynor", ["harstAle", 1, -3]));

                if (Math.round(Math.random()))
                {
                    scenicList.push(new Scenery("item", 2353, 1951, 0, "freynor", ["pintGlass", 1, -3]));
                }
                else
                {
                    scenicList.push(new Scenery("item", 2353, 1951, 0, "freynor", ["harstAle", 1, -3]));
                }

                //The City Farm
                scenicList.push(new Scenery("harstPlant", 2241 , 240, Math.PI * 0.44, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2241 , 165, Math.PI * 3.1, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2241 , 52, -Math.PI * 3.1, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2241 , -31, Math.PI * 2, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2241 , -107, Math.PI * 2.45, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2241 , -197, -Math.PI * 1.66, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2241 , -286, -Math.PI * 0.1, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2329 , 240, -Math.PI * 2.2, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2329 , 166, Math.PI * 3.1, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2329 , 76, Math.PI * 3.1, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2329 , -17, Math.PI * 3.1, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2329 , -105, Math.PI * 3.1, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2329 , -197, Math.PI * 3.1, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2329 , -297, Math.PI * 3.1, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2422 , 240, Math.PI * 0.05, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2422 , 162, Math.PI * 0.05, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2422 , 71, Math.PI * 0.05, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2422 , -12, Math.PI * 0.05, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2422 , -95, Math.PI * 0.05, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2422 , -195, Math.PI * 0.05, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2422 , -289, Math.PI * 0.05, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2498 , 240, -Math.PI * 1.56, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2498 , 164, -Math.PI * 1.56, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2498 , 59, -Math.PI * 1.56, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2498 , -24, -Math.PI * 1.56, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2498 , -95, -Math.PI * 1.56, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2498 , -192, -Math.PI * 1.56, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2498 , -286, -Math.PI * 1.56, "freynor"));

                scenicList.push(new Scenery("potatoPlant", 2566 , 240, 0, "freynor"));
                scenicList.push(new Scenery("potatoPlant", 2566 , 193, 0, "freynor"));
                scenicList.push(new Scenery("potatoPlant", 2566 , 165, 0, "freynor"));
                scenicList.push(new Scenery("potatoPlant", 2566 , 118, 0, "freynor"));
                scenicList.push(new Scenery("potatoPlant", 2566 , 84, 0, "freynor"));
                scenicList.push(new Scenery("potatoPlant", 2566 , 140, 0, "freynor"));
                scenicList.push(new Scenery("potatoPlant", 2603 , 240, 0, "freynor"));
                scenicList.push(new Scenery("potatoPlant", 2603 , 206, 0, "freynor"));
                scenicList.push(new Scenery("potatoPlant", 2603 , 179, 0, "freynor"));
                scenicList.push(new Scenery("potatoPlant", 2603 , 138, 0, "freynor"));
                scenicList.push(new Scenery("potatoPlant", 2603 , 113, 0, "freynor"));
                scenicList.push(new Scenery("potatoPlant", 2603 , 83, 0, "freynor"));
                scenicList.push(new Scenery("potatoPlant", 2668 , 240, 0, "freynor"));
                scenicList.push(new Scenery("potatoPlant", 2668 , 221, 0, "freynor"));
                scenicList.push(new Scenery("potatoPlant", 2668 , 194, 0, "freynor"));
                scenicList.push(new Scenery("potatoPlant", 2668 , 153, 0, "freynor"));
                scenicList.push(new Scenery("potatoPlant", 2668 , 122, 0, "freynor"));
                scenicList.push(new Scenery("potatoPlant", 2668 , 86, 0, "freynor"));
                scenicList.push(new Scenery("potatoPlant", 2696 , 240, 0, "freynor"));
                scenicList.push(new Scenery("potatoPlant", 2696 , 214, 0, "freynor"));
                scenicList.push(new Scenery("potatoPlant", 2696 , 178, 0, "freynor"));
                scenicList.push(new Scenery("potatoPlant", 2696 , 147, 0, "freynor"));
                scenicList.push(new Scenery("potatoPlant", 2696 , 111, 0, "freynor"));
                scenicList.push(new Scenery("potatoPlant", 2696 , 81, 0, "freynor"));

                scenicList.push(new Scenery("suuliPlant", 2686 , 6, 1, "freynor"));
                scenicList.push(new Scenery("suuliPlant", 2686 , -59, 2, "freynor"));
                scenicList.push(new Scenery("suuliPlant", 2628 , 5, 3, "freynor"));
                scenicList.push(new Scenery("suuliPlant", 2628 , -60, 0, "freynor"));
                scenicList.push(new Scenery("suuliPlant", 2566 , 3, -0.5, "freynor"));
                scenicList.push(new Scenery("suuliPlant", 2566 , -61, 2.34, "freynor"));

                scenicList.push(new Scenery("carrotPlant", 2559 , -138, 1.2, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2559 , -153, -2.1, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2559 , -168, -1.2, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2559 , -183, 3, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2559 , -198, 1.78, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2559 , -213, -0.4, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2559 , -228, -3, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2559 , -243, -1.2, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2559 , -258, 3, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2559 , -273, 1.78, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2559 , -288, -0.4, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2559 , -303, -3, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2624 , -138, -0.9, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2624 , -153, -2.8, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2624 , -168, -1.9, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2624 , -183, -2, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2624 , -198, 2.34, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2624 , -213, 0.5, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2624 , -228, 1, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2624 , -243, 0, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2624 , -258, 0.1, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2624 , -273, -0.95, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2624 , -288, -3.214, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2624 , -303, 2.867, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2680 , -138, -1.8, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2680 , -153, 2.1, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2680 , -168, -1.5667, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2680 , -183, 0, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2680 , -198, 1.3, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2680 , -213, 0.4, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2680 , -228, 3, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2680 , -243, -1.5, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2680 , -258, 1.5, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2680 , -273, 1.89, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2680 , -288, -0.21, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2680 , -303, 0.3, "freynor"));

                scenicList.push(new Scenery("santhPlant", 2763 , -310, Math.PI * 0.14, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2763 , -285, -Math.PI * 0.44, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2763 , -260, Math.PI * 1.8, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2763 , -235, -Math.PI * 2.34, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2763 , -210, Math.PI * 0.44, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2763 , -185, Math.PI * 0.14, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2763 , -160, -Math.PI * 0.44, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2763 , -135, Math.PI * 1.8, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2763 , -110, -Math.PI * 2.34, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2763 , -85, Math.PI * 3.2, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2823 , -310, Math.PI * 0.14, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2823 , -285, -Math.PI * 0.44, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2823 , -260, Math.PI * 1.8, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2823 , -235, -Math.PI * 2.34, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2823 , -210, Math.PI * 0.44, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2823 , -185, Math.PI * 0.14, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2823 , -160, -Math.PI * 0.44, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2823 , -135, Math.PI * 1.8, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2823 , -110, -Math.PI * 2.34, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2823 , -85, Math.PI * 3.2, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2883 , -310, Math.PI * 0.14, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2883 , -285, -Math.PI * 0.44, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2883 , -260, Math.PI * 1.8, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2883 , -235, -Math.PI * 2.34, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2883 , -210, Math.PI * 0.44, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2883 , -185, Math.PI * 0.14, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2883 , -160, -Math.PI * 0.44, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2883 , -135, Math.PI * 1.8, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2883 , -110, -Math.PI * 2.34, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2883 , -85, Math.PI * 3.2, "freynor"));

                //plains plants
                scenicList.push(new Scenery("techiPlant", 3781 , -1155, -Math.PI * 0.2, true));
                scenicList.push(new Scenery("techiPlant", 5001 , 164, Math.PI * 0.5, true));
                scenicList.push(new Scenery("techiPlant", 6014 , -1047, 3, true));
                scenicList.push(new Scenery("techiPlant", 3021 , -2478, 1, true));
                scenicList.push(new Scenery("techiPlant", 3068 , -2418, Math.PI * 9.1, true));
                scenicList.push(new Scenery("techiPlant", 6018 , -2253, 2, true));
                scenicList.push(new Scenery("techiPlant", 5689 , 3451, Math.PI * 1.7, true));
                scenicList.push(new Scenery("techiPlant", 2937 , 5977, Math.PI * 0.66, true));
                scenicList.push(new Scenery("techiPlant", -1057 , 2813, Math.PI * 3.8, true));
                scenicList.push(new Scenery("techiPlant", -62 , -46, Math.PI * -62.46, true));

                if (player.gamemode == "MRB")
                {
                    scenicList.push(new Scenery("mrbAssets", 2116, 2253, 1/2 * Math.PI, 1, [2, 6960.7891866820155, -232268.61677319987, "mrbHQ"]));
                }

                change = "central";
            }
        }
        else if (region == "n1w1") //Y > 6290 && Y < 32370
        {
            if (change != "n1w1")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                //meant for the map
                //balkur
                //ArtificialIntelligenceAccess.push(new Unit(-2158, 13626, "Balkur", false, "Tiitvehlesh"));

                //waanti
                //ArtificialIntelligenceAccess.push(new Unit(323, 15308, "Waanti", true, "Goablt"));

                //winter wolves
                //ArtificialIntelligenceAccess.push(new Unit(4659, 8375, "WinterWolf", false, "Dogmeat"));

                //glutids
                //ArtificialIntelligenceAccess.push(new Unit(2255, 10148, "Glutid", true, "Glup", {patrolStops: 5, patrolLoop: true, route:[[1741, 10369], [1898, 9900], [1602, 9909], [1635, 10189], [2255, 10148]]}));

                //Scenery
                //scenicList.push(new Scenery("bushkaPlant", 576, 8067, 2.5, true));
                //scenicList.push(new Scenery("wightbloomPlant", 611 , 15616, 5, true));

                scenicList.push(new Scenery("darkStone",15318.228569826544, 8056.846598629125, -4.5, 1.5, 2));
                scenicList.push(new Scenery("darkStone", 11546.757294639594, 9922.21566342075, -2.45, 1.5, 2));
                scenicList.push(new Scenery("stone", 10856.254759272359, 11695.743612505914, 2.19, 2.5, 1));
                scenicList.push(new Scenery("stone", 12201.917266253942, 15422.445220748885, -1.19, 2, 3));
                scenicList.push(new Scenery("stone", 16108.926125953518, 11749.559296933905, -1.19, 4, 2));
                scenicList.push(new Scenery("darkStone", 13549.453649904517, 12110.514672395324, 11, 1.5, 1));
                scenicList.push(new Scenery("stone", 9103.845959355775, 10787.810568983634, -1.19, 1.5, 2));


                ArtificialIntelligenceAccess.push(new Unit(16067.11456732482, 7575.977438270176, "MountainFrich", false, "lstnonerth1"));


                ArtificialIntelligenceAccess.push(new Unit(8650.867135320244, 15748.306078912403, "WinterWolf", false, "lstinsow1"));
                ArtificialIntelligenceAccess.push(new Unit(8833.364481449378, 15652.945643472942, "WinterWolf", false, "lstinsow2"));
                ArtificialIntelligenceAccess.push(new Unit(16252.301717276636, 9275.597011148186, "WinterWolf", false, "lstinwentr1"));
                ArtificialIntelligenceAccess.push(new Unit(16017.100557089088, 9078.331207576335, "WinterWolf", true, "lstinwentrmuth"));
                ArtificialIntelligenceAccess.push(new Unit(16084.440101267981, 9163.152992812165, "WinterWolf", false, "lstinwentr2"));
                ArtificialIntelligenceAccess.push(new Unit(15897.25191882054, 9184.697763063614, "WinterWolf", false, "lstinwentr3"));
                ArtificialIntelligenceAccess.push(new Unit(15763.83266045582, 8865.010621447256, "WinterWolf", false, "lstinwentr4"));
                ArtificialIntelligenceAccess.push(new Unit(15769.48719279765, 9067.135555023144, "WinterWolf", false, "lstinwentr5"));
                ArtificialIntelligenceAccess.push(new Unit(11397.245011105077, 14060.272120928526, "WinterWolf", false, "lstinicecrys1"));
                ArtificialIntelligenceAccess.push(new Unit(11163.614322114578, 13934.084859508233, "WinterWolf", false, "lstinicecrys2"));
                ArtificialIntelligenceAccess.push(new Unit(11297.266752018977, 13850.421336181624, "WinterWolf", false, "lstinicecrys3"));
                ArtificialIntelligenceAccess.push(new Unit(10456.141046274734, 11591.349243290699, "WinterWolf", false, "lstinmplsyrip1"));
                ArtificialIntelligenceAccess.push(new Unit(10696.843732873744, 11672.877305922137, "WinterWolf", false, "lstinmplsyrip2"));
                ArtificialIntelligenceAccess.push(new Unit(10693.74804041502, 11796.253293105223, "WinterWolf", false, "lstinmplsyrip3"));
                ArtificialIntelligenceAccess.push(new Unit(10856.254759272359, 11695.743612505914, "WinterWolf", false, "lstinmplsyrip4"));


                ArtificialIntelligenceAccess.push(new Unit(7750, 12984, "WinterWolf", false, "lstinwentr3"));
                ArtificialIntelligenceAccess.push(new Unit(7653, 13455, "WinterWolf", false, "lstinwentr4"));


                ArtificialIntelligenceAccess.push(new Unit(12376.523993899022, 8243.563984321085, "Glutid", false, "firNatat1"));
                ArtificialIntelligenceAccess.push(new Unit(11039.586775372409, 15986.629608466079, "Glutid", false, "firNatat2"));
                ArtificialIntelligenceAccess.push(new Unit(11245.464883850309, 15645.740086003992, "Glutid", false, "firNatat3"));


                ArtificialIntelligenceAccess.push(new Unit(15570.339197603756, 14650.45718221831, "Waanti", false, "ydleleloo1"));
                ArtificialIntelligenceAccess.push(new Unit(15008.793141878725, 14499.21820699782, "Waanti", true, "ydleleloo2"));
                ArtificialIntelligenceAccess.push(new Unit(14860.989415219557, 14587.435524580458, "Waanti", "baby", "ydleleloo3"));
                ArtificialIntelligenceAccess.push(new Unit(14427.98439274702, 15072.401206024557, "Waanti", false, "ydleleloo4"));
                ArtificialIntelligenceAccess.push(new Unit(14752.273737650828, 15164.343707482367, "Waanti", false, "ydleleloo5"));
                ArtificialIntelligenceAccess.push(new Unit(14818.740550526118, 15095.07487873786, "Waanti", "baby", "ydleleloo6"));
                ArtificialIntelligenceAccess.push(new Unit(15695.138122706598, 15350.785648802674, "Waanti", true, "ydleleloo7"));
                ArtificialIntelligenceAccess.push(new Unit(14479.462894504624, 15267.287130329823, "Waanti", true, "ydleleloo8"));
                ArtificialIntelligenceAccess.push(new Unit(15566.027520576292, 15232.016075112875, "Waanti", false, "ydleleloo9"));
                ArtificialIntelligenceAccess.push(new Unit(15133.02135125285, 14806.116299535423, "Waanti", false, "ydleleloo10"));
                ArtificialIntelligenceAccess.push(new Unit(15048.800292802935, 15322.160353147583, "Waanti", false, "ydleleloo11"));
                ArtificialIntelligenceAccess.push(new Unit(8724.757450605708, 14337.395350097036, "Waanti", false, "Gothrdloanly1"));
                ArtificialIntelligenceAccess.push(new Unit(8567.345471777382, 14276.609981381416, "Waanti", true, "Gothrdloanly2"));
                ArtificialIntelligenceAccess.push(new Unit(8681.945427979472, 14284.252538727673, "Waanti", "baby", "Gothrdloanly3"));


                ArtificialIntelligenceAccess.push(new Unit(15858.369449530492, 11509.279852484511, "Balkur", false, "Hunpryclws"));


                scenicList.push(new Scenery("wightbloomPlant", 14934.371305467583, 9118.072157479264, 2.5, true));
                scenicList.push(new Scenery("wightbloomPlant", 9579.541758714351, 16023.122943428982, 3, true));


                scenicList.push(new Scenery("bushkaPlant", 11892.601449495927, 8484.425475508762, 1, true));
                scenicList.push(new Scenery("bushkaPlant", 9874.515200136972, 14307.27500104145, 2, true));
                scenicList.push(new Scenery("bushkaPlant", 8468.369856819632, 11899.002451265527, 4, true));
                scenicList.push(new Scenery("bushkaPlant", 11427.814519139989, 12417.908999379171, 1.5, true));
                scenicList.push(new Scenery("bushkaPlant", 12358.304594790208, 15268.242792566381, 1.8, true));
                scenicList.push(new Scenery("bushkaPlant", 15830.665680671083, 14837.068739704257, -9.8, true));
                scenicList.push(new Scenery("bushkaPlant", 14939.226320523008, 11920.739539445425, -4.8, true));

                //Seguidores del Hielo
                ArtificialIntelligenceAccess.push(new Unit(9000, 10000, "HyelingSoldier", true, "Frost Maw"));
                ArtificialIntelligenceAccess.push(new Unit(8900, 10100, "HyelingSoldier", false, "Long Tooth"));
                ArtificialIntelligenceAccess.push(new Unit(9584, 9046, "Hyeling", "baby", "Cold Cloth"));
                ArtificialIntelligenceAccess.push(new Unit(9498, 8856, "Hyeling", false, "Old Eyes"));
                ArtificialIntelligenceAccess.push(new Unit(10041, 8746, "Hyeling", true, "White Hammer"));
                ArtificialIntelligenceAccess.push(new Unit(9711, 8503, "HyelingSoldier", false, "Running Stone"));
                scenicList.push(new Scenery("largeCeremonialRockCircle", 10075 , 8783, 0, true));
                scenicList.push(new Scenery("hyelingTent", 9199 , 8965, 1/2 * Math.PI, true));
                scenicList.push(new Scenery("hyelingTent", 9677 , 9170, -1/11 * Math.PI, true));
                scenicList.push(new Scenery("hyelingTent", 10800 , 8897, -1/2 * Math.PI, true));
                scenicList.push(new Scenery("hyelingTent", 10458 , 8363, -3/5 * Math.PI, true));


                change = "n1w1";
            }
        }
        else if (region == "n1") //Y > 6290 && Y < 32370
        {
            if (change != "n1")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                //meant for the map
                //balkur
                ArtificialIntelligenceAccess.push(new Unit(5432, 15332, "Balkur", true, "Tiitvehlesh"));
                ArtificialIntelligenceAccess.push(new Unit(-396, 15991, "Balkur", false, "Tiitvehlesh"));
                ArtificialIntelligenceAccess.push(new Unit(-2158, 13626, "Balkur", false, "Tiitvehlesh"));

                //waanti
                ArtificialIntelligenceAccess.push(new Unit(323, 15308, "Waanti", true, "Goablt"));
                ArtificialIntelligenceAccess.push(new Unit(-693, 14241, "Waanti", true, "golabtlt"));
                ArtificialIntelligenceAccess.push(new Unit(110, 14479, "Waanti", false, "hablyem"));
                ArtificialIntelligenceAccess.push(new Unit(614, 14798, "Waanti", false, "yematlt"));
                ArtificialIntelligenceAccess.push(new Unit(219, 14191, "Waanti", "baby", "yem"));
                ArtificialIntelligenceAccess.push(new Unit(853, 14583, "Waanti", "baby", "yatlt"));
                ArtificialIntelligenceAccess.push(new Unit(19, 13961, "Waanti", false, "yetlat"));
                ArtificialIntelligenceAccess.push(new Unit(645, 14231, "Waanti", true, "Lebyetlt"));
                ArtificialIntelligenceAccess.push(new Unit(4965, 12265, "Waanti", true, "Kajlabtlt"));
                ArtificialIntelligenceAccess.push(new Unit(5334, 12140, "Waanti", false, "yablyem"));
                ArtificialIntelligenceAccess.push(new Unit(5037, 12049, "Waanti", false, "kematlt"));
                ArtificialIntelligenceAccess.push(new Unit(4620, 11851, "Waanti", "baby", "jemsi"));
                ArtificialIntelligenceAccess.push(new Unit(-2041, 7579, "Waanti", true, "Febyektl"));

                //winter wolves
                ArtificialIntelligenceAccess.push(new Unit(4659, 8375, "WinterWolf", false, "Dogmeat"));
                ArtificialIntelligenceAccess.push(new Unit(4345, 8849, "WinterWolf", false, "Husky"));
                ArtificialIntelligenceAccess.push(new Unit(3674, 8607, "WinterWolf", false, "German"));
                ArtificialIntelligenceAccess.push(new Unit(5676, 9600, "WinterWolf", true, "Ghost"));
                ArtificialIntelligenceAccess.push(new Unit(-1466, 9900, "WinterWolf", false, "Russia"));
                ArtificialIntelligenceAccess.push(new Unit(-2484, 9430, "WinterWolf", false, "Icepaw"));
                ArtificialIntelligenceAccess.push(new Unit(-1447, 9055, "WinterWolf", false, "Eski"));
                ArtificialIntelligenceAccess.push(new Unit(629, 10673, "WinterWolf", false, "Moaba"));
                ArtificialIntelligenceAccess.push(new Unit(198, 10037, "WinterWolf", false, "Alaska"));
                ArtificialIntelligenceAccess.push(new Unit(6290, 8636, "WinterWolf", false, "Everest"));

                ArtificialIntelligenceAccess.push(new Unit(7750, 12984, "WinterWolf", false, "lstinwentr3"));
                ArtificialIntelligenceAccess.push(new Unit(7653, 13455, "WinterWolf", false, "lstinwentr4"));

                //glutids
                ArtificialIntelligenceAccess.push(new Unit(-275, 9055, "Glutid", "massive", "Glub", {patrolStops: 4, patrolLoop: true, route:[[-1071, 9239], [-1003, 9594], [-75, 9913], [-275, 9055]]}));
                ArtificialIntelligenceAccess.push(new Unit(2255, 10148, "Glutid", true, "Glup", {patrolStops: 5, patrolLoop: true, route:[[1741, 10369], [1898, 9900], [1602, 9909], [1635, 10189], [2255, 10148]]}));
                ArtificialIntelligenceAccess.push(new Unit(5175, 12158, "Glutid", false, "Glip", {patrolStops: 3, patrolLoop: true, route:[[4509, 12083], [5073, 12453], [5175, 12158]]}));

                //Scenery
                scenicList.push(new Scenery("bushkaPlant", 576, 8067, 2.5, true));
                scenicList.push(new Scenery("bushkaPlant", -930 , 11917, -1, true));
                scenicList.push(new Scenery("wightbloomPlant", -1508 , 14448, 0, true));
                scenicList.push(new Scenery("wightbloomPlant", 611 , 15616, 5, true));
                scenicList.push(new Scenery("bushkaPlant", 5101 , 14837, -3.2, true));
                scenicList.push(new Scenery("bushkaPlant", 4226 , 13450, 0, true));
                scenicList.push(new Scenery("wightbloomPlant", 5400 , 10239, -4, true));
                scenicList.push(new Scenery("bushkaPlant", -1811 , 15449, -1.5, true));


                //Seguidores del Hielo
                //ArtificialIntelligenceAccess.push(new Unit(9000, 10000, "HyelingSoldier", true, "Frost Maw"));
                //ArtificialIntelligenceAccess.push(new Unit(8900, 10100, "HyelingSoldier", false, "Long Tooth"));
                //ArtificialIntelligenceAccess.push(new Unit(9584, 9046, "Hyeling", "baby", "Cold Cloth"));
                //ArtificialIntelligenceAccess.push(new Unit(9498, 8856, "Hyeling", false, "Old Eyes"));
                //ArtificialIntelligenceAccess.push(new Unit(10041, 8746, "Hyeling", true, "White Hammer"));
                //ArtificialIntelligenceAccess.push(new Unit(9711, 8503, "HyelingSoldier", false, "Running Stone"));
                //scenicList.push(new Scenery("largeCeremonialRockCircle", 10075 , 8783, 0, true));
                //scenicList.push(new Scenery("hyelingTent", 9199 , 8965, 1/2 * Math.PI, true));
                //scenicList.push(new Scenery("hyelingTent", 9677 , 9170, -1/11 * Math.PI, true));
                //scenicList.push(new Scenery("hyelingTent", 10800 , 8897, -1/2 * Math.PI, true));
                //scenicList.push(new Scenery("hyelingTent", 10458 , 8363, -3/5 * Math.PI, true));


                change = "n1";
            }
        }
        else if (region == "n2")
        {
            if (change != "n2")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                //meant for the map

                //humans
                //walrus stuff merchant
                if (uniqueChars.hetmerLDS == false)
                {
                    if (Math.random() < 0.2)
                    {
                        if (change == "n1")
                        {
                            ArtificialIntelligenceAccess.push(new Unit(1714, 27290, "Person", false, "Freydic Merchant", {race: "Freynor", faction: "Freynor", personality: "scared", outfit: ["winterWolfClothing", 0], weapon: ["none", [0.4, 0.6], 0, 0, 1.15], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 6, patrolLoop: false, route:[[1720, 1939], [1488, 1939], [1714, 1939], [1714, 1457], [1730, 1187], [1734, 1192]], merchant: true, merchandise: [[new Item("coins", false, false), 18], [new Item("walrusTusks", false, false), 2], [new Item("rawWalrusFlesh", false, false), 3], [new Item("walrusHide", false, false), 2], [new Item("blubber", false, false), 5]]}));
                            for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                            {
                                if (ArtificialIntelligenceAccess[i].ID == "Freydic Merchant")
                                {
                                    ArtificialIntelligenceAccess[i].speed = 1.05;
                                    ArtificialIntelligenceAccess[i].healthMAX = 9;
                                    ArtificialIntelligenceAccess[i].health = 9;
                                    break;
                                }
                            }
                            ArtificialIntelligenceAccess.push(new Unit(1740, 27200, "Soldier", false, "Hired Blade", {race: "Freynor", faction: "Freynor", con: 3, speed: 1.05, outfit: ["walrusLeatherArmour", 4], weapon: ["freydicSword", [4, 4], 0, 16, 1.1], ranged: [false, "arrow", 4, 1500, 1, 4, 0, "none", 2], patrolStops: 4, patrolLoop: true, route:[[1746, 1939], [1740, 1457], [1756, 1187], [1760, 1190]]}));
                        }
                    }
                }

                //balkur
                if (this.change != "n3")
                {
                    ArtificialIntelligenceAccess.push(new Unit(-1455, 26201, "Balkur", false, "Tivilesh"));
                }
                else if (this.change != "n2e1")
                {
                    ArtificialIntelligenceAccess.push(new Unit(-2227, 24702, "Balkur", true, "Tivel"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(-2601, 25894, "WinterWolf", false, "Lusgya"));
                    ArtificialIntelligenceAccess.push(new Unit(-1989, 25549, "WinterWolf", false, "Lusgo"));
                    ArtificialIntelligenceAccess.push(new Unit(-1574, 25983, "WinterWolf", false, "Lusga"));
                    ArtificialIntelligenceAccess.push(new Unit(-740, 26220, "WinterWolf", false, "Lusgor"));
                }
                //waanti
                ArtificialIntelligenceAccess.push(new Unit(2658, 24515, "Waanti", "baby", "yiim"));
                ArtificialIntelligenceAccess.push(new Unit(2831, 24278, "Waanti", true, "Jilm"));
                ArtificialIntelligenceAccess.push(new Unit(2856, 24679, "Waanti", false, "Gemela"));
                ArtificialIntelligenceAccess.push(new Unit(5475, 23502, "Waanti", true, "Halm"));
                ArtificialIntelligenceAccess.push(new Unit(4605, 25537, "Waanti", false, "Gemala"));
                ArtificialIntelligenceAccess.push(new Unit(5266, 25378, "Waanti", true, "Holm"));
                ArtificialIntelligenceAccess.push(new Unit(-14, 22543, "Waanti", "baby", "yaam"));
                ArtificialIntelligenceAccess.push(new Unit(438, 22293, "Waanti", true, "Kilmi"));
                ArtificialIntelligenceAccess.push(new Unit(227, 22115, "Waanti", false, "Gemelia"));
                ArtificialIntelligenceAccess.push(new Unit(367, 22857, "Waanti", true, "Helm"));
                ArtificialIntelligenceAccess.push(new Unit(-754, 22419, "Waanti", "baby", "yaant"));
                ArtificialIntelligenceAccess.push(new Unit(-1304, 22980, "Waanti", true, "Kilmikan"));
                ArtificialIntelligenceAccess.push(new Unit(-1153, 22410, "Waanti", false, "Gemelaya"));
                ArtificialIntelligenceAccess.push(new Unit(533, 23721, "Waanti", false, "Gemayla"));

                //koobu
                ArtificialIntelligenceAccess.push(new Unit(-917, 19442, "Koobu", false, "Kipper"));

                //winter wolves
                //Southwesterly woof pak... Represent!
                if (this.change != "n1" && this.change != "n2w1")
                {
                    ArtificialIntelligenceAccess.push(new Unit(6199, 16919, "WinterWolf", true, "Husky"));
                    ArtificialIntelligenceAccess.push(new Unit(6605, 16771, "WinterWolf", false, "Husgy"));
                    ArtificialIntelligenceAccess.push(new Unit(6493, 17189, "WinterWolf", false, "Husgo"));
                    ArtificialIntelligenceAccess.push(new Unit(5851, 17051, "WinterWolf", false, "Husga"));
                    ArtificialIntelligenceAccess.push(new Unit(6259, 16641, "WinterWolf", false, "Husgor"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(5824, 17987, "WinterWolf", true, "Husgol"));
                    ArtificialIntelligenceAccess.push(new Unit(5685, 17633, "WinterWolf", false, "Husgorr"));
                }
                //mid west group
                ArtificialIntelligenceAccess.push(new Unit(3537, 21261, "WinterWolf", false, "Hasga"));
                ArtificialIntelligenceAccess.push(new Unit(4215, 21803, "WinterWolf", false, "Hasgora"));
                ArtificialIntelligenceAccess.push(new Unit(4546, 19176, "WinterWolf", false, "Holsgor"));
                //mideasterly woofs
                ArtificialIntelligenceAccess.push(new Unit(119, 24403, "WinterWolf", false, "Lusgora"));
                ArtificialIntelligenceAccess.push(new Unit(-2350, 17359, "WinterWolf", false, "Lusgorr"));

                //glutids
                ArtificialIntelligenceAccess.push(new Unit(6317, 21218, "Glutid", true, "Gluptard", {patrolStops: 5, patrolLoop: true, route:[[6037, 21507], [6833, 21852], [6568, 22378], [7140, 22077], [6317, 21218]]}));
                ArtificialIntelligenceAccess.push(new Unit(6021, 26071, "Glutid", false, "Gluptario", {patrolStops: 3, patrolLoop: true, route:[[6709, 26233], [6448, 26854], [6021, 26071]]}));
                ArtificialIntelligenceAccess.push(new Unit(6293, 26383, "Glutid", false, "Gluptaria", {patrolStops: 1, patrolLoop: true, route:[[6293, 26383]]}));
                ArtificialIntelligenceAccess.push(new Unit(2674, 17194, "Glutid", false, "Gluptariela", {patrolStops: 1, patrolLoop: true, route:[[2674, 17194]]}));
                ArtificialIntelligenceAccess.push(new Unit(2874, 20010, "Glutid", true, "Gluptiel", {patrolStops: 2, patrolLoop: true, route:[[3445, 19710], [2874, 20010]]}));

                //Scenery
                scenicList.push(new Scenery("bushkaPlant", 5940, 17870, -1.5, true));
                scenicList.push(new Scenery("bushkaPlant", 2608, 24656, 8, true));
                scenicList.push(new Scenery("bushkaPlant", 202, 23641, -5.2, true));

                scenicList.push(new Scenery("wightbloomPlant", 5160 , 26153, 0.25, true));
                scenicList.push(new Scenery("wightbloomPlant", -2114 , 25954, -3, true));
                scenicList.push(new Scenery("wightbloomPlant", -1606 , 22788, -4.78, true));

                scenicList.push(new Scenery("tyrniPlant", 3391, 22531, 0, true));
                scenicList.push(new Scenery("tyrniPlant", -1157, 25240, -5.5, true));

                scenicList.push(new Scenery("stone", -1033 , 22648, 6, 1, 1));
                scenicList.push(new Scenery("stone", -949 , 22322, 4, 0.5, 3));
                scenicList.push(new Scenery("stone", 56 , 23763, 2, 1.5, 1));

                //Hyeling Camps
                //ArtificialIntelligenceAccess.push(new Unit(10041, 8746, "Hyeling", true, "White Hammer"));
                //ArtificialIntelligenceAccess.push(new Unit(9711, 8503, "HyelingSoldier", false, "Running Stone"));
                //scenicList.push(new Scenery("largeCeremonialRockCircle", 10075 , 8783, 0, true));
                //scenicList.push(new Scenery("hyelingTent", 9199 , 8965, 1/2 * Math.PI, true));
                //scenicList.push(new Scenery("hyelingSkeleton", 10071 , 8788, 0.12, true));

                change = "n2";
            }
        }
        else if (region == "n3")
        {
            if (change != "n3")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                //meant for the map

                //humans

                //balkur
                if (Math.round(Math.random()))
                {
                    ArtificialIntelligenceAccess.push(new Unit(6014, 29100, "Balkur", true, "Kalovesh"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(6014, 29100, "Balkur", false, "Kalobech"));
                }
                ArtificialIntelligenceAccess.push(new Unit(4674, 34221, "Balkur", true, "Kalobesh"));

                //waanti
                ArtificialIntelligenceAccess.push(new Unit(6268, 30642, "Waanti", "baby", "yiam"));
                ArtificialIntelligenceAccess.push(new Unit(6037, 30878, "Waanti", "baby", "yiom"));
                ArtificialIntelligenceAccess.push(new Unit(6022, 30704, "Waanti", "baby", "yiilmera"));
                ArtificialIntelligenceAccess.push(new Unit(6330, 31214, "Waanti", false, "Ilmurdara"));
                ArtificialIntelligenceAccess.push(new Unit(5665, 30990, "Waanti", false, "Genjura"));
                ArtificialIntelligenceAccess.push(new Unit(5449, 30427, "Waanti", true, "Jolhaffsmur"));
                ArtificialIntelligenceAccess.push(new Unit(6642, 32479, "Waanti", true, "Jolhaffsmuro"));
                ArtificialIntelligenceAccess.push(new Unit(2067, 32440, "Waanti", false, "Genjuraya"));
                ArtificialIntelligenceAccess.push(new Unit(1969, 32293, "Waanti", true, "Ialhoffsmurre"));
                ArtificialIntelligenceAccess.push(new Unit(253, 34639, "Waanti", "baby", "yiaam"));
                ArtificialIntelligenceAccess.push(new Unit(-16, 34447, "Waanti", "baby", "yialmera"));
                ArtificialIntelligenceAccess.push(new Unit(431, 34196, "Waanti", false, "Almurdara"));
                ArtificialIntelligenceAccess.push(new Unit(84, 34672, "Waanti", false, "Jenjura"));
                ArtificialIntelligenceAccess.push(new Unit(-207, 34260, "Waanti", true, "Golhaffsmur"));
                ArtificialIntelligenceAccess.push(new Unit(-31, 33917, "Waanti", true, "Holhaffsmuro"));
                ArtificialIntelligenceAccess.push(new Unit(545, 34903, "Waanti", false, "Lenjurara"));
                ArtificialIntelligenceAccess.push(new Unit(-40, 35098, "Waanti", true, "Falhoffsmurrek"));
                ArtificialIntelligenceAccess.push(new Unit(322, 29192, "Waanti", false, "Lenjura"));
                ArtificialIntelligenceAccess.push(new Unit(-411, 29166, "Waanti", "baby", "Lolhaffsmur"));
                ArtificialIntelligenceAccess.push(new Unit(65, 28751, "Waanti", true, "Hiolhaffsmuro"));
                ArtificialIntelligenceAccess.push(new Unit(-50, 28988, "Waanti", false, "Thenjurara"));
                ArtificialIntelligenceAccess.push(new Unit(-343, 28802, "Waanti", true, "Thalhoffsmurrek"));
                ArtificialIntelligenceAccess.push(new Unit(-1944, 28046, "Waanti", "baby", "Lalhaffsmur"));
                ArtificialIntelligenceAccess.push(new Unit(-2338, 28313, "Waanti", true, "Hialhaffsmuro"));
                ArtificialIntelligenceAccess.push(new Unit(-2464, 27845, "Waanti", false, "Thanara"));
                ArtificialIntelligenceAccess.push(new Unit(-1850, 28239, "Waanti", false, "Thihoffsmurrek"));

                if (change != "n4")
                {
                    ArtificialIntelligenceAccess.push(new Unit(1523, 37117, "Waanti", true, "Hioulhioffsmurre"));
                    ArtificialIntelligenceAccess.push(new Unit(1484, 37247, "Waanti", false, "Hioulhioffsmurre"));

                    ArtificialIntelligenceAccess.push(new Unit(2025, 37205, "Waanti", "baby", "Lalhaffsmur"));
                    ArtificialIntelligenceAccess.push(new Unit(2157, 37116, "Waanti", false, "Thanara"));
                }
                if (Math.round(Math.random() * 4) == 1)
                {
                    ArtificialIntelligenceAccess.push(new Unit(2026, 36815, "Waanti", true, "Hialhaffsmuro"));
                }

                //koobu
                ArtificialIntelligenceAccess.push(new Unit(3997, 27954, "Koobu", true, "Kapper"));
                ArtificialIntelligenceAccess.push(new Unit(4653, 28074, "Koobu", false, "Keppler"));
                if (Math.round(Math.random()))
                {
                    ArtificialIntelligenceAccess.push(new Unit(2957, 29014, "Koobu", false, "Kippler"));
                }

                if (Math.round(Math.random()))
                {
                    ArtificialIntelligenceAccess.push(new Unit(-2090, 34378, "Koobu", false, "Kouppler"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(-2090, 34378, "Koobu", true, "Kauppler"));
                }

                if (Math.round(Math.random()))
                {
                    ArtificialIntelligenceAccess.push(new Unit(-2381, 33953, "Koobu", false, "Kuppler"));
                }
                ArtificialIntelligenceAccess.push(new Unit(934, 30135, "Koobu", false, "Kilppar"));


                //winter wolves
                if (change != "n2")
                {
                    ArtificialIntelligenceAccess.push(new Unit(4605, 27278, "WinterWolf", false, "Lusgorre"));
                    if (change == "n4")
                    {
                        ArtificialIntelligenceAccess.push(new Unit(5054, 27117, "WinterWolf", false, "Lusgorria"));
                        ArtificialIntelligenceAccess.push(new Unit(4743, 27010, "WinterWolf", false, "Lusgorrial"));
                    }
                }
                if (Math.round(Math.random() * 5) == 4)
                {
                    ArtificialIntelligenceAccess.push(new Unit(4562, 29644, "WinterWolf", false, "Lusgorrai"));
                    ArtificialIntelligenceAccess.push(new Unit(4207, 29666, "WinterWolf", false, "Lusgorriel"));
                }
                ArtificialIntelligenceAccess.push(new Unit(2905, 36769, "WinterWolf", false, "Lusgorraiya"));

                if (change != "n3w1")
                {
                    ArtificialIntelligenceAccess.push(new Unit(6161, 36572, "WinterWolf", true, "Lusgorrielle"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(6228, 36216, "WinterWolf", false, "Losgorrailia"));
                    ArtificialIntelligenceAccess.push(new Unit(5691, 36371, "WinterWolf", false, "Lisgorriellia"));
                }
                ArtificialIntelligenceAccess.push(new Unit(35, 32208, "WinterWolf", false, "Luusgorrail"));
                ArtificialIntelligenceAccess.push(new Unit(-90, 31873, "WinterWolf", false, "Laasgorriellia"));
                ArtificialIntelligenceAccess.push(new Unit(145, 31910, "WinterWolf", false, "Liusgorrailia"));
                ArtificialIntelligenceAccess.push(new Unit(-387, 32016, "WinterWolf", false, "Loisgorrielle"));
                ArtificialIntelligenceAccess.push(new Unit(-535, 31680, "WinterWolf", false, "Laugorrel"));

                ArtificialIntelligenceAccess.push(new Unit(83, 27616, "WinterWolf", false, "Laurgorrelle"));
                if (Math.round(Math.random()))
                {
                    ArtificialIntelligenceAccess.push(new Unit(292, 36133, "WinterWolf", false, "Luargorrua"));
                    ArtificialIntelligenceAccess.push(new Unit(-243, 36242, "WinterWolf", false, "Luargorru"));
                    ArtificialIntelligenceAccess.push(new Unit(396, 36440, "WinterWolf", false, "Luargurana"));
                }

                //glutids
                //ArtificialIntelligenceAccess.push(new Unit(6317, 21218, "Glutid", true, "Gluptard", {patrolStops: 5, patrolLoop: true, route:[[6037, 21507], [6833, 21852], [6568, 22378], [7140, 22077], [6317, 21218]]}));
                //ArtificialIntelligenceAccess.push(new Unit(2674, 17194, "Glutid", false, "Gluptariela", {patrolStops: 1, patrolLoop: true, route:[[2674, 17194]]}));

                //Plants
                scenicList.push(new Scenery("bushkaPlant", 3207, 27390, 5, true));
                scenicList.push(new Scenery("bushkaPlant", 4497, 27682, 4.8, true));
                scenicList.push(new Scenery("bushkaPlant", 5300, 35493, -6.61, true));
                scenicList.push(new Scenery("bushkaPlant", -2366, 35548, -2.75, true));
                scenicList.push(new Scenery("bushkaPlant", -2182, 34319, 2.75, true));
                scenicList.push(new Scenery("bushkaPlant", -1849, 34052, 4.75, true));
                scenicList.push(new Scenery("bushkaPlant", -1078, 28815, -5.1, true));

                scenicList.push(new Scenery("wightbloomPlant", 4185 , 32149, 10, true));
                scenicList.push(new Scenery("wightbloomPlant", 53 , 30093, -9, true));

                if (change != "n4")
                {
                    scenicList.push(new Scenery("tyrniPlant", 3902, 36896, 6, true));
                }
                else
                {
                    scenicList.push(new Scenery("tyrniPlant", 3575, 36471, 6.5, true));
                }
                scenicList.push(new Scenery("tyrniPlant", 19, 36084, -5.4, true));

                //Scenery
                scenicList.push(new Scenery("stone", 3755 , 29352, 1.2, 2, 2));
                scenicList.push(new Scenery("stone", 4214 , 29229, -4, 1, 3));
                scenicList.push(new Scenery("stone", 4733 , 30127, -3, 1.5, 2));
                if (Math.round(Math.random() * 3) == 3)
                {
                    ArtificialIntelligenceAccess.push(new Unit(3675, 29302, "Soldier", false, "Freydic Hunter", {race: "Freynor", faction: "Freynor", con: 8, speed: 1.1, outfit: ["sealSkinClothing", 0], weapon: ["freydicSpear", [2, 3], 4, 24, 1.25], ranged: [false, "arrow", 5, 1600, 1, 4, 0, "none", 2], patrolStops: 5, patrolLoop: true, route:[[2197, 29577], [3889, 29603], [3736, 30019], [2977, 28941], [3701, 29233]]}));
                    //hunter's camp
                    scenicList.push(new Scenery("tent", 3822, 29306, 1/8 * 2 * Math.PI, true));
                    scenicList.push(new Scenery("deadWaanti", 3755 , 29352, 3.14, 1.6));
                    scenicList.push(new Scenery("campFire", 3757 , 29275, 1, "permaLit"));
                    scenicList.push(new Scenery("item", 3807, 29356, 0, "freynor", ["bucket", 1, -18]));
                    scenicList.push(new Scenery("item", 3797, 29257, 0, "freynor", ["arrow", 3, -9]));
                }
                scenicList.push(new Scenery("stone", 4201 , 28220, 3.6, 0.5, 1));
                scenicList.push(new Scenery("stone", 5626 , 31426, 8.3, 0.5, 3));
                scenicList.push(new Scenery("stone", 6055 , 31963, -2, 0.5, 3));
                scenicList.push(new Scenery("stone", 845 , 35479, 4.444, 1.5, 2));
                scenicList.push(new Scenery("stone", 256 , 35885, 2.8, 0.5, 1));
                scenicList.push(new Scenery("stone", -2069 , 32193, -1, 1, 2));

                //sign to Teshir
                scenicList.push(new Scenery("sign", 1908, 35783, Math.PI / 2, 1, "Teshir City - 109 sectors"));

                //Hyeling Camps
                //ArtificialIntelligenceAccess.push(new Unit(10041, 8746, "Hyeling", true, "White Hammer"));
                //ArtificialIntelligenceAccess.push(new Unit(9711, 8503, "HyelingSoldier", false, "Running Stone"));
                //scenicList.push(new Scenery("largeCeremonialRockCircle", 10075 , 8783, 0, true));
                //scenicList.push(new Scenery("hyelingTent", 9199 , 8965, 1/2 * Math.PI, true));
                //scenicList.push(new Scenery("hyelingSkeleton", 10071 , 8788, 0.12, true));

                change = "n3";
            }
        }
        else if (region == "n3e1")
        {
            if (change != "n3e1")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units
                scenicList.push(new Scenery("bushkaPlant", -2366, 35548,-2.75, true)); //copied n-3
                scenicList.push(new Scenery("bushkaPlant", -2182, 34319,2.75, true)); //copied n-3
                scenicList.push(new Scenery("tyrniPlant", -12270, 38406,0.4, true)); //copied n-4-e-1

                ArtificialIntelligenceAccess.push(new Unit(-6594.548123905186, 34395.87516001048, "WinterWolf", false, "magicmantrty1"));
                ArtificialIntelligenceAccess.push(new Unit(-6402.9162373760755, 34298.07859537538, "WinterWolf", false, "magicmantrty2"));
                ArtificialIntelligenceAccess.push(new Unit(-7342.786479590106, 28032.411261432484, "WinterWolf", false, "magicmantrt1"));
                ArtificialIntelligenceAccess.push(new Unit(-7161.446259501089, 28142.0415370401, "WinterWolf", false, "magicmantrt2"));
                ArtificialIntelligenceAccess.push(new Unit(-7518.7273323387635, 28132.110805093063, "WinterWolf", false, "magicmantrt3"));
                ArtificialIntelligenceAccess.push(new Unit(-7481.193771158077, 28049.037828083056, "WinterWolf", false, "magicmantrt4"));
                ArtificialIntelligenceAccess.push(new Unit(-6226.50515357677, 32289.240062358083, "WinterWolf", false, "magicmantre1"));
                ArtificialIntelligenceAccess.push(new Unit(-5992.850502575595, 32363.91489732386, "WinterWolf", false, "magicmantre2"));
                ArtificialIntelligenceAccess.push(new Unit(-6076.461293128425, 32442.971879488203, "WinterWolf", false, "magicmantrte3"));
                ArtificialIntelligenceAccess.push(new Unit(-12593.742137168469, 27905.233704785045, "WinterWolf", false, "magicmantrtr1"));
                ArtificialIntelligenceAccess.push(new Unit(-12452.756042594201, 27982.405040762547, "WinterWolf", false, "magicmantrtr2"));
                ArtificialIntelligenceAccess.push(new Unit(-12490.174766136717, 28081.417425018735, "WinterWolf", false, "magicmantrtr3"));
                ArtificialIntelligenceAccess.push(new Unit(-12376.928637991152, 28063.920791104607, "WinterWolf", false, "magicmantrtr4"));
                ArtificialIntelligenceAccess.push(new Unit(-12274.935028666405, 27982.15226392913, "WinterWolf", false, "magicmantrtr5"));
                ArtificialIntelligenceAccess.push(new Unit(-4188.712078244745, 30521.25036802544, "WinterWolf", false, "magicmantru1"));
                ArtificialIntelligenceAccess.push(new Unit(-4260.643068573382, 30628.33249476115, "WinterWolf", false, "magicmantru2"));
                ArtificialIntelligenceAccess.push(new Unit(-4458.084877726978, 30489.692432171647, "WinterWolf", false, "magicmantru3"));
                ArtificialIntelligenceAccess.push(new Unit(-6560.7591269710665, 29951.177212853796, "WinterWolf", false, "magicmantru4"));
                ArtificialIntelligenceAccess.push(new Unit(-6667.609730478248, 29868.672014598505, "WinterWolf", false, "magicmantru5"));
                ArtificialIntelligenceAccess.push(new Unit(-12259.155193158167, 34153.577892206624, "WinterWolf", false, "magicmantry1"));
                ArtificialIntelligenceAccess.push(new Unit(-12334.1895170149, 34296.79708529342, "WinterWolf", false, "magicmantry2"));
                ArtificialIntelligenceAccess.push(new Unit(-12220.541001465752, 34378.367199496606, "WinterWolf", false, "magicmantry3"));
                ArtificialIntelligenceAccess.push(new Unit(-12377.302428770507, 34357.8027508203, "WinterWolf", false, "magicmantry4"));
                ArtificialIntelligenceAccess.push(new Unit(-4314.329468875088, 33852.634934001195, "WinterWolf", false, "magicmantry5"));
                ArtificialIntelligenceAccess.push(new Unit(-4471.613106744669, 33944.30876489119, "WinterWolf", false, "magicmantry6"));
                ArtificialIntelligenceAccess.push(new Unit(-7184.269394650553, 30171.609849255543, "WinterWolf", false, "magicmantrw1"));
                ArtificialIntelligenceAccess.push(new Unit(-7067.5994171469665, 30328.008756573032, "WinterWolf", false, "magicmantrw2"));
                ArtificialIntelligenceAccess.push(new Unit(-7193.627202096532, 30309.3146614275, "WinterWolf", false, "magicmantrw3"));


                ArtificialIntelligenceAccess.push(new Unit(-8397.625202412219, 33024.76254476069, "Waanti", false, "gotetdot1"));
                ArtificialIntelligenceAccess.push(new Unit(-8308.948107922957, 32974.837155598936, "Waanti", true, "gotetdot2"));
                ArtificialIntelligenceAccess.push(new Unit(-8199.566961830593, 33065.30123440185, "Waanti", "baby", "gotetdot3"));
                ArtificialIntelligenceAccess.push(new Unit(-4858.480393969366, 27509.116219504736, "Waanti", false, "gotetdoto1"));
                ArtificialIntelligenceAccess.push(new Unit(-4747.031821693755, 27564.249543707167, "Waanti", true, "gotetdoto2"));
                ArtificialIntelligenceAccess.push(new Unit(-4703.555595557247, 27705.623028886304, "Waanti", "baby", "gotetdoto3"));
                ArtificialIntelligenceAccess.push(new Unit(-4610.047992260398, 27659.46911033468, "Waanti", false, "gotetdoto4"));
                ArtificialIntelligenceAccess.push(new Unit(-8750.443761386332, 33394.66527243566, "Waanti", false, "gotetdotoo1"));
                ArtificialIntelligenceAccess.push(new Unit(-8894.311241039855, 33453.557989100445, "Waanti", true, "gotetdotoo2"));
                ArtificialIntelligenceAccess.push(new Unit(-8935.141687680236, 33397.42474829503, "Waanti", "baby", "gotetdotoo3"));
                ArtificialIntelligenceAccess.push(new Unit(-8945.942018561283, 33579.20292161423, "Waanti", "baby", "gotetdotoo4"));
                ArtificialIntelligenceAccess.push(new Unit(-10411.19076846095, 27585.16544975032, "Waanti", "baby", "gotetdoto5"));
                ArtificialIntelligenceAccess.push(new Unit(-10321.646102323266, 27652.024031738347, "Waanti", false, "gotetdoto6"));
                ArtificialIntelligenceAccess.push(new Unit(-8765.721889882363, 32953.68094195766, "Waanti", true, "gotetdotoo2"));


                ArtificialIntelligenceAccess.push(new Unit(-11289.652797686398, 32309.008802314052, "Balkur", false, "onofangoo1"));
                ArtificialIntelligenceAccess.push(new Unit(-9958.834319219719, 30999.05514875268, "Balkur", true, "onofangoo2"));
                ArtificialIntelligenceAccess.push(new Unit(-9480.810261361903, 36394.138313717565, "Balkur", false, "onofangoo3"));


                ArtificialIntelligenceAccess.push(new Unit(-7619.233094074731, 36046.80342991437, "Glutid", false, "nontthintern1"));


                ArtificialIntelligenceAccess.push(new Unit(-11626.931345371848, 31495.13739942016, "Koobu", false, "nontthintern2"));


                scenicList.push(new Scenery("tyrniPlant", -11542.707841740761, 34651.58370915247, 5, true));
                scenicList.push(new Scenery("tyrniPlant", -8778.192150375602, 28491.313632465168, 2, true));


                scenicList.push(new Scenery("wightbloomPlant", -11643.275901334484, 28642.70650974215, 2.3, true));
                scenicList.push(new Scenery("wightbloomPlant", -9536.46853963971, 35580.79217535402, 2.7, true));


                scenicList.push(new Scenery("bushkaPlant", -6787.447368237949, 35252.422335468604, 2, true));
                scenicList.push(new Scenery("bushkaPlant", -4656.421725646723, 30725.247571784173, 2.7, true));
                scenicList.push(new Scenery("bushkaPlant", -10400.352071066496, 27904.77441159803, 3.1, true));
                scenicList.push(new Scenery("bushkaPlant", -9354.11673140219, 31121.187468650434, 4.5, true));
                scenicList.push(new Scenery("bushkaPlant", -8487.432399296966, 32673.89932783247, 7.32, true));


                scenicList.push(new Scenery("stone", -10780.86358615623, 33407.02725397667, 2.47, 1.5, 1));
                scenicList.push(new Scenery("stone", -4655.321152171745, 28949.77082195361, 4.83, 1, 2));



                change = "n3e1";
            }
        }
        else if (region == "n3e2")
        {
            if (change != "n3e2")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units
                scenicList.push(new Scenery("tyrniPlant", -12270, 38406,0.4, true, undefined)); //copied n3e1
                scenicList.push(new Scenery("tyrniPlant", -18577, 37887,12, true, undefined)); //copied n4e2
                scenicList.push(new Scenery("bushkaPlant", -24579.767035972964, 29710.62484832691,2.4, true, undefined)); //copied n3e3

                scenicList.push(new Scenery("freydicBuilding6", -16999.333841996897, 29550.19655674712, 0, true));
                scenicList.push(new Scenery("freydicBuilding2", -17403.198628943817, 29219.711923635354, 0, true));
                scenicList.push(new Scenery("freydicBuilding5", -18199.882971324358, 29682.498852227724 , 0, true));
                scenicList.push(new Scenery("hearth", -16997.59397932014, 29446.717361504663, Math.PI, "lit"));
                scenicList.push(new Scenery("bed", -17052.817148408816, 29630.54686097753, 1/2 * Math.PI, false));
                scenicList.push(new Scenery("smallTable", -16932.95947478025, 29608.009611099435, 0, true));
                scenicList.push(new Scenery("stumpStoolSml", -16897.95947478025, 29608.009611099435, 0, true));
                scenicList.push(new Scenery("stumpStoolSml", -16937.714270816454, 29639.07174475587, 0.5, true));
                scenicList.push(new Scenery("walrusHideRug", -16999.12072315639, 29505.366760894154, 0, true));

                if (uniqueChars.borjeLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Borje")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-16915.5408401604, 29483.2507404696, "Person", false, "Borje", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["northernClothing", 0], weapon: ["none", [0.5, 0.5], 0, 3, 1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-16923.114490790205, 29492.464466580546]]}));
                    }
                }
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Borje")
                    {
                        ArtificialIntelligenceAccess[i].healthMAX = 9;
                        ArtificialIntelligenceAccess[i].health = 9;
                    }
                }

                if (uniqueChars.toraanLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Toraan")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-17189.08953497796, 29438.435636632497, "Soldier", false, "Toraan", {race: "Freynor", faction: "Freynor", con: 8, speed: 1.2, outfit: ["walrusLeatherArmour", 4.5], weapon: ["freydicSword", [12, 10], 0, 27, 1.2], ranged: [false, "arrow", 10, 1700, 9, 10, 0, "none", 3], patrolStops: 0, patrolLoop: false, route:[[2197, 29577]]}));
                    }
                }

                ArtificialIntelligenceAccess.push(new Unit(-18384.652280093153, 29290.965093653027, "Person", false, "Freydic Villager", {race: "Freynor", faction: "Freynor", personality: "scared", outfit: ["sealSkinClothing", 0], weapon: ["none", [0.3, 0.5], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 4, patrolLoop: true, route:[[-18384.652280093153, 29290.965093653027],[-18162.53496075678, 29292.5353367585], [-18177.797361137065, 29581.22725435828], [-18021.250168647108, 29281.649856888424]]}));
                ArtificialIntelligenceAccess.push(new Unit(-17424.897529045953, 29205.92363122701, "Person", false, "Freydic Boy", {race: "Freynor", faction: "Freynor", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["none", [0.3, 0.5], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-17424.897529045953, 29210.92363122701]], kid: true}));
                ArtificialIntelligenceAccess.push(new Unit(-17772.9250363152, 29971.29155378809, "Person", false, "Freydic Villager", {race: "Freynor", faction: "Freynor", personality: "scared", outfit: ["sealSkinClothing", 0], weapon: ["none", [0.3, 0.5], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[ -17762.507932356035, 29987.798579446793]]}));

                scenicList.push(new Scenery("crate", -17083.386291740775, 29467.21453515712, 0.689, 1, [1.2]));
                scenicList.push(new Scenery("crate", -18240.851154442997, 29594.184108439156, 1.689, 1, [1.4]));
                scenicList.push(new Scenery("campFire", -18222.626531827413, 29688.13490756426, Math.PI, "permaLit"));
                scenicList.push(new Scenery("campFire", -17404.670538184117, 29258.48042091994, 0, "permaLit"));
                scenicList.push(new Scenery("item", -18207.732914567543, 29718.552312377895, 0, "freynor", ["waantiPelt", 1, -16]));
                scenicList.push(new Scenery("well", -17874.899358456736, 29386.097299878875, 4, true));
                scenicList.push(new Scenery("stumpStoolSml", -17502.596107243986, 29239.520895409903, 1.3, true));
                scenicList.push(new Scenery("walrusHideRug", -17390.00570656015, 29199.216000570297, 0.5, 0.8));

                scenicList.push(new Scenery("harstPlant", -17628.02503613716, 30002.25915250937, 0, true));
                scenicList.push(new Scenery("harstPlant", -17625.678590794094, 30051.046322867707, 4.2, true));
                scenicList.push(new Scenery("harstPlant", -17627.89493186588, 30103.524806157264, 7.765, true));
                scenicList.push(new Scenery("harstPlant", -17627.415345148213, 30154.818325482247, 0.954, true));
                scenicList.push(new Scenery("harstPlant", -17629.287618118728, 30204.693568548522, 2.122, true));
                scenicList.push(new Scenery("harstPlant", -17633.190124577955, 30252.532039793634, 1, true));
                scenicList.push(new Scenery("harstPlant", -17712.20807270571, 30249.701183657075, 2.6, true));
                scenicList.push(new Scenery("harstPlant", -17711.42241526334, 30206.22742625111, 6.777, true));
                scenicList.push(new Scenery("harstPlant", -17711.395948377376, 30161.44104499505, 1.231, true));
                scenicList.push(new Scenery("harstPlant", -17711.711256798528, 30101.310001628535, 2.211, true));
                scenicList.push(new Scenery("harstPlant", -17709.416137803724, 30043.217131603782, 4.445, true));
                scenicList.push(new Scenery("harstPlant", -17708.329061945788, 29997.8155779444, 1.9, true));
                scenicList.push(new Scenery("harstPlant", -18464.419543636734, 29341.89243409437, 0, true));
                scenicList.push(new Scenery("harstPlant", -18462.773636756243, 29291.24230853304, 7.4, true));
                scenicList.push(new Scenery("harstPlant", -18466.56083565042, 29240.896047624672, 1, true));
                scenicList.push(new Scenery("harstPlant", -18461.234581376517, 29190.599890673977, 3, true));
                scenicList.push(new Scenery("harstPlant", -18465.908660605317, 29138.57179689397, 2.55, true));
                scenicList.push(new Scenery("harstPlant", -18384.067326395645, 29108.920098870658, 2.244, true));
                scenicList.push(new Scenery("harstPlant", -18381.68912532967, 29169.122272558903, 9,03, true));
                scenicList.push(new Scenery("harstPlant", -18384.480567314935, 29231.642051379793, 5.05, true));
                scenicList.push(new Scenery("harstPlant", -18318.20061845351, 29232.660487131172, 1.33, true));
                scenicList.push(new Scenery("harstPlant", -18317.791102503186, 29178.306123897124, 9.5, true));
                scenicList.push(new Scenery("harstPlant", -18314.21945861911, 29114.268232902516, 0.76, true));

                scenicList.push(new Scenery("suuliPlant", -17821.6382860251, 30019.906998498067, 9.5, true));
                scenicList.push(new Scenery("suuliPlant", -17826.04588175291, 30091.773145810635, 8.788, true));
                scenicList.push(new Scenery("suuliPlant", -17823.255955263634, 30157.854162425305, 4.738, true));
                scenicList.push(new Scenery("suuliPlant", -17823.193135248093, 30238.165932009226, 7.338, true));

                scenicList.push(new Scenery("carrotPlant", -18238.74294008849, 29332.624998767486, 0, true));
                scenicList.push(new Scenery("carrotPlant", -18262.7006704118, 29330.624548291795, 1.6, true));
                scenicList.push(new Scenery("carrotPlant", -18284.095445119812, 29331.09998772974, 7.333, true));
                scenicList.push(new Scenery("carrotPlant", -18295.678064850785, 29332.54781519611, 1.621, true));
                scenicList.push(new Scenery("carrotPlant", -18313.650874913, 29330.44634371044, 2.33, true));
                scenicList.push(new Scenery("carrotPlant", -18336.800486107302, 29330.653244710273, 3.3, true));
                scenicList.push(new Scenery("carrotPlant", -18358.22648800877, 29330.381416151537, 9.5, true));
                scenicList.push(new Scenery("carrotPlant", -18381.55740351884, 29330.749187968962, 2.5, true));
                scenicList.push(new Scenery("carrotPlant", -18394.47075952721, 29330.31758623863, 6.8, true));
                scenicList.push(new Scenery("carrotPlant", -18410.646844177885, 29330.379951051185, 1.3, true));

                scenicList.push(new Scenery("potatoPlant", -18244.06934031433, 29143.75550909314, 1.99, true));
                scenicList.push(new Scenery("potatoPlant", -18243.38323484635, 29161.251198526454, 2.559, true));
                scenicList.push(new Scenery("potatoPlant", -18243.78177795084, 29123.38883763527, 1.766, true));
                scenicList.push(new Scenery("potatoPlant", -18244.60085822076, 29186.676084564187, 4.9, true));
                scenicList.push(new Scenery("potatoPlant", -18246.63455538746, 29202.161929041486, 9.99, true));
                scenicList.push(new Scenery("potatoPlant",  -18244.00044580451, 29225.308171119595, 4, true));
                scenicList.push(new Scenery("potatoPlant", -18245.83493040452, 29248.581493932415, 3.088, true));

                scenicList.push(new Scenery("bushkaPlant", -16360.882919327933, 28110.89668745125, 2.28, true));
                scenicList.push(new Scenery("bushkaPlant", -16861.05448739995, 34154.355816149146, 7.68, true));

                scenicList.push(new Scenery("tyrniPlant", -20649.520715525316, 33111.60752248434, 3.08, true));

                ArtificialIntelligenceAccess.push(new Unit(-22313.28488298986, 27918.38328116592, "WinterWolf", false, "solngsofar1"));
                ArtificialIntelligenceAccess.push(new Unit(-22434.73946077224, 28038.781732184965, "WinterWolf", false, "solngsofar2"));
                ArtificialIntelligenceAccess.push(new Unit(-22221.99344814038, 28027.83086941942, "WinterWolf", false, "solngsofar3"));
                ArtificialIntelligenceAccess.push(new Unit(-17831.169330501307, 34472.58610217072, "WinterWolf", false, "solngsofar4"));
                ArtificialIntelligenceAccess.push(new Unit(-17680.108680600177, 34272.85045837649, "WinterWolf", false, "solngsofar5"));
                ArtificialIntelligenceAccess.push(new Unit(-14094.218479237996, 32685.076346327503, "WinterWolf", false, "solngsofar6"));
                ArtificialIntelligenceAccess.push(new Unit(-14263.56774346841, 32762.75233659766, "WinterWolf", false, "solngsofar7"));
                ArtificialIntelligenceAccess.push(new Unit(-14392.101175224283, 32678.17721971114, "WinterWolf", false, "solngsofar8"));
                ArtificialIntelligenceAccess.push(new Unit(-14473.883092172104, 32855.060189854266, "WinterWolf", false, "solngsofar9"));

                ArtificialIntelligenceAccess.push(new Unit(-20367.30359751636, 30778.127382746818, "Waanti", false, "tupipn1"));
                ArtificialIntelligenceAccess.push(new Unit(-20509.67778950778, 30835.234155921553, "Waanti", false, "tupipn2"));
                ArtificialIntelligenceAccess.push(new Unit(-20563.67909886312, 31006.824077790476, "Waanti", true, "tupipn3"));
                ArtificialIntelligenceAccess.push(new Unit(-20810.994938219123, 30895.90751596053, "Waanti", false, "tupipn4"));
                ArtificialIntelligenceAccess.push(new Unit(-20619.940714965443, 30798.23747565065, "Waanti", "baby", "tupipn5"));
                ArtificialIntelligenceAccess.push(new Unit(-18678.31980563123, 32075.86910498143, "Waanti", false, "tupipn6"));
                ArtificialIntelligenceAccess.push(new Unit(-18492.492229056876, 31980.496358006716, "Waanti", false, "tupipn7"));

                ArtificialIntelligenceAccess.push(new Unit(-14826.946888724635, 35459.609090473976, "Koobu", false, "evrnonymre1"));
                ArtificialIntelligenceAccess.push(new Unit(-22698.263178172656, 32660.06591951922, "Koobu", false, "evrnonymre2"));

                ArtificialIntelligenceAccess.push(new Unit(-21545.132260316503, 35648.642978940836, "Balkur", false, "thnghtisalmstdy1"));

                change = "n3e2";
            }
        }
        else if (region == "n4e4")
        {
            if (change != "n4e4")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                ArtificialIntelligenceAccess.push(new Unit(-42340.03893392867, 37240.77787414235, "Anemone", true, "stalkerhonn1"));
                ArtificialIntelligenceAccess.push(new Unit(-42447.86015319768, 37410.40389540804, "Anemone", false, "stalkerhonn2"));


                ArtificialIntelligenceAccess.push(new Unit(-43046.19725664218, 37749.928180841576, "Walrus", false, "dordiy1"));
                ArtificialIntelligenceAccess.push(new Unit(-43462.84744082605, 38045.575833509116, "Walrus", false, "dordiy2"));


                ArtificialIntelligenceAccess.push(new Unit(-41705.39754693937, 38064.506014923776, "Cangrejo", "baby", "nonttegym"));

                ArtificialIntelligenceAccess.push(new Unit(-33660.5641054271, 33336.24611237418, "Anemone", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-33949.90688543095, 33037.498972502995, "Anemone", true, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-33705.58092424714, 31423.760184634175, "Anemone", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-33093.504291548576, 31443.382516252455, "Anemone", false, "docile"));

                scenicList.push(new Scenery("stone", -33214.71309851145, 31190.899376384637, 1.4, 2, 1));
                scenicList.push(new Scenery("stone", -33492.8574964295, 31511.247832931724, 2.8, 2.5, 2));
                scenicList.push(new Scenery("stone", -33715.23937013808, 31200.56716837959, 1, 4, 1));
                scenicList.push(new Scenery("stone", -33680.67264789111, 31296.654563613884, 8, 1, 3));
                scenicList.push(new Scenery("stone", -42421.383280122565, 34437.64008677247, 2.7, 1.5, 2));


                change = "n4e4";
            }
        }
        else if (region == "n3e4")
        {
            if (change != "n3e4")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION

                ArtificialIntelligenceAccess.push(new Unit(-42111.759180935485, 36114.91901192816, "Walrus", false, "smprfy1"));

                ArtificialIntelligenceAccess.push(new Unit(-42522.75012881963, 35490.253514282536, "Walrus", false, "smprfy2"));
                ArtificialIntelligenceAccess.push(new Unit(-41993.47000144826, 35703.797511478464, "Walrus", true, "smprfy3"));
                ArtificialIntelligenceAccess.push(new Unit(-43028.606830714605, 35741.72381453059, "Walrus", false, "smprfy4"));
                ArtificialIntelligenceAccess.push(new Unit(-42201.860954271935, 34250.4194343319, "Walrus", false, "smprfy5"));


                ArtificialIntelligenceAccess.push(new Unit(-33745.3909239559, 32259.710532259825, "Seal", false, "tututuna1"));
                ArtificialIntelligenceAccess.push(new Unit(-33595.53253569636, 32023.695549282544, "Seal", true, "tututuna2"));
                ArtificialIntelligenceAccess.push(new Unit(-33689.94035592042, 29728.515889251707, "Seal", false, "tututuna3"));
                ArtificialIntelligenceAccess.push(new Unit(-33755.575616853406, 30160.594551753507, "Seal", false, "tututuna4"));
                ArtificialIntelligenceAccess.push(new Unit(-41441.42012652418, 29328.31009889604, "Seal", false, "tututune1"));
                ArtificialIntelligenceAccess.push(new Unit(-41742.8647434569, 29617.325015934715, "Seal", true, "tututune2"));
                ArtificialIntelligenceAccess.push(new Unit(-42163.45159170879, 30058.662401196405, "Seal", false, "tututune3"));
                ArtificialIntelligenceAccess.push(new Unit(-41743.08143147891, 30457.565825181286, "Seal", "baby", "tututune4"));
                ArtificialIntelligenceAccess.push(new Unit(-41802.209475225616, 29053.088050702063, "Seal", false, "tututunae5"));
                ArtificialIntelligenceAccess.push(new Unit(-41648.01443241861, 29979.378116739186, "Seal", "baby", "tututunae6"));


                ArtificialIntelligenceAccess.push(new Unit(-33660.5641054271, 33336.24611237418, "Anemone", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-33949.90688543095, 33037.498972502995, "Anemone", true, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-33705.58092424714, 31423.760184634175, "Anemone", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-33093.504291548576, 31443.382516252455, "Anemone", false, "docile"));


                ArtificialIntelligenceAccess.push(new Unit(-33370.25901137692, 31353.55269010998, "Cangrejo", false, "vanchezee1"));
                ArtificialIntelligenceAccess.push(new Unit(-43396.44436703687, 34113.25860501157, "Cangrejo", "baby", "vanchezee2"));
                ArtificialIntelligenceAccess.push(new Unit(-43364.98142658613, 32262.526149031666, "Cangrejo", "baby", "vanchezee3"));


                scenicList.push(new Scenery("stone", -33214.71309851145, 31190.899376384637, 1.4, 2, 1));
                scenicList.push(new Scenery("stone", -33492.8574964295, 31511.247832931724, 2.8, 2.5, 2));
                scenicList.push(new Scenery("stone", -33715.23937013808, 31200.56716837959, 1, 4, 1));
                scenicList.push(new Scenery("stone", -33680.67264789111, 31296.654563613884, 8, 1, 3));
                scenicList.push(new Scenery("stone", -42421.383280122565, 34437.64008677247, 2.7, 1.5, 2));


                change = "n3e4";
            }
        }
        else if (region == "n3e3")
        {
            if (change != "n3e3")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                ArtificialIntelligenceAccess.push(new Unit(-24967.95942467394, 34904.07320386577, "Balkur", false, "cmpstlker1"));
                ArtificialIntelligenceAccess.push(new Unit(-29185.656933914248, 28455.918205698195, "Balkur", false, "cmpstlker2"));
                ArtificialIntelligenceAccess.push(new Unit(-25456.654951844466, 29518.7138493818, "Balkur", true, "cmpstlker3"));
                ArtificialIntelligenceAccess.push(new Unit(-24893.162323898978, 27667.89608869298, "Balkur", false, "cmpstlker4"));


                ArtificialIntelligenceAccess.push(new Unit(-27765.800400812022, 36517.97476152174, "Waanti", false, "tngr1"));
                ArtificialIntelligenceAccess.push(new Unit(-27630.639007442165, 36645.15265099273, "Waanti", true, "tngr2"));
                ArtificialIntelligenceAccess.push(new Unit(-27377.056417070977, 36411.324002670655, "Waanti", "baby", "tngr3"));
                ArtificialIntelligenceAccess.push(new Unit(-27931.343447492814, 36615.14376255685, "Waanti", "baby", "tngr4"));
                ArtificialIntelligenceAccess.push(new Unit(-27816.011968942392, 36432.869667153696, "Waanti", false, "tngr5"));
                ArtificialIntelligenceAccess.push(new Unit(-25498.24922768541, 29448.766416831444, "Waanti", "baby", "sacfice1"));
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "cmpstlker3")
                    {
                        ArtificialIntelligenceAccess[i].speed += 0.8;
                        ArtificialIntelligenceAccess[i].tamable = false;
                    }
                    if (ArtificialIntelligenceAccess[i].ID == "sacfice1")
                    {
                        ArtificialIntelligenceAccess[i].health = 0;
                        ArtificialIntelligenceAccess[i].killNotByPlayer = true;
                    }
                }
                ArtificialIntelligenceAccess.push(new Unit(-27367.712572900316, 32228.10959239897, "Waanti", false, "tngy1"));
                ArtificialIntelligenceAccess.push(new Unit(-27162.159994063044, 31961.29165783033, "Waanti", true, "tngy2"));
                ArtificialIntelligenceAccess.push(new Unit(-27461.759247391838, 32058.609165561244, "Waanti", false, "tngy3"));


                ArtificialIntelligenceAccess.push(new Unit(-31395.048765221312, 36285.86053319131, "Walrus", false, "scrutiny1"));
                ArtificialIntelligenceAccess.push(new Unit(-31902.35312359663, 35456.25224430066, "Walrus", false, "scrutiny2"));
                ArtificialIntelligenceAccess.push(new Unit(-30764.04257803273, 34900.038215475746, "Walrus", false, "scrutiny3"));


                ArtificialIntelligenceAccess.push(new Unit(-29235.896462266453, 36482.181020806696, "Cangrejo", "baby", "vouintir1"));
                ArtificialIntelligenceAccess.push(new Unit(-30668.893172050703, 33721.43176966589, "Cangrejo", "baby", "vouintir2"));


                ArtificialIntelligenceAccess.push(new Unit(-32691.237637196624, 33921.65347196153, "Anemone", false, "stalkerhool1"));


                ArtificialIntelligenceAccess.push(new Unit(-32706.960467719055, 33359.562733959836, "Seal", false, "wblytmywmy1"));


                ArtificialIntelligenceAccess.push(new Unit(-25350.323530124344, 32972.761036110816, "Koobu", false, "itsntcmplcated1"));
                ArtificialIntelligenceAccess.push(new Unit(-30287.36841990456, 28811.98734587055, "Koobu", true, "itsntcmplcated2"));
                ArtificialIntelligenceAccess.push(new Unit(-31084.24376777069, 32060.871485880547, "Koobu", false, "itsntcmplcated3"));

                ArtificialIntelligenceAccess.push(new Unit(-32392.372884032484, 30347.110838287772, "WinterWolf", false, "Hzurbo1"));
                ArtificialIntelligenceAccess.push(new Unit(-32171.775122566265, 30417.753388949455, "WinterWolf", false, "Hzurbo2"));
                ArtificialIntelligenceAccess.push(new Unit(-26223.312452045066, 30343.25882804846, "WinterWolf", false, "huzurz1"));
                ArtificialIntelligenceAccess.push(new Unit(-26404.44958262146, 30515.755681089504, "WinterWolf", false, "huzurz2"));
                ArtificialIntelligenceAccess.push(new Unit(-26536.08880915773, 30448.928101451518, "WinterWolf", false, "huzurz3"));
                ArtificialIntelligenceAccess.push(new Unit(-26494.945352246457, 30588.555075710472, "WinterWolf", false, "huzurz4"));
                ArtificialIntelligenceAccess.push(new Unit(-29828.254154540125, 30486.444002092612, "WinterWolf", false, "huzurg1"));
                ArtificialIntelligenceAccess.push(new Unit(-29941.466619892566, 30380.038747189898, "WinterWolf", false, "huzurg2"));
                ArtificialIntelligenceAccess.push(new Unit(-30143.3062248042, 30595.62956301059, "WinterWolf", false, "huzurg3"));
                ArtificialIntelligenceAccess.push(new Unit(-30233.102929329176, 30404.811138338813, "WinterWolf", false, "huzurg4"));
                ArtificialIntelligenceAccess.push(new Unit(-30318.99846467842, 30282.930647321762, "WinterWolf", false, "huzurg5"));
                ArtificialIntelligenceAccess.push(new Unit(-32064.438845216286, 27984.982013473324, "WinterWolf", false, "huzurg2"));
                ArtificialIntelligenceAccess.push(new Unit(-31872.419673779503, 27882.49325325861, "WinterWolf", false, "huzurg3"));
                ArtificialIntelligenceAccess.push(new Unit(-32075.802163638626, 27691.04517131147, "WinterWolf", false, "huzurg4"));
                ArtificialIntelligenceAccess.push(new Unit(-31914.295994060154, 27782.3887139283, "WinterWolf", false, "huzurg5"));


                ArtificialIntelligenceAccess.push(new Unit(-28462.101959652846, 34818.071087664954, "Glutid", false, "sngpanoman1"));
                ArtificialIntelligenceAccess.push(new Unit(-28343.54698307122, 33560.04813433556, "Glutid", false, "sngpanoman2"));


                scenicList.push(new Scenery("stone", -32447.763967050763, 35175.28294914136, 2.9, 2.5, 2));
                scenicList.push(new Scenery("stone", -25112.64827629818, 31198.186311487774, 1.8, 1.5, 1));
                scenicList.push(new Scenery("stone", -29235.39772742259, 29741.92860948029, 8, 1, 2));
                scenicList.push(new Scenery("stone", -31092.521753799338, 33573.939427528676, 5.8, 2, 3));
                scenicList.push(new Scenery("stone", -25890.42711273434, 29317.137409856678, 3, 3.5, 1));
                scenicList.push(new Scenery("stone", -25481.42755807914, 28996.078605749128, 4, 1, 2));


                scenicList.push(new Scenery("bushkaPlant", -24856.498904779022, 33587.887711522686, 4.1, true));
                scenicList.push(new Scenery("bushkaPlant", -29544.362278867964, 27887.011265302477, 1.74, true));
                scenicList.push(new Scenery("bushkaPlant", -24579.767035972964, 29710.62484832691, 2.4, true));
                scenicList.push(new Scenery("bushkaPlant", -26096.715330318548, 33985.61101417645, 7.7, true));


                scenicList.push(new Scenery("tyrniPlant", -32005.599820848212, 30348.763155454504, 6.5, true));
                scenicList.push(new Scenery("tyrniPlant", -30582.881968957674, 28936.546094378376, 2.2, true));


                scenicList.push(new Scenery("wightbloomPlant", -29493.573989007087, 31708.7908913202, 1.3, true));

                ArtificialIntelligenceAccess.push(new Unit(-33660.5641054271, 33336.24611237418, "Anemone", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-33949.90688543095, 33037.498972502995, "Anemone", true, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-33705.58092424714, 31423.760184634175, "Anemone", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-33093.504291548576, 31443.382516252455, "Anemone", false, "docile"));


                ArtificialIntelligenceAccess.push(new Unit(-33370.25901137692, 31353.55269010998, "Cangrejo", "baby", "vanchezee1"));
                ArtificialIntelligenceAccess.push(new Unit(-43396.44436703687, 34113.25860501157, "Cangrejo", "baby", "vanchezee2"));
                ArtificialIntelligenceAccess.push(new Unit(-43364.98142658613, 32262.526149031666, "Cangrejo", "baby", "vanchezee3"));

                scenicList.push(new Scenery("stone", -33214.71309851145, 31190.899376384637, 1.4, 2, 1));
                scenicList.push(new Scenery("stone", -33492.8574964295, 31511.247832931724, 2.8, 2.5, 2));
                scenicList.push(new Scenery("stone", -33715.23937013808, 31200.56716837959, 1, 4, 1));
                scenicList.push(new Scenery("stone", -33680.67264789111, 31296.654563613884, 8, 1, 3));
                scenicList.push(new Scenery("stone", -42421.383280122565, 34437.64008677247, 2.7, 1.5, 2));

                change = "n3e3";
            }
        }
        else if (region == "n2e3")
        {
            if (change != "n2e3")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                ArtificialIntelligenceAccess.push(new Unit(-24394.873863380508, 26263.458181243084, "Waanti", false, "tnty1"));
                ArtificialIntelligenceAccess.push(new Unit(-24556.92669607412, 26325.707141135532, "Waanti", "baby", "tnty2"));
                ArtificialIntelligenceAccess.push(new Unit(-24729.821260953184, 26182.997014516153, "Waanti", "baby", "tnty3"));
                ArtificialIntelligenceAccess.push(new Unit(-24545.30077183146, 26003.21316323584, "Waanti", false, "tnty4"));
                ArtificialIntelligenceAccess.push(new Unit(-25135.568984843852, 26198.336459452876, "Waanti", true, "tnty5"));
                ArtificialIntelligenceAccess.push(new Unit(-24783.54010627586, 26122.70002406026, "Waanti", false, "tnty6"));
                ArtificialIntelligenceAccess.push(new Unit(-32668.659491720045, 23722.032962053865, "Waanti", false, "tniy7"));
                ArtificialIntelligenceAccess.push(new Unit(-32470.802903084674, 23585.62282032213, "Waanti", false, "tniy8"));
                ArtificialIntelligenceAccess.push(new Unit(-32391.077828056506, 23646.830526770038, "Waanti", false, "tniy9"));
                ArtificialIntelligenceAccess.push(new Unit(-32334.582997982583, 23843.768424589423, "Waanti", false, "tniy10"));
                ArtificialIntelligenceAccess.push(new Unit(-32157.29417216764, 23600.182005255738, "Waanti", false, "tniy11"));
                ArtificialIntelligenceAccess.push(new Unit(-28932.19589410725, 18933.272698348446, "Waanti", false, "tniy12"));
                ArtificialIntelligenceAccess.push(new Unit(-28764.723287994788, 19006.982312127937, "Waanti", "baby", "tniy13"));
                ArtificialIntelligenceAccess.push(new Unit(-28724.11997462559, 18920.266936199292, "Waanti", "baby", "tniy14"));
                ArtificialIntelligenceAccess.push(new Unit(-29033.3938954674, 19129.090214874843, "Waanti", true, "tniy15"));
                ArtificialIntelligenceAccess.push(new Unit(-31741.103528914744, 22261.891981188135, "Waanti", true, "tniy16"));
                ArtificialIntelligenceAccess.push(new Unit(-31504.30713662937, 22171.32199300939, "Waanti", false, "tniy17"));
                ArtificialIntelligenceAccess.push(new Unit(-31564.242690983898, 22069.146063028234, "Waanti", false, "tniy18"));
                ArtificialIntelligenceAccess.push(new Unit(-31412.546078374744, 22219.46654405548, "Waanti", false, "tniy19"));
                ArtificialIntelligenceAccess.push(new Unit(-33067.70965035682, 21945.572445948106, "Waanti", false, "tniy20"));
                ArtificialIntelligenceAccess.push(new Unit(-32954.21054056608, 22064.854008471146, "Waanti", false, "tniy21"));


                ArtificialIntelligenceAccess.push(new Unit(-29289.45480711395, 26414.59020870034, "WinterWolf", false, "Hzubo1"));
                ArtificialIntelligenceAccess.push(new Unit(-29445.859696893767, 26341.686031302117, "WinterWolf", false, "Hzubo2"));
                ArtificialIntelligenceAccess.push(new Unit(-29548.04168984535, 26470.41339566191, "WinterWolf", false, "Hzubo3"));
                ArtificialIntelligenceAccess.push(new Unit(-32924.25223983715, 25554.585481024813, "WinterWolf", false, "Hzubo4"));
                ArtificialIntelligenceAccess.push(new Unit(-32769.834272759465, 25615.69605417635, "WinterWolf", false, "Hzubo5"));
                ArtificialIntelligenceAccess.push(new Unit(-32926.3126602709, 25442.55756406224, "WinterWolf", false, "Hzubo6"));
                ArtificialIntelligenceAccess.push(new Unit(-33060.74684061924, 25502.90636489994, "WinterWolf", false, "Hzubo7"));
                ArtificialIntelligenceAccess.push(new Unit(-26573.424610597325, 20927.594754735277, "WinterWolf", false, "Hzubo8"));
                ArtificialIntelligenceAccess.push(new Unit(-26607.831259603536, 20803.848417534275, "WinterWolf", false, "Hzubo9"));
                ArtificialIntelligenceAccess.push(new Unit(-26669.086201327274, 21034.58953969123, "WinterWolf", false, "Hzubo11"));
                ArtificialIntelligenceAccess.push(new Unit(-28610.912412843325, 23663.285200944156, "WinterWolf", false, "Hzubo12"));
                ArtificialIntelligenceAccess.push(new Unit(-28789.026492502828, 23609.460613553343, "WinterWolf", false, "Hzubo13"));
                ArtificialIntelligenceAccess.push(new Unit(-28952.618215435697, 23730.853118405837, "WinterWolf", false, "Hzubo14"));
                ArtificialIntelligenceAccess.push(new Unit(-28727.576188102146, 23303.124270510543, "WinterWolf", false, "Hzubo15"));
                ArtificialIntelligenceAccess.push(new Unit(-28365.056648295216, 23385.364952609816, "WinterWolf", false, "Hzubo16"));
                ArtificialIntelligenceAccess.push(new Unit(-28411.117738601915, 23587.08023635718, "WinterWolf", false, "Hzubo17"));
                ArtificialIntelligenceAccess.push(new Unit(-28461.92988986958, 23442.1077420702, "WinterWolf", true, "Hzubo18"));
                ArtificialIntelligenceAccess.push(new Unit(-24465.182165151044, 22593.429802619765, "WinterWolf", false, "Hzubo19"));
                ArtificialIntelligenceAccess.push(new Unit(-24584.615643652756, 22501.566214192142, "WinterWolf", false, "Hzubo20"));


                ArtificialIntelligenceAccess.push(new Unit(-30726.45319272623, 25061.062426296052, "Koobu", false, "itcarenono1"));


                ArtificialIntelligenceAccess.push(new Unit(-31560.98926858056, 18959.310001778125, "Balkur", true, "crmpsinmibck1"));
                ArtificialIntelligenceAccess.push(new Unit(-30333.896456414106, 21084.181520593902, "Balkur", true, "crmpsinmibck2"));


                scenicList.push(new Scenery("bushkaPlant", -31618.878109125275, 22395.717538808563, 1.7, true));
                scenicList.push(new Scenery("bushkaPlant", -27090.03605111447, 18608.78509760645, 1.3, true));
                scenicList.push(new Scenery("bushkaPlant", -25565.95726347849, 23237.58390571455, 4.9, true));


                scenicList.push(new Scenery("wightbloomPlant", -28854.710505786046, 24339.73083299406, 1.3, true));
                scenicList.push(new Scenery("wightbloomPlant", -31576.62936184594, 19867.944981955723, 8.1, true));


                scenicList.push(new Scenery("stone", -29131.932890356777, 18604.82658462505, 3.69, 1.5, 2));
                scenicList.push(new Scenery("stone", -29176.675163637476, 24275.852516896208, 7.59, 2, 1));
                scenicList.push(new Scenery("stone", -29072.773987733963, 24163.835112436973, 3.21, 1, 1));


                ArtificialIntelligenceAccess.push(new Unit(-24898.17018574119, 18265.605674861054, "Glutid", true, "idntwnja1", {patrolStops: 3, patrolLoop: true, route:[[-25059.60864539978, 18152.15040859906],[-24581.247073860417, 17443.8952333381],[-24289.567315336546, 18362.951400317117]]}));
                ArtificialIntelligenceAccess.push(new Unit(-24636.39109868669, 17888.938536115613, "Glutid", false, "idntwnja2", {patrolStops: 3, patrolLoop: true, route:[[-24802.823186399695, 17814.22611192361],[-25487.430681586964, 17766.065139931878],[-25990.307583110935, 17418.963998206244]]}));
                ArtificialIntelligenceAccess.push(new Unit(-26495.673907745586, 25189.75023394599, "Glutid", false, "idntwnja3", {patrolStops: 3, patrolLoop: true, route:[[-26264.998781461793, 24920.973223177218],[-26821.138786631887, 24861.554783505497],[-27470.673902695988, 25373.661417930907]]}));
                ArtificialIntelligenceAccess.push(new Unit(-26442.356883331893, 24908.6064531166, "Glutid", false, "idntwnja4", {patrolStops: 3, patrolLoop: true, route:[[-26482.9470021397, 24522.720911514105],[-25480.4984705612, 24817.976509546166],[-27498.828241206007, 24918.193322836312]]}));
                ArtificialIntelligenceAccess.push(new Unit(-32512.408514735576, 17427.14388751892, "Glutid", false, "idntwnja5", {patrolStops: 3, patrolLoop: true, route:[[-31952.92971121277, 17173.38663560203],[-33093.19964476192, 17201.544250355513],[-33174.803278232226, 18012.76812964399]]}));

                change = "n2e3";
            }
        }
        else if (region == "n2e4")
        {
            if (change != "n2e4")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION

                ArtificialIntelligenceAccess.push(new Unit(-42385.22403954498, 26350.63303092983, "Seal", false, "tannban1"));


                ArtificialIntelligenceAccess.push(new Unit(-41294.64712565839, 25017.284098555483, "WinterWolf", false, "horponoodle1"));
                ArtificialIntelligenceAccess.push(new Unit(-41456.65574082972, 24843.244286716956, "WinterWolf", false, "horponoodle2"));
                ArtificialIntelligenceAccess.push(new Unit(-41659.660920375536, 24915.380274234943, "WinterWolf", false, "horponoodle3"));
                ArtificialIntelligenceAccess.push(new Unit(-42425.188574745225, 20029.906670258468, "WinterWolf", false, "hyrponoodle1"));
                ArtificialIntelligenceAccess.push(new Unit(-42588.2849968137, 20123.011917271502, "WinterWolf", false, "hyrponoodle2"));
                ArtificialIntelligenceAccess.push(new Unit(-42690.659723232704, 19872.931013618836, "WinterWolf", false, "hyrponoodle3"));
                ArtificialIntelligenceAccess.push(new Unit(-42555.70673152464, 20231.299117753544, "WinterWolf", false, "hyrponoodle4"));
                ArtificialIntelligenceAccess.push(new Unit(-42829.47253791309, 20094.793357523333, "WinterWolf", false, "hyrponoodle5"));
                ArtificialIntelligenceAccess.push(new Unit(-42590.95889973786, 19969.966818944256, "WinterWolf", true, "hyrponoodle6"));
                ArtificialIntelligenceAccess.push(new Unit(-34983.191801807436, 20195.833411108517, "WinterWolf", false, "hupupy1"));
                ArtificialIntelligenceAccess.push(new Unit(-34934.46054563522, 20007.92664872743, "WinterWolf", false, "hupupy2"));
                ArtificialIntelligenceAccess.push(new Unit(-34803.817327115314, 20120.655827132112, "WinterWolf", false, "hupupy3"));


                ArtificialIntelligenceAccess.push(new Unit(-43402.78237227514, 23422.013190550308, "Waanti", false, "tnguu1"));
                ArtificialIntelligenceAccess.push(new Unit(-43026.34066899121, 23443.0056315027 , "Waanti", true, "tnguu2"));
                ArtificialIntelligenceAccess.push(new Unit(-43331.75665099093, 23577.22596962192, "Waanti", "baby", "tnguu3"));
                ArtificialIntelligenceAccess.push(new Unit(-42657.84674774035, 22666.61716467939, "Waanti", false, "tnguu4"));
                ArtificialIntelligenceAccess.push(new Unit(-42871.258437328004, 22497.818471987463, "Waanti", false, "tnguu5"));
                ArtificialIntelligenceAccess.push(new Unit(-41194.97666637915, 18758.84193507348, "Waanti", false, "tnguu4"));
                ArtificialIntelligenceAccess.push(new Unit(-41068.79784516783, 18914.676475811466, "Waanti", false, "tnguu5"));


                scenicList.push(new Scenery("bushkaPlant", -42329.73856150902, 25132.679061400213, 3.7, true));
                scenicList.push(new Scenery("bushkaPlant", -41424.78866313792, 21415.844668066857, 2, true));
                scenicList.push(new Scenery("bushkaPlant", -42350.6775887099, 17924.70656695527, 2.87, true));


                ArtificialIntelligenceAccess.push(new Unit(-40574.82001502175, 23439.388805878618, "Cangrejo", "baby", "hidnbtlshp1"));


                ArtificialIntelligenceAccess.push(new Unit(-43615.2866734504, 18133.822488451544, "Glutid", false, "idntwnna1"));
                ArtificialIntelligenceAccess.push(new Unit(-42981.554246904096, 17447.890261400073, "Glutid", false, "idntwnna2", {patrolStops: 2, patrolLoop: true, route:[[-43020.97907953195, 17439.815875368033],[-41912.751353404725, 17676.683132880364]]}));


                ArtificialIntelligenceAccess.push(new Unit(-34759.27983289633, 17774.442251530327, "Balkur", true, "meahmor1"));


                ArtificialIntelligenceAccess.push(new Unit(-34545.129363006614, 23522.319400106324, "Anemone", false, "nonayermoreno1"));


                change = "n2e4";
            }
        }
        else if (region == "n4w1")
        {
            if (change != "n4w1")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                //meant for the map

                //humans

                //balkur
                ArtificialIntelligenceAccess.push(new Unit(11823, 39177, "Balkur", true, "Kalsh"));

                //waanti
                ArtificialIntelligenceAccess.push(new Unit(15521, 37831, "Waanti", "baby", "yami"));
                ArtificialIntelligenceAccess.push(new Unit(15263, 37565, "Waanti", false, "yamia"));
                ArtificialIntelligenceAccess.push(new Unit(13536, 38015, "Waanti", false, "yamiana"));
                ArtificialIntelligenceAccess.push(new Unit(13719, 37676, "Waanti", true, "yamonn"));

                //koobu
                ArtificialIntelligenceAccess.push(new Unit(9793, 43009, "Koobu", false, "Koplepaka"));
                ArtificialIntelligenceAccess.push(new Unit(9130, 42067, "Koobu", true, "Koplipaca"));


                //winter wolves
                ArtificialIntelligenceAccess.push(new Unit(15879, 40932, "WinterWolf", false, "Laleg"));
                ArtificialIntelligenceAccess.push(new Unit(15676, 40621, "WinterWolf", false, "Laleug"));
                ArtificialIntelligenceAccess.push(new Unit(8826, 41225, "WinterWolf", false, "Laleugwe"));

                //glutids
                //ArtificialIntelligenceAccess.push(new Unit(-5986, 42096, "Glutid", true, "Gluupto", {patrolStops: 6, patrolLoop: true, route:[[-6169, 41490], [-7261, 41806], [-7605, 41527], [-7190, 42889], [-5876, 43183], [-5986, 42096]]}));
                //ArtificialIntelligenceAccess.push(new Unit(-7659, 42050, "Glutid", false, "Gluho", {patrolStops: 1, patrolLoop: true, route:[[-7659, 42050]]}));



                //beach creatures
                ArtificialIntelligenceAccess.push(new Unit(12368, 47128, "Cangrejo", false, "Cangrev"));
                ArtificialIntelligenceAccess.push(new Unit(16155, 46846, "Cangrejo", "baby", "Cangrevi"));
                ArtificialIntelligenceAccess.push(new Unit(16277, 45472, "Cangrejo", "baby", "Cangrevol"));
                ArtificialIntelligenceAccess.push(new Unit(11034, 43918, "Cangrejo", true, "Crange"));
                ArtificialIntelligenceAccess.push(new Unit(11958, 45773, "Cangrejo", "baby", "Cangreve"));

                //anemones
                ArtificialIntelligenceAccess.push(new Unit(15545, 46314, "Anemone", false, "slime"));
                ArtificialIntelligenceAccess.push(new Unit(14983, 45268, "Anemone", true, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(8572, 46630, "Anemone", false, "slimolm"));
                ArtificialIntelligenceAccess.push(new Unit(9164, 46506, "Anemone", true, "sally slimer"));
                ArtificialIntelligenceAccess.push(new Unit(12708, 45190, "Anemone", "baby", "docile"));
                ArtificialIntelligenceAccess.push(new Unit(10061, 46557, "Anemone", "baby", "slikim"));

                //seals
                //ArtificialIntelligenceAccess.push(new Unit(-4505, 45575, "Seal", false, "arf"));

                //mites
                ArtificialIntelligenceAccess.push(new Unit(14550, 44842, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(14570, 44822, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(14560, 44852, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(14540, 44837, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(14530, 44832, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(14550, 44825, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(16165, 44171, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(16165, 44191, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(16180, 44175, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(9984, 44944, "BeachMite", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(10004, 44950, "BeachMite", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(9994, 44934, "BeachMite", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(9998, 44944, "BeachMite", false, "docile"));



                //cloimids
                ArtificialIntelligenceAccess.push(new Unit(12076, 45331, "Cloimid", true, "moistClambyGrope", {rotation: 120/360 * 2 * Math.PI}));
                ArtificialIntelligenceAccess.push(new Unit(12105, 45345, "Cloimid", false, "moistClambySwaddle", {rotation: 180/360 * 2 * Math.PI}));
                ArtificialIntelligenceAccess.push(new Unit(15841, 45594, "Cloimid", false, "moistClambyEngulfment", {rotation: 0/360 * 2 * Math.PI}));
                ArtificialIntelligenceAccess.push(new Unit(15861, 45583, "Cloimid", false, "moistClambyCapture", {rotation: 90/360 * 2 * Math.PI}));

                //Plants
                scenicList.push(new Scenery("bushkaPlant", 14638, 37697, 23, true));
                scenicList.push(new Scenery("tyrniPlant", 9530, 42815, 5.5555, true));
                scenicList.push(new Scenery("tyrniPlant", 12266, 39549, 0.4, true));
                scenicList.push(new Scenery("tyrniPlant", 13358, 40837, -2.8, true));
                scenicList.push(new Scenery("wightbloomPlant", 9434, 40978, 9.9, true));


                //beached kelp
                var rnd = Math.random();
                if (rnd <= 0.3)
                {
                    scenicList.push(new Scenery("beachedKelp", 10980, 44193, 14, 1));
                }
                else if (rnd <= 0.65)
                {
                    scenicList.push(new Scenery("beachedKelp", 12848, 43088, -6.9, 1));
                }
                else
                {
                    scenicList.push(new Scenery("beachedKelp", 14871, 44704, 2, 2));
                }

                //Scenery
                scenicList.push(new Scenery("stone", 12553, 45953, -3, 2, 3));
                scenicList.push(new Scenery("stone", 11666, 45702, -1.2, 1, 1));
                scenicList.push(new Scenery("stone", 12093, 45368, 5.7, 1.5, 1));
                scenicList.push(new Scenery("stone", 12060, 45342, -7.7, 1, 2));
                scenicList.push(new Scenery("stone", 12008, 45870, -9.25, 0.5, 2));
                scenicList.push(new Scenery("stone", 13454, 45674, -6, 1.5, 3));
                scenicList.push(new Scenery("stone", 13059, 44992, -6, 1, 2));
                scenicList.push(new Scenery("stone", 12704, 45575, 4, 0.5, 1));
                scenicList.push(new Scenery("stone", 15860, 45602, 8.111, 1, 3));


                if (uniqueChars.jalmariLDS && uniqueChars.rannukLDS) //pirates land 1/4 times the map loads to hand over the jarl's cut of stolen goods and currency
                {
                    if (Math.random() >= 0.75)
                    {
                        scenicList.push(new Scenery("floatingBoat", 14654, 46479, Math.PI - 0.2, true));
                        scenicList.push(new Scenery("floatingBoat", 14035, 46372, Math.PI - 0.05, true));
                        scenicList.push(new Scenery("floatingBoat", 14330, 46673, 1/2 * Math.PI + 0.3, true));
                        scenicList.push(new Scenery("crate", 14325, 45966, -1.6/4 * Math.PI, 2, [0.9]));
                        scenicList.push(new Scenery("crate", 14033, 46363, 2.9/4 * Math.PI, 2, [0.65]));
                        ArtificialIntelligenceAccess.push(new Unit(14357, 45823, "Soldier", false, "Stambjord Conspirator", {race: "Freynor", faction: "hostile", con: 8, speed: 1.45, outfit: ["chainArmour", 7.5], weapon: ["freydicSword", [8, 8], 0, 16, 1.1], ranged: [false, "arrow", 7, 2000, 1, 6, 0, "none", 1.50], patrolStops: 1, patrolLoop: false, route:[[14345, 45927]]}));
                        ArtificialIntelligenceAccess.push(new Unit(14596, 46211, "Soldier", false, "Salt-Blood Conspirator", {race: "Freynor", faction: "hostile", con: 5, speed: 1.4, outfit: ["sealSkinClothing", 0], weapon: ["freydicSpear", [4, 4], 4, 16, 2.5], ranged: [false, "arrow", 4, 1000, 1, 3, 0, "none", 2.25], patrolStops: 1, patrolLoop: false, route:[[14551, 46087]]}));
                        ArtificialIntelligenceAccess.push(new Unit(14338, 46674, "Soldier", false, "Salt-Blood Conspirator", {race: "Freynor", faction: "hostile", con: 7, speed: 0, outfit: ["sealSkinClothing", 0], weapon: ["longbow", [4, 4], 4, 16, 2.5], ranged: [true, "oiledArrow", 6, 2000, 1, 6, 0, "fire", 1.38], patrolStops: 0, patrolLoop: false, route:[[14551, 46087]]}));
                        ArtificialIntelligenceAccess.push(new Unit(14123, 46202, "Soldier", false, "Salt-Blood Conspirator", {race: "Freynor", faction: "hostile", con: 10, speed: 1.3, outfit: ["walrusLeatherArmour", 6], weapon: ["freydicSword", [7, 6], 0, 16, 1.15], ranged: [false, "arrow", 4, 1000, 1, 3, 0, "none", 2.25], patrolStops: 1, patrolLoop: false, route:[[14295, 45996]]}));
                    }
                }

                //algae
                scenicList.push(new Scenery("algae", 12110, 45387, 4.4, 3));
                scenicList.push(new Scenery("algae", 12077, 45370, 3, 2));
                scenicList.push(new Scenery("algae", 11680, 45700, 3, 0));
                scenicList.push(new Scenery("algae", 12539, 45944, 3, 1));
                scenicList.push(new Scenery("algae", 13440, 45674, 9, 3));
                scenicList.push(new Scenery("algae", 13458, 45663, -11, 1));
                scenicList.push(new Scenery("algae", 16395, 45745, -1, 3));

                //Hyeling Camps
                //ArtificialIntelligenceAccess.push(new Unit(10041, 8746, "Hyeling", true, "White Hammer"));
                //ArtificialIntelligenceAccess.push(new Unit(9711, 8503, "HyelingSoldier", false, "Running Stone"));
                //scenicList.push(new Scenery("largeCeremonialRockCircle", 10075 , 8783, 0, true));
                //scenicList.push(new Scenery("hyelingTent", 9199 , 8965, 1/2 * Math.PI, true));
                //scenicList.push(new Scenery("hyelingSkeleton", 10071 , 8788, 0.12, true));

                change = "n4w1";
            }
        }
        else if (region == "n4")
        {
            if (change != "n4")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                //meant for the map

                //humans

                //balkur
                //ArtificialIntelligenceAccess.push(new Unit(4674, 34221, "Balkur", true, "Kalobesh"));

                //waanti
                ArtificialIntelligenceAccess.push(new Unit(4592, 40636, "Waanti", "baby", "yiam"));
                ArtificialIntelligenceAccess.push(new Unit(4922, 40968, "Waanti", true, "yiam"));
                ArtificialIntelligenceAccess.push(new Unit(4480, 40755, "Waanti", false, "yiam"));

                //koobu
                ArtificialIntelligenceAccess.push(new Unit(6077, 39074, "Koobu", true, "Kooper"));
                ArtificialIntelligenceAccess.push(new Unit(-256, 39271, "Koobu", false, "Kouperr"));


                //winter wolves
                ArtificialIntelligenceAccess.push(new Unit(-1750, 37746, "WinterWolf", false, "Laugorrela"));
                ArtificialIntelligenceAccess.push(new Unit(-1952, 37576, "WinterWolf", false, "Laugorreli"));
                ArtificialIntelligenceAccess.push(new Unit(-2507, 37794, "WinterWolf", false, "Laugorrele"));
                ArtificialIntelligenceAccess.push(new Unit(-2462, 37602, "WinterWolf", false, "Laugorrelo"));

                //glutids
                ArtificialIntelligenceAccess.push(new Unit(3105, 39083, "Glutid", true, "Gluuptarg", {patrolStops: 5, patrolLoop: true, route:[[2547, 38775], [2060, 39066], [1805, 38576], [3082, 38393], [3105, 39083]]}));
                ArtificialIntelligenceAccess.push(new Unit(4084, 38917, "Glutid", false, "Gluho", {patrolStops: 1, patrolLoop: true, route:[[4084, 38917]]}));
                ArtificialIntelligenceAccess.push(new Unit(5167, 37697, "Glutid", false, "Gluho", {patrolStops: 3, patrolLoop: true, route:[[4186, 38091], [4854, 38220], [5167, 37697]]}));

                //beach creatures
                ArtificialIntelligenceAccess.push(new Unit(3918, 46085, "Cangrejo", "baby", "pincher"));
                ArtificialIntelligenceAccess.push(new Unit(3940, 45556, "Cangrejo", "baby", "pinchy"));
                if (Math.round(Math.random() * 3) == 2)
                {
                    ArtificialIntelligenceAccess.push(new Unit(1899, 45526, "Cangrejo", false, "pincharette"));
                }
                else
                {
                    if (Math.round(Math.random()))
                    {
                        ArtificialIntelligenceAccess.push(new Unit(1899, 45526, "Anemone", false, "slimer"));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(1899, 45526, "Anemone", "baby", "slimal"));
                    }
                }
                //anemones
                ArtificialIntelligenceAccess.push(new Unit(4505, 46018, "Anemone", true, "slimar"));
                if (change != "n4w1")
                {
                    ArtificialIntelligenceAccess.push(new Unit(6237, 46128, "Anemone", false, "slimic"));
                    ArtificialIntelligenceAccess.push(new Unit(6748, 45976, "Anemone", "baby", "slimy"));
                    ArtificialIntelligenceAccess.push(new Unit(6691, 45447, "Seal", false, "uf"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(6237, 46128, "Seal", true, "oof"));
                }
                //seals
                ArtificialIntelligenceAccess.push(new Unit(6282, 45115, "Seal", false, "uf"));
                ArtificialIntelligenceAccess.push(new Unit(881, 43637, "Seal", true, "arf"));
                ArtificialIntelligenceAccess.push(new Unit(301, 44174, "Seal", true, "urf"));
                ArtificialIntelligenceAccess.push(new Unit(675, 45843, "Seal", false, "ouf"));
                ArtificialIntelligenceAccess.push(new Unit(622, 46092, "Seal", "baby", "auf"));
                ArtificialIntelligenceAccess.push(new Unit(6, 45851, "Seal", true, "ourf"));
                ArtificialIntelligenceAccess.push(new Unit(-368, 46245, "Seal", false, "aurf"));
                ArtificialIntelligenceAccess.push(new Unit(-609, 45823, "Seal", false, "ouourf"));
                ArtificialIntelligenceAccess.push(new Unit(-210, 46421, "Seal", "baby", "oof"));
                ArtificialIntelligenceAccess.push(new Unit(-2542, 46364, "Seal", true, "aaurf"));
                ArtificialIntelligenceAccess.push(new Unit(-2256, 45723, "Seal", false, "auurf"));
                ArtificialIntelligenceAccess.push(new Unit(-1686, 46378, "Seal", false, "ouuoourf"));
                ArtificialIntelligenceAccess.push(new Unit(-2456, 46135, "Seal", "baby", "oaouf"));
                ArtificialIntelligenceAccess.push(new Unit(-2080, 43806, "Seal", false, "oaourf"));


                //mites
                ArtificialIntelligenceAccess.push(new Unit(3402, 45274, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(4121, 44340, "BeachMite", true, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(5415, 45022, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(5419, 45032, "BeachMite", true, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(5410, 45020, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(-2305, 44720, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(-2315, 44710, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(6088, 44272, "BeachMite", true, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(6080, 44270, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(6075, 44277, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(6095, 44275, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(4156, 44677, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(4150, 44670, "BeachMite", false, "bit"));

                //cloimids
                ArtificialIntelligenceAccess.push(new Unit(4721, 45874, "Cloimid", true, "moistClambyTickle", {rotation: -110/360 * 2 * Math.PI}));
                ArtificialIntelligenceAccess.push(new Unit(4707, 45837, "Cloimid", false, "moistClambyFondle", {rotation: -155/360 * 2 * Math.PI}));
                ArtificialIntelligenceAccess.push(new Unit(4679, 45836, "Cloimid", false, "moistClambyLick", {rotation: -235/360 * 2 * Math.PI}));
                ArtificialIntelligenceAccess.push(new Unit(4476, 44980, "Cloimid", true, "moistClambyTickles", {rotation: -90/360 * 2 * Math.PI}));
                ArtificialIntelligenceAccess.push(new Unit(4435, 44970, "Cloimid", false, "moistClambyLicks", {rotation: -45/360 * 2 * Math.PI}));
                ArtificialIntelligenceAccess.push(new Unit(4503, 44950, "Cloimid", true, "moistClambyKiss", {rotation: -180/360 * 2 * Math.PI}));
                ArtificialIntelligenceAccess.push(new Unit(4424, 44919, "Cloimid", true, "moistClambyKisses", {rotation: 35/360 * 2 * Math.PI}));
                ArtificialIntelligenceAccess.push(new Unit(4440, 44885, "Cloimid", false, "moistClambyHicky", {rotation: 72/360 * 2 * Math.PI}));


                //Plants
                scenicList.push(new Scenery("bushkaPlant", 3504, 42017, 1, true));
                scenicList.push(new Scenery("bushkaPlant", -1493, 38240, 1.55, true));
                scenicList.push(new Scenery("tyrniPlant", 5472, 38523, -7, true));
                scenicList.push(new Scenery("tyrniPlant", -1070, 41492, -3.77, true));
                scenicList.push(new Scenery("tyrniPlant", 3130, 42388, 4.6, true));
                //beached kelp
                if (Math.round(Math.random()))
                {
                    scenicList.push(new Scenery("beachedKelp", 471, 44505, 0, 2));
                }
                else
                {
                    scenicList.push(new Scenery("beachedKelp", 1311, 45052, 0, 2));
                }
                if (Math.round(Math.random()))
                {
                    scenicList.push(new Scenery("beachedKelp", 5025, 44670, 0, 0));
                }
                else
                {
                    scenicList.push(new Scenery("beachedKelp", 5533, 45224, 0, 0));
                }
                //Scenery
                scenicList.push(new Scenery("stone", 4265 , 41412, 2.4, 2, 3));
                scenicList.push(new Scenery("stone", 4897 , 41696, 2.2, 0.5, 2));
                scenicList.push(new Scenery("stone", 3914 , 45416, 6.2, 1.5, 2));
                scenicList.push(new Scenery("stone", 3548 , 45487, 6.9, 1, 1));
                scenicList.push(new Scenery("stone", 3797 , 45784, 1.3, 1, 2));
                scenicList.push(new Scenery("stone", 3329 , 45948, -5.58, 0.5, 3));
                scenicList.push(new Scenery("stone", 2423 , 45781, -8.1, 1.5, 1));
                scenicList.push(new Scenery("stone", 2172 , 45197, 0, 0.5, 2));
                scenicList.push(new Scenery("stone", 5252 , 46088, -2, 2.5, 2));
                scenicList.push(new Scenery("stone", 4750 , 46484, 4.3, 2, 3));
                scenicList.push(new Scenery("stone", 4684 , 45879, 3, 2, 1));
                scenicList.push(new Scenery("stone", 4461 , 44964, 0.5, 1.5, 2));
                scenicList.push(new Scenery("stone", 4467 , 44916, 4, 2, 1));
                scenicList.push(new Scenery("stone", 4417 , 44955, 2.9, 1, 3));

                //fishing spots
                scenicList.push(new Scenery("northernFishingSpot", 5425, 46857, 7, true));

                //algae
                scenicList.push(new Scenery("algae", 4656, 45859, 0, 1));
                scenicList.push(new Scenery("algae", 3889, 45421, 0, 0));
                scenicList.push(new Scenery("algae", 4687, 45890, 0, 2));
                scenicList.push(new Scenery("algae", 3811, 45788, 0, 3));

                //Hyeling Camps
                //ArtificialIntelligenceAccess.push(new Unit(10041, 8746, "Hyeling", true, "White Hammer"));
                //ArtificialIntelligenceAccess.push(new Unit(9711, 8503, "HyelingSoldier", false, "Running Stone"));
                //scenicList.push(new Scenery("largeCeremonialRockCircle", 10075 , 8783, 0, true));
                //scenicList.push(new Scenery("hyelingTent", 9199 , 8965, 1/2 * Math.PI, true));
                //scenicList.push(new Scenery("hyelingSkeleton", 10071 , 8788, 0.12, true));

                change = "n4";
            }
        }
        else if (region == "n4e1")
        {
            if (change != "n4e1")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                //meant for the map

                //humans

                //balkur
                ArtificialIntelligenceAccess.push(new Unit(-11656, 38003, "Balkur", false, "Kalosh"));

                //waanti
                //ArtificialIntelligenceAccess.push(new Unit(4592, 40636, "Waanti", "baby", "yiam"));

                //koobu
                ArtificialIntelligenceAccess.push(new Unit(-7200, 37835, "Koobu", false, "Kooplep"));
                ArtificialIntelligenceAccess.push(new Unit(-8193, 40071, "Koobu", false, "Koplepa"));


                //winter wolves
                ArtificialIntelligenceAccess.push(new Unit(-3927, 41789, "WinterWolf", false, "Laugge"));
                ArtificialIntelligenceAccess.push(new Unit(-4608, 39835, "WinterWolf", false, "Lauggen"));
                ArtificialIntelligenceAccess.push(new Unit(-4970, 39636, "WinterWolf", false, "Laugger"));
                ArtificialIntelligenceAccess.push(new Unit(-4759, 39284, "WinterWolf", false, "Lauggemora"));
                ArtificialIntelligenceAccess.push(new Unit(-4639, 39473, "WinterWolf", false, "Lauggerla"));
                ArtificialIntelligenceAccess.push(new Unit(-4253, 37623, "WinterWolf", true, "Lauggre"));
                ArtificialIntelligenceAccess.push(new Unit(-4113, 38109, "WinterWolf", false, "Lauggema"));
                ArtificialIntelligenceAccess.push(new Unit(-4603, 37889, "WinterWolf", false, "Lauggel"));

                //glutids
                ArtificialIntelligenceAccess.push(new Unit(-5986, 42096, "Glutid", true, "Gluupto", {patrolStops: 6, patrolLoop: true, route:[[-6169, 41490], [-7261, 41806], [-7605, 41527], [-7190, 42889], [-5876, 43183], [-5986, 42096]]}));
                ArtificialIntelligenceAccess.push(new Unit(-7659, 42050, "Glutid", false, "Gluho", {patrolStops: 1, patrolLoop: true, route:[[-7659, 42050]]}));



                //beach creatures
                ArtificialIntelligenceAccess.push(new Unit(-9336, 45440, "Cangrejo", false, "pinche-cangre"));
                ArtificialIntelligenceAccess.push(new Unit(-11160, 45962, "Cangrejo", "baby", "pinchita"));
                ArtificialIntelligenceAccess.push(new Unit(-7705, 46597, "Cangrejo", "baby", "pinchito"));
                ArtificialIntelligenceAccess.push(new Unit(-6043, 46094, "Cangrejo", "baby", "pinche-cabrito"));
                ArtificialIntelligenceAccess.push(new Unit(-4758, 46385, "Cangrejo", "baby", "pinche-cabrita"));
                ArtificialIntelligenceAccess.push(new Unit(-9923, 43166, "Cangrejo", "baby", "orilla"));

                //anemones
                ArtificialIntelligenceAccess.push(new Unit(-12446, 46075, "Anemone", false, "slimar"));
                ArtificialIntelligenceAccess.push(new Unit(-10256, 46819, "Anemone", true, "slimer"));
                ArtificialIntelligenceAccess.push(new Unit(-9720, 46665, "Anemone", false, "slimor"));
                ArtificialIntelligenceAccess.push(new Unit(-9477, 47249, "Anemone", "baby", "slimi"));
                ArtificialIntelligenceAccess.push(new Unit(-7678, 45765, "Anemone", false, "slime"));
                ArtificialIntelligenceAccess.push(new Unit(-12200, 46805, "Anemone", "baby", "slimua"));
                ArtificialIntelligenceAccess.push(new Unit(-11746, 46706, "Anemone", false, "slima"));

                //seals
                ArtificialIntelligenceAccess.push(new Unit(-4157, 45415, "Seal", "baby", "arf"));
                ArtificialIntelligenceAccess.push(new Unit(-4179, 45415, "Seal", "baby", "arf"));
                ArtificialIntelligenceAccess.push(new Unit(-4002, 45734, "Seal", "baby", "arf"));
                ArtificialIntelligenceAccess.push(new Unit(-4820, 45484, "Seal", "baby", "arf"));
                ArtificialIntelligenceAccess.push(new Unit(-4707, 45735, "Seal", false, "arf"));
                ArtificialIntelligenceAccess.push(new Unit(-4505, 45575, "Seal", false, "arf"));
                ArtificialIntelligenceAccess.push(new Unit(-4717, 45118, "Seal", false, "arf"));
                ArtificialIntelligenceAccess.push(new Unit(-4203, 44591, "Seal", false, "arf"));
                ArtificialIntelligenceAccess.push(new Unit(-3991, 54804, "Seal", true, "arf"));
                ArtificialIntelligenceAccess.push(new Unit(-4589, 45271, "Seal", true, "arf"));

                //mites
                ArtificialIntelligenceAccess.push(new Unit(-7904, 45301, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(-7922, 45309, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(-7908, 45316, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(-7918, 45306, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(-5449, 45135, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(-5495, 45144, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(-5493, 45131, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(-7032, 44586, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(-7040, 44590, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(-11788, 44206, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(-11789, 44205, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(-11787, 44207, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(-11788, 44207, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(-11789, 44206, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(-11788, 44205, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(-10390, 43557, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(-9503, 44326, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(-9500, 44328, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(-9501, 44324, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(-9505, 44328, "BeachMite", false, "bit"));

                //cloimids
                ArtificialIntelligenceAccess.push(new Unit(-10732, 46289, "Cloimid", true, "moistClambyRub", {rotation: 0/360 * 2 * Math.PI}));
                ArtificialIntelligenceAccess.push(new Unit(-10731, 46251, "Cloimid", false, "moistClambyLather", {rotation: 60/360 * 2 * Math.PI}));
                ArtificialIntelligenceAccess.push(new Unit(-8909, 45992, "Cloimid", false, "moistClambyGrope", {rotation: -120/360 * 2 * Math.PI}));
                ArtificialIntelligenceAccess.push(new Unit(-8870, 45962, "Cloimid", false, "moistClambySwallow", {rotation: -180/360 * 2 * Math.PI}));
                ArtificialIntelligenceAccess.push(new Unit(-8927, 45937, "Cloimid", false, "moistClambySlurp", {rotation: 90/360 * 2 * Math.PI}));
                ArtificialIntelligenceAccess.push(new Unit(-8951, 45960, "Cloimid", false, "moistClambyIntrusion", {rotation: 15/360 * 2 * Math.PI}));
                ArtificialIntelligenceAccess.push(new Unit(-8942, 45994, "Cloimid", false, "moistClambyMouthfull", {rotation: -75/360 * 2 * Math.PI}));
                ArtificialIntelligenceAccess.push(new Unit(-10533, 45730, "Cloimid", false, "moistClambyEmbrace", {rotation: -90/360 * 2 * Math.PI}));
                ArtificialIntelligenceAccess.push(new Unit(-7049, 45212, "Cloimid", false, "moistClambyTongueTickle", {rotation: -135/360 * 2 * Math.PI}));
                ArtificialIntelligenceAccess.push(new Unit(-7041, 45180, "Cloimid", false, "moistClambyTongueSuckle", {rotation: -200/360 * 2 * Math.PI}));

                //Plants
                scenicList.push(new Scenery("bushkaPlant", -9423, 38704, 20, true));
                scenicList.push(new Scenery("tyrniPlant", -8704, 39293, -4.444, true));
                scenicList.push(new Scenery("tyrniPlant", -12270, 38406, 0.4, true));
                scenicList.push(new Scenery("tyrniPlant", -9849, 41627, -2.4, true));
                scenicList.push(new Scenery("wightbloomPlant", -9294, 38575, 10, true));

                //beached kelp
                if (Math.round(Math.random()))
                {
                    scenicList.push(new Scenery("beachedKelp", -11296, 46004, 5, 1));
                }
                else
                {
                    scenicList.push(new Scenery("beachedKelp", -9629, 45946, 3.5, 1));
                }
                if (Math.round(Math.random()))
                {
                    scenicList.push(new Scenery("beachedKelp", -5522, 45521, 9, 2));
                }
                else
                {
                    scenicList.push(new Scenery("beachedKelp", -4846, 44813, 1, 0));
                }

                //Scenery
                scenicList.push(new Scenery("stone", -8132 , 46141, 4.1, 1.5, 3));
                scenicList.push(new Scenery("stone", -8902 , 45963, 1.82, 2, 1));
                scenicList.push(new Scenery("stone", -10701 , 46286, 2.13, 2, 2));
                scenicList.push(new Scenery("stone", -11038 , 46151, 1.82, 1, 1));
                scenicList.push(new Scenery("stone", -10795 , 45864, 5.77, 0.5, 2));
                scenicList.push(new Scenery("stone", -10527 , 45710, 9.5, 1, 3));
                scenicList.push(new Scenery("stone", -10249 , 45913, 11, 0.5, 3));
                scenicList.push(new Scenery("stone", -9949 , 45785, 1.3, 0.5, 1));

                scenicList.push(new Scenery("stone", -6405, 46194, 5.3, 1.5, 1));
                scenicList.push(new Scenery("stone", -5962, 46343, 8, 1, 1));
                scenicList.push(new Scenery("stone", -5636, 46125, 6.4444, 0.5, 1));
                scenicList.push(new Scenery("stone", -5893, 45380, -1, 2, 2));

                scenicList.push(new Scenery("stone", -7063, 45192, -1, 1.5, 2));

                //algae
                scenicList.push(new Scenery("algae", -8894, 45943, 3.4, 2));
                scenicList.push(new Scenery("algae", -8885, 45955, 3.4, 0));
                scenicList.push(new Scenery("algae", -8920, 45974, 5.5, 1));
                scenicList.push(new Scenery("algae", -6405, 46186, 1, 3));
                scenicList.push(new Scenery("algae", -5890, 45376, -5.678910, 0));
                scenicList.push(new Scenery("algae", -7066, 45190, -2.2, 1));
                scenicList.push(new Scenery("algae", -7059, 45167, -2.45, 3));
                scenicList.push(new Scenery("algae", -7071, 45216, 1.45, 2));

                //Hyeling Camps
                //ArtificialIntelligenceAccess.push(new Unit(10041, 8746, "Hyeling", true, "White Hammer"));
                //ArtificialIntelligenceAccess.push(new Unit(9711, 8503, "HyelingSoldier", false, "Running Stone"));
                //scenicList.push(new Scenery("largeCeremonialRockCircle", 10075 , 8783, 0, true));
                //scenicList.push(new Scenery("hyelingTent", 9199 , 8965, 1/2 * Math.PI, true));
                //scenicList.push(new Scenery("hyelingSkeleton", 10071 , 8788, 0.12, true));

                //sign to Venning
                scenicList.push(new Scenery("sign", -4811, 41074, 0 * Math.PI, 1, "Venning City - 41 sectors"));

                change = "n4e1";
            }
        }
        else if (region == "n4e2")
        {
            if (change != "n4e2")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //if the player is in a certain part of the quest Matrimony: Tor/Stambjord the quest is failed in a particular way if the player leaves the map too early.
                if (quests.matrimonyTorStambjordQuest == "coldfeet")
                {
                    quests.matrimonyTorStambjordQuest = "complete";
                    quests.matrimonyTorStambjordCompletionStyle = "coldfeet";
                    quests.completeQuests.push({name: "Matrimony: Tor/Stambjord", description: "You got cold feet and ran away from the wedding. An action which ended the planned marriage-alliance your father had arranged between your house and Stambjord."});
                    player.freynorFaction -= 150;
                }

                //REGION CREATION
                //Build AI Units

                //meant for the map

                //balkur
                //ArtificialIntelligenceAccess.push(new Unit(4674, 34221, "Balkur", true, "Kalobesh"));

                //waanti
                ArtificialIntelligenceAccess.push(new Unit(-18375, 38736, "Waanti", "baby", "yiamila"));
                ArtificialIntelligenceAccess.push(new Unit(-18094, 38942, "Waanti", false, "yiama"));
                ArtificialIntelligenceAccess.push(new Unit(-17783, 38573, "Waanti", true, "yiammen"));

                //koobu
                ArtificialIntelligenceAccess.push(new Unit(-16773, 38409, "Koobu", true, "Kooblev"));


                //winter wolves
                ArtificialIntelligenceAccess.push(new Unit(-22410, 37769, "WinterWolf", false, "Rrela"));
                ArtificialIntelligenceAccess.push(new Unit(-22643, 37479, "WinterWolf", false, "Rrel"));

                //glutids
                //ArtificialIntelligenceAccess.push(new Unit(3105, 39083, "Glutid", true, "Gluuptarg", {patrolStops: 5, patrolLoop: true, route:[[2547, 38775], [2060, 39066], [1805, 38576], [3082, 38393], [3105, 39083]]}));
                //ArtificialIntelligenceAccess.push(new Unit(4084, 38917, "Glutid", false, "Gluho", {patrolStops: 1, patrolLoop: true, route:[[4084, 38917]]}));

                //beach creatures
                //ArtificialIntelligenceAccess.push(new Unit(3918, 46085, "Cangrejo", "baby", "pincher"));

                //anemones
                //ArtificialIntelligenceAccess.push(new Unit(4505, 46018, "Anemone", true, "slimar"));

                //seals
                //ArtificialIntelligenceAccess.push(new Unit(-2080, 43806, "Seal", false, "oaourf"));

                //mites
                //ArtificialIntelligenceAccess.push(new Unit(3402, 45274, "BeachMite", false, "bit"));

                //cloimids
                //ArtificialIntelligenceAccess.push(new Unit(4721, 45874, "Cloimid", true, "moistClambyTickle", {rotation: -110/360 * 2 * Math.PI}));

                //Plants
                //scenicList.push(new Scenery("bushkaPlant", 3504, 42017, 1, true));
                scenicList.push(new Scenery("tyrniPlant", -18577, 37887, 12, true));
                //scenicList.push(new Scenery("wightbloomPlant", 3130, 42388, 4.6, true));
                for (var i = 0; i < 12; i++)
                {
                    for (var j = 0; j < 7; j++)
                    {
                        scenicList.push(new Scenery("harstPlant", -22144 - j * 35, 39907 + i * 50, Math.random() * 2, "freynor"));
                    }
                }
                for (var i = 0; i < 6; i++)
                {
                    for (var j = 0; j < 5; j++)
                    {
                        scenicList.push(new Scenery("potatoPlant", -22426 - j * 35, 39907 + i * 50, Math.random() * 2, "freynor"));
                    }
                }
                for (var i = 0; i < 6; i++)
                {
                    for (var j = 0; j < 3; j++)
                    {
                        scenicList.push(new Scenery("carrotPlant", -22610 - j * 35, 39907 + i * 50, Math.random() * 2, "freynor"));
                    }
                }
                for (var i = 0; i < 4; i++)
                {
                    for (var j = 0; j < 6; j++)
                    {
                        scenicList.push(new Scenery("suuliPlant", -22426 - j * 50, 40225 + i * 65, Math.random() * 2, "freynor"));
                    }
                }

                //algae
                //scenicList.push(new Scenery("algae", 4656, 45859, 0, 1));

                //Scenery
                //scenicList.push(new Scenery("stone", 4265 , 41412, 2.4, 2, 3));

                //HUMANS

                //unique humans

                if (uniqueChars.siggiLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Siggi the Harborman")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-14540, 44796, "Person", false, "Siggi the Harborman", {race: "Freynor", faction: "Freynor", personality: "violent", outfit: ["northernClothing", 0], weapon: ["none", [0.4, 0.8], 0, 0, 0.75], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[-14542, 44796]], merchant: true, merchandise: [[new Item("coins", false, false), 90], [new Item("boat", false, false), 2], [new Item("fishingpole", false, false), 6]]}));
                    }
                }
                if (uniqueChars.rannukLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Jarl Rannuk Stambjord")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-18930, 44712, "Soldier", false, "Jarl Rannuk Stambjord", {race: "Freynor", faction: "Freynor", con: 16, speed: 0, outfit: ["fineFreydicOutfitM", 0], weapon: ["none", [0.5, 0.5], 0, 0, 1.15], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "none", 2.65], rot: -1/2*Math.PI, patrolStops: 0, patrolLoop: false, route:[[-18930, 44712]]}));
                    }
                }
                if (uniqueChars.rannukChildLDS == true && quests.rannukChild)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "[ " + quests.rannukChildName + " ]")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-18990, 44770, "Person", false, "[ " + quests.rannukChildName + " ]", {race: player.raceName, faction: "player", personality: "violent", outfit: ["fineFreydicOutfitM", 0], weapon: ["none", [0.3, 0.3], 0, 0, 1.1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[2164, 1656]], kid: true}));
                    }
                }
                if (uniqueChars.seethLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Seeth the Innkeeper")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-15043, 44824, "Person", false, "Seeth the Innkeeper", {race: "Freynor", faction: "Freynor", personality: "violent", outfit: ["northernClothing", 0], weapon: ["none", [0.45, 0.6], 0, 0, 1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[-14542, 44796]], merchant: true, merchandise: [[new Item("coins", false, false), 61], [new Item("mead", false, false), 82], [new Item("harstAle", false, false), 53], [new Item("walrusMeat", false, false), 2], [new Item("sealMeat", false, false), 4], [new Item("redCrombal", false, false), 6], [new Item("waantiMeat", false, false), 4], [new Item("harstBread", false, false), 3], [new Item("butteredHarstBread", false, false), 3], [new Item("tyrniBerries", false, false), 4]]}));
                    }
                }
                if (uniqueChars.neculaiLDS == true && quests.medliaCompetitionControlQuest == "complete" && quests.medliaCompetitionControlCompletionStyle == "friendly")
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Neculai the Merchant")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-17508, 44883, "Person", false, "Neculai the Merchant", {race: "Vardan", faction: "Freynor", personality: "calculated", outfit: ["northernClothing", 0], weapon: ["none", [0.2, 0.5], 0, 0, 0.55], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[], merchant: true, merchandise: [[new Item("coins", false, false), 87], [new Item("varnFiber", false, false), 10], [new Item("walrusLeatherWaterskin", false, false), 2], [new Item("frichFurClothing", false, false), 4], [new Item("sealSkinClothing", false, false), 1], [new Item("mace", false, false), 1], [new Item("vardanianAxe", false, false), 3], [new Item("vardanianAxeDual", false, false), 2], [new Item("vardanianCleaver", false, false), 1], [new Item("vardanianClub", false, false), 1], [new Item("smashStick", false, false), 1], [new Item("rawWolfLiver", false, false), 6], [new Item("blackChainArmour", false, false), 2], [new Item("trollFlesh", false, false), 2], [new Item("wood", false, false), 18], [new Item("freydicSword", false, false), 1], [new Item("frichPelt", false, false), 9], [new Item("rawWalrusFlesh", false, false), 8], [new Item("fireStarter", false, false), 1], [new Item("swampWalkerArmour", false, false), 1]]}));
                    }
                }
                else //generic shopkeeper
                {
                    ArtificialIntelligenceAccess.push(new Unit(-17501, 44860, "Person", false, "Freydic Shopkeeper", {race: "Freynor", faction: "Freynor", personality: "violent", outfit: ["northernClothing", 0], weapon: ["none", [0.45, 0.6], 0, 0, 1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[-14542, 44796]], merchant: true, merchandise: [[new Item("coins", false, false), 25], [new Item("naapridFiber", false, false), 3], [new Item("walrusLeatherWaterskin", false, false), 3], [new Item("rawSealFlesh", false, false), 5], [new Item("sealSkin", false, false), 2], [new Item("walrusHide", false, false), 3], [new Item("rawWalrusFlesh", false, false), 1], [new Item("ironRing", false, false), 1], [new Item("rawWaantiFlesh", false, false), 2], [new Item("wood", false, false), 4], [new Item("fireStarter", false, false), 1]]}));
                }
                if (uniqueChars.aariLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Aari the Blacksmith")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-16343, 44866, "Person", false, "Aari the Blacksmith", {race: "Freynor", faction: "Freynor", personality: "violent", outfit: ["sealSkinClothing", 0], weapon: ["hammer", [7, 3], 2, 14, 1.4], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[-14542, 44796]], merchant: true, merchandise: [[new Item("coins", false, false), 99], [new Item("steel", false, false), 2], [new Item("iron", false, false), 3], [new Item("freydicWarAxe", false, false), 2], [new Item("freydicGreatSword", false, false), 1], [new Item("freydicSword", false, false), 4], [new Item("freydicSpear", false, false), 6], [new Item("longbow", false, false), 3], [new Item("steelArrow", false, false), 29], [new Item("arrow", false, false), 40], [new Item("shehidToxinArrow", false, false), 7], [new Item("hammer", false, false), 3], [new Item("timberAxe", false, false), 2], [new Item("pickaxe", false, false), 1], [new Item("beartrap", false, false), 3], [new Item("clawtrap", false, false), 2]]}));
                    }
                }
                if (uniqueChars.ukkoLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Ukko, Sage of Gemesh")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-20325, 41962, "Soldier", false, "Ukko, Sage of Gemesh", {race: "Freynor", faction: "Freynor", con: 5, speed: 0.6, outfit: ["whiteMageRobe", 0], weapon: ["iceSpikes", [0, 0], 0, 0, 1.2], ranged: [true, "none", 0, 140, 0, 0, 0, "none", 0], rot: -1/2*Math.PI, CNX: 50, MR: 25, patrolStops: 0, patrolLoop: false, route:[[-18930, 44712]]}));
                    }
                }
                if (uniqueChars.katjaLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Katja the Tailor")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-16006, 44730, "Person", false, "Katja the Tailor", {race: "Freynor", faction: "Freynor", personality: "scared", outfit: ["northernClothing", 0], weapon: ["none", [0.5, 0.3], 0, 0, 1.55], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[-14542, 44796]], merchant: true, merchandise: [[new Item("coins", false, false), 63], [new Item("northernClothing", false, false), 2], [new Item("walrusLeatherArmour", false, false), 3], [new Item("sealSkinClothing", false, false), 5]]}));
                    }
                }
                if (uniqueChars.saanaLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Saana the Produce Vender")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-22034, 43621, "Person", false, "Saana the Produce Vender", {race: "Freynor", faction: "Freynor", personality: "scared", outfit: ["sealSkinClothing", 0], weapon: ["none", [0.4, 0.2], 0, 0, 1.75], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-21989, 43598]], merchant: true, merchandise: [[new Item("coins", false, false), 20], [new Item("potato", false, false), 11], [new Item("carrot", false, false), 6], [new Item("harstGrain", false, false), 20], [new Item("harstFlour", false, false), 5], [new Item("kelp", false, false), 3], [new Item("suuliMelon", false, false), 4], [new Item("pluttBerries", false, false), 2], [new Item("akerBerries", false, false), 3], [new Item("bushkaBerries", false, false), 4], [new Item("tyrniBerries", false, false), 3], [new Item("bucketOfWaantiMilk", false, false), 3], [new Item("waantiButter", false, false), 2]]}));
                    }
                }
                if (uniqueChars.fuyumiLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Fuyumi the Banker")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-17029, 44556, "Person", false, "Fuyumi the Banker", {race: "Orgell", faction: "Freynor", personality: "scared", outfit: ["northernClothing", 0], weapon: ["none", [0.2, 0.1], 0, 0, 1.2], ranged: [false, "arrow", 8, 2000, 1, 6, 0, "none", 0.95], patrolStops: 0, patrolLoop: false, route:[[2200, 1460]], banker: true}));
                    }
                }
                var togginBeer = false;
                if (quests.teshirNorthRoadQuest == "complete")
                {
                    if (uniqueChars.togginLDS == true)
                    {
                        var hits = 0;
                        for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                        {
                            if (ArtificialIntelligenceAccess[i].ID == "Toggin")
                            {
                                hits += 1;
                            }
                        }
                        if (hits == 0)
                        {
                            if (Math.round(Math.random()))
                            {
                                ArtificialIntelligenceAccess.push(new Unit(-20134, 43313, "Person", false, "Toggin", {race: "Freynor", faction: "Freynor", personality: "violent", outfit: ["blackBearFurClothing", 0], weapon: ["none", [0.8, 0.8], 0, 2, 1.2], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-20134, 43283]]}));
                            }
                            else
                            {
                                togginBeer = true;
                                ArtificialIntelligenceAccess.push(new Unit(-14983, 44729, "Person", false, "Toggin", {race: "Freynor", faction: "arena2", personality: "violent", outfit: ["blackBearFurClothing", 0], weapon: ["none", [0.8, 0.8], 0, 2, 1.2], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-14983, 44760]]}));
                            }
                            for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                            {
                                if (ArtificialIntelligenceAccess[i].ID == "Toggin")
                                {
                                    ArtificialIntelligenceAccess[i].healthMAX = 16;
                                    ArtificialIntelligenceAccess[i].health = 16;
                                }
                            }
                        }
                    }
                }
                if (uniqueChars.maaiLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Maai the Herbalist")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-15004, 43243, "Person", false, "Maai the Herbalist", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["northernClothing", 0], weapon: ["none", [0.4, 0.2], 0, 0, 1.75], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: false, route:[[-21989, 43598]], merchant: true, merchandise: [[new Item("coins", false, false), 69], [new Item("culprisBandage", false, false), 9], [new Item("healingSalve", false, false), 4], [new Item("kelp", false, false), 2], [new Item("stomwikLeaf", false, false), 1], [new Item("tylunFlower", false, false), 1], [new Item("culprisLeaf", false, false), 7], [new Item("wyrLeaf", false, false), 5], [new Item("ogard", false, false), 1], [new Item("bushkaLeaves", false, false), 10], [new Item("wightbloomBerries", false, false), 2], [new Item("blubber", false, false), 2], [new Item("haeflowerPollen", false, false), 1], [new Item("cyrinthilimMushroom", false, false), 1], [new Item("glinMushrooms", false, false), 1], [new Item("neprilneBerries", false, false), 3], [new Item("lizardTail", false, false), 5], [new Item("shehidOozeSml", false, false), 1], [new Item("naapridButter", false, false), 1], [new Item("waantiButter", false, false), 1]]}));
                    }
                }
                if (uniqueChars.gamdenLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Gamden the Alchemist")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-14968, 43979, "Person", false, "Gamden the Alchemist", {race: "Freynor", faction: "Freynor", personality: "scared", outfit: ["sealSkinClothing", 0], weapon: ["none", [0.25, 0.25], 0, 0, 1.6], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: false, route:[[-21989, 43598]], merchant: true, merchandise: [[new Item("coins", false, false), 9], [new Item("mightPotionII", false, false), 2], [new Item("energyPotionI", false, false), 5], [new Item("energyPotionII", false, false), 2], [new Item("waterwalkingPotion", false, false), 1], [new Item("tunskBloodPotion", false, false), 1], [new Item("wyrExtract", false, false), 2], [new Item("trollsBlood", false, false), 1], [new Item("rawTrollsBlood", false, false), 2], [new Item("pouchOfPimberDust", false, false), 4], [new Item("pouchOfShomeDust", false, false), 2], [new Item("pouchOfIrilDust", false, false), 1], [new Item("ogardPerfume", false, false), 3], [new Item("rawWolfLiver", false, false), 2], [new Item("salt", false, false), 11], [new Item("glassJar", false, false), 8], [new Item("potionGlass", false, false), 12]]}));
                    }
                }
                if (uniqueChars.bjornLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Bjorn")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-16013, 43363, "Person", false, "Bjorn", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["sealSkinClothing", 0], weapon: ["none", [0.6, 0.4], 0, 0, 1.3], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-16006, 43367]]}));

                        for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                        {
                            if (ArtificialIntelligenceAccess[i].ID == "Bjorn")
                            {
                                ArtificialIntelligenceAccess[i].healthMAX = 12;
                                ArtificialIntelligenceAccess[i].health = 12;
                            }
                        }
                    }
                }

                //respawnable humans
                //Guards
                if (change != "makemy6yearoldherealready!")
                {
                    ArtificialIntelligenceAccess.push(new Unit(-19038, 44781, "Soldier", false, "Stambjord Huskarl", {race: "Freynor", faction: "Freynor", con: 20, speed: 1.45, outfit: ["chainArmour", 12], weapon: ["freydicSword", [12, 10], 0, 17, 1.1], ranged: [true, "arrow", 9, 2500, 1, 6, 0, "none", 1.5], rot: Math.PI, patrolStops: 0, patrolLoop: true, route:[[-95, 645], [-95, 645]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-19100, 44781, "Soldier", false, "Stambjord Huskarl", {race: "Freynor", faction: "Freynor", con: 22, speed: 1.4, outfit: ["chainArmour", 13], weapon: ["freydicSword", [11, 11], 0, 17, 1.15], ranged: [true, "arrow", 5, 2000, 1, 6, 0, "none", 1.75], rot: Math.PI, patrolStops: 0, patrolLoop: true, route:[[-95, 645], [-95, 645]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-19165, 44778, "Soldier", false, "Stambjord Huskarl", {race: "Freynor", faction: "Freynor", con: 19, speed: 1.55, outfit: ["chainArmour", 11], weapon: ["freydicSword", [12, 11], 0, 17, 1.2], ranged: [true, "arrow", 8, 2200, 1, 6, 0, "none", 1.5], rot: Math.PI, patrolStops: 0, patrolLoop: true, route:[[-95, 645], [-95, 645]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-19224, 44776, "Soldier", false, "Stambjord Huskarl", {race: "Freynor", faction: "Freynor", con: 21, speed: 1.45, outfit: ["chainArmour", 12], weapon: ["freydicSword", [10, 11], 0, 17, 1.1], ranged: [true, "arrow", 6, 2100, 1, 6, 0, "none", 1.5], rot: Math.PI, patrolStops: 0, patrolLoop: true, route:[[-95, 645], [-95, 645]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-19048, 44649, "Soldier", false, "Stambjord Huskarl", {race: "Freynor", faction: "Freynor", con: 20, speed: 1.35, outfit: ["chainArmour", 11], weapon: ["freydicSword", [10, 10], 0, 17, 1], ranged: [true, "arrow", 5, 2000, 1, 5, 0, "none", 1.5], rot: Math.PI, patrolStops: 0, patrolLoop: true, route:[[-95, 645], [-95, 645]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-19102, 44647, "Soldier", false, "Stambjord Huskarl", {race: "Freynor", faction: "Freynor", con: 23, speed: 1.5, outfit: ["chainArmour", 12.5], weapon: ["freydicSword", [12, 12], 0, 17, 1.3], ranged: [true, "arrow", 4, 1700, 1, 4, 0, "none", 2], rot: Math.PI, patrolStops: 0, patrolLoop: true, route:[[-95, 645], [-95, 645]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-19180, 44645, "Soldier", false, "Stambjord Huskarl", {race: "Freynor", faction: "Freynor", con: 20, speed: 1.45, outfit: ["chainArmour", 12], weapon: ["freydicSword", [12, 10], 0, 17, 1.1], ranged: [true, "arrow", 9, 2600, 1, 7, 0, "none", 1.5], rot: Math.PI, patrolStops: 0, patrolLoop: true, route:[[-95, 645], [-95, 645]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-19260, 44645, "Soldier", false, "Stambjord Huskarl", {race: "Freynor", faction: "Freynor", con: 22, speed: 1.4, outfit: ["chainArmour", 11.5], weapon: ["freydicSword", [11, 11], 0, 17, 1.1], ranged: [true, "arrow", 8, 2200, 1, 6, 0, "none", 1.4], rot: Math.PI, patrolStops: 0, patrolLoop: true, route:[[-95, 645], [-95, 645]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-19557, 45010, "Soldier", false, "Stambjord Huskarl", {race: "Freynor", faction: "Freynor", con: 20, speed: 1.55, outfit: ["chainArmour", 12], weapon: ["freydicSword", [12, 10], 0, 17, 1.1], ranged: [true, "arrow", 9, 2600, 1, 7, 0, "none", 1.5], rot: Math.PI, patrolStops: 2, patrolLoop: true, route:[[-19557, 45010], [-19557, 45010]]}));
                }
                ArtificialIntelligenceAccess.push(new Unit(-15545, 44929, "Soldier", false, "Stambjord Captain", {race: "Freynor", faction: "Freynor", con: 28, speed: 1, outfit: ["northernPlateArmour", 22], weapon: ["freydicGreatSword", [24, 16], 0, 36, 2.65], ranged: [true, "arrow", 9.5, 2700, 1, 7, 0, "stunI", 1.35], patrolStops: 7, patrolLoop: true, route:[[-15545, 44315], [-14935, 44315], [-14935, 44108], [-15263, 44108], [-15263, 43818], [-15545, 43818], [-15545, 44929]]}));
                ArtificialIntelligenceAccess.push(new Unit(-19028, 45212, "Soldier", false, "Stambjord Soldier", {race: "Freynor", faction: "Freynor", con: 6, speed: 1.50, outfit: ["chainArmour", 7], weapon: ["freydicSword", [9, 8], 0, 16, 1], ranged: [true, "arrow", 7, 2000, 1, 6, 0, "none", 1.50], patrolStops: 4, patrolLoop: true, route:[[-14379, 45212], [-14379, 45024], [-19028, 45024],[-19028, 45212]]}));
                ArtificialIntelligenceAccess.push(new Unit(-15544, 43728, "Soldier", false, "Stambjord Soldier", {race: "Freynor", faction: "Freynor", con: 6, speed: 1.50, outfit: ["chainArmour", 7], weapon: ["freydicSword", [9, 8], 0, 16, 1], ranged: [true, "arrow", 7, 2000, 1, 6, 0, "none", 1.50], patrolStops: 4, patrolLoop: true, route:[[-15544, 42905], [-15770, 42905], [-15770, 43728],[-15544, 43728]]}));
                ArtificialIntelligenceAccess.push(new Unit(-18410, 44468, "Soldier", false, "Stambjord Soldier", {race: "Freynor", faction: "Freynor", con: 7, speed: 1.40, outfit: ["chainArmour", 8], weapon: ["freydicSword", [8, 9], 0, 16, 1], ranged: [true, "arrow", 6, 2000, 1, 5, 0, "none", 1.50], patrolStops: 0, patrolLoop: true, route:[[-18410, 44468]]}));
                ArtificialIntelligenceAccess.push(new Unit(-18266, 44656, "Soldier", false, "Stambjord Soldier", {race: "Freynor", faction: "Freynor", con: 8, speed: 1.30, outfit: ["chainArmour", 8.5], weapon: ["freydicSword", [9, 9], 0, 16, 1.25], ranged: [true, "arrow", 5, 1800, 1, 4, 0, "none", 2], patrolStops: 0, patrolLoop: true, route:[[-18266, 44656]]}));
                ArtificialIntelligenceAccess.push(new Unit(-21770, 43517, "Soldier", false, "Stambjord Soldier", {race: "Freynor", faction: "Freynor", con: 7, speed: 1.51, outfit: ["chainArmour", 7.5], weapon: ["freydicSword", [8, 8], 0, 16, 1], ranged: [true, "arrow", 6, 2000, 1, 6, 0, "none", 1.6], patrolStops: 8, patrolLoop: true, route:[[-21767, 43731], [-18941, 43735], [-19076, 43508], [-20357, 43508], [-20357, 42324], [-20564, 42324], [-20564, 43517], [-21770, 43517]]}));
                //fishshopGuy
                ArtificialIntelligenceAccess.push(new Unit(-17931, 44852, "Person", false, "Freydic Fishseller", {race: "Freynor", faction: "Freynor", personality: "scared", outfit: ["northernClothing", 0], weapon: ["none", [0.45, 0.5], 0, 0, 1.2], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[-14542, 44796]], merchant: true, merchandise: [[new Item("coins", false, false), 18], [new Item("rawRedCrombal", false, false), 9], [new Item("rawJuurgo", false, false), 2], [new Item("crabFlesh", false, false), 3]]}));
                //People
                ArtificialIntelligenceAccess.push(new Unit(-15836, 44770, "Person", false, "Freynor Villager", {race: "Freynor", faction: "Freynor", personality: "scared", outfit: ["sealSkinClothing", 0], weapon: ["none", [0.3, 0.5], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 4, patrolLoop: true, route:[[-15837, 44485], [-17876, 44405], [-15837, 44485], [-15836, 44770]]}));
                ArtificialIntelligenceAccess.push(new Unit(-21759, 43739, "Person", false, "Freynor Villager", {race: "Freynor", faction: "Freynor", personality: "scared", outfit: ["sealSkinClothing", 0], weapon: ["none", [0.3, 0.5], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 8, patrolLoop: true, route:[[-15750, 43726], [-15776, 45098], [-17877, 44999], [-17874, 44873], [-17877, 44999], [-15776, 45098], [-15750, 43726], [-21759, 43739]]}));
                //temple-goers
                ArtificialIntelligenceAccess.push(new Unit(-20419, 42113, "Person", false, "Freynor Villager", {race: "Freynor", faction: "Freynor", personality: "scared", outfit: ["sealSkinClothing", 0], weapon: ["none", [0.3, 0.5], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-20419, 42070]]}));
                ArtificialIntelligenceAccess.push(new Unit(-20605, 41927, "Person", false, "Freynor Villager", {race: "Freynor", faction: "Freynor", personality: "scared", outfit: ["sealSkinClothing", 0], weapon: ["none", [0.3, 0.5], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-20566, 41927]]}));
                ArtificialIntelligenceAccess.push(new Unit(-20607, 41983, "Person", false, "Freynor Villager", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["northernClothing", 0], weapon: ["none", [0.3, 0.5], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-20566, 41983]]}));
                //farmers
                ArtificialIntelligenceAccess.push(new Unit(-22389, 40228, "Person", false, "Freynor Farmer", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["sealSkinClothing", 0], weapon: ["none", [0.3, 0.5], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: false, route:[[-20566, 41983]]}));
                //that farmer's security v. the wild and player theivery exploits
                ArtificialIntelligenceAccess.push(new Unit(-22521, 39743, "Soldier", false, "Stambjord Soldier", {race: "Freynor", faction: "Freynor", con: 6, speed: 1.35, outfit: ["chainArmour", 8], weapon: ["freydicSword", [9, 8], 0, 16, 1.3], ranged: [true, "arrow", 6, 1900, 1, 5, 0, "none", 2], patrolStops: 0, patrolLoop: true, route:[[-18266, 44656]]}));
                //wealthy zoners
                ArtificialIntelligenceAccess.push(new Unit(-20208, 42655, "Person", false, "Freynor Villager", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["northernClothing", 0], weapon: ["none", [0.3, 0.5], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: false, route:[[-20566, 41983]]}));
                ArtificialIntelligenceAccess.push(new Unit(-20739, 42515, "Person", false, "Freynor Villager", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["northernClothing", 0], weapon: ["none", [0.3, 0.5], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-20704, 42518]]}));
                //dmitri pleasers
                var extraBeerCup = false;
                if (Math.round(Math.random()))
                {
                    extraBeerCup = true; //empty cup on the bottom left small table
                    if (Math.random() > 0.25)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-15058, 44428, "Person", false, "Freynor Villager", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["sealSkinClothing", 0], weapon: ["none", [0.3, 0.5], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-15024, 44424]]}));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-15058, 44428, "Person", false, "Freynor Villager", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["northernClothing", 0], weapon: ["none", [0.3, 0.5], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-15024, 44424]]}));
                    }
                }

                ArtificialIntelligenceAccess.push(new Unit(-15137, 44647, "Person", false, "Freynor Villager", {race: "Freynor", faction: "Freynor", personality: "violent", outfit: ["sealSkinClothing", 0], weapon: ["none", [0.35, 0.55], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[-15837, 44485]]}));
                var travelerFoodz;
                if (Math.random() <= 0.15)
                {
                    travelerFoodz = 1; //fish with berries -15141, 44611
                    ArtificialIntelligenceAccess.push(new Unit(-15195, 44639, "Person", false, "Traveler", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["varnFurClothing", 0], weapon: ["none", [0.35, 0.55], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: false, route:[[-15137, 44647]]}));
                }
                else if (Math.random() <= 0.39)
                {
                    if (Math.round(Math.random()))
                    {
                        travelerFoodz = 2; //mead -15141, 44611
                        if (Math.round(Math.random()))
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-15127, 44534, "Person", false, "Traveler", {race: "Thengar", faction: "Thengar", personality: "violent", outfit: ["skolLeatherArmour", 3.5], weapon: ["none", [0.35, 0.55], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-15132, 44561]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-15127, 44534, "Person", false, "Traveler", {race: "Thengar", faction: "Thengar", personality: "violent", outfit: ["boulchomLeatherArmour", 2], weapon: ["none", [0.35, 0.55], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-15132, 44561]]}));
                        }
                    }
                    else
                    {
                        travelerFoodz = 3; //fish with berries -15318, 44565
                        if (Math.round(Math.random()))
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-15387, 44572, "Person", false, "Traveler", {race: "Thengar", faction: "Thengar", personality: "violent", outfit: ["boulchomLeatherArmour", 2], weapon: ["none", [0.35, 0.55], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-15361, 44573]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-15387, 44572, "Person", false, "Traveler", {race: "Thengar", faction: "Thengar", personality: "violent", outfit: ["skolLeatherArmour", 3.5], weapon: ["none", [0.35, 0.55], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-15361, 44573]]}));
                        }
                    }
                }
                else
                {
                    if (Math.round(Math.random()))
                    {
                        travelerFoodz = 0; //sealMeat and harst ale -15141, 44611
                        if (Math.round(Math.random()))
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-15197, 44640, "Person", false, "Traveler", {race: "Freynor", faction: "Freynor", personality: "violent", outfit: ["sealSkinClothing", 0], weapon: ["none", [0.35, 0.55], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: false, route:[[-15137, 44647]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-15197, 44640, "Person", false, "Traveler", {race: "Freynor", faction: "Freynor", personality: "violent", outfit: ["northernClothing", 0], weapon: ["none", [0.35, 0.55], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: false, route:[[-15137, 44647]]}));
                        }

                    }
                    else
                    {
                        travelerFoodz = 4; //mead -15318, 44565
                        if (Math.round(Math.random()))
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-15198, 44642, "Person", false, "Traveler", {race: "Freynor", faction: "Freynor", personality: "violent", outfit: ["northernClothing", 0], weapon: ["none", [0.3, 0.6], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[-15837, 44485]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-15198, 44642, "Person", false, "Traveler", {race: "Freynor", faction: "Freynor", personality: "violent", outfit: ["sealSkinClothing", 0], weapon: ["none", [0.3, 0.6], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[-15837, 44485]]}));
                        }
                    }
                }
                var randoDrinkYes = false;
                if (Math.round(Math.random()))
                {
                    ArtificialIntelligenceAccess.push(new Unit(-20471, 41791, "Person", false, "Freynor Villager", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["northernClothing", 0], weapon: ["none", [0.3, 0.5], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-20472, 41830]]}));
                }
                else
                {
                    if (Math.round(Math.random()))
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-14987, 44507, "Person", false, "Freynor Villager", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["northernClothing", 0], weapon: ["none", [0.3, 0.5], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-14988, 44462]]}));
                        randoDrinkYes = true;
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-20802, 42711, "Person", false, "Freynor Villager", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["northernClothing", 0], weapon: ["none", [0.3, 0.5], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-20809, 42697]]}));
                    }
                }
                if (Math.round(Math.random()))
                {
                    ArtificialIntelligenceAccess.push(new Unit(-20116, 43053, "Person", false, "Freynor Villager", {race: "Freynor", faction: "Freynor", personality: "scared", outfit: ["northernClothing", 0], weapon: ["none", [0.3, 0.5], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: false, route:[[-20704, 42518]]}));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(-20116, 43053, "Person", false, "Freynor Villager", {race: "Freynor", faction: "Freynor", personality: "scared", outfit: ["northernClothing", 0], weapon: ["none", [0.3, 0.5], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 14, patrolLoop: true, route:[[-20553, 43053], [-20553, 43666], [-15713, 43666], [-15713, 43116], [-15102, 43143], [-15098, 43295], [-15149, 43292], [-15100, 43243], [-15100, 42917], [-15734, 42934], [-15750, 43548], [-20379, 43545], [-20379, 43053], [-20116, 43053]]}));
                }

                //Abandoned Mineshaft south of Venning City
                scenicList.push(new Scenery("cave", -17526, 39304, 2, [854, 307], "venningMineshaft"));

                //Venning City
                //docks
                scenicList.push(new Scenery("floatingBoat", -14825, 46962, 3.5, true));
                scenicList.push(new Scenery("floatingBoat", -15142, 47107, 1/2*Math.PI, true));
                scenicList.push(new Scenery("floatingBoat", -15246, 46661, 0, true));
                scenicList.push(new Scenery("floatingBoat", -14814, 46569, -45/360 * Math.PI, true));
                scenicList.push(new Scenery("floatingBoat", -14831, 46154, -100/360 * Math.PI, true));
                scenicList.push(new Scenery("boat", -18900, 45797, -150/360 * Math.PI, true));
                scenicList.push(new Scenery("floatingBoat", -18445, 46237, -0.02 * Math.PI, true));
                scenicList.push(new Scenery("floatingBoat", -18834, 46704, 0 * Math.PI, true));
                scenicList.push(new Scenery("floatingBoat", -18877, 46893, 60/100 * Math.PI, true));

                scenicList.push(new Scenery("northernFishingSpot", -14720, 46388, 0, true));
                scenicList.push(new Scenery("northernFishingSpot", -14974, 47237, -2, true));
                scenicList.push(new Scenery("northernFishingSpot", -15336, 46820, 1, true));
                scenicList.push(new Scenery("northernFishingSpot", -18328, 46505, 5.5, true));
                scenicList.push(new Scenery("northernFishingSpot", -18986, 47092, -6.25, true));
                scenicList.push(new Scenery("northernFishingSpot", -18289, 47205, 3.6, true));
                //shops at the docks district
                //Harborshop
                scenicList.push(new Scenery("freydicBuilding8", -14591, 44814, 0, true));
                scenicList.push(new Scenery("sign", -14525, 44884, Math.PI - 0.15, 3, "The Harbor Shop"));
                scenicList.push(new Scenery("boat", -14757, 44792, 1.2, true));
                scenicList.push(new Scenery("boat", -14731, 44863, -0.05, true));
                scenicList.push(new Scenery("crate", -14640, 44782, 2.8/4 * Math.PI, 2, [1.3]));
                //Fish Shop
                scenicList.push(new Scenery("freydicBuilding8", -17883, 44873, 0, true));
                scenicList.push(new Scenery("sign", -17820, 44945, Math.PI - 0.15, 3, "Fish Shop"));
                scenicList.push(new Scenery("crate", -17840, 44838, 1.4/4 * Math.PI, 2, [1]));
                //tailor shop
                scenicList.push(new Scenery("freydicBuilding3", -16007, 44781, 0, true));
                scenicList.push(new Scenery("woodenBench", -16094, 44770, 1/2 * Math.PI, 0));
                scenicList.push(new Scenery("woodenBench", -16108, 44770, 1/2 * Math.PI, 0));
                scenicList.push(new Scenery("woodenBench", -15975, 44880, 0, 0));
                scenicList.push(new Scenery("woodenBench", -15975, 44870, 0, 0));
                scenicList.push(new Scenery("loom", -16002, 44694, 0, true));
                scenicList.push(new Scenery("item", -16087, 44862, 0, "freynor", ["bucketOfWater", 1, -12]));
                scenicList.push(new Scenery("item", -15975, 44873, 0, "freynor", ["waantiPelt", 1, -16]));
                scenicList.push(new Scenery("item", -16006, 44872, 0, "freynor", ["waantiPelt", 1, -16]));
                scenicList.push(new Scenery("item", -16100, 44807, 0, "freynor", ["koobuPelt", 1, -20]));
                scenicList.push(new Scenery("item", -16100, 44793, 0, "freynor", ["koobuPelt", 1, -20]));
                scenicList.push(new Scenery("item", -16100, 44781, 0, "freynor", ["koobuPelt", 1, -20]));
                scenicList.push(new Scenery("item", -16098, 44743, 0, "freynor", ["cloth", 2, -23]));
                scenicList.push(new Scenery("item", -15937, 44874, 0, "freynor", ["wool", 1, -15]));
                scenicList.push(new Scenery("sign", -15874, 44717, 1/2 * Math.PI, 3, "Venning City Outfitters"));
                //blacksmith shop
                scenicList.push(new Scenery("freydicBuilding8", -16342, 44856, 0, true));
                scenicList.push(new Scenery("forge", -16274, 44865, -1/2 * Math.PI -0.20, true));
                scenicList.push(new Scenery("anvil", -16403, 44886, -1/2 * Math.PI -0.7, true));
                scenicList.push(new Scenery("woodenBench", -16337, 44806, 0, 0));
                scenicList.push(new Scenery("woodenBench", -16337, 44819, 0, 0));
                scenicList.push(new Scenery("item", -16404, 44815, 0, "freynor", ["bucketOfWater", 1, -14]));
                scenicList.push(new Scenery("item", -16324, 44807, 0, "freynor", ["freydicWarAxe", 1, -70]));
                scenicList.push(new Scenery("sign", -16281, 44930, Math.PI - 0.16, 3, "Fruits of the Forge - Metalwork Shop"));

                //Necolai's shop / generic merchandise shop
                scenicList.push(new Scenery("freydicBuilding8", -17513, 44880, 0, true));
                if (uniqueChars.neculaiLDS == true && quests.medliaCompetitionControlQuest == "complete" && quests.medliaCompetitionControlCompletionStyle == "friendly")
                {
                    scenicList.push(new Scenery("sign", -17453, 44951, Math.PI - 0.15, 3, "Necolai's Everything Store"));
                    scenicList.push(new Scenery("crate", -17449, 44898, 1.11/4 * Math.PI, 1, [1.45]));
                }
                else
                {
                    scenicList.push(new Scenery("sign", -17453, 44951, Math.PI - 0.15, 3, "Beachfront General Store"));
                    scenicList.push(new Scenery("crate", -17571, 44901, 1.4/4 * Math.PI, 2, [1.15]));
                }
                //jarls longhouse
                scenicList.push(new Scenery("freydicBuildingHalveR", -19380, 44722, 10, true));
                scenicList.push(new Scenery("freydicBuildingHalveL", -19000, 44722, 0, true));
                scenicList.push(new Scenery("sign", -19413, 44967, Math.PI, 3, "Stambjord Longhouse"));
                scenicList.push(new Scenery("hearth", -18803, 44515, 4, "lit"));
                scenicList.push(new Scenery("hearth", -18807, 44917, 4 + 1/2 * Math.PI, "lit"));
                scenicList.push(new Scenery("item", -18873, 44921, 0, "freynor", ["wood", 3, -17]));
                scenicList.push(new Scenery("item", -18796, 44566, 0, "freynor", ["wood", 4, -23]));
                scenicList.push(new Scenery("longTable", -19170, 44716, 0, false));
                scenicList.push(new Scenery("stumpStool", -18934, 44715, 5, 2));

                if (quests.matrimonyTorStambjordQuest == "complete" && quests.matrimonyTorStambjordCompletionStyle == "marriage")
                {
                    scenicList.push(new Scenery("stumpStool", -18976, 44644, -2.5, 2));
                    if (quests.rannukChild)
                    {
                        scenicList.push(new Scenery("stumpStoolSml", -18990, 44773, 16, 2));
                    }
                }
                //the jarl feasts
                if (player.raceName == "Freynor" && player.title == "Royalty" || player.raceName == "Freynor" && player.title == "Nobility" && player.gender == "Female" && quests.matrimonyTorStambjordQuest == "complete" && quests.matrimonyTorStambjordCompletionStyle == "marriage")
                {
                    if (player.title != "Royalty")
                    {
                        //the jarl's wife's table
                        scenicList.push(new Scenery("woodenBench", -19476, 44510, 0, 2));
                        scenicList.push(new Scenery("item", -19438, 44519, 0, false, ["ogardPerfume", 1, 0]));
                        scenicList.push(new Scenery("item", -19453, 44518, 0, false, ["ogardPerfume", 1, 0]));
                        scenicList.push(new Scenery("item", -19447, 44508, 0, false, ["ogardPerfume", 1, 0]));
                        scenicList.push(new Scenery("item", -19506, 44511, 0, false, ["rilthasiaFlower", 1, 0]));
                        //her storage area and hobby
                        scenicList.push(new Scenery("crate", -19560, 44531, 2/4 * Math.PI - 0 * Math.PI, 3, [2.25, "venningJarlsWifeCrate1", 18, [], false, 0]));
                        scenicList.push(new Scenery("loom", -19384, 44517, Math.PI, true));
                    }

                    scenicList.push(new Scenery("item", -19032, 44710, 0, false, ["cloimidMeat", 1, 0]));
                    scenicList.push(new Scenery("item", -18967, 44731, 0, false, ["crabChowder", 1, 0]));
                    scenicList.push(new Scenery("item", -18964, 44702, 0, false, ["butteredHarstBread", 1, 0]));
                    scenicList.push(new Scenery("item", -18959, 44720, 0, false, ["butteredCrab", 1, 0]));
                    scenicList.push(new Scenery("item", -19016, 44739, 0, false, ["pintGlass", 1, 0]));
                    scenicList.push(new Scenery("item", -18978, 44675, 0, false, ["crabChowder", 1, 0]));
                    scenicList.push(new Scenery("item", -18983, 44718, 0, false, ["mead", 1, 0]));

                    if (player.title != "Royalty")
                    {
                        scenicList.push(new Scenery("item", -18991, 44689, 0, false, ["pluttMoffling", 1, 0]));
                        scenicList.push(new Scenery("item", -18997, 44671, 0, false, ["akerMoffling", 1, 0]));
                        scenicList.push(new Scenery("item", -18969, 44690, 0, false, ["pluttWine", 1, 0]));
                        scenicList.push(new Scenery("item", -19007, 44687, 0, false, ["pluttWine", 1, 0]));
                        scenicList.push(new Scenery("item", -19363, 44688, 0, false, ["naapridMeat", 1, 0]));
                        scenicList.push(new Scenery("item", -19360, 44692, 0, false, ["akerBerries", 2, 0]));
                        scenicList.push(new Scenery("item", -19372, 44685, 0, false, ["akerBerries", 2, 0]));
                        scenicList.push(new Scenery("item", -19369, 44729, 0, false, ["bearMeat", 1, 0]));
                        scenicList.push(new Scenery("item", -19372, 44733, 0, false, ["pluttBerries", 1, 0]));
                        scenicList.push(new Scenery("item", -19372, 44718, 0, false, ["pluttBerries", 1, 0]));
                        scenicList.push(new Scenery("item", -19359, 44726, 0, false, ["pluttBerries", 1, 0]));
                        scenicList.push(new Scenery("item", -19382, 44722, 0, false, ["pluttBerries", 1, 0]));
                        scenicList.push(new Scenery("item", -19363, 44688, 0, false, ["groundOgard", 1, 0]));
                        scenicList.push(new Scenery("item", -18956, 44676, 0, "freynor", ["mead", 1, -25]));
                        if (!quests.rannukChild)
                        {
                            scenicList.push(new Scenery("item", -18975, 44753, 0, false, ["mead", 1, 0]));
                        }
                        else
                        {
                            scenicList.push(new Scenery("item", -18995, 44753, 0, false, ["butteredCrab", 1, 0]));
                            scenicList.push(new Scenery("item", -19011, 44756, 0, false, ["pluttCiderPintGlass", 1, 0]));
                        }
                    }
                    else
                    {
                        scenicList.push(new Scenery("item", -18978, 44677, 0, "freynor", ["pintGlass", 1, -5]));
                        scenicList.push(new Scenery("item", -18975, 44753, 0, false, ["mead", 1, 0]));
                    }
                    scenicList.push(new Scenery("item", -18960, 44748, 0, false, ["mead", 1, 0]));
                    scenicList.push(new Scenery("item", -19034, 44675, 0, false, ["woodenBowl", 1, 0]));
                    scenicList.push(new Scenery("item", -19037, 44754, 0, false, ["butteredCrab", 1, 0]));
                    scenicList.push(new Scenery("item", -19091, 44714, 0, false, ["walrusMeat", 1, 0]));
                    scenicList.push(new Scenery("item", -19107, 44704, 0, false, ["walrusMeat", 1, 0]));
                    scenicList.push(new Scenery("item", -19238, 44711, 0, false, ["dryKelp", 2, 0]));
                    scenicList.push(new Scenery("item", -19248, 44720, 0, false, ["crabClaw", 1, 0]));
                    scenicList.push(new Scenery("item", -19256, 44704, 0, false, ["crabClaw", 1, 0]));
                    scenicList.push(new Scenery("item", -19160, 44713, 0, false, ["waantiMeat", 1, 0]));
                    scenicList.push(new Scenery("item", -19179, 44706, 0, false, ["waantiMeat", 1, 0]));
                    scenicList.push(new Scenery("item", -19057, 44679, 0, false, ["mead", 1, 0]));
                    scenicList.push(new Scenery("item", -19329, 44695, 0, false, ["tyrniBerries", 2, 0]));
                    scenicList.push(new Scenery("item", -19305, 44723, 0, false, ["tyrniBerries", 2, 0]));
                    scenicList.push(new Scenery("item", -19338, 44713, 0, false, ["tyrniBerries", 2, 0]));
                    scenicList.push(new Scenery("item", -19323, 44715, 0, false, ["thab", 1, 0]));
                    scenicList.push(new Scenery("item", -19209, 44714, 0, false, ["bushkaBerries", 2, 0]));
                    scenicList.push(new Scenery("item", -19207, 44714, 0, false, ["bushkaBerries", 2, 0]));
                    scenicList.push(new Scenery("item", -19212, 44715, 0, false, ["bushkaBerries", 2, 0]));
                    scenicList.push(new Scenery("item", -19213, 44704, 0, false, ["crabMeat", 3, 0]));
                    scenicList.push(new Scenery("item", -19213, 44704, 0, false, ["waantiButter", 1, 0]));
                    scenicList.push(new Scenery("item", -19100, 44678, 0, false, ["crabChowder", 1, 0]));
                    scenicList.push(new Scenery("item", -19099, 44749, 0, false, ["crabChowder", 1, 0]));
                    scenicList.push(new Scenery("item", -19081, 44744, 0, false, ["pintGlass", 1, 0]));
                    scenicList.push(new Scenery("item", -19131, 44685, 0, false, ["pintGlass", 1, 0]));
                    scenicList.push(new Scenery("item", -19170, 44746, 0, false, ["butteredCrab", 1, 0]));
                    scenicList.push(new Scenery("item", -19157, 44736, 0, false, ["mead", 1, 0]));
                    scenicList.push(new Scenery("item", -19191, 44685, 0, false, ["mead", 1, 0]));
                    scenicList.push(new Scenery("item", -19172, 44674, 0, false, ["crabChowder", 1, 0]));
                    scenicList.push(new Scenery("item", -19246, 44677, 0, false, ["butteredCrab", 1, 0]));
                    scenicList.push(new Scenery("item", -19230, 44747, 0, false, ["butteredCrab", 1, 0]));
                    scenicList.push(new Scenery("item", -19192, 44726, 0, false, ["pintGlass", 1, 0]));
                    scenicList.push(new Scenery("item", -19202, 44741, 0, false, ["mead", 1, 0]));
                    scenicList.push(new Scenery("item", -19276, 44689, 0, false, ["mead", 1, 0]));
                    scenicList.push(new Scenery("item", -19264, 44676, 0, false, ["mead", 1, 0]));
                }
                else
                {
                    scenicList.push(new Scenery("item", -19032, 44710, 0, "freynor", ["cloimidMeat", 1, -75]));
                    scenicList.push(new Scenery("item", -18967, 44731, 0, "freynor", ["crabChowder", 1, -40]));
                    scenicList.push(new Scenery("item", -18964, 44702, 0, "freynor", ["butteredHarstBread", 1, -30]));
                    scenicList.push(new Scenery("item", -18959, 44720, 0, "freynor", ["butteredCrab", 1, -40]));
                    scenicList.push(new Scenery("item", -18978, 44677, 0, "freynor", ["pintGlass", 1, -5]));
                    scenicList.push(new Scenery("item", -19016, 44739, 0, "freynor", ["pintGlass", 1, -5]));
                    scenicList.push(new Scenery("item", -18963, 44676, 0, "freynor", ["mead", 1, -25]));
                    scenicList.push(new Scenery("item", -18975, 44753, 0, "freynor", ["mead", 1, -25])); //
                    scenicList.push(new Scenery("item", -18960, 44748, 0, "freynor", ["mead", 1, -25])); //
                    scenicList.push(new Scenery("item", -19034, 44675, 0, "freynor", ["woodenBowl", 1, -5]));
                    scenicList.push(new Scenery("item", -19037, 44754, 0, "freynor", ["butteredCrab", 1, -30]));
                    scenicList.push(new Scenery("item", -19091, 44714, 0, "freynor", ["walrusMeat", 1, -70]));
                    scenicList.push(new Scenery("item", -19107, 44704, 0, "freynor", ["walrusMeat", 1, -70]));
                    scenicList.push(new Scenery("item", -19238, 44711, 0, "freynor", ["dryKelp", 2, -10]));
                    scenicList.push(new Scenery("item", -19248, 44720, 0, "freynor", ["crabClaw", 1, -80]));
                    scenicList.push(new Scenery("item", -19256, 44704, 0, "freynor", ["crabClaw", 1, -80]));
                    scenicList.push(new Scenery("item", -19160, 44713, 0, "freynor", ["waantiMeat", 1, -80]));
                    scenicList.push(new Scenery("item", -19179, 44706, 0, "freynor", ["waantiMeat", 1, -80]));
                    scenicList.push(new Scenery("item", -19057, 44679, 0, "freynor", ["mead", 1, -20]));
                    scenicList.push(new Scenery("item", -19329, 44695, 0, "freynor", ["tyrniBerries", 2, -14]));
                    scenicList.push(new Scenery("item", -19305, 44723, 0, "freynor", ["tyrniBerries", 2, -14]));
                    scenicList.push(new Scenery("item", -19338, 44713, 0, "freynor", ["tyrniBerries", 2, -14]));
                    scenicList.push(new Scenery("item", -19323, 44715, 0, "freynor", ["thab", 1, -90]));
                    scenicList.push(new Scenery("item", -19209, 44714, 0, "freynor", ["bushkaBerries", 2, -12]));
                    scenicList.push(new Scenery("item", -19207, 44714, 0, "freynor", ["bushkaBerries", 2, -12]));
                    scenicList.push(new Scenery("item", -19212, 44715, 0, "freynor", ["bushkaBerries", 2, -12]));
                    scenicList.push(new Scenery("item", -19213, 44704, 0, "freynor", ["crabMeat", 3, -45]));
                    scenicList.push(new Scenery("item", -19213, 44704, 0, "freynor", ["waantiButter", 1, -31]));
                    scenicList.push(new Scenery("item", -19100, 44678, 0, "freynor", ["crabChowder", 1, -35]));
                    scenicList.push(new Scenery("item", -19099, 44749, 0, "freynor", ["crabChowder", 1, -35]));
                    scenicList.push(new Scenery("item", -19081, 44744, 0, "freynor", ["pintGlass", 1, -5]));
                    scenicList.push(new Scenery("item", -19131, 44685, 0, "freynor", ["pintGlass", 1, -5]));
                    scenicList.push(new Scenery("item", -19170, 44746, 0, "freynor", ["butteredCrab", 1, -30]));
                    scenicList.push(new Scenery("item", -19157, 44736, 0, "freynor", ["mead", 1, -20]));
                    scenicList.push(new Scenery("item", -19191, 44685, 0, "freynor", ["mead", 1, -20]));
                    scenicList.push(new Scenery("item", -19172, 44674, 0, "freynor", ["crabChowder", 1, -35]));
                    scenicList.push(new Scenery("item", -19246, 44677, 0, "freynor", ["butteredCrab", 1, -30]));
                    scenicList.push(new Scenery("item", -19230, 44747, 0, "freynor", ["butteredCrab", 1, -30]));
                    scenicList.push(new Scenery("item", -19192, 44726, 0, "freynor", ["pintGlass", 1, -5]));
                    scenicList.push(new Scenery("item", -19202, 44741, 0, "freynor", ["mead", 1, -20]));
                    scenicList.push(new Scenery("item", -19276, 44689, 0, "freynor", ["mead", 1, -20]));
                    scenicList.push(new Scenery("item", -19264, 44676, 0, "freynor", ["mead", 1, -20]));
                }
                scenicList.push(new Scenery("woodenBench", -19063, 44781, -0.025, 2));
                scenicList.push(new Scenery("woodenBench", -19073, 44646, 0.05, 2));
                scenicList.push(new Scenery("woodenBench", -19217, 44645, -0.03, 2));
                scenicList.push(new Scenery("woodenBench", -19205, 44780, -0.015, 2));
                //to block the doorway that should not be there...
                scenicList.push(new Scenery("woodenBench", -18899, 44505, -0.015, 2));
                scenicList.push(new Scenery("woodenBench", -18899, 44494, -0.015, 2));
                scenicList.push(new Scenery("item", -18894, 44509, 0, "freynor", ["freydicSpear", 1, -50]));
                scenicList.push(new Scenery("item", -18928, 44508, 0, "freynor", ["walrusTusks", 1, -50]));
                scenicList.push(new Scenery("item", -18870, 44505, 0, "freynor", ["coins", 200, -150]));
                scenicList.push(new Scenery("item", -18870, 44505, 0, "freynor", ["dustPouch", 1, -50]));
                scenicList.push(new Scenery("barrel", -18794, 44740, 0, 1));
                scenicList.push(new Scenery("barrel", -18794, 44777, 0.02, 1));
                //barracks
                var venningBarracksXMas = 60;
                scenicList.push(new Scenery("freydicBuilding7", -18340 + venningBarracksXMas, 44623, 0, true));
                scenicList.push(new Scenery("sign", -18383 + venningBarracksXMas, 44868, 1 * Math.PI, 3, "Venning City Barracks"));
                scenicList.push(new Scenery("bed", -18155 + venningBarracksXMas, 44478, 1 * Math.PI, false));
                scenicList.push(new Scenery("bed", -18155 + venningBarracksXMas, 44578, 1 * Math.PI, false));
                scenicList.push(new Scenery("bed", -18155 + venningBarracksXMas, 44678, 0 * Math.PI, false));
                scenicList.push(new Scenery("bed", -18155 + venningBarracksXMas, 44778, 0 * Math.PI, false));
                scenicList.push(new Scenery("woodenBench", -18533 + venningBarracksXMas, 44744, 1/2 * Math.PI, 0));
                scenicList.push(new Scenery("woodenBench", -18514 + venningBarracksXMas, 44744, 1/2 * Math.PI, 0));
                scenicList.push(new Scenery("woodenBench", -18495 + venningBarracksXMas, 44744, 1/2 * Math.PI, 0));
                scenicList.push(new Scenery("item", -18504 + venningBarracksXMas, 44786, 0, "freynor", ["pintGlass", 1, -2]));
                scenicList.push(new Scenery("item", -18492 + venningBarracksXMas, 44744, 0, "freynor", ["mead", 1, -8]));
                scenicList.push(new Scenery("item", -18509 + venningBarracksXMas, 44706, 0, "freynor", ["mead", 1, -8]));
                scenicList.push(new Scenery("item", -18494 + venningBarracksXMas, 44721, 0, "freynor", ["sealMeat", 1, -9]));
                scenicList.push(new Scenery("item", -18494 + venningBarracksXMas, 44769, 0, "freynor", ["sealMeat", 1, -9]));
                scenicList.push(new Scenery("stumpStoolSml", -18467 + venningBarracksXMas, 44702, 8.1, 0));
                scenicList.push(new Scenery("stumpStoolSml", -18471 + venningBarracksXMas, 44760, 1.3, 0));
                scenicList.push(new Scenery("stumpStoolSml", -18510 + venningBarracksXMas, 44823, 7.4, 0));
                //bank
                scenicList.push(new Scenery("freydicBuilding7", -17025, 44720, 0, true));
                scenicList.push(new Scenery("sign", -17055, 44957, 1 * Math.PI, 3, "Venning City Bank"));
                scenicList.push(new Scenery("woodenBench", -17031, 44591, 0, 0));
                scenicList.push(new Scenery("stumpStoolSml", -17023, 44628, 8, 0));
                scenicList.push(new Scenery("stumpStoolSml", -17029, 44556, 0, 0)); //banker's stool
                scenicList.push(new Scenery("crate", -17179, 44543, 1/4 * Math.PI, 2, [1.5]));
                scenicList.push(new Scenery("crate", -17165, 44637, 3.25/4 * Math.PI, 2, [1.4]));
                scenicList.push(new Scenery("crate", -16849, 44553, 3.9/4 * Math.PI, 2, [1.45]));
                scenicList.push(new Scenery("crate", -17202, 44771, 2.25/4 * Math.PI, 2, [1.55]));
                scenicList.push(new Scenery("crate", -16893, 44736, 3/4 * Math.PI, 2, [1.43]));

                if (player.raceName != "Freynor" || player.title != "Royalty")
                {
                    if (player.raceName == "Freynor" && player.title == "Nobility" && player.gender == "Female" && quests.matrimonyTorStambjordQuest == "complete" && quests.matrimonyTorStambjordCompletionStyle != "rejection") //the jarls wife has the right to plunder his stores without being murdered by his soldiers but the act of doing so is counter-traditional so some small amount of faction relation is lost
                    {
                        scenicList.push(new Scenery("item", -18528, 44749, 0, "freynor", ["freydicSword", 1, -15]));
                        scenicList.push(new Scenery("crate", -18288, 44448, 1.8/4 * Math.PI, 3, [1.2, "venningBarracksCrate1", 3, [[new Item("freydicSword", false, false), 8], [new Item("northernPlateArmour", false, false), 1], [new Item("chainArmour", false, false), 2]], "freynor", -25]));
                    }
                    else
                    {
                        scenicList.push(new Scenery("item", -18528, 44749, 0, "freynor", ["freydicSword", 1, -55, "Stambjord Soldier"]));
                        scenicList.push(new Scenery("crate", -18288, 44448, 1.8/4 * Math.PI, 3, [1.2, "venningBarracksCrate1", 3, [[new Item("freydicSword", false, false), 8], [new Item("northernPlateArmour", false, false), 1], [new Item("chainArmour", false, false), 2]], "freynor", -110, "Stambjord Soldier"]));
                    }
                }
                else
                {
                    scenicList.push(new Scenery("item", -18528, 44749, 0, "freynor", ["freydicSword", 1, 0]));
                    scenicList.push(new Scenery("crate", -18288, 44448, 1.8/4 * Math.PI, 3, [1.2, "venningBarracksCrate1", 3, [[new Item("freydicSword", false, false), 8], [new Item("northernPlateArmour", false, false), 1], [new Item("chainArmour", false, false), 2]], "freynor", 0]));
                }
                //city prison
                scenicList.push(new Scenery("trapdoor", -18509 + venningBarracksXMas, 44450, 0 * Math.PI, [483, 45], "venningCityPrison"));
                //center
                //inn
                scenicList.push(new Scenery("freydicBuilding1", -15192, 44627, 0, true));
                scenicList.push(new Scenery("sign", -15022, 44379, 0 * Math.PI, 3, "The Salty Gullet - Inn"));
                scenicList.push(new Scenery("barrel", -14990, 44825, -5, 1));
                scenicList.push(new Scenery("bartop", -15033, 44777, 0, true));
                scenicList.push(new Scenery("bed", -15219, 44426, 1/2 * Math.PI, false));
                scenicList.push(new Scenery("smallTable", -15308, 44570, 0 * Math.PI, false));
                scenicList.push(new Scenery("stumpStoolSml", -15370, 44576, -2.214, 2));
                scenicList.push(new Scenery("smallTable", -15239, 44645, 0.035 * Math.PI, false));
                scenicList.push(new Scenery("stumpStoolSml", -15185, 44639, 4.1, 2));
                scenicList.push(new Scenery("bed", -15378, 44787, 0 * Math.PI, false));
                scenicList.push(new Scenery("hearth", -14983, 44596, 3.14159 / -2, "lit"));
                scenicList.push(new Scenery("smallTable", -15142, 44606, -0.01 * Math.PI, false));
                scenicList.push(new Scenery("stumpStoolSml", -15131, 44556, 6, 2));
                scenicList.push(new Scenery("stumpStoolSml", -15133, 44657, 6.5, 2));
                scenicList.push(new Scenery("smallTable", -14989, 44422, 0.0125 * Math.PI, false));
                scenicList.push(new Scenery("stumpStoolSml", -14987, 44471, 3.7, 2));
                scenicList.push(new Scenery("stumpStoolSml", -15033, 44426, 7.2, 2));
                //well
                scenicList.push(new Scenery("well", -14640, 44562, 7, true));
                //Apothecary
                scenicList.push(new Scenery("freydicBuilding4", -15198, 43312, 0, true));
                scenicList.push(new Scenery("sign", -15168, 43185, 0 * Math.PI, 3, "Harborline Apothecary"));
                scenicList.push(new Scenery("lab", -15042, 43244, 1/2 * Math.PI, true));
                scenicList.push(new Scenery("woodenBench", -15059, 43335, 0, 0));
                scenicList.push(new Scenery("woodenBench", -15059, 43402, 0, 0));
                scenicList.push(new Scenery("woodenBench", -15259, 43335, 0, 0));
                scenicList.push(new Scenery("woodenBench", -15259, 43402, 0, 0));
                scenicList.push(new Scenery("crate", -15247, 43239, 3.2/4 * Math.PI, 1, [1]));
                scenicList.push(new Scenery("crate", -15379, 43242, 2.9/4 * Math.PI, 1, [1.2]));
                scenicList.push(new Scenery("crate", -15370, 43370, 1.75/4 * Math.PI, 1, [1.5]));
                scenicList.push(new Scenery("item", -15023, 43335, 0, "freynor", ["culprisLeaf", 1, -11]));
                scenicList.push(new Scenery("item", -15039, 43335, 0, "freynor", ["culprisLeaf", 1, -11]));
                scenicList.push(new Scenery("item", -15059, 43335, 0, "freynor", ["kelp", 1, -9]));
                scenicList.push(new Scenery("item", -15070, 43335, 0, "freynor", ["kelp", 1, -9]));
                scenicList.push(new Scenery("item", -15101, 43333, 0, "freynor", ["stomwikLeaf", 1, -7]));
                scenicList.push(new Scenery("item", -15015, 43403, 0, "freynor", ["tylunFlower", 1, -26]));
                scenicList.push(new Scenery("item", -15035, 43403, 0, "freynor", ["bushkaLeaves", 1, -10]));
                scenicList.push(new Scenery("item", -15056, 43403, 0, "freynor", ["ogard", 1, -40]));
                scenicList.push(new Scenery("item", -15074, 43403, 0, "freynor", ["wyrLeaf", 1, -19]));
                scenicList.push(new Scenery("item", -15097, 43403, 0, "freynor", ["wyrLeaf", 1, -19]));
                scenicList.push(new Scenery("item", -15221, 43403, 0, "freynor", ["wightbloomBerries", 1, -10]));
                scenicList.push(new Scenery("item", -15238, 43403, 0, "freynor", ["wightbloomBerries", 1, -10]));
                scenicList.push(new Scenery("item", -15266, 43403, 0, "freynor", ["glinMushrooms", 1, -6]));
                scenicList.push(new Scenery("item", -15291, 43403, 0, "freynor", ["cyrinthilimMushroom", 1, -40]));
                scenicList.push(new Scenery("item", -15219, 43332, 0, "freynor", ["haeflowerPollen", 1, -50]));
                scenicList.push(new Scenery("item", -15242, 43333, 0, "freynor", ["haeflowerPollen", 1, -50]));
                scenicList.push(new Scenery("item", -15265, 43334, 0, "freynor", ["neprilneBerries", 1, -7]));
                scenicList.push(new Scenery("item", -15286, 43335, 0, "freynor", ["neprilneBerries", 1, -7]));
                scenicList.push(new Scenery("item", -15304, 43332, 0, "freynor", ["lizardTail", 1, -3]));

                if (travelerFoodz == 1)
                {
                    //fish with berries -15236, 44643
                    scenicList.push(new Scenery("item", -15241, 44642, 0, "freynor", ["tyrniBerries", 1, 0, "Traveler"]));
                    scenicList.push(new Scenery("item", -15235, 44644, 0, "freynor", ["redCrombal", 1, 0, "Traveler"]));
                }
                else if (travelerFoodz == 0)
                {
                    //sealMeat and harst ale -15236, 44643
                    scenicList.push(new Scenery("item", -15236, 44643, 0, "freynor", ["sealMeat", 1, 0, "Traveler"]));
                    scenicList.push(new Scenery("item", -15240, 44633, 0, "freynor", ["harstAle", 1, 0, "Traveler"]));
                }
                else if (travelerFoodz == 2)
                {
                    //mead -15141, 44611
                    scenicList.push(new Scenery("item", -15136, 44605, 0, "freynor", ["mead", 1, 0, "Traveler"]));
                }
                else if (travelerFoodz == 3)
                {
                    //fish with berries -15318, 44565
                    scenicList.push(new Scenery("item", -15312, 44565, 0, "freynor", ["tyrniBerries", 1, 0, "Traveler"]));
                    scenicList.push(new Scenery("item", -15319, 44565, 0, "freynor", ["redCrombal", 1, 0, "Traveler"]));
                }
                else
                {
                    //mead -15318, 44565
                    scenicList.push(new Scenery("item", -15230, 44643, 0, "freynor", ["mead", 1, 0, "Traveler"]));
                }

                if (extraBeerCup)
                {
                    scenicList.push(new Scenery("item", -15000, 44414, 0, "freynor", ["pintGlass", 1, -1]));
                }

                //Alchemy Shop
                scenicList.push(new Scenery("freydicBuilding6", -15030, 43940, 0, true));
                scenicList.push(new Scenery("lab", -15031, 44037, 0, true));
                scenicList.push(new Scenery("forge", -15107, 44013, 1/4 * Math.PI, true));
                scenicList.push(new Scenery("hearth", -14960, 44037, 0, "lit"));
                scenicList.push(new Scenery("crate", -14964, 43900, 0/4 * Math.PI, 1, [1.41]));
                scenicList.push(new Scenery("crate", -15093, 43872, 3.6/4 * Math.PI, 1, [1.43]));
                scenicList.push(new Scenery("sign", -15161, 43890, -1/2 * Math.PI, 3, "Spectacular Formulations - Alchemy Shop"));
                //jewelery shop //todo finish jeweler's shop
                scenicList.push(new Scenery("freydicBuilding4", -21790, 43928, 0, true));
                scenicList.push(new Scenery("sign", -21612, 43796, 0 * Math.PI, 3, "North Sea Jeweler's"));
                //wealthyish home
                scenicList.push(new Scenery("freydicBuilding6", -20149, 43330, 0, true));
                scenicList.push(new Scenery("walrusHideRug", -20137, 43322, Math.PI, 1.4));
                scenicList.push(new Scenery("woodenBench", -20186, 43418, 0, 0));
                scenicList.push(new Scenery("bed", -20246, 43257, 0, false));
                if (togginBeer || quests.teshirNorthRoadQuest != "complete")
                {
                    scenicList.push(new Scenery("hearth", -20131, 43235, Math.PI, false));
                }
                else
                {
                    scenicList.push(new Scenery("hearth", -20131, 43235, Math.PI, "lit"));
                }
                scenicList.push(new Scenery("crate", -20058, 43409, 2/4 * Math.PI, 2, [1.3]));
                //homes
                scenicList.push(new Scenery("freydicBuilding5", -17873, 44619, 0, true));
                scenicList.push(new Scenery("freydicBuilding5", -17530, 44619, 0, true));
                scenicList.push(new Scenery("freydicBuilding5", -16622, 44810, 0, true));
                scenicList.push(new Scenery("freydicBuilding5", -16619, 44605, 0, true));
                scenicList.push(new Scenery("freydicBuilding5", -16339, 44650, 0, true));
                scenicList.push(new Scenery("freydicBuilding2", -15290, 43540, 0, true));
                scenicList.push(new Scenery("freydicBuilding2", -15052, 43640, 0, true));
                scenicList.push(new Scenery("freydicBuilding5", -15962, 44277, 0, true));
                scenicList.push(new Scenery("freydicBuilding5", -15964, 44047, 0, true));
                scenicList.push(new Scenery("freydicBuilding5", -16144, 43906, 0, true));
                scenicList.push(new Scenery("freydicBuilding2", -14427, 44478, 0, true));
                scenicList.push(new Scenery("freydicBuilding5", -15963, 43155, 0, true));
                scenicList.push(new Scenery("freydicBuilding5", -15931, 42980, 0, true));
                scenicList.push(new Scenery("freydicBuilding5", -15914, 43858, 0, true));
                for (var i = 0; i < 14; i++)
                {
                    scenicList.push(new Scenery("freydicBuilding2", -16236 - 270 * i, 43341, 0, true));
                }
                for (var i = 0; i < 19; i++)
                {
                    if (i != 8 && i != 9 && i != 10)
                    {
                        scenicList.push(new Scenery("freydicBuilding5", -16388 - 270 * i, 43915, 0, true));
                    }
                    else if (i == 9)
                    {
                        scenicList.push(new Scenery("freydicBuilding5", -16388 - 150 - 270 * i, 43915, 0, true));
                    }
                }
                for (var i = 0; i < 4; i++)
                {
                    scenicList.push(new Scenery("freydicBuilding2", -21042 - 270 * i, 43331, 0, true));
                }

                for (var i = 0; i < 3; i++)
                {
                    scenicList.push(new Scenery("freydicBuilding3", -20748, 43048 - 300 * i, 0, true));
                    scenicList.push(new Scenery("hearth", -20649, 43115 - 300 * i, -1/2 * Math.PI, "lit"));
                    scenicList.push(new Scenery("walrusHideRug", -20748, 43053 - 300 * i, 0 * Math.PI, 1.25));
                    scenicList.push(new Scenery("woodenBench", -20854, 43079 - 300 * i, -1/2 * Math.PI, 0));
                    scenicList.push(new Scenery("bed", -20820, 42962 - 300 * i, -1/2 * Math.PI, false));
                    scenicList.push(new Scenery("smallTable", -20651, 42962 - 300 * i, 1/2 * Math.PI, 0));

                }
                for (var i = 0; i < 3; i++)
                {
                    scenicList.push(new Scenery("freydicBuilding6", -20149, 43048 - 300 * i, 0, true));
                    scenicList.push(new Scenery("hearth", -20248, 43115 - 300 * i, 1/2 * Math.PI, "lit"));
                    scenicList.push(new Scenery("walrusHideRug", -20137, 43042 - 300 * i, Math.PI, 1.25));
                    scenicList.push(new Scenery("woodenBench", -20046, 43079 - 300 * i, 1/2 * Math.PI, 0));
                    scenicList.push(new Scenery("bed", -20076, 42958 - 300 * i, 1/2 * Math.PI, false));
                    scenicList.push(new Scenery("smallTable", -20242, 42957 - 300 * i, 1/2 * Math.PI, 0));
                }
                //the hint of uniqueness in the genericly spawned homes
                scenicList.push(new Scenery("item", -20237, 42654, 0, "freynor", ["tyrniBerries", 1, -8]));
                scenicList.push(new Scenery("item", -20243, 42654, 0, "freynor", ["tyrniBerries", 1, -8]));
                scenicList.push(new Scenery("item", -20240, 42654, 0, "freynor", ["redCrombal", 1, -4]));

                //player purchasable home
                scenicList.push(new Scenery("freydicBuilding3", -20748, 43333, 0, true));
                scenicList.push(new Scenery("walrusHideRug", -20748, 43333, 0 * Math.PI, 1.5));
                scenicList.push(new Scenery("woodenBench", -20708, 43429, 0, 0));
                if (quests.venningHomeOwned != true)
                {
                    scenicList.push(new Scenery("sign", -20616, 43385, 1/2 * Math.PI, 3, "For Sale - 7100 coins"));
                    scenicList.push(new Scenery("bed", -20814, 43243, 1/2 * Math.PI, false));
                    scenicList.push(new Scenery("hearth", -20851, 43330, 1/2 * Math.PI, false));
                    scenicList.push(new Scenery("crate", -20660, 43259, 2.426/4 * Math.PI - Math.PI, 2, [1.4]));
                }
                else
                {
                    scenicList.push(new Scenery("sign", -20616, 43385, 1/2 * Math.PI, 3, "Seasalt Lodge"));
                    scenicList.push(new Scenery("bed", -20814, 43243, 1/2 * Math.PI, true));
                    scenicList.push(new Scenery("hearth", -20851, 43330, 1/2 * Math.PI, true));
                    scenicList.push(new Scenery("crate", -20660, 43259, 2.426/4 * Math.PI - Math.PI, 4, [1.4, "venningHomeCrate1", 7, [[new Item("woodenBowl", false, false), 5]], false, 0]));
                }
                //well
                scenicList.push(new Scenery("well", -21420, 43890, 9, true));
                //general store #2
                scenicList.push(new Scenery("freydicBuilding3", -21960, 43622, 0, true));
                scenicList.push(new Scenery("sign", -21827, 43687, 1/2 * Math.PI, 3, "Venning City Produce Store"));
                scenicList.push(new Scenery("woodenBench", -21908, 43718, 0, 0));
                scenicList.push(new Scenery("woodenBench", -21908, 43660, 0, 0));
                scenicList.push(new Scenery("woodenBench", -21908, 43527, 0, 0));
                scenicList.push(new Scenery("item", -21868, 43717, 0, "freynor", ["potato", 1, -2]));
                scenicList.push(new Scenery("item", -21859, 43713, 0, "freynor", ["potato", 1, -2]));
                scenicList.push(new Scenery("item", -21882, 43717, 0, "freynor", ["carrot", 1, -2]));
                scenicList.push(new Scenery("item", -21890, 43720, 0, "freynor", ["carrot", 1, -2]));
                scenicList.push(new Scenery("item", -21882, 43717, 0, "freynor", ["harstGrain", 1, -2]));
                scenicList.push(new Scenery("item", -21919, 43716, 0, "freynor", ["harstGrain", 1, -2]));
                scenicList.push(new Scenery("item", -21949, 43717, 0, "freynor", ["harstFlour", 1, -4]));
                scenicList.push(new Scenery("item", -21932, 43719, 0, "freynor", ["kelp", 1, -3]));

                scenicList.push(new Scenery("item", -21862, 43659, 0, "freynor", ["suuliMelon", 1, -4]));
                scenicList.push(new Scenery("item", -21885, 43661, 0, "freynor", ["suuliMelon", 1, -4]));
                scenicList.push(new Scenery("item", -21899, 43660, 0, "freynor", ["pluttBerries", 1, -5]));
                scenicList.push(new Scenery("item", -21911, 43660, 0, "freynor", ["akerBerries", 1, -5]));
                scenicList.push(new Scenery("item", -21922, 43662, 0, "freynor", ["bushkaBerries", 1, -3]));
                scenicList.push(new Scenery("item", -21952, 43656, 0, "freynor", ["tyrniBerries", 1, -4]));

                scenicList.push(new Scenery("item", -21869, 43528, 0, "freynor", ["bucketOfWaantiMilk", 1, -20]));
                scenicList.push(new Scenery("item", -21892, 43529, 0, "freynor", ["bucketOfWaantiMilk", 1, -20]));
                scenicList.push(new Scenery("item", -21923, 43527, 0, "freynor", ["bucketOfWaantiMilk", 1, -20]));
                scenicList.push(new Scenery("item", -21946, 43527, 0, "freynor", ["waantiButter", 1, -19]));
                //Storage Vender
                scenicList.push(new Scenery("freydicBuilding8", -15944, 43348, 0, true));
                scenicList.push(new Scenery("sign", -16010, 43425, Math.PI + 0.15, 3, "Venning Storage Company"));
                scenicList.push(new Scenery("crate", -15884, 43364, 3.88/4 * Math.PI - Math.PI, 2, [1.15]));
                scenicList.push(new Scenery("crate", -15973, 43323, 3.2/4 * Math.PI - Math.PI, 1, [1.31]));
                if (quests.venningStoragePurchased) //costs 800 coins
                {
                    scenicList.push(new Scenery("crate", -15896, 43311, 2.626/4 * Math.PI - Math.PI, 4, [1.26, "venningStorageCrate1", 3, [], false, 0]));
                }
                else
                {
                    scenicList.push(new Scenery("crate", -15896, 43311, 2.626/4 * Math.PI - Math.PI, 2, [1.26]));
                }
                //Farmhouse
                scenicList.push(new Scenery("freydicBuilding6", -21919, 40227, 0, true));
                scenicList.push(new Scenery("bed", -21855, 40317, -1/2 * Math.PI, false));
                scenicList.push(new Scenery("hearth", -21816, 40186, -1/2 * Math.PI, "lit"));
                scenicList.push(new Scenery("crate", -21959, 40150, 0/4 * Math.PI, 4, [1.5, "venningFarmhouseCrate1", 4, [[new Item("harstGrain", false, false), 8], [new Item("potato", false, false), 6], [new Item("carrot", false, false), 2], [new Item("suuliMelon", false, false), 1]], "freynor", -25]));
                //Venning City Temple
                scenicList.push(new Scenery("freydicBuilding7", -20441, 41964, 0, true));
                scenicList.push(new Scenery("sign", -20451, 42209, -1 * Math.PI, 3, "Temple of Gemesh"));
                scenicList.push(new Scenery("smallRockCircle", -20439, 41956, 0, true));
                scenicList.push(new Scenery("woodenBench", -20324, 41958, 1/2 * Math.PI, 0));
                scenicList.push(new Scenery("woodenBench", -20438, 42070, 0, 0));
                scenicList.push(new Scenery("woodenBench", -20566, 41958, 1/2 * Math.PI, 0));
                scenicList.push(new Scenery("woodenBench", -20442, 41835, 0, 0));
                scenicList.push(new Scenery("hearth", -20445, 41758, Math.PI, "lit"));
                scenicList.push(new Scenery("hearth", -20443, 42167, 0, "lit"));
                scenicList.push(new Scenery("hearth", -20230, 41959, -1/2 * Math.PI, "lit"));
                scenicList.push(new Scenery("hearth", -20641, 41956, 1/2 * Math.PI, "lit"));
                scenicList.push(new Scenery("item", -20453, 41953, 0, "freynor", ["culprisLeaf", 1, -10]));
                scenicList.push(new Scenery("item", -20443, 41975, 0, "freynor", ["culprisLeaf", 1, -10]));
                scenicList.push(new Scenery("item", -20422, 41951, 0, "freynor", ["culprisLeaf", 1, -10]));
                scenicList.push(new Scenery("item", -20439, 41956, 0, "freynor", ["tylunFlower", 1, -60]));
                scenicList.push(new Scenery("smallTable", -20635, 41764, 0, false));
                scenicList.push(new Scenery("smallTable", -20249, 41764, 0, false));
                scenicList.push(new Scenery("smallTable", -20239, 42166, 0, false));
                scenicList.push(new Scenery("smallTable", -20640, 42170, 0, false));


                if (togginBeer)
                {
                    scenicList.push(new Scenery("item", -14982, 44780, 0, "freynor", ["harstAle", 1, 0, "Toggin"]));
                }
                if (randoDrinkYes)
                {
                    scenicList.push(new Scenery("item", -14982, 44426, 0, "freynor", ["pintGlass", 1, -1]));
                }
                if (quests.venningMapItems)
                {
                    quests.venningMapItems = false;
                    worldItems.push([new Item("tablet", -20635, 41764), 1]);
                    worldItems.push([new Item("iceClaymore", -20249, 41764), 1]);
                    worldItems.push([new Item("tablet", -20239, 42166), 1]);
                    worldItems.push([new Item("tablet", -20640, 42170), 1]);
                }

                if (quests.killedStambjordHeir || quests.rannukThreatened && player.title != "Nobility" && player.title != "Royalty")
                {
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Stambjord Soldier" || ArtificialIntelligenceAccess[i].ID == "Stambjord Huskarl" || ArtificialIntelligenceAccess[i].ID == "Stambjord Captain")
                        {
                            ArtificialIntelligenceAccess[i].disturbedTime = new Date().getTime() + 10000000;
                        }
                    }
                }

                if (uniqueChars.rannukLDS == false && uniqueChars.jalmariLDS == false && quests.aNobleConspiracyQuest == true)
                {
                    quests.aNobleConspiracyQuest = "complete";
                    quests.aNobleConspiracyCompletionStyle = "eradicate";
                    quests.completeQuests.push({name: "A Noble Conspiracy", description: "You fixed the corruption problem yourself by killing both Captain Jalmari Salt-Blood and the Jarl of Venning who was supporting the piratry by permitting it to continue in exchange for a cut of the contraband."});
                    if (player.class == "mage")
                    {
                        player.magicalExperience += 200;
                    }
                    else
                    {
                        player.experience += 555;
                    }
                    player.fame += 1;
                }

                change = "n4e2";
            }
        }
        else if (region == "n4e3")
        {
            if (change != "n4e3")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                //meant for the map

                //humans

                //balkur
                //ArtificialIntelligenceAccess.push(new Unit(-11656, 38003, "Balkur", false, "Kalosh"));

                //waanti
                ArtificialIntelligenceAccess.push(new Unit(-26829, 40246, "Waanti", true, "yamo"));
                ArtificialIntelligenceAccess.push(new Unit(-26555, 40365, "Waanti", false, "yama"));

                //koobu
                //ArtificialIntelligenceAccess.push(new Unit(-8193, 40071, "Koobu", false, "Koplepa"));


                //winter wolves
                ArtificialIntelligenceAccess.push(new Unit(-25462, 38599, "WinterWolf", false, "Lauggeli"));
                ArtificialIntelligenceAccess.push(new Unit(-25866, 38378, "WinterWolf", false, "Lauggela"));
                ArtificialIntelligenceAccess.push(new Unit(-25532, 38236, "WinterWolf", false, "Lauggelo"));
                ArtificialIntelligenceAccess.push(new Unit(-24470, 39288, "WinterWolf", false, "Lauggelu"));

                //beach creatures

                //elder walruses
                ArtificialIntelligenceAccess.push(new Unit(-31664, 37726, "Walrus", true, "Ice Toby"));
                ArtificialIntelligenceAccess.push(new Unit(-30896, 38289, "Walrus", true, "Ice Tammy"));
                ArtificialIntelligenceAccess.push(new Unit(-31103, 40629, "Walrus", true, "Big Remmy"));

                //walruses
                ArtificialIntelligenceAccess.push(new Unit(-32003, 38599, "Walrus", false, "Santa Claws"));
                ArtificialIntelligenceAccess.push(new Unit(-31309, 38865, "Walrus", false, "Mary Claws"));
                ArtificialIntelligenceAccess.push(new Unit(-31828, 39263, "Walrus", false, "Ringo Floppykin I"));
                ArtificialIntelligenceAccess.push(new Unit(-31382, 39616, "Walrus", false, "Bagey"));
                ArtificialIntelligenceAccess.push(new Unit(-30474, 38728, "Walrus", false, "Baje"));
                ArtificialIntelligenceAccess.push(new Unit(-30797, 40026, "Walrus", false, "Baige"));
                ArtificialIntelligenceAccess.push(new Unit(-29844, 41418, "Walrus", false, "Bazshe"));
                ArtificialIntelligenceAccess.push(new Unit(-28707, 41352, "Walrus", false, "Bazshel"));
                ArtificialIntelligenceAccess.push(new Unit(-29298, 41875, "Walrus", false, "Beige"));

                ArtificialIntelligenceAccess.push(new Unit(-29365, 39350, "Cangrejo", "baby", "Cangrejito"));
                ArtificialIntelligenceAccess.push(new Unit(-29941, 37759, "Cangrejo", "baby", "Cangrejico"));
                ArtificialIntelligenceAccess.push(new Unit(-28489, 40127, "Cangrejo", "baby", "Cangrejillo"));

                if (Math.round(Math.random()))
                {
                    ArtificialIntelligenceAccess.push(new Unit(-25407, 43001, "Cangrejo", false, "Cangrejona"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(-25407, 43001, "Cangrejo", "baby", "Cangrebebe"));
                }
                ArtificialIntelligenceAccess.push(new Unit(-25464, 45289, "Cangrejo", false, "Cangrejon"));

                //anemones
                ArtificialIntelligenceAccess.push(new Unit(-30091, 40871, "Anemone", false, "slime"));
                ArtificialIntelligenceAccess.push(new Unit(-30008, 40973, "Anemone", "baby", "slimial"));
                ArtificialIntelligenceAccess.push(new Unit(-29699, 39944, "Anemone", "baby", "slimielle"));
                ArtificialIntelligenceAccess.push(new Unit(-29946, 40055, "Anemone", "baby", "slimiella"));
                ArtificialIntelligenceAccess.push(new Unit(-30695, 39416, "Anemone", true, "slyme"));

                ArtificialIntelligenceAccess.push(new Unit(-29061, 38556, "Anemone", false, "slimo"));
                ArtificialIntelligenceAccess.push(new Unit(-29217, 38452, "Anemone", false, "slimea"));
                ArtificialIntelligenceAccess.push(new Unit(-26737, 43343, "Anemone", true, "slymifyze"));
                ArtificialIntelligenceAccess.push(new Unit(-26626, 43700, "Anemone", "baby", "slimiellia"));

                ArtificialIntelligenceAccess.push(new Unit(-24971, 44618, "Anemone", false, "slimerre"));

                //seals
                ArtificialIntelligenceAccess.push(new Unit(-28840, 42306, "Seal", true, "aurf"));
                ArtificialIntelligenceAccess.push(new Unit(-28179, 42042, "Seal", true, "aurf"));
                ArtificialIntelligenceAccess.push(new Unit(-28612, 42760, "Seal", "baby", "aurf"));
                ArtificialIntelligenceAccess.push(new Unit(-28055, 42510, "Seal", false, "aurf"));
                ArtificialIntelligenceAccess.push(new Unit(-28349, 42777, "Seal", false, "aurf"));
                ArtificialIntelligenceAccess.push(new Unit(-28975, 42329, "Seal", false, "aurf"));
                ArtificialIntelligenceAccess.push(new Unit(-29398, 42486, "Seal", false, "aurf"));

                //mites
                ArtificialIntelligenceAccess.push(new Unit(-25058, 42410, "BeachMite", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-25063, 42340, "BeachMite", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-25014, 42355, "BeachMite", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-26272, 42351, "BeachMite", false, "docile"));

                //Plants
                scenicList.push(new Scenery("bushkaPlant", -25747, 38997, -7.9, true));
                scenicList.push(new Scenery("tyrniPlant", -26280, 40146, -9, true));
                scenicList.push(new Scenery("tyrniPlant", -26666, 38336, 8, true));
                //scenicList.push(new Scenery("wightbloomPlant", -9294, 38575, 10, true));

                //beached kelp
                scenicList.push(new Scenery("beachedKelp", -25566, 43009, 1.5, 2));

                //Scenery
                //scenicList.push(new Scenery("stone", -8132 , 46141, 4.1, 1.5, 3));

                //algae
                //scenicList.push(new Scenery("algae", -8894, 45943, 3.4, 2));

                for (var i = 0; i < 12; i++)
                {
                    for (var j = 0; j < 7; j++)
                    {
                        scenicList.push(new Scenery("harstPlant", -22144 - j * 35, 39907 + i * 50, Math.random() * 2, "freynor"));
                    }
                }
                for (var i = 0; i < 6; i++)
                {
                    for (var j = 0; j < 5; j++)
                    {
                        scenicList.push(new Scenery("potatoPlant", -22426 - j * 35, 39907 + i * 50, Math.random() * 2, "freynor"));
                    }
                }
                for (var i = 0; i < 6; i++)
                {
                    for (var j = 0; j < 3; j++)
                    {
                        scenicList.push(new Scenery("carrotPlant", -22610 - j * 35, 39907 + i * 50, Math.random() * 2, "freynor"));
                    }
                }
                for (var i = 0; i < 4; i++)
                {
                    for (var j = 0; j < 6; j++)
                    {
                        scenicList.push(new Scenery("suuliPlant", -22426 - j * 50, 40225 + i * 65, Math.random() * 2, "freynor"));
                    }
                }

                change = "n4e3";
            }
        }
        else if (region == "n5w1")
        {
            if (change != "n5w1")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                //meant for the map

                //humans
                //Captain Jalmari Salt-Blood
                if (uniqueChars.jalmariLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Captain Jalmari Salt-Blood")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(13605, 54013, "Soldier", false, "Captain Jalmari Salt-Blood", {race: "Freynor", faction: "hostile", con: 25, speed: 1.25, outfit: ["saltBloodArmour", 15], weapon: ["burningSmashStick", [20, 15], 18, 20, 2.2], ranged: [false, "arrow", 9, 2100, 1, 7, 0, "none", 1.2], patrolStops: 1, patrolLoop: true, route:[[13605, 54013]]}));
                    }
                }
                if (uniqueChars.jalmariLDS)
                {
                    ArtificialIntelligenceAccess.push(new Unit(13867, 54715, "Soldier", false, "Salt-Blood Pirate", {race: "Freynor", faction: "hostile", con: 6, speed: 1.4, outfit: ["sealSkinClothing", 0], weapon: ["freydicSpear", [4, 4], 4, 16, 2.5], ranged: [false, "arrow", 4, 1000, 1, 3, 0, "none", 2.25], patrolStops: 0, patrolLoop: false, route:[[14551, 46087]]}));
                    ArtificialIntelligenceAccess.push(new Unit(14007, 54484, "Soldier", false, "Salt-Blood Pirate", {race: "Freynor", faction: "hostile", con: 8, speed: 1, outfit: ["sealSkinClothing", 0], weapon: ["longbow", [4, 4], 4, 16, 2.5], ranged: [true, "oiledArrow", 6, 2000, 1, 6, 0, "fire", 1.38], patrolStops: 0, patrolLoop: false, route:[[14551, 46087]]}));

                    ArtificialIntelligenceAccess.push(new Unit(14564, 54097, "Soldier", false, "Salt-Blood Pirate", {race: "Freynor", faction: "hostile", con: 11, speed: 1.3, outfit: ["walrusLeatherArmour", 6], weapon: ["freydicSword", [7, 6], 0, 16, 1.15], ranged: [false, "arrow", 4, 1000, 1, 3, 0, "none", 2.25], patrolStops: 0, patrolLoop: false, route:[[14295, 45996]]}));
                    ArtificialIntelligenceAccess.push(new Unit(14315, 53975, "Soldier", false, "Salt-Blood Pirate", {race: "Freynor", faction: "hostile", con: 7, speed: 1.2, outfit: ["sealSkinClothing", 0], weapon: ["mace", [5, 3], 9, 16, 2.5], ranged: [false, "arrow", 4, 1000, 1, 3, 0, "none", 2.25], patrolStops: 0, patrolLoop: false, route:[[14551, 46087]]}));
                    ArtificialIntelligenceAccess.push(new Unit(14376, 53824, "Soldier", false, "Salt-Blood Pirate", {race: "Freynor", faction: "hostile", con: 9, speed: 1.25, outfit: ["walrusLeatherArmour", 5.5], weapon: ["longbow", [4, 4], 4, 16, 2.5], ranged: [true, "oiledArrow", 7, 2200, 1, 7, 0, "fire", 1.46], patrolStops: 0, patrolLoop: false, route:[[14551, 46087]]}));
                    ArtificialIntelligenceAccess.push(new Unit(14509, 53852, "Soldier", false, "Salt-Blood Pirate", {race: "Freynor", faction: "hostile", con: 7, speed: 1.1, outfit: ["walrusLeatherArmour", 7], weapon: ["freydicSword", [7, 6], 0, 16, 1.26], ranged: [false, "arrow", 4, 1000, 1, 3, 0, "none", 2.25], patrolStops: 0, patrolLoop: false, route:[[14295, 45996]]}));

                    ArtificialIntelligenceAccess.push(new Unit(13788, 53177, "Soldier", false, "Salt-Blood Pirate", {race: "Freynor", faction: "hostile", con: 5, speed: 1.4, outfit: ["sealSkinClothing", 0], weapon: ["freydicSpear", [4, 4], 4, 16, 2.5], ranged: [false, "arrow", 4, 1000, 1, 3, 0, "none", 2.25], patrolStops: 0, patrolLoop: false, route:[[14551, 46087]]}));
                    ArtificialIntelligenceAccess.push(new Unit(14007, 54484, "Soldier", false, "Salt-Blood Pirate", {race: "Freynor", faction: "hostile", con: 10, speed: 1.35, outfit: ["sealSkinClothing", 0], weapon: ["longbow", [4, 4], 4, 16, 2.5], ranged: [true, "oiledArrow", 8, 2000, 1, 5, 0, "fire", 1.5], patrolStops: 0, patrolLoop: false, route:[[14551, 46087]]}));
                    ArtificialIntelligenceAccess.push(new Unit(13228, 53182, "Soldier", false, "Salt-Blood Pirate", {race: "Freynor", faction: "hostile", con: 12, speed: 0.95, outfit: ["walrusLeatherArmour", 6], weapon: ["freydicSword", [7, 7], 0, 16, 1.15], ranged: [false, "arrow", 4, 1000, 1, 3, 0, "none", 2.25], patrolStops: 0, patrolLoop: false, route:[[14295, 45996]]}));

                    ArtificialIntelligenceAccess.push(new Unit(13029, 53766, "Soldier", false, "Salt-Blood Pirate", {race: "Freynor", faction: "hostile", con: 5.5, speed: 1.4, outfit: ["walrusLeatherArmour", 6], weapon: ["longbow", [4, 4], 4, 16, 2.5], ranged: [true, "oiledArrow", 9, 2300, 1, 8, 0, "fire", 1.65], patrolStops: 0, patrolLoop: false, route:[[14551, 46087]]}));
                    ArtificialIntelligenceAccess.push(new Unit(13145, 53718, "Soldier", false, "Salt-Blood Pirate", {race: "Freynor", faction: "hostile", con: 8, speed: 1.25, outfit: ["walrusLeatherArmour", 5], weapon: ["mace", [9, 4], 8, 16, 3], ranged: [false, "arrow", 4, 1000, 1, 3, 0, "none", 2.25], patrolStops: 0, patrolLoop: false, route:[[14551, 46087]]}));
                    ArtificialIntelligenceAccess.push(new Unit(13072, 53636, "Soldier", false, "Salt-Blood Pirate", {race: "Freynor", faction: "hostile", con: 9, speed: 1.35, outfit: ["sealSkinClothing", 0], weapon: ["freydicSpear", [4, 5], 5, 16, 2.5], ranged: [false, "arrow", 4, 1000, 1, 3, 0, "none", 2.25], patrolStops: 0, patrolLoop: false, route:[[14551, 46087]]}));
                }

                //balkur
                //ArtificialIntelligenceAccess.push(new Unit(-11656, 38003, "Balkur", false, "Kalosh"));

                //waanti
                //ArtificialIntelligenceAccess.push(new Unit(4592, 40636, "Waanti", "baby", "yiam"));

                //koobu
                //ArtificialIntelligenceAccess.push(new Unit(-8193, 40071, "Koobu", false, "Koplepa"));


                //winter wolves
                //ArtificialIntelligenceAccess.push(new Unit(-4603, 37889, "WinterWolf", false, "Lauggel"));

                //glutids
                //ArtificialIntelligenceAccess.push(new Unit(-5986, 42096, "Glutid", true, "Gluupto", {patrolStops: 6, patrolLoop: true, route:[[-6169, 41490], [-7261, 41806], [-7605, 41527], [-7190, 42889], [-5876, 43183], [-5986, 42096]]}));
                //ArtificialIntelligenceAccess.push(new Unit(-7659, 42050, "Glutid", false, "Gluho", {patrolStops: 1, patrolLoop: true, route:[[-7659, 42050]]}));



                //beach creatures
                ArtificialIntelligenceAccess.push(new Unit(15988, 53128, "Cangrejo", false, "tip"));
                ArtificialIntelligenceAccess.push(new Unit(16712, 53786, "Cangrejo", false, "tip"));
                ArtificialIntelligenceAccess.push(new Unit(13774, 51737, "Cangrejo", "baby", "tip"));
                ArtificialIntelligenceAccess.push(new Unit(12228, 55188, "Cangrejo", "baby", "tip"));
                ArtificialIntelligenceAccess.push(new Unit(14576, 55379, "Cangrejo", "baby", "tip"));
                ArtificialIntelligenceAccess.push(new Unit(11969, 54284, "Cangrejo", "baby", "tip"));

                //anemones
                ArtificialIntelligenceAccess.push(new Unit(10998, 52903, "Anemone", false, "tip"));
                ArtificialIntelligenceAccess.push(new Unit(10990, 54179, "Anemone", "baby", "tip"));
                ArtificialIntelligenceAccess.push(new Unit(15625, 55912, "Anemone", true, "tip"));
                ArtificialIntelligenceAccess.push(new Unit(16541, 53765, "Anemone", false, "tip"));
                ArtificialIntelligenceAccess.push(new Unit(16332, 54036, "Anemone", "baby", "tip"));

                //seals
                ArtificialIntelligenceAccess.push(new Unit(12229, 50714, "Seal", false, "tip"));
                ArtificialIntelligenceAccess.push(new Unit(11633, 50925, "Seal", true, "tip"));
                ArtificialIntelligenceAccess.push(new Unit(11633, 50925, "Seal", "baby", "tip"));

                //mites
                ArtificialIntelligenceAccess.push(new Unit(12800, 50960, "BeachMite", false, "tip"));
                ArtificialIntelligenceAccess.push(new Unit(12835, 50950, "BeachMite", false, "tip"));
                ArtificialIntelligenceAccess.push(new Unit(12771, 50955, "BeachMite", false, "tip"));
                ArtificialIntelligenceAccess.push(new Unit(11089, 51212, "BeachMite", false, "tip"));
                ArtificialIntelligenceAccess.push(new Unit(11111, 51248, "BeachMite", false, "tip"));
                ArtificialIntelligenceAccess.push(new Unit(13139, 55538, "BeachMite", false, "tip"));
                ArtificialIntelligenceAccess.push(new Unit(15493, 54007, "BeachMite", false, "tip"));
                ArtificialIntelligenceAccess.push(new Unit(15490, 54000, "BeachMite", false, "tip"));
                ArtificialIntelligenceAccess.push(new Unit(15500, 54000, "BeachMite", false, "tip"));

                //set all Ai to nuetral2 (a team that does not attack any AI but the player and their team)
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "tip")
                    {
                        ArtificialIntelligenceAccess[i].baseTeam = "neutral2";
                    }
                }

                //cloimids
                //ArtificialIntelligenceAccess.push(new Unit(-8909, 45992, "Cloimid", false, "moistClambyGrope", {rotation: -120/360 * 2 * Math.PI}));

                //Plants
                //scenicList.push(new Scenery("bushkaPlant", -9423, 38704, 20, true));
                scenicList.push(new Scenery("tyrniPlant", 12122, 52402, 5, true));
                //scenicList.push(new Scenery("tyrniPlant", -12270, 38406, 0.4, true));
                //scenicList.push(new Scenery("tyrniPlant", -9849, 41627, -2.4, true));
                //scenicList.push(new Scenery("wightbloomPlant", -9294, 38575, 10, true));

                //beached kelp
                if (Math.round(Math.random()))
                {
                    scenicList.push(new Scenery("beachedKelp", 12198, 51016, 2.5, 2));
                    scenicList.push(new Scenery("beachedKelp", 11178, 52899, 9, 0));
                    scenicList.push(new Scenery("beachedKelp", 13698, 55394, 5.5, 0));
                }
                else
                {
                    scenicList.push(new Scenery("beachedKelp", 12198, 51016, 3.7, 1));
                    scenicList.push(new Scenery("beachedKelp", 15266, 55051, -8, 2));
                    scenicList.push(new Scenery("beachedKelp", 15539, 53157, -6.6, 0));
                }

                //Scenery
                //scenicList.push(new Scenery("stone", -8132 , 46141, 4.1, 1.5, 3));

                //algae
                //scenicList.push(new Scenery("algae", -8894, 45943, 3.4, 2));

                //buildings
                //Jalmari's Cabin
                scenicList.push(new Scenery("freydicBuilding9", 13606, 54212, 0, true));
                scenicList.push(new Scenery("smallTable", 13643, 54172, 1/2 * Math.PI, 0));
                scenicList.push(new Scenery("stumpStoolSml", 13676, 54178, 1/2 * Math.PI, 0));
                scenicList.push(new Scenery("crate", 13658, 54245, 1/4 * Math.PI, 4, [1.36, "jalmariPirateCrate1", 5, [[new Item("salt", false, false), 19], [new Item("sealMeat", false, false), 9], [new Item("crabClaw", false, false), 3], [new Item("bucketOfWaantiMilk", false, false), 2], [new Item("harstAle", false, false), 36]], false, 0]));
                scenicList.push(new Scenery("crate", 13716, 54098, -1.5/4 * Math.PI, 4, [1.36, "jalmariPirateCrate2", 5, [[new Item("jarOfOil", false, false), 8], [new Item("oilLantern", false, false), 2], [new Item("beesWax", false, false), 20], [new Item("candle", false, false), 20], [new Item("oilLamp", false, false), 3]], false, 0]));
                scenicList.push(new Scenery("crate", 13414, 54207, 0.15/4 * Math.PI, 3, [1.45, "jalmariPirateCrate3", 6, [[new Item("yaihefBerries", false, false), 9], [new Item("bequonFruit", false, false), 6], [new Item("callopBerries", false, false), 14], [new Item("pluttBerries", false, false), 25], [new Item("akerBerries", false, false), 17], [new Item("suuliMelon", false, false), 8]], false, 0]));
                scenicList.push(new Scenery("crate", 13636, 54164, 0.5/4 * Math.PI, 4, [0.4, "jalmariPirateCrate4", 1, [[new Item("coins", false, false), 337]], false, 0]));
                scenicList.push(new Scenery("barrel", 13600, 54251, -3/2 * Math.PI, 0));
                scenicList.push(new Scenery("barrel", 13733, 54189, 2.55/2 * Math.PI, 0));
                scenicList.push(new Scenery("barrel", 13707, 53157, 1/4 * Math.PI, 1));
                //Pirate Campout 1
                scenicList.push(new Scenery("barrel", 13025, 53825, 1.19/2 * Math.PI, 0));
                scenicList.push(new Scenery("tent", 12911, 53822, 135/360 * Math.PI, true));
                scenicList.push(new Scenery("tent", 12911, 53637, 189/360 * Math.PI, true));
                scenicList.push(new Scenery("tent", 13257, 53691, 250/360 * 2 * Math.PI, true));
                //Pirate Campout 2
                scenicList.push(new Scenery("tent", 14246, 54042, 45/360 * 2 * Math.PI, true));
                scenicList.push(new Scenery("tent", 14637, 53993, -60/360 * 2 * Math.PI, true));
                scenicList.push(new Scenery("tent", 14637, 53753, 235/360 * 2 * Math.PI, true));
                scenicList.push(new Scenery("tent", 14250, 53699, 144/360 * 2 * Math.PI, true));
                //Pirate Campout 3
                scenicList.push(new Scenery("tent", 13916, 53238, 275/360 * 2 * Math.PI, true));
                scenicList.push(new Scenery("tent", 13740, 53407, 0/360 * 2 * Math.PI, true));
                scenicList.push(new Scenery("tent", 13266, 53089, 166/360 * 2 * Math.PI, true));
                //Pirate Campout 4
                scenicList.push(new Scenery("tent", 14134, 54540, 243/360 * 2 * Math.PI, true));
                scenicList.push(new Scenery("tent", 13757, 54581, 109/360 * 2 * Math.PI, true));

                //landing
                scenicList.push(new Scenery("boat", 10896, 53452, 92/360 * 2 * Math.PI, true));
                scenicList.push(new Scenery("boat", 10719, 53725, 131/360 * 2 * Math.PI, true));
                scenicList.push(new Scenery("boat", 11334, 53785, 84/360 * 2 * Math.PI, true));
                scenicList.push(new Scenery("boat", 10729, 52922, 75/360 * 2 * Math.PI, true));
                scenicList.push(new Scenery("boat", 10381, 52669, 97/360 * 2 * Math.PI, true));
                scenicList.push(new Scenery("boat", 10646, 52472, 111/360 * 2 * Math.PI, true));

                if (uniqueChars.jalmariLDS)
                {
                    if (Math.random() > 0.35)
                    {
                        scenicList.push(new Scenery("item", 13637, 54179, 0, false, ["harstAle", 1, 0]));
                        scenicList.push(new Scenery("item", 13653, 54171, 0, false, ["crabMeat", 1, 0]));
                    }
                    else
                    {
                        scenicList.push(new Scenery("item", 13647, 54174, 0, false, ["pintGlass", 1, 0]));
                    }
                    scenicList.push(new Scenery("campFire", 13081, 53739, 260/360 * 2 * Math.PI, "permaLit"));
                    scenicList.push(new Scenery("campFire", 14408, 53873, 11/360 * 2 * Math.PI, "permaLit"));
                    scenicList.push(new Scenery("campFire", 13623, 53254, -200/360 * 2 * Math.PI, "permaLit"));
                    scenicList.push(new Scenery("campFire", 13969, 54630, -120/360 * 2 * Math.PI, "permaLit"));
                    scenicList.push(new Scenery("bed", 13537, 54225, -0.18, false));
                }
                else
                {
                    scenicList.push(new Scenery("bed", 13537, 54225, -0.18, true));
                }

                //Hyeling Camps
                //ArtificialIntelligenceAccess.push(new Unit(10041, 8746, "Hyeling", true, "White Hammer"));
                //ArtificialIntelligenceAccess.push(new Unit(9711, 8503, "HyelingSoldier", false, "Running Stone"));
                //scenicList.push(new Scenery("largeCeremonialRockCircle", 10075 , 8783, 0, true));
                //scenicList.push(new Scenery("hyelingTent", 9199 , 8965, 1/2 * Math.PI, true));
                //scenicList.push(new Scenery("hyelingSkeleton", 10071 , 8788, 0.12, true));

                change = "n5w1";
            }
        }
        else if (region == "s1w1")
        {
            if (change != "s1w1")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                scenicList.push(new Scenery("grushweedPlant", 5669, -4701,0, 1, undefined)); //copied s1
                scenicList.push(new Scenery("grushweedPlant", 5612, -4955,0, 1, undefined)); //copied s1
                scenicList.push(new Scenery("grushweedPlant", 5885, -5133,0, 0.6, undefined)); //copied s1
                scenicList.push(new Scenery("grushweedPlant", 5798, -4989,2, 1.6, undefined)); //copied s1
                scenicList.push(new Scenery("grushweedPlant", 5593, -4493,0, 1.5, undefined)); //copied s1
                scenicList.push(new Scenery("anterHill", 5691, -13164,-5.7, true, undefined)); //copied s1
                scenicList.push(new Scenery("grushweedPlant", 5462, -4553,0, 1.5, undefined)); //copied s1
                scenicList.push(new Scenery("grushweedPlant", 5785, -4826,0, 1.1, undefined)); //copied s1
                scenicList.push(new Scenery("grushweedPlant", 5632, -4801,0, 0.8, undefined)); //copied s1
                scenicList.push(new Scenery("grushweedPlant", 5547, -5043,0, 1, undefined)); //copied s1
                scenicList.push(new Scenery("grushweedPlant", 5842, -5190,0, 0.6, undefined)); //copied s1
                scenicList.push(new Scenery("grushweedPlant", 5568, -5328,-1, 1, undefined)); //copied s1
                scenicList.push(new Scenery("techiPlant", 5419, -6449,2.146, true, undefined)); //copied s1
                scenicList.push(new Scenery("techiPlant", 6059, -6527,1, true, undefined)); //copied s1
                scenicList.push(new Scenery("techiPlant", 5391, -5262,-0.1, true, undefined)); //copied s1
                scenicList.push(new Scenery("techiPlant", 6269, -4950,-3, true, undefined)); //copied s1
                scenicList.push(new Scenery("techiPlant", 6317, -4979,3, true, undefined)); //copied s1
                scenicList.push(new Scenery("techiPlant", 6013, -5986,0, true, undefined)); //copied s1
                scenicList.push(new Scenery("techiPlant", 6212, -7094,-0.5, true, undefined)); //copied s1
                scenicList.push(new Scenery("techiPlant", 5112, -10337,-3.75, true, undefined)); //copied s1
                scenicList.push(new Scenery("techiPlant", 6302, -4235,-3.55, true, undefined)); //copied s1
                scenicList.push(new Scenery("techiPlant", 4921, -10739,0.45, true, undefined)); //copied s1
                scenicList.push(new Scenery("luufPlant", 6164, -5617,1.111, true, undefined)); //copied s1
                scenicList.push(new Scenery("luufPlant", 6011, -8981,2.5, true, undefined)); //copied s1
                scenicList.push(new Scenery("luufPlant", 6263, -12475,-3, true, undefined)); //copied s1
                scenicList.push(new Scenery("luufPlant", 5130, -11435,0, true, undefined)); //copied s1
                scenicList.push(new Scenery("luufPlant", 4990, -13386,-5.4321, true, undefined)); //copied s1
                scenicList.push(new Scenery("itlinPlant", 5067, -9141,3.25, true, undefined)); //copied s1
                scenicList.push(new Scenery("itlinPlant", 5033, -4823,-6.4, true, undefined)); //copied s1
                scenicList.push(new Scenery("itlinPlant", 6229, -3987,1.5, true, undefined)); //copied s1
                scenicList.push(new Scenery("itlinPlant", 6441, -9318,2.5, true, undefined)); //copied s1
                scenicList.push(new Scenery("palntPlant", 5412, -6751,0, true, undefined)); //copied s1
                scenicList.push(new Scenery("palntPlant", 5326, -8149,-1.9, true, undefined)); //copied s1
                scenicList.push(new Scenery("palntPlant", 5586, -12299,6.2, true, undefined)); //copied s1

                ArtificialIntelligenceAccess.push(new Unit(8403.379542434988, -4468.3444593283, "MountainFrich", false,"steveymagic1"));
                ArtificialIntelligenceAccess.push(new Unit(8706.620698886007, -5319.917682250088, "MountainFrich", "baby","steveymagic2"));
                ArtificialIntelligenceAccess.push(new Unit(11467.033498524352, -4738.312534001844, "MountainFrich", "baby","steveymagic3"));
                ArtificialIntelligenceAccess.push(new Unit(16301.184309152452, -5340.80168440006, "MountainFrich", false,"steveymagic4"));
                ArtificialIntelligenceAccess.push(new Unit(16409.542544046562, -4262.60413436338, "MountainFrich", false,"steveymagic5"));
                ArtificialIntelligenceAccess.push(new Unit(8515.716005349124, -6806.85353205067, "MountainFrich", true,"steveymagic6"));
                ArtificialIntelligenceAccess.push(new Unit(12751.597353354002, -9952.82943314438, "MountainFrich", false,"steveymagic7"));
                ArtificialIntelligenceAccess.push(new Unit(13280.949670818602, -10347.920898562636, "MountainFrich", false,"steveymagic8"));
                ArtificialIntelligenceAccess.push(new Unit(7842.804980825808, -10785.677197838162, "MountainFrich", false,"steveymagic9"));
                ArtificialIntelligenceAccess.push(new Unit(12132.800704299507, -13412.196961967844, "MountainFrich", true,"steveymagic10"));
                ArtificialIntelligenceAccess.push(new Unit(9389.38733026072, -13056.186561105802, "MountainFrich", "baby","steveymagic11"));
                ArtificialIntelligenceAccess.push(new Unit(14606.697309473955, -11292.253197725116, "MountainFrich", false,"steveymagic12"));
                ArtificialIntelligenceAccess.push(new Unit(15377.716074486729, -11517.815920574385, "MountainFrich", "baby","steveymagic13"));
                ArtificialIntelligenceAccess.push(new Unit(9974.554288285006, -9255.626252502023, "MountainFrich", false,"steveymagic14"));


                ArtificialIntelligenceAccess.push(new Unit(10202.910962698854, -6437.420652893215, "GreyWolf", false, "copacatack1"));
                ArtificialIntelligenceAccess.push(new Unit(10517.494795667952, -6284.330179159941, "GreyWolf", false, "copacatack2"));
                ArtificialIntelligenceAccess.push(new Unit(10248.64624787282, -6174.501460450944, "GreyWolf", false, "copacatack3"));
                ArtificialIntelligenceAccess.push(new Unit(10689.841635072924, -8115.146668024366, "GreyWolf", false, "copacatacklow1"));
                ArtificialIntelligenceAccess.push(new Unit(10811.028791084535, -8259.749226918813, "GreyWolf", false, "copacatacklow2"));
                ArtificialIntelligenceAccess.push(new Unit(10570.511976346894, -8225.700751448892, "GreyWolf", false, "copacatacklow3"));
                ArtificialIntelligenceAccess.push(new Unit(10459.096447526597, -8329.041192333218, "GreyWolf", false, "copacatacklow4"));
                ArtificialIntelligenceAccess.push(new Unit(10490.385522480095, -8162.609444652485, "GreyWolf", false, "copacatacklow4"));
                ArtificialIntelligenceAccess.push(new Unit(8295.382409893627, -12951.304274218173, "GreyWolf", false, "copacatacklest1"));
                ArtificialIntelligenceAccess.push(new Unit(8145.583787403022, -12734.146392819304, "GreyWolf", false, "copacatacklest2"));
                ArtificialIntelligenceAccess.push(new Unit(10906.550465254602, -11621.51657346302, "GreyWolf", false, "copacatackeyt1"));
                ArtificialIntelligenceAccess.push(new Unit(11369, -11801.524729322651, "GreyWolf", true, "copacatackeytmo"));
                ArtificialIntelligenceAccess.push(new Unit(11324.016946222091, -11900.981171087575, "GreyWolf", false, "copacatackey2"));
                ArtificialIntelligenceAccess.push(new Unit(11482.012651885969, -11702.045313782319, "GreyWolf", false, "copacatackey3"));
                ArtificialIntelligenceAccess.push(new Unit(10750.985428396545, -11715.14202016111, "GreyWolf", false, "copacatackey4"));
                ArtificialIntelligenceAccess.push(new Unit(11190.363011474281, -11592.923304218559, "GreyWolf", false, "copacatackey5"));
                ArtificialIntelligenceAccess.push(new Unit(16309.210827071865, -10072.611024974703, "GreyWolf", false, "copacatacwee1"));
                ArtificialIntelligenceAccess.push(new Unit(15966.97685272381, -10136.599450878944, "GreyWolf", false, "copacatacwee2"));
                ArtificialIntelligenceAccess.push(new Unit(15742.09712938967, -10014.087140627282, "GreyWolf", false, "copacatacwee3"));
                ArtificialIntelligenceAccess.push(new Unit(8345.205410791259, -9701.77884349528, "GreyWolf", false, "copacatacmlo1"));
                ArtificialIntelligenceAccess.push(new Unit(9581.474457335948, -10183.924311364237, "GreyWolf", false, "copacatacmie1"));
                ArtificialIntelligenceAccess.push(new Unit(9825.891678098713, -10254.302939831477, "GreyWolf", false, "copacatacmie2"));
                ArtificialIntelligenceAccess.push(new Unit(9640.814164171392, -10311.554019260877, "GreyWolf", false, "copacatacmie3"));

                ArtificialIntelligenceAccess.push(new Unit(13162.685760877579, -6839.325802839179, "Beruln", false, "bigtuthedne1"));

                ArtificialIntelligenceAccess.push(new Unit(13939.632060718412, -7912.642519402722, "StoneGolem", false, "olescoret1"));
                ArtificialIntelligenceAccess.push(new Unit(13129.865835949533, -11930.55597954709, "StoneGolem", true, "olescoret2"));
                ArtificialIntelligenceAccess.push(new Unit(11793.354881609746, -9559.34178345488, "StoneGolem", false, "olescoret3"));
                ArtificialIntelligenceAccess.push(new Unit(9122.697677366397, -9702.31763572621, "StoneGolem", "baby", "olescoret4"));
                ArtificialIntelligenceAccess.push(new Unit(8309.71768538278, -9428.674231328338, "StoneGolem", "baby", "olescoret5"));

                scenicList.push(new Scenery("haeflowerPlant", 11701.107275316735, -7293.06588478844, 4, true));

                scenicList.push(new Scenery("blood", 12844.523623278195, -7051.787356371328, 4.15, 3, 1.5));

                scenicList.push(new Scenery("stone", 8711.72651252597, -11186.373040883807, 2.19, 2, 1));
                scenicList.push(new Scenery("stone", 8853.840227542465, -11088.45238847473, 4.69, 0.5, 2));
                scenicList.push(new Scenery("darkStone", 11976.625041283112, -12368.450429060826, -2, 3, 3));
                scenicList.push(new Scenery("stone", 15080.457183180371, -10301.053130754102, 9, 2, 3));
                scenicList.push(new Scenery("darkStone",11181.805378118102, -9980.44817317513, 3, 1, 1));
                scenicList.push(new Scenery("stone", 8753.39347811624, -9871.782740864754, 1, 2.5, 3));

                scenicList.push(new Scenery("stone", 11765.252842403006, -10970.03599044308, 2.9, 4, 2));
                scenicList.push(new Scenery("stone", 9405.741595938374, -6936.056384186396, 6.9, 2, 1));
                scenicList.push(new Scenery("stone", 13568.430422088017, -8874.436932893263, 2, 1.5, 3));
                scenicList.push(new Scenery("stone", 15581.783302907124, -8466.604787251705, 7, 3, 2));
                scenicList.push(new Scenery("stone", 10253.383839505055, -5945.084985537034, 1, 2, 3));
                scenicList.push(new Scenery("stone", 8842.509377895602, -4424.552127760045, 8, 1.5, 3));
                scenicList.push(new Scenery("stone", 13954.530411828877, -7191.466585003203, 2, 2, 2));
                scenicList.push(new Scenery("stone", 14433.631923677889, -5785.981878196792, 3, 3, 1));
                scenicList.push(new Scenery("stone", 12974.68055095301, -5752.742146028582, 5, 1, 2));
                scenicList.push(new Scenery("stone", 15246.127110985819, -12232.689195885585, 2.5, 2.5, 1));
                scenicList.push(new Scenery("darkStone", 8853.893496155912, -7767.374625849909, 2, 2.5, 1));
                scenicList.push(new Scenery("darkStone", 10461.359646622834, -8626.129965392556, 3.6, 2, 2));
                scenicList.push(new Scenery("darkStone", 12288.35150984644, -6552.250095746234, 3, 3.5, 3));
                scenicList.push(new Scenery("darkStone", 11632.960517228892, -8540.697809441466, 2.87, 1, 1));
                scenicList.push(new Scenery("darkStone", 13314.204073676263, -12110.461592126432, 1.2, 2.5, 2));
                scenicList.push(new Scenery("darkStone", 13718.30005663254, -11714.264813029444, 1.8, 2, 3));
                scenicList.push(new Scenery("darkStone", 13903.0352132752, -10802.436550902603, 1, 1, 1));


                scenicList.push(new Scenery("haeFlowerPlant", 13235.047522284882, -9991.817958450421, 4, true));


                scenicList.push(new Scenery("blood",13140.515151518863, -6899.973456929476, 2.6, 4, 2.5));


                change = "s1w1";
            }
        }
        else if (region == "s1w2")
        {
            if (change != "s1w2")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                scenicList.push(new Scenery("stone", 15581.783302907124, -8466.604787251705,7, 3, 2)); //copied s-1-w-1

                ArtificialIntelligenceAccess.push(new Unit(18074.298222875015, -4220.837450451144, "GreyWolf", false ,"pinkyur1" ));
                ArtificialIntelligenceAccess.push(new Unit(18409.120334690117, -4184.414080460234, "GreyWolf", false ,"pinkyur2" ));
                ArtificialIntelligenceAccess.push(new Unit(22950.587571046195, -6324.466699282466, "GreyWolf", false ,"pinkyuru1" ));
                ArtificialIntelligenceAccess.push(new Unit(23332.6497385427, -6152.1607738458615, "GreyWolf", false ,"pinkyuru2" ));
                ArtificialIntelligenceAccess.push(new Unit(23126.793941697277, -6393.686180066117, "GreyWolf", false ,"pinkyuru3" ));
                ArtificialIntelligenceAccess.push(new Unit(19548.104157009057, -6599.932978698763, "GreyWolf", false ,"pinkyurg1" ));
                ArtificialIntelligenceAccess.push(new Unit(19763.425144257577, -6688.171440388522, "GreyWolf", false ,"pinkyurg2" ));
                ArtificialIntelligenceAccess.push(new Unit(19980.89725740351, -6515.06948244012, "GreyWolf", false ,"pinkyurg3" ));
                ArtificialIntelligenceAccess.push(new Unit(19812.36165131242, -6584.896734721646, "GreyWolf", true ,"pinkyurg4" ));
                ArtificialIntelligenceAccess.push(new Unit(26290.24463086286, -4681.913776164111, "GreyWolf", false ,"pinkyurh1" ));
                ArtificialIntelligenceAccess.push(new Unit(26105.647856356944, -4573.783616160428, "GreyWolf", false ,"pinkyurh2" ));
                ArtificialIntelligenceAccess.push(new Unit(26161.483772615535, -4399.29845896852, "GreyWolf", false ,"pinkyurh3" ));
                ArtificialIntelligenceAccess.push(new Unit(23321.503360309176, -13507.861046515007, "GreyWolf", false ,"pinkyurk1" ));
                ArtificialIntelligenceAccess.push(new Unit(23082.840459371128, -13341.076479162399, "GreyWolf", false ,"pinkyurk2" ));
                ArtificialIntelligenceAccess.push(new Unit(23824.872149842227, -10716.492237486329, "GreyWolf", false ,"pinkyurt1" ));
                ArtificialIntelligenceAccess.push(new Unit(23723.431721997324, -10828.57566136228, "GreyWolf", false ,"pinkyurt2" ));
                ArtificialIntelligenceAccess.push(new Unit(23963.415935613863, -10927.588939564781, "GreyWolf", false ,"pinkyurt3" ));


                ArtificialIntelligenceAccess.push(new Unit(23132.960055000272, -5081.850320770147, "StoneGolem", false ,"dsoftwne1" ));
                ArtificialIntelligenceAccess.push(new Unit(21411.85857251847, -6293.4959494184895, "StoneGolem", true ,"dsoftwne2" ));
                ArtificialIntelligenceAccess.push(new Unit(20370.865344154863, -7081.28745305883, "StoneGolem", "baby" ,"dsoftwne3" ));
                ArtificialIntelligenceAccess.push(new Unit(18599.717130899295, -9344.585231179442, "StoneGolem", false ,"dsoftwne4" ));
                ArtificialIntelligenceAccess.push(new Unit(23682.010887651966, -11485.704383904002, "StoneGolem", false ,"dsoftwne5" ));


                ArtificialIntelligenceAccess.push(new Unit(25597.63966771881, -9230.566640861609, "Beruln", false ,"kainstien1" ));
                ArtificialIntelligenceAccess.push(new Unit(21137.74976639098, -12085.484369403091, "Beruln", true ,"kainstien2" ));


                ArtificialIntelligenceAccess.push(new Unit(21091.181399887602, -7922.457475544878, "MountainFrich", true, "runrunfarm1"));
                ArtificialIntelligenceAccess.push(new Unit(19381.40192835468, -7483.468157282767, "MountainFrich", false, "runrunfarm2"));
                ArtificialIntelligenceAccess.push(new Unit(17759.82373631438, -5571.593343650006, "MountainFrich", false, "runrunfarm3"));
                ArtificialIntelligenceAccess.push(new Unit(26508.075605854072, -6523.373617560634, "MountainFrich", false, "runrunfarm4"));
                ArtificialIntelligenceAccess.push(new Unit(24601.22563038774, -8049.422640657682, "MountainFrich", false, "runrunfarm5"));
                ArtificialIntelligenceAccess.push(new Unit(18401.47093009515, -13312.069748147673, "MountainFrich", "baby", "runrunfarm6"));
                ArtificialIntelligenceAccess.push(new Unit(23456.289198224906, -4060.3982833234054, "MountainFrich", false, "runrunfarm7"));
                ArtificialIntelligenceAccess.push(new Unit(19836.27676170634, -10105.943371067755, "MountainFrich", false, "runrunfarm8"));
                ArtificialIntelligenceAccess.push(new Unit(20018.39907436036, -9626.454835616358, "MountainFrich", true, "runrunfarm9"));


                ArtificialIntelligenceAccess.push(new Unit(23096.483163670157, -9067.90230357754, "Nog", false ,"hegatin1" ));
                ArtificialIntelligenceAccess.push(new Unit(25497.85543527431, -12862.153939754944, "Nog", true ,"hegatin2" ));
                ArtificialIntelligenceAccess.push(new Unit(25767.88175545148, -12780.942406767508, "Nog", false ,"hegatin3" ));
                ArtificialIntelligenceAccess.push(new Unit(25751.68905053711, -12832.011706882051, "Nog", true ,"hegatin4" ));
                ArtificialIntelligenceAccess.push(new Unit(25836.331136147837, -12973.826399412681, "Nog", false ,"hegatin5" ));
                ArtificialIntelligenceAccess.push(new Unit(21157.927268179476, -9348.999282991244, "Nog", true ,"hegatin6" ));


                scenicList.push(new Scenery("haeflowerPlant", 22342.615016701082, -6509.42349964253, 5, true));
                scenicList.push(new Scenery("haeflowerPlant", 22843.397179644384, -11220.735959975116, 2, true));


                scenicList.push(new Scenery("ashStone", 21395.252132045855, -7724.760403136383, 2, 4.5, 3));
                scenicList.push(new Scenery("ashStone", 19594.541638782583, -7666.897055094933, 1, 1.5, 2));

                scenicList.push(new Scenery("darkStone", 19748.58070443285, -9466.65584216338, 1, 0.5, 2));
                scenicList.push(new Scenery("darkStone", 24968.20681216339, -9369.457139694605, -4, 2, 2));
                scenicList.push(new Scenery("darkStone", 25362.580066785882, -8524.768052938854, -2, 2.5, 1));
                scenicList.push(new Scenery("darkStone", 25146.77113970494, -8661.469333527531, 1, 1.5, 3));
                scenicList.push(new Scenery("darkStone", 19900.10695616608, -9862.31103173586, 9, 3, 1));
                scenicList.push(new Scenery("darkStone", 21620.824752549917, -6607.6400337590985, -1, 2.5, 2));
                scenicList.push(new Scenery("darkStone", 26138.962788150013, -5305.3864939601945, 3, 2, 1));

                scenicList.push(new Scenery("Stone", 26499.792573056682, -9196.264916320315, 2, 2, 3));
                scenicList.push(new Scenery("Stone", 18969.450502411833, -5951.7179284594695, 8, 1.5, 2));
                scenicList.push(new Scenery("Stone", 24258.977758016936, -12128.792403672722, 3, 2, 1));
                scenicList.push(new Scenery("Stone", 26082.680601300726, -12649.786936172404, 6, 1.5, 3));
                scenicList.push(new Scenery("Stone", 24447.914933263906, -6619.120935027706, 4, 2.5, 1));
                scenicList.push(new Scenery("Stone", 21815.34499658098, -12243.839455072994, 1, 3, 1));
                scenicList.push(new Scenery("Stone", 19025.371348644767, -10091.830356988197, -5, 1, 1));
                scenicList.push(new Scenery("Stone", 18339.4665164278, -7542.4181545669135, -3, 1.5, 2));

                change = "s1w2";
            }
        }
        else if (region == "s1w3")
        {
            if (change != "s1w3")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                scenicList.push(new Scenery("stone", 35121, -3247,3, 1, 1)); //copied w-3
                scenicList.push(new Scenery("stone", 36318, -3039,2, 2, 1)); //copied w-3
                scenicList.push(new Scenery("darkStone", 38453, -13492,49, 0.5, 3)); //copied s1w4
                scenicList.push(new Scenery("darkStone", 38342, -8908,-49, 1, 3)); //copied s-1-w-4
                scenicList.push(new Scenery("ashStone", 38457, -3905,-4.45, 1, 2)); //copied s-1-w-4
                scenicList.push(new Scenery("ashStone", 38828, -5130,4.45, 2, 3)); //copied s-1-w-4
                scenicList.push(new Scenery("stone", 38418, -5354,35, 0.5, 1)); //copied s-1-w-4
                scenicList.push(new Scenery("stone", 38928, -8059,25, 1, 3)); //copied s-1-w-4
                scenicList.push(new Scenery("stone", 38507, -12978,-28, 2.5, 2)); //copied s-1-w-4

                ArtificialIntelligenceAccess.push(new Unit(33443.99874806966, -4329.908461053988, "Beruln", false ,"lzefurecon1"));
                ArtificialIntelligenceAccess.push(new Unit(29464.009994560187, -6323.814025334209, "Beruln", true ,"lzefurecon2"));
                ArtificialIntelligenceAccess.push(new Unit(30487.77582924173, -12139.53327954826, "Beruln", false ,"lzefurecon3"));
                ArtificialIntelligenceAccess.push(new Unit(34508.88956814979, -11776.809334985592, "Beruln", false ,"lzefurecon4"));
                ArtificialIntelligenceAccess.push(new Unit(31651.778034291063, -10385.545455549694, "Beruln", true ,"lzefurecon5"));
                ArtificialIntelligenceAccess.push(new Unit(31754.994368712545, -7043.08834404736, "Beruln", false ,"lzefurecon6"));
                ArtificialIntelligenceAccess.push(new Unit(32550.570603463286, -9213.079176774309, "Beruln", true ,"lzefurecon7"));
                ArtificialIntelligenceAccess.push(new Unit(28610.756771413842, -10524.31293566551, "Beruln", false ,"lzefurecon8"));
                ArtificialIntelligenceAccess.push(new Unit(30145.53658709277, -8150.856800313581, "Beruln", true ,"lzefurecon9"));


                ArtificialIntelligenceAccess.push(new Unit(29422.70681958786, -10918.417474509653, "StoneGolem", false ,"idhrtbtdot1"));
                ArtificialIntelligenceAccess.push(new Unit(29885.763734618416, -10441.053429139198, "StoneGolem", true ,"idhrtbtdot2"));
                ArtificialIntelligenceAccess.push(new Unit(31016.294851415285, -5715.243948836595, "StoneGolem", "baby" ,"idhrtbtdot3"));
                ArtificialIntelligenceAccess.push(new Unit(34237.39329016012, -6899.58585156638, "StoneGolem", false ,"idhrtbtdot4"));


                ArtificialIntelligenceAccess.push(new Unit(35845.75064552452, -5594.641126701124, "MountainFrich", true, "shesalittlernawy1"));
                ArtificialIntelligenceAccess.push(new Unit(29672.5811182259, -8958.470913967683, "MountainFrich", false, "shesalittlernawy2"));
                ArtificialIntelligenceAccess.push(new Unit(35594.45555836797, -5858.825348653329, "MountainFrich", false, "shesalittlernawy3"));
                ArtificialIntelligenceAccess.push(new Unit(30417.79004051657, -4328.913609758368, "MountainFrich", false, "shesalittlernawy3"));


                ArtificialIntelligenceAccess.push(new Unit(32139.303070871538, -5832.157095416019, "GreyWolf", false ,"bsktplug1"));
                ArtificialIntelligenceAccess.push(new Unit(32272.658734047163, -5939.101500108321, "GreyWolf", false ,"bsktplug2"));
                ArtificialIntelligenceAccess.push(new Unit(32459.121317435056, -5850.232766805705, "GreyWolf", false ,"bsktplug3"));
                ArtificialIntelligenceAccess.push(new Unit(36491.92250801385, -13251.542265475337, "GreyWolf", false ,"bsktplug3"));
                ArtificialIntelligenceAccess.push(new Unit(36592.0642246696, -13192.17331313752, "GreyWolf", false ,"bsktplug3"));
                ArtificialIntelligenceAccess.push(new Unit(36332.54225557709, -13174.579063531372, "GreyWolf", false ,"bsktplug3"));


                ArtificialIntelligenceAccess.push(new Unit(33341.99011926019, -13256.157828203312, "Nog", true ,"deeeby1"));
                ArtificialIntelligenceAccess.push(new Unit(33554.83281536385, -13194.210792410877, "Nog", true ,"deeeby2"));
                ArtificialIntelligenceAccess.push(new Unit(32883.20569311604, -13019.621311163342, "Nog", false ,"deeeby3"));
                ArtificialIntelligenceAccess.push(new Unit(35776.20248216203, -10029.628270189685, "Nog", true ,"deeezby1"));
                ArtificialIntelligenceAccess.push(new Unit(35912.152759252815, -10140.062083769373, "Nog", false ,"deeezby2"));
                ArtificialIntelligenceAccess.push(new Unit(35899.88100739941, -10191.157751922712, "Nog", true ,"deeezby3"));
                ArtificialIntelligenceAccess.push(new Unit(36113.60914222368, -10084.479597143863, "Nog", true ,"deeezby4"));
                ArtificialIntelligenceAccess.push(new Unit(35990.397882440215, -10018.228972855108, "Nog", false ,"deeezby5"));

                scenicList.push(new Scenery("blood", 29460.23261923192, -6510.047672551112, 4, 1, 2));
                scenicList.push(new Scenery("blood", 30040.649121284867, -8397.399257398487, 1.5, 2, 3));

                scenicList.push(new Scenery("ashStone", 30595.151021132584, -10196.284846308965, -7.775, 2, 1));
                scenicList.push(new Scenery("ashStone", 32662.470054519898, -11625.257614707987, -5.2, 1.5, 3));
                scenicList.push(new Scenery("ashStone", 34170.64116524535, -7892.121602545835, -1.2, 1, 1));
                scenicList.push(new Scenery("ashStone", 32690.56879613539, -8709.552689094433, 8.2, 3, 2));
                scenicList.push(new Scenery("ashStone", 33645.70580110074, -12781.399589158453, 1.27, 2, 1));
                scenicList.push(new Scenery("ashStone", 30361.86453120979, -13182.813371414188, 5.98, 1.5, 2));
                scenicList.push(new Scenery("ashStone", 33638.236129350764, -4828.311673232744, 2.38, 1, 1));

                scenicList.push(new Scenery("darkStone", 29220.12125778782, -10716.583633603199, -1, 4.5, 1));
                scenicList.push(new Scenery("darkStone", 29549.26417417856, -10838.821813297303, -6, 1.5, 2));
                scenicList.push(new Scenery("darkStone", 29663.639509956407, -8177.201496845512, -1, 4, 1));
                scenicList.push(new Scenery("darkStone", 30413.564335977757, -8329.818101900031, -3.4, 2, 3));
                scenicList.push(new Scenery("darkStone", 28647.627357401107, -9190.314686419812, 1.4, 1.5, 2));
                scenicList.push(new Scenery("darkStone", 29530.700547533357, -8378.584793454256, -4.4, 1.5, 2));
                scenicList.push(new Scenery("darkStone", 36518.40969074776, -9080.444250851524, -2.82, 1.5, 1));

                scenicList.push(new Scenery("stone", 32171.829584707117, -5316.653312021226, -8.4, 2.5, 2));
                scenicList.push(new Scenery("stone", 28213.06652223242, -7262.856175551138, 2.74, 1.5, 1));
                scenicList.push(new Scenery("stone", 29376.004084556494, -6554.701954962197, 6.74, 2, 2));
                scenicList.push(new Scenery("stone", 34907.181901520824, -9655.275947962777, 8.14, 1.5, 3));
                scenicList.push(new Scenery("stone", 33547.69233008615, -10321.320004160285, -5.14, 2.5, 1));
                scenicList.push(new Scenery("stone", 30830.047186264863, -6850.2971161714995, -4.93, 3.5, 2));

                scenicList.push(new Scenery("skeleton", 30078.15616180353, -8405.53820770738, 1, 1.5));
                scenicList.push(new Scenery("skeleton", 29974.675044607324, -8439.584471480513, 5, 1));


                scenicList.push(new Scenery("haeflowerPlant", 31781.14644276998, -9020.726642155629, 7.3, true));
                scenicList.push(new Scenery("haeflowerPlant", 31993.875023944827, -10927.822997819754, 2.34, true));
                scenicList.push(new Scenery("haeflowerPlant", 34825.3280675003, -6373.809924982022, 1.324, true));

                scenicList.push(new Scenery("cave", 31085, -8887, 0.8, [932, 36], "olkrinCave"));


                change = "s1w3";
            }
        }
        else if (region == "w1") //Y > 6290 && Y < 32370
        {
            if (change != "w1")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                //Un Frich Periférico
                ArtificialIntelligenceAccess.push(new Unit(7716, 3482, "Frich", false, "Alfer"));
                ArtificialIntelligenceAccess.push(new Unit(7530, -685, "Frich", true, "Endle"));

                //High-Hill Howlers
                ArtificialIntelligenceAccess.push(new Unit(15517, 5728, "GreyWolf", false, "Clawder"));
                ArtificialIntelligenceAccess.push(new Unit(15296, 5951, "GreyWolf", false, "Claudia"));
                ArtificialIntelligenceAccess.push(new Unit(15404, 6273, "GreyWolf", false, "Caidlin"));
                ArtificialIntelligenceAccess.push(new Unit(12764, 5055, "GreyWolf", false, "Cal"));
                ArtificialIntelligenceAccess.push(new Unit(9742, -2615, "GreyWolf", false, "Claw"));
                ArtificialIntelligenceAccess.push(new Unit(9990, -2765, "GreyWolf", false, "Walca"));
                ArtificialIntelligenceAccess.push(new Unit(14650, 5353, "GreyWolf", false, "Calca"));
                ArtificialIntelligenceAccess.push(new Unit(12346, -3157, "GreyWolf", false, "Calcor"));
                ArtificialIntelligenceAccess.push(new Unit(10988, -2291, "GreyWolf", false, "Cor"));

                //The friches of the rocky west
                ArtificialIntelligenceAccess.push(new Unit(8307, 4918, "MountainFrich", "massive", "Fruyuk"));
                ArtificialIntelligenceAccess.push(new Unit(11253, -790, "MountainFrich", true, "Farayiu"));
                ArtificialIntelligenceAccess.push(new Unit(7504, 1592, "MountainFrich", false, "Fama"));
                ArtificialIntelligenceAccess.push(new Unit(16403, 4633, "MountainFrich", false, "Famo"));
                ArtificialIntelligenceAccess.push(new Unit(9508, 4287, "MountainFrich", false, "Fameh"));
                ArtificialIntelligenceAccess.push(new Unit(9261, 871, "MountainFrich", false, "Fomih"));
                ArtificialIntelligenceAccess.push(new Unit(9126, -3115, "MountainFrich", true, "Fara"));
                ArtificialIntelligenceAccess.push(new Unit(14655, 2529, "MountainFrich", false, "Famal"));
                ArtificialIntelligenceAccess.push(new Unit(14332, 2614, "MountainFrich", false, "Fomal"));
                ArtificialIntelligenceAccess.push(new Unit(8958, -1322, "MountainFrich", false, "Fomol"));
                ArtificialIntelligenceAccess.push(new Unit(12865, 3133, "MountainFrich", "massive", "Kruff"));
                ArtificialIntelligenceAccess.push(new Unit(10288, 1640, "MountainFrich", true, "Kuy"));
                ArtificialIntelligenceAccess.push(new Unit(11150, 796, "MountainFrich", false, "Kolmuyka"));

                //berulns in the west
                ArtificialIntelligenceAccess.push(new Unit(15918, -1709, "Beruln", false, "Kagim"));
                ArtificialIntelligenceAccess.push(new Unit(14705, -228, "Beruln", true, "Korgg"));
                ArtificialIntelligenceAccess.push(new Unit(14996, -2974, "Beruln", false, "Kormok"));

                //olkrin of the rocklands
                //ArtificialIntelligenceAccess.push(new Unit(8199, 2310, "Olkrin", false, "Efaldor"));

                //Rocky Rock Monsters of the Rocky Rock West
                ArtificialIntelligenceAccess.push(new Unit(10752, 4668, "StoneGolem", false, "Orefal"));
                ArtificialIntelligenceAccess.push(new Unit(16174, -1500, "StoneGolem", false, "Orefaw"));
                ArtificialIntelligenceAccess.push(new Unit(12473, 2171, "StoneGolem", "baby", "Foge"));
                ArtificialIntelligenceAccess.push(new Unit(15833, 2190, "StoneGolem", true, "stoner"));
                ArtificialIntelligenceAccess.push(new Unit(8980, 1303, "StoneGolem", "baby", "Folg"));
                ArtificialIntelligenceAccess.push(new Unit(13738, -466, "StoneGolem", false, "Fawm"));
                ArtificialIntelligenceAccess.push(new Unit(10132, -1992, "StoneGolem", "baby", "Folgem"));
                ArtificialIntelligenceAccess.push(new Unit(15272, 2811, "StoneGolem", true, "Gilgum"));



                //Ores
                scenicList.push(new Scenery("stone", 14572 , -1949, 0, 3, 1));
                scenicList.push(new Scenery("stone", 16197 , -1257, -1, 2, 3));
                scenicList.push(new Scenery("darkStone", 11323 , 676, 1.37, 2.5, 2));
                scenicList.push(new Scenery("stone", 13570 , -752, 5.213, 1.5, 2));
                scenicList.push(new Scenery("ashStone", 16223 , -3079, 2.345678910, 1, 1));
                scenicList.push(new Scenery("stone", 13693 , 346, -1.5, 4, 3));
                scenicList.push(new Scenery("jvostran", 11944 , 4617, 7, 1, 1));
                scenicList.push(new Scenery("darkStone", 14892 , 4138, -3.4, 1.5, 3));
                scenicList.push(new Scenery("jvostran", 14074 , 5728, 5.6, 2, 2));
                scenicList.push(new Scenery("ashStone", 16010 , 5129, 3, 3.5, 2));
                scenicList.push(new Scenery("stone", 10582 , 4635, 1, 1, 1));
                scenicList.push(new Scenery("stone", 10722 , 4370, -8, 1.5, 2));
                scenicList.push(new Scenery("stone", 9031 , 1374, -2, 0.5, 3));
                scenicList.push(new Scenery("darkStone", 8458 , 1980, 4.47, 4, 1));
                scenicList.push(new Scenery("darkStone", 13894 , 970, 2.3, 1.5, 1));
                scenicList.push(new Scenery("stone", 15468 , 223, 5, 2, 3));
                scenicList.push(new Scenery("stone", 15614 , 322, 6, 1, 2));
                scenicList.push(new Scenery("stone", 16151 , 130, -2.5, 3.5, 1));
                scenicList.push(new Scenery("stone", 8300 , 941, 4.444, 2.5, 1));
                scenicList.push(new Scenery("darkStone", 16208 , 4062, 12.12, 1, 3));
                scenicList.push(new Scenery("ashStone", 10587 , 5548, -3.14159, 2, 2));
                scenicList.push(new Scenery("darkStone", 10852 , 4617, -14, 0.5, 1));
                scenicList.push(new Scenery("darkStone", 12229 , 2802, -16.88, 1.5, 1));
                scenicList.push(new Scenery("jvostran", 11408 , -2348, 14.64, 1, 3));
                scenicList.push(new Scenery("stone", 13718 , -2521, 6.969, 4, 1));
                scenicList.push(new Scenery("darkStone", 13060 , -1400, -11, 2.5, 2));
                scenicList.push(new Scenery("stone", 13409 , 1943, 2.969, 1.5, 3));
                scenicList.push(new Scenery("ashStone", 11234 , 1726, -4.45, 0.5, 1));
                scenicList.push(new Scenery("stone", 9380 , 312, 3.757, 1, 2));
                scenicList.push(new Scenery("stone", 10199 , -2776, 0, 2, 1));
                scenicList.push(new Scenery("stone", 13224 , 2702, 0.12, 1, 2));

                //Plants
                scenicList.push(new Scenery("haeflowerPlant", 15185, 4442, 4, true));
                scenicList.push(new Scenery("haeflowerPlant", 11706, -656, 2.333, true));
                scenicList.push(new Scenery("haeflowerPlant", 14185, 2966, -6.51245, true));
                scenicList.push(new Scenery("haeflowerPlant", 9214, 1615, -8.9, true));
                scenicList.push(new Scenery("haeflowerPlant", 14638, 1229, 9, true));

                //scenes
                //"Don't wander alone..." Gayden
                scenicList.push(new Scenery("skeleton", 14053, -1661, 3.45, 1.55));
                scenicList.push(new Scenery("campFire", 13349, -1891, 1.2/4 * Math.PI, true));
                if (quests.lonerGuyStash)
                {
                    quests.lonerGuyStash = false;

                    worldItems.push([new Item("lonersJournal", 14023, -1673), 1]);
                    worldItems.push([new Item("freydicSword", 13903, -1976), 1]);
                    worldItems.push([new Item("frichPelt", 13458, -1787), 4]);
                    worldItems.push([new Item("tent", 13220, -1963), 1]);
                    worldItems.push([new Item("wizardGown", 14542, 3836), 1]);
                    worldItems.push([new Item("frostWind", 14574, 3832), 1]);
                }
                //epic duel between mage and rock golem... golem won.
                scenicList.push(new Scenery("skeleton", 14542, 3815, -1 + 1/2 * Math.PI, 1.6));
                scenicList.push(new Scenery("darkStoneOver", 14542, 3815, 15.4, 1.5, 3));

                change = "w1";
            }
        }
        else if (region == "w2")
        {
            if (change != "w2")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                //High-Hill Howlers
                ArtificialIntelligenceAccess.push(new Unit(18276, -2764, "GreyWolf", false, "Claumous"));
                ArtificialIntelligenceAccess.push(new Unit(19236, -1866, "GreyWolf", false, "Claudior"));
                ArtificialIntelligenceAccess.push(new Unit(19230, -1900, "GreyWolf", false, "Clondala"));
                ArtificialIntelligenceAccess.push(new Unit(19705, -1755, "GreyWolf", false, "Clorala"));
                ArtificialIntelligenceAccess.push(new Unit(19486, -1458, "GreyWolf", false, "Rufus"));
                ArtificialIntelligenceAccess.push(new Unit(19406, -2449, "GreyWolf", false, "Rulfor"));
                ArtificialIntelligenceAccess.push(new Unit(25105, -2221, "GreyWolf", false, "Cala"));
                ArtificialIntelligenceAccess.push(new Unit(25110, -1962, "GreyWolf", false, "Dolorian"));
                ArtificialIntelligenceAccess.push(new Unit(24684, -2325, "GreyWolf", false, "Rulthoul"));

                //Nogs (a dumb variety of goblins)
                ArtificialIntelligenceAccess.push(new Unit(23944, 2486, "Nog", true, "Buckle-Snorp"));
                ArtificialIntelligenceAccess.push(new Unit(23833, 2378, "Nog", true, "Bark-Gropp"));
                ArtificialIntelligenceAccess.push(new Unit(25689, 3165, "Nog", false, "Hemethelmesh"));
                ArtificialIntelligenceAccess.push(new Unit(21939, 4206, "Nog", true, "Biggle-Gromber"));
                ArtificialIntelligenceAccess.push(new Unit(20856, 2738, "Nog", false, "Hegladesh"));
                ArtificialIntelligenceAccess.push(new Unit(26502, -2251, "Nog", false, "Heg-Lagersh"));
                ArtificialIntelligenceAccess.push(new Unit(19869, 3730, "Nog", true, "Kadder-Spitsack"));
                ArtificialIntelligenceAccess.push(new Unit(19540, 3567, "Nog", false, "Dek-Batterbash"));
                ArtificialIntelligenceAccess.push(new Unit(18981, 4974, "Nog", false, "Cof-bloodbrane"));
                ArtificialIntelligenceAccess.push(new Unit(26691, -3269, "Nog", false, "Cottlecroch-bloodhumper"));
                ArtificialIntelligenceAccess.push(new Unit(25743, 1232, "Nog", false, "Cutlove-Fleshbang"));
                ArtificialIntelligenceAccess.push(new Unit(27253, -1968, "Nog", true, "Shindig-Toestomper"));
                ArtificialIntelligenceAccess.push(new Unit(27038, -1573, "Nog", false, "Scarbrane-Fleshbane"));

                //The friches of the rocky west
                ArtificialIntelligenceAccess.push(new Unit(17949, 5536, "MountainFrich", false, "Froikel"));
                ArtificialIntelligenceAccess.push(new Unit(18201, 5407, "MountainFrich", false, "Fralker"));
                ArtificialIntelligenceAccess.push(new Unit(26230, 6004, "MountainFrich", true, "Frolk"));
                ArtificialIntelligenceAccess.push(new Unit(22803, -262, "MountainFrich", true, "Froikon"));
                ArtificialIntelligenceAccess.push(new Unit(22331, -409, "MountainFrich", false, "Fralkir"));
                ArtificialIntelligenceAccess.push(new Unit(23243, -784, "MountainFrich", false, "Fralkon"));
                ArtificialIntelligenceAccess.push(new Unit(26759, 2664, "MountainFrich", false, "Froikek"));
                ArtificialIntelligenceAccess.push(new Unit(26977, 2871, "MountainFrich", false, "Fralkek"));
                ArtificialIntelligenceAccess.push(new Unit(26924, 2110, "MountainFrich", false, "Fralkirk"));
                ArtificialIntelligenceAccess.push(new Unit(26551, 2175, "MountainFrich", false, "Fralkonk"));
                ArtificialIntelligenceAccess.push(new Unit(21828, -3113, "MountainFrich", "massive", "Frakalholff"));
                ArtificialIntelligenceAccess.push(new Unit(24716, 1667, "MountainFrich", false, "Froiked"));
                ArtificialIntelligenceAccess.push(new Unit(17476, 453, "MountainFrich", false, "Froket"));

                //berulns in the west
                ArtificialIntelligenceAccess.push(new Unit(20729, 5514, "Beruln", true, "Migm"));
                ArtificialIntelligenceAccess.push(new Unit(21509, 6131, "Beruln", true, "Mavrim"));
                ArtificialIntelligenceAccess.push(new Unit(25688, -677, "Beruln", false, "Bajgerr"));

                //olkrin of the rocklands
                var rndNum = Math.random();
                if (rndNum < 0.15 && change == "s1w2" || rndNum < 0.15 && change == "w1")
                {
                    ArtificialIntelligenceAccess.push(new Unit(25342, 4764, "Olkrin", false, "Efaldor"));
                    ArtificialIntelligenceAccess.push(new Unit(26545, 3822, "Olkrin", "baby", "Athalkrond"));
                    ArtificialIntelligenceAccess.push(new Unit(23552, -1702, "Olkrin", "baby", "Ilidrith"));
                }
                else if (rndNum < 0.4)
                {
                    ArtificialIntelligenceAccess.push(new Unit(25342, 4764, "Beruln", true, "Ojoscarr"));
                    ArtificialIntelligenceAccess.push(new Unit(26545, 3822, "Beruln", false, "Ilmane"));
                }
                else if (rndNum < 0.7)
                {
                    ArtificialIntelligenceAccess.push(new Unit(25345, 4765, "GreyWolf", true, "Calrorus"));
                    ArtificialIntelligenceAccess.push(new Unit(25042, 4750, "GreyWolf", false, "Rork"));
                    ArtificialIntelligenceAccess.push(new Unit(25242, 4864, "GreyWolf", false, "Ril"));
                    ArtificialIntelligenceAccess.push(new Unit(25125, 4664, "GreyWolf", false, "Calila"));
                    ArtificialIntelligenceAccess.push(new Unit(25442, 4514, "GreyWolf", false, "Dorla"));
                    ArtificialIntelligenceAccess.push(new Unit(25242, 4680, "GreyWolf", false, "Rulthil"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(25345, 4765, "Nog", true, "Ips"));
                    ArtificialIntelligenceAccess.push(new Unit(25042, 4750, "Nog", true, "Squeak"));
                    ArtificialIntelligenceAccess.push(new Unit(25242, 4864, "Nog", false, "Chillar"));
                    ArtificialIntelligenceAccess.push(new Unit(25125, 4664, "Nog", false, "Grito"));
                    ArtificialIntelligenceAccess.push(new Unit(25442, 4514, "Nog", false, "Cron"));
                    ArtificialIntelligenceAccess.push(new Unit(25242, 4680, "Nog", true, "Buth"));
                }

                //Rocky Rock Monsters of the Rocky Rock West
                ArtificialIntelligenceAccess.push(new Unit(21240, -1705, "StoneGolem", "giant", "Gorundarumn the Trembler"));
                ArtificialIntelligenceAccess.push(new Unit(24850, 156, "StoneGolem", true, "Tormukk the Rock"));
                ArtificialIntelligenceAccess.push(new Unit(24153, 1123, "StoneGolem", false, "Ilif the Tremor"));
                ArtificialIntelligenceAccess.push(new Unit(25750, 960, "StoneGolem", "baby", "Tilf the Pebble-Tosser"));
                ArtificialIntelligenceAccess.push(new Unit(24600, 1656, "StoneGolem", "baby", "Galt the Shale-Pincher"));

                //Ores
                scenicList.push(new Scenery("jvostran", 20116 , -740, -1, 0.5, 1));
                scenicList.push(new Scenery("darkStone", 23174 , 4056, -1, 1, 1));
                scenicList.push(new Scenery("darkStone", 21245 , 944, 2, 1.5, 2));
                scenicList.push(new Scenery("darkStone", 25711 , 2496, 3, 2.5, 1));
                scenicList.push(new Scenery("darkStone", 23795 , 1029, 0, 1.5, 3));
                scenicList.push(new Scenery("darkStone", 23902 , 5830, 5.5555, 1, 2));
                scenicList.push(new Scenery("ashStone", 19759 , 1744, -9.5, 2, 2));
                scenicList.push(new Scenery("ashStone", 21270 , 4218, -0.6, 1, 3));
                scenicList.push(new Scenery("ashStone", 19616 , 2958, 0.5, 1, 2));
                scenicList.push(new Scenery("ashStone", 21847 , -2560, 10, 1.5, 2));
                scenicList.push(new Scenery("ashStone", 26080 ,5164, 11, 1, 1));
                scenicList.push(new Scenery("ashStone", 26363 ,3601, -13, 0.5, 1));
                scenicList.push(new Scenery("stone", 18302 , 5943, 19, 0.5, 1));
                scenicList.push(new Scenery("stone", 25388 , 584, 0, 1, 3));
                scenicList.push(new Scenery("stone", 22281 , 2813, 2.2, 1.5, 1));
                scenicList.push(new Scenery("stone", 20875 , 2548, -5, 2, 2));
                scenicList.push(new Scenery("stone", 20971 , 5504, -6.8, 3, 3));
                scenicList.push(new Scenery("stone", 25986 , 2148, 8, 0.5, 1));
                scenicList.push(new Scenery("stone", 23351 , -186, 0, 1, 1));
                scenicList.push(new Scenery("stone", 25089 , 2613, 0.1, 1, 2));
                scenicList.push(new Scenery("stone", 21803 , 5103, -4, 1, 1));
                scenicList.push(new Scenery("stone", 24354 , 3504, -2.45, 2, 1));
                scenicList.push(new Scenery("stone", 25850, 960, 2.45, 1.5, 3));
                scenicList.push(new Scenery("stone", 18215, 3084, 3.5, 3.5, 3));
                scenicList.push(new Scenery("stone", 18826 , -1000, 0, 2, 2));

                //Plants
                scenicList.push(new Scenery("haeflowerPlant", 18910, -1741, -3, true));
                scenicList.push(new Scenery("haeflowerPlant", 23376, 2139, -1.5, true));
                scenicList.push(new Scenery("haeflowerPlant", 23197, -1731, 0.7, true));

                change = "w2";
            }
        }
        else if (region == "w3")
        {
            if (change != "w3")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                //High-Hill Howlers
                ArtificialIntelligenceAccess.push(new Unit(32553, 15, "GreyWolf", false, "Clowder"));
                ArtificialIntelligenceAccess.push(new Unit(33567, 622, "GreyWolf", true, "Chauwder"));
                ArtificialIntelligenceAccess.push(new Unit(32909, 678, "GreyWolf", false, "Choudah"));
                ArtificialIntelligenceAccess.push(new Unit(33142, 71, "GreyWolf", false, "Choular"));
                ArtificialIntelligenceAccess.push(new Unit(33060, -334, "GreyWolf", false, "Chorg"));
                ArtificialIntelligenceAccess.push(new Unit(33754, 5, "GreyWolf", false, "Chalgra"));
                ArtificialIntelligenceAccess.push(new Unit(34112, 351, "GreyWolf", false, "Choumol"));
                ArtificialIntelligenceAccess.push(new Unit(34191, 887, "GreyWolf", false, "Choukama"));
                ArtificialIntelligenceAccess.push(new Unit(33368, 1060, "GreyWolf", false, "Chowck"));

                //Nogs (a dumb variety of goblins)
                ArtificialIntelligenceAccess.push(new Unit(28495, 6199, "Nog", false, "Backle-Snarp"));
                ArtificialIntelligenceAccess.push(new Unit(29622, 2479, "Nog", true, "Boogle-Snirp"));
                ArtificialIntelligenceAccess.push(new Unit(29654, 2389, "Nog", false, "Boggle-Snurp"));
                ArtificialIntelligenceAccess.push(new Unit(28493, 2492, "Nog", false, "Boggle-Snarp"));
                ArtificialIntelligenceAccess.push(new Unit(33450, -2347, "Nog", false, "Baggle-Snirp"));
                ArtificialIntelligenceAccess.push(new Unit(33274, -2475, "Nog", false, "Biggle-Snorp"));
                ArtificialIntelligenceAccess.push(new Unit(33471, -2485, "Nog", false, "Beggle-Snerp"));
                ArtificialIntelligenceAccess.push(new Unit(33862, -3122, "Nog", true, "Buggle-Snirk"));
                ArtificialIntelligenceAccess.push(new Unit(33025, -2855, "Nog", false, "Boggle-Snark"));
                ArtificialIntelligenceAccess.push(new Unit(34923, -1777, "Nog", false, "Biggle-Snork"));
                ArtificialIntelligenceAccess.push(new Unit(36146, -2395, "Nog", true, "Riggle-Prok"));
                ArtificialIntelligenceAccess.push(new Unit(36817, -2763, "Nog", true, "Roggle-Prak"));
                ArtificialIntelligenceAccess.push(new Unit(36802, -2608, "Nog", false, "Raggle-Prik"));
                ArtificialIntelligenceAccess.push(new Unit(35716, 469, "Nog", false, "Riggly-Palk"));
                ArtificialIntelligenceAccess.push(new Unit(35472, 464, "Nog", true, "Roggly-Pilk"));
                ArtificialIntelligenceAccess.push(new Unit(27848, 1582, "Nog", true, "Reggly-Polk"));
                ArtificialIntelligenceAccess.push(new Unit(27959, -2856, "Nog", false, "Ralgy-Pik"));

                if (change != "sagesCache")
                {
                    ArtificialIntelligenceAccess.push(new Unit(36177, 1615, "Nog", false, "Shaggle-Snelk"));
                    ArtificialIntelligenceAccess.push(new Unit(35998, 1434, "Nog", false, "Chiggler-Parnik"));
                    ArtificialIntelligenceAccess.push(new Unit(36018, 1208, "Nog", true, "Rigry-Pook"));
                    ArtificialIntelligenceAccess.push(new Unit(35793, 1254, "Nog", true, "Rogly-Preik"));
                    ArtificialIntelligenceAccess.push(new Unit(35783, 1093, "Nog", false, "Raggly-Prolk"));
                    ArtificialIntelligenceAccess.push(new Unit(35964, 573, "Nog", false, "Riggly-Palk"));
                }

                //The friches of the rocky west
                ArtificialIntelligenceAccess.push(new Unit(29626, 5521, "MountainFrich", false, "Frayuk"));
                ArtificialIntelligenceAccess.push(new Unit(29760, 5431, "MountainFrich", false, "Frayak"));
                ArtificialIntelligenceAccess.push(new Unit(29427, 3797, "MountainFrich", true, "Rayak"));
                ArtificialIntelligenceAccess.push(new Unit(30527, 4339, "MountainFrich", false, "Frahak"));
                ArtificialIntelligenceAccess.push(new Unit(30725, 3323, "MountainFrich", false, "Frohak"));
                ArtificialIntelligenceAccess.push(new Unit(30823, 3246, "MountainFrich", false, "Frahok"));
                ArtificialIntelligenceAccess.push(new Unit(30707, 3061, "MountainFrich", false, "Frohok"));
                ArtificialIntelligenceAccess.push(new Unit(31458, 2838, "MountainFrich", false, "Frahook"));
                ArtificialIntelligenceAccess.push(new Unit(31555, -2489, "MountainFrich", false, "Frihaak"));
                ArtificialIntelligenceAccess.push(new Unit(29425, -2555, "MountainFrich", false, "Freehaawk"));
                ArtificialIntelligenceAccess.push(new Unit(36020, -51, "MountainFrich", false, "Freehok"));
                ArtificialIntelligenceAccess.push(new Unit(36201, -197, "MountainFrich", false, "Frilhork"));
                ArtificialIntelligenceAccess.push(new Unit(28075, 4399, "MountainFrich", true, "Harak"));
                ArtificialIntelligenceAccess.push(new Unit(27781, 3768, "MountainFrich", false, "Frilkuh"));

                //berulns in the west
                ArtificialIntelligenceAccess.push(new Unit(33469, 5517, "Beruln", true, "Galima"));

                //olkrin of the rocklands
                //ArtificialIntelligenceAccess.push(new Unit(8199, 2310, "Olkrin", false, "Efaldor"));

                //Rocky Rock Monsters of the Rocky Rock West
                ArtificialIntelligenceAccess.push(new Unit(34641, -676, "StoneGolem", "baby", "Oree"));
                ArtificialIntelligenceAccess.push(new Unit(33690, 3385, "StoneGolem", true, "Oreface"));

                //Ores
                scenicList.push(new Scenery("stone", 28299 , -2272, 4, 2, 2));
                scenicList.push(new Scenery("stone", 29689 , -1418, -2.5, 3, 3));
                scenicList.push(new Scenery("stone", 30883 , 4805, 8, 1.5, 3));
                scenicList.push(new Scenery("stone", 32429 , 5619, -11, 1.5, 3));
                scenicList.push(new Scenery("stone", 34271 , 3975, 6, 1, 1));
                scenicList.push(new Scenery("stone", 34271 , 3975, 9, 2.5, 1));
                scenicList.push(new Scenery("stone", 34000 , -2770, 5, 3, 2));
                scenicList.push(new Scenery("stone", 35121 , -3247, 3, 1, 1));
                scenicList.push(new Scenery("stone", 36696 , -2366, 0, 1.5, 3));
                scenicList.push(new Scenery("stone", 36055 , -354, 16, 3.5, 3));
                scenicList.push(new Scenery("stone", 34675 , 65, 10.5, 2.5, 2));
                scenicList.push(new Scenery("stone", 36487 , -57, -9, 1, 2));
                scenicList.push(new Scenery("stone", 36318 , -3039, 2, 2, 1));
                scenicList.push(new Scenery("darkStone", 31968 , 455, 6.5, 2.5, 2));
                scenicList.push(new Scenery("darkStone", 32435 , -1586, -1, 3, 1));
                scenicList.push(new Scenery("darkStone", 35402 , -1873, 0, 1, 3));
                scenicList.push(new Scenery("darkStone", 36397 , 5826, -5.5, 1.5, 3));
                scenicList.push(new Scenery("darkStone", 33707 , 4850, 6, 2, 2));
                scenicList.push(new Scenery("darkStone", 29058 , 40, 0, 1.5, 3));
                scenicList.push(new Scenery("darkStone", 30873 , 2846, -2.4, 1.5, 1));
                scenicList.push(new Scenery("ashStone", 35160 , 4938, -8.85, 1, 1));
                scenicList.push(new Scenery("ashStone", 29330 , 5128, 7, 2, 2));
                scenicList.push(new Scenery("ashStone", 33659 , 1792, -1, 1, 3));
                scenicList.push(new Scenery("ashStone", 32954 , -2545, -3, 1.5, 2));

                //Dungeon "Sage's Cache"
                scenicList.push(new Scenery("cave", 35742, 1359, 0, [932, 36], "sagesCache"));

                //Plants
                scenicList.push(new Scenery("haeflowerPlant", 32791, 5076, 4.444, true));

                change = "w3";
            }
        }
        else if (region == "w4")
        {
            if (change != "w4")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                //runaway wife and slave
                if (quests.spouseTrackerQuest != "complete")
                {
                    scenicList.push(new Scenery("tent", 45199.7397712692, 3197.711262295074, (0.25 * Math.PI), false));
                    if (change == "bellaEscort")
                    {
                        if (uniqueChars.bellaLDS == true)
                        {
                            var hits = 0;
                            for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                            {
                                if (ArtificialIntelligenceAccess[i].ID == "Madam Bella")
                                {
                                    hits += 1;
                                }
                            }
                            if (hits == 0)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(45286.25527856664, 3179.0236167482553, "Person", false, "Madam Bella", {race: "Thengar", faction: "loner", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.1, 0.1], 0, 0, 1.5], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 2, patrolLoop: false, route:[[45528.82632754614, 3362.0350167485813], [16132.540241610046, 2214.628209223153], [15914.23473243726, 1886.2043063687495], [12263.955191303412, 1823.9268809259627], [11649.991900788626, 2450.626211964874], [2947.9988373871365, 2424.285780812395]]}));
                            }
                        }
                        if (uniqueChars.mesekLDS == true)
                        {
                            var hits = 0;
                            for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                            {
                                if (ArtificialIntelligenceAccess[i].ID == "Mesek the Runaway")
                                {
                                    hits += 1;
                                }
                            }
                            if (hits == 0)
                            {
                                if (player.gamemode == "protagonist")
                                {
                                    ArtificialIntelligenceAccess.push(new Unit(45238.64377328323, 3101.0912884143677, "Person", false, "Bouncy Ball Salesman", {race: "Kel", faction: "loner", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 2, 1.12], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 2, patrolLoop: false, route:[[45459.54105475488, 3372.782541353318], [16079.79650130994, 2145.1599545880536], [15862.457760143232, 1906.6027086021259], [12267.554408995364, 1901.909930918241], [11618.28459583104, 2406.2367399540312], [3038.350152319535, 2446.4773318484226]]}));
                                }
                                else
                                {
                                    ArtificialIntelligenceAccess.push(new Unit(45238.64377328323, 3101.0912884143677, "Person", false, "Mesek the Runaway", {race: "Kel", faction: "loner", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 2, 1.12], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 2, patrolLoop: false, route:[[45459.54105475488, 3372.782541353318], [16079.79650130994, 2145.1599545880536], [15862.457760143232, 1906.6027086021259], [12267.554408995364, 1901.909930918241], [11618.28459583104, 2406.2367399540312], [3038.350152319535, 2446.4773318484226]]}));
                                }
                            }
                        }
                    }
                    else
                    {
                        if (uniqueChars.bellaLDS == true)
                        {
                            var hits = 0;
                            for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                            {
                                if (ArtificialIntelligenceAccess[i].ID == "Madam Bella")
                                {
                                    hits += 1;
                                }
                            }
                            if (hits == 0)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(45286.25527856664, 3179.0236167482553, "Person", false, "Madam Bella", {race: "Thengar", faction: "loner", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.1, 0.1], 0, 0, 1.5], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[45290.74559387053, 3161.9140878198677]]}));
                            }
                        }
                        if (uniqueChars.mesekLDS == true)
                        {
                            var hits = 0;
                            for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                            {
                                if (ArtificialIntelligenceAccess[i].ID == "Mesek the Runaway")
                                {
                                    hits += 1;
                                }
                            }
                            if (hits == 0)
                            {
                                if (player.gamemode == "protagonist")
                                {
                                    ArtificialIntelligenceAccess.push(new Unit(45238.64377328323, 3101.0912884143677, "Person", false, "Bouncy Ball Salesman", {race: "Kel", faction: "loner", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 2, 1.12], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[45258.58413918966, 3133.96905700862]]}));
                                }
                                else
                                {
                                    ArtificialIntelligenceAccess.push(new Unit(45238.64377328323, 3101.0912884143677, "Person", false, "Mesek the Runaway", {race: "Kel", faction: "loner", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 2, 1.12], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[45258.58413918966, 3133.96905700862]]}));
                                }
                            }
                        }
                    }
                }

                //High-Hill Howlers
                ArtificialIntelligenceAccess.push(new Unit(45825, 1195, "GreyWolf", false, "Shod"));
                ArtificialIntelligenceAccess.push(new Unit(46096, 1568, "GreyWolf", false, "Shad"));
                ArtificialIntelligenceAccess.push(new Unit(45369, 1393, "GreyWolf", false, "Sheid"));
                ArtificialIntelligenceAccess.push(new Unit(42240, -3220, "GreyWolf", false, "Shiad"));
                ArtificialIntelligenceAccess.push(new Unit(42737, -3112, "GreyWolf", false, "Shoad"));

                //Nogs (a dumb variety of goblins)
                ArtificialIntelligenceAccess.push(new Unit(45598, -3206, "Nog", true, "Snack-Pack"));
                ArtificialIntelligenceAccess.push(new Unit(45280, -3064, "Nog", true, "Meat-Sack"));
                ArtificialIntelligenceAccess.push(new Unit(45405, -3279, "Nog", false, "Fish-Purse"));
                ArtificialIntelligenceAccess.push(new Unit(47070, -2106, "Nog", true, "Slush-Guts"));
                ArtificialIntelligenceAccess.push(new Unit(46921, -2280, "Nog", false, "Garlic-Lips"));
                ArtificialIntelligenceAccess.push(new Unit(46960, -234, "Nog", false, "Tooth-Tooth"));
                ArtificialIntelligenceAccess.push(new Unit(46694, -30, "Nog", true, "Fang-Face"));
                ArtificialIntelligenceAccess.push(new Unit(46716, 6072, "Nog", false, "Fish-Feet"));
                ArtificialIntelligenceAccess.push(new Unit(46846, 5820, "Nog", true, "Fire-Back"));
                ArtificialIntelligenceAccess.push(new Unit(46508, 5872, "Nog", true, "Striker"));
                ArtificialIntelligenceAccess.push(new Unit(46695, 5496, "Nog", false, "Chub"));
                ArtificialIntelligenceAccess.push(new Unit(46027, 5536, "Nog", false, "Stub-Claw"));
                ArtificialIntelligenceAccess.push(new Unit(39693, 452, "Nog", true, "Straiuka"));
                ArtificialIntelligenceAccess.push(new Unit(38481, 308, "Nog", false, "Chulab"));
                ArtificialIntelligenceAccess.push(new Unit(38421, 474, "Nog", true, "Sudor-Iktil"));
                ArtificialIntelligenceAccess.push(new Unit(39252, 1805, "Nog", true, "Irmott"));
                ArtificialIntelligenceAccess.push(new Unit(38974, 2052, "Nog", true, "Irmaht"));
                ArtificialIntelligenceAccess.push(new Unit(38519, 2257, "Nog", false, "Irmol"));
                ArtificialIntelligenceAccess.push(new Unit(38339, 1713, "Nog", false, "Irmoc"));
                ArtificialIntelligenceAccess.push(new Unit(40478, 4228, "Nog", true, "Sudol-Iktol"));
                ArtificialIntelligenceAccess.push(new Unit(40603, 4444, "Nog", true, "Irmotol"));
                ArtificialIntelligenceAccess.push(new Unit(40732, 4107, "Nog", false, "Irmahtol"));
                ArtificialIntelligenceAccess.push(new Unit(40462, 4073, "Nog", false, "Irmolk"));
                ArtificialIntelligenceAccess.push(new Unit(40240, 4266, "Nog", false, "Irmocol"));
                ArtificialIntelligenceAccess.push(new Unit(42544, -1440, "Nog", true, "Ermotol"));
                ArtificialIntelligenceAccess.push(new Unit(42661, -1638, "Nog", false, "Ermahtol"));
                ArtificialIntelligenceAccess.push(new Unit(43303, 4189, "Nog", true, "Snock-Pusk"));
                ArtificialIntelligenceAccess.push(new Unit(40132, 3214, "Nog", false, "Erma"));

                //The friches of the rocky west
                ArtificialIntelligenceAccess.push(new Unit(44115, -1707, "MountainFrich", "massive", "Tarf"));
                ArtificialIntelligenceAccess.push(new Unit(43603, -2466, "MountainFrich", true, "Torf"));
                ArtificialIntelligenceAccess.push(new Unit(44030, -2599, "MountainFrich", true, "Tolf"));
                ArtificialIntelligenceAccess.push(new Unit(45168, -1332, "MountainFrich", false, "Rifre"));
                ArtificialIntelligenceAccess.push(new Unit(46422, -1618, "MountainFrich", false, "Rifral"));
                ArtificialIntelligenceAccess.push(new Unit(46713, -2907, "MountainFrich", false, "Rifalt"));
                ArtificialIntelligenceAccess.push(new Unit(46876, -3073, "MountainFrich", false, "Riferel"));
                ArtificialIntelligenceAccess.push(new Unit(46466, -3154, "MountainFrich", true, "Tulfre"));
                ArtificialIntelligenceAccess.push(new Unit(45047, 2478, "MountainFrich", false, "Refolkot"));
                ArtificialIntelligenceAccess.push(new Unit(38464, 5368, "MountainFrich", false, "Refalt"));
                ArtificialIntelligenceAccess.push(new Unit(39219, 5891, "MountainFrich", true, "Refolt"));
                ArtificialIntelligenceAccess.push(new Unit(40131, 5537, "MountainFrich", false, "Hefolyot"));
                ArtificialIntelligenceAccess.push(new Unit(40433, 5385, "MountainFrich", false, "Hefalt"));
                ArtificialIntelligenceAccess.push(new Unit(42448, 2658, "MountainFrich", true, "Talforch"));
                ArtificialIntelligenceAccess.push(new Unit(42050, 740, "MountainFrich", true, "Hefolt"));
                ArtificialIntelligenceAccess.push(new Unit(41658, 524, "MountainFrich", false, "Tefolyot"));
                ArtificialIntelligenceAccess.push(new Unit(41889, 340, "MountainFrich", false, "Tefalt"));
                ArtificialIntelligenceAccess.push(new Unit(41470, -161, "MountainFrich", "massive", "Halforch"));
                ArtificialIntelligenceAccess.push(new Unit(42677, -2294, "MountainFrich", true, "Fesh"));

                //berulns in the west
                ArtificialIntelligenceAccess.push(new Unit(39983, -1944, "Beruln", false, "Jolrovitar"));

                //olkrin of the rocklands
                if (Math.random() >= 0.75)
                {
                    ArtificialIntelligenceAccess.push(new Unit(44406, 4212, "Olkrin", "baby", "Vekomdor"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(44748, 3976, "MountainFrich", true, "Tolfet"));
                    ArtificialIntelligenceAccess.push(new Unit(44406, 4212, "MountainFrich", false, "Rifelt"));
                    ArtificialIntelligenceAccess.push(new Unit(45392, 4439, "MountainFrich", false, "Refalsha"));
                }

                //Rocky Rock Monsters of the Rocky Rock West
                ArtificialIntelligenceAccess.push(new Unit(46754, 674, "StoneGolem", false, "Stonorone"));
                ArtificialIntelligenceAccess.push(new Unit(38982, 5303, "StoneGolem", false, "Stonoral"));
                ArtificialIntelligenceAccess.push(new Unit(43421, 1623, "StoneGolem", "baby", "Rockabye"));
                ArtificialIntelligenceAccess.push(new Unit(41326, -694, "StoneGolem", "baby", "Daymorning"));

                //Ores
                scenicList.push(new Scenery("darkStone", 38321 , 547, -6, 4, 2));
                scenicList.push(new Scenery("darkStone", 39063 , 1828, -2.3, 1, 2));
                scenicList.push(new Scenery("darkStone", 38337 , 4002, 3, 0.5, 3));
                scenicList.push(new Scenery("ashStone", 39388 , 5656, 4.444, 2.5, 2));
                scenicList.push(new Scenery("ashStone", 41856 , -1828, 256, 4.5, 3));
                scenicList.push(new Scenery("ashStone", 46942 , 1687, 81, 2, 1));
                scenicList.push(new Scenery("stone", 45819 , -202, 0.12, 3.5, 2));
                scenicList.push(new Scenery("stone", 46845 , 109, 6.94, 1, 2));
                scenicList.push(new Scenery("darkStone", 44399 , 6080, -4, 1.5, 1));
                scenicList.push(new Scenery("stone", 45066 , 4470, -9, 2, 3));
                scenicList.push(new Scenery("darkStone", 45931 , 3824, 1, 1, 2));
                scenicList.push(new Scenery("ashStone", 45004 , 2121, -64, 1, 1));
                scenicList.push(new Scenery("ashStone", 43858 , -246, -1, 3.5, 2));
                scenicList.push(new Scenery("darkStone", 45508 , -931, 6.4, 0.5, 1));
                scenicList.push(new Scenery("stone", 45964 , -3051, -2.58, 1, 3));
                scenicList.push(new Scenery("stone", 45001 , -3283, 3.4, 0.5, 1));
                scenicList.push(new Scenery("darkStone", 44707 , -1258, 5, 2.5, 1));
                scenicList.push(new Scenery("ashStone", 43109 , -2053, -1, 1.5, 3));
                scenicList.push(new Scenery("stone", 41280 , -12, 7.1, 5, 2));
                scenicList.push(new Scenery("stone", 39228 , -1406, -5.678, 2.5, 1));
                scenicList.push(new Scenery("ashStone", 40293 , -2519, -12, 1, 2));
                scenicList.push(new Scenery("darkStone", 42681 , -3009, 5.5, 2, 1));
                scenicList.push(new Scenery("stone", 39056 , -2866, 6.8765, 1.5, 3));
                scenicList.push(new Scenery("stone", 42287 , 158, 6.3, 1, 2));
                scenicList.push(new Scenery("stone", 43160 , 4543, -3.9, 3, 3));
                scenicList.push(new Scenery("darkStone", 44331 , 3410, 4.5, 1.5, 2));
                scenicList.push(new Scenery("ashStone", 40807 , 1118, -2.4, 3.5, 1));
                scenicList.push(new Scenery("stone", 40277 , 4435, 3.82, 2, 3));

                //Plants
                scenicList.push(new Scenery("haeflowerPlant", 44702, 4124, 6.9, true));
                scenicList.push(new Scenery("haeflowerPlant", 42415, -2151, -9.6, true));

                change = "w4";
            }
        }
        else if (region == "s1w4")
        {
            if (change != "s1w4")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                //High-Hill Howlers
                ArtificialIntelligenceAccess.push(new Unit(38399, -3875, "GreyWolf", false, "Clemont"));
                ArtificialIntelligenceAccess.push(new Unit(37876, -4052, "GreyWolf", false, "Ceymorr"));
                ArtificialIntelligenceAccess.push(new Unit(38204, -4154, "GreyWolf", false, "Claya"));
                ArtificialIntelligenceAccess.push(new Unit(38683, -4113, "GreyWolf", false, "Trebol"));
                ArtificialIntelligenceAccess.push(new Unit(37971, -3727, "GreyWolf", false, "Clover"));

                //Nogs (a dumb variety of goblins)
                ArtificialIntelligenceAccess.push(new Unit(46843, -12924, "Nog", false, "Chum-Bucket"));
                ArtificialIntelligenceAccess.push(new Unit(47085, -12290, "Nog", true, "Romp-Cleener"));
                ArtificialIntelligenceAccess.push(new Unit(46884, -12438, "Nog", false, "Twat-Sizzler"));
                ArtificialIntelligenceAccess.push(new Unit(44569, -10942, "Nog", false, "Cully-Licker"));
                ArtificialIntelligenceAccess.push(new Unit(45575, -8040, "Nog", true, "Cereal-Muncher"));
                ArtificialIntelligenceAccess.push(new Unit(45756, -8168, "Nog", false, "Grain-Cruncher"));
                ArtificialIntelligenceAccess.push(new Unit(46395, -8029, "Nog", false, "Wheat-Licker"));
                ArtificialIntelligenceAccess.push(new Unit(46765, -8589, "Nog", true, "Grass-Cleaner"));
                ArtificialIntelligenceAccess.push(new Unit(44707, -7086, "Nog", true, "Tunc-Rekcuf"));
                ArtificialIntelligenceAccess.push(new Unit(44230, -7312, "Nog", true, "Rimp-Dipper"));
                ArtificialIntelligenceAccess.push(new Unit(44329, -7133, "Nog", false, "Tweet-Salter"));
                ArtificialIntelligenceAccess.push(new Unit(46795, -4773, "Nog", false, "Twat-Warmer"));
                ArtificialIntelligenceAccess.push(new Unit(46490, -5219, "Nog", false, "Romp-Filler"));
                ArtificialIntelligenceAccess.push(new Unit(46681, -5350, "Nog", true, "Twat-Stuffer"));
                ArtificialIntelligenceAccess.push(new Unit(44447, -4859, "Nog", true, "Tweed-Bearer"));
                ArtificialIntelligenceAccess.push(new Unit(41668, -7617, "Nog", false, "Tweed-Warmer"));
                ArtificialIntelligenceAccess.push(new Unit(42516, -7522, "Nog", false, "Romp-Brimmer"));
                ArtificialIntelligenceAccess.push(new Unit(42278, -7694, "Nog", true, "Twat-Packer"));
                ArtificialIntelligenceAccess.push(new Unit(42244, -7451, "Nog", true, "Tweed-Swallower"));
                ArtificialIntelligenceAccess.push(new Unit(45986, -6971, "Nog", false, "Tweet-Moistener"));
                ArtificialIntelligenceAccess.push(new Unit(45666, -7115, "Nog", false, "Rimp-Lancer"));
                ArtificialIntelligenceAccess.push(new Unit(46158, -7492, "Nog", false, "Barely-Grinder"));
                ArtificialIntelligenceAccess.push(new Unit(42316, -8535, "Nog", true, "Twat-Pricker"));
                ArtificialIntelligenceAccess.push(new Unit(42181, -8574, "Nog", false, "Tweed-Spinner"));
                ArtificialIntelligenceAccess.push(new Unit(41777, -8107, "Nog", false, "Tweed-Moistener"));
                ArtificialIntelligenceAccess.push(new Unit(41590, -8155, "Nog", false, "Rimp-Stabber"));
                ArtificialIntelligenceAccess.push(new Unit(41959, -8359, "Nog", true, "Corn-Sucker"));
                ArtificialIntelligenceAccess.push(new Unit(41185, -8796, "Nog", false, "Penny-Pincher"));
                ArtificialIntelligenceAccess.push(new Unit(45425, -9448, "Nog", true, "Dime-Harvester"));
                ArtificialIntelligenceAccess.push(new Unit(45587, -9617, "Nog", false, "Nickel-Grabber"));
                ArtificialIntelligenceAccess.push(new Unit(46685, -9490, "Nog", false, "Dollar-Spitter"));
                ArtificialIntelligenceAccess.push(new Unit(46008, -8984, "Nog", true, "Quarter-Biter"));

                //The friches of the rocky west
                ArtificialIntelligenceAccess.push(new Unit(43718, -12504, "MountainFrich", true, "Fruku"));
                ArtificialIntelligenceAccess.push(new Unit(43948, -12407, "MountainFrich", false, "Frokol"));
                ArtificialIntelligenceAccess.push(new Unit(42732, -4699, "MountainFrich", false, "Frakol"));
                ArtificialIntelligenceAccess.push(new Unit(42950, -4429, "MountainFrich", false, "Frakal"));
                ArtificialIntelligenceAccess.push(new Unit(43024, -4554, "MountainFrich", false, "Frukal"));
                ArtificialIntelligenceAccess.push(new Unit(38809, -6798, "MountainFrich", true, "Frakil"));
                ArtificialIntelligenceAccess.push(new Unit(40031, -6850, "MountainFrich", false, "Frikil"));
                ArtificialIntelligenceAccess.push(new Unit(39591, -7371, "MountainFrich", "massive", "Frikol"));
                ArtificialIntelligenceAccess.push(new Unit(42444, -9932, "MountainFrich", false, "Frykol"));
                ArtificialIntelligenceAccess.push(new Unit(42832, -9729, "MountainFrich", false, "Frakyl"));
                ArtificialIntelligenceAccess.push(new Unit(43023, -9993, "MountainFrich", false, "Frykal"));
                ArtificialIntelligenceAccess.push(new Unit(44047, -9779, "MountainFrich", false, "Frukyl"));
                ArtificialIntelligenceAccess.push(new Unit(40584, -10222, "MountainFrich", true, "Frykil"));
                ArtificialIntelligenceAccess.push(new Unit(45810, -10448, "MountainFrich", false, "Frouhyl"));

                //berulns in the west
                var rnd = Math.random();
                if (rnd >= 0.7)
                {
                    ArtificialIntelligenceAccess.push(new Unit(38628, -12634, "Beruln", false, "Hulet"));
                    ArtificialIntelligenceAccess.push(new Unit(39478, -13120, "Beruln", true, "Thadolge"));
                }
                else if (rnd >= 0.4)
                {
                    ArtificialIntelligenceAccess.push(new Unit(39478, -13120, "Beruln", true, "Thadolge"));
                }
                else if (rnd >= 0.1)
                {
                    ArtificialIntelligenceAccess.push(new Unit(38628, -12634, "Beruln", false, "Hulet"));
                }
                else
                {
                    //olkrin of the rocklands
                    if (change == "s1w5")
                    {
                        ArtificialIntelligenceAccess.push(new Unit(38628, -12634, "Olkrin", false, "Vanaandunm Bringer of Wickedness"));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(38628, -12634, "Olkrin", "baby", "The Wicked Offspring"));
                        ArtificialIntelligenceAccess.push(new Unit(39478, -13120, "Olkrin", "baby", "The Wicked Offspring"));
                    }
                }

                //Rocky Rock Monsters of the Rocky Rock West
                ArtificialIntelligenceAccess.push(new Unit(41972, -11595, "StoneGolem", true, "Oregol"));
                ArtificialIntelligenceAccess.push(new Unit(38660, -8546, "StoneGolem", false, "Leregol"));
                ArtificialIntelligenceAccess.push(new Unit(41570, -8290, "StoneGolem", "baby", "Regol"));
                ArtificialIntelligenceAccess.push(new Unit(43411, -9501, "StoneGolem", true, "Oregun"));
                ArtificialIntelligenceAccess.push(new Unit(45576, -10997, "StoneGolem", false, "Leregun"));
                ArtificialIntelligenceAccess.push(new Unit(38628, -13302, "StoneGolem", "baby", "Lere"));
                ArtificialIntelligenceAccess.push(new Unit(44488, -10113, "StoneGolem", "baby", "Regun"));

                //Ores
                scenicList.push(new Scenery("darkStone", 39548 , -6850, -13, 1.5, 2));
                scenicList.push(new Scenery("darkStone", 41692 , -8319, 10, 3.5, 1));
                scenicList.push(new Scenery("darkStone", 41514 , -12957, -19, 2, 2));
                scenicList.push(new Scenery("darkStone", 38453 , -13492, 49, 0.5, 3));
                scenicList.push(new Scenery("darkStone", 38342 , -8908, -49, 1, 3));
                scenicList.push(new Scenery("darkStone", 42437 , -11004, 14, 1.5, 3));
                scenicList.push(new Scenery("darkStone", 44035 , -6652, -22.7, 2.5, 3));
                scenicList.push(new Scenery("darkStone", 46249 , -6350, 22.1, 1, 1));
                scenicList.push(new Scenery("darkStone", 46183 , -10802, -0.5, 1.5, 2));
                scenicList.push(new Scenery("ashStone", 38457 , -3905, -4.45, 1, 2));
                scenicList.push(new Scenery("ashStone", 38828 , -5130, 4.45, 2, 3));
                scenicList.push(new Scenery("ashStone", 40664 , -7623, 3, 0.5, 2));
                scenicList.push(new Scenery("ashStone", 40762 , -7868, 15, 1.5, 3));
                scenicList.push(new Scenery("ashStone", 40935 , -7673, 5, 1, 1));
                scenicList.push(new Scenery("ashStone", 40474 , -13042, -6, 1.5, 1));
                scenicList.push(new Scenery("ashStone", 40557 , -9488, -666, 3.5, 1));
                scenicList.push(new Scenery("ashStone", 41646 , -4739, 67.4, 2, 2));
                scenicList.push(new Scenery("ashStone", 44982 , -7118, 444.4, 3, 2));
                scenicList.push(new Scenery("ashStone", 45249 , -9199, 44.44, 4, 2));
                scenicList.push(new Scenery("ashStone", 43598 , -11824, 4444, 1, 3));
                scenicList.push(new Scenery("ashStone", 46726 , -10033, 0.4444, 1, 1));
                scenicList.push(new Scenery("ashStone", 42801 , -11081, -1.4444, 1, 2));
                scenicList.push(new Scenery("ashStone", 46639 , -4702, 2.4446, 0.5, 1));
                scenicList.push(new Scenery("stone", 38418 , -5354, 35, 0.5, 1));
                scenicList.push(new Scenery("stone", 38928 , -8059, 25, 1, 3));
                scenicList.push(new Scenery("stone", 40774 , -8938, 15, 2, 3));
                scenicList.push(new Scenery("stone", 44313 , -10834, 5, 4, 3));
                scenicList.push(new Scenery("stone", 42456 , -12014, -5, 0.5, 3));
                scenicList.push(new Scenery("stone", 38507 , -12978, -28, 2.5, 2));
                scenicList.push(new Scenery("stone", 39250 , -10382, -36.2, 1, 1));
                scenicList.push(new Scenery("stone", 43210 , -3914, 45.45454545, 1.5, 1));
                scenicList.push(new Scenery("stone", 44989 , -5485, 0, 1, 1));
                scenicList.push(new Scenery("stone", 47044 , -4392, 0, 0.5, 3));
                scenicList.push(new Scenery("stone", 41317 , -11133, 36.363636, 1.5, 3));

                //Plants
                scenicList.push(new Scenery("haeflowerPlant", 39374, -12147, Math.PI, true));

                change = "s1w4";
            }
        }
        else if (region == "s1w5")
        {
            if (change != "s1w5")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee || ArtificialIntelligenceAccess[i].team == "arena1" || ArtificialIntelligenceAccess[i].team == "arena2" || ArtificialIntelligenceAccess[i].team == "arena3")
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //characters
                //unique AND non-unique only by necessity
                if (uniqueChars.bameyLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Bamey the Huntsman")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(51563, -9805, "Person", false, "Bamey the Huntsman", {race: "Thengar", faction: "Thengar", personality: "violent", outfit: ["boulchomLeatherArmour", 1.5], weapon: ["longbow", [0.2, 0.25], 0, 1, 1.1], ranged: [true, "arrow", 8, 2200, 5, 7, 0, "none", 2], patrolStops: 0, patrolLoop: true, route:[[2049, 1021], [1943, 1127], [1690, 1021]], merchant: true, merchandise: [[new Item("coins", false, false), 36], [new Item("longbow", false, false), 3], [new Item("arrow", false, false), 160], [new Item("steelArrow", false, false), 80], [new Item("beartrap", false, false), 4], [new Item("clawtrap", false, false), 3], [new Item("jacks", false, false), 39], [new Item("spindletrap", false, false), 1]]}));
                        ArtificialIntelligenceAccess[i].health = 37;
                    }
                }

                if (uniqueChars.bruneldaLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Brunelda the Merchant")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(50986, -9534, "Person", false, "Brunelda the Merchant", {race: "Thengar", faction: "Thengar", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 1.3], ranged: [false, "arrow", 8, 2200, 5, 7, 0, "none", 2], patrolStops: 0, patrolLoop: true, route:[[2049, 1021], [1943, 1127], [1690, 1021]], merchant: true, merchandise: [[new Item("coins", false, false), 65], [new Item("skolPelt", false, false), 3], [new Item("mountainFrichPelt", false, false), 1], [new Item("boulchomPelt", false, false), 2], [new Item("wood", false, false), 5], [new Item("fireStarter", false, false), 2], [new Item("jarOfOil", false, false), 2], [new Item("oilLampEmpty", false, false), 2], [new Item("bucket", false, false), 3], [new Item("tent", false, false), 1], [new Item("hammer", false, false), 2], [new Item("pickaxe", false, false), 4], [new Item("timberAxe", false, false), 1], [new Item("harstGrain", false, false), 18]]}));
                        ArtificialIntelligenceAccess[i].health = 4;
                    }
                }

                if (uniqueChars.gerlachLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Gerlach the Butcher")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(51564, -9414, "Person", false, "Gerlach the Butcher", {race: "Thengar", faction: "Thengar", personality: "violent", outfit: ["none", 0], weapon: ["meatCleaver", [1, 2], 1, 11, 1.7], ranged: [false, "arrow", 8, 2200, 5, 7, 0, "none", 2], patrolStops: 0, patrolLoop: true, route:[[2049, 1021], [1943, 1127], [1690, 1021]], merchant: true, merchandise: [[new Item("coins", false, false), 43], [new Item("rawBearFlesh", false, false), 4], [new Item("rawBearTongue", false, false), 1], [new Item("rawRabbitFlesh", false, false), 7], [new Item("rawBoulchomFlesh", false, false), 3], [new Item("rawHoffalgreFlesh", false, false), 6]]}));
                        ArtificialIntelligenceAccess[i].health = 8;
                    }
                }

                if (uniqueChars.johannaLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Johanna the Herbalist")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(51560, -8907, "Person", false, "Johanna the Herbalist", {race: "Thengar", faction: "Thengar", personality: "scared", outfit: ["hoffalgreFurCloak", 0], weapon: ["none", [0.3, 0.25], 0, 0, 1.4], ranged: [false, "arrow", 8, 2200, 5, 7, 0, "none", 2], patrolStops: 0, patrolLoop: true, route:[[2049, 1021], [1943, 1127], [1690, 1021]], merchant: true, merchandise: [[new Item("coins", false, false), 50], [new Item("hydroraSalve", false, false), 2], [new Item("culprisBandage", false, false), 4], [new Item("kofkeLeaves", false, false), 6], [new Item("steugiurneFlower", false, false), 2], [new Item("thalisLeaf", false, false), 4], [new Item("viperSnakeSkin", false, false), 2], [new Item("lizardTail", false, false), 7], [new Item("glassJar", false, false), 6], [new Item("potionGlass", false, false), 5]]}));
                        ArtificialIntelligenceAccess[i].health = 3;
                    }
                }

                if (uniqueChars.lenaLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Lena")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(51485, -8809, "Person", false, "Lena", {race: "Thengar", faction: "Thengar", personality: "scared", outfit: ["hoffalgreFurCloak", 0], weapon: ["none", [0.03, 0.025], 0, 0, 1], ranged: [false, "arrow", 8, 2200, 5, 7, 0, "none", 2], patrolStops: 0, patrolLoop: true, route:[[2049, 1021], [1943, 1127], [1690, 1021]], kid: true}));
                        ArtificialIntelligenceAccess[i].health = 1;
                    }
                }

                if (uniqueChars.axelLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Axel")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(52794, -6236, "Person", false, "Axel", {race: "Thengar", faction: "Thengar", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.03, 0.025], 0, 0, 1], ranged: [false, "arrow", 8, 2200, 5, 7, 0, "none", 2], patrolStops: 0, patrolLoop: true, route:[[2049, 1021], [1943, 1127], [1690, 1021]]}));
                        ArtificialIntelligenceAccess[i].health = 7;
                    }
                }

                if (uniqueChars.lambertLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Lambert")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(52735, -6741, "Person", false, "Lambert", {race: "Thengar", faction: "Thengar", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.025, 0.025], 0, 0, 1], ranged: [false, "arrow", 8, 2200, 5, 7, 0, "none", 2], patrolStops: 1, patrolLoop: false, route:[[52742, -6717]]}));
                        ArtificialIntelligenceAccess[i].health = 4;
                    }
                }

                if (quests.lethikHanzRestored == false)
                {
                    if (uniqueChars.hanzLDS == true)
                    {
                        var hits = 0;
                        for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                        {
                            if (ArtificialIntelligenceAccess[i].ID == "Hanz")
                            {
                                hits += 1;
                            }
                        }
                        if (hits == 0)
                        {
                            if (player.gamemode == "protagonist")
                            {
                                ArtificialIntelligenceAccess.push(new Unit(50667, -10366, "Person", false, "Hanzelopsinopolis the III", {race: "Thengar", faction: "Thengar", personality: "calculated", outfit: ["none", 0], weapon: ["none", [100, 100], 100, 0, 0.3], ranged: [false, "arrow", 8, 2200, 5, 7, 0, "none", 2], patrolStops: 1, patrolLoop: false, route:[[50686, -10368]]}));
                                ArtificialIntelligenceAccess[i].health = 80;
                                ArtificialIntelligenceAccess[i].healthMAX = 80;
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(50667, -10366, "Person", false, "Hanz", {race: "Thengar", faction: "Thengar", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.03, 0.03], 0, 0, 1], ranged: [false, "arrow", 8, 2200, 5, 7, 0, "none", 2], patrolStops: 1, patrolLoop: false, route:[[50686, -10368]]}));
                                ArtificialIntelligenceAccess[i].health = 8;
                                ArtificialIntelligenceAccess[i].healthMAX = 8;
                            }
                        }
                    }
                }

                if (uniqueChars.conradLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Conrad")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(52152, -7228, "Person", false, "Conrad", {race: "Thengar", faction: "Thengar", personality: "calculated", outfit: ["hoffalgreFurCloak", 0], weapon: ["none", [0.04, 0.04], 0, 2, 1.3], ranged: [false, "arrow", 8, 2200, 5, 7, 0, "none", 2], patrolStops: 1, patrolLoop: false, route:[[52154, -7203]]}));
                        ArtificialIntelligenceAccess[i].health = 16;
                        ArtificialIntelligenceAccess[i].speed = 0.5;
                    }
                }

                if (uniqueChars.lenardLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Lenard")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(52765, -7202, "Person", false, "Lenard", {race: "Thengar", faction: "Thengar", personality: "violent", outfit: ["none", 0], weapon: ["none", [0.045, 0.035], 0, 3, 1.1], ranged: [false, "arrow", 8, 2200, 5, 7, 0, "none", 2], patrolStops: 1, patrolLoop: false, route:[[52764, -7190]]}));
                        ArtificialIntelligenceAccess[i].health = 12;
                    }
                }

                if (uniqueChars.vsevolodLDS == true && quests.theSecretOfTheSagesCacheQuest == false)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Vsevolod")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(50419, -10510, "Soldier", false, "Vsevolod", {race: "Vardan", faction: "loner", con: 7, speed: 1.2, outfit: ["blackMageRobe", 0], weapon: ["drainingI", [9, 4], 0, 200, 3], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, CNX: 200, MR: 19, patrolStops: 1, patrolLoop: false, route:[[50405, -10488]]}));
                    }
                }

                if (uniqueChars.hildegardLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Hildegard")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(51616, -7327, "Person", false, "Hildegard", {race: "Thengar", faction: "Thengar", personality: "scared", outfit: ["hoffalgreFurCloak", 0], weapon: ["none", [0.03, 0.025], 0, 0, 1], ranged: [false, "arrow", 8, 2200, 5, 7, 0, "none", 2], patrolStops: 0, patrolLoop: true, route:[[2049, 1021], [1943, 1127], [1690, 1021]]}));
                        ArtificialIntelligenceAccess[i].health = 1;
                    }
                }

                if (uniqueChars.cherylLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Cheryl the Tailor")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(51263, -9776, "Person", false, "Cheryl the Tailor", {race: "Thengar", faction: "Thengar", personality: "calculated", outfit: ["hoffalgreFurCloak", 0], weapon: ["none", [0.25, 0.25], 0, 1, 1.25], ranged: [false, "arrow", 8, 2200, 5, 7, 0, "none", 2], patrolStops: 0, patrolLoop: true, route:[[2049, 1021], [1943, 1127], [1690, 1021]], merchant: true, merchandise: [[new Item("coins", false, false), 29], [new Item("boulchomLeatherArmour", false, false), 2], [new Item("boulchomLeatherBoots", false, false), 2], [new Item("boulchomLeatherGloves", false, false), 3], [new Item("blackBearFurClothing", false, false), 2], [new Item("blackBearLeatherArmour", false, false), 1], [new Item("hoffalgreFurCloak", false, false), 8]]}));
                        ArtificialIntelligenceAccess[i].health = 3;
                    }
                }

                if (uniqueChars.cherylChildLDS == true && quests.cherylChild)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "[ " + quests.cherylChildName + " ]")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(51325, -9860, "Person", false, "[ " + quests.cherylChildName + " ]", {race: player.raceName, faction: "Thengar", personality: "violent", outfit: ["hoffalgreFurCloak", 0], weapon: ["none", [0.25, 0.25], 0, 0, 1.3], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[51325, -9860]], kid: true}));
                        ArtificialIntelligenceAccess[i].health = 1;
                    }
                }

                if (uniqueChars.adolfLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Adolf the Pit Fighter")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        if (quests.swordDeliveryQuest == "complete")
                        {
                            if (quests.swordDeliveryFight)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51493, -8252, "Soldier", false, "Adolf the Pit Fighter", {race: "Thengar", faction: "arena1", con: 10, speed: 1.45, outfit: ["skolLeatherArmour", 3], weapon: ["longsword", [9, 4], 0, 16, 1.4], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, patrolStops: 0, patrolLoop: true, route:[[-514, 277], [-514, 277]]}));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51645, -8388, "Soldier", false, "Adolf the Pit Fighter", {race: "Thengar", faction: "Thengar", con: 10, speed: 1.45, outfit: ["skolLeatherArmour", 3], weapon: ["longsword", [9, 4], 0, 16, 1.4], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, patrolStops: 0, patrolLoop: true, route:[[-514, 277], [-514, 277]]}));
                            }
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51645, -8388, "Soldier", false, "Adolf the Pit Fighter", {race: "Thengar", faction: "Thengar", con: 10, speed: 1.45, outfit: ["skolLeatherArmour", 3], weapon: ["none", [0.5, 0.6], 0, 1, 0.9], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, patrolStops: 0, patrolLoop: true, route:[[-514, 277], [-514, 277]]}));
                        }
                    }
                }

                if (uniqueChars.markosLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Markos the Pit Master")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(50858, -8123, "Soldier", false, "Markos the Pit Master", {race: "Thengar", faction: "Thengar", con: 22, speed: 0.85, outfit: ["thenganPlateArmour", 19], weapon: ["flail", [26, 10], 14, 63, 3.6], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, patrolStops: 0, patrolLoop: true, route:[[-514, 277], [-514, 277]]}));
                    }
                }

                if (uniqueChars.rutgarLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Rutgar the Warden")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(53108, -6704, "Soldier", false, "Rutgar the Warden", {race: "Thengar", faction: "Thengar", con: 19, speed: 0.74, outfit: ["thenganPlateArmour", 14], weapon: ["longsword", [12, 8], 0, 16, 1.25], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, patrolStops: 0, patrolLoop: true, route:[[-514, 277], [-514, 277]]}));
                    }
                }

                if (uniqueChars.friedrichLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Beulingerr Commander Friedrich")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(51236, -7402, "Soldier", false, "Beulingerr Commander Friedrich", {race: "Thengar", faction: "Thengar", con: 26, speed: 0.88, outfit: ["thenganPlateArmour", 22], weapon: ["thenganWarhammer", [30, 20], 20, 48, 5.75], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, patrolStops: 0, patrolLoop: true, route:[[-514, 277], [-514, 277]]}));
                    }
                }

                if (uniqueChars.ederhalLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Ederhal the Innkeeper")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(50569, -10420, "Person", false, "Ederhal the Innkeeper", {race: "Thengar", faction: "Thengar", personality: "calculated", outfit: ["hoffalgreFurCloak", 0], weapon: ["none", [0.3, 0.4], 0, 1, 1.15], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[50569, -10418]], merchant: true, merchandise: [[new Item("coins", false, false), 69], [new Item("bearMeat", false, false), 3], [new Item("hoffalgreMeat", false, false), 3], [new Item("rabbitMeat", false, false), 5], [new Item("harstAle", false, false), 39], [new Item("harstBread", false, false), 1], [new Item("vel", false, false), 4]]}));
                        ArtificialIntelligenceAccess[i].health = 13;
                    }
                }

                if (uniqueChars.naokoLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Naoko the Banker")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(50957, -9176, "Person", false, "Naoko the Banker", {race: "Orgell", faction: "Thengar", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.2, 0.1], 0, 0, 1.2], ranged: [false, "arrow", 8, 2000, 1, 6, 0, "none", 0.95], patrolStops: 1, patrolLoop: false, route:[[50956, -9146]], banker: true}));
                    }
                }

                if (uniqueChars.dagmarLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Dagmar the Smith")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(51270, -9539, "Person", false, "Dagmar the Smith", {race: "Thengar", faction: "Thengar", personality: "violent", outfit: ["none", 0], weapon: ["longsword", [8, 5], 0, 16, 1.45], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[2049, 1021], [1943, 1127], [1690, 1021]], merchant: true, merchandise: [[new Item("coins", false, false), 240], [new Item("steel", false, false), 6], [new Item("iron", false, false), 4], [new Item("mace", false, false), 4], [new Item("thenganDagger", false, false), 3], [new Item("longsword", false, false), 4], [new Item("thenganSwordAndShield", false, false), 1], [new Item("longSpikedMorningStar", false, false), 2], [new Item("thenganWarhammer", false, false), 1], [new Item("flail", false, false), 1], [new Item("smashStick", false, false), 1], [new Item("thenganPlateArmour", false, false), 1], [new Item("timberAxe", false, false), 1], [new Item("pickaxe", false, false), 2]]}));
                        ArtificialIntelligenceAccess[i].health = 46;
                    }
                    ArtificialIntelligenceAccess.push(new Unit(51352, -9394, "Person", false, "Blacksmith's Apprentice", {race: "Thengar", faction: "Thengar", personality: "violent", outfit: ["none", 0], weapon: ["hammer", [2, 1.5], 3, 12, 1.35], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[1793, 314]]}));
                }
                else if (uniqueChars.lennardLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Lennard the Smith")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(51270, -9539, "Person", false, "Lennard the Smith", {race: "Thengar", faction: "Thengar", personality: "violent", outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 1, 1.1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[2049, 1021], [1943, 1127], [1690, 1021]], merchant: true, merchandise: [[new Item("coins", false, false), 60], [new Item("steel", false, false), 2], [new Item("iron", false, false), 1], [new Item("mace", false, false), 1], [new Item("thenganDagger", false, false), 1], [new Item("longsword", false, false), 1], [new Item("longSpikedMorningStar", false, false), 1], [new Item("timberAxe", false, false), 1], [new Item("pickaxe", false, false), 3]]}));
                        ArtificialIntelligenceAccess[i].health = 9;
                    }
                    ArtificialIntelligenceAccess.push(new Unit(51352, -9394, "Person", false, "Blacksmith's Apprentice", {race: "Thengar", faction: "Thengar", personality: "violent", outfit: ["none", 0], weapon: ["hammer", [2, 1.5], 3, 12, 1.35], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[1793, 314]]}));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(51270, -9539, "Person", false, "Journeyman Blacksmith", {race: "Thengar", faction: "Thengar", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.1, 0.1], 0, 1, 1.2], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[2049, 1021], [1943, 1127], [1690, 1021]], merchant: true, merchandise: [[new Item("coins", false, false), 20], [new Item("steel", false, false), 1], [new Item("iron", false, false), 1], [new Item("mace", false, false), 1], [new Item("thenganDagger", false, false), 1], [new Item("timberAxe", false, false), 1], [new Item("pickaxe", false, false), 1]]}));
                }

                //a well known thengan mercenary crew's captain.
                if (uniqueChars.kronheimeLDS == true && quests.theBalgurMercenariesQuest == false || uniqueChars.kronheimeLDS == true && quests.theBalgurMercenariesQuest == "complete")
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Mercenary Captain Kronheime")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(51243, -7210, "Soldier", false, "Mercenary Captain Kronheime", {race: "Thengar", faction: "TheBalgurMercenaries", con: 20, speed: 1.3, outfit: ["balgurCaptainArmour", 7], weapon: ["flail", [25, 7], 11, 63, 3.1], ranged: [false, "arrow", 7, 1800, 1, 6, 0, "none", 2.4], patrolStops: 0, patrolLoop: false, route:[[1654, 1507], [1661, 2311], [1864, 2315], [1852, 1499]]}));
                    }
                }
                else if (uniqueChars.kronheimeLDS == false)
                {
                    if (uniqueChars.barretLDS == true)
                    {
                        var hits = 0;
                        for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                        {
                            if (ArtificialIntelligenceAccess[i].ID == "Mercenary Captain Barret")
                            {
                                hits += 1;
                            }
                        }
                        if (hits == 0)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51243, -7210, "Soldier", false, "Mercenary Captain Barret", {race: "Thengar", faction: "TheBalgurMercenaries", con: 24, speed: 1.25, outfit: ["balgurCaptainArmour", 7], weapon: ["thenganWarhammer", [26, 26], 20, 47, 5], ranged: [false, "arrow", 7, 1800, 1, 6, 0, "none", 2.4], patrolStops: 0, patrolLoop: false, route:[[1654, 1507], [1661, 2311], [1864, 2315], [1852, 1499]]}));
                        }
                    }
                }

                //non-unique
                //balgur mercs
                if (uniqueChars.kronheimeLDS == true || uniqueChars.barretLDS == true)
                {
                    ArtificialIntelligenceAccess.push(new Unit(51435, -6729, "Soldier", false, "Balgur Mercenary", {race: "Thengar", faction: "TheBalgurMercenaries", con: 12, speed: 1.2, outfit: ["balgurMercArmour", 5], weapon: ["longSpikedMorningStar", [13, 5], 14, 20, 2.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(51334, -6700, "Soldier", false, "Balgur Mercenary", {race: "Thengar", faction: "TheBalgurMercenaries", con: 9, speed: 1.25, outfit: ["balgurMercArmour", 4], weapon: ["longSpikedMorningStar", [11, 4], 14, 20, 2.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(51020, -6731, "Soldier", false, "Balgur Mercenary", {race: "Thengar", faction: "TheBalgurMercenaries", con: 11, speed: 1.3, outfit: ["balgurMercArmour", 4], weapon: ["longSpikedMorningStar", [12, 4], 14, 20, 2.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(51141, -6698, "Soldier", false, "Balgur Mercenary", {race: "Thengar", faction: "TheBalgurMercenaries", con: 13, speed: 1.225, outfit: ["balgurMercArmour", 4.5], weapon: ["longSpikedMorningStar", [14, 6], 14, 20, 2.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(51398, -6934, "Soldier", false, "Balgur Mercenary", {race: "Thengar", faction: "TheBalgurMercenaries", con: 8, speed: 1.175, outfit: ["balgurMercArmour", 3.5], weapon: ["longSpikedMorningStar", [10, 3], 14, 20, 2.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(51083, -7027, "Soldier", false, "Balgur Mercenary", {race: "Thengar", faction: "TheBalgurMercenaries", con: 14, speed: 1.3, outfit: ["balgurMercArmour", 5], weapon: ["longSpikedMorningStar", [14, 7], 14, 20, 2.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(50894, -6932, "Soldier", false, "Balgur Mercenary", {race: "Thengar", faction: "TheBalgurMercenaries", con: 15, speed: 1.4, outfit: ["balgurMercArmour", 5], weapon: ["longSpikedMorningStar", [16, 6.5], 14, 20, 2.3], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(51567, -6939, "Soldier", false, "Balgur Mercenary", {race: "Thengar", faction: "TheBalgurMercenaries", con: 12, speed: 1.2, outfit: ["balgurMercArmour", 5], weapon: ["longSpikedMorningStar", [13, 5], 14, 20, 2.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                }
                //adolf arena fight v skols
                if (quests.swordDeliveryFight && uniqueChars.adolfLDS == true && quests.swordDeliveryQuest == "complete")
                {
                    quests.swordDeliveryFight = false;
                    ArtificialIntelligenceAccess.push(new Unit(51308, -8021, "Skol", false, "arena2"));
                    ArtificialIntelligenceAccess.push(new Unit(51038, -8134, "Skol", false, "arena2"));
                }

                if (quests.kellExecution == "beasts")
                {
                    var rnd = Math.random();
                    if (rnd > 0.64)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(51509, -7990, "Skol", false, "arena1"));
                        ArtificialIntelligenceAccess.push(new Unit(51508, -8245, "Skol", false, "arena1"));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(51309, -8098, "Nog", false, "arena1"));
                        ArtificialIntelligenceAccess.push(new Unit(51392, -8021, "Nog", false, "arena1"));
                        ArtificialIntelligenceAccess.push(new Unit(51526, -8100, "Nog", true, "arena1"));
                        ArtificialIntelligenceAccess.push(new Unit(51438, -8223, "Nog", false, "arena1"));
                    }

                    rnd = Math.random();
                    if (rnd > 0.3333)
                    {
                        //kell soldier (prisoner)
                        ArtificialIntelligenceAccess.push(new Unit(51178, -8128, "Soldier", false, "War Prisoner", {race: "Kel", faction: "arena2", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.3, 0.35], 0, 0, 1.1], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    }
                    else
                    {
                        //kell family
                        if (Math.round(Math.random()))
                        {
                            if (Math.round(Math.random()))
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51178, -8145, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena2", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                ArtificialIntelligenceAccess.push(new Unit(51101, -8198, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                ArtificialIntelligenceAccess.push(new Unit(51056, -8124, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51048, -8191, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena2", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                ArtificialIntelligenceAccess.push(new Unit(51077, -8171, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                ArtificialIntelligenceAccess.push(new Unit(51079, -8218, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                        }
                        else
                        {
                            if (Math.round(Math.random()))
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51048, -8146, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena2", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                ArtificialIntelligenceAccess.push(new Unit(51077, -8126, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                ArtificialIntelligenceAccess.push(new Unit(51079, -8173, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51154, -8213, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena2", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                ArtificialIntelligenceAccess.push(new Unit(51107, -8264, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                ArtificialIntelligenceAccess.push(new Unit(51239, -8035, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                ArtificialIntelligenceAccess.push(new Unit(51182, -8089, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                        }
                    }
                    quests.kellExecution = false;
                }
                else if (quests.kellExecution == "champion")
                {
                    var rnd = Math.random();
                    if (rnd > 0.7)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(51491, -8120, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 14, speed: 1.38, outfit: ["blackBearLeatherArmour", 6], weapon: ["smashStick", [12, 11], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    }
                    else if (rnd > 0.4)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(51491, -8120, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 13, speed: 1.45, outfit: ["skolLeatherArmour", 3], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    }
                    else if (rnd > 0.1)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(51491, -8120, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 9, speed: 1.55, outfit: ["boulchomLeatherArmour", 2], weapon: ["thenganSword", [8, 5], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(51491, -8120, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 6, speed: 0.73, outfit: ["thenganPlateArmour", 14], weapon: ["thenganWarhammer", [20, 14], 16, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    }

                    rnd = Math.random();
                    if (rnd > 0.3333)
                    {
                        //kell soldier (prisoner)
                        ArtificialIntelligenceAccess.push(new Unit(51178, -8128, "Soldier", false, "War Prisoner", {race: "Kel", faction: "arena2", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.3, 0.35], 0, 0, 1.1], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    }
                    else
                    {
                        //kell family
                        if (Math.round(Math.random()))
                        {
                            if (Math.round(Math.random()))
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51178, -8145, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena2", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                ArtificialIntelligenceAccess.push(new Unit(51101, -8198, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                ArtificialIntelligenceAccess.push(new Unit(51056, -8124, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51048, -8191, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena2", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                ArtificialIntelligenceAccess.push(new Unit(51077, -8171, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                ArtificialIntelligenceAccess.push(new Unit(51079, -8218, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                        }
                        else
                        {
                            if (Math.round(Math.random()))
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51048, -8146, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena2", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                ArtificialIntelligenceAccess.push(new Unit(51077, -8126, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                ArtificialIntelligenceAccess.push(new Unit(51079, -8173, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51154, -8213, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena2", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                ArtificialIntelligenceAccess.push(new Unit(51107, -8264, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                ArtificialIntelligenceAccess.push(new Unit(51239, -8035, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                ArtificialIntelligenceAccess.push(new Unit(51182, -8089, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                        }
                    }
                    quests.kellExecution = false;
                }
                else if (quests.pitFight == "spectacle")
                {
                    quests.pitFight = "none";
                    var rndm = Math.random();
                    if (rndm > 0.9)
                    {
                        var rnd = Math.random();
                        if (rnd > 0.7)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51491, -8120, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 13, speed: 1.41, outfit: ["blackBearLeatherArmour", 6], weapon: ["longSpikedMorningStar", [15, 5], 14, 20, 2.35], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51491, -8120, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 14, speed: 0.9, outfit: ["skolLeatherArmour", 3], weapon: ["thenganWarhammer", [20, 14], 16, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.1)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51491, -8120, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 8, speed: 1.3, outfit: ["boulchomLeatherArmour", 2], weapon: ["smashStick", [12, 11], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51491, -8120, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 10, speed: 0.79, outfit: ["thenganPlateArmour", 14], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }

                        rnd = Math.random();
                        if (rnd > 0.65)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51061, -8126, "Soldier", false, "Alzkwaya Tribal", {race: "Kel", faction: "arena2", con: 13, speed: 1.5, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [8, 4], 3, 12, 0.9], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            ArtificialIntelligenceAccess.push(new Unit(50987, -8126, "Soldier", false, "Alzkwaya Slave Man", {race: "Kel", faction: "arena2", con: 1, speed: 0, outfit: ["mofuTribalWear", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            ArtificialIntelligenceAccess.push(new Unit(50950, -8085, "Soldier", false, "Alzkwaya Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["mofuTribalWear", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            ArtificialIntelligenceAccess.push(new Unit(50960, -8178, "Soldier", false, "Alzkwaya Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["mofuTribalWear", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.32)
                        {
                            if (Math.random() > 0.65)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51061, -8126, "Soldier", false, "Echlin Tribal", {race: "Kel", faction: "arena2", con: 17, speed: 1.37, outfit: ["naapridLeatherArmour", 4], weapon: ["warHammer", [16, 1], 8, 16, 1.25], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                ArtificialIntelligenceAccess.push(new Unit(50987, -8126, "Soldier", false, "Echlin Slave Woman", {race: "Kel", faction: "arena2", con: 1, speed: 0, outfit: ["naapridLeatherArmour", 4], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                ArtificialIntelligenceAccess.push(new Unit(50960, -8178, "Soldier", false, "Echlin Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["naapridLeatherArmour", 1.5], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                ArtificialIntelligenceAccess.push(new Unit(50950, -8085, "Soldier", false, "Echlin Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["naapridLeatherArmour", 1.5], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51099, -8071, "Soldier", false, "Alzkwaya Slave Girl", {race: "Kel", faction: "arena2", con: 0.5, speed: 0.9, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [4, 0], 1, 4, 1], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            ArtificialIntelligenceAccess.push(new Unit(51083, -8156, "Soldier", false, "Alzkwaya Slave Girl", {race: "Kel", faction: "arena2", con: 0.5, speed: 0.9, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [2, 1], 0.5, 4, 0.85], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            ArtificialIntelligenceAccess.push(new Unit(50992, -8109, "Soldier", false, "Echlin Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0.82, outfit: ["naapridLeatherArmour", 1.5], weapon: ["hammer", [1, 0.8], 0.35, 0, 0.9], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                    }
                    else if (rndm > 0.849)
                    {
                        var rnd = Math.random();
                        if (rnd > 0.7)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51491, -8120, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 14, speed: 1.38, outfit: ["blackBearLeatherArmour", 6], weapon: ["smashStick", [12, 11], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51491, -8120, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 13, speed: 1.45, outfit: ["skolLeatherArmour", 3], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.1)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51491, -8120, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 9, speed: 1.55, outfit: ["boulchomLeatherArmour", 2], weapon: ["thenganSword", [8, 5], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51491, -8120, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 6, speed: 0.73, outfit: ["thenganPlateArmour", 14], weapon: ["thenganWarhammer", [20, 14], 16, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }

                        rnd = Math.random();
                        if (rnd > 0.3333)
                        {
                            //kell soldier (prisoner)
                            ArtificialIntelligenceAccess.push(new Unit(51178, -8128, "Soldier", false, "War Prisoner", {race: "Kel", faction: "arena2", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.3, 0.35], 0, 0, 1.1], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            //kell family
                            if (Math.round(Math.random()))
                            {
                                if (Math.round(Math.random()))
                                {
                                    ArtificialIntelligenceAccess.push(new Unit(51178, -8145, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena2", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51101, -8198, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51056, -8124, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                }
                                else
                                {
                                    ArtificialIntelligenceAccess.push(new Unit(51048, -8191, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena2", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51077, -8171, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51079, -8218, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                }
                            }
                            else
                            {
                                if (Math.round(Math.random()))
                                {
                                    ArtificialIntelligenceAccess.push(new Unit(51048, -8146, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena2", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51077, -8126, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51079, -8173, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                }
                                else
                                {
                                    ArtificialIntelligenceAccess.push(new Unit(51154, -8213, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena2", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51107, -8264, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51239, -8035, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51182, -8089, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                }
                            }
                        }
                    }
                    else if (rndm > 0.8)
                    {
                        var rnd = Math.random();
                        if (rnd > 0.64)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51509, -7990, "Skol", false, "arena1"));
                            ArtificialIntelligenceAccess.push(new Unit(51508, -8245, "Skol", false, "arena1"));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51309, -8098, "Nog", false, "arena1"));
                            ArtificialIntelligenceAccess.push(new Unit(51392, -8021, "Nog", false, "arena1"));
                            ArtificialIntelligenceAccess.push(new Unit(51526, -8100, "Nog", true, "arena1"));
                            ArtificialIntelligenceAccess.push(new Unit(51438, -8223, "Nog", false, "arena1"));
                        }

                        rnd = Math.random();
                        if (rnd > 0.3333)
                        {
                            //kell soldier (prisoner)
                            ArtificialIntelligenceAccess.push(new Unit(51178, -8128, "Soldier", false, "War Prisoner", {race: "Kel", faction: "arena2", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.3, 0.35], 0, 0, 1.1], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            //kell family
                            if (Math.round(Math.random()))
                            {
                                if (Math.round(Math.random()))
                                {
                                    ArtificialIntelligenceAccess.push(new Unit(51178, -8145, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena2", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51101, -8198, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51056, -8124, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                }
                                else
                                {
                                    ArtificialIntelligenceAccess.push(new Unit(51048, -8191, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena2", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51077, -8171, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51079, -8218, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                }
                            }
                            else
                            {
                                if (Math.round(Math.random()))
                                {
                                    ArtificialIntelligenceAccess.push(new Unit(51048, -8146, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena2", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51077, -8126, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51079, -8173, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                }
                                else
                                {
                                    ArtificialIntelligenceAccess.push(new Unit(51154, -8213, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena2", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51107, -8264, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51239, -8035, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51182, -8089, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                }
                            }
                        }
                    }
                    else if (rndm > 0.749)
                    {
                        var rnd = Math.random();
                        if (rnd > 0.7)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51486, -8114, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 15, speed: 1.42, outfit: ["blackBearLeatherArmour", 6], weapon: ["thenganSword", [9, 6], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51486, -8114, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 16, speed: 1, outfit: ["skolLeatherArmour", 3], weapon: ["thenganWarhammer", [20, 14], 16, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.1)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51486, -8114, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 11, speed: 1.25, outfit: ["boulchomLeatherArmour", 2], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51486, -8114, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 10, speed: 0.66, outfit: ["thenganPlateArmour", 14], weapon: ["smashStick", [12, 11], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }

                        rnd = Math.random();
                        if (rnd > 0.50)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(50978, -8134, "Soldier", false, "Echlin Tribal", {race: "Kel", faction: "arena2", con: 15, speed: 1.55, outfit: ["naapridLeatherArmour", 4], weapon: ["warHammer", [16, 1], 8, 16, 1.25], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else //when I come up with more kellish tribes add more exemplary soldiers.
                        {
                            ArtificialIntelligenceAccess.push(new Unit(50978, -8134, "Soldier", false, "Alzkwaya Tribal", {race: "Kel", faction: "arena2", con: 15, speed: 1.55, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [8, 4], 3, 12, 0.9], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                    }
                    else if (rndm > 0.7)
                    {
                        var rnd = Math.random();
                        if (rnd > 0.45)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51450, -8126, "Skol", true, "arena1"));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51452, -8027, "BlackBear", true, "arena1"));
                            ArtificialIntelligenceAccess.push(new Unit(51450, -8126, "BlackBear", true, "arena1"));
                            ArtificialIntelligenceAccess.push(new Unit(51453, -8249, "BlackBear", true, "arena1"));
                        }

                        rnd = Math.random();
                        if (rnd > 0.50)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(50978, -8134, "Soldier", false, "Echlin Tribal", {race: "Kel", faction: "arena2", con: 15, speed: 1.55, outfit: ["naapridLeatherArmour", 4], weapon: ["warHammer", [16, 0], 8, 16, 1.25], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else //when I come up with more kellish tribes add more exemplary soldiers.
                        {
                            ArtificialIntelligenceAccess.push(new Unit(50978, -8134, "Soldier", false, "Alzkwaya Tribal", {race: "Kel", faction: "arena2", con: 15, speed: 1.55, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [8, 4], 3, 12, 0.9], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                    }
                    else if (rndm > 0.6)
                    {

                        var rnd = Math.random();
                        if (rnd > 0.7)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51486, -8114, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 16, speed: 1.2, outfit: ["blackBearLeatherArmour", 6], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51486, -8114, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 13, speed: 1.52, outfit: ["skolLeatherArmour", 3], weapon: ["thenganSword", [10, 7], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.1)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51486, -8114, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 19, speed: 1, outfit: ["boulchomLeatherArmour", 2], weapon: ["thenganWarhammer", [20, 14], 16, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51486, -8114, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 14, speed: 0.7, outfit: ["thenganPlateArmour", 17], weapon: ["smashStick", [13, 12], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }

                        rnd = Math.random();
                        if (rnd > 0.45)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51058, -8130, "Skol", true, "arena2"));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51037, -7990, "BlackBear", true, "arena2"));
                            ArtificialIntelligenceAccess.push(new Unit(51058, -8130, "BlackBear", true, "arena2"));
                            ArtificialIntelligenceAccess.push(new Unit(51001, -8284, "BlackBear", true, "arena2"));
                        }
                    }
                    else if (rndm > 0.5)
                    {
                        var rnd = Math.random();
                        if (rnd > 0.7)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51491, -8120, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 14, speed: 1.38, outfit: ["blackBearLeatherArmour", 6], weapon: ["smashStick", [12, 11], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51491, -8120, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 13, speed: 1.45, outfit: ["skolLeatherArmour", 3], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.1)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51491, -8120, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 9, speed: 1.55, outfit: ["boulchomLeatherArmour", 2], weapon: ["thenganSword", [8, 5], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51491, -8120, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 6, speed: 0.73, outfit: ["thenganPlateArmour", 14], weapon: ["thenganWarhammer", [20, 14], 16, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }

                        rnd = Math.random();
                        if (rnd > 0.64)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51047, -8014, "Skol", false, "arena2"));
                            ArtificialIntelligenceAccess.push(new Unit(51038, -8262, "Skol", false, "arena2"));
                            if (Math.round(Math.random()))
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51007, -8084, "Skol", false, "arena2"));
                            }
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51047, -8014, "Nog", true, "arena2"));
                            ArtificialIntelligenceAccess.push(new Unit(51038, -8262, "Nog", false, "arena2"));
                            ArtificialIntelligenceAccess.push(new Unit(50969, -8097, "Nog", true, "arena2"));
                            ArtificialIntelligenceAccess.push(new Unit(51107, -8156, "Nog", false, "arena2"));
                            ArtificialIntelligenceAccess.push(new Unit(51173, -8076, "Nog", false, "arena2"));
                        }
                    }
                    else if (rndm > 0.4)
                    {
                        var rnd = Math.random();
                        if (rnd > 0.7)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8126, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 14, speed: 1.2, outfit: ["blackBearLeatherArmour", 6], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8126, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 11, speed: 1.52, outfit: ["skolLeatherArmour", 3], weapon: ["thenganSword", [10, 7], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.1)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8126, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 17, speed: 1, outfit: ["boulchomLeatherArmour", 2], weapon: ["thenganWarhammer", [20, 14], 16, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8126, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 12, speed: 0.7, outfit: ["thenganPlateArmour", 16], weapon: ["smashStick", [13, 12], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }

                        rnd = Math.random();
                        if (rnd > 0.7)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51005, -8132, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 15, speed: 1.38, outfit: ["blackBearLeatherArmour", 6], weapon: ["smashStick", [12, 11], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51005, -8132, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 14, speed: 1.45, outfit: ["skolLeatherArmour", 3], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.1)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51005, -8132, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 10, speed: 1.55, outfit: ["boulchomLeatherArmour", 2], weapon: ["thenganSword", [8, 6], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51005, -8132, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 19, speed: 0.65, outfit: ["thenganPlateArmour", 15], weapon: ["thenganWarhammer", [26, 16], 19, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                    }
                    else if (rndm > 0.3)
                    {
                        var rnd = Math.random();
                        if (rnd > 0.7)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8086, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 14, speed: 1.2, outfit: ["blackBearLeatherArmour", 6], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8086, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 11, speed: 1.52, outfit: ["skolLeatherArmour", 3], weapon: ["thenganSword", [10, 7], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.1)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8086, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 17, speed: 1, outfit: ["boulchomLeatherArmour", 2], weapon: ["thenganWarhammer", [20, 14], 16, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8086, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 12, speed: 0.7, outfit: ["thenganPlateArmour", 16], weapon: ["smashStick", [13, 12], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }

                        rnd = Math.random();
                        if (rnd > 0.7)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8166, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 15, speed: 1.38, outfit: ["blackBearLeatherArmour", 6], weapon: ["smashStick", [12, 11], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8166, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 14, speed: 1.45, outfit: ["skolLeatherArmour", 3], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.1)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8166, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 10, speed: 1.55, outfit: ["boulchomLeatherArmour", 2], weapon: ["thenganSword", [8, 6], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8166, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 19, speed: 0.65, outfit: ["thenganPlateArmour", 15], weapon: ["thenganWarhammer", [26, 16], 19, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }

                        rnd = Math.random();
                        if (rnd > 0.7)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 15, speed: 1.38, outfit: ["blackBearLeatherArmour", 6], weapon: ["smashStick", [12, 11], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 14, speed: 1.45, outfit: ["skolLeatherArmour", 3], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.1)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 10, speed: 1.55, outfit: ["boulchomLeatherArmour", 2], weapon: ["thenganSword", [8, 6], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 19, speed: 0.65, outfit: ["thenganPlateArmour", 15], weapon: ["thenganWarhammer", [26, 16], 19, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }

                        rnd = Math.random();
                        if (rnd > 0.7)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 14, speed: 1.2, outfit: ["blackBearLeatherArmour", 6], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 11, speed: 1.52, outfit: ["skolLeatherArmour", 3], weapon: ["thenganSword", [10, 7], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.1)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 17, speed: 1, outfit: ["boulchomLeatherArmour", 2], weapon: ["thenganWarhammer", [20, 14], 16, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 12, speed: 0.7, outfit: ["thenganPlateArmour", 16], weapon: ["smashStick", [13, 12], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                    }
                    else if (rndm > 0.2)
                    {
                        var rnd = Math.random();
                        if (rnd > 0.7)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8166, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 15, speed: 1.2, outfit: ["blackBearLeatherArmour", 6], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8166, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 12, speed: 1.52, outfit: ["skolLeatherArmour", 3], weapon: ["thenganSword", [10, 7], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.1)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8166, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 18, speed: 1, outfit: ["boulchomLeatherArmour", 2], weapon: ["thenganWarhammer", [20, 14], 16, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8166, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 13, speed: 0.7, outfit: ["thenganPlateArmour", 16], weapon: ["smashStick", [13, 12], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }

                        rnd = Math.random();
                        if (rnd > 0.7)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8086, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 16, speed: 1.38, outfit: ["blackBearLeatherArmour", 6], weapon: ["smashStick", [12, 11], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8086, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 15, speed: 1.45, outfit: ["skolLeatherArmour", 3], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.1)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8086, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 11, speed: 1.55, outfit: ["boulchomLeatherArmour", 2], weapon: ["thenganSword", [8, 6], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8086, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 20, speed: 0.65, outfit: ["thenganPlateArmour", 15], weapon: ["thenganWarhammer", [26, 16], 19, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }

                        rnd = Math.random();
                        if (rnd > 0.45)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51043, -8004, "Skol", true, "arena2"));
                            ArtificialIntelligenceAccess.push(new Unit(51063, -8250, "Skol", true, "arena2"));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51041, -7995, "BlackBear", true, "arena2"));
                            ArtificialIntelligenceAccess.push(new Unit(51065, -8069, "BlackBear", true, "arena2"));
                            ArtificialIntelligenceAccess.push(new Unit(51084, -8179, "BlackBear", true, "arena2"));
                            ArtificialIntelligenceAccess.push(new Unit(51005, -8264, "BlackBear", true, "arena2"));
                        }
                    }
                    else if (rndm > 0.15)
                    {
                        var rnd = Math.random();
                        if (rnd > 0.45)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51486, -8062, "Skol", false, "arena1"));
                            ArtificialIntelligenceAccess.push(new Unit(51347, -8269, "Skol", false, "arena1"));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51520, -8118, "BlackBear", true, "arena1"));
                        }

                        rnd = Math.random();

                        if (rnd > 0.49)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51079, -8019, "Soldier", false, "Alzkwaya Slave Girl", {race: "Kel", faction: "arena2", con: 0.5, speed: 0.95, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [4, 0.5], 1, 4, 1], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            ArtificialIntelligenceAccess.push(new Unit(51008, -8134, "Soldier", false, "Alzkwaya Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0.85, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [3, 1], 0.5, 4, 0.85], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            ArtificialIntelligenceAccess.push(new Unit(51130, -8114, "Soldier", false, "Echlin Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0.82, outfit: ["naapridLeatherArmour", 1.5], weapon: ["hammer", [1.5, 1], 0.25, 3, 0.9], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            ArtificialIntelligenceAccess.push(new Unit(51059, -8298, "Soldier", false, "Echlin Slave Boy", {race: "Kel", faction: "arena2", con: 0.5, speed: 0.89, outfit: ["naapridLeatherArmour", 1.5], weapon: ["hammer", [1, 1.5], 0, 3, 0.9], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51079, -8019, "Soldier", false, "Alzkwaya Slave Girl", {race: "Kel", faction: "arena2", con: 0.5, speed: 0.9, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [4, 0.5], 1, 4, 1], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            ArtificialIntelligenceAccess.push(new Unit(51008, -8134, "Soldier", false, "Alzkwaya Slave Girl", {race: "Kel", faction: "arena2", con: 0.5, speed: 0.9, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [3, 1], 0.5, 4, 0.85], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            ArtificialIntelligenceAccess.push(new Unit(51130, -8114, "Soldier", false, "Echlin Slave Boy", {race: "Kel", faction: "arena2", con: 1, speed: 0.85, outfit: ["naapridLeatherArmour", 1.5], weapon: ["warHammer", [3.5, 2], 1, 3, 0.9], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            ArtificialIntelligenceAccess.push(new Unit(51059, -8298, "Soldier", false, "Alzkwaya Slave Girl", {race: "Kel", faction: "arena2", con: 0.75, speed: 1, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [3, 1.5], 0.5, 4, 0.85], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                    }
                    else if (rndm > 0.1)
                    {
                        var rnd = Math.random();
                        if (rnd > 0.7)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51491, -8120, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 11, speed: 1.38, outfit: ["blackBearLeatherArmour", 6], weapon: ["smashStick", [12, 11], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51491, -8120, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 10, speed: 1.45, outfit: ["skolLeatherArmour", 3], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.1)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51491, -8120, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 6, speed: 1.55, outfit: ["boulchomLeatherArmour", 2], weapon: ["thenganSword", [8, 5], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51491, -8120, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 5, speed: 0.73, outfit: ["thenganPlateArmour", 14], weapon: ["thenganSword", [9, 6], 0, 16, 1.45], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }

                        rnd = Math.random();

                        if (rnd > 0.49)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51079, -8019, "Soldier", false, "Alzkwaya Slave Girl", {race: "Kel", faction: "arena2", con: 0.5, speed: 0.95, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [4, 0.5], 1, 4, 1], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            ArtificialIntelligenceAccess.push(new Unit(51008, -8134, "Soldier", false, "Alzkwaya Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0.85, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [3, 1], 0.5, 4, 0.85], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            ArtificialIntelligenceAccess.push(new Unit(51130, -8114, "Soldier", false, "Echlin Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0.82, outfit: ["naapridLeatherArmour", 1.5], weapon: ["hammer", [1.5, 1], 0.25, 3, 0.9], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            ArtificialIntelligenceAccess.push(new Unit(51059, -8298, "Soldier", false, "Echlin Slave Boy", {race: "Kel", faction: "arena2", con: 0.5, speed: 0.89, outfit: ["naapridLeatherArmour", 1.5], weapon: ["hammer", [1, 1.5], 0, 3, 0.9], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            ArtificialIntelligenceAccess.push(new Unit(51154, -8192, "Soldier", false, "Echlin Slave Boy", {race: "Kel", faction: "arena2", con: 1, speed: 0.85, outfit: ["naapridLeatherArmour", 1.5], weapon: ["warHammer", [3.5, 2], 1, 3, 0.9], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51079, -8019, "Soldier", false, "Echlin Slave Boy", {race: "Kel", faction: "arena2", con: 0.5, speed: 0.89, outfit: ["naapridLeatherArmour", 1.5], weapon: ["hammer", [1, 1.5], 0, 3, 0.9], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            ArtificialIntelligenceAccess.push(new Unit(51008, -8134, "Soldier", false, "Alzkwaya Slave Girl", {race: "Kel", faction: "arena2", con: 0.5, speed: 0.9, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [3, 1], 0.5, 4, 0.85], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            ArtificialIntelligenceAccess.push(new Unit(51130, -8114, "Soldier", false, "Echlin Slave Boy", {race: "Kel", faction: "arena2", con: 1, speed: 0.85, outfit: ["naapridLeatherArmour", 1.5], weapon: ["warHammer", [3.5, 2], 1, 3, 0.9], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            ArtificialIntelligenceAccess.push(new Unit(51059, -8298, "Soldier", false, "Alzkwaya Slave Girl", {race: "Kel", faction: "arena2", con: 0.75, speed: 1, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [3, 1.5], 0.5, 4, 0.85], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            ArtificialIntelligenceAccess.push(new Unit(51154, -8192, "Soldier", false, "Alzkwaya Slave Girl", {race: "Kel", faction: "arena2", con: 1, speed: 1.1, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [3, 1.75], 1, 4, 0.85], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                    }
                    else
                    {
                        var rnd = Math.random();
                        if (rnd > 0.7)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8086, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 14, speed: 1.2, outfit: ["blackBearLeatherArmour", 6], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8086, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 11, speed: 1.52, outfit: ["skolLeatherArmour", 3], weapon: ["thenganSword", [10, 7], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.1)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8086, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 17, speed: 1, outfit: ["boulchomLeatherArmour", 2], weapon: ["thenganWarhammer", [20, 14], 16, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8086, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 12, speed: 0.7, outfit: ["thenganPlateArmour", 16], weapon: ["smashStick", [13, 12], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }

                        rnd = Math.random();
                        if (rnd > 0.7)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8166, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 15, speed: 1.38, outfit: ["blackBearLeatherArmour", 6], weapon: ["smashStick", [12, 11], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8166, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 14, speed: 1.45, outfit: ["skolLeatherArmour", 3], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.1)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8166, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 10, speed: 1.55, outfit: ["boulchomLeatherArmour", 2], weapon: ["thenganSword", [8, 6], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8166, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 19, speed: 0.65, outfit: ["thenganPlateArmour", 15], weapon: ["thenganWarhammer", [26, 16], 19, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }

                        rnd = Math.random();
                        if (rnd > 0.7)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51568, -8132, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 14, speed: 1.35, outfit: ["blackBearLeatherArmour", 6], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51568, -8132, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 18, speed: 1.3, outfit: ["skolLeatherArmour", 3], weapon: ["smashStick", [13, 12], 10, 30, 2.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.1)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51568, -8132, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 16, speed: 1.1, outfit: ["boulchomLeatherArmour", 2], weapon: ["thenganWarhammer", [20, 14], 16, 47, 6.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51568, -8132, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 7, speed: 0.85, outfit: ["thenganPlateArmour", 20], weapon: ["thenganSword", [10, 7], 0, 16, 1.35], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }

                        rnd = Math.random();
                        if (rnd > 0.7)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 15, speed: 1.38, outfit: ["blackBearLeatherArmour", 6], weapon: ["smashStick", [12, 11], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 14, speed: 1.45, outfit: ["skolLeatherArmour", 3], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.1)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 10, speed: 1.55, outfit: ["boulchomLeatherArmour", 2], weapon: ["thenganSword", [8, 6], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 19, speed: 0.65, outfit: ["thenganPlateArmour", 15], weapon: ["thenganWarhammer", [26, 16], 19, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }

                        rnd = Math.random();
                        if (rnd > 0.7)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 14, speed: 1.2, outfit: ["blackBearLeatherArmour", 6], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 11, speed: 1.52, outfit: ["skolLeatherArmour", 3], weapon: ["thenganSword", [10, 7], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.1)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 17, speed: 1, outfit: ["boulchomLeatherArmour", 2], weapon: ["thenganWarhammer", [20, 14], 16, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 12, speed: 0.7, outfit: ["thenganPlateArmour", 16], weapon: ["smashStick", [13, 12], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }

                        rnd = Math.random();
                        if (rnd > 0.7)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(50949, -8128, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 13, speed: 1.35, outfit: ["blackBearLeatherArmour", 6], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(50949, -8128, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 12, speed: 1.3, outfit: ["skolLeatherArmour", 3], weapon: ["smashStick", [13, 12], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.1)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(50949, -8128, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 16, speed: 1.1, outfit: ["boulchomLeatherArmour", 2], weapon: ["thenganWarhammer", [20, 14], 16, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(50949, -8128, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 13, speed: 0.85, outfit: ["thenganPlateArmour", 18], weapon: ["thenganSword", [10, 7], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                    }

                    quests.pitFight = false;
                }
                else if (quests.pitFight == "bears")
                {
                    quests.pitFight = "none";
                    if (Math.round(Math.random()))
                    {
                        ArtificialIntelligenceAccess.push(new Unit(51046, -8031, "BlackBear", true, "arena3"));
                        ArtificialIntelligenceAccess.push(new Unit(51042, -8252, "BlackBear", true, "arena3"));
                        if (Math.round(Math.random()))
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51001, -8140, "BlackBear", true, "arena3"));
                        }
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(51046, -8031, "BlackBear", false, "arena3"));
                        ArtificialIntelligenceAccess.push(new Unit(51042, -8252, "BlackBear", false, "arena3"));
                        ArtificialIntelligenceAccess.push(new Unit(51001, -8140, "BlackBear", false, "arena3"));
                        if (Math.round(Math.random()))
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51160, -7975, "BlackBear", false, "arena3"));
                            ArtificialIntelligenceAccess.push(new Unit(51166, -8301, "BlackBear", false, "arena3"));
                        }
                    }
                }
                else if (quests.pitFight == "skols")
                {
                    quests.pitFight = "none";
                    if (Math.round(Math.random()))
                    {
                        if (Math.round(Math.random()))
                        {
                            if (Math.round(Math.random()))
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51046, -8031, "Skol", true, "arena3"));
                            }
                            ArtificialIntelligenceAccess.push(new Unit(51042, -8252, "Skol", true, "arena3"));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51042, -8252, "Skol", false, "arena3"));
                            ArtificialIntelligenceAccess.push(new Unit(51046, -8031, "Skol", false, "arena3"));
                            if (Math.round(Math.random()))
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51001, -8140, "Skol", false, "arena3"));
                            }
                            else
                            {
                                if (Math.round(Math.random()))
                                {
                                    if (Math.round(Math.random()))
                                    {
                                        ArtificialIntelligenceAccess.push(new Unit(51160, -8000, "Skol", false, "arena3"));
                                        ArtificialIntelligenceAccess.push(new Unit(51166, -8276, "Skol", false, "arena3"));
                                    }
                                    else
                                    {
                                        ArtificialIntelligenceAccess.push(new Unit(51162, -8012, "Skol", false, "arena3"));
                                    }
                                }
                                else
                                {
                                    ArtificialIntelligenceAccess.push(new Unit(51160, -8000, "Skol", false, "arena3"));
                                    ArtificialIntelligenceAccess.push(new Unit(51166, -8276, "Skol", false, "arena3"));
                                    if (Math.round(Math.random()))
                                    {
                                        ArtificialIntelligenceAccess.push(new Unit(51162, -8012, "Skol", false, "arena3"));
                                    }
                                }
                            }
                        }
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(51042, -8252, "Skol", false, "arena3"));
                        ArtificialIntelligenceAccess.push(new Unit(51046, -8031, "Skol", false, "arena3"));
                        if (Math.round(Math.random()))
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51001, -8140, "Skol", false, "arena3"));
                        }
                    }
                }
                else if (quests.pitFight == "nogs")
                {
                    quests.pitFight = "none";
                    var rnd = Math.random();
                    if (rnd > 0.65)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(51047, -8014, "Nog", true, "arena3"));
                        ArtificialIntelligenceAccess.push(new Unit(51038, -8262, "Nog", false, "arena3"));
                        ArtificialIntelligenceAccess.push(new Unit(50969, -8097, "Nog", true, "arena3"));
                        ArtificialIntelligenceAccess.push(new Unit(51107, -8156, "Nog", false, "arena3"));
                        ArtificialIntelligenceAccess.push(new Unit(51173, -8076, "Nog", false, "arena3"));
                        if (Math.round(Math.random()))
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51155, -8247, "Nog", false, "arena3"));
                            ArtificialIntelligenceAccess.push(new Unit(51202, -8131, "Nog", true, "arena3"));
                        }
                    }
                    else if (rnd > 0.32)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(51047, -8014, "Nog", false, "arena3"));
                        ArtificialIntelligenceAccess.push(new Unit(51038, -8262, "Nog", true, "arena3"));
                        ArtificialIntelligenceAccess.push(new Unit(50969, -8097, "Nog", false, "arena3"));
                        ArtificialIntelligenceAccess.push(new Unit(51107, -8156, "Nog", true, "arena3"));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(51038, -8262, "Nog", false, "arena3"));
                        ArtificialIntelligenceAccess.push(new Unit(50969, -8097, "Nog", true, "arena3"));
                        ArtificialIntelligenceAccess.push(new Unit(51107, -8156, "Nog", false, "arena3"));
                    }
                }
                else if (quests.pitFight == "pitFighters")
                {
                    quests.pitFight = "none";
                    var rnd = Math.random();
                    if (rnd > 0.65)
                    {
                        if (Math.round(Math.random()))
                        {
                            var rnd = Math.random();
                            if (rnd > 0.7)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 9, speed: 1.34, outfit: ["blackBearLeatherArmour", 6], weapon: ["smashStick", [12, 11], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.4)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 10, speed: 1.4, outfit: ["skolLeatherArmour", 3], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.1)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 7, speed: 1.56, outfit: ["boulchomLeatherArmour", 2], weapon: ["thenganSword", [8, 5], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 5, speed: 0.74, outfit: ["thenganPlateArmour", 14], weapon: ["flail", [27, 8.5], 17, 47, 7], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                        }
                        else
                        {
                            var rnd = Math.random();
                            if (rnd > 0.7)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 16, speed: 1.2, outfit: ["blackBearLeatherArmour", 6], weapon: ["thenganSword", [10, 7], 0, 16, 1.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.4)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 14, speed: 1.52, outfit: ["skolLeatherArmour", 3], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.1)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 17, speed: 1, outfit: ["boulchomLeatherArmour", 2], weapon: ["smashStick", [13, 12], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 10, speed: 0.7, outfit: ["thenganPlateArmour", 15], weapon: ["smashStick", [13, 12], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                        }
                    }
                    else if (rnd > 0.32)
                    {
                        if (Math.round(Math.random()))
                        {
                            var rnd = Math.random();
                            if (rnd > 0.7)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 16, speed: 1.2, outfit: ["blackBearLeatherArmour", 6], weapon: ["thenganSword", [10, 7], 0, 16, 1.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.4)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 14, speed: 1.52, outfit: ["skolLeatherArmour", 3], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.1)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 17, speed: 1, outfit: ["boulchomLeatherArmour", 2], weapon: ["smashStick", [13, 12], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 10, speed: 0.7, outfit: ["thenganPlateArmour", 15], weapon: ["smashStick", [13, 12], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }

                            rnd = Math.random();
                            if (rnd > 0.7)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 9, speed: 1.34, outfit: ["blackBearLeatherArmour", 6], weapon: ["smashStick", [12, 11], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.4)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 10, speed: 1.4, outfit: ["skolLeatherArmour", 3], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.1)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 7, speed: 1.56, outfit: ["boulchomLeatherArmour", 2], weapon: ["thenganSword", [8, 5], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 5, speed: 0.74, outfit: ["thenganPlateArmour", 14], weapon: ["flail", [27, 8.5], 17, 47, 7], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                        }
                        else
                        {
                            var rnd = Math.random();
                            if (rnd > 0.7)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 11, speed: 1.38, outfit: ["blackBearLeatherArmour", 6], weapon: ["thenganWarhammer", [26, 16], 19, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.4)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 13, speed: 1.45, outfit: ["skolLeatherArmour", 3], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.1)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 8, speed: 1.55, outfit: ["boulchomLeatherArmour", 2], weapon: ["thenganSword", [8, 6], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 15, speed: 0.86, outfit: ["thenganPlateArmour", 15], weapon: ["smashStick", [12, 11], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }

                            rnd = Math.random();
                            if (rnd > 0.7)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(50949, -8128, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 13, speed: 1.35, outfit: ["blackBearLeatherArmour", 6], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.4)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(50949, -8128, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 12, speed: 1.3, outfit: ["skolLeatherArmour", 3], weapon: ["smashStick", [13, 12], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.1)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(50949, -8128, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 16, speed: 1.1, outfit: ["boulchomLeatherArmour", 2], weapon: ["thenganWarhammer", [20, 14], 16, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(50949, -8128, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 13, speed: 0.85, outfit: ["thenganPlateArmour", 18], weapon: ["thenganSword", [10, 7], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                        }
                    }
                    else
                    {
                        if (Math.round(Math.random()))
                        {
                            var rnd = Math.random();
                            if (rnd > 0.7)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 11, speed: 1.38, outfit: ["blackBearLeatherArmour", 6], weapon: ["thenganWarhammer", [26, 16], 19, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.4)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 13, speed: 1.45, outfit: ["skolLeatherArmour", 3], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.1)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 8, speed: 1.55, outfit: ["boulchomLeatherArmour", 2], weapon: ["thenganSword", [8, 6], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 15, speed: 0.86, outfit: ["thenganPlateArmour", 15], weapon: ["smashStick", [12, 11], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }

                            rnd = Math.random();
                            if (rnd > 0.7)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 15, speed: 1.2, outfit: ["blackBearLeatherArmour", 6], weapon: ["thenganSword", [10, 7], 0, 16, 1.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.4)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 10, speed: 1.52, outfit: ["skolLeatherArmour", 3], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.1)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 18, speed: 1, outfit: ["boulchomLeatherArmour", 2], weapon: ["smashStick", [13, 12], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 11, speed: 0.7, outfit: ["thenganPlateArmour", 16], weapon: ["smashStick", [13, 12], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }

                            rnd = Math.random();
                            if (rnd > 0.7)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 12, speed: 1.2, outfit: ["blackBearLeatherArmour", 6], weapon: ["longSpikedMorningStar", [15, 5], 14, 20, 2.3], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.4)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 15, speed: 1.52, outfit: ["skolLeatherArmour", 3], weapon: ["thenganWarhammer", [20, 14], 16, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.1)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 17, speed: 1.4, outfit: ["boulchomLeatherArmour", 2], weapon: ["thenganSword", [8, 6], 0, 16, 1.2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 9, speed: 0.69, outfit: ["thenganPlateArmour", 14], weapon: ["longSpikedMorningStar", [18, 7], 14, 20, 2.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                        }
                        else
                        {
                            var rnd = Math.random();
                            if (rnd > 0.7)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 15, speed: 1.38, outfit: ["blackBearLeatherArmour", 6], weapon: ["smashStick", [12, 11], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.4)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 14, speed: 1.45, outfit: ["skolLeatherArmour", 3], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.1)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 10, speed: 1.55, outfit: ["boulchomLeatherArmour", 2], weapon: ["thenganSword", [8, 6], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 19, speed: 0.65, outfit: ["thenganPlateArmour", 15], weapon: ["thenganWarhammer", [26, 16], 19, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }

                            rnd = Math.random();
                            if (rnd > 0.7)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 14, speed: 1.2, outfit: ["blackBearLeatherArmour", 6], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.4)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 11, speed: 1.52, outfit: ["skolLeatherArmour", 3], weapon: ["thenganSword", [10, 7], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.1)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 17, speed: 1, outfit: ["boulchomLeatherArmour", 2], weapon: ["thenganWarhammer", [20, 14], 16, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 12, speed: 0.7, outfit: ["thenganPlateArmour", 16], weapon: ["smashStick", [13, 12], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }

                            rnd = Math.random();
                            if (rnd > 0.7)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(50949, -8128, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 13, speed: 1.35, outfit: ["blackBearLeatherArmour", 6], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.4)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(50949, -8128, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 12, speed: 1.3, outfit: ["skolLeatherArmour", 3], weapon: ["smashStick", [13, 12], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.1)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(50949, -8128, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 16, speed: 1.1, outfit: ["boulchomLeatherArmour", 2], weapon: ["thenganWarhammer", [20, 14], 16, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(50949, -8128, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 13, speed: 0.85, outfit: ["thenganPlateArmour", 18], weapon: ["thenganSword", [10, 7], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                        }
                    }
                }
                else if (quests.pitFight == "prisoners")
                {
                    quests.pitFight = "none";
                    var rnd = Math.random();
                    if (rnd > 0.65)
                    {
                        if (Math.round(Math.random()))
                        {
                            rnd = Math.random();
                            if (rnd > 0.3333)
                            {
                                //kell soldier (prisoner)
                                ArtificialIntelligenceAccess.push(new Unit(51178, -8128, "Soldier", false, "War Prisoner", {race: "Kel", faction: "arena3", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.3, 0.35], 0, 0, 1.1], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else
                            {
                                //kell family
                                if (Math.round(Math.random()))
                                {
                                    if (Math.round(Math.random()))
                                    {
                                        ArtificialIntelligenceAccess.push(new Unit(51178, -8145, "Soldier", false, "Slave Man", {race: "Kel", faction: "arena3", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                        ArtificialIntelligenceAccess.push(new Unit(51101, -8198, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena3", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                        ArtificialIntelligenceAccess.push(new Unit(51056, -8124, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena3", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    }
                                    else
                                    {
                                        ArtificialIntelligenceAccess.push(new Unit(51048, -8191, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena3", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                        ArtificialIntelligenceAccess.push(new Unit(51077, -8171, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena3", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                        ArtificialIntelligenceAccess.push(new Unit(51079, -8218, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena3", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    }
                                }
                                else
                                {
                                    if (Math.round(Math.random()))
                                    {
                                        ArtificialIntelligenceAccess.push(new Unit(51048, -8146, "Soldier", false, "Slave Man", {race: "Kel", faction: "arena3", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                        ArtificialIntelligenceAccess.push(new Unit(51077, -8126, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena3", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                        ArtificialIntelligenceAccess.push(new Unit(51079, -8173, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena3", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    }
                                    else
                                    {
                                        ArtificialIntelligenceAccess.push(new Unit(51154, -8213, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena3", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                        ArtificialIntelligenceAccess.push(new Unit(51107, -8264, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena3", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                        ArtificialIntelligenceAccess.push(new Unit(51239, -8035, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena3", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                        ArtificialIntelligenceAccess.push(new Unit(51182, -8089, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena3", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    }
                                }
                            }
                        }
                        else
                        {
                            rnd = Math.random();
                            if (rnd > 0.3333)
                            {
                                //kell soldier (prisoner)
                                ArtificialIntelligenceAccess.push(new Unit(51178, -8128, "Soldier", false, "War Prisoner", {race: "Kel", faction: "arena3", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.3, 0.35], 0, 0, 1.1], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else
                            {
                                //kell family
                                if (Math.round(Math.random()))
                                {
                                    if (Math.round(Math.random()))
                                    {
                                        ArtificialIntelligenceAccess.push(new Unit(51178, -8145, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena3", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                        ArtificialIntelligenceAccess.push(new Unit(51101, -8198, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena3", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                        ArtificialIntelligenceAccess.push(new Unit(51056, -8124, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena3", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    }
                                    else
                                    {
                                        ArtificialIntelligenceAccess.push(new Unit(51048, -8191, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena3", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                        ArtificialIntelligenceAccess.push(new Unit(51077, -8171, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena3", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                        ArtificialIntelligenceAccess.push(new Unit(51079, -8218, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena3", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    }
                                }
                                else
                                {
                                    if (Math.round(Math.random()))
                                    {
                                        ArtificialIntelligenceAccess.push(new Unit(51048, -8146, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena3", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                        ArtificialIntelligenceAccess.push(new Unit(51077, -8126, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena3", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                        ArtificialIntelligenceAccess.push(new Unit(51079, -8173, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena3", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    }
                                    else
                                    {
                                        ArtificialIntelligenceAccess.push(new Unit(51154, -8213, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena3", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                        ArtificialIntelligenceAccess.push(new Unit(51107, -8264, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena3", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                        ArtificialIntelligenceAccess.push(new Unit(51239, -8035, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena3", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                        ArtificialIntelligenceAccess.push(new Unit(51182, -8089, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena3", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    }
                                }
                            }
                        }
                    }
                    else if (rnd > 0.32)
                    {
                        if (Math.round(Math.random()))
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51178, -8128, "Soldier", false, "War Prisoner", {race: "Kel", faction: "arena3", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.3, 0.35], 0, 0, 1.1], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51061, -8126, "Soldier", false, "Alzkwaya Tribal", {race: "Kel", faction: "arena3", con: 14, speed: 1.5, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [8, 4], 3, 12, 0.9], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                    }
                    else
                    {
                        if (Math.round(Math.random()))
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51061, -8126, "Soldier", false, "Echlin Tribal", {race: "Kel", faction: "arena3", con: 18, speed: 1.37, outfit: ["naapridLeatherArmour", 4], weapon: ["warHammer", [16, 1], 8, 16, 1.25], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            if (Math.round(Math.random()))
                            {
                                rnd = Math.random();
                                if (rnd > 0.65)
                                {
                                    ArtificialIntelligenceAccess.push(new Unit(51061, -8126, "Soldier", false, "Alzkwaya Tribal", {race: "Kel", faction: "arena3", con: 13, speed: 1.5, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [8, 4], 3, 12, 0.9], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(50987, -8126, "Soldier", false, "Alzkwaya Slave Man", {race: "Kel", faction: "arena3", con: 1, speed: 0, outfit: ["mofuTribalWear", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(50950, -8085, "Soldier", false, "Alzkwaya Slave Boy", {race: "Kel", faction: "arena3", con: 0.25, speed: 0, outfit: ["mofuTribalWear", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(50960, -8178, "Soldier", false, "Alzkwaya Slave Girl", {race: "Kel", faction: "arena3", con: 0.25, speed: 0, outfit: ["mofuTribalWear", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                }
                                else if (rnd > 0.32)
                                {
                                    if (Math.random() > 0.65)
                                    {
                                        ArtificialIntelligenceAccess.push(new Unit(51061, -8126, "Soldier", false, "Echlin Tribal", {race: "Kel", faction: "arena3", con: 17, speed: 1.37, outfit: ["naapridLeatherArmour", 4], weapon: ["warHammer", [16, 1], 8, 16, 1.25], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                        ArtificialIntelligenceAccess.push(new Unit(50987, -8126, "Soldier", false, "Echlin Slave Woman", {race: "Kel", faction: "arena3", con: 1, speed: 0, outfit: ["naapridLeatherArmour", 4], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                        ArtificialIntelligenceAccess.push(new Unit(50960, -8178, "Soldier", false, "Echlin Slave Boy", {race: "Kel", faction: "arena3", con: 0.25, speed: 0, outfit: ["naapridLeatherArmour", 1.5], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                        ArtificialIntelligenceAccess.push(new Unit(50950, -8085, "Soldier", false, "Echlin Slave Girl", {race: "Kel", faction: "arena3", con: 0.25, speed: 0, outfit: ["naapridLeatherArmour", 1.5], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    }
                                }
                                else
                                {
                                    ArtificialIntelligenceAccess.push(new Unit(51099, -8071, "Soldier", false, "Alzkwaya Slave Girl", {race: "Kel", faction: "arena3", con: 0.5, speed: 0.9, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [4, 0], 1, 4, 1], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51083, -8156, "Soldier", false, "Alzkwaya Slave Girl", {race: "Kel", faction: "arena3", con: 0.5, speed: 0.9, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [2, 1], 0.5, 4, 0.85], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(50992, -8109, "Soldier", false, "Echlin Slave Boy", {race: "Kel", faction: "arena3", con: 0.25, speed: 0.82, outfit: ["naapridLeatherArmour", 1.5], weapon: ["hammer", [1, 0.8], 0.35, 0, 0.9], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                }
                            }
                            else
                            {
                                rnd = Math.random();

                                if (rnd > 0.49)
                                {
                                    ArtificialIntelligenceAccess.push(new Unit(51079, -8019, "Soldier", false, "Alzkwaya Slave Girl", {race: "Kel", faction: "arena3", con: 0.5, speed: 0.95, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [4, 0.5], 1, 4, 1], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51008, -8134, "Soldier", false, "Alzkwaya Slave Girl", {race: "Kel", faction: "arena3", con: 0.25, speed: 0.85, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [3, 1], 0.5, 4, 0.85], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51130, -8114, "Soldier", false, "Echlin Slave Boy", {race: "Kel", faction: "arena3", con: 0.25, speed: 0.82, outfit: ["naapridLeatherArmour", 1.5], weapon: ["hammer", [1.5, 1], 0.25, 3, 0.9], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51059, -8298, "Soldier", false, "Echlin Slave Boy", {race: "Kel", faction: "arena3", con: 0.5, speed: 0.89, outfit: ["naapridLeatherArmour", 1.5], weapon: ["hammer", [1, 1.5], 0, 3, 0.9], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51154, -8192, "Soldier", false, "Echlin Slave Boy", {race: "Kel", faction: "arena3", con: 1, speed: 0.85, outfit: ["naapridLeatherArmour", 1.5], weapon: ["warHammer", [3.5, 2], 1, 3, 0.9], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                }
                                else
                                {
                                    ArtificialIntelligenceAccess.push(new Unit(51079, -8019, "Soldier", false, "Echlin Slave Boy", {race: "Kel", faction: "arena3", con: 0.5, speed: 0.89, outfit: ["naapridLeatherArmour", 1.5], weapon: ["hammer", [1, 1.5], 0, 3, 0.9], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51008, -8134, "Soldier", false, "Alzkwaya Slave Girl", {race: "Kel", faction: "arena3", con: 0.5, speed: 0.9, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [3, 1], 0.5, 4, 0.85], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51130, -8114, "Soldier", false, "Echlin Slave Boy", {race: "Kel", faction: "arena3", con: 1, speed: 0.85, outfit: ["naapridLeatherArmour", 1.5], weapon: ["warHammer", [3.5, 2], 1, 3, 0.9], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51059, -8298, "Soldier", false, "Alzkwaya Slave Girl", {race: "Kel", faction: "arena3", con: 0.75, speed: 1, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [3, 1.5], 0.5, 4, 0.85], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51154, -8192, "Soldier", false, "Alzkwaya Slave Girl", {race: "Kel", faction: "arena3", con: 1, speed: 1.1, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [3, 1.75], 1, 4, 0.85], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                }
                            }
                        }
                    }
                }

                //city guards
                ArtificialIntelligenceAccess.push(new Unit(51166, -7530, "Soldier", false, "Beulingerr Soldier", {race: "Thengar", faction: "Thengar", con: 5, speed: 1.15, outfit: ["chainArmour", 7], weapon: ["thenganSword", [8, 5], 0, 16, 1.3], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, patrolStops: 0, patrolLoop: true, route:[[-514, 277], [-514, 277]]}));
                ArtificialIntelligenceAccess.push(new Unit(51945, -8393, "Soldier", false, "Beulingerr Soldier", {race: "Thengar", faction: "Thengar", con: 8, speed: 1.34, outfit: ["chainArmour", 6.5], weapon: ["thenganSword", [12, 4], 0, 16, 1.45], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, patrolStops: 4, patrolLoop: true, route:[[51945, -10184], [50570, -10156], [50559, -8470], [51972, -8481]]}));
                ArtificialIntelligenceAccess.push(new Unit(51738, -9966, "Soldier", false, "Beulingerr Soldier", {race: "Thengar", faction: "Thengar", con: 6, speed: 1.27, outfit: ["chainArmour", 7.5], weapon: ["thenganSword", [6, 6], 0, 16, 1.25], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, patrolStops: 8, patrolLoop: true, route:[[51724, -9287], [51157, -9272], [51152, -9064], [51747, -9066], [51738, -8679], [50749, -8692], [50750, -9979], [51738, -9966]]}));
                ArtificialIntelligenceAccess.push(new Unit(52037, -7560, "Soldier", false, "Beulingerr Soldier", {race: "Thengar", faction: "Thengar", con: 7, speed: 1.38, outfit: ["chainArmour", 7], weapon: ["thenganSword", [10, 5], 0, 16, 1.4], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, patrolStops: 5, patrolLoop: true, route:[[53457, -7558], [53450, -7776], [50544, -7777], [50548, -6374], [53459, -6369]]}));
                ArtificialIntelligenceAccess.push(new Unit(53257, -6468, "Soldier", false, "Beulingerr Soldier", {race: "Thengar", faction: "Thengar", con: 9, speed: 1.21, outfit: ["chainArmour", 8], weapon: ["thenganSword", [9, 6], 0, 16, 1.3], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, patrolStops: 2, patrolLoop: true, route:[[53267, -7596], [53257, -6468]]}));
                //citizens
                //grain seller (only one on the map at once)
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Grain Farmer")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(53064, -7291, "Person", false, "Grain Farmer", {race: "Thengar", faction: "Thengar", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.3, 0.25], 0, 1, 1], ranged: [false, "arrow", 8, 2200, 5, 7, 0, "none", 2], patrolStops: 0, patrolLoop: true, route:[[2049, 1021], [1943, 1127], [1690, 1021]], merchant: true, merchandise: [[new Item("coins", false, false), 4], [new Item("harstGrain", false, false), 80]]}));
                }

                //Creatures
                ArtificialIntelligenceAccess.push(new Unit(48545, -4542, "Nog", false, "Chom-Chom"));
                ArtificialIntelligenceAccess.push(new Unit(48522, -5978, "Nog", false, "Cham-Chom"));
                ArtificialIntelligenceAccess.push(new Unit(48633, -6134, "Nog", false, "Chom-Cham"));
                ArtificialIntelligenceAccess.push(new Unit(48523, -7671, "Nog", true, "Cham-Cham"));
                ArtificialIntelligenceAccess.push(new Unit(49222, -8636, "Nog", false, "Chim-Chom"));
                ArtificialIntelligenceAccess.push(new Unit(48981, -8754, "Nog", false, "Chim-Cham"));
                ArtificialIntelligenceAccess.push(new Unit(47822, -9474, "Nog", false, "Chim-Chim"));
                ArtificialIntelligenceAccess.push(new Unit(48710, -9747, "Nog", false, "Cham-Chim"));
                ArtificialIntelligenceAccess.push(new Unit(49471, -9477, "Nog", false, "Chom-Chim"));
                ArtificialIntelligenceAccess.push(new Unit(48667, -10602, "Nog", false, "Chilm-Chom"));
                ArtificialIntelligenceAccess.push(new Unit(48479, -10688, "Nog", false, "Chom-Chalm"));
                ArtificialIntelligenceAccess.push(new Unit(48828, -10765, "Nog", true, "Cholm-Chilm"));
                ArtificialIntelligenceAccess.push(new Unit(49343, -10196, "Nog", false, "Cholm-Chim"));
                ArtificialIntelligenceAccess.push(new Unit(48547, -11796, "Nog", false, "Chilm-Chim"));
                ArtificialIntelligenceAccess.push(new Unit(48810, -11983, "Nog", true, "Chilm-Chorm"));
                ArtificialIntelligenceAccess.push(new Unit(48416, -13042, "Nog", false, "Chirm-Chim"));

                //buildings
                scenicList.push(new Scenery("thenganBuilding4", 50497, -10330, 0, true));
                scenicList.push(new Scenery("thenganBuilding1", 51258, -9800, 0, true));
                scenicList.push(new Scenery("thenganBuilding1", 51561, -9800, 0, true));
                scenicList.push(new Scenery("thenganBuilding3", 51052, -9548, 0, true));
                scenicList.push(new Scenery("thenganBuilding3", 51052, -9055, 0, true));
                scenicList.push(new Scenery("thenganBuilding2", 51561, -8874, 0, true));
                scenicList.push(new Scenery("thenganBuilding2", 51258, -8874, 0, true));
                scenicList.push(new Scenery("thenganBuilding5", 51561, -9506, 0, true));
                scenicList.push(new Scenery("thenganBuilding2", 51258, -9530, 0, true));
                scenicList.push(new Scenery("thenganBuilding3", 51486, -6942, 0, true));
                scenicList.push(new Scenery("thenganBuilding5", 51084, -6942, 0, true));
                scenicList.push(new Scenery("thenganBuilding2", 51238, -7205, 0, true));
                scenicList.push(new Scenery("thenganBuilding3", 51025, -7344, 0, true));
                scenicList.push(new Scenery("thenganBuilding1", 51234, -7398, 0, true));
                scenicList.push(new Scenery("thenganBuilding1", 51556, -7356, 0, true));
                scenicList.push(new Scenery("thenganBuilding1", 51858, -7356, 0, true));
                scenicList.push(new Scenery("thenganBuilding1", 52160, -7356, 0, true));
                scenicList.push(new Scenery("thenganBuilding1", 52462, -7356, 0, true));
                scenicList.push(new Scenery("thenganBuilding1", 52764, -7356, 0, true));
                scenicList.push(new Scenery("thenganBuilding5", 53066, -7282, 0, true));
                scenicList.push(new Scenery("thenganBuilding2", 51858, -7206, 0, true));
                scenicList.push(new Scenery("thenganBuilding2", 52160, -7206, 0, true));
                scenicList.push(new Scenery("thenganBuilding2", 52462, -7206, 0, true));
                scenicList.push(new Scenery("thenganBuilding2", 52764, -7206, 0, true));
                scenicList.push(new Scenery("thenganBuilding1", 51858, -6896, 0, true));
                scenicList.push(new Scenery("thenganBuilding1", 52160, -6896, 0, true));
                scenicList.push(new Scenery("thenganBuilding1", 52462, -6896, 0, true));
                scenicList.push(new Scenery("thenganBuilding1", 52764, -6896, 0, true));
                scenicList.push(new Scenery("thenganBuilding5", 53066, -6812, 0, true));
                scenicList.push(new Scenery("thenganBuilding2", 51858, -6746, 0, true));
                scenicList.push(new Scenery("thenganBuilding2", 52160, -6746, 0, true));
                scenicList.push(new Scenery("thenganBuilding2", 52462, -6746, 0, true));
                scenicList.push(new Scenery("thenganBuilding2", 52764, -6746, 0, true));
                scenicList.push(new Scenery("thenganBuilding1", 52793, -6224, 0, true));
                //the residential zone
                scenicList.push(new Scenery("bed", 52833, -7184, 0 * Math.PI, false));
                scenicList.push(new Scenery("bed", 52531, -7184, 0 * Math.PI, false));
                scenicList.push(new Scenery("bed", 52229, -7184, 0 * Math.PI, false));
                scenicList.push(new Scenery("bed", 51927, -7184, 0 * Math.PI, false));
                scenicList.push(new Scenery("bed", 52700, -7384, 0 * Math.PI, false));
                scenicList.push(new Scenery("bed", 52398, -7384, 0 * Math.PI, false));
                scenicList.push(new Scenery("bed", 52096, -7384, 0 * Math.PI, false));
                scenicList.push(new Scenery("bed", 51794, -7384, 0 * Math.PI, false));
                scenicList.push(new Scenery("bed", 51492, -7384, 0 * Math.PI, false));
                scenicList.push(new Scenery("thenganHearth", 51617, -7286, 0 * Math.PI, "lit"));
                scenicList.push(new Scenery("bed", 52833, -7184 + 460, 1 * Math.PI, false));
                scenicList.push(new Scenery("bed", 52531, -7184 + 460, 1 * Math.PI, false));
                scenicList.push(new Scenery("bed", 52229, -7184 + 460, 1 * Math.PI, false));
                scenicList.push(new Scenery("bed", 51927, -7184 + 460, 1 * Math.PI, false));
                scenicList.push(new Scenery("bed", 52700, -7384 + 460, 1 * Math.PI, false));
                scenicList.push(new Scenery("bed", 52398, -7384 + 460, 1 * Math.PI, false));
                scenicList.push(new Scenery("bed", 52096, -7384 + 460, 1 * Math.PI, false));
                scenicList.push(new Scenery("bed", 51794, -7384 + 460, 1 * Math.PI, false));
                //the inn
                scenicList.push(new Scenery("thenganHearth", 50281, -10331, 1/2 * Math.PI, "lit"));
                scenicList.push(new Scenery("bed", 50471, -10423, 0 * Math.PI, false));
                scenicList.push(new Scenery("bed", 50471, -10240, 1 * Math.PI, false));
                scenicList.push(new Scenery("bartop", 50563, -10381, 1 * Math.PI, false));
                //the well
                scenicList.push(new Scenery("thenganWell", 50927, -9830, 0, false));
                //the sand pit
                scenicList.push(new Scenery("thenganSandbox", 51254, -8126, 0, false));
                //blacksmithy
                scenicList.push(new Scenery("anvil", 51345, -9360, Math.PI * 5/8, true));
                scenicList.push(new Scenery("forge", 51178, -9377, Math.PI * 1/4, true));
                scenicList.push(new Scenery("countertop", 51179, -9536, 1/2 * Math.PI, false));
                scenicList.push(new Scenery("countertop", 51337, -9536, 1/2 * Math.PI, false));
                if (uniqueChars.dagmarLDS)
                {
                    scenicList.push(new Scenery("item", 51182, -9502, 0, "thengar", ["longSpikedMorningStar", 1, -100]));
                    scenicList.push(new Scenery("item", 51180, -9555, 0, "thengar", ["longsword", 1, -70]));
                    scenicList.push(new Scenery("item", 51334, -9496, 0, "thengar", ["thenganDagger", 1, -50]));
                    scenicList.push(new Scenery("item", 51334, -9563, 0, "thengar", ["smashStick", 1, -90]));
                }
                //butcher's shop
                scenicList.push(new Scenery("countertop", 51642, -9415, 1/2 * Math.PI, false));
                if (uniqueChars.gerlachLDS)
                {
                    scenicList.push(new Scenery("item", 51643, -9367, 0, "thengar", ["rawHoffalgreFlesh", 1, -15]));
                    scenicList.push(new Scenery("item", 51642, -9387, 0, "thengar", ["rawBearFlesh", 1, -15]));
                    scenicList.push(new Scenery("item", 51643, -9409, 0, "thengar", ["rawBearTongue", 1, -15]));
                    scenicList.push(new Scenery("item", 51644, -9453, 0, "thengar", ["rawBoulchomFlesh", 1, -10]));
                    scenicList.push(new Scenery("item", 51642, -9429, 0, "thengar", ["rawRabbitFlesh", 1, -10]));
                }
                //tailor shop
                scenicList.push(new Scenery("loom", 51324, -9747, 3/4 * Math.PI, true));
                scenicList.push(new Scenery("countertop", 51177, -9823, 1/2 * Math.PI, false));
                scenicList.push(new Scenery("countertop", 51205, -9823, 1/2 * Math.PI, false));
                scenicList.push(new Scenery("item", 51192, -9785, 0, "thengar", ["boulchomPelt", 1, -20]));
                scenicList.push(new Scenery("item", 51192, -9825, 0, "thengar", ["boulchomPelt", 1, -20]));
                scenicList.push(new Scenery("item", 51192, -9865, 0, "thengar", ["hoffalgrePelt", 1, -15]));
                //balgurMercsHQ
                scenicList.push(new Scenery("bed", 51449, -6847, 0 * Math.PI, false));
                scenicList.push(new Scenery("bed", 51449, -7038, 1 * Math.PI, false));
                scenicList.push(new Scenery("bed", 51315, -6847, 0 * Math.PI, false));
                scenicList.push(new Scenery("bed", 51315, -7038, 1 * Math.PI, false));
                scenicList.push(new Scenery("bed", 51149, -6847, 0 * Math.PI, false));
                scenicList.push(new Scenery("bed", 51149, -7038, 1 * Math.PI, false));
                scenicList.push(new Scenery("bed", 51022, -6847, 0 * Math.PI, false));
                scenicList.push(new Scenery("bed", 51022, -7038, 1 * Math.PI, false));
                scenicList.push(new Scenery("bed", 51304, -7173, 0 * Math.PI, false));
                scenicList.push(new Scenery("thenganHearth", 51240, -7276, Math.PI, "lit"));
                //playerPurchasableHome
                if (quests.lethikHomeOwned)
                {
                    scenicList.push(new Scenery("bed", 51329, -8839, 0 * Math.PI, true));
                    scenicList.push(new Scenery("thenganHearth", 51181, -8925, 1/2 * Math.PI, true));
                    scenicList.push(new Scenery("sign", 51186, -8775, Math.PI, 3, "Battlecry Cabin"));
                }
                else
                {
                    scenicList.push(new Scenery("bed", 51329, -8839, 0 * Math.PI, false));
                    scenicList.push(new Scenery("thenganHearth", 51181, -8925, 1/2 * Math.PI, false));
                    scenicList.push(new Scenery("sign", 51186, -8775, Math.PI, 3, "For Sale - 5500 coins"));
                }
                //barracks
                scenicList.push(new Scenery("bed", 51449 - 465, -6847 - 396, 0 * Math.PI, false));
                scenicList.push(new Scenery("bed", 51449 - 465, -7038 - 407, 1 * Math.PI, false));
                scenicList.push(new Scenery("bed", 51315 - 465, -6847 - 396, 0 * Math.PI, false));
                scenicList.push(new Scenery("bed", 51315 - 465, -7038 - 407, 1 * Math.PI, false));
                //apothecary
                scenicList.push(new Scenery("thenganHearth", 51564, -8943, 1 * Math.PI, "lit"));
                scenicList.push(new Scenery("lab", 51562, -8874, 0 * Math.PI, true));
                scenicList.push(new Scenery("countertop", 51642, -8897, -1/2 * Math.PI, false));
                if (uniqueChars.johannaLDS)
                {
                    scenicList.push(new Scenery("item", 51642, -8947, 0, "thengar", ["lizardTail", 1, -10]));
                    scenicList.push(new Scenery("item", 51642, -8921, 0, "thengar", ["steugiurneFlower", 1, -30]));
                    scenicList.push(new Scenery("item", 51640, -8892, 0, "thengar", ["thalisLeaf", 1, -15]));
                    scenicList.push(new Scenery("item", 51641, -8870, 0, "thengar", ["viperSnakeSkin", 1, -20]));
                    scenicList.push(new Scenery("item", 51643, -8850, 0, "thengar", ["kofkeLeaves", 1, -20]));
                }
                //city prison
                scenicList.push(new Scenery("trapdoor", 53014, -6700, 0 * Math.PI, [379, 424], "lethikCityPrison"));
                if (quests.rutgarSlave)
                {
                    quests.rutgarSlave = false;
                    var slavesSex = Math.round(Math.random());
                    if (slavesSex)
                    {
                        var slaveName = prompt("Your slave has been procured, but what is her name?", "Ailey");
                    }
                    else
                    {
                        var slaveName = prompt("Your slave has been procured, but what is his name?", "Connor");
                    }

                    if (typeof(slaveName) == "undefined" || slaveName == "")
                    {
                        if (slavesSex)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(53014, -6700, "Soldier", false, "Slave Woman", {race: "Kel", faction: "player", con: 1.25, speed: 1.15, outfit: ["none", 0], weapon: ["none", [0.3, 0.25], 0, 1, 1], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: 0, patrolStops: 0, patrolLoop: false, route:[], storage: true, storageCap: 1, merchant: true, merchandise: []}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(53014, -6700, "Soldier", false, "Slave Man", {race: "Kel", faction: "player", con: 3, speed: 1, outfit: ["none", 0], weapon: ["none", [0.3, 0.25], 0, 1, 1], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: 0, patrolStops: 0, patrolLoop: false, route:[], storage: true, storageCap: 1, merchant: true, merchandise: []}));
                        }


                    }
                    else
                    {
                        if (slavesSex)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(53014, -6700, "Soldier", false, slaveName + ", " + player.name + "'s Slave", {race: "Kel", faction: "player", con: 1.25, speed: 1.15, outfit: ["none", 0], weapon: ["none", [0.3, 0.25], 0, 1, 1], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: 0, patrolStops: 0, patrolLoop: false, route:[], storage: true, storageCap: 1, merchant: true, merchandise: []}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(53014, -6700, "Soldier", false, slaveName + ", " + player.name + "'s Slave", {race: "Kel", faction: "player", con: 3, speed: 1, outfit: ["none", 0], weapon: ["none", [0.3, 0.25], 0, 1, 1], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: 0, patrolStops: 0, patrolLoop: false, route:[], storage: true, storageCap: 1, merchant: true, merchandise: []}));
                        }
                    }

                }

                //bar patrons
                ArtificialIntelligenceAccess.push(new Unit(50603, -10342, "Person", false, "Thengar Villager", {race: "Thengar", faction: "Thengar", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.4, 0.45], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[50603, -10366]]}));
                ArtificialIntelligenceAccess.push(new Unit(50662, -10304, "Person", false, "Thengar Villager", {race: "Thengar", faction: "Thengar", personality: "calculated", outfit: ["hoffalgreFurCloak", 0], weapon: ["none", [0.45, 0.55], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[50682, -10303]]}));
                ArtificialIntelligenceAccess.push(new Unit(50664, -10342, "Person", false, "Thengar Villager", {race: "Thengar", faction: "Thengar", personality: "calculated", outfit: ["hoffalgreFurCloak", 0], weapon: ["none", [0.4, 0.5], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[50692, -10337]]}));

                //Lethik interiors
                //bank
                scenicList.push(new Scenery("woodenBench", 50953, -9114, 0 * Math.PI, 1));
                scenicList.push(new Scenery("stumpStoolSml", 50956, -9143, 0 * Math.PI, 1));
                scenicList.push(new Scenery("stumpStoolSml", 50954, -9086, 0 * Math.PI, 1));
                scenicList.push(new Scenery("crate", 50883, -9176, 2.626/4 * 2 * Math.PI, 1, [1.27]));
                scenicList.push(new Scenery("crate", 51013, -9174, 0.3/4 * 2 * Math.PI, 1, [1.39]));
                scenicList.push(new Scenery("crate", 51004, -9014, -0.55/4 * 2 * Math.PI, 1, [1.1]));
                scenicList.push(new Scenery("crate", 50969, -8942, 3/4 * 2 * Math.PI, 1, [1.22]));
                scenicList.push(new Scenery("crate", 50891, -8967, 3.7/4 * 2 * Math.PI, 1, [1]));
                //butcher's
                scenicList.push(new Scenery("crate", 51524, -9594, 0.25/4 * 2 * Math.PI, 1, [1.43]));
                scenicList.push(new Scenery("crate", 51618, -9602, -0.11/4 * 2 * Math.PI, 1, [1.29]));
                scenicList.push(new Scenery("crate", 51517, -9507, 3.56/4 * 2 * Math.PI, 1, [1.05]));
                scenicList.push(new Scenery("blood", 51541, -9411, 0 * Math.PI, 5, 1.2));
                //shop
                scenicList.push(new Scenery("crate", 50998, -9657, 0.35/4 * 2 * Math.PI, 1, [1.35]));
                scenicList.push(new Scenery("crate", 50891, -9672, 8.5/4 * 2 * Math.PI, 1, [1.25]));
                scenicList.push(new Scenery("crate", 50949, -9600, 3.97/4 * 2 * Math.PI, 1, [1.25]));
                scenicList.push(new Scenery("crate", 50989, -9449, -3.7777/4 * 2 * Math.PI, 1, [1.055]));
                scenicList.push(new Scenery("crate", 50901, -9434, 3.7675747/4 * 2 * Math.PI, 1, [1.4]));
                //huntShop
                scenicList.push(new Scenery("crate", 51515, -9757, 2.2/4 * 2 * Math.PI, 1, [1.2]));
                scenicList.push(new Scenery("mediumTable", 51482, -9855, 0 * Math.PI, 1));
                scenicList.push(new Scenery("item", 51490, -9864, 0, "thengar", ["spindletrap", 1, -39]));
                scenicList.push(new Scenery("item", 51482, -9835, 0, "thengar", ["beartrap", 1, -15]));
                scenicList.push(new Scenery("item", 51515, -9836, 0, "thengar", ["beartrap", 1, -15]));
                scenicList.push(new Scenery("item", 51520, -9850, 0, "thengar", ["jacks", 3, -11]));
                scenicList.push(new Scenery("item", 51520, -9871, 0, "thengar", ["clawtrap", 1, -21]));
                scenicList.push(new Scenery("woodenBench", 51640, -9770, 1/2 * Math.PI, 1));
                scenicList.push(new Scenery("item", 51640, -9738, 0, "thengar", ["longbow", 1, -26]));
                scenicList.push(new Scenery("item", 51636, -9773, 0, "thengar", ["steelArrow", 2, -12]));
                scenicList.push(new Scenery("item", 51636, -9782, 0, "thengar", ["steelArrow", 2, -12]));
                scenicList.push(new Scenery("item", 51636, -9791, 0, "thengar", ["steelArrow", 2, -12]));
                scenicList.push(new Scenery("item", 51636, -9800, 0, "thengar", ["steelArrow", 2, -12]));
                scenicList.push(new Scenery("item", 51636, -9809, 0, "thengar", ["steelArrow", 2, -12]));
                scenicList.push(new Scenery("item", 51636, -9814, 0, "thengar", ["arrow", 8, -13]));
                scenicList.push(new Scenery("item", 51636, -9822, 0, "thengar", ["arrow", 8, -13]));
                //prison
                scenicList.push(new Scenery("crate", 53135, -6936, 0.04/4 * 2 * Math.PI + Math.PI, 1, [1.5]));
                //farm house
                scenicList.push(new Scenery("crate", 53124, -7173, -0.09/4 * 2 * Math.PI, 1, [1.15]));
                scenicList.push(new Scenery("crate", 53026, -7194, 0.22/4 * 2 * Math.PI, 1, [1.425]));
                scenicList.push(new Scenery("bed", 52985, -7388, 0 * Math.PI, false));
                scenicList.push(new Scenery("smallTable", 53136, -7412, 0.045 * Math.PI, 0));
                scenicList.push(new Scenery("stumpStoolSml", 53097, -7415, 0.5 * Math.PI, 1));
                scenicList.push(new Scenery("thenganHearth", 52985, -7277, 1/2 * Math.PI, "lit"));
                //inn
                scenicList.push(new Scenery("woodenBench", 50718, -10330, 1/2 * Math.PI, 1));
                scenicList.push(new Scenery("crate", 50302, -10124, 1.5/4 * 2 * Math.PI, 1, [1.23]));
                scenicList.push(new Scenery("crate", 50290, -10550, 0.0025/4 * 2 * Math.PI, 1, [1.23]));
                scenicList.push(new Scenery("mediumTable", 50549, -10267, 0.0025 * Math.PI, 0));
                scenicList.push(new Scenery("stumpStoolSml", 50593, -10268, 2 * Math.PI, 1));
                scenicList.push(new Scenery("stumpStoolSml", 50522, -10262, 3 * Math.PI, 1));
                scenicList.push(new Scenery("stumpStoolSml", 50562, -10311, 3 * Math.PI, 1));
                scenicList.push(new Scenery("stumpStoolSml", 50687, -10365, -1 * Math.PI, 1));
                scenicList.push(new Scenery("stumpStoolSml", 50690, -10336, 1.5 * Math.PI, 1));
                scenicList.push(new Scenery("stumpStoolSml", 50688, -10302, 1 * Math.PI, 1));
                if (Math.round(Math.random()))
                {
                    scenicList.push(new Scenery("item", 50610, -10389, 0, "thengar", ["hoffalgreMeat", 1, -12]));
                    if (Math.round(Math.random()))
                    {
                        scenicList.push(new Scenery("item", 50591, -10394, 0, "thengar", ["harstAle", 1, -3]));
                    }
                    else
                    {
                        scenicList.push(new Scenery("item", 50591, -10394, 0, "thengar", ["pintGlass", 1, -1]));
                    }
                }
                else
                {
                    scenicList.push(new Scenery("item", 50610, -10389, 0, "thengar", ["velHarstBread", 1, -19]));
                    scenicList.push(new Scenery("item", 50591, -10394, 0, "thengar", ["harstAle", 1, -3]));
                    if (Math.round(Math.random()))
                    {
                        scenicList.push(new Scenery("item", 50591, -10394, 0, "thengar", ["harstAle", 1, -3]));
                    }
                    else
                    {
                        scenicList.push(new Scenery("item", 50591, -10394, 0, "thengar", ["pintGlass", 1, -1]));
                    }
                }

                if (Math.round(Math.random()))
                {
                    scenicList.push(new Scenery("item", 50711, -10329, 0, "thengar", ["harstAle", 1, -3]));
                }
                else
                {
                    scenicList.push(new Scenery("item", 50711, -10329, 0, "thengar", ["pintGlass", 1, -1]));
                }

                if (Math.round(Math.random()))
                {
                    scenicList.push(new Scenery("item", 50716, -10292, 0, "thengar", ["harstAle", 1, -3]));
                }
                else
                {
                    scenicList.push(new Scenery("item", 50716, -10292, 0, "thengar", ["pintGlass", 1, -1]));
                }

                //signs
                scenicList.push(new Scenery("sign", 50710, -10222, Math.PI, 3, "The Ragged Wanderer - Inn"));
                scenicList.push(new Scenery("sign", 51307, -9427, Math.PI, 3, "Bonecrusher Arms/Armour"));
                scenicList.push(new Scenery("sign", 51631, -9904, -0 * Math.PI, 3, "Bamey's Hunt Shop"));
                scenicList.push(new Scenery("sign", 51193, -9902, -0 * Math.PI, 3, "The Careful Stiches"));
                scenicList.push(new Scenery("sign", 51677, -9586, 1/2 * Math.PI, 3, "The Meatery"));
                scenicList.push(new Scenery("sign", 50834, -9593, -1/2 * Math.PI, 3, "Lethik General Store"));
                scenicList.push(new Scenery("sign", 50834, -8972, -1/2 * Math.PI, 3, "Lethik City Bank"));
                scenicList.push(new Scenery("sign", 51631, -8771, Math.PI, 3, "Sweet Leaf Apothecary"));
                scenicList.push(new Scenery("sign", 50805, -7419, -1/2 * Math.PI, 3, "Lethik City Barracks"));
                scenicList.push(new Scenery("sign", 51292, -7496, -0 * Math.PI, 3, "Lethik City Barracks"));
                scenicList.push(new Scenery("sign", 53180, -7371, 1/2 * Math.PI, 3, "Redbrick Farm - Produce Shop/Farm"));
                scenicList.push(new Scenery("sign", 53180, -6750, 1/2 * Math.PI, 3, "Lethik City Prison"));

                //leaping beasts
                ArtificialIntelligenceAccess.push(new Unit(51835, -4394, "Boulchom", true, "Chraular"));
                ArtificialIntelligenceAccess.push(new Unit(54848, -10379, "Boulchom", false, "Graw"));
                ArtificialIntelligenceAccess.push(new Unit(56007, -4941, "Boulchom", false, "Grew"));

                //fuzzy bunnies
                ArtificialIntelligenceAccess.push(new Unit(51199, -5791, "Conejo", true, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(49944, -6433, "Conejo", false, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(51472, -11115, "Conejo", true, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(52512, -10540, "Conejo", false, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(52555, -9697, "Conejo", false, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(52975, -8101, "Conejo", true, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(54535, -6473, "Conejo", true, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(54245, -5778, "Conejo", false, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(53112, -10408, "Conejo", false, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(52474, -11869, "Conejo", true, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(50198, -11730, "Conejo", false, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(56994, -9547, "Conejo", false, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(56103, -7759, "Conejo", true, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(57216, -7422, "Conejo", false, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(52782, -9167, "Conejo", false, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(51403, -13049, "Conejo", true, "neutral2"));

                //sun baskers basking in the sun
                ArtificialIntelligenceAccess.push(new Unit(53162, -12293, "Thueg", true, "Dillo"));
                ArtificialIntelligenceAccess.push(new Unit(52521, -12553, "Thueg", false, "Arma"));
                ArtificialIntelligenceAccess.push(new Unit(50330, -12849, "Thueg", true, "Dallo"));
                ArtificialIntelligenceAccess.push(new Unit(51547, -12505, "Thueg", "baby", "Dal"));
                ArtificialIntelligenceAccess.push(new Unit(52152, -13314, "Thueg", false, "Calma"));
                ArtificialIntelligenceAccess.push(new Unit(56617, -11499, "Thueg", false, "Gal"));
                ArtificialIntelligenceAccess.push(new Unit(56999, -12395, "Thueg", "baby", "Dol"));
                ArtificialIntelligenceAccess.push(new Unit(55838, -12139, "Thueg", "baby", "Dil"));
                ArtificialIntelligenceAccess.push(new Unit(56498, -6155, "Thueg", true, "Dollo"));
                ArtificialIntelligenceAccess.push(new Unit(56493, -5432, "Thueg", false, "Gallo"));
                ArtificialIntelligenceAccess.push(new Unit(49215, -5067, "Thueg", false, "Gillo"));

                //Plants
                //flora silvestre
                scenicList.push(new Scenery("vorlymPlant", 56069, -4971, 1.2, false));
                scenicList.push(new Scenery("galloshPlant", 54769, -6544, 6, false));
                scenicList.push(new Scenery("galloshPlant", 51798, -5305, 0, false));
                scenicList.push(new Scenery("vorlymPlant", 50130, -12600, -4.4, false));
                scenicList.push(new Scenery("galloshPlant", 56590, -12133, 3, false));
                scenicList.push(new Scenery("vorlymPlant", 55622, -10570, 2.81, false));
                scenicList.push(new Scenery("galloshPlant", 53651, -12192, 5.5, false));
                scenicList.push(new Scenery("galloshPlant", 51235, -11803, -2.6, false));
                //Farms
                //Cursed Farm
                if (uniqueChars.vsevolodLDS == false)
                {
                    scenicList.push(new Scenery("suuliPlant", 52958, -6076, 0, "thengar"));
                    scenicList.push(new Scenery("suuliPlant", 53028, -6076, -4, "thengar"));
                    scenicList.push(new Scenery("suuliPlant", 53114, -6076, 1, "thengar"));
                    scenicList.push(new Scenery("suuliPlant", 53214, -6076, 3.15, "thengar"));
                    scenicList.push(new Scenery("santhPlant", 53301, -6080, 1, "thengar"));
                    scenicList.push(new Scenery("santhPlant", 53342, -6080, 5, "thengar"));
                    scenicList.push(new Scenery("santhPlant", 53400, -6080, 2, "thengar"));
                    scenicList.push(new Scenery("santhPlant", 53462, -6080, 3, "thengar"));
                    scenicList.push(new Scenery("santhPlant", 53370, -6055, 0, "thengar"));
                    scenicList.push(new Scenery("santhPlant", 53432, -6053, 4, "thengar"));
                    scenicList.push(new Scenery("santhPlant", 53316, -6050, -3, "thengar"));
                    scenicList.push(new Scenery("santhPlant", 53478, -6050, -6, "thengar"));

                    //carrots row 1
                    scenicList.push(new Scenery("carrotPlant", 52936, -6158, -0.5, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 17, -6158, 4.5, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 34, -6158, 2.5, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 51, -6158, 5, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 68, -6158, 2, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 85, -6158, -2.5, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 102, -6158, 4, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 119, -6158, -3.25, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 136, -6158, 3, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 153, -6158, 1.5, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 170, -6158, -5, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 187, -6158, -2, "thengar"));
                    //carrots row 2
                    scenicList.push(new Scenery("carrotPlant", 52936, -6158 + 10, -4.3, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 17, -6158 + 20, 2.3, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 34, -6158 + 20, 2, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 51, -6158 + 20, 8, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 68, -6158 + 20, 6, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 85, -6158 + 20, -5, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 102, -6158 + 20, 3, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 119, -6158 + 20, -21, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 136, -6158 + 20, 6, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 153, -6158 + 20, 7.5, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 170, -6158 + 20, -2, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 187, -6158 + 20, -3, "thengar"));
                    //carrots row 3
                    scenicList.push(new Scenery("carrotPlant", 52936, -6158 - 20, -0.9, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 17, -6158 - 20, 4.4, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 34, -6158 - 20, 4.9, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 51, -6158 - 20, 1.3, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 68, -6158 - 20, 3.6, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 85, -6158 - 20, -12.2, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 102, -6158 - 20, 2.6, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 119, -6158 - 20, -2, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 136, -6158 - 20, 1, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 153, -6158 - 20, 6, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 170, -6158 - 20, -7, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 187, -6158 - 20, -4, "thengar"));

                    //carrots row 1
                    scenicList.push(new Scenery("carrotPlant", 52936, -6158 - 95, -0.5, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 17, -6158 - 95, 4.5, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 34, -6158 - 95, 2.5, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 51, -6158 - 95, 5, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 68, -6158 - 95, 2, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 85, -6158 - 95, -2.5, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 102, -6158 - 95, 4, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 119, -6158 - 95, -3.25, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 136, -6158 - 95, 3, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 153, -6158 - 95, 1.5, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 170, -6158 - 95, -5, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 187, -6158 - 95, -2, "thengar"));
                    //carrots row 2
                    scenicList.push(new Scenery("carrotPlant", 52936, -6158 - 75, -4.3, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 17, -6158 - 75, 2.3, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 34, -6158 - 75, 2, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 51, -6158 - 75, 8, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 68, -6158 - 75, 6, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 85, -6158 - 75, -5, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 102, -6158 - 75, 3, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 119, -6158 - 75, -21, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 136, -6158 - 75, 6, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 153, -6158 - 75, 7.5, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 170, -6158 - 75, -2, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 187, -6158 - 75, -3, "thengar"));
                    //carrots row 3
                    scenicList.push(new Scenery("carrotPlant", 52936, -6158 - 115, -0.9, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 17, -6158 - 115, 4.4, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 34, -6158 - 115, 4.9, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 51, -6158 - 115, 1.3, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 68, -6158 - 115, 3.6, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 85, -6158 - 115, -12.2, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 102, -6158 - 115, 2.6, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 119, -6158 - 115, -2, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 136, -6158 - 115, 1, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 153, -6158 - 115, 6, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 170, -6158 - 115, -7, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 187, -6158 - 115, -4, "thengar"));

                    scenicList.push(new Scenery("potatoPlant", 53220, -6287, -1.1, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 30, -6287, -5, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 60, -6287, 3.72, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 90, -6287, 1.8, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 120, -6287, 6.72, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 150, -6287, -5, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 180, -6287, 5, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 210, -6287, 1, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 240, -6287, -3, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 270, -6287, -9, "thengar"));

                    scenicList.push(new Scenery("potatoPlant", 53220, -6287 + 70, -4.1, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 30, -6287 + 70, -5, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 60, -6287 + 70, 7.62, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 90, -6287 + 70, 11, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 120, -6287 + 70, 32, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 150, -6287 + 70, -3, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 180, -6287 + 70, 4, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 210, -6287 + 70, 1, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 240, -6287 + 70, -7, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 270, -6287 + 70, -55, "thengar"));

                    scenicList.push(new Scenery("potatoPlant", 53220, -6287 + 140, -2, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 30, -6287 + 140, -3, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 60, -6287 + 140, 1.46, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 90, -6287 + 140, 7.9, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 120, -6287 + 140, -3.6, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 150, -6287 + 140, 4.75, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 180, -6287 + 140, -5, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 210, -6287 + 140, -1, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 240, -6287 + 140, 1.7, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 270, -6287 + 140, 4, "thengar"));
                }
                //redbrick farm
                //column 1
                scenicList.push(new Scenery("harstPlant", 53546 - 10, -7267, 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 - 10, -7267 - (44 * 1), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 - 10, -7267 - (44 * 2), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 - 10, -7267 - (44 * 3), 4, "thengar"));

                scenicList.push(new Scenery("harstPlant", 53546 - 10, -7267 - (44 * 5), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 - 10, -7267 - (44 * 6), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 - 10, -7267 - (44 * 7), 4, "thengar"));

                scenicList.push(new Scenery("harstPlant", 53546 - 10, -7267 - (44 * 9), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 - 10, -7267 - (44 * 10), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 - 10, -7267 - (44 * 11), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 - 10, -7267 - (44 * 12), 4, "thengar"));

                //column 2
                scenicList.push(new Scenery("harstPlant", 53546 + 70, -7267, 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 70, -7267 - (44 * 1), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 70, -7267 - (44 * 2), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 70, -7267 - (44 * 3), 4, "thengar"));

                scenicList.push(new Scenery("harstPlant", 53546 + 70, -7267 - (44 * 5), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 70, -7267 - (44 * 6), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 70, -7267 - (44 * 7), 4, "thengar"));

                scenicList.push(new Scenery("harstPlant", 53546 + 70, -7267 - (44 * 9), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 70, -7267 - (44 * 10), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 70, -7267 - (44 * 11), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 70, -7267 - (44 * 12), 4, "thengar"));

                //column 3
                scenicList.push(new Scenery("harstPlant", 53546 + 150, -7267, 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 150, -7267 - (44 * 1), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 150, -7267 - (44 * 2), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 150, -7267 - (44 * 3), 4, "thengar"));

                scenicList.push(new Scenery("harstPlant", 53546 + 150, -7267 - (44 * 5), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 150, -7267 - (44 * 6), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 150, -7267 - (44 * 7), 4, "thengar"));

                scenicList.push(new Scenery("harstPlant", 53546 + 150, -7267 - (44 * 9), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 150, -7267 - (44 * 10), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 150, -7267 - (44 * 11), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 150, -7267 - (44 * 12), 4, "thengar"));

                //column 4
                scenicList.push(new Scenery("harstPlant", 53546 + 230, -7267, 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 230, -7267 - (44 * 1), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 230, -7267 - (44 * 2), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 230, -7267 - (44 * 3), 4, "thengar"));

                scenicList.push(new Scenery("harstPlant", 53546 + 230, -7267 - (44 * 5), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 230, -7267 - (44 * 6), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 230, -7267 - (44 * 7), 4, "thengar"));

                scenicList.push(new Scenery("harstPlant", 53546 + 230, -7267 - (44 * 9), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 230, -7267 - (44 * 10), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 230, -7267 - (44 * 11), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 230, -7267 - (44 * 12), 4, "thengar"));
                //scenicList.push(new Scenery("haeflowerPlant", 15185, 4442, 4, true));

                change = "s1w5";
            }
        }
        else if (region == "s2w5")
        {
            if (change != "s2w5")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee || ArtificialIntelligenceAccess[i].team == "arena1" || ArtificialIntelligenceAccess[i].team == "arena2" || ArtificialIntelligenceAccess[i].team == "arena3")
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //characters
                //unique AND non-unique only by necessity
                if (quests.lethikHanzRestored == true)
                {
                    if (uniqueChars.hanzLDS == true)
                    {
                        var hits = 0;
                        for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                        {
                            if (ArtificialIntelligenceAccess[i].ID == "Master Hanz of Beulingerr")
                            {
                                hits += 1;
                            }
                        }
                        if (hits == 0)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51163.344108947895, -17434.104393046102, "Person", false, "Master Hanz of Beulingerr", {race: "Thengar", faction: "Thengar", personality: "calculated", outfit: ["boulchomLeatherArmour", 2.5], weapon: ["none", [0.03, 0.03], 0, 0, 1], ranged: [false, "arrow", 8, 2200, 5, 7, 0, "none", 2], patrolStops: 1, patrolLoop: false, route:[[51143.10528022211, -17415.811817174665]]}));
                            ArtificialIntelligenceAccess[i].health = 8;
                        }
                    }
                }

                if (uniqueChars.hanzChildLDS == true && quests.hanzChild == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "[ " + quests.hanzChildName + " ]")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(50958.387714003904, -17583.743554043962, "Person", false, "[ " + quests.hanzChildName + " ]", {race: player.raceName, faction: "Thengar", personality: "scared", outfit: ["boulchomLeatherArmour", 0.9], weapon: ["none", [0.25, 0.25], 0, 0, 1.3], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[50958.90713732814, -17571.478617217566]], kid: true}));
                        ArtificialIntelligenceAccess[i].health = 1.5;
                    }
                }



                if (player.gamemode == "protagonist")
                {
                    ArtificialIntelligenceAccess.push(new Unit(51179.95648489057, -18223.398333135712, "Soldier", false, "Birthday guest", {race: "Kel", faction: "loner", con: 1, speed: 1, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(51262.15123196404, -17857.65551897758, "Soldier", false, "Birthday guest", {race: "Kel", faction: "loner", con: 0.25, speed: 1, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(51296.28596957222, -17798.71270264655, "Soldier", false, "Birthday guest", {race: "Kel", faction: "loner", con: 1, speed: 1, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(51212.37513444989, -17820.42104102751, "Soldier", false, "Birthday guest", {race: "Kel", faction: "loner", con: 0.25, speed: 1, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));

                    ArtificialIntelligenceAccess.push(new Unit(50928.239379441264, -18129.686504034762, "Soldier", false, "Birthday guest", {race: "Kel", faction: "loner", con: 1, speed: 1, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(50682.9136336489, -18404.924325711105, "Soldier", false, "Birthday guest", {race: "Kel", faction: "loner", con: 1, speed: 1, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(50536.72400985568, -18272.239160849163, "Soldier", false, "Birthday Girl", {race: "Kel", faction: "loner", con: 0.25, speed: 1, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));

                    ArtificialIntelligenceAccess.push(new Unit(51183.08339986864, -18519.83257973238, "Soldier", false, "Birthday guest", {race: "Kel", faction: "loner", con: 1, speed: 1, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(50827.94524048814, -17594.569711000953, "Soldier", false, "Edgy Emo Goth Chick", {race: "Vardan", faction: "loner", con: 1, speed: 1, outfit: ["varnFurClothing", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 1, patrolLoop: false, route:[[50837.036948365894, -17584.39891653539]]}));
                    ArtificialIntelligenceAccess.push(new Unit(50886.11965600879, -18590.90056741665, "Soldier", false, "Birthday guest", {race: "Kel", faction: "loner", con: 1, speed: 1, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));

                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(51179.95648489057, -18223.398333135712, "Soldier", false, "Slave Man", {race: "Kel", faction: "loner", con: 1, speed: 1, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(51262.15123196404, -17857.65551897758, "Soldier", false, "Slave Boy", {race: "Kel", faction: "loner", con: 0.25, speed: 1, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(51296.28596957222, -17798.71270264655, "Soldier", false, "Slave Woman", {race: "Kel", faction: "loner", con: 1, speed: 1, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(51212.37513444989, -17820.42104102751, "Soldier", false, "Slave Girl", {race: "Kel", faction: "loner", con: 0.25, speed: 1, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));

                    ArtificialIntelligenceAccess.push(new Unit(50928.239379441264, -18129.686504034762, "Soldier", false, "Slave Man", {race: "Kel", faction: "loner", con: 1, speed: 1, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(50682.9136336489, -18404.924325711105, "Soldier", false, "Slave Woman", {race: "Kel", faction: "loner", con: 1, speed: 1, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(50536.72400985568, -18272.239160849163, "Soldier", false, "Slave Girl", {race: "Kel", faction: "loner", con: 0.25, speed: 1, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));

                    ArtificialIntelligenceAccess.push(new Unit(51183.08339986864, -18519.83257973238, "Soldier", false, "Slave Man", {race: "Kel", faction: "loner", con: 1, speed: 1, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(50827.94524048814, -17594.569711000953, "Soldier", false, "Ichlahomda", {race: "Kel", faction: "loner", con: 1, speed: 1, outfit: ["varnFurClothing", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 1, patrolLoop: false, route:[[50837.036948365894, -17584.39891653539]]}));
                    ArtificialIntelligenceAccess.push(new Unit(50886.11965600879, -18590.90056741665, "Soldier", false, "Slave Man", {race: "Kel", faction: "loner", con: 1, speed: 1, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                }

                //city guards
                ArtificialIntelligenceAccess.push(new Unit(51166, -7530, "Soldier", false, "Beulingerr Soldier", {race: "Thengar", faction: "Thengar", con: 5, speed: 1.15, outfit: ["chainArmour", 7], weapon: ["thenganSword", [8, 5], 0, 16, 1.3], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, patrolStops: 0, patrolLoop: true, route:[[-514, 277], [-514, 277]]}));
                ArtificialIntelligenceAccess.push(new Unit(51945, -8393, "Soldier", false, "Beulingerr Soldier", {race: "Thengar", faction: "Thengar", con: 8, speed: 1.34, outfit: ["chainArmour", 6.5], weapon: ["thenganSword", [12, 4], 0, 16, 1.45], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, patrolStops: 4, patrolLoop: true, route:[[51945, -10184], [50570, -10156], [50559, -8470], [51972, -8481]]}));

                //Creatures
                //ArtificialIntelligenceAccess.push(new Unit(48545, -4542, "Nog", false, "Chom-Chom"));

                //buildings
                scenicList.push(new Scenery("thenganBuilding4", 50952.21876496255 - 152, -17563.48775587589 + 50, 0, true));
                scenicList.push(new Scenery("thenganBuilding3", 51187.283320822404 + 70, -17436.4769991973 + 60, 0, true));
                scenicList.push(new Scenery("thenganBuilding1", 51254.08200296437, -17886.34715189713 + 40, 0, true));

                if (quests.lethikHanzMarried == true)
                {
                    scenicList.push(new Scenery("fineBed", 51205.574791729276 - 20, -17264.593596797826 - 15, -1/2 * Math.PI, true, 1));
                    scenicList.push(new Scenery("fineBed", 51205.574791729276 - 20, -17264.593596797826 - 50, -1/2 * Math.PI, true, 1));
                    scenicList.push(new Scenery("fineBed", 50611.087733934946 - 15, -17704.830075102782, Math.PI, true, 1));
                    scenicList.push(new Scenery("drawerB", 51221.682135427596 + 14, -17497.851459438843, 0, 3, [1.55, "hanzDrawer2", 6, [], false, 0]));
                    scenicList.push(new Scenery("drawerB", 51090.13433516202, -17240.438142506537, 1/2 * Math.PI, 3, [1.55, "hanzDrawer3", 6, [], false, 0]));
                    scenicList.push(new Scenery("drawerB", 50775.33144794008, -17601.40919267769, 0, 3, [1.55, "hanzDrawer4", 6, [], false, 0]));
                    scenicList.push(new Scenery("loom", 51095.27751626207, -17495.55820738738, 3/5 * Math.PI, true));
                    scenicList.push(new Scenery("loom", 50756.75606937152, -17719.83932159072, 1/5 * Math.PI, true));
                }
                else
                {
                    scenicList.push(new Scenery("fineBed", 51205.574791729276 - 20, -17264.593596797826 - 15, -1/2 * Math.PI, false, 1));
                    scenicList.push(new Scenery("fineBed", 51205.574791729276 - 20, -17264.593596797826 - 50, -1/2 * Math.PI, false, 1));
                    scenicList.push(new Scenery("fineBed", 50611.087733934946 - 15, -17704.830075102782, Math.PI, false, 1));
                    scenicList.push(new Scenery("drawerB", 51221.682135427596 + 14, -17497.851459438843, 0, 1, [1.55]));
                    scenicList.push(new Scenery("drawerB", 51090.13433516202, -17240.438142506537, 1/2 * Math.PI, 1, [1.55]));
                    scenicList.push(new Scenery("drawerB", 50775.33144794008, -17601.40919267769, 0, 1, [1.55]));
                    scenicList.push(new Scenery("loom", 51095.27751626207, -17495.55820738738, 3/5 * Math.PI, false));
                    scenicList.push(new Scenery("loom", 50756.75606937152, -17719.83932159072, 1/5 * Math.PI, false));
                }
                scenicList.push(new Scenery("bed", 50759.770203091015, -17316.670178454657, 0, false));

                scenicList.push(new Scenery("woodenBench", 50587.95342726742 - 4, -17402.801581791166 + 10, 1/2 * Math.PI, 1));
                scenicList.push(new Scenery("woodenBench", 50583.00082165551, -17341.983170983345 + 10, 1/2 * Math.PI, 1));
                scenicList.push(new Scenery("smallTable", 50602.31914070535 - 14, -17449.262631164158 - 5, Math.PI, 1));
                scenicList.push(new Scenery("smallTable", 50602.31914070535 + 21, -17449.262631164158 - 5, Math.PI, 1));

                scenicList.push(new Scenery("smallTable", 50826.009295263306 - 4, -17447.42517126783 + 4, Math.PI, 1));

                scenicList.push(new Scenery("smallTable", 51214.42275645069, -17387.921746165954, 1/2 * Math.PI, 1));
                scenicList.push(new Scenery("oilLamp", 51214.42275645069 + 4, -17387.921746165954 - 3, -2.9314159 * Math.PI, true, [1000, 2]));

                scenicList.push(new Scenery("woodenBench", 50684.075724590984, -17736.357169480583 - 6, Math.PI, 1));
                scenicList.push(new Scenery("oilLamp", 50753.25195874327 + 24.5, -17588.441650342385, -1.9224149 * Math.PI, true, [1000, 2]));

                //the well
                //scenicList.push(new Scenery("thenganWell", 50927, -9830, 0, false));

                //scenicList.push(new Scenery("countertop", 51642, -8897, -1/2 * Math.PI, false));

                //ArtificialIntelligenceAccess.push(new Unit(50603, -10342, "Person", false, "Thengar Villager", {race: "Thengar", faction: "Thengar", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.4, 0.45], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[50603, -10366]]}));

                scenicList.push(new Scenery("item", 50825.763414011824, -17443.516842105408 , 0, "thengar", ["berulnSkull", 1, -25]));
                //scenicList.push(new Scenery("smallTable", 53136, -7412, 0.045 * Math.PI, 0));
                scenicList.push(new Scenery("thenganHearth", 51020, -17516, -1/2 * Math.PI, "lit"));
                //scenicList.push(new Scenery("woodenBench", 50718, -10330, 1/2 * Math.PI, 1));
                //scenicList.push(new Scenery("crate", 50290, -10550, 0.0025/4 * 2 * Math.PI, 1, [1.23]));
                //scenicList.push(new Scenery("mediumTable", 50549, -10267, 0.0025 * Math.PI, 0));
                scenicList.push(new Scenery("stumpStoolSml", 51141.10873556455, -17489.869267960446, 1 * Math.PI, 1));
                scenicList.push(new Scenery("stumpStoolSml", 50716.97839531122, -17688.463224878804, 1 * Math.PI, 1));

                //signs
                scenicList.push(new Scenery("sign", 50849, -17395 - 10, Math.PI, 3, "Master Hanz's Estate"));

                ArtificialIntelligenceAccess.push(new Unit(51444.79595695257, -18312.584700259704, "Soldier", false, "Beulingerr Soldier", {race: "Thengar", faction: "Thengar", con: 6, speed: 1.3, outfit: ["chainArmour", 7.5], weapon: ["thenganSword", [10, 6], 0, 16, 1.4], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, patrolStops: 0, patrolLoop: false, route:[]}));
                ArtificialIntelligenceAccess.push(new Unit(51137.4213879315, -17173.24733532316, "Soldier", false, "Beulingerr Soldier", {race: "Thengar", faction: "Thengar", con: 6, speed: 1.3, outfit: ["chainArmour", 7.5], weapon: ["thenganSword", [10, 6], 0, 16, 1.4], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, patrolStops: 1, patrolLoop: false, route:[51135.672562431995, -17138.215643546486]}));
                ArtificialIntelligenceAccess.push(new Unit(50132.33554380641, -18142.16824571496, "Soldier", false, "Beulingerr Soldier", {race: "Thengar", faction: "Thengar", con: 6, speed: 1.3, outfit: ["chainArmour", 7.5], weapon: ["thenganSword", [10, 6], 0, 16, 1.4], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, patrolStops: 1, patrolLoop: false, route:[50177.646210515326, -18153.690313679974]}));

                //leaping beasts
                ArtificialIntelligenceAccess.push(new Unit(52851.07680661046, -15566.01196931189, "Boulchom", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(53278.086487407156, -17499.88159767438, "Boulchom", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(56595.329716381704, -18585.48310731894, "Boulchom", true, "preBuilt"));

                //fuzzy bunnies
                ArtificialIntelligenceAccess.push(new Unit(51410.193023157626, -16862.37073025137, "Conejo", true, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(49887.156387586314, -16521.722209539017, "Conejo", false, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(49363.94314032468, -17890.962711886725, "Conejo", true, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(50055.865135511296, -18309.583058584914, "Conejo", false, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(50141.67139029875, -19388.209010617527, "Conejo", true, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(49267.27562709055, -19494.73094191716, "Conejo", true, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(49891.67211969955, -20164.42442152324, "Conejo", false, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(48830.37491428079, -20577.80918343987, "Conejo", true, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(48636.6588910616, -21763.86150642056, "Conejo", false, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(50351.183785241294, -22068.29046314775, "Conejo", false, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(51083.77053004774, -21605.280485405015, "Conejo", true, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(52844.553889279916, -22681.06469454945, "Conejo", false, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(52990.58825982892, -21185.9384108894, "Conejo", false, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(54350.48697836207, -20232.374731606786, "Conejo", false, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(55104.471466954725, -19317.76647128289, "Conejo", false, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(52377.54922595536, -16068.648408738623, "Conejo", false, "neutral2"));

                //sun baskers basking in the sun
                ArtificialIntelligenceAccess.push(new Unit(52462.62308439578, -18232.215921082283, "Thueg", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(53325.428937786346, -18977.609628416467, "Thueg", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(54441.95119398309, -18367.105672354515, "Thueg", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(55073.529553833716, -17053.07877663746, "Thueg", "baby", "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(56418.97212674992, -15517.179163381208, "Thueg", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(55655.973299603196, -14272.92619933836, "Thueg", true, "preBuilt"));

                //Plants
                //flora silvestre
                scenicList.push(new Scenery("galloshPlant", 52594.311927833616, -16095.45791089152, 0.40865706236296423, 0));
                scenicList.push(new Scenery("galloshPlant", 52924.82245602937, -16368.683433004435, 4.879284342069474, 0));
                scenicList.push(new Scenery("vorlymPlant", 53250.67895190364, -16082.223602431684, 3.0195687599972754, 0));
                scenicList.push(new Scenery("vorlymPlant", 53841.311176593175, -16679.291464741185, 5.916832670755593, 0));
                scenicList.push(new Scenery("galloshPlant", 54693.85521929732, -16708.92025999494, 0.1928257613391401, 0));
                scenicList.push(new Scenery("vorlymPlant", 55315.394354826676, -16018.401740833466, 3.6900837040697043, 0));
                scenicList.push(new Scenery("vorlymPlant", 55897.544607335345, -15048.256867075146, 3.0914710261905434, 0));
                scenicList.push(new Scenery("vorlymPlant", 56963.148629800926, -16743.467931628966, 6.110993927482205, 0));
                scenicList.push(new Scenery("galloshPlant", 56667.4187742036, -18207.788170348467, 6.0532469921364065, 0));
                scenicList.push(new Scenery("vorlymPlant", 55726.956201221954, -19455.26421777284, 0.20435454266758837, 0));
                scenicList.push(new Scenery("galloshPlant", 54653.96174630907, -19858.964246574786, 6.178649333863466, 0));
                scenicList.push(new Scenery("vorlymPlant", 53693.18848509903, -19821.637604657022, 4.9377082820782086, 0));
                scenicList.push(new Scenery("vorlymPlant", 53559.038608363844, -19933.94365833898, 5.170216990489441, 0));
                scenicList.push(new Scenery("galloshPlant", 56378.75697063421, -21698.01477169757, 2.525861300509192, 0));
                scenicList.push(new Scenery("galloshPlant", 55617.72935225897, -22087.13866581917, 5.945667295570987, 0));
                scenicList.push(new Scenery("vorlymPlant", 55881.55762103505, -22568.169296230913, 2.407502238557517, 0));
                scenicList.push(new Scenery("galloshPlant", 56795.128521480605, -23347.11342796734, 3.987149936910246, 0));
                scenicList.push(new Scenery("vorlymPlant", 57287.18565373689, -23103.219622162884, 2.0292416736303, 0));
                scenicList.push(new Scenery("vorlymPlant", 54755.04152783804, -23157.276828448863, 3.321051185322233, 0));
                scenicList.push(new Scenery("galloshPlant", 53901.43048493201, -23207.220362330027, 4.971432774733972, 0));
                scenicList.push(new Scenery("vorlymPlant", 54322.093887172516, -22861.97406554746, 0.7803073439147524, 0));
                scenicList.push(new Scenery("galloshPlant", 53656.51968951969, -22427.616126730143, 1.4384924403337502, 0));
                scenicList.push(new Scenery("galloshPlant", 52315.24659948676, -22111.379019165404, 6.15596754007661, 0));
                scenicList.push(new Scenery("galloshPlant", 51213.62918818491, -22712.93476619524, 0.2990006925384412, 0));
                scenicList.push(new Scenery("vorlymPlant", 50242.980561749, -22994.056902780132, 1.9313666696530545, 0));
                scenicList.push(new Scenery("vorlymPlant", 49152.179556845054, -23555.09273107336, 3.785298016924506, 0));
                scenicList.push(new Scenery("galloshPlant", 49000.79903035162, -22202.986912249333, 0.883380227418619, 0));
                scenicList.push(new Scenery("vorlymPlant", 50592.4736585556, -21510.93937446758, 4.329176880336672, 0));
                scenicList.push(new Scenery("vorlymPlant", 50673.274875264666, -20363.513216679097, 5.656408116343633, 0));
                scenicList.push(new Scenery("galloshPlant", 49365.47846636224, -19959.681484833174, 2.1361871076312755, 0));
                scenicList.push(new Scenery("galloshPlant", 48379.130206031274, -18469.381109242215, 5.679972754242756, 0));
                scenicList.push(new Scenery("galloshPlant", 49248.275586033145, -17655.843400343638, 2.9798433624124785, 0));
                scenicList.push(new Scenery("vorlymPlant", 49246.91833351866, -15482.342150053777, 5.111930000773011, 0));
                scenicList.push(new Scenery("vorlymPlant", 49246.91833351866, -15482.342150053777, 3.0688266992169537, 0));

                for (var i = 0; i < 15; i++)
                {
                    scenicList.push(new Scenery("suuliPlant", 51345.94450614859 - 76 * i, -18078.099390228628, 0, "thengar"));
                }

                for (var j = 0; j < 3; j++)
                {
                    for (var i = 0; i < 20; i++)
                    {
                        scenicList.push(new Scenery("carrotPlant", 51339.77742181595 - 55 * i, -18166.314516782444 - 60 * j, 0, "thengar"));
                    }
                }

                for (var j = 0; j < 3; j++)
                {
                    for (var i = 0; i < 20; i++)
                    {
                        scenicList.push(new Scenery("potatoPlant", 51341.86132441727 - 55 * i, -18355.081177264317 - 60 * j, 0, "thengar"));
                    }
                }

                for (var j = 0; j < 2; j++)
                {
                    for (var i = 0; i < 24; i++)
                    {
                        scenicList.push(new Scenery("harstPlant", 51344.93221059554 - 46 * i, -18528.418025060386 - 60 * j, 0, "thengar"));
                    }
                }

                change = "s2w5";
            }
        }
        else if (region == "w5")
        {
            if (change != "w5")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION

                //Creatures
                ArtificialIntelligenceAccess.push(new Unit(49791, -2099, "Boulchom", false, "Boork"));
                ArtificialIntelligenceAccess.push(new Unit(56357, -2218, "Thueg", false, "Spindles"));
                ArtificialIntelligenceAccess.push(new Unit(57089, -2223, "Thueg", "baby", "Spindlez"));
                ArtificialIntelligenceAccess.push(new Unit(56780, -2980, "Conejo", true, "boo"));
                ArtificialIntelligenceAccess.push(new Unit(54703, -2152, "Conejo", false, "book"));
                ArtificialIntelligenceAccess.push(new Unit(49347, -3077, "Boulchom", false, "Balg"));
                ArtificialIntelligenceAccess.push(new Unit(48738, -2165, "Thueg", false, "Spindles"));
                ArtificialIntelligenceAccess.push(new Unit(49756, -2106, "Conejo", false, "booky"));

                //Worms (not ripped off from Dune whatsoever)
                ArtificialIntelligenceAccess.push(new Unit(48678, -1004, "Lombris", false, "Dune"));
                ArtificialIntelligenceAccess.push(new Unit(49865, -661, "Lombris", false, "Duna"));
                ArtificialIntelligenceAccess.push(new Unit(50518, -1460, "Lombris", false, "Lom"));
                ArtificialIntelligenceAccess.push(new Unit(51522, -732, "Lombris", false, "Bris"));
                ArtificialIntelligenceAccess.push(new Unit(54476, -387, "Lombris", true, "Brys"));
                ArtificialIntelligenceAccess.push(new Unit(56400, -485, "Lombris", false, "Lomol"));
                ArtificialIntelligenceAccess.push(new Unit(56904, 1205, "Lombris", true, "Brysol"));
                ArtificialIntelligenceAccess.push(new Unit(54758, 1943, "Lombris", false, "Draln"));
                ArtificialIntelligenceAccess.push(new Unit(52311, 1550, "Lombris", false, "Driln"));
                ArtificialIntelligenceAccess.push(new Unit(48867, 2248, "Lombris", false, "Dreln"));
                ArtificialIntelligenceAccess.push(new Unit(51315, 1394, "Lombris", false, "Druln"));
                ArtificialIntelligenceAccess.push(new Unit(49674, 3448, "Lombris", true, "Dryln"));
                ArtificialIntelligenceAccess.push(new Unit(48833, 5885, "Lombris", true, "Dreuln"));
                ArtificialIntelligenceAccess.push(new Unit(52760, 5462, "Lombris", true, "Draaln"));
                ArtificialIntelligenceAccess.push(new Unit(52929, -597, "Lombris", false, "Drooln"));
                ArtificialIntelligenceAccess.push(new Unit(51847, 4531, "Lombris", true, "Drouln"));
                ArtificialIntelligenceAccess.push(new Unit(54483, 3935, "Lombris", false, "Dreiln"));
                ArtificialIntelligenceAccess.push(new Unit(56540, 2269, "Lombris", true, "Droaln"));
                ArtificialIntelligenceAccess.push(new Unit(57427, 5350, "Lombris", false, "Drieln"));
                ArtificialIntelligenceAccess.push(new Unit(53909, 5323, "Lombris", false, "Drioln"));
                ArtificialIntelligenceAccess.push(new Unit(50610, 9, "Lombris", false, "Dryiln"));
                ArtificialIntelligenceAccess.push(new Unit(52654, 2604, "Lombris", true, "Drueln"));
                ArtificialIntelligenceAccess.push(new Unit(55717, 4334, "Lombris", true, "Druyln"));
                ArtificialIntelligenceAccess.push(new Unit(49396, 899, "Lombris", true, "Drualn"));
                ArtificialIntelligenceAccess.push(new Unit(57382, 3259, "Lombris", false, "Drieln"));
                //Mud Beetles
                ArtificialIntelligenceAccess.push(new Unit(54541, 192, "MudBeetle", true, "Brufe"));
                ArtificialIntelligenceAccess.push(new Unit(50024, 1055, "MudBeetle", true, "Brufe"));
                ArtificialIntelligenceAccess.push(new Unit(52521, 4689, "MudBeetle", true, "Brufe"));
                ArtificialIntelligenceAccess.push(new Unit(54120, 3408, "MudBeetle", true, "Brufe"));
                ArtificialIntelligenceAccess.push(new Unit(55264, 2258, "MudBeetle", true, "Brufe"));
                ArtificialIntelligenceAccess.push(new Unit(52169, 27, "MudBeetle", true, "Brufe"));
                ArtificialIntelligenceAccess.push(new Unit(51113, -1230, "MudBeetle", true, "Brufe"));
                ArtificialIntelligenceAccess.push(new Unit(48970, -11, "MudBeetle", true, "Brufe"));
                ArtificialIntelligenceAccess.push(new Unit(51652, 3171, "MudBeetle", true, "Brufe"));
                ArtificialIntelligenceAccess.push(new Unit(56369, 944, "MudBeetle", true, "Brufe"));
                ArtificialIntelligenceAccess.push(new Unit(53413, 71, "MudBeetle", true, "Brufe"));


                //Plants
                scenicList.push(new Scenery("vorlymPlant", 50983, -2297, 1.5, false));
                scenicList.push(new Scenery("galloshPlant", 56610, -2539, -4, false));
                scenicList.push(new Scenery("galloshPlant", 49607, -2238, -2, false));

                change = "w5";
            }
        }
        else if (region == "s1w6") //Visig Forest
        {
            if (change != "s1w6")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION

                //Creatures

                //plains
                if (change == "s1w5")
                {
                    ArtificialIntelligenceAccess.push(new Unit(58903, -11142, "Boulchom", true, "Borke"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(58903, -11142, "Boulchom", false, "Borke"));
                }
                ArtificialIntelligenceAccess.push(new Unit(58559, -12675, "Boulchom", false, "Borkuh"));
                ArtificialIntelligenceAccess.push(new Unit(58786, -4115, "Thueg", true, "Spinele"));
                ArtificialIntelligenceAccess.push(new Unit(59074, -4404, "Thueg", "baby", "Espind"));
                ArtificialIntelligenceAccess.push(new Unit(58302, -4371, "Thueg", false, "Spinedler"));
                ArtificialIntelligenceAccess.push(new Unit(58900, -13337, "Thueg", false, "Spinedlar"));
                ArtificialIntelligenceAccess.push(new Unit(58720, -5452, "Conejo", true, "Boka"));
                ArtificialIntelligenceAccess.push(new Unit(59171, -6370, "Conejo", false, "Boke"));
                ArtificialIntelligenceAccess.push(new Unit(58296, -7143, "Conejo", true, "Boko"));
                ArtificialIntelligenceAccess.push(new Unit(59347, -8061, "Conejo", false, "Boki"));

                //bears
                if (change != "s2w6") //if the player comes into the map from any direction other than the south.
                {
                    ArtificialIntelligenceAccess.push(new Unit(62507, -13387, "BlackBear", true, "Jude"));
                    ArtificialIntelligenceAccess.push(new Unit(64266, -13056, "BlackBear", false, "Judy"));
                    ArtificialIntelligenceAccess.push(new Unit(63375, -5468, "BlackBear", true, "Juda"));
                }
                ArtificialIntelligenceAccess.push(new Unit(66639, -5687, "BlackBear", false, "Judis"));

                //skols
                if (change != "s1w7") //if the player comes into the map from any direction other than the West.
                {
                    ArtificialIntelligenceAccess.push(new Unit(68000, -12516, "Skol", false, "Jane"));
                    ArtificialIntelligenceAccess.push(new Unit(67703, -12273, "Skol", true, "John"));
                }

                ArtificialIntelligenceAccess.push(new Unit(66760, -12016, "Skol", false, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(60743, -6730, "Skol", false, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(61410, -6051, "Skol", false, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(62161, -5413, "Skol", false, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(60671, -5870, "Skol", false, "Joana"));
                ArtificialIntelligenceAccess.push(new Unit(60579, -5241, "Skol", true, "Joey"));
                ArtificialIntelligenceAccess.push(new Unit(61816, -4725, "Skol", false, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(62187, -4415, "Skol", false, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(59966, -13347, "Skol", false, "Joe"));

                //scamper or buzz
                ArtificialIntelligenceAccess.push(new Unit(64720, -8143, "Lizard", true, "Lizol"));
                ArtificialIntelligenceAccess.push(new Unit(60758, -11715, "Lizard", false, "Lizelit"));
                ArtificialIntelligenceAccess.push(new Unit(59936, -9982, "Lizard", false, "Lizelit"));
                ArtificialIntelligenceAccess.push(new Unit(60687, -10171, "Lizard", true, "Lazaro"));
                ArtificialIntelligenceAccess.push(new Unit(60108, -12414, "Fletter", true, "Floz"));
                ArtificialIntelligenceAccess.push(new Unit(62028, -9727, "Fletter", true, "Fliz"));
                ArtificialIntelligenceAccess.push(new Unit(61254, -9727, "Fletter", false, "Flaz"));
                ArtificialIntelligenceAccess.push(new Unit(65747, -13070, "Fletter", false, "Fluz"));
                ArtificialIntelligenceAccess.push(new Unit(67176, -13386, "Lizard", false, "Lizaq"));
                ArtificialIntelligenceAccess.push(new Unit(62515, -10555, "Lizard", false, "Lizelith"));
                ArtificialIntelligenceAccess.push(new Unit(64379, -17435, "Fletter", false, "Flooz"));
                ArtificialIntelligenceAccess.push(new Unit(61672, -17692, "Fletter", false, "Flilz"));
                ArtificialIntelligenceAccess.push(new Unit(62041, -5599, "Lizard", true, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(66430, -4469, "Lizard", false, "Lizelim"));
                ArtificialIntelligenceAccess.push(new Unit(66642, -3981, "Fletter", true, "Flip"));
                ArtificialIntelligenceAccess.push(new Unit(65654, -4186, "Lizard", true, "lizaker"));
                ArtificialIntelligenceAccess.push(new Unit(65521, -4248, "Lizard", false, "Lizelinc"));

                //random
                var rnd = Math.random();

                if (rnd > 0.45)
                {
                    ArtificialIntelligenceAccess.push(new Unit(61382, -11143, "Lizard", false, "Liza"));
                    ArtificialIntelligenceAccess.push(new Unit(66985, -6172, "Skol", true, "Johanan"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(61382, -11143, "BlackBear", false, "Juhv"));
                    ArtificialIntelligenceAccess.push(new Unit(66985, -6172, "BlackBear", false, "Juhvuh"));
                }

                rnd = Math.random();

                if (rnd > 0.9)
                {
                    ArtificialIntelligenceAccess.push(new Unit(60198, -13161, "Skol", true, "Joey"));
                    ArtificialIntelligenceAccess.push(new Unit(60231, -13360, "Skol", false, "Joe"));
                }
                else if (rnd > 0.7)
                {
                    ArtificialIntelligenceAccess.push(new Unit(60198, -13161, "Skol", false, "Joe"));
                    ArtificialIntelligenceAccess.push(new Unit(60231, -13360, "Skol", false, "Joe"));
                }
                else if (rnd > 0.6)
                {
                    ArtificialIntelligenceAccess.push(new Unit(60198, -13161, "Skol", false, "Joe"));
                    ArtificialIntelligenceAccess.push(new Unit(60231, -13360, "Skol", false, "Joe"));
                    ArtificialIntelligenceAccess.push(new Unit(59851, -13442, "Skol", false, "Joe"));
                    ArtificialIntelligenceAccess.push(new Unit(60267, -12705, "Skol", false, "Joe"));
                    ArtificialIntelligenceAccess.push(new Unit(60539, -13118, "Skol", false, "Joe"));
                }

                rnd = Math.random();

                if (rnd > 0.33)
                {
                    ArtificialIntelligenceAccess.push(new Unit(7593, -13477, "Lizard", true, "Lizathera"));
                    ArtificialIntelligenceAccess.push(new Unit(66417, -13665, "Lizard", false, "Lizatherine"));
                }
                else
                {
                    if (change != "s2w6") //if the player comes into the map from any direction other than the south.
                    {
                        ArtificialIntelligenceAccess.push(new Unit(7593, -13477, "Skol", false, "Joe"));
                        ArtificialIntelligenceAccess.push(new Unit(66417, -13665, "Skol", false, "Joe"));
                    }
                }

                rnd = Math.random();

                if (rnd > 0.51)
                {
                    if (change != "w6") //if the player comes into the map from any direction other than the south.
                    {
                        ArtificialIntelligenceAccess.push(new Unit(60173, -4454, "Skol", false, "Joe"));
                        ArtificialIntelligenceAccess.push(new Unit(60398, -3769, "Skol", false, "Joe"));
                        ArtificialIntelligenceAccess.push(new Unit(60742, -4194, "Skol", false, "Joe"));
                    }
                }

                rnd = Math.random();

                if (rnd > 0.4)
                {
                    ArtificialIntelligenceAccess.push(new Unit(63884, -10679, "Lizard", true, "Lizather"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(63884, -10679, "BlackBear", false, "Juve"));
                }

                rnd = Math.random();

                if (rnd > 0.35)
                {
                    ArtificialIntelligenceAccess.push(new Unit(63343, -12367, "Lizard", true, "Lizeltor"));
                }
                else if (rnd > 0.25)
                {
                    ArtificialIntelligenceAccess.push(new Unit(63343, -12367, "Skol", true, "Jolina"));
                }
                else if (rnd > 0.15)
                {
                    ArtificialIntelligenceAccess.push(new Unit(63343, -12367, "BlackBear", true, "Juvjuv"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(63343, -12367, "BlackBear", false, "Juventud"));
                }

                rnd = Math.random();

                if (rnd > 0.84)
                {
                    ArtificialIntelligenceAccess.push(new Unit(63787, -11429, "Skol", false, "Jole"));
                    ArtificialIntelligenceAccess.push(new Unit(64029, -12234, "Skol", false, "Jome"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(63787, -11429, "Lizard", false, "Lizeilia"));
                }

                rnd = Math.random();

                if (rnd > 0.50)
                {
                    ArtificialIntelligenceAccess.push(new Unit(66704, -7915, "Skol", false, "Joel"));
                    ArtificialIntelligenceAccess.push(new Unit(67043, -9071, "Skol", false, "Joem"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(66351, -7422, "Hoffalgre", true, "Humfrez"));
                    ArtificialIntelligenceAccess.push(new Unit(65857, -7533, "Hoffalgre", true, "Herbertaz"));
                }

                rnd = Math.random();

                if (rnd > 0.50)
                {
                    ArtificialIntelligenceAccess.push(new Unit(63956, -4871, "Skol", true, "Jolac"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(63956, -4871, "Hoffalgre", true, "Humfar"));
                    ArtificialIntelligenceAccess.push(new Unit(63692, -4440, "Hoffalgre", true, "Hirbel"));
                }

                rnd = Math.random();

                if (rnd > 0.30)
                {
                    ArtificialIntelligenceAccess.push(new Unit(63474, -8177, "Skol", false, "Joela"));
                    ArtificialIntelligenceAccess.push(new Unit(63223, -8591, "Skol", false, "Joema"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(63474, -8177, "Hoffalgre", false, "Herber"));
                    ArtificialIntelligenceAccess.push(new Unit(63223, -8591, "Lizard", true, "Lizo"));
                }

                rnd = Math.random();

                if (rnd > 0.40)
                {
                    ArtificialIntelligenceAccess.push(new Unit(63908, -7556, "Skol", false, "Joele"));
                }
                else
                {

                    ArtificialIntelligenceAccess.push(new Unit(63908, -7556, "Lizard", false, "Lizom"));
                }

                rnd = Math.random();

                if (rnd > 0.45)
                {
                    scenicList.push(new Scenery("callopPlant", 60515, -5461, -10, false));
                }
                else
                {

                    scenicList.push(new Scenery("darbPlant", 60515, -5461, -10, false));
                }

                rnd = Math.random();

                if (rnd > 0.14)
                {
                    ArtificialIntelligenceAccess.push(new Unit(61076, -10412, "Lizard", false, "Liza"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(61076, -10412, "BlackBear", true, "Juvorh"));
                }

                //etnas
                ArtificialIntelligenceAccess.push(new Unit(65777, -12188, "Etna", true, "Shelob"));
                ArtificialIntelligenceAccess.push(new Unit(65939, -12363, "Etna", false, "Shembil"));
                ArtificialIntelligenceAccess.push(new Unit(65780, -12509, "Etna", false, "Shaltherg"));
                ArtificialIntelligenceAccess.push(new Unit(65795, -12679, "Etna", false, "Shilb"));
                ArtificialIntelligenceAccess.push(new Unit(65413, -12170, "Etna", false, "Shalib"));
                ArtificialIntelligenceAccess.push(new Unit(65593, -12565, "Etna", false, "Elnorsh"));
                ArtificialIntelligenceAccess.push(new Unit(63366, -6487, "Etna", false, "Aldernesh"));
                ArtificialIntelligenceAccess.push(new Unit(63348, -6402, "Etna", false, "Galshohma"));
                ArtificialIntelligenceAccess.push(new Unit(65457, -4859, "Etna", true, "Wollosh"));
                ArtificialIntelligenceAccess.push(new Unit(65285, -8023, "Etna", false, "Shulib"));
                ArtificialIntelligenceAccess.push(new Unit(65279, -7888, "Etna", false, "Alnarsh"));
                ArtificialIntelligenceAccess.push(new Unit(65303, -7800, "Etna", false, "Elinesh"));
                ArtificialIntelligenceAccess.push(new Unit(65430, -7621, "Etna", false, "Gasholb"));

                //tentacle oodlers
                ArtificialIntelligenceAccess.push(new Unit(61829, -8965, "Hoffalgre", true, "Humfrey"));
                ArtificialIntelligenceAccess.push(new Unit(61285, -9105, "Hoffalgre", true, "Herberta"));
                ArtificialIntelligenceAccess.push(new Unit(61495, -9601, "Hoffalgre", true, "Halber"));
                ArtificialIntelligenceAccess.push(new Unit(60759, -13451, "Hoffalgre", false, "Halbara"));
                ArtificialIntelligenceAccess.push(new Unit(65561, -11615, "Hoffalgre", false, "Halbire"));

                //Scenery

                //web
                //1
                scenicList.push(new Scenery("web", 65813, -12467, 8, 1.9));
                scenicList.push(new Scenery("web", 65749, -12354, 10, 1.2));
                scenicList.push(new Scenery("web", 65656, -12416, 10, 1.1));
                scenicList.push(new Scenery("web", 65873, -12575, 1, 1));
                scenicList.push(new Scenery("web", 65762, -12567, 0, 1.6));
                scenicList.push(new Scenery("web", 65902, -11986, -0.666, 1.5));
                scenicList.push(new Scenery("web", 65763, -12404, -2.12, 1.4));
                scenicList.push(new Scenery("web", 65813, -12312, 5, 1));
                scenicList.push(new Scenery("web", 65718, -12045, 0, 3));
                scenicList.push(new Scenery("web", 65563, -12109, 3, 2.65));
                scenicList.push(new Scenery("web", 65529, -12412, 1.5, 2.7));
                scenicList.push(new Scenery("web", 65928, -12190, 0.75, 2.9));
                scenicList.push(new Scenery("web", 65683, -12263, 2, 2.8));
                scenicList.push(new Scenery("web", 65777, -12187, 0, 1.8));
                scenicList.push(new Scenery("web", 65945, -12403, 4, 3.2));
                scenicList.push(new Scenery("web", 65929, -12051, 1.2, 2));
                scenicList.push(new Scenery("web", 66107, -12423, 0, 3));
                scenicList.push(new Scenery("web", 65984, -12599, -2, 2.2));
                scenicList.push(new Scenery("web", 65399, -12238, -4, 2.5));
                scenicList.push(new Scenery("etnaEggSac", 65774, -12244, 0, true));
                scenicList.push(new Scenery("web", 65557, -12259, -5, 1));
                scenicList.push(new Scenery("web", 65355, -12413, 16, 2.5));
                scenicList.push(new Scenery("web", 65256, -12283, 0.63, 2.1));
                scenicList.push(new Scenery("web", 65369, -12085, 10, 2.75));
                scenicList.push(new Scenery("web", 65236, -12164, 3, 2));
                scenicList.push(new Scenery("web", 65500, -11973, 0, 2.25));
                scenicList.push(new Scenery("web", 65707, -12562, 6, 2.96));
                scenicList.push(new Scenery("web", 65860, -12727, -8, 2.8));
                scenicList.push(new Scenery("web", 65709, -12758, -13, 3));
                scenicList.push(new Scenery("web", 66004, -12869, -3.13, 2.9));
                scenicList.push(new Scenery("web", 66030, -12719, -2.222, 2));
                scenicList.push(new Scenery("web", 65524, -12621, -6.464, 2.64));
                scenicList.push(new Scenery("web", 65399, -12534, -7, 2));
                scenicList.push(new Scenery("etnaEggSac", 65904, -12424, -2, true));
                scenicList.push(new Scenery("etnaEggSac", 65601, -12520, 4, true));
                scenicList.push(new Scenery("etnaEggSac", 65841, -12257, 9, true));
                //2
                scenicList.push(new Scenery("web", 63261, -6450, 1.2, 0.9));
                scenicList.push(new Scenery("web", 63342, -6434, 3.141592365239, 1.45));
                scenicList.push(new Scenery("web", 63284, -6529, -3.10102, 1.77));
                scenicList.push(new Scenery("web", 63205, -6321, -1, 2.7));
                scenicList.push(new Scenery("web", 63127, -6520, -2, 2.8));
                scenicList.push(new Scenery("web", 63487, -6462, 0, 3.1));
                scenicList.push(new Scenery("web", 63340, -6370, -4, 1.8));
                scenicList.push(new Scenery("web", 63417, -6523, 0.5, 1.55));
                scenicList.push(new Scenery("etnaEggSac", 63260, -6451, -20, true));
                //3
                scenicList.push(new Scenery("web", 65427, -4877, -0.123, 1.23456789101112));
                scenicList.push(new Scenery("web", 65337, -4886, 1.5, 1.42));
                scenicList.push(new Scenery("web", 65537, -4898, 3.15, 1.63));
                scenicList.push(new Scenery("web", 65644, -4757, 4, 1.7));
                scenicList.push(new Scenery("web", 65770, -4901, 3.5, 1.6));
                scenicList.push(new Scenery("web", 65411, -4754, -2.61, 2));
                scenicList.push(new Scenery("web", 65257, -4948, 12, 1.48));
                scenicList.push(new Scenery("web", 65667, -4869, 7, 1.89));
                scenicList.push(new Scenery("web", 65525, -4806, -6, 2.3));
                scenicList.push(new Scenery("web", 65335, -4889, -4.5, 1.94));
                scenicList.push(new Scenery("web", 65679, -4905, -1.3, 1.03));
                scenicList.push(new Scenery("web", 65437, -4900, 4.9, 1.78));
                scenicList.push(new Scenery("skeleton", 65558, -4904, 0.26, 1.62));
                scenicList.push(new Scenery("overWeb", 65603, -4892, 2.9, 0.23));
                scenicList.push(new Scenery("overWeb", 65543, -4922, -0.17, 0.7));
                scenicList.push(new Scenery("overWeb", 65555, -4897, 0.1, 0.86));
                scenicList.push(new Scenery("overWeb", 65543, -4922, -0.1, 0.8));
                scenicList.push(new Scenery("overWeb", 65555, -4897, 0.16, 0.94));
                scenicList.push(new Scenery("overWeb", 65603, -4892, 3.14159, 0.3));
                if (quests.spiderwebLoot) //risky alchemist tried to collect a web sample... it didn't work out so well.
                {
                    quests.spiderwebLoot = false;
                    worldItems.push([new Item("coins", 65511, -4888), 34]);
                    worldItems.push([new Item("thenganDagger", 65602, -4892), 1]);
                }
                //4
                scenicList.push(new Scenery("web", 65536, -7963, 0, 0.88));
                scenicList.push(new Scenery("web", 65135, -7988, -1.04, 1));
                scenicList.push(new Scenery("web", 65397, -7683, -12, 1.52));
                scenicList.push(new Scenery("web", 65249, -7850, -14, 1.66));
                scenicList.push(new Scenery("web", 65525, -7538, -1.9, 1.63));
                scenicList.push(new Scenery("web", 65290, -7652, -2.4, 1.71));
                scenicList.push(new Scenery("web", 65454, -7756, 8, 1.56));
                scenicList.push(new Scenery("web", 65120, -7894, 0, 1.8));
                scenicList.push(new Scenery("web", 65164, -8140, 3, 1.75));
                scenicList.push(new Scenery("web", 65456, -8032, -7.8, 2.26));
                scenicList.push(new Scenery("web", 65756, -7975, -19, 1.68));
                scenicList.push(new Scenery("web", 65630, -7955, -1, 2));
                scenicList.push(new Scenery("web", 65299, -7973, 1.12, 2.4));
                scenicList.push(new Scenery("web", 65323, -7770, 1.1, 1.4));
                scenicList.push(new Scenery("web", 65189, -7770, 5.56, 1.61));
                scenicList.push(new Scenery("web", 65501, -7622, 9, 1.45));
                scenicList.push(new Scenery("web", 65402, -7579, 4, 1.78));
                scenicList.push(new Scenery("web", 65491, -7860, 11, 2.1));
                scenicList.push(new Scenery("web", 65381, -7825, -3.91, 1.41));
                scenicList.push(new Scenery("web", 65206, -7919, 1.55, 1.2));
                scenicList.push(new Scenery("web", 65301, -8076, -3.3, 1.77));
                scenicList.push(new Scenery("web", 65148, -8023, -1.6, 1.54));
                scenicList.push(new Scenery("etnaEggSac", 65242, -7861, -2, true));

                //forest plants
                scenicList.push(new Scenery("kofkePlant", 60871, -9467, -5.5, false));
                scenicList.push(new Scenery("steugiurnePlant", 61199, -10760, 4, false));
                scenicList.push(new Scenery("callopPlant", 63348, -12077, -8, false));
                scenicList.push(new Scenery("thalisPlant", 60352, -12956, 0, false));
                scenicList.push(new Scenery("thalisPlant", 62538, -12622, 3, false));
                scenicList.push(new Scenery("kofkePlant", 64371, -11519, -5.5, false));
                scenicList.push(new Scenery("darbPlant", 61049, -11870, 1.2, false));
                scenicList.push(new Scenery("darbPlant", 66809, -12785, -1, false));
                scenicList.push(new Scenery("callopPlant", 62198, -10637, -2.5, false));
                scenicList.push(new Scenery("callopPlant", 64554, -10949, 3, false));
                scenicList.push(new Scenery("kofkePlant", 65112, -11901, -5.5, false));
                scenicList.push(new Scenery("darbPlant", 66809, -12785, -1, false));
                scenicList.push(new Scenery("thalisPlant", 66332, -11589, 5, false));
                scenicList.push(new Scenery("darbPlant", 65320, -10941, 0.5, false));
                scenicList.push(new Scenery("callopPlant", 66790, -7518, 9, false));
                scenicList.push(new Scenery("steugiurnePlant", 65878, -5989, 16, false));
                scenicList.push(new Scenery("kofkePlant", 65513, -6450, -5.5, false));
                scenicList.push(new Scenery("darbPlant", 64764, -7018, 1, false));
                scenicList.push(new Scenery("thalisPlant", 64440, -8472, 8, false));
                scenicList.push(new Scenery("kofkePlant", 64817, -9418, -6.8, false));
                scenicList.push(new Scenery("kofkePlant", 61538, -7648, -3.2, false));
                scenicList.push(new Scenery("steugiurnePlant", 61979, -5269, 15, false));
                scenicList.push(new Scenery("callopPlant", 63366, -5187, 6, false));
                scenicList.push(new Scenery("kofkePlant", 64290, -4443, 3.5, false));
                scenicList.push(new Scenery("darbPlant", 63176, -3943, 0.2, false));
                scenicList.push(new Scenery("thalisPlant", 61311, -4626, 3, false));
                scenicList.push(new Scenery("kofkePlant", 66572, -4400, 4.5, false));
                scenicList.push(new Scenery("kofkePlant", 66028, -5132, -2.6, false));
                scenicList.push(new Scenery("darbPlant", 66157, -4731, -0.81, false));
                scenicList.push(new Scenery("kofkePlant", 63419, -4237, 4.7, false));

                //plains plants
                scenicList.push(new Scenery("vorlymPlant", 59178, -10389, -4, false));
                scenicList.push(new Scenery("galloshPlant", 58849, -12778, 5, false));
                scenicList.push(new Scenery("galloshPlant", 58515, -4256, 0, false));

                //stumps
                //scenicList.push(new Scenery("pineStumps", -6474 , 1900, 0, true));

                //Border Trees (North)
                scenicList.push(new Scenery("pineTree", 65223, -4200, 5.4, true));
                scenicList.push(new Scenery("pineTree", 64879, -4054, 6.12, true));
                scenicList.push(new Scenery("pineTree", 65093, -3764, 0.25, true));
                scenicList.push(new Scenery("pineTree", 65594, -3924, 4, true));
                scenicList.push(new Scenery("pineTree", 65648, -3592, -5.8, true));
                scenicList.push(new Scenery("pineTree", 65952, -4170, 4.45, true));
                scenicList.push(new Scenery("pineTree", 66345, -4008, 3.5, true));
                scenicList.push(new Scenery("pineTree", 66916, -3868, -4.3, true));
                scenicList.push(new Scenery("pineTree", 66526, -3664, -5.7, true));
                scenicList.push(new Scenery("pineTree", 66819, -4220, 2, true)); //original
                scenicList.push(new Scenery("pineTree", 67249, -4137, 1.3, true)); //original
                scenicList.push(new Scenery("pineTree", 67249, -4137, -0.775, true)); //original
                scenicList.push(new Scenery("pineTree", 67238, -3591, 1.89, true)); //original
                scenicList.push(new Scenery("pineTree", 67692, -3758, 2.34, true)); //original
                scenicList.push(new Scenery("pineTree", 67804, -4101, 0.89, true)); //original
                scenicList.push(new Scenery("pineTree", 68195, -3886, 7.65, true)); //original
                scenicList.push(new Scenery("pineTree", 67361, -3855, 9.28, true)); //original
                scenicList.push(new Scenery("pineTree", 68080, -3561, -8.2, true)); //original
                scenicList.push(new Scenery("pineTree", 64382, -4223, 7, true));
                scenicList.push(new Scenery("pineTree", 64757, -3624, 3.2, true));
                scenicList.push(new Scenery("pineTree", 64468, -3905, -6, true));
                scenicList.push(new Scenery("pineTree", 64041, -3766, -1.4, true));
                scenicList.push(new Scenery("pineTree", 63991, -4071, 5.5, true));
                scenicList.push(new Scenery("pineTree", 63419, -3891, -8.275, true));
                scenicList.push(new Scenery("pineTree", 63681, -3589, 64, true));
                scenicList.push(new Scenery("pineTree", 63195, -4211, 8.623, true));
                scenicList.push(new Scenery("pineTree", 62945, -3758, -5.3, true));
                scenicList.push(new Scenery("pineTree", 62797, -4050, 10.2, true));
                scenicList.push(new Scenery("pineTree", 62452, -3851, 12.07, true));
                scenicList.push(new Scenery("pineTree", 62337, -4220, 13.12, true));
                scenicList.push(new Scenery("pineTree", 63638, -4194, 9.45, true));
                scenicList.push(new Scenery("pineTree", 62081, -3624, -2.8, true));
                scenicList.push(new Scenery("pineTree", 61902, -3925, -12.12, true));
                scenicList.push(new Scenery("pineTree", 61520, -3790, 8.5, true));
                scenicList.push(new Scenery("pineTree", 61563, -4127, -2.222, true));
                scenicList.push(new Scenery("pineTree", 61049, -4055, 6.3, true));
                scenicList.push(new Scenery("pineTree", 61236, -3549, 5.41, true));
                scenicList.push(new Scenery("pineTree", 60602, -3924, 54.1, true));
                scenicList.push(new Scenery("pineTree", 60988, -3769, -5.8549, true));
                scenicList.push(new Scenery("pineTree", 60398, -4224, -5, true));
                scenicList.push(new Scenery("pineTree", 60183, -3976, 3.6, true));
                scenicList.push(new Scenery("pineTree", 59633, -4041, 3.42, true));
                scenicList.push(new Scenery("pineTree", 59873, -3697, -3.05, true));
                scenicList.push(new Scenery("pineTree", 60518, -3634, 2.84, true));
                scenicList.push(new Scenery("pineTree", 68204, -4229, 3, true)); //original
                scenicList.push(new Scenery("pineTree", 66071, -3787, 1.43859, true));

                //Border Trees (South)
                scenicList.push(new Scenery("pineTree", 59655, -13702, 0.22, true));
                scenicList.push(new Scenery("pineTree", 60102, -13527, 3.27, true));
                scenicList.push(new Scenery("pineTree", 59551, -13236, 1, true));
                scenicList.push(new Scenery("pineTree", 60470, -13367, -5.56, true));
                scenicList.push(new Scenery("pineTree", 60771, -13653, -2.5, true));
                scenicList.push(new Scenery("pineTree", 61136, -13547, 3.72, true));
                scenicList.push(new Scenery("pineTree", 61434, -13759, 4, true));
                scenicList.push(new Scenery("pineTree", 61317, -13221, -0.6, true));
                scenicList.push(new Scenery("pineTree", 60909, -13286, -3, true));
                scenicList.push(new Scenery("pineTree", 63800, -13528, -7.63192631, true));
                scenicList.push(new Scenery("pineTree", 63253, -13673, -5, true));
                scenicList.push(new Scenery("pineTree", 63375, -13237, 2.46435, true));
                scenicList.push(new Scenery("pineTree", 62946, -13375, 3.6927836, true));
                scenicList.push(new Scenery("pineTree", 61892, -13365, 8.229, true));
                scenicList.push(new Scenery("pineTree", 62126, -13659, 0.75, true));
                scenicList.push(new Scenery("pineTree", 62562, -13790, -6.1, true));
                scenicList.push(new Scenery("pineTree", 64513, -13657, 5.85, true));
                scenicList.push(new Scenery("pineTree", 64394, -13267, -8.1, true));
                scenicList.push(new Scenery("pineTree", 65106, -13572, 3.333, true));
                scenicList.push(new Scenery("pineTree", 65575, -13365, -7.6, true));
                scenicList.push(new Scenery("pineTree", 65817, -13727, 2.424, true));
                scenicList.push(new Scenery("pineTree", 66131, -13468, 3.9, true));
                scenicList.push(new Scenery("pineTree", 66600, -13232, 4.666, true)); //original
                scenicList.push(new Scenery("pineTree", 66938, -13550, -28.7, true)); //original
                scenicList.push(new Scenery("pineTree", 67423, -13700, 1.654, true)); //original
                scenicList.push(new Scenery("pineTree", 68201, -13828, -5, true)); //original
                scenicList.push(new Scenery("pineTree", 67863, -13504, -9, true)); //original
                scenicList.push(new Scenery("pineTree", 67425, -13277, 6.69, true)); //original
                scenicList.push(new Scenery("pineTree", 68175, -13212, 4.343434, true)); //original

                //Border Trees (West)
                //scenicList.push(new Scenery("pineTree", 66938, -13550, -28.7, true)); //copy
                //scenicList.push(new Scenery("pineTree", 67423, -13700, 1.654, true)); //copy
                //scenicList.push(new Scenery("pineTree", 66600, -13232, 4.666, true)); //copy
                //scenicList.push(new Scenery("pineTree", 68201, -13828, -5, true)); //copy
                //scenicList.push(new Scenery("pineTree", 67863, -13504, -9, true)); //copy
                //scenicList.push(new Scenery("pineTree", 67425, -13277, 6.69, true)); //copy
                //scenicList.push(new Scenery("pineTree", 68175, -13212, 4.343434, true)); //copy
                //scenicList.push(new Scenery("pineTree", 66819, -4220, 2, true)); //copy
                //scenicList.push(new Scenery("pineTree", 67249, -4137, 1.3, true)); //copy
                //scenicList.push(new Scenery("pineTree", 67249, -4137, -0.775, true)); //copy
                //scenicList.push(new Scenery("pineTree", 67238, -3591, 1.89, true)); //copy
                //scenicList.push(new Scenery("pineTree", 67692, -3758, 2.34, true)); //copy
                //scenicList.push(new Scenery("pineTree", 67804, -4101, 0.89, true)); //copy
                //scenicList.push(new Scenery("pineTree", 68195, -3886, 7.65, true)); //copy
                //scenicList.push(new Scenery("pineTree", 67361, -3855, 9.28, true)); //copy
                //scenicList.push(new Scenery("pineTree", 68080, -3561, -8.2, true)); //copy
                //scenicList.push(new Scenery("pineTree", 68204, -4229, 3, true)); //copy

                //scenicList.push(new Scenery("pineTree", 64120, -6017, -1.5, true));
                //scenicList.push(new Scenery("pineTree", 64282, -5535, 0.5, true));
                //scenicList.push(new Scenery("pineTree", 64690, -5623, -0.8, true));
                //scenicList.push(new Scenery("pineTree", 64529, -5151, -5, true));
                //scenicList.push(new Scenery("pineTree", 64795, -4823, -1.44, true));
                //scenicList.push(new Scenery("pineTree", 64283, -4841, 2.34, true));
                //scenicList.push(new Scenery("pineTree", 64922, -4527, -3.85, true));
                //scenicList.push(new Scenery("pineTree", 66148, -4497, -4.5219, true));
                //scenicList.push(new Scenery("pineTree", 60009, -4336, 4.19, true));
                //scenicList.push(new Scenery("pineTree", 66286, -4883, -7, true));
                //scenicList.push(new Scenery("pineTree", 66477, -5142, -3.2, true));
                //scenicList.push(new Scenery("pineTree", 66710, -4626, 6, true));
                //scenicList.push(new Scenery("pineTree", 67112, -4525, 1.4, true));
                //scenicList.push(new Scenery("pineTree", 67001, -4929, -5.5, true));
                //scenicList.push(new Scenery("pineTree", 66362, -5609, 8.275, true));
                //scenicList.push(new Scenery("pineTree", 66768, -5447, -64, true));
                //scenicList.push(new Scenery("pineTree", 67022, -5227, -8.623, true));
                //scenicList.push(new Scenery("pineTree", 67266, -5608, 5.3, true));
                //scenicList.push(new Scenery("pineTree", 66702, -5950, -10.2, true));
                //scenicList.push(new Scenery("pineTree", 66210, -6125, -12.07, true));
                //scenicList.push(new Scenery("pineTree", 65800, -6231, -13.12, true));
                //scenicList.push(new Scenery("pineTree", 65759, -6518, -9.45, true));
                //scenicList.push(new Scenery("pineTree", 65871, -6800, 2.8, true));
                //scenicList.push(new Scenery("pineTree", 66254, -6967, 12.12, true));
                //scenicList.push(new Scenery("pineTree", 66184, -7216, -8.5, true));
                //scenicList.push(new Scenery("pineTree", 66678, -7127, 2.222, true));
                //scenicList.push(new Scenery("pineTree", 66580, -7422, -6.3, true));
                //scenicList.push(new Scenery("pineTree", 66735, -7725, -5.41, true));
                //scenicList.push(new Scenery("pineTree", 67068, -7918, -54.1, true));
                //scenicList.push(new Scenery("pineTree", 66757, -8112, 5.8549, true));
                //scenicList.push(new Scenery("pineTree", 67304, -8158, 5, true));
                //scenicList.push(new Scenery("pineTree", 66996, -7441, -3.6, true));
                //scenicList.push(new Scenery("pineTree", 67421, -7614, -3.42, true));
                //scenicList.push(new Scenery("pineTree", 67679, -7979, 79, true));
                //scenicList.push(new Scenery("pineTree", 67729, -8261, -2.84, true));
                //scenicList.push(new Scenery("pineTree", 68095, -8100, 2.8, true));

                scenicList.push(new Scenery("pineTree", 67162, -12964, -4.2, true));
                scenicList.push(new Scenery("pineTree", 66498, -11920, -3.5, true));
                scenicList.push(new Scenery("pineTree", 66951, -12625, 4.5, true));
                scenicList.push(new Scenery("pineTree", 67444, -12184, 2.89, true));
                scenicList.push(new Scenery("pineTree", 67063, -11927, 3.1, true));
                scenicList.push(new Scenery("pineTree", 67451, -12475, -3.95, true));
                scenicList.push(new Scenery("pineTree", 62376, -13167, -4.8, true));
                scenicList.push(new Scenery("pineTree", 66555, -12788, 2.89, true));
                scenicList.push(new Scenery("pineTree", 66710, -12325, 9, true));
                scenicList.push(new Scenery("pineTree", 67694, -13044, -10, true));
                scenicList.push(new Scenery("pineTree", 68193, -12889, 42, true));
                scenicList.push(new Scenery("pineTree", 66721, -11555, -1.2, true));
                scenicList.push(new Scenery("pineTree", 67805, -12773, 1.8, true));
                scenicList.push(new Scenery("pineTree", 67964, -12247, -3.93, true));
                scenicList.push(new Scenery("pineTree", 67796, -11733, 0.7, true));
                scenicList.push(new Scenery("pineTree", 67779, -11986, -45, true));
                scenicList.push(new Scenery("pineTree", 67384, -11546, -0.15, true));
                scenicList.push(new Scenery("pineTree", 68083, -11539, -15, true));
                scenicList.push(new Scenery("pineTree", 67604, -11122, -3.25, true));
                scenicList.push(new Scenery("pineTree", 67936, -10822, 4.45, true));
                scenicList.push(new Scenery("pineTree", 68192, -10484, -4.65, true));
                scenicList.push(new Scenery("pineTree", 67243, -11281, 0.55, true));
                scenicList.push(new Scenery("pineTree", 67762, -10369, -2.25, true));
                scenicList.push(new Scenery("pineTree", 67379, -10657, -7.25, true));
                scenicList.push(new Scenery("pineTree", 66990, -10426, 2.65, true));
                scenicList.push(new Scenery("pineTree", 67129, -10943, -4.25, true));
                scenicList.push(new Scenery("pineTree", 66733, -11150, -1.1, true));
                scenicList.push(new Scenery("pineTree", 66880, -10683, 8.8, true));
                scenicList.push(new Scenery("pineTree", 67394, -9778, -1.8, true));
                scenicList.push(new Scenery("pineTree", 68109, -9629, 5.4, true));
                scenicList.push(new Scenery("pineTree", 67768, -9732, -9.15, true));
                scenicList.push(new Scenery("pineTree", 66916, -9567, 8.15, true));
                scenicList.push(new Scenery("pineTree", 67539, -9447, -4.09, true));
                scenicList.push(new Scenery("pineTree", 67937, -9172, -16, true));
                scenicList.push(new Scenery("pineTree", 67335, -9127, -12.5, true));
                scenicList.push(new Scenery("pineTree", 66999, -9269, 3.08, true));
                scenicList.push(new Scenery("pineTree", 67689, -8890, -48, true));
                scenicList.push(new Scenery("pineTree", 68195, -8873, -5.65, true));
                scenicList.push(new Scenery("pineTree", 67978, -8537, 9.4, true));
                scenicList.push(new Scenery("pineTree", 65825, -7976, -1.8, true));
                scenicList.push(new Scenery("pineTree", 67020, -8841, -1.9, true));
                scenicList.push(new Scenery("pineTree", 67478, -8533, -7.777777777, true));
                scenicList.push(new Scenery("pineTree", 67345, -8768, -8.05, true));
                scenicList.push(new Scenery("pineTree", 66587, -8587, 6, true));
                scenicList.push(new Scenery("pineTree", 67033, -8507, -5.24, true));
                scenicList.push(new Scenery("pineTree", 67290, -6106, -12.5, true));
                scenicList.push(new Scenery("pineTree", 66101, -6571, 3.08, true));
                scenicList.push(new Scenery("pineTree", 66482, -6431, -48, true));
                scenicList.push(new Scenery("pineTree", 66565, -6706, -5.65, true));
                scenicList.push(new Scenery("pineTree", 67031, -6843, 9.4, true));
                scenicList.push(new Scenery("pineTree", 66979, -6504, -1.8, true));
                scenicList.push(new Scenery("pineTree", 67541, -6636, -1.9, true));
                scenicList.push(new Scenery("pineTree", 67634, -4512, -7.777777777, true));
                scenicList.push(new Scenery("pineTree", 68037, -4573, -8.05, true));
                scenicList.push(new Scenery("pineTree", 67829, -4931, 6, true));
                scenicList.push(new Scenery("pineTree", 67468, -4790, -5.24, true));
                scenicList.push(new Scenery("pineTree", 67412, -5121, 8.18, true));
                scenicList.push(new Scenery("pineTree", 68142, -5213, 7.55, true));
                scenicList.push(new Scenery("pineTree", 67734, -5298, 0, true));
                scenicList.push(new Scenery("pineTree", 68198, -5184, 0, true));
                scenicList.push(new Scenery("pineTree", 68010, -5578, 3.14, true));
                scenicList.push(new Scenery("pineTree", 67835, -5899, -1.56, true));
                scenicList.push(new Scenery("pineTree", 68203, -6229, -6, true));
                scenicList.push(new Scenery("pineTree", 67674, -6334, 2, true));
                scenicList.push(new Scenery("pineTree", 67356, -7174, 1.3, true));
                scenicList.push(new Scenery("pineTree", 67911, -7341, -0.9, true));
                scenicList.push(new Scenery("pineTree", 68127, -6591, 3, true));
                scenicList.push(new Scenery("pineTree", 67842, -6932, -5, true));
                scenicList.push(new Scenery("pineTree", 68050, -7710, 6.3, true));

                //Trees
                scenicList.push(new Scenery("pineTree", 65520, -4403, 0, true));
                scenicList.push(new Scenery("pineTree", 60273, -10049, 0, true));
                scenicList.push(new Scenery("pineTree", 60749, -10416, 3.14, true));
                scenicList.push(new Scenery("pineTree", 60430, -10803, -1.56, true));
                scenicList.push(new Scenery("pineTree", 60283, -11183, -6, true));
                scenicList.push(new Scenery("pineTree", 60940, -11009, 2, true));
                scenicList.push(new Scenery("pineTree", 60673, -11250, 1.1, true));
                scenicList.push(new Scenery("pineTree", 60490, -11740, -0.9, true));
                scenicList.push(new Scenery("pineTree", 59849, -11830, 3, true));
                scenicList.push(new Scenery("pineTree", 61230, -11357, -4, true));
                scenicList.push(new Scenery("pineTree", 61605, -10961, 4.3, true));
                scenicList.push(new Scenery("pineTree", 59971, -13083, 5, true));
                scenicList.push(new Scenery("pineTree", 59726, -12819, -8, true));
                scenicList.push(new Scenery("pineTree", 60234, -12905, 2.65, true));
                scenicList.push(new Scenery("pineTree", 60021, -12636, -3.4, true));
                scenicList.push(new Scenery("pineTree", 60299, -12501, -6.4, true));
                scenicList.push(new Scenery("pineTree", 59887, -12419, 8, true));
                scenicList.push(new Scenery("pineTree", 59654, -12138, 6, true));
                scenicList.push(new Scenery("pineTree", 60102, -12155, 3.9, true));
                scenicList.push(new Scenery("pineTree", 60590, -12254, -4.829, true));
                scenicList.push(new Scenery("pineTree", 63704, -12170, -1.073, true));
                scenicList.push(new Scenery("pineTree", 64843, -12693, -2.87687, true));
                scenicList.push(new Scenery("pineTree", 63050, -13046, 7.5, true));
                scenicList.push(new Scenery("pineTree", 65381, -12485, -5.5, true));
                scenicList.push(new Scenery("pineTree", 65280, -12820, 0.45, true));
                scenicList.push(new Scenery("pineTree", 65003, -13110, 6.2, true));
                scenicList.push(new Scenery("pineTree", 65607, -12257, -1.8, true));
                scenicList.push(new Scenery("pineTree", 65617, -12786, 1.9, true));
                scenicList.push(new Scenery("pineTree", 66055, -12580, 7.777777777, true));
                scenicList.push(new Scenery("pineTree", 66170, -12272, 0, true));
                scenicList.push(new Scenery("pineTree", 65978, -11983, -6, true));
                scenicList.push(new Scenery("pineTree", 65202, -12187, 5.28, true));
                scenicList.push(new Scenery("pineTree", 64824, -11979, -3.5219, true));
                scenicList.push(new Scenery("pineTree", 65879, -11580, -2.90012, true));
                scenicList.push(new Scenery("pineTree", 64803, -12286, 6.702931247829, true));
                scenicList.push(new Scenery("pineTree", 64254, -12485, 4.13369123926, true));
                scenicList.push(new Scenery("pineTree", 64372, -12113, -2.8, true));
                scenicList.push(new Scenery("pineTree", 65495, -11933, 5.9, true));
                scenicList.push(new Scenery("pineTree", 66060, -12916, -3.6, true));
                scenicList.push(new Scenery("pineTree", 60775, -12917, 1.5, true));
                scenicList.push(new Scenery("pineTree", 60918, -12617, -3.75, true));
                scenicList.push(new Scenery("pineTree", 61444, -12766, 5.75, true));
                scenicList.push(new Scenery("pineTree", 61697, -13019, 6.3, true));
                scenicList.push(new Scenery("pineTree", 66590, -9784, 3.15, true));
                scenicList.push(new Scenery("pineTree", 66205, -11226, 5.75, true));
                scenicList.push(new Scenery("pineTree", 66365, -10808, -7.45, true));
                scenicList.push(new Scenery("pineTree", 65883, -10950, 2.30, true));
                scenicList.push(new Scenery("pineTree", 65501, -11173, 6.371, true));
                scenicList.push(new Scenery("pineTree", 65306, -11527, 4.61, true));
                scenicList.push(new Scenery("pineTree", 64886, -11552, -1.6, true));
                scenicList.push(new Scenery("pineTree", 65059, -10930, 0, true));
                scenicList.push(new Scenery("pineTree", 64422, -12852, 0, true));
                scenicList.push(new Scenery("pineTree", 63980, -12993, -5, true));
                scenicList.push(new Scenery("pineTree", 63581, -12766, 1.68, true));
                scenicList.push(new Scenery("pineTree", 63804, -12552, 2.34, true));
                scenicList.push(new Scenery("pineTree", 63026, -12607, 3.75, true));
                scenicList.push(new Scenery("pineTree", 62675, -12803, -5.4321012, true));
                scenicList.push(new Scenery("pineTree", 62127, -12871, -1, true));
                scenicList.push(new Scenery("pineTree", 62497, -12480, -3.35, true));
                scenicList.push(new Scenery("pineTree", 64500, -11719, 0.9, true));
                scenicList.push(new Scenery("pineTree", 65504, -8119, -5.3, true));
                scenicList.push(new Scenery("pineTree", 65133, -8212, -6.24, true));
                scenicList.push(new Scenery("pineTree", 64922, -8524, -2.1, true));
                scenicList.push(new Scenery("pineTree", 64631, -8245, 2.8, true));
                scenicList.push(new Scenery("pineTree", 64669, -7829, 1.386, true));
                scenicList.push(new Scenery("pineTree", 65517, -7792, -6, true));
                scenicList.push(new Scenery("pineTree", 65232, -7602, -2, true));
                scenicList.push(new Scenery("pineTree", 65046, -7858, 5.77, true));
                scenicList.push(new Scenery("pineTree", 64731, -7523, -3.14, true));
                scenicList.push(new Scenery("pineTree", 64279, -8019, -4.80, true));
                scenicList.push(new Scenery("pineTree", 65154, -7300, 4.6825, true));
                scenicList.push(new Scenery("pineTree", 62491, -6184, 3.14, true));
                scenicList.push(new Scenery("pineTree", 62416, -6480, -1.5, true));
                scenicList.push(new Scenery("pineTree", 62691, -6699, 2.3, true));
                scenicList.push(new Scenery("pineTree", 63108, -6557, 3.78, true));
                scenicList.push(new Scenery("pineTree", 63251, -6212, 4.39, true));
                scenicList.push(new Scenery("pineTree", 62778, -5918, -0.65, true));
                scenicList.push(new Scenery("pineTree", 63398, -5754, 0, true));
                scenicList.push(new Scenery("pineTree", 63169, -7010, 0.25, true));
                scenicList.push(new Scenery("pineTree", 63590, -6457, -4.1, true));
                scenicList.push(new Scenery("pineTree", 63805, -5759, 1.4, true));
                scenicList.push(new Scenery("pineTree", 63470, -6828, -2.6, true));
                scenicList.push(new Scenery("pineTree", 62720, -7137, -1.30313, true));
                scenicList.push(new Scenery("pineTree", 63062, -7331, -2.5, true));
                scenicList.push(new Scenery("pineTree", 63685, -7378, -5.4, true));
                scenicList.push(new Scenery("pineTree", 63747, -7046, -6.894, true));
                scenicList.push(new Scenery("pineTree", 63217, -7837, 7.54, true));
                scenicList.push(new Scenery("pineTree", 63334, -7554, 2.63, true));
                scenicList.push(new Scenery("pineTree", 63643, -7771, 6.26, true));
                scenicList.push(new Scenery("pineTree", 64197, -7681, -62.6, true));
                scenicList.push(new Scenery("pineTree", 64125, -7319, 1.25, true));
                scenicList.push(new Scenery("pineTree", 64410, -7109, 5.8, true));
                scenicList.push(new Scenery("pineTree", 64218, -6816, -7, true));
                scenicList.push(new Scenery("pineTree", 62872, -6281, -11, true));
                scenicList.push(new Scenery("pineTree", 65355, -4677, 0.39, true));
                scenicList.push(new Scenery("pineTree", 65833, -4933, 2.88, true));
                scenicList.push(new Scenery("pineTree", 65200, -4986, -3.6, true));
                scenicList.push(new Scenery("pineTree", 65688, -4710, 4.2, true));
                scenicList.push(new Scenery("pineTree", 65433, -5452, -2.325, true));
                scenicList.push(new Scenery("pineTree", 66032, -5332, -3.82, true));
                scenicList.push(new Scenery("pineTree", 64977, -5367, -5.5555, true));
                scenicList.push(new Scenery("pineTree", 65926, -5720, -6.74, true));
                scenicList.push(new Scenery("pineTree", 60024, -9638, 5.8, true));
                scenicList.push(new Scenery("pineTree", 60856, -9742, -7, true));
                scenicList.push(new Scenery("pineTree", 62872, -6281, -11, true));
                scenicList.push(new Scenery("pineTree", 60578, -9254, 0.39, true));
                scenicList.push(new Scenery("pineTree", 59881, -9277, 2.88, true));
                scenicList.push(new Scenery("pineTree", 61315, -9401, -3.6, true));
                scenicList.push(new Scenery("pineTree", 61191, -10167, 4.2, true));
                scenicList.push(new Scenery("pineTree", 61706, -10532, -2.325, true));
                scenicList.push(new Scenery("pineTree", 62200, -10813, -3.82, true));
                scenicList.push(new Scenery("pineTree", 61227, -11798, -5.5555, true));
                scenicList.push(new Scenery("pineTree", 61431, -12164, -6.74, true));
                scenicList.push(new Scenery("pineTree", 60240, -8871, -3.25, true));
                scenicList.push(new Scenery("pineTree", 61053, -8950, 4.45, true));
                scenicList.push(new Scenery("pineTree", 62045, -8871, -4.65, true));
                scenicList.push(new Scenery("pineTree", 61938, -9249, 0.55, true));
                scenicList.push(new Scenery("pineTree", 61367, -9805, -2.25, true));
                scenicList.push(new Scenery("pineTree", 61893, -9968, -7.25, true));
                scenicList.push(new Scenery("pineTree", 62214, -10394, 2.65, true));
                scenicList.push(new Scenery("pineTree", 62807, -10606, -4.25, true));
                scenicList.push(new Scenery("pineTree", 63209, -10639, -1.1, true));
                scenicList.push(new Scenery("pineTree", 63698, -10503, 8.8, true));
                scenicList.push(new Scenery("pineTree", 64140, -10343, -1.8, true));
                scenicList.push(new Scenery("pineTree", 63402, -10882, 5.4, true));
                scenicList.push(new Scenery("pineTree", 62968, -11130, -9.15, true));
                scenicList.push(new Scenery("pineTree", 62449, -11270, 8.15, true));
                scenicList.push(new Scenery("pineTree", 62004, -11515, -4.09, true));
                scenicList.push(new Scenery("pineTree", 62039, -12111, -16, true));
                scenicList.push(new Scenery("pineTree", 62444, -11864, -12.5, true));
                scenicList.push(new Scenery("pineTree", 62654, -9606, 3.08, true));
                scenicList.push(new Scenery("pineTree", 62989, -9773, -48, true));
                scenicList.push(new Scenery("pineTree", 63397, -9636, -5.65, true));
                scenicList.push(new Scenery("pineTree", 63037, -9318, 9.4, true));
                scenicList.push(new Scenery("pineTree", 63690, -9779, 0, true));
                scenicList.push(new Scenery("pineTree", 64167, -9739, -3.14, true));
                scenicList.push(new Scenery("pineTree", 63846, -9418, 1.56, true));
                scenicList.push(new Scenery("pineTree", 64307, -9232, 6, true));
                scenicList.push(new Scenery("pineTree", 63770, -8967, -2, true));
                scenicList.push(new Scenery("pineTree", 62694, -8984, -1.1, true));
                scenicList.push(new Scenery("pineTree", 63285, -8908, 0.9, true));
                scenicList.push(new Scenery("pineTree", 62803, -8579, -13, true));
                scenicList.push(new Scenery("pineTree", 62645, -8275, 3.82, true));
                scenicList.push(new Scenery("pineTree", 63136, -8323, -3.3, true));
                scenicList.push(new Scenery("pineTree", 62153, -8124, 5.5555, true));
                scenicList.push(new Scenery("pineTree", 61801, -8269, 7.8, true));
                scenicList.push(new Scenery("pineTree", 61751, -9605, -8, true));
                scenicList.push(new Scenery("pineTree", 61457, -8295, 2.15, true));
                scenicList.push(new Scenery("pineTree", 61870, -7730, 4.9, true));
                scenicList.push(new Scenery("pineTree", 61291, -7822, -2.22, true));
                scenicList.push(new Scenery("pineTree", 62842, -7934, 3, true));
                scenicList.push(new Scenery("pineTree", 62847, -7658, -8, true));
                scenicList.push(new Scenery("pineTree", 62260, -7376, -6, true));
                scenicList.push(new Scenery("pineTree", 62202, -6921, -3.9, true));
                scenicList.push(new Scenery("pineTree", 61810, -7292, 4.829, true));
                scenicList.push(new Scenery("pineTree", 61461, -7461, 1.073, true));
                scenicList.push(new Scenery("pineTree", 61554, -7056, 2.87687, true));
                scenicList.push(new Scenery("pineTree", 61677, -6624, -7.5, true));
                scenicList.push(new Scenery("pineTree", 62036, -6287, 5.5, true));
                scenicList.push(new Scenery("pineTree", 61519, -6323, -0.45, true));
                scenicList.push(new Scenery("pineTree", 61254, -6766, -6.2, true));
                scenicList.push(new Scenery("pineTree", 62374, -7770, 1.8, true));
                scenicList.push(new Scenery("pineTree", 60962, -8176, -1.9, true));
                scenicList.push(new Scenery("pineTree", 60618, -8290, -7.777777777, true));
                scenicList.push(new Scenery("pineTree", 60250, -8236, 1, true));
                scenicList.push(new Scenery("pineTree", 60478, -7935, 6, true));
                scenicList.push(new Scenery("pineTree", 60949, -7523, -5.28, true));
                scenicList.push(new Scenery("pineTree", 60569, -7594, 3.5219, true));
                scenicList.push(new Scenery("pineTree", 60248, -7381, 2.90012, true));
                scenicList.push(new Scenery("pineTree", 60662, -7190, -6.702931247829, true));
                scenicList.push(new Scenery("pineTree", 61113, -7197, -4.13369123926, true));
                scenicList.push(new Scenery("pineTree", 60874, -6930, 2.8, true));
                scenicList.push(new Scenery("pineTree", 60312, -7016, -5.9, true));
                scenicList.push(new Scenery("pineTree", 60518, -6631, 3.6, true));
                scenicList.push(new Scenery("pineTree", 60918, -6572, 5.073, true));
                scenicList.push(new Scenery("pineTree", 61131, -6150, -3.14, true));
                scenicList.push(new Scenery("pineTree", 61747, -5923, -6.6, true));
                scenicList.push(new Scenery("pineTree", 61285, -5802, 45, true));
                scenicList.push(new Scenery("pineTree", 61679, -5428, 4.822, true));
                scenicList.push(new Scenery("pineTree", 62138, -5955, 22, true));
                scenicList.push(new Scenery("pineTree", 62457, -5531, 3.7, true));
                scenicList.push(new Scenery("pineTree", 66098, -9696, 7.2, true));
                scenicList.push(new Scenery("pineTree", 66547, -9426, -2.8, true));
                scenicList.push(new Scenery("pineTree", 66491, -10350, -4.2, true));
                scenicList.push(new Scenery("pineTree", 66036, -10514, -3.5, true));
                scenicList.push(new Scenery("pineTree", 65353, -10657, 4.5, true));
                scenicList.push(new Scenery("pineTree", 65609, -10364, 2.89, true));
                scenicList.push(new Scenery("pineTree", 65051, -10462, 3.1, true));
                scenicList.push(new Scenery("pineTree", 64552, -10738, -3.95, true));
                scenicList.push(new Scenery("pineTree", 64638, -10363, -4.8, true));
                scenicList.push(new Scenery("pineTree", 64667, -11060, 2.89, true));
                scenicList.push(new Scenery("pineTree", 64505, -11310, 2.5, true));
                scenicList.push(new Scenery("pineTree", 64186, -10968, -10, true));
                scenicList.push(new Scenery("pineTree", 64066, -11756, 42, true));
                scenicList.push(new Scenery("pineTree", 61857, -12483, -1.2, true));
                scenicList.push(new Scenery("pineTree", 63972, -11251, 1.8, true));
                scenicList.push(new Scenery("pineTree", 63861, -10906, -3.93, true));
                scenicList.push(new Scenery("pineTree", 63556, -11625, 0.7, true));
                scenicList.push(new Scenery("pineTree", 63502, -11291, -43, true));
                scenicList.push(new Scenery("pineTree", 63209, -11957, -0.15, true));
                scenicList.push(new Scenery("pineTree", 62872, -12184, 14, true));
                scenicList.push(new Scenery("pineTree", 61731, -11849, 15, true));
                scenicList.push(new Scenery("pineTree", 62854, -11562, 16, true));
                scenicList.push(new Scenery("pineTree", 63188, -11709, -17, true));
                scenicList.push(new Scenery("pineTree", 63563, -8544, 4.4, true));
                scenicList.push(new Scenery("pineTree", 64079, -8629, 6, true));
                scenicList.push(new Scenery("pineTree", 64005, -8332, -8.5, true));
                scenicList.push(new Scenery("pineTree", 64548, -8894, 2.75, true));
                scenicList.push(new Scenery("pineTree", 64671, -9804, -1.4, true));
                scenicList.push(new Scenery("pineTree", 64673, -9454, -6.4, true));
                scenicList.push(new Scenery("pineTree", 65203, -9755, -9, true));
                scenicList.push(new Scenery("pineTree", 65118, -9218, 3, true));
                scenicList.push(new Scenery("pineTree", 65352, -8879, 5.9, true));
                scenicList.push(new Scenery("pineTree", 65727, -8579, -4.153, true));
                scenicList.push(new Scenery("pineTree", 66100, -8784, -1.073, true));
                scenicList.push(new Scenery("pineTree", 65801, -9070, -2.66687, true));
                scenicList.push(new Scenery("pineTree", 65596, -9375, 7.6, true));
                scenicList.push(new Scenery("pineTree", 66530, -8940, -5.9, true));
                scenicList.push(new Scenery("pineTree", 66104, -9293, -0.55, true));
                scenicList.push(new Scenery("pineTree", 65987, -8278, 6.2, true));
                scenicList.push(new Scenery("pineTree", 66425, -8298, -3.45, true));
                scenicList.push(new Scenery("pineTree", 66261, -7979, -2.8, true));
                scenicList.push(new Scenery("pineTree", 65798, -7230, -6.2, true));
                scenicList.push(new Scenery("pineTree", 65573, -7455, 4.1111011, true));
                scenicList.push(new Scenery("pineTree", 66100, -7569, 2.77, true));
                scenicList.push(new Scenery("pineTree", 65377, -6624, 5.9, true));
                scenicList.push(new Scenery("pineTree", 64838, -6867, -3.6, true));
                scenicList.push(new Scenery("pineTree", 65387, -6934, 1.5, true));
                scenicList.push(new Scenery("pineTree", 64975, -6414, 35, true));
                scenicList.push(new Scenery("pineTree", 64655, -6613, 5.75, true));
                scenicList.push(new Scenery("pineTree", 64457, -6248, -6.2, true));
                scenicList.push(new Scenery("pineTree", 65040, -5821, 1.15, true));
                scenicList.push(new Scenery("pineTree", 65464, -5917, -5.95, true));
                scenicList.push(new Scenery("pineTree", 64974, -6102, -7.125, true));
                scenicList.push(new Scenery("pineTree", 65346, -6264, 7.30, true));
                scenicList.push(new Scenery("pineTree", 64472, -5911, 6.173, true));
                scenicList.push(new Scenery("pineTree", 63609, -6071, 4.61, true));
                scenicList.push(new Scenery("pineTree", 64120, -6017, -1.5, true));
                scenicList.push(new Scenery("pineTree", 64282, -5535, 0.5, true));
                scenicList.push(new Scenery("pineTree", 64690, -5623, -0.8, true));
                scenicList.push(new Scenery("pineTree", 64529, -5151, -5, true));
                scenicList.push(new Scenery("pineTree", 64795, -4823, -1.44, true));
                scenicList.push(new Scenery("pineTree", 64283, -4841, 2.34, true));
                scenicList.push(new Scenery("pineTree", 64922, -4527, -3.85, true));
                scenicList.push(new Scenery("pineTree", 66148, -4497, -4.5219, true));
                scenicList.push(new Scenery("pineTree", 60009, -4336, 4.19, true));
                scenicList.push(new Scenery("pineTree", 66286, -4883, -7, true));
                scenicList.push(new Scenery("pineTree", 66477, -5142, -3.2, true));
                scenicList.push(new Scenery("pineTree", 66710, -4626, 6, true));
                scenicList.push(new Scenery("pineTree", 67112, -4525, 1.4, true));
                scenicList.push(new Scenery("pineTree", 67001, -4929, -5.5, true));
                scenicList.push(new Scenery("pineTree", 66362, -5609, 8.275, true));
                scenicList.push(new Scenery("pineTree", 66768, -5447, -64, true));
                scenicList.push(new Scenery("pineTree", 67022, -5227, -8.623, true));
                scenicList.push(new Scenery("pineTree", 67266, -5608, 5.3, true));
                scenicList.push(new Scenery("pineTree", 66702, -5950, -10.2, true));
                scenicList.push(new Scenery("pineTree", 66210, -6125, -12.07, true));
                scenicList.push(new Scenery("pineTree", 65800, -6231, -13.12, true));
                scenicList.push(new Scenery("pineTree", 65759, -6518, -9.45, true));
                scenicList.push(new Scenery("pineTree", 65871, -6800, 2.8, true));
                scenicList.push(new Scenery("pineTree", 66254, -6967, 12.12, true));
                scenicList.push(new Scenery("pineTree", 66184, -7216, -8.5, true));
                scenicList.push(new Scenery("pineTree", 66678, -7127, 2.222, true));
                scenicList.push(new Scenery("pineTree", 66580, -7422, -6.3, true));
                scenicList.push(new Scenery("pineTree", 66735, -7725, -5.41, true));
                scenicList.push(new Scenery("pineTree", 67068, -7918, -54.1, true));
                scenicList.push(new Scenery("pineTree", 66757, -8112, 5.8549, true));
                scenicList.push(new Scenery("pineTree", 67304, -8158, 5, true));
                scenicList.push(new Scenery("pineTree", 66996, -7441, -3.6, true));
                scenicList.push(new Scenery("pineTree", 67421, -7614, -3.42, true));
                scenicList.push(new Scenery("pineTree", 67679, -7979, 79, true));
                scenicList.push(new Scenery("pineTree", 67729, -8261, -2.84, true));
                scenicList.push(new Scenery("pineTree", 68095, -8100, 2.8, true));
                scenicList.push(new Scenery("pineTree", 59658, -4682, 6.173, true));
                scenicList.push(new Scenery("pineTree", 59572, -5030, 4.61, true));
                scenicList.push(new Scenery("pineTree", 60018, -4893, -1.5, true));
                scenicList.push(new Scenery("pineTree", 60341, -4632, 0.5, true));
                scenicList.push(new Scenery("pineTree", 60725, -4468, -0.8, true));
                scenicList.push(new Scenery("pineTree", 64001, -4484, -5, true));
                scenicList.push(new Scenery("pineTree", 64003, -5195, -1.44, true));
                scenicList.push(new Scenery("pineTree", 63668, -5302, 2.34, true));
                scenicList.push(new Scenery("pineTree", 63677, -4723, -3.85, true));
                scenicList.push(new Scenery("pineTree", 63408, -4984, -4.5219, true));
                scenicList.push(new Scenery("pineTree", 63408, -4984, 4.19, true));
                scenicList.push(new Scenery("pineTree", 63004, -5569, -7, true));
                scenicList.push(new Scenery("pineTree", 63165, -5242, -3.2, true));
                scenicList.push(new Scenery("pineTree", 63044, -4751, 6, true));
                scenicList.push(new Scenery("pineTree", 62684, -5001, 1.4, true));
                scenicList.push(new Scenery("pineTree", 62739, -4471, -5.5, true));
                scenicList.push(new Scenery("pineTree", 63364, -4547, 8.275, true));
                scenicList.push(new Scenery("pineTree", 61934, -4264, -64, true));
                scenicList.push(new Scenery("pineTree", 62122, -4660, -8.623, true));
                scenicList.push(new Scenery("pineTree", 62266, -5112, 5.3, true));
                scenicList.push(new Scenery("pineTree", 61752, -4976, -10.2, true));
                scenicList.push(new Scenery("pineTree", 61212, -5167, -12.07, true));
                scenicList.push(new Scenery("pineTree", 61273, -5450, -13.12, true));
                scenicList.push(new Scenery("pineTree", 60853, -5884, -9.59, true));
                scenicList.push(new Scenery("pineTree", 60742, -5517, 2.8, true));
                scenicList.push(new Scenery("pineTree", 60082, -6490, 10.02, true));
                scenicList.push(new Scenery("pineTree", 60646, -6226, 6.26, true));
                scenicList.push(new Scenery("pineTree", 60174, -6224, 2.228, true));
                scenicList.push(new Scenery("pineTree", 59903, -5975, -6.3, true));
                scenicList.push(new Scenery("pineTree", 60131, -5668, 5.14, true));
                scenicList.push(new Scenery("pineTree", 60568, -5712, 154, true));
                scenicList.push(new Scenery("pineTree", 60543, -5963, 5.8549, true));
                scenicList.push(new Scenery("pineTree", 60218, -5941, 5, true));
                scenicList.push(new Scenery("pineTree", 59684, -5614, -3.6, true));
                scenicList.push(new Scenery("pineTree", 59840, -5276, -3.42, true));
                scenicList.push(new Scenery("pineTree", 60377, -5471, -9.7, true));
                scenicList.push(new Scenery("pineTree", 61585, -4533, 2.84, true));
                scenicList.push(new Scenery("pineTree", 61306, -4887, 3.8, true));
                scenicList.push(new Scenery("pineTree", 61087, -4428, 0.8, true));
                scenicList.push(new Scenery("pineTree", 60891, -4753, 5, true));
                scenicList.push(new Scenery("pineTree", 60836, -5129, 1.44, true));
                scenicList.push(new Scenery("pineTree", 60257, -5141, 2.34, true));
                scenicList.push(new Scenery("pineTree", 60491, -4884, 4.84, true));
                scenicList.push(new Scenery("pineTree", 61583, -9024, -4.29, true));
                scenicList.push(new Scenery("pineTree", 63027, -10358, 9.4, true));


                scenicList.push(new Scenery("pineTree", 66770.733, -14434.66675,2.297416141949725, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 63112.0065, -14494.829125,5.82256752209894, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 64495.8669, -14832.910375,4.934393253586919, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 61885.6203, -14698.140025,2.45895623725421, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 64485.961875, -14496.264325,3.33928020110871, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 62112.0075, -14577.67195,0.6825996135207524, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 59049.020625000005, -14361.090325,1.9664468256697536, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 59132.109150000004, -14543.46505,3.934673578229054, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 65899.2156, -14571.0595,0.3509820463411841, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 64206.4401, -14273.866825,3.647823347784595, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 65394.999225, -15037.43515,1.9491634959588369, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 61664.678475, -15044.07295,5.856500612992066, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 64535.55915, -14417.523325,5.0918743465905525, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 59910.119175, -14323.730275,2.413255491385624, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 64302.195825, -14397.334,2.3328562664610657, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67529.664225, -14990.6137,2.181999272692535, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66072.49065, -14460.98395,4.141200500268286, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 61696.169025, -14233.9864,3.434589411470894, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 64987.845075, -14197.744675,1.2005966608631262, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 65891.570625, -14904.473425,1.6751911558913706, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 62180.008875, -14616.45745,2.9291797896535128, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66264.537375, -14634.1771,5.660477075393087, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 60327.38895, -14550.388525,3.520161023360535, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 64771.746075, -14614.383625,0.9234358045374582, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 61838.4654, -14515.5937,3.3823824127329147, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 60841.731675, -14507.506075,5.578199082278818, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 59585.860499999995, -14160.597175,4.643613988645527, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67634.52645, -15055.151875,0.1775701097452843, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("kofkePlant", 63055.1328, -14746.774,2.701518081833805, true, undefined)); //copied s2w6

                scenicList.push(new Scenery("pineTree", 63495.43625625339, -14117.179157600767, 10, true));

                change = "s1w6";
            }
        }
        else if (region == "s2w6") //Visig Forest
        {
            if (change != "s2w6")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                generator(223, 387768, 4218, 5787, 99687, 1, 67896, -14128); //forest in map s-2-w-6
                trimmer(59000, -14212, 57801, -24028, true, false);
                trimmer(60225.41418221065, -20586.686606037092, 58658.3129481818, -21918.185406522105, true, false);
                trimmer(60054.174019811624, -22490.82555201236, 58317.20932440751, -23119.412972999977, true, false);
                trimmer(59535.30384842556, -23122.556542272792, 58634.846224160836, -23970.547562601023, true, false);
                trimmer(59615.1530780469, -16354.1339055181, 58272.25372510159, -18596.83407215409, true, false);
                trimmer(60155.330926027185, -16828.65641250246, 59536.35577271621, -18667.421184075134, true, false);

                ArtificialIntelligenceAccess.push(new Unit(58648.19433245523, -15026.400825466513, "Thueg", "baby", "preBuilt"));
                scenicList.push(new Scenery("vorlymPlant", 58912.9712231897, -15485.837834090056, 5.861444310757405, 0));
                scenicList.push(new Scenery("galloshPlant", 58318.59388327018, -16182.795573390933, 1.783706478217804, 0));
                ArtificialIntelligenceAccess.push(new Unit(58807.242151533595, -17228.882266936056, "Thueg", false, "preBuilt"));
                scenicList.push(new Scenery("vorlymPlant", 59132.32741773632, -19748.837988577787, 4.954804100174019, 0));

                scenicList.push(new Scenery("pineTree", 59655, -13702,0.22, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 60102, -13527,3.27, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 60470, -13367,-5.56, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 60771, -13653,-2.5, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 61136, -13547,3.72, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 61434, -13759,4, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 63800, -13528,-7.63192631, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 63253, -13673,-5, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 62946, -13375,3.6927836, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 61892, -13365,8.229, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 62126, -13659,0.75, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 62562, -13790,-6.1, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 64513, -13657,5.85, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 65106, -13572,3.333, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 65575, -13365,-7.6, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 65817, -13727,2.424, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 66131, -13468,3.9, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 66938, -13550,-28.7, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67423, -13700,1.654, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 68201, -13828,-5, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67863, -13504,-9, true, undefined)); //copied s1w6

                scenicList.push(new Scenery("pineTree", 67275.76215547322, -21374.79500626647, -0.15, true));
                scenicList.push(new Scenery("pineTree", 67701.63212458185, -20940.13907014899, 15, true));
                scenicList.push(new Scenery("pineTree", 62306.293083263154, -18163.359885520033, 2, true));
                scenicList.push(new Scenery("pineTree", 63356.804015896865, -20529.154658642372, -3.29, true));
                scenicList.push(new Scenery("pineTree", 63163.67772675505, -19937.482808480905, 11, true));

                scenicList.push(new Scenery("pineTree", 63602.48240611824, -18539.319298326394, 0.8, true));
                scenicList.push(new Scenery("pineTree", 63001.24288082049, -19416.718108791574, 5, true));
                scenicList.push(new Scenery("pineTree", 62417.774129749996, -20912.67979420917, 1.44, true));
                scenicList.push(new Scenery("pineTree", 60591.094499952764, -22556.579217285056, 2.34, true));
                scenicList.push(new Scenery("pineTree", 60221.72758074227, -22812.69146028123, 4.84, true));
                scenicList.push(new Scenery("pineTree", 60447.787996874475, -21100.137967566356, -4.29, true));
                scenicList.push(new Scenery("pineTree", 61644.07758210822, -20866.239207504477, 9.4, true));

                scenicList.push(new Scenery("pineTree", 63495.43625625339, -14117.179157600767, 10, true));

                scenicList.push(new Scenery("pineTree", 72434.85344587606, -17572.323085546264, true, undefined));
                scenicList.push(new Scenery("pineTree", 72667.13207488095, -18661.465289841824, true, undefined));
                scenicList.push(new Scenery("pineTree", 69740.90103264112, -20709.781524518112, true, undefined));
                scenicList.push(new Scenery("pineTree", 70472.19032353937, -21121.846388462433, true, undefined));
                scenicList.push(new Scenery("pineTree", 70085.08699791554, -21712.325176731978, true, undefined));
                scenicList.push(new Scenery("pineTree", 69724.52081851977, -21159.55274163261, true, undefined));
                scenicList.push(new Scenery("pineTree", 69014.45636680684, -20706.94713763656, true, undefined));
                scenicList.push(new Scenery("pineTree", 68356.22393424856, -20777.6385086282, true, undefined));
                scenicList.push(new Scenery("pineTree", 67827.39681102712, -19199.83582597119, true, undefined));

                scenicList.push(new Scenery("pineTree", 68258.00184853325, -14518.634233565948, true, undefined));
                scenicList.push(new Scenery("pineTree", 69446.34471321676, -14284.87943066498, true, undefined));
                scenicList.push(new Scenery("pineTree", 69086.94860453416, -14051.021429418312, true, undefined));
                scenicList.push(new Scenery("pineTree", 67821.50720511012, -14141.788319092662, true, undefined));
                scenicList.push(new Scenery("pineTree", 67360.35253774474, -14079.648188285433, true, undefined));
                scenicList.push(new Scenery("pineTree", 67471.43801077022, -14515.852483814035, true, undefined));
                scenicList.push(new Scenery("pineTree", 68548.20398626427, -14979.029051382882, true, undefined));
                scenicList.push(new Scenery("pineTree", 68140.18789976943, -15305.742114218854, true, undefined));
                scenicList.push(new Scenery("pineTree", 68126.67975224578, -15860.730574747968, true, undefined));
                scenicList.push(new Scenery("pineTree", 67978.00576788372, -16280.631150199739, true, undefined));
                scenicList.push(new Scenery("pineTree", 68449.33561497623, -16162.141624710055, true, undefined));
                scenicList.push(new Scenery("pineTree", 68311.95804795019, -16597.993499006323, true, undefined));

                //Creatures

                //etnas
                ArtificialIntelligenceAccess.push(new Unit(62925.192265567355, -16426.90700467775, "Etna", true, "Shelob"));
                ArtificialIntelligenceAccess.push(new Unit(63088.47782404278, -16372.132688808419, "Etna", false, "Helob"));
                ArtificialIntelligenceAccess.push(new Unit(63167.23617916575, -16620.445315472614, "Etna", true, "Shelob"));
                ArtificialIntelligenceAccess.push(new Unit(63000.56440864819, -16550.64611205772, "Etna", false, "Helob"));

                //skols
                ArtificialIntelligenceAccess.push(new Unit(67178.7072500001, -17517.534123284422, "Skol", false, "furby"));
                ArtificialIntelligenceAccess.push(new Unit(67254.86922128474, -17202.55163986595, "Skol", false, "frob"));

                //tentacle oodlers
                //ArtificialIntelligenceAccess.push(new Unit(61829, -8965, "Hoffalgre", true, "Humfrey"));

                //Scenery

                //scenicList.push(new Scenery("skeleton", 65558, -4904, 0.26, 1.62));
                //scenicList.push(new Scenery("web", 65536, -7963, 0, 0.88));

                scenicList.push(new Scenery("web", 63202.23075988445, -16732.937126956826, 0, 1.9));
                scenicList.push(new Scenery("web", 63116.57989316633, -16759.390964154747, 1.2, 1.7));
                scenicList.push(new Scenery("web", 63125.49405373003, -16678.24846164893, 9, 1.39));
                scenicList.push(new Scenery("web", 63198.08633506119, -16641.304569726628, 8, 1.45));
                scenicList.push(new Scenery("web", 63101.823561546575, -16589.379664460008, 1.3, 1.5));
                scenicList.push(new Scenery("web", 63167.03908836758, -16538.17054906474, 3, 1.32));
                scenicList.push(new Scenery("web", 63249.43215863818, -16496.839141312234, 2, 1.7));
                scenicList.push(new Scenery("web", 63143.57950854016, -16433.91533984429, 4, 1.65));
                scenicList.push(new Scenery("web", 63084.95890385195, -16491.0272126083, 5.55, 1.26));
                scenicList.push(new Scenery("web", 62982.656980149, -16555.283141338376, 6, 1.99));
                scenicList.push(new Scenery("web", 63022.588029164945, -16650.179686535517, 12, 1.39));
                scenicList.push(new Scenery("web", 62924.636132716514, -16626.86192222899, 17, 1.75));
                scenicList.push(new Scenery("web", 62862.760272759995, -16550.598713950785, 4, 1.4));
                scenicList.push(new Scenery("web", 62784.92820895798, -16589.79151983315, 0, 1.35));
                scenicList.push(new Scenery("web", 62829.68809357106, -16459.054195116136, 23, 1.21));
                scenicList.push(new Scenery("web", 62933.097721180944, -16414.06920239243, 13, 1.37));
                scenicList.push(new Scenery("web", 62934.02647157778, -16492.57905672314, 3.8, 1.44));
                scenicList.push(new Scenery("web", 63032.13550512826, -16388.724133038348, 9.1, 1.28));
                scenicList.push(new Scenery("web", 62975.25130668667, -16347.757215527901, 4, 1.42));
                scenicList.push(new Scenery("web", 62833.55823000676, -16419.514132574892, 14, 1.58));
                scenicList.push(new Scenery("web", 62768.38772314628, -16445.217575846815, 7, 1.88));
                scenicList.push(new Scenery("web", 63094.31175513725, -16263.391532700309, 15, 1.66));
                scenicList.push(new Scenery("web", 63165.36740306687, -16309.048230339058, 8, 1.77));
                scenicList.push(new Scenery("etnaEggSac", 63084.173524151025, -16581.311139092555, -5.722223, true));



                //forest plants
                scenicList.push(new Scenery("kofkePlant", 64647.52453867712, -19738.71453410092, 5.65, false));
                scenicList.push(new Scenery("steugiurnePlant", 64355.42083157894, -15411.772789123475, 4, false));
                scenicList.push(new Scenery("callopPlant", 66142.61623168449, -19075.88111316141, -7.2, false));
                scenicList.push(new Scenery("callopPlant", 61855.95788024016, -23135.04480392387, 9, false));
                scenicList.push(new Scenery("thalisPlant", 64242.483558016596, -16418.561340856086, 0.56, false));
                scenicList.push(new Scenery("darbPlant", 67079.18021123904, -16079.318849854571, 1.26, false));

                change = "s2w6";
            }
        }
        else if (region == "s1w7") //Visig Forest
        {
            if (change != "s1w7")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                generator(78, 11, 655, 8614, 2250, 1, 78069, -3958); //forest in map s-1-w-7
                trimmer(69539.72061666005, -9941.254804000157, 68219.57578426073, -11125.627086810175, true, false);
                trimmer(70901.71876592633, -9927.374500568265, 69661.81946583132, -10249.751583359048, true, false);
                trimmer(70921.84179079173, -11001.9202083581, 70553.27564651598, -13853.177474135047, true, false);

                scenicList.push(new Scenery("darbPlant", 66809, -12785,-1, false, undefined)); //copied s1w6
                scenicList.push(new Scenery("callopPlant", 66790, -7518,9, false, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 66916, -3868,-4.3, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 66819, -4220,2, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67249, -4137,1.3, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67249, -4137,-0.775, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67238, -3591,1.89, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67692, -3758,2.34, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67804, -4101,0.89, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 68195, -3886,7.65, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67361, -3855,9.28, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 68080, -3561,-8.2, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 68204, -4229,3, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 66938, -13550,-28.7, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67423, -13700,1.654, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 68201, -13828,-5, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67863, -13504,-9, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67425, -13277,6.69, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 68175, -13212,4.343434, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67162, -12964,-4.2, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 66951, -12625,4.5, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67444, -12184,2.89, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67063, -11927,3.1, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67451, -12475,-3.95, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 66710, -12325,9, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67694, -13044,-10, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 68193, -12889,42, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 66721, -11555,-1.2, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67805, -12773,1.8, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67964, -12247,-3.93, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67796, -11733,0.7, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67779, -11986,-45, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67384, -11546,-0.15, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 68083, -11539,-15, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67604, -11122,-3.25, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67936, -10822,4.45, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 68192, -10484,-4.65, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67243, -11281,0.55, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67762, -10369,-2.25, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67379, -10657,-7.25, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 66990, -10426,2.65, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67129, -10943,-4.25, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 66733, -11150,-1.1, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 66880, -10683,8.8, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67394, -9778,-1.8, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 68109, -9629,5.4, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67768, -9732,-9.15, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 66916, -9567,8.15, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67539, -9447,-4.09, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67937, -9172,-16, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67335, -9127,-12.5, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 66999, -9269,3.08, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67689, -8890,-48, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 68195, -8873,-5.65, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67978, -8537,9.4, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67020, -8841,-1.9, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67478, -8533,-7.777777777, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67345, -8768,-8.05, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67033, -8507,-5.24, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67290, -6106,-12.5, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67031, -6843,9.4, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 66979, -6504,-1.8, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67541, -6636,-1.9, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67634, -4512,-7.777777777, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 68037, -4573,-8.05, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67829, -4931,6, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67468, -4790,-5.24, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67412, -5121,8.18, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 68142, -5213,7.55, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67734, -5298,0, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 68198, -5184,0, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 68010, -5578,3.14, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67835, -5899,-1.56, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 68203, -6229,-6, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67674, -6334,2, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67356, -7174,1.3, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67911, -7341,-0.9, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 68127, -6591,3, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67842, -6932,-5, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 68050, -7710,6.3, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 66710, -4626,6, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67112, -4525,1.4, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67001, -4929,-5.5, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 66768, -5447,-64, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67022, -5227,-8.623, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67266, -5608,5.3, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 66702, -5950,-10.2, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 66735, -7725,-5.41, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67068, -7918,-54.1, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 66757, -8112,5.8549, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67304, -8158,5, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 66996, -7441,-3.6, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67421, -7614,-3.42, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67679, -7979,79, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67729, -8261,-2.84, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 68095, -8100,2.8, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 66770.733, -14434.66675,2.297416141949725, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67529.664225, -14990.6137,2.181999272692535, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67634.52645, -15055.151875,0.1775701097452843, true, undefined)); //copied s1w6

                scenicList.push(new Scenery("pineTree", 69374.32199074063, -11151.249416711456,6, true, undefined));
                scenicList.push(new Scenery("pineTree", 68465.33599948596, -10863.768840921866,-5, true, undefined));
                scenicList.push(new Scenery("pineTree", 69059.9846302443, -10593.276050744615,44, true, undefined));
                scenicList.push(new Scenery("pineTree", 68685.29199385016, -10376.2067193135,-1.1, true, undefined));
                scenicList.push(new Scenery("pineTree", 69321.4955454477, -10382.521892272653,0, true, undefined));

                scenicList.push(new Scenery("pineTree", 74606.53965310525, -13742.473038020722,7, true, undefined));
                scenicList.push(new Scenery("pineTree", 74780.2517726307, -13338.474673140983,-4.5, true, undefined));
                scenicList.push(new Scenery("pineTree", 74118.67940786894, -13326.528628103926,44, true, undefined));
                scenicList.push(new Scenery("pineTree", 74732.87762543095, -13087.445324604196,-1.1, true, undefined));
                scenicList.push(new Scenery("pineTree", 75456.75413665378, -8057.754877603868,0, true, undefined));
                scenicList.push(new Scenery("pineTree", 74863.85009270476, -7782.314089623686,2, true, undefined));
                scenicList.push(new Scenery("pineTree", 73342.54425045286, -4334.586323273114,-5, true, undefined));
                scenicList.push(new Scenery("pineTree", 72923.93997771267, -3876.9346934962837,41, true, undefined));
                scenicList.push(new Scenery("pineTree", 73860.84005560762, -3800.9069190702266,1, true, undefined));
                scenicList.push(new Scenery("pineTree", 74618.37112102451, -4031.7921265903356,3, true, undefined));
                scenicList.push(new Scenery("pineTree", 74871.26461760676, -3717.185228054313,7.824, true, undefined));

                scenicList.push(new Scenery("kofkePlant", 69212.45681276722, -10884.473296672784, 5.65, false));
                ArtificialIntelligenceAccess.push(new Unit(69640.00551580155, -11058.791628539419, "Hoffalgre", false, "fubwub"));

                ArtificialIntelligenceAccess.push(new Unit(69325.61512387783, -8646.850977753642, "Skol", false, "furby"));
                ArtificialIntelligenceAccess.push(new Unit(69492.30667996976, -8273.897031944647, "Skol", false, "frob"));
                ArtificialIntelligenceAccess.push(new Unit(70159.80683958894, -8588.483648465293, "Skol", false, "furby"));

                scenicList.push(new Scenery("pineTree", 73382.444775, -14219.206125,3.0059322879973216, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 71843.76315, -14390.776875,3.8203375786247236, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 71917.136775, -14652.2787,2.248141315212979, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 74364.400425, -14611.21365,0.6890519742594378, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 73632.261225, -14173.958325,5.5507285010544605, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 75235.874925, -14694.403575,4.810544210570756, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 73523.406375, -14217.36045,6.1193408885865, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 75845.803725, -14277.208875,2.8283217466949098, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 73320.399675, -14639.7051,3.535120638400052, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 76041.211275, -14495.328075,1.8457388200157223, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 71798.7123, -14421.990525,3.018733841928949, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 75460.3482, -14651.156475,5.834694839732681, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 77175.204525, -14727.571125,3.5859991120014225, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 77825.04495, -14614.371675,5.330247690643934, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 75919.9515, -14213.98305,5.893346106890695, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 70412.71275, -14653.473075,0.6119170725277198, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 74861.053725, -14650.7967,1.6791642489277174, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 76630.856175, -14595.8496,0.531256208895074, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 78040.039275, -14590.265775,3.51327992039562, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 74618.3694, -14602.084725,0.39600194193181615, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 70013.400525, -14215.179375,2.8670448907763677, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 71496.7353, -14594.17455,1.2225228556225898, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 74435.516925, -14317.905375,0.1946555607767217, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 74234.19795, -14179.882425,0.3124233911136853, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 71607.87555, -14585.577975,1.085945049404505, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 70257.58245, -14211.655725,4.340413598259924, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 68942.690625, -14744.848125,1.2003633517936239, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 74685.198825, -14659.51515,5.9758206461171355, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 74355.1935, -14682.4335,3.6101825780512, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 69152.532075, -14647.560675,5.0635271452917054, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 71883.454425, -14592.69255,4.177618851535075, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 69602.096775, -14751.19245,4.111089170710651, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 70256.33835, -14487.30285,0.5825294615192639, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 74669.5959, -14534.74635,2.4253874231790595, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 73723.2063, -14204.83755,4.562986181253815, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 70081.1952, -14272.113525,6.196852051937063, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 75333.0015, -14500.1943,0.0124365906557714, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("steugiurnePlant", 71451.026325, -14239.062,6.131836548569868, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("callopPlant", 71451.026325, -14239.062,0.657664847958677, true, undefined)); //copied s2w7

                scenicList.push(new Scenery("pineTree", 78132.02154498016, -13989.686548211726, true, undefined));
                scenicList.push(new Scenery("pineTree", 77417.19175704995, -14145.986738123169, true, undefined));
                scenicList.push(new Scenery("pineTree", 75248.22101290649, -14069.724002669536, true, undefined));
                scenicList.push(new Scenery("pineTree", 72434.85344587606, -17572.323085546264, true, undefined));

                scenicList.push(new Scenery("pineTree", 72434.85344587606, -17572.323085546264, true, undefined));
                scenicList.push(new Scenery("pineTree", 72667.13207488095, -18661.465289841824, true, undefined));
                scenicList.push(new Scenery("pineTree", 69740.90103264112, -20709.781524518112, true, undefined));
                scenicList.push(new Scenery("pineTree", 70472.19032353937, -21121.846388462433, true, undefined));
                scenicList.push(new Scenery("pineTree", 70085.08699791554, -21712.325176731978, true, undefined));
                scenicList.push(new Scenery("pineTree", 69724.52081851977, -21159.55274163261, true, undefined));
                scenicList.push(new Scenery("pineTree", 69014.45636680684, -20706.94713763656, true, undefined));
                scenicList.push(new Scenery("pineTree", 68356.22393424856, -20777.6385086282, true, undefined));
                scenicList.push(new Scenery("pineTree", 67827.39681102712, -19199.83582597119, true, undefined));

                scenicList.push(new Scenery("pineTree", 68258.00184853325, -14518.634233565948, true, undefined));
                scenicList.push(new Scenery("pineTree", 69446.34471321676, -14284.87943066498, true, undefined));
                scenicList.push(new Scenery("pineTree", 69086.94860453416, -14051.021429418312, true, undefined));
                scenicList.push(new Scenery("pineTree", 67821.50720511012, -14141.788319092662, true, undefined));
                scenicList.push(new Scenery("pineTree", 67360.35253774474, -14079.648188285433, true, undefined));
                scenicList.push(new Scenery("pineTree", 67471.43801077022, -14515.852483814035, true, undefined));
                scenicList.push(new Scenery("pineTree", 68548.20398626427, -14979.029051382882, true, undefined));
                scenicList.push(new Scenery("pineTree", 68140.18789976943, -15305.742114218854, true, undefined));
                scenicList.push(new Scenery("pineTree", 68126.67975224578, -15860.730574747968, true, undefined));
                scenicList.push(new Scenery("pineTree", 67978.00576788372, -16280.631150199739, true, undefined));
                scenicList.push(new Scenery("pineTree", 68449.33561497623, -16162.141624710055, true, undefined));
                scenicList.push(new Scenery("pineTree", 68311.95804795019, -16597.993499006323, true, undefined));

                change = "s1w7";
            }
        }
        else if (region == "s2w7") //Visig Forest
        {
            if (change != "s2w7")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                generator(46, 951, 467, 599, 199, 1, 78081, -14151); //forest in map s-2-w-7
                trimmer(70923.05583171644, -13833.298188164164, 70534.46569420704, -15616.384698471045, true, false);
                trimmer(78418.37564355148, -15323.636124333827, 70763.6841003665, -15628.413902439186, true, false);
                trimmer(78142.51983143283, -20021.056036797654, 77903.22222430418, -20239.64101419797, true, false);

                scenicList.push(new Scenery("pineTree", 66518.189475, -22230.8545,3.8391837028553146, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66770.733, -14434.66675,4.250056417708162, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67734.613125, -16875.65725,4.950089019964549, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67209.665325, -23846.139925,5.318492523086694, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66773.8998, -18751.045375,5.409305258659775, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66899.94, -18763.706725,2.0985109494854264, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67851.08955, -22910.962825000002,5.089182836802822, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67253.126925, -23495.5972,4.508262749494692, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67113.976875, -17454.42505,3.1429332186811596, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66860.944875, -20675.950825,1.1288302145572349, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67381.704075, -16853.27125,1.6920791777726265, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67691.483025, -22725.0703,4.367432382477975, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67692.7047, -17016.040675,4.2551968779275375, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66474.15555, -20811.7849,3.21162208131431, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66420.8016, -20670.6985,3.9941376622164615, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66768.5724, -15406.077775,2.731921525616615, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67429.404, -15936.138475,0.3779822387752593, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67482.322125, -18111.113875,1.323851979658145, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66776.310975, -20481.74935,5.114275387558962, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66609.40365, -21810.619749999998,3.408674249516336, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67047.924525, -18713.258275,0.9417180495053036, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67888.124925, -23101.70695,2.2006280231749535, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66786.043425, -19546.394800000002,0.28859943000845706, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67333.75065, -19501.777825,5.0432060228609945, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67198.4733, -19094.140075,1.3817808877365179, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67529.664225, -14990.6137,1.3944398066014985, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66580.743525, -19219.8361,0.16800316929764897, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66592.776, -19550.367925,5.445046716014881, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67362.523875, -23461.677925,0.1665590424372234, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66996.809175, -18334.04665,1.2348246094282826, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66807.263325, -19921.650849999998,4.515321051157335, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67337.922675, -17849.938675,5.092045646388863, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66880.88655, -19984.084000000003,1.5565787659091241, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67762.2495, -20497.73545,1.3316465118984708, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67196.55645, -20422.238275,2.103270708762233, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67177.788675, -15219.4891,1.8860451843412807, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67620.348975, -22375.4041,1.3340040082014508, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67416.242475, -22457.7097,0.6632889808606895, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67335.875175, -17263.628275,2.5248883022902273, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67609.881375, -21827.819725,2.4120021628263815, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67423.724625, -18724.765225,0.47493103769621364, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67444.355625, -15648.1303,3.402463926185073, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67482.548325, -22316.470224999997,3.781874146381909, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67336.9311, -19976.442925,3.578066478701726, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67728.42285, -21747.5158,4.774601480889188, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66845.502825, -16868.79325,2.426245380812415, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66753.825525, -15717.607825,6.0865342005361365, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67655.3388, -19898.138725,6.273629730315823, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66813.398025, -17047.600449999998,5.889939918535885, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67107.783675, -19413.319975,0.23697843274399316, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67655.246175, -20292.142075,5.2217438566354035, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67272.125775, -16412.27875,0.31911167554721676, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67203.273225, -22379.121775,2.815724593275752, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66805.2207, -21903.657175,0.6206993951994448, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66716.917875, -17893.73275,5.86731844130324, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66962.001675, -19802.838325,1.282044899365155, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67326.6624, -15795.328975,5.892701250573599, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67122.104475, -23826.259675,1.7604633904082048, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67381.975125, -17888.894800000002,1.8682984089471348, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66672.471525, -16531.424725,3.6290892636094827, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67634.52645, -15055.151875,2.0916802352827646, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66846.822975, -19034.284825,0.4596501977797856, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("kofkePlant", 67878.610875, -22470.766900000002,0.04120663684908436, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66938, -13550,-28.7, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67423, -13700,1.654, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 68201, -13828,-5, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67863, -13504,-9, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67275.76215547322, -21374.79500626647,-0.15, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67701.63212458185, -20940.13907014899,15, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("darbPlant", 67079.18021123904, -16079.318849854571,1.26, false, undefined)); //copied s2w6

                scenicList.push(new Scenery("pineTree", 78132.02154498016, -13989.686548211726, true, undefined));
                scenicList.push(new Scenery("pineTree", 77417.19175704995, -14145.986738123169, true, undefined));
                scenicList.push(new Scenery("pineTree", 75248.22101290649, -14069.724002669536, true, undefined));

                scenicList.push(new Scenery("pineTree", 72434.85344587606, -17572.323085546264, true, undefined));
                scenicList.push(new Scenery("pineTree", 72667.13207488095, -18661.465289841824, true, undefined));
                scenicList.push(new Scenery("pineTree", 69740.90103264112, -20709.781524518112, true, undefined));
                scenicList.push(new Scenery("pineTree", 70472.19032353937, -21121.846388462433, true, undefined));
                scenicList.push(new Scenery("pineTree", 70085.08699791554, -21712.325176731978, true, undefined));
                scenicList.push(new Scenery("pineTree", 69724.52081851977, -21159.55274163261, true, undefined));
                scenicList.push(new Scenery("pineTree", 69014.45636680684, -20706.94713763656, true, undefined));
                scenicList.push(new Scenery("pineTree", 68356.22393424856, -20777.6385086282, true, undefined));
                scenicList.push(new Scenery("pineTree", 67827.39681102712, -19199.83582597119, true, undefined));

                scenicList.push(new Scenery("pineTree", 75747.53341088437, -16563.946063480213, true, undefined));
                scenicList.push(new Scenery("pineTree", 75496.97327871258, -16864.842799877955, true, undefined));
                scenicList.push(new Scenery("pineTree", 75973.91920098921, -16999.582382939505, true, undefined));
                scenicList.push(new Scenery("pineTree", 76338.03289621204, -16819.52465683849, true, undefined));
                scenicList.push(new Scenery("pineTree", 75546.17020388438, -17355.636840783158, true, undefined));

                scenicList.push(new Scenery("pineTree", 68258.00184853325, -14518.634233565948, true, undefined));
                scenicList.push(new Scenery("pineTree", 69446.34471321676, -14284.87943066498, true, undefined));
                scenicList.push(new Scenery("pineTree", 69086.94860453416, -14051.021429418312, true, undefined));
                scenicList.push(new Scenery("pineTree", 67821.50720511012, -14141.788319092662, true, undefined));
                scenicList.push(new Scenery("pineTree", 67360.35253774474, -14079.648188285433, true, undefined));
                scenicList.push(new Scenery("pineTree", 67471.43801077022, -14515.852483814035, true, undefined));
                scenicList.push(new Scenery("pineTree", 68548.20398626427, -14979.029051382882, true, undefined));
                scenicList.push(new Scenery("pineTree", 68140.18789976943, -15305.742114218854, true, undefined));
                scenicList.push(new Scenery("pineTree", 68126.67975224578, -15860.730574747968, true, undefined));
                scenicList.push(new Scenery("pineTree", 67978.00576788372, -16280.631150199739, true, undefined));
                scenicList.push(new Scenery("pineTree", 68449.33561497623, -16162.141624710055, true, undefined));
                scenicList.push(new Scenery("pineTree", 68311.95804795019, -16597.993499006323, true, undefined));

                scenicList.push(new Scenery("web", 73850.1797046862, -17786.991137607172, -1, 2));
                scenicList.push(new Scenery("web", 73854.81928752804, -17884.06343432357, 1.12, 2.4));
                scenicList.push(new Scenery("web", 73778.32954882711, -17858.31087046487, 1.1, 2.45));
                scenicList.push(new Scenery("web", 73631.0202557692, -17796.563030721274, 5.56, 1.81));
                scenicList.push(new Scenery("web", 73651.25987734788, -17955.05355611866, 9, 1.95));
                scenicList.push(new Scenery("web", 73508.7284855165, -18004.50568824662, 4, 2.3));
                scenicList.push(new Scenery("web", 74041.6927134775, -17837.154599025933, 17, 2.2));
                scenicList.push(new Scenery("web", 73933.07326177179, -17720.33793349132, 2.92, 1.2));

                ArtificialIntelligenceAccess.push(new Unit(74041.6927134775, -17837.154599025933, "Etna", true, "Wollosh"));
                ArtificialIntelligenceAccess.push(new Unit(73778.32954882711, -17858.31087046487, "Etna", false, "Shulib"));
                ArtificialIntelligenceAccess.push(new Unit(73850.1797046862, -17786.991137607172, "Etna", false, "Shulib"));

                ArtificialIntelligenceAccess.push(new Unit(76182.22402305914, -16209.464135405882, "Etna", false, "Shulib"));


                scenicList.push(new Scenery("web", 76228.4404291861, -16191.085212137463, 1.55, 1.9));
                scenicList.push(new Scenery("web", 76064.83183128339, -16247.052445671412, -3.3, 2));
                scenicList.push(new Scenery("web", 76189.992249425, -16286.601799478354, -1.6, 1.7));
                scenicList.push(new Scenery("etnaEggSac", 76154.10693540273, -16236.7343369435, 13.1313, true));

                change = "s2w7";
            }
        }
        else if (region == "e1") //Y > 6290 && Y < 32370
        {
            if (change != "e1")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                //ArtificialIntelligenceAccess.push(new Unit(1300, 2000, "BlackBear", "giant", "Lugtug"));

                //Shehids in the forest
                ArtificialIntelligenceAccess.push(new Unit(-8690, 2326, "Shehid", false, "clamgirl"));
                ArtificialIntelligenceAccess.push(new Unit(-8880, 2875, "Shehid", false, "clamboy"));
                ArtificialIntelligenceAccess.push(new Unit(-8860, 3275, "Shehid", false, "berch"));
                ArtificialIntelligenceAccess.push(new Unit(-9490, 2941, "Shehid", false, "shamble"));
                ArtificialIntelligenceAccess.push(new Unit(-8216, 3766, "Shehid", false, "timbson"));
                ArtificialIntelligenceAccess.push(new Unit(-7519, 583, "Shehid", false, "timberly"));
                ArtificialIntelligenceAccess.push(new Unit(-7460, 544, "Shehid", false, "timbar"));
                ArtificialIntelligenceAccess.push(new Unit(-7480, 504, "Shehid", false, "timblin"));
                ArtificialIntelligenceAccess.push(new Unit(-8094, 739, "Shehid", false, "timblo"));
                ArtificialIntelligenceAccess.push(new Unit(-8005, 786, "Shehid", false, "timbla"));
                ArtificialIntelligenceAccess.push(new Unit(-8080, 646, "Shehid", false, "timbli"));
                ArtificialIntelligenceAccess.push(new Unit(-8066, 159, "Shehid", true, "timblik"));
                ArtificialIntelligenceAccess.push(new Unit(-10170, 4248, "Shehid", true, "liklim"));
                ArtificialIntelligenceAccess.push(new Unit(-9838, 4451, "Shehid", true, "ogklip"));
                ArtificialIntelligenceAccess.push(new Unit(-9715, 4227, "Shehid", true, "lipsorn"));
                ArtificialIntelligenceAccess.push(new Unit(-9198, 4538, "Shehid", false, "lipi"));
                ArtificialIntelligenceAccess.push(new Unit(-12332, -723, "Shehid", true, "lipthorn"));
                ArtificialIntelligenceAccess.push(new Unit(-12410, 4867, "Shehid", true, "galtong"));
                ArtificialIntelligenceAccess.push(new Unit(-11427, 3467, "Shehid", false, "tooblo"));
                ArtificialIntelligenceAccess.push(new Unit(-11470, 3506, "Shehid", false, "toobla"));
                ArtificialIntelligenceAccess.push(new Unit(-12564, -2860, "Shehid", true, "pipthorn"));
                ArtificialIntelligenceAccess.push(new Unit(-12354, -2884, "Shehid", false, "toobli"));
                ArtificialIntelligenceAccess.push(new Unit(-12334, -3126, "Shehid", false, "tooble"));
                ArtificialIntelligenceAccess.push(new Unit(-12465, -3230, "Shehid", false, "tooblu"));
                ArtificialIntelligenceAccess.push(new Unit(-8377, 568, "Shehid", false, "fooblo"));
                ArtificialIntelligenceAccess.push(new Unit(-8518, 319, "Shehid", false, "foobla"));
                ArtificialIntelligenceAccess.push(new Unit(-8555, 411, "Shehid", false, "foobli"));
                ArtificialIntelligenceAccess.push(new Unit(-8500, 627, "Shehid", false, "fooble"));
                ArtificialIntelligenceAccess.push(new Unit(-8293, 713, "Shehid", false, "fooblu"));
                ArtificialIntelligenceAccess.push(new Unit(-8410, 878, "Shehid", false, "kuabo"));
                ArtificialIntelligenceAccess.push(new Unit(-8955, 936, "Shehid", true, "ogklap"));
                ArtificialIntelligenceAccess.push(new Unit(-9056, -1588, "Shehid", true, "Giglap"));
                ArtificialIntelligenceAccess.push(new Unit(-8946, -1755, "Shehid", false, "Gigi"));
                ArtificialIntelligenceAccess.push(new Unit(-8867, -1724, "Shehid", false, "Giga"));
                ArtificialIntelligenceAccess.push(new Unit(-9251, -1724, "Shehid", false, "Gigil"));
                ArtificialIntelligenceAccess.push(new Unit(-9257, -1606, "Shehid", false, "Gigli"));
                ArtificialIntelligenceAccess.push(new Unit(-9463, 4504, "Shehid", false, "Giglo"));
                ArtificialIntelligenceAccess.push(new Unit(-9351, 4391, "Shehid", false, "Gigo"));
                ArtificialIntelligenceAccess.push(new Unit(-9404, 4137, "Shehid", true, "timbap"));
                ArtificialIntelligenceAccess.push(new Unit(-9062, 4191, "Shehid", false, "timbri"));
                ArtificialIntelligenceAccess.push(new Unit(-9270, 4377, "Shehid", false, "timbro"));
                ArtificialIntelligenceAccess.push(new Unit(-8787, 4040, "Shehid", false, "timbra"));

                //Ardils
                ArtificialIntelligenceAccess.push(new Unit(-3936, 5729, "Ardil", true, "Fannyfranfran"));
                ArtificialIntelligenceAccess.push(new Unit(-4277, 4587, "Ardil", false, "busybut"));

                //Vipers
                ArtificialIntelligenceAccess.push(new Unit(-9607, 2648, "Viper", false, "slitherz"));
                ArtificialIntelligenceAccess.push(new Unit(-11027, 239, "Viper", false, "Serpil"));

                //Lizards
                ArtificialIntelligenceAccess.push(new Unit(-8277, 1718, "Lizard", false, "Lizzy"));
                ArtificialIntelligenceAccess.push(new Unit(-9173, 1272, "Lizard", true, "Lizander"));
                ArtificialIntelligenceAccess.push(new Unit(-10079, 274, "Lizard", false, "Lizabeth"));
                ArtificialIntelligenceAccess.push(new Unit(-11443, 1183, "Lizard", false, "Lizzer"));
                ArtificialIntelligenceAccess.push(new Unit(-12784, 2278, "Lizard", true, "Lizzely"));
                ArtificialIntelligenceAccess.push(new Unit(-10461, -337, "Lizard", false, "Liza"));
                ArtificialIntelligenceAccess.push(new Unit(-9394, -1962, "Lizard", false, "Lizian"));
                ArtificialIntelligenceAccess.push(new Unit(-8182, -2325, "Lizard", true, "Lizel"));
                ArtificialIntelligenceAccess.push(new Unit(-7434, -2070, "Lizard", false, "Liz"));
                ArtificialIntelligenceAccess.push(new Unit(-9265, 5185, "Lizard", false, "Liziela"));
                ArtificialIntelligenceAccess.push(new Unit(-10220, 1426, "Lizard", true, "Lizalt"));
                ArtificialIntelligenceAccess.push(new Unit(-10284, 2670, "Lizard", false, "Liziana"));
                ArtificialIntelligenceAccess.push(new Unit(-12115, 1323, "Lizard", false, "Lizarina"));

                //Bees
                scenicList.push(new Scenery("beeHive", -8287 , 3377, 0, true));

                //Ulgoys
                scenicList.push(new Scenery("ulgoyPlant", -9580, 3557, 0, 3.2));
                ArtificialIntelligenceAccess.push(new Unit(-9569, 3566, "Ulgoy", true, "Venus"));
                scenicList.push(new Scenery("ulgoyPlant", -9125, 494, 0, 2));
                ArtificialIntelligenceAccess.push(new Unit(-9118, 497, "Ulgoy", false, "Trampa"));
                scenicList.push(new Scenery("ulgoyPlant", -11382, 351, 0, 1.15));
                ArtificialIntelligenceAccess.push(new Unit(-11379, 353, "Ulgoy", "baby", "Flytrap"));
                scenicList.push(new Scenery("ulgoyPlant", -11008, 568, 0, 1.15));
                ArtificialIntelligenceAccess.push(new Unit(-11005, 570, "Ulgoy", "baby", "Trap"));

                //narthwarps
                ArtificialIntelligenceAccess.push(new Unit(-11292, 3177, "Narthwarp", true, "krinklestitch"));
                ArtificialIntelligenceAccess.push(new Unit(-10291, -2926, "Narthwarp", false, "krinklestitchenheimerIII"));
                ArtificialIntelligenceAccess.push(new Unit(-10449, -2880, "Narthwarp", false, "krinklestitchenheimerII"));
                ArtificialIntelligenceAccess.push(new Unit(-10398, -3076, "Narthwarp", false, "krinklestitchenheimerI"));
                ArtificialIntelligenceAccess.push(new Unit(-12321, -1836, "Narthwarp", true, "Kacklkromf"));
                ArtificialIntelligenceAccess.push(new Unit(-12708, -1973, "Narthwarp", false, "kacklkromfenheimerI"));
                ArtificialIntelligenceAccess.push(new Unit(-12549, -1447, "Narthwarp", false, "kacklkromfenheimerII"));
                ArtificialIntelligenceAccess.push(new Unit(-12662, -1314, "Narthwarp", false, "kacklkromfenheimerIII"));
                ArtificialIntelligenceAccess.push(new Unit(-9366, -1072, "Narthwarp", false, "Mokinshanks"));
                ArtificialIntelligenceAccess.push(new Unit(-9330, -1403, "Narthwarp", false, "Kronkenstocks"));
                ArtificialIntelligenceAccess.push(new Unit(-8989, -1015, "Narthwarp", false, "Bokinshanks"));
                ArtificialIntelligenceAccess.push(new Unit(-9117, -713, "Narthwarp", false, "Fronkenstocks"));

                //Varns of the woodlands
                ArtificialIntelligenceAccess.push(new Unit(-7847, -139, "Varn", true, "rain"));
                ArtificialIntelligenceAccess.push(new Unit(-7462, -39, "Varn", true, "sun"));
                ArtificialIntelligenceAccess.push(new Unit(-7105, -695, "Varn", false, "snow"));
                ArtificialIntelligenceAccess.push(new Unit(-8007, -989, "Varn", true, "wind"));
                ArtificialIntelligenceAccess.push(new Unit(-10694, 2278, "Varn", true, "si"));
                ArtificialIntelligenceAccess.push(new Unit(-11065, 2029, "Varn", true, "no"));
                ArtificialIntelligenceAccess.push(new Unit(-10738, 2083, "Varn", true, "gracias"));
                ArtificialIntelligenceAccess.push(new Unit(-11350, 2166, "Varn", false, "denada"));
                ArtificialIntelligenceAccess.push(new Unit(-11276, 1877, "Varn", true, "todos"));
                ArtificialIntelligenceAccess.push(new Unit(-10630, 2151, "Varn", false, "ningunos"));
                ArtificialIntelligenceAccess.push(new Unit(-7303, -3040, "Varn", true, "hail"));
                ArtificialIntelligenceAccess.push(new Unit(-7116, -3121, "Varn", true, "storm"));
                ArtificialIntelligenceAccess.push(new Unit(-6537, -3078, "Varn", true, "will"));
                ArtificialIntelligenceAccess.push(new Unit(-6983, -2796, "Varn", true, "eatyou"));
                ArtificialIntelligenceAccess.push(new Unit(-11059, -839, "Varn", true, "wewill"));
                ArtificialIntelligenceAccess.push(new Unit(-11155, -958, "Varn", false, "wewil"));
                ArtificialIntelligenceAccess.push(new Unit(-11311, -1134, "Varn", true, "lrock"));
                ArtificialIntelligenceAccess.push(new Unit(-11420, -1109, "Varn", false, "you!"));
                ArtificialIntelligenceAccess.push(new Unit(-11613, -1079, "Varn", false, "Living"));
                ArtificialIntelligenceAccess.push(new Unit(-11783, -1025, "Varn", true, "ona"));
                ArtificialIntelligenceAccess.push(new Unit(-11664, -901, "Varn", true, "sunnybeach"));
                ArtificialIntelligenceAccess.push(new Unit(-11890, -897, "Varn", true, "heckyeah!!!"));
                ArtificialIntelligenceAccess.push(new Unit(-7175, 5260, "Varn", true, "johny"));
                ArtificialIntelligenceAccess.push(new Unit(-7497, 5379, "Varn", true, "james"));
                ArtificialIntelligenceAccess.push(new Unit(-7517, 5188, "Varn", true, "jillian"));
                ArtificialIntelligenceAccess.push(new Unit(-7513, 4941, "Varn", true, "jude"));
                ArtificialIntelligenceAccess.push(new Unit(-7374, 4660, "Varn", true, "julian"));
                ArtificialIntelligenceAccess.push(new Unit(-7625, 4700, "Varn", true, "july"));
                ArtificialIntelligenceAccess.push(new Unit(-6621, 4758, "Varn", true, "jekkle"));
                ArtificialIntelligenceAccess.push(new Unit(-6580, 4418, "Varn", false, "jazz"));
                ArtificialIntelligenceAccess.push(new Unit(-6799, 3911, "Varn", true, "June"));
                ArtificialIntelligenceAccess.push(new Unit(-7090, 3991, "Varn", false, "Jed"));
                ArtificialIntelligenceAccess.push(new Unit(-6317, 204, "Varn", true, "Tal"));
                ArtificialIntelligenceAccess.push(new Unit(-6594, 46, "Varn", true, "Til"));
                ArtificialIntelligenceAccess.push(new Unit(-7581, -1658, "Varn", true, "Tyl"));
                ArtificialIntelligenceAccess.push(new Unit(-7128, 1989, "Varn", false, "Tol"));
                ArtificialIntelligenceAccess.push(new Unit(-5986, 2947, "Varn", true, "Tul"));
                ArtificialIntelligenceAccess.push(new Unit(-6329, -3246, "Varn", false, "Tel"));
                ArtificialIntelligenceAccess.push(new Unit(-5897, -3461, "Varn", false, "Tela"));
                ArtificialIntelligenceAccess.push(new Unit(-4240, -1519, "Varn", true, "Tula"));

                //lions tigers and BLACKBEARS oh my!
                ArtificialIntelligenceAccess.push(new Unit(-11630, 5669, "BlackBear", true, "Jugtug"));
                ArtificialIntelligenceAccess.push(new Unit(-12041, 4710, "BlackBear", false, "Yugtug"));
                ArtificialIntelligenceAccess.push(new Unit(-12275, 4426, "BlackBear", true, "Pugtug"));
                ArtificialIntelligenceAccess.push(new Unit(-12170, 6191, "BlackBear", false, "Tugtug"));
                ArtificialIntelligenceAccess.push(new Unit(-7769, 640, "BlackBear", false, "Hugtug"));
                ArtificialIntelligenceAccess.push(new Unit(-12765, -2427, "BlackBear", true, "Nugtug"));
                ArtificialIntelligenceAccess.push(new Unit(-9195, -3204, "BlackBear", false, "Luvtug"));
                ArtificialIntelligenceAccess.push(new Unit(-11660, -1679, "BlackBear", false, "Duvtuv"));
                ArtificialIntelligenceAccess.push(new Unit(-12407, -86, "BlackBear", false, "Guvtug"));
                ArtificialIntelligenceAccess.push(new Unit(-12203, 677, "BlackBear", false, "Ruvtuv"));
                ArtificialIntelligenceAccess.push(new Unit(-12686, 843, "BlackBear", true, "Mugtug"));
                ArtificialIntelligenceAccess.push(new Unit(-8550, 6131, "BlackBear", true, "Grugtug"));
                ArtificialIntelligenceAccess.push(new Unit(-8251, 5968, "BlackBear", false, "Yuvtuv"));
                ArtificialIntelligenceAccess.push(new Unit(-10860, 5750, "BlackBear", false, "Juvtuv"));
                ArtificialIntelligenceAccess.push(new Unit(-9664, -2658, "BlackBear", true, "Ugug"));

                //ferocious gribs...
                ArtificialIntelligenceAccess.push(new Unit(-11836, 3742, "Grib", true, "stuckan"));
                ArtificialIntelligenceAccess.push(new Unit(-11601, 3904, "Grib", true, "frukkan"));
                ArtificialIntelligenceAccess.push(new Unit(-9993, 3965, "Grib", true, "fuckan"));
                ArtificialIntelligenceAccess.push(new Unit(-7932, -2046, "Grib", false, "lucytoodlewop"));
                ArtificialIntelligenceAccess.push(new Unit(-8480, -1979, "Grib", false, "mandybibblbop"));
                ArtificialIntelligenceAccess.push(new Unit(-7960, -2824, "Grib", true, "buckan"));
                ArtificialIntelligenceAccess.push(new Unit(-11080, -3075, "Grib", true, "truckan"));
                ArtificialIntelligenceAccess.push(new Unit(-11318, -3167, "Grib", true, "krukkan"));
                ArtificialIntelligenceAccess.push(new Unit(-11579, -3048, "Grib", false, "tucytoodletop"));
                ArtificialIntelligenceAccess.push(new Unit(-13110, -514, "Grib", true, "Gruckan"));
                ArtificialIntelligenceAccess.push(new Unit(-9919, 5837, "Grib", false, "Gucytoodlewop"));
                ArtificialIntelligenceAccess.push(new Unit(-9269, 5971, "Grib", false, "Tandybibblbop"));
                ArtificialIntelligenceAccess.push(new Unit(-9446, 5542, "Grib", false, "Quilcytoodlewop"));
                ArtificialIntelligenceAccess.push(new Unit(-9827, 5637, "Grib", false, "Vandybibblbop"));
                ArtificialIntelligenceAccess.push(new Unit(-6214, 3512, "Grib", true, "Vandybibblbeed"));

                //naaprids of the southern grasslands
                ArtificialIntelligenceAccess.push(new Unit(-5031, -2683, "Naaprid", "baby", "Naarimo"));
                ArtificialIntelligenceAccess.push(new Unit(-4966, -2960, "Naaprid", false, "Naaste"));
                ArtificialIntelligenceAccess.push(new Unit(-5207, -2871, "Naaprid", false, "kaaste"));
                ArtificialIntelligenceAccess.push(new Unit(-5169, -3136, "Naaprid", false, "Laaste"));
                ArtificialIntelligenceAccess.push(new Unit(-3817, -3336, "Naaprid", false, "phaashe"));
                ArtificialIntelligenceAccess.push(new Unit(-4940, -2567, "Naaprid", true, "Yaahmo"));

                //friches of the grasslands before the wuncwer woods
                ArtificialIntelligenceAccess.push(new Unit(-3891, -2492, "Frich", false, "Sansa"));
                ArtificialIntelligenceAccess.push(new Unit(-3961, -2617, "Frich", false, "Aria"));

                if (player.level > 8 && player.level < 13 || Math.floor(Math.random() * 9) == 8) // summon giant friches if between these levels.
                {
                    ArtificialIntelligenceAccess.push(new Unit(-5441, -2609, "Frich", "massive", "Edard"));
                    ArtificialIntelligenceAccess.push(new Unit(-5434, -2411, "Frich", "massive", "Robert"));
                    ArtificialIntelligenceAccess.push(new Unit(-5570, -2522, "Frich", "massive", "Stannis"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(-3797, -2540, "Frich", true, "Edard"));
                    ArtificialIntelligenceAccess.push(new Unit(-5434, -2411, "Frich", false, "Robert"));
                    ArtificialIntelligenceAccess.push(new Unit(-5342, -2290, "Frich", false, "Stannis"));
                }
                ArtificialIntelligenceAccess.push(new Unit(-5110, -2116, "Frich", false, "Renely"));

                ArtificialIntelligenceAccess.push(new Unit(-5334, -1338, "Frich", true, "Tjon"));
                ArtificialIntelligenceAccess.push(new Unit(-5593, -1410, "Frich", false, "Sam"));
                ArtificialIntelligenceAccess.push(new Unit(-5990, -910, "Frich", false, "RedDeadWalder"));
                ArtificialIntelligenceAccess.push(new Unit(-5508, -566, "Frich", true, "Robbstar"));

                ArtificialIntelligenceAccess.push(new Unit(-4086, 159, "Frich", true, "Ramsay"));
                ArtificialIntelligenceAccess.push(new Unit(-4591, -361, "Frich", false, "Umber"));
                ArtificialIntelligenceAccess.push(new Unit(-4428, -2500, "Frich", false, "Tormund"));
                ArtificialIntelligenceAccess.push(new Unit(-5508, -566, "Frich", true, "Daavos"));

                ArtificialIntelligenceAccess.push(new Unit(-4318, -3341, "Frich", false, "inspector"));
                ArtificialIntelligenceAccess.push(new Unit(-4688, -3525, "Frich", true, "Harold"));
                ArtificialIntelligenceAccess.push(new Unit(-5143, 2663, "Frich", true, "gadget"));
                ArtificialIntelligenceAccess.push(new Unit(-4428, 2433, "Frich", true, "toolbox"));

                ArtificialIntelligenceAccess.push(new Unit(-4757, 4016, "Frich", true, "Gizmo"));
                ArtificialIntelligenceAccess.push(new Unit(-5201, 5973, "Frich", true, "Gear"));

                //Trees of the forest
                scenicList.push(new Scenery("pineTree", -7703 , 1761, Math.PI, true));
                scenicList.push(new Scenery("pineTree", -7319 , 2158, Math.PI * 0.63, true));
                scenicList.push(new Scenery("pineTree", -7918 , 2493, 0, true));
                scenicList.push(new Scenery("pineTree", -7110 , 2531, Math.PI * 1.45, true));
                scenicList.push(new Scenery("pineTree", -7087 , 2950, - Math.PI * 0.19, true));
                scenicList.push(new Scenery("pineTree", -7632 , 2872, 0.19, true));
                scenicList.push(new Scenery("pineTree", -7427 , 3301, 1.87 * Math.PI, true));
                scenicList.push(new Scenery("pineTree", -7061 , 3661, - Math.PI * 1.33, true));
                scenicList.push(new Scenery("pineTree", -7800 , 3550, - 0.25, true));
                scenicList.push(new Scenery("pineTree", -8284 , 3238, Math.PI * 1.61, true));
                scenicList.push(new Scenery("pineTree", -8340 , 2685, - Math.PI * 0.91, true));
                scenicList.push(new Scenery("pineTree", -8155 , 2015, 0.32, true));
                scenicList.push(new Scenery("pineTree", -7714 , 3982, Math.PI, true));
                scenicList.push(new Scenery("pineTree", -8399 , 3798, Math.PI * 0.63, true));
                scenicList.push(new Scenery("pineTree", -8743 , 3450, 0, true));
                scenicList.push(new Scenery("pineTree", -8926 , 2996, Math.PI * 1.45, true));
                scenicList.push(new Scenery("pineTree", -8743 , 2291, Math.PI * 0.72, true));
                scenicList.push(new Scenery("pineTree", -8525 , 1670, - 0.39, true));
                scenicList.push(new Scenery("pineTree", -9151 , 1782, 1.98 * Math.PI, true));
                scenicList.push(new Scenery("pineTree", -9362 , 2188, Math.PI * 1.53, true));
                scenicList.push(new Scenery("pineTree", -9395 , 2720, - 0.50, true));
                scenicList.push(new Scenery("pineTree", -9642 , 3192, - Math.PI * 1.20, true));
                scenicList.push(new Scenery("pineTree", -9325 , 3380, Math.PI * 0.33, true));
                scenicList.push(new Scenery("pineTree", -9090 , 3989, - 0.77, true));
                scenicList.push(new Scenery("pineTree", -7316 , 1029, Math.PI, true));
                scenicList.push(new Scenery("pineTree", -7765 , 940, Math.PI * 0.63, true));
                scenicList.push(new Scenery("pineTree", -7479 , 711, 0, true));
                scenicList.push(new Scenery("pineTree", -7994 , 834, Math.PI * 1.45, true));
                scenicList.push(new Scenery("pineTree", -7514 , 458, - Math.PI * 0.19, true));
                scenicList.push(new Scenery("pineTree", -8097 , 566, 0.19, true));
                scenicList.push(new Scenery("pineTree", -7160 , 59, - Math.PI * 1.33, true));
                scenicList.push(new Scenery("pineTree", -7969 , 87, 1.87 * Math.PI, true));
                scenicList.push(new Scenery("pineTree", -8431 , 160, - 0.25, true));
                scenicList.push(new Scenery("pineTree", -8451 , 4238, Math.PI * 1.61, true));
                scenicList.push(new Scenery("pineTree", -8741 , 4800, - Math.PI * 0.91, true));
                scenicList.push(new Scenery("pineTree", -9093 , 4430, 0.32, true));
                scenicList.push(new Scenery("pineTree", -9666 , 4132, Math.PI, true));
                scenicList.push(new Scenery("pineTree", -9920 , 3648, Math.PI * 0.63, true));
                scenicList.push(new Scenery("pineTree", -10249 , 3374, 0, true));
                scenicList.push(new Scenery("pineTree", -9999 , 2766, Math.PI * 1.45, true));
                scenicList.push(new Scenery("pineTree", -9820 , 2337, Math.PI * 0.72, true));
                scenicList.push(new Scenery("pineTree", -10049 , 1824, - 0.39, true));
                scenicList.push(new Scenery("pineTree", -9652 , 1798, 1.98 * Math.PI, true));
                scenicList.push(new Scenery("pineTree", -8554 , 925, Math.PI * 1.53, true));
                scenicList.push(new Scenery("pineTree", -8781 , 522, - 0.50, true));
                scenicList.push(new Scenery("pineTree", -9014 , 39, - Math.PI * 1.20, true));
                scenicList.push(new Scenery("pineTree", -8653 , -317, Math.PI * 0.33, true));
                scenicList.push(new Scenery("pineTree", -7708 , -319, - 0.77, true));
                scenicList.push(new Scenery("pineTree", -8189 , -266, 0.56, true));
                scenicList.push(new Scenery("pineTree", -7885 , -733, 0.995, true));
                scenicList.push(new Scenery("pineTree", -7896 , -1224, - Math.PI * 0.666, true));
                scenicList.push(new Scenery("pineTree", -8270 , -971, 0.454545, true));
                scenicList.push(new Scenery("pineTree", -8702 , -727, - 0.126, true));
                scenicList.push(new Scenery("pineTree", -9432 , -354, 0.65, true));
                scenicList.push(new Scenery("pineTree", -8519 , 5313, Math.PI * 0.21, true));
                scenicList.push(new Scenery("pineTree", -9431 , 4798, - 0.283, true));
                scenicList.push(new Scenery("pineTree", -9919 , 4570, -0.19, true));
                scenicList.push(new Scenery("pineTree", -10308 , 4227, 0.26, true));
                scenicList.push(new Scenery("pineTree", -10453 , 3825, 0.066, true));
                scenicList.push(new Scenery("pineTree", -10923 , 4107, Math.PI, true));
                scenicList.push(new Scenery("pineTree", -11056 , 3599, Math.PI * 0.63, true));
                scenicList.push(new Scenery("pineTree", -10740 , 3190, 0, true));
                scenicList.push(new Scenery("pineTree", -10583 , 2834, Math.PI * 1.55, true));
                scenicList.push(new Scenery("pineTree", -10612 , 2370, - Math.PI * 0.19, true));
                scenicList.push(new Scenery("pineTree", -10448 , 2047, 0.16, true));
                scenicList.push(new Scenery("pineTree", -10572 , 1661, 1.93 * Math.PI, true));
                scenicList.push(new Scenery("pineTree", -10953 , 1579, - Math.PI * 1.33, true));
                scenicList.push(new Scenery("pineTree", -11358 , 3550, - 0.25, true));
                scenicList.push(new Scenery("pineTree", -12008 , 1780, Math.PI * 1.61, true));
                scenicList.push(new Scenery("pineTree", -11401 , 1922, - Math.PI * 0.91, true));
                scenicList.push(new Scenery("pineTree", -11539 , 1630, 0.32, true));
                scenicList.push(new Scenery("pineTree", -12573 , 1643, Math.PI, true));
                scenicList.push(new Scenery("pineTree", -12635 , 2024, Math.PI * 0.63, true));
                scenicList.push(new Scenery("pineTree", -12515 , 2375, 0.1, true));
                scenicList.push(new Scenery("pineTree", -11440 , 2401, -48.1, true));
                scenicList.push(new Scenery("pineTree", -10936 , 2016, Math.PI * 1.45, true));
                scenicList.push(new Scenery("pineTree", -11183 , 2742, Math.PI * 0.72, true));
                scenicList.push(new Scenery("pineTree", -11025 , 2984, - 0.39, true));
                scenicList.push(new Scenery("pineTree", -11590 , 3174, 1.98 * Math.PI, true));
                scenicList.push(new Scenery("pineTree", -11921 , 3713, Math.PI * 1.53, true));
                scenicList.push(new Scenery("pineTree", -11604 , 3829, - 0.50, true));
                scenicList.push(new Scenery("pineTree", -11311 , 3952, - Math.PI * 1.20, true));
                scenicList.push(new Scenery("pineTree", -11245 , 4527, Math.PI * 0.33, true));
                scenicList.push(new Scenery("pineTree", -10739 , 4526, - 0.80, true));
                scenicList.push(new Scenery("pineTree", -10336 , 4787, Math.PI, true));
                scenicList.push(new Scenery("pineTree", -9734 , 5002, Math.PI * 0.65, true));
                scenicList.push(new Scenery("pineTree", -10894 , 4991, -Math.PI * 1.25, true));
                scenicList.push(new Scenery("pineTree", -10183 , 5372, - Math.PI * 0.19, true));
                scenicList.push(new Scenery("pineTree", -9067 , 5036, 0.995, true));
                scenicList.push(new Scenery("pineTree", -9449 , 5429, Math.PI * 1.45, true));
                scenicList.push(new Scenery("pineTree", -8885 , 5550, - Math.PI * 0.19, true));
                scenicList.push(new Scenery("pineTree", -8545 , 5837, - Math.PI * 0.50, true));
                scenicList.push(new Scenery("pineTree", -9187 , 6047, - 0.25, true));
                scenicList.push(new Scenery("pineTree", -9077 , 6365, Math.PI * 0.33, true));
                scenicList.push(new Scenery("pineTree", -8313 , 6303, Math.PI * 1.24, true));
                scenicList.push(new Scenery("pineTree", -7475 , 6291, 0.27, true));
                scenicList.push(new Scenery("pineTree", -7921 , 6103, - 0.40, true));
                scenicList.push(new Scenery("pineTree", -7804 , 5809, Math.PI * 0.20, true));
                scenicList.push(new Scenery("pineTree", -9923 , 5734, 0.2, true));
                scenicList.push(new Scenery("pineTree", -9864 , 6233, Math.PI * 1.24, true));
                scenicList.push(new Scenery("pineTree", -10591 , 6072, - Math.PI * 0.19, true));
                scenicList.push(new Scenery("pineTree", -10783 , 6306, - Math.PI * 1.33, true));
                scenicList.push(new Scenery("pineTree", -11250 , 5783, 1.87 * Math.PI, true));
                scenicList.push(new Scenery("pineTree", -11392 , 4881, - 0.25, true));
                scenicList.push(new Scenery("pineTree", -11725 , 4243, Math.PI * 1.61, true));
                scenicList.push(new Scenery("pineTree", -12296 , 4005, - Math.PI * 0.91, true));
                scenicList.push(new Scenery("pineTree", -12193 , 3257, 0.32, true));
                scenicList.push(new Scenery("pineTree", -11689 , 2800, Math.PI, true));
                scenicList.push(new Scenery("pineTree", -11972 , 2192, Math.PI * 0.63, true));
                scenicList.push(new Scenery("pineTree", -10249 , 3374, 0, true));
                scenicList.push(new Scenery("pineTree", -12220 , 2789, Math.PI * 1.45, true));
                scenicList.push(new Scenery("pineTree", -12853 , 2723, Math.PI * 0.72, true));
                scenicList.push(new Scenery("pineTree", -10049 , 1824, - 0.39, true));
                scenicList.push(new Scenery("pineTree", -13093 , 2211, 1.98 * Math.PI, true));
                scenicList.push(new Scenery("pineTree", -13164 , 1675, Math.PI * 1.53, true));
                scenicList.push(new Scenery("pineTree", -10576 , 5660, - 0.50, true));
                scenicList.push(new Scenery("pineTree", -11448 , 5333, - Math.PI * 1.20, true));
                scenicList.push(new Scenery("pineTree", -11935 , 4582, - 0.77, true));
                scenicList.push(new Scenery("pineTree", -11526 , 6213, 0.56, true));
                scenicList.push(new Scenery("pineTree", -11860 , 6012, 0.995, true));
                scenicList.push(new Scenery("pineTree", -12024 , 5545, - Math.PI * 0.666, true));
                scenicList.push(new Scenery("pineTree", -11899 , 5050, 0.454545, true));
                scenicList.push(new Scenery("pineTree", -12542 , 6099, - 0.126, true));
                scenicList.push(new Scenery("pineTree", -12891 , 5725, 0.65, true));
                scenicList.push(new Scenery("pineTree", -13251 , 6393, Math.PI * 0.21, true));
                scenicList.push(new Scenery("pineTree", -12082 , 6404, - 0.283, true));
                scenicList.push(new Scenery("pineTree", -12650 , 5221, -0.19, true));
                scenicList.push(new Scenery("pineTree", -13097 , 4946, 0.26, true));
                scenicList.push(new Scenery("pineTree", -12725 , 4595, 0.066, true));
                scenicList.push(new Scenery("pineTree", -13011 , 3906, - 0.40, true));
                scenicList.push(new Scenery("pineTree", -12663 , 3593, Math.PI * 0.20, true));
                scenicList.push(new Scenery("pineTree", -13022 , 3142, 0.2, true));
                scenicList.push(new Scenery("pineTree", -12583 , 3044, 0.32, true));
                scenicList.push(new Scenery("pineTree", -9214 , 892, -Math.PI * 1.25, true));
                scenicList.push(new Scenery("pineTree", -9615 , 1045, - Math.PI * 0.19, true));
                scenicList.push(new Scenery("pineTree", -9823 , 20, 0.995, true));
                scenicList.push(new Scenery("pineTree", -8217 , -1658, - Math.PI * 0.50, true));
                scenicList.push(new Scenery("pineTree", -7891 , -1934, - 0.25, true));
                scenicList.push(new Scenery("pineTree", -7370 , -2314, Math.PI * 0.33, true));
                scenicList.push(new Scenery("pineTree", -7139 , -3469, Math.PI * 1.24, true));
                scenicList.push(new Scenery("pineTree", -7245 , -3134, 0.27, true));
                scenicList.push(new Scenery("pineTree", -9322 , 437, - 0.40, true));
                scenicList.push(new Scenery("pineTree", -10063 , 713, Math.PI * 0.20, true));
                scenicList.push(new Scenery("pineTree", -10309 , 243, 0.2, true));
                scenicList.push(new Scenery("pineTree", -9978 , -465, Math.PI * 1.24, true));
                scenicList.push(new Scenery("pineTree", -9245 , -705, - Math.PI * 0.19, true));
                scenicList.push(new Scenery("pineTree", -8896 , -1116, - Math.PI * 1.33, true));
                scenicList.push(new Scenery("pineTree", -11250 , 5783, 1.87 * Math.PI, true));
                scenicList.push(new Scenery("pineTree", -8684 , -1417, - 0.25, true));
                scenicList.push(new Scenery("pineTree", -8455 , -2074, Math.PI * 1.61, true));
                scenicList.push(new Scenery("pineTree", -7879 , -2381, - Math.PI * 0.91, true));
                scenicList.push(new Scenery("pineTree", -7395 , -2737, 0.32, true));
                scenicList.push(new Scenery("pineTree", -7737 , -3007, Math.PI, true));
                scenicList.push(new Scenery("pineTree", -7693 , -3388, Math.PI * 0.63, true));
                scenicList.push(new Scenery("pineTree", -8189 , -2732, 0, true));
                scenicList.push(new Scenery("pineTree", -8213 , -3275, Math.PI * 1.45, true));
                scenicList.push(new Scenery("pineTree", -8500 , -3458, Math.PI * 0.72, true));
                scenicList.push(new Scenery("pineTree", -8904 , -3271, - 0.39, true));
                scenicList.push(new Scenery("pineTree", -9120 , -3546, 1.98 * Math.PI, true));
                scenicList.push(new Scenery("pineTree", -9665 , -3381, Math.PI * 1.53, true));
                scenicList.push(new Scenery("pineTree", -9772 , -2970, - 0.50, true));
                scenicList.push(new Scenery("pineTree", -9539 , -2410, - Math.PI * 1.20, true));
                scenicList.push(new Scenery("pineTree", -9194 , -2915, - 0.77, true));
                scenicList.push(new Scenery("pineTree", -8634 , -2906, 0.56, true));
                scenicList.push(new Scenery("pineTree", -8846 , -2378, 0.995, true));
                scenicList.push(new Scenery("pineTree", -9027 , -1800, - Math.PI * 0.666, true));
                scenicList.push(new Scenery("pineTree", -9454 , -1422, 0.454545, true));
                scenicList.push(new Scenery("pineTree", -10054 , -1709, - 0.126, true));
                scenicList.push(new Scenery("pineTree", -10143 , -2230, 0.65, true));
                scenicList.push(new Scenery("pineTree", -10155 , -2715, Math.PI * 0.21, true));
                scenicList.push(new Scenery("pineTree", -10087 , -3247, - 0.283, true));
                scenicList.push(new Scenery("pineTree", -10340 , -3485, -0.19, true));
                scenicList.push(new Scenery("pineTree", -10708 , -3304, 0.26, true));
                scenicList.push(new Scenery("pineTree", -10591 , 557, 0.066, true));
                scenicList.push(new Scenery("pineTree", -10433 , 990, - 0.40, true));
                scenicList.push(new Scenery("pineTree", -11134 , 889, Math.PI * 0.20, true));
                scenicList.push(new Scenery("pineTree", -10553 , -117, 0.23467, true));
                scenicList.push(new Scenery("pineTree", -10620 , -573, 0.37, true));
                scenicList.push(new Scenery("pineTree", -11684 , 1035, 0.19, true));
                scenicList.push(new Scenery("pineTree", -11574 , 557, 1.87 * Math.PI, true));
                scenicList.push(new Scenery("pineTree", -11037 , 319, - Math.PI * 1.33, true));
                scenicList.push(new Scenery("pineTree", -11063 , -160, - 0.25, true));
                scenicList.push(new Scenery("pineTree", -11296 , -475, Math.PI * 1.61, true));
                scenicList.push(new Scenery("pineTree", -10957 , -904, - Math.PI * 0.91, true));
                scenicList.push(new Scenery("pineTree", -10408 , -1066, 0.32, true));
                scenicList.push(new Scenery("pineTree", -9813 , -855, Math.PI, true));
                scenicList.push(new Scenery("pineTree", -10063 , -1277, Math.PI * 0.63, true));
                scenicList.push(new Scenery("pineTree", -10673 , -2910, 0, true));
                scenicList.push(new Scenery("pineTree", -11317 , -3284, Math.PI * 1.45, true));
                scenicList.push(new Scenery("pineTree", -12008 , -3076, Math.PI * 0.72, true));
                scenicList.push(new Scenery("pineTree", -12445 , -3415, - 0.39, true));
                scenicList.push(new Scenery("pineTree", -10452 , -1525, 1.98 * Math.PI, true));
                scenicList.push(new Scenery("pineTree", -10634 , -1999, Math.PI * 1.53, true));
                scenicList.push(new Scenery("pineTree", -10572 , -2536, - 0.50, true));
                scenicList.push(new Scenery("pineTree", -11802 , -3406, - Math.PI * 1.20, true));
                scenicList.push(new Scenery("pineTree", -12137 , 1018, Math.PI * 0.33, true));
                scenicList.push(new Scenery("pineTree", -13073 , -3473, - 0.77, true));
                scenicList.push(new Scenery("pineTree", -12807 , -3020, Math.PI, true));
                scenicList.push(new Scenery("pineTree", -13094 , -2621, Math.PI * 0.63, true));
                scenicList.push(new Scenery("pineTree", -12440 , -2139, 0, true));
                scenicList.push(new Scenery("pineTree", -12634 , 915, Math.PI * 1.45, true));
                scenicList.push(new Scenery("pineTree", -13149 , 1028, - Math.PI * 0.19, true));
                scenicList.push(new Scenery("pineTree", -12778 , 670, 0.19, true));
                scenicList.push(new Scenery("pineTree", -13103 , 381, - Math.PI * 1.33, true));
                scenicList.push(new Scenery("pineTree", -12750 , 128, 1.87 * Math.PI, true));
                scenicList.push(new Scenery("pineTree", -13105 , -609, - 0.25, true));
                scenicList.push(new Scenery("pineTree", -12693 , -1046, Math.PI * 1.61, true));
                scenicList.push(new Scenery("pineTree", -12994 , -1378, - Math.PI * 0.91, true));
                scenicList.push(new Scenery("pineTree", -12778 , -1823, 0.32, true));
                scenicList.push(new Scenery("pineTree", -13100 , -1978, Math.PI, true));
                scenicList.push(new Scenery("pineTree", -12501 , -2696, Math.PI * 0.63, true));
                scenicList.push(new Scenery("pineTree", -12004 , -2395, 0, true));
                scenicList.push(new Scenery("pineTree", -11552 , -2709, Math.PI * 1.45, true));
                scenicList.push(new Scenery("pineTree", -11084 , -2969, Math.PI * 0.72, true));
                scenicList.push(new Scenery("pineTree", -11138 , -2620, - 0.39, true));
                scenicList.push(new Scenery("pineTree", -11009 , -1658, 1.98 * Math.PI, true));
                scenicList.push(new Scenery("pineTree", -10875 , -1273, Math.PI * 1.53, true));
                scenicList.push(new Scenery("pineTree", -11771 , -879, - 0.50, true));
                scenicList.push(new Scenery("pineTree", -11539 , -11, - Math.PI * 1.20, true));
                scenicList.push(new Scenery("pineTree", -13155 , -213, Math.PI * 0.63, true));
                scenicList.push(new Scenery("pineTree", -12654 , -352, 0, true));
                scenicList.push(new Scenery("pineTree", -12388 , -742, Math.PI * 1.45, true));
                scenicList.push(new Scenery("pineTree", -12297 , -1401, Math.PI * 0.72, true));
                scenicList.push(new Scenery("pineTree", -12041 , -1866, - 0.39, true));
                scenicList.push(new Scenery("pineTree", -11418 , -2293, 1.98 * Math.PI, true));
                scenicList.push(new Scenery("pineTree", -11077 , -2148, Math.PI * 1.53, true));
                scenicList.push(new Scenery("pineTree", -11568 , -1864, - 0.50, true));
                scenicList.push(new Scenery("pineTree", -11381 , -1227, - Math.PI * 1.20, true));
                scenicList.push(new Scenery("pineTree", -12263 , -638, - 0.77, true));
                scenicList.push(new Scenery("pineTree", -11751 , -1497, Math.PI * 0.68, true));
                scenicList.push(new Scenery("pineTree", -12002 , -324, -0.454545, true));
                scenicList.push(new Scenery("pineTree", -12193 , 88, - 0.126, true));
                scenicList.push(new Scenery("pineTree", -12332 , 430, 0.54, true));
                scenicList.push(new Scenery("pineTree", -12017 , 569, Math.PI * 0.21, true));

                //replacement trees of the map s1e1
                scenicList.push(new Scenery("pineTree", -7583 , -3885, 1.2, true));
                scenicList.push(new Scenery("pineTree", -8065 , -3688, -3, true));
                scenicList.push(new Scenery("pineTree", -8710 , -3916, -2.5, true));
                scenicList.push(new Scenery("pineTree", -9578 , -3837, 4, true));
                scenicList.push(new Scenery("pineTree", -10111 , -3906, -5, true));
                scenicList.push(new Scenery("pineTree", -11025 , -3706, 2.6, true));
                scenicList.push(new Scenery("pineTree", -11548 , -3882, 5.2, true));
                scenicList.push(new Scenery("pineTree", -12132 , -3725, -1, true));
                scenicList.push(new Scenery("pineTree", -12700 , -3822, 6, true));
                scenicList.push(new Scenery("pineTree", -13186 , -3942, -6.3, true));
                scenicList.push(new Scenery("pineTree", -6995 , -3821, 6.995, true));
                scenicList.push(new Scenery("pineTree", -6398 , -3743, 0.23, true));
                scenicList.push(new Scenery("pineTree", -6848 , -4186, -3.678, true));
                scenicList.push(new Scenery("pineTree", -8029 , -4161, 3.1, true));
                scenicList.push(new Scenery("pineTree", -7448 , -4370, 4.5, true));
                scenicList.push(new Scenery("pineTree", -8620 , -4332, -1.7, true));
                scenicList.push(new Scenery("pineTree", -9388 , -4224, -4.62, true));
                scenicList.push(new Scenery("pineTree", -9795 , -4691, -5.9, true));
                scenicList.push(new Scenery("pineTree", -9968 , -4233, 2.3, true));
                scenicList.push(new Scenery("pineTree", -10507 , -4023, 2.5, true));
                scenicList.push(new Scenery("pineTree", -10465 , -4521, 3.98, true));
                scenicList.push(new Scenery("pineTree", -11005 , -4119, -4.1, true));
                scenicList.push(new Scenery("pineTree", -10660 , -4900, -2, true));
                scenicList.push(new Scenery("pineTree", -11008 , -4524, -4.8, true));
                scenicList.push(new Scenery("pineTree", -11744 , -4280, -1.891, true));
                scenicList.push(new Scenery("pineTree", -11263 , -4864, 5.435, true));
                scenicList.push(new Scenery("pineTree", -11857 , -4696, 3.82, true));
                scenicList.push(new Scenery("pineTree", -11717 , -5059, -6.42, true));
                scenicList.push(new Scenery("pineTree", -12329 , -4069, 2.93, true));
                scenicList.push(new Scenery("pineTree", -12245 , -4426, -4.7, true));
                scenicList.push(new Scenery("pineTree", -12174 , -4947, -2.2, true));
                scenicList.push(new Scenery("pineTree", -12232 , -5375, 5.68, true));
                scenicList.push(new Scenery("pineTree", -12808 , -5502, 1, true));
                scenicList.push(new Scenery("pineTree", -12913 , -4233, -1.5, true));
                scenicList.push(new Scenery("pineTree", -13143 , -4801, 3, true));
                scenicList.push(new Scenery("pineTree", -12722, -4981, 2.136, true));
                scenicList.push(new Scenery("pineTree", -13009 , -5159, -1.29, true));
                scenicList.push(new Scenery("pineTree", -11286 , -5204, 7, true));

                //replacement trees for the map e2.
                scenicList.push(new Scenery("pineTree", -13696, 1772, 1.3, true));
                scenicList.push(new Scenery("pineTree", -14036, 1575, 2.25, true));
                scenicList.push(new Scenery("pineTree", -14255, 1933, -5.3, true));
                scenicList.push(new Scenery("pineTree", -14548, 1709, -4.25, true));
                scenicList.push(new Scenery("pineTree", -13749, 2072, 3, true));
                scenicList.push(new Scenery("pineTree", -13699, 707, -1.3, true));
                scenicList.push(new Scenery("pineTree", -13735, 1127, -2.25, true));
                scenicList.push(new Scenery("pineTree", -14119, 917, 5.4, true));
                scenicList.push(new Scenery("pineTree", -13447, 104, 4.25, true));
                scenicList.push(new Scenery("pineTree", -14194, 574, -3.5, true));
                scenicList.push(new Scenery("pineTree", -13709, -299, 4.6, true));
                scenicList.push(new Scenery("pineTree", -13857, 269, 2, true));
                scenicList.push(new Scenery("pineTree", -14349, 210, 2.95, true));
                scenicList.push(new Scenery("pineTree", -13966, -29, -6, true));
                scenicList.push(new Scenery("pineTree", -14213, -537, -5, true));
                scenicList.push(new Scenery("pineTree", -13696, -764, 3.7, true));
                scenicList.push(new Scenery("pineTree", -14226, -958, -2, true));
                scenicList.push(new Scenery("pineTree", -13429, -1039, -2.75, true));
                scenicList.push(new Scenery("pineTree", -13757, -1282, 6.1, true));
                scenicList.push(new Scenery("pineTree", -14638, 1014, 4.85, true));
                scenicList.push(new Scenery("pineTree", -14088, -1655, -4.2, true));
                scenicList.push(new Scenery("pineTree", -13524, -1559, 3.8, true));
                scenicList.push(new Scenery("pineTree", -13681, -1845, 1.4, true));
                scenicList.push(new Scenery("pineTree", -14604, 718, 1.68, true));
                scenicList.push(new Scenery("pineTree", -14346, -203, 5.79, true));
                scenicList.push(new Scenery("pineTree", -14298, -1385, -5.34, true));
                scenicList.push(new Scenery("pineTree", -13604, -2246, -2.75, true));
                scenicList.push(new Scenery("pineTree", -14054, -2088, 6.1, true));
                scenicList.push(new Scenery("pineTree", -14422, -1919, -4.85, true));
                scenicList.push(new Scenery("pineTree", -14636, -1141, -6.2, true));
                scenicList.push(new Scenery("pineTree", -14750, -1668, -3.8, true));
                scenicList.push(new Scenery("pineTree", -14003, -2427, -1.4, true));
                scenicList.push(new Scenery("pineTree", -13513, -2573, -1.68, true));
                scenicList.push(new Scenery("pineTree", -13401, -2965, -5.79, true));
                scenicList.push(new Scenery("pineTree", -13693, -3272, 5.34, true));
                scenicList.push(new Scenery("pineTree", -13853, -3600, 2.4, true));
                scenicList.push(new Scenery("pineTree", -13898, -2842, -2.25, true));
                scenicList.push(new Scenery("pineTree", -14160, -3433, 5.6, true));
                scenicList.push(new Scenery("pineTree", -14274, -3142, -4.4, true));
                scenicList.push(new Scenery("pineTree", -14489, -2910, 2.55, true));
                scenicList.push(new Scenery("pineTree", -14605, -3349, -1.3, true));
                scenicList.push(new Scenery("pineTree", -14225, -2703, -2.25, true));
                scenicList.push(new Scenery("pineTree", -14570, -2559, -5.9, true));
                scenicList.push(new Scenery("pineTree", -14744, -2267, 4.25, true));
                scenicList.push(new Scenery("pineTree", -14315, -2276, -3.5, true));
                scenicList.push(new Scenery("pineTree", -14899, -3219, 4.6, true));
                scenicList.push(new Scenery("pineTree", -14827, -3578, 2.678, true));
                scenicList.push(new Scenery("pineTree", -14623, -727, 2.95, true));
                scenicList.push(new Scenery("pineTree", -14891, -334, -6, true));
                scenicList.push(new Scenery("pineTree", -14685, 31, -5, true));
                scenicList.push(new Scenery("pineTree", -14837, 405, 3.7, true));
                scenicList.push(new Scenery("pineTree", -14850, 1520, -2, true));
                scenicList.push(new Scenery("pineTree", -14699, 2005, -2.75, true));
                scenicList.push(new Scenery("pineTree", -13700, 2375, 6.6, true));
                scenicList.push(new Scenery("pineTree", -13454, 2883, 4.85, true));
                scenicList.push(new Scenery("pineTree", -13835, 2716, -4.2, true));
                scenicList.push(new Scenery("pineTree", -14187, 2273, 3.8, true));
                scenicList.push(new Scenery("pineTree", -14702, 2454, 1.4, true));
                scenicList.push(new Scenery("pineTree", -14278, 2555, -1.9, true));
                scenicList.push(new Scenery("pineTree", -14550, 2857, 5.82, true));
                scenicList.push(new Scenery("pineTree", -14060, 3070, 8.9, true));
                scenicList.push(new Scenery("pineTree", -14775, 3265, -3.75, true));
                scenicList.push(new Scenery("pineTree", -13615, 3272, 6.25, true));
                scenicList.push(new Scenery("pineTree", -14006, 3491, 4.45, true));
                scenicList.push(new Scenery("pineTree", -13382, 3558, -6.77, true));
                scenicList.push(new Scenery("pineTree", -13811, 3791, -3.8, true));
                scenicList.push(new Scenery("pineTree", -14545, 3577, -2.1, true));
                scenicList.push(new Scenery("pineTree", -14751, 4028, -1.68, true));
                scenicList.push(new Scenery("pineTree", -14245, 3877, -5.36, true));
                scenicList.push(new Scenery("pineTree", -14299, 4240, 6, true));
                scenicList.push(new Scenery("pineTree", -13935, 4112, -1.5, true));
                scenicList.push(new Scenery("pineTree", -13455, 4015, 1.5, true));
                scenicList.push(new Scenery("pineTree", -14828, 4400, 3.5, true));
                scenicList.push(new Scenery("pineTree", -13638, 4478, -7, true));
                scenicList.push(new Scenery("pineTree", -13579, 4760, 4.8, true));
                scenicList.push(new Scenery("pineTree", -14176, 4636, -4.15, true));
                scenicList.push(new Scenery("pineTree", -14636, 4744, 5, true));
                scenicList.push(new Scenery("pineTree", -13902, 5082, -2.64, true));
                scenicList.push(new Scenery("pineTree", -13402, 5321, 6.64, true));
                scenicList.push(new Scenery("pineTree", -13541, 5707, 0, true));
                scenicList.push(new Scenery("pineTree", -14000, 5467, 24, true));
                scenicList.push(new Scenery("pineTree", -14382, 5058, -1, true));
                scenicList.push(new Scenery("pineTree", -14904, 4994, -3.14, true));
                scenicList.push(new Scenery("pineTree", -14644, 5409, 4.326, true));
                scenicList.push(new Scenery("pineTree", -13707, 6029, 0.2, true));
                scenicList.push(new Scenery("pineTree", -14063, 6249, -1.81, true));
                scenicList.push(new Scenery("pineTree", -13699, 6445, 8.92, true));
                scenicList.push(new Scenery("pineTree", -14144, 5820, 3.14, true));
                scenicList.push(new Scenery("pineTree", -14623, 5700, -4.326, true));
                scenicList.push(new Scenery("pineTree", -14450, 6526, 2.7, true));
                scenicList.push(new Scenery("pineTree", -14642, 6116, 5.82, true));
                scenicList.push(new Scenery("pineTree", -14893, 6438, 0.726, true));

                //plants of the forest
                scenicList.push(new Scenery("neprilnePlant", -9639 , 2010, 0.11, true));
                scenicList.push(new Scenery("neprilnePlant", -10556 , -1226, -0.39, true));
                scenicList.push(new Scenery("neprilnePlant", -7891 , -297, 0.47, true));
                scenicList.push(new Scenery("stomwikPlant", -11300 , -195, -0.25, true));
                scenicList.push(new Scenery("stomwikPlant", -11227 , 3073, 0.25, true));
                scenicList.push(new Scenery("akerPlant", -8231 , 3819, 0.25, true));
                scenicList.push(new Scenery("akerPlant", -9761 , 2581, -0.35, true));
                scenicList.push(new Scenery("akerPlant", -9448 , 4934, 0.85, true));
                scenicList.push(new Scenery("pluttPlant", -11859 , 4788, -1.99, true));
                scenicList.push(new Scenery("pluttPlant", -12504 , 4632, -1.99, true));
                scenicList.push(new Scenery("tylunPlant", -12021 , 4296, 0, true));
                scenicList.push(new Scenery("akerPlant", -12083 , 3772, 0.38, true));
                scenicList.push(new Scenery("culprisPlant", -11508 , 3369, 3, true));
                scenicList.push(new Scenery("culprisPlant", -11188 , 2437, 1, true));
                scenicList.push(new Scenery("neprilnePlant", -12402 , 5071, -0.12, true));
                scenicList.push(new Scenery("akerPlant", -12137 , 6239, 0.67, true));
                scenicList.push(new Scenery("akerPlant", -7797 , 584, 2.15, true));
                scenicList.push(new Scenery("stomwikPlant", -8318 , -1954, -2.25, true));
                scenicList.push(new Scenery("pluttPlant", -7905 , -3013, Math.PI, true));
                scenicList.push(new Scenery("culprisPlant", -10581 , -3108, -2, true));
                scenicList.push(new Scenery("neprilnePlant", -11731 , -3186, 0.15, true));
                scenicList.push(new Scenery("neprilnePlant", -12416 , -3062, -0.45, true));
                scenicList.push(new Scenery("stomwikPlant", -12630 , -3084, 1.16, true));
                scenicList.push(new Scenery("akerPlant", -12526 , -2289, -2.75, true));
                scenicList.push(new Scenery("pluttPlant", -9196 , -3085, -1.99, true));
                scenicList.push(new Scenery("culprisPlant", -12176 , -1052, -1, true));
                scenicList.push(new Scenery("akerPlant", -12591 , 24, 0.44, true));
                scenicList.push(new Scenery("akerPlant", -12324 , 50, 1.26, true));
                scenicList.push(new Scenery("neprilnePlant", -12246 , -174, -2.3122512, true));
                scenicList.push(new Scenery("neprilnePlant", -8865 , 815, 1.4822332, true));
                scenicList.push(new Scenery("pluttPlant", -8549 , 5995, Math.PI, true));
                scenicList.push(new Scenery("neprilnePlant", -10044 , 5079, 1.89314221, true));
                scenicList.push(new Scenery("glinPlant", -8443 , 3193, 0, true));
                scenicList.push(new Scenery("glinPlant", -10762 , 2744, 1, true));
                scenicList.push(new Scenery("glinPlant", -9620 , -923, 0, true));
                scenicList.push(new Scenery("glinPlant", -9585 , -1144, 3, true));
                scenicList.push(new Scenery("glinPlant", -9353 , 4496, 0, true));
                scenicList.push(new Scenery("glinPlant", -9422 , 4483, -2, true));
                scenicList.push(new Scenery("glinPlant", -9447 , 4519, 2.9, true));
                scenicList.push(new Scenery("glinPlant", -9493 , 4485, 1, true));
                scenicList.push(new Scenery("glinPlant", -9195 , -1943, 0.65, true));
                scenicList.push(new Scenery("culprisPlant", -10156 , -2418, -3.212, true));
                scenicList.push(new Scenery("akerPlant", -9458 , -2568, -2.75, true));
                scenicList.push(new Scenery("glinPlant", -11587 , -2109, 2, true));
                scenicList.push(new Scenery("stomwikPlant", -11965 , -1414, 0, true));
                scenicList.push(new Scenery("glinPlant", -12768 , -1507, -1.55, true));
                scenicList.push(new Scenery("glinPlant", -9157 , 4196, -1.55, true));
                scenicList.push(new Scenery("halcifPlant", -11413 , 3822, -0.55, true));
                scenicList.push(new Scenery("cyrinthilimPlant", -11015 , 152, 1.23, true));
                scenicList.push(new Scenery("wyrPlant", -9872 , 4197, -Math.PI * 0.16, true));
                scenicList.push(new Scenery("wyrPlant", -11220 , -1408, Math.PI * 0.67, true));
                scenicList.push(new Scenery("wyrPlant", -8187 , -2331, -Math.PI * 0.92, true));
                scenicList.push(new Scenery("halcifPlant", -12291 , -2532, 0.85, true));
                scenicList.push(new Scenery("cyrinthilimPlant", -10634 , 2471, -2.34, true));

                //stumps of the "Wuncwer" woods
                scenicList.push(new Scenery("pineStumps", -6474 , 1900, 0, true));
                scenicList.push(new Scenery("pineStumps", -6496 , 548, -0.75, true));
                scenicList.push(new Scenery("pineStumps", -6191 , 2871, 1.6, true));
                scenicList.push(new Scenery("pineStumps", -7423 , 4794, 0.2, true));
                scenicList.push(new Scenery("pineStumps", -6544 , 5895, -0.9, true));
                scenicList.push(new Scenery("pineStumps", -6659 , 4000, 0.23, true));

                scenicList.push(new Scenery("pineStumps", -6248 , 4985, -1.6, true));
                scenicList.push(new Scenery("pineStumps", -5852 , -329, 0, true));
                scenicList.push(new Scenery("pineStumps", -6818 , -650, -1.4, true));
                scenicList.push(new Scenery("pineStumps", -7003 , -1749, 0, true));
                scenicList.push(new Scenery("pineStumps", -6395 , -2816, -0.88, true));
                scenicList.push(new Scenery("pineStumps", -7911 , 5498, -0.3, true));


                change = "e1";
            }
        }
        else if (region == "n1e4")
        {
            if (change != "n1e4")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                generator2(562319, 545, 54153, 8432503, 3231101, 2, -34023, 16529);
                cropper(-40729, 10759, -43972, 7515, true, true);

                scenicList.push(new Scenery("pineTree", -34992 , 6702, 6, true));
                scenicList.push(new Scenery("pineTree", -34384, 6421, 5.3, true));

                scenicList.push(new Scenery("erguerPlant", -41418, 8998, 4, true));
                scenicList.push(new Scenery("techiPlant", -41417, 6952, 1, true));

                ArtificialIntelligenceAccess.push(new Unit(-41598, 8028, "Frich", false, "fuzzball"));
                ArtificialIntelligenceAccess.push(new Unit(-41211, 8832, "Frich", false, "fuzzball"));

                //e-3 trees (SouthWest)
                scenicList.push(new Scenery("pineTree", -24463 , 5090, 5.3, true));
                scenicList.push(new Scenery("pineTree", -24052 , 5813, -2, true));
                scenicList.push(new Scenery("pineTree", -23742 , 6022, 1.1, true));
                scenicList.push(new Scenery("pineTree", -24244 , 6281, -1.7, true));
                scenicList.push(new Scenery("pineTree", -24562, 6011, 4.9, true));
                scenicList.push(new Scenery("pineTree", -25076 , 6479, 6.8, true));
                scenicList.push(new Scenery("pineTree", -25651 , 6162, -3.3, true));
                scenicList.push(new Scenery("pineTree", -25213 , 5786, 4.7, true));
                scenicList.push(new Scenery("pineTree", -24775 , 5505, -1.5, true));
                scenicList.push(new Scenery("pineTree", -24165 , 5375, 2.25, true));
                scenicList.push(new Scenery("pineTree", -32700 , 5990, -9, true));
                scenicList.push(new Scenery("pineTree", -32391 , 6232, 3.4, true));
                scenicList.push(new Scenery("pineTree", -32478 , 6524, -5.443, true));
                scenicList.push(new Scenery("pineTree", -32925 , 6310, 7.75, true));
                scenicList.push(new Scenery("pineTree", -33352 , 6480, -3.95, true));
                scenicList.push(new Scenery("pineTree", -33239 , 6077, -2.39239, true));
                scenicList.push(new Scenery("pineTree", -33706 , 6188, 10.45, true));
                scenicList.push(new Scenery("pineTree", -33551 , 5652, 12.85, true));
                scenicList.push(new Scenery("pineTree", -32851 , 5714, -13.1, true));

                ArtificialIntelligenceAccess.push(new Unit(-42341.93945987805, 10715.218195508834, "Waanti", false, "Canryacht1"));
                ArtificialIntelligenceAccess.push(new Unit(-42133.79923984253, 10661.809633262978, "Waanti", true, "Canryacht2"));
                ArtificialIntelligenceAccess.push(new Unit(-42239.95717125928, 10752.772185202512, "Waanti", "baby", "Canryacht3"));

                ArtificialIntelligenceAccess.push(new Unit(-41145.67609806021, 11859.233083642363, "WinterWolf", false, "whtppleinsnow1"));
                ArtificialIntelligenceAccess.push(new Unit(-41228.85178298561, 11959.64213322798, "WinterWolf", false, "whtppleinsnow2"));
                ArtificialIntelligenceAccess.push(new Unit(-41319.006783854995, 11929.026185482253, "WinterWolf", false, "whtppleinsnow3"));


                ArtificialIntelligenceAccess.push(new Unit(-42975.68388651433, 14270.228217383341, "Glutid", false, "slkman1", {patrolStops: 3, patrolLoop: true, route:[[-40879.86387976736, 15970.488651858013], [-42355.75462604215, 13562.23685480315], [-42975.68388651433, 14270.228217383341]]}));


                scenicList.push(new Scenery("bushkaPlant", -42288.61172579082, 12361.75050432576, 4, true));

                scenicList.push(new Scenery("stone", -40993.044966260626, 13671.929519157078, 6, 1, 2));



                change = "n1e4";
            }
        }
        else if (region == "s1e4")
        {
            if (change != "s1e4")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //e-5
                generator2(897, 27418911, 421534281, 8548903, 119, 1, -44150, -3266, true);
                cropper(-44150, -3266, -45175, -3598, true, true);

                for (var i = scenicList.length -1; i >= 0; i--)
                {
                    if (scenicList[i].type != "pineTree")
                    {
                        scenicList.splice(i, 1);
                    }
                }

                //e-4
                generator2(194838973478567290593490753765777, 874189889999927462711, 21264612647782889982392365641534281, 4291914929422375482332503, 3339769, 1, -40882, 3192, true);
                cropper(-40882, -3192, -44012, -3634, true, true);

                //s-1-e-4
                generator2(53765777, 99, 213974281, 332503, 100101000, 1, -33959, -3720);
                cropper(-40435, -3624, -44055, -13911, true, true);

                //s-1-e-5
                generator2(789678567456345678, 87675674567589, 23453467578, 87967857598607, 775764427, 1, -44316, -3916, true);
                cropper(-44316, -3916, -46384, -13818, true, true);

                scenicList.push(new Scenery("pineTree", -44213, -12679, -2.7, true));

                //REGION CREATION
                //Build AI Units


                //creatures
                //ArtificialIntelligenceAccess.push(new Unit(808, -11538, "Naaprid", false, "Hueso"));


                //Scenery
                //scenicList.push(new Scenery("techiPlant", 2702 , -12061, -8.5, true));



                change = "s1e4";
            }
        }
        else if (region == "s1e5")
        {
            if (change != "s1e5")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];
                //e-5
                generator2(897, 27418911, 421534281, 8548903, 119, 1, -44150, -3266, true);
                cropper(-44150, -3266, -45175, -3598, true, true);

                for (var i = scenicList.length -1; i >= 0; i--)
                {
                    if (scenicList[i].type != "pineTree")
                    {
                        scenicList.splice(i, 1);
                    }
                }

                //s-1-e-5
                generator2(789678567456345678, 87675674567589, 23453467578, 87967857598607, 775764427, 1, -44316, -3916);
                cropper(-44316, -3916, -46384, -13818, true, true);

                generator2(194838973478567290593490753765777, 874189889999927462711, 21264612647782889982392365641534281, 4291914929422375482332503, 3339769, 1, -40882, 3192, true);
                cropper(-40882, -3192, -44012, -3634, true, true);

                generator2(53765777, 99, 213974281, 332503, 100101000, 1, -33959, -3720, true);
                cropper(-40435, -3624, -44055, -13911, true, true);

                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--)
                {
                    if (ArtificialIntelligenceAccess[i].X < -45609 && ArtificialIntelligenceAccess[i].type != "Shehid" && ArtificialIntelligenceAccess[i].type != "Lizard" && !ArtificialIntelligenceAccess[i].guarantee && ArtificialIntelligenceAccess[i].team != "player")
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                    }
                }

                //s - 1 - e - 5 east plains
                generator(768528794, 3465768798, 8976875, 123, 222, 2, -47147, -4369); //eastern grasslands in map s-1-e-5
                cropper(-47147, -4369, -50955, -13249, true, true);

                for (var i = ArtificialIntelligenceAccess.length -1; i >= 0; i--)
                {
                    if (ArtificialIntelligenceAccess[i].type == "Peacock")
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                    }
                }


                scenicList.push(new Scenery("pineTree", -44438 , -5347, 1, true));
                scenicList.push(new Scenery("pineTree", -46167 , -4835, 5.2, true));
                scenicList.push(new Scenery("pineTree", -46035 , -6130, 3.8, true));

                scenicList.push(new Scenery("pineTree", -44213, -12679, -2.7, true));


                scenicList.push(new Scenery("pineTree", -43731 , -8082, 2.1, true));
                scenicList.push(new Scenery("pineTree", -43838 , -8498, -4, true));
                scenicList.push(new Scenery("pineTree", -44032 , -8311, 5.5, true));

                if (uniqueChars.barracoLDS == true)
                {
                    scenicList.push(new Scenery("tent", -44405, -7140, (0.25 * Math.PI), true));
                    scenicList.push(new Scenery("tent", -43694, -7307, (-0.25 * Math.PI), true));
                    scenicList.push(new Scenery("tent", -43393, -7708, (-0.75 * Math.PI), true));
                    scenicList.push(new Scenery("tent", -43777, -7927, (1 * Math.PI), true));
                    scenicList.push(new Scenery("tent", -44142, -8177, (1.1 * Math.PI), true));
                    scenicList.push(new Scenery("tent", -44600, -8088, (-1.25 * Math.PI), true));
                    scenicList.push(new Scenery("tent", -44632, -7616, (0.25 * Math.PI), true));
                    scenicList.push(new Scenery("tent", -44414, -7455, (0.38 * Math.PI), true));

                    ArtificialIntelligenceAccess.push(new Unit(-44372, -7184, "Soldier", false, "Ser Barraco Kein the Bandit Chieftain", {race: "Nirwaden", faction: "none", con: 30, speed: 1.05, outfit: ["barracoPlateArmour", 20], weapon: ["estoc", [4, 12], 34, 17, 3.25], ranged: [false, "steelBolt", 15, 2200, 18, 16 /3, 0, "none", 3], patrolStops: 1, patrolLoop: false, route:[[-44347, -7199]]}));

                    if (quests.manOfThePeopleMen > 0)
                    {
                        if (quests.manOfThePeopleMen == 1)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-44265, -7013, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 5, speed: 1.1, outfit: ["boarArmour", 4], weapon: ["crossbow", [0, 0], 0, 21, 3.4], ranged: [true, "steelBolt", 17, 2200, 19, 18 /3, 0, "none", 3], patrolStops: 1, patrolLoop: false, route:[[-44239, -7057]]}));
                        }
                        else if (quests.manOfThePeopleMen == 2)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-44564, -7548, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 5, speed: 1.1, outfit: ["boarArmour", 4], weapon: ["crossbow", [0, 0], 0, 21, 3.4], ranged: [true, "steelBolt", 17, 2200, 19, 18 /3, 0, "none", 3], patrolStops: 1, patrolLoop: false, route:[[-44498, -7556]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-43473, -7641, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 6, speed: 1.1, outfit: ["boarArmour", 5], weapon: ["crossbow", [0, 0], 0, 21, 3.4], ranged: [true, "steelBolt", 18, 2200, 18, 17 /3, 0, "none", 3.5], patrolStops: 1, patrolLoop: false, route:[[-43486, -7613]]}));
                        }
                        else if (quests.manOfThePeopleMen == 3)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-43679, -7648, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 2, speed: 1.28, outfit: ["nirwadenGambeson", 1], weapon: ["sickle", [2, 2], 0, 21, 1.15], ranged: [false, "steelBolt", 15, 2200, 18, 16 /3, 0, "none", 3], patrolStops: 1, patrolLoop: false, route:[[-43718, -7645]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-44564, -7548, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 5, speed: 1.1, outfit: ["boarArmour", 4], weapon: ["crossbow", [0, 0], 0, 21, 3.4], ranged: [true, "steelBolt", 17, 2200, 19, 18 /3, 0, "none", 3], patrolStops: 1, patrolLoop: false, route:[[-44498, -7556]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-43473, -7641, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 6, speed: 1.1, outfit: ["boarArmour", 5], weapon: ["crossbow", [0, 0], 0, 21, 3.4], ranged: [true, "steelBolt", 18, 2200, 18, 17 /3, 0, "none", 3.5], patrolStops: 1, patrolLoop: false, route:[[-43486, -7613]]}));
                        }
                        else if (quests.manOfThePeopleMen == 4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-43770, -7219, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 4, speed: 1.19, outfit: ["nirwadenGambeson", 1], weapon: ["nirineseSabre", [6, 4], 0, 24, 1.27], ranged: [false, "steelBolt", 15, 2200, 18, 16 /3, 0, "none", 3], patrolStops: 0, patrolLoop: false, route:[[-43718, -7645]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-43679, -7648, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 2, speed: 1.28, outfit: ["nirwadenGambeson", 1], weapon: ["sickle", [2, 2], 0, 21, 1.15], ranged: [false, "steelBolt", 15, 2200, 18, 16 /3, 0, "none", 3], patrolStops: 1, patrolLoop: false, route:[[-43718, -7645]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-44564, -7548, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 5, speed: 1.1, outfit: ["boarArmour", 4], weapon: ["crossbow", [0, 0], 0, 21, 3.4], ranged: [true, "steelBolt", 17, 2200, 19, 18 /3, 0, "none", 3], patrolStops: 1, patrolLoop: false, route:[[-44498, -7556]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-43473, -7641, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 6, speed: 1.1, outfit: ["boarArmour", 5], weapon: ["crossbow", [0, 0], 0, 21, 3.4], ranged: [true, "steelBolt", 18, 2200, 18, 17 /3, 0, "none", 3.5], patrolStops: 1, patrolLoop: false, route:[[-43486, -7613]]}));
                        }
                        else if (quests.manOfThePeopleMen == 5)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-43770, -7219, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 4, speed: 1.19, outfit: ["nirwadenGambeson", 1], weapon: ["nirineseSabre", [6, 4], 0, 24, 1.27], ranged: [false, "steelBolt", 15, 2200, 18, 16 /3, 0, "none", 3], patrolStops: 0, patrolLoop: false, route:[[-43718, -7645]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-43679, -7648, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 2, speed: 1.28, outfit: ["nirwadenGambeson", 1], weapon: ["sickle", [2, 2], 0, 21, 1.15], ranged: [false, "steelBolt", 15, 2200, 18, 16 /3, 0, "none", 3], patrolStops: 1, patrolLoop: false, route:[[-43718, -7645]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-44564, -7548, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 5, speed: 1.1, outfit: ["boarArmour", 4], weapon: ["crossbow", [0, 0], 0, 21, 3.4], ranged: [true, "steelBolt", 17, 2200, 19, 18 /3, 0, "none", 3], patrolStops: 1, patrolLoop: false, route:[[-44498, -7556]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-43473, -7641, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 6, speed: 1.1, outfit: ["boarArmour", 5], weapon: ["crossbow", [0, 0], 0, 21, 3.4], ranged: [true, "steelBolt", 18, 2200, 18, 17 /3, 0, "none", 3.5], patrolStops: 1, patrolLoop: false, route:[[-43486, -7613]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-44434, -7321, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 6, speed: 1.1, outfit: ["boarArmour", 4.5], weapon: ["crossbow", [0, 0], 0, 21, 3.4], ranged: [true, "steelBolt", 16, 2200, 17, 16 /3, 0, "none", 4.1], patrolStops: 1, patrolLoop: false, route:[[-44353, -7333]]}));
                        }
                        else if (quests.manOfThePeopleMen == 6)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-43770, -7219, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 4, speed: 1.19, outfit: ["nirwadenGambeson", 1], weapon: ["nirineseSabre", [6, 4], 0, 24, 1.27], ranged: [false, "steelBolt", 15, 2200, 18, 16 /3, 0, "none", 3], patrolStops: 0, patrolLoop: false, route:[[-43718, -7645]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-44720, -7729, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 3, speed: 1.28, outfit: ["nirwadenGambeson", 1.5], weapon: ["nirineseSpear", [3, 4], 10, 37, 1.4], ranged: [false, "steelBolt", 15, 2200, 18, 16 /3, 0, "none", 3], patrolStops: 1, patrolLoop: false, route:[[-44810, -7728]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-43679, -7648, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 2, speed: 1.28, outfit: ["nirwadenGambeson", 1], weapon: ["sickle", [2, 2], 0, 21, 1.15], ranged: [false, "steelBolt", 15, 2200, 18, 16 /3, 0, "none", 3], patrolStops: 1, patrolLoop: false, route:[[-43718, -7645]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-44564, -7548, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 5, speed: 1.1, outfit: ["boarArmour", 4], weapon: ["crossbow", [0, 0], 0, 21, 3.4], ranged: [true, "steelBolt", 17, 2200, 19, 18 /3, 0, "none", 3], patrolStops: 1, patrolLoop: false, route:[[-44498, -7556]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-43473, -7641, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 6, speed: 1.1, outfit: ["boarArmour", 5], weapon: ["crossbow", [0, 0], 0, 21, 3.4], ranged: [true, "steelBolt", 18, 2200, 18, 17 /3, 0, "none", 3.5], patrolStops: 1, patrolLoop: false, route:[[-43486, -7613]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-44434, -7321, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 6, speed: 1.1, outfit: ["boarArmour", 4.5], weapon: ["crossbow", [0, 0], 0, 21, 3.4], ranged: [true, "steelBolt", 16, 2200, 17, 16 /3, 0, "none", 4.1], patrolStops: 1, patrolLoop: false, route:[[-44353, -7333]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-43770, -7219, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 4, speed: 1.19, outfit: ["nirwadenGambeson", 1], weapon: ["nirineseSabre", [6, 4], 0, 24, 1.27], ranged: [false, "steelBolt", 15, 2200, 18, 16 /3, 0, "none", 3], patrolStops: 0, patrolLoop: false, route:[[-43718, -7645]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-44720, -7729, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 3, speed: 1.28, outfit: ["nirwadenGambeson", 1.5], weapon: ["nirineseSpear", [3, 4], 10, 37, 1.4], ranged: [false, "steelBolt", 15, 2200, 18, 16 /3, 0, "none", 3], patrolStops: 1, patrolLoop: false, route:[[-44810, -7728]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-43870, -8044, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 3, speed: 1.28, outfit: ["nirwadenGambeson", 1.5], weapon: ["nirineseSpear", [3, 4], 10, 37, 1.4], ranged: [false, "steelBolt", 15, 2200, 18, 16 /3, 0, "none", 3], patrolStops: 1, patrolLoop: false, route:[[-43899, -8049]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-43679, -7648, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 2, speed: 1.28, outfit: ["nirwadenGambeson", 1], weapon: ["sickle", [2, 2], 0, 21, 1.15], ranged: [false, "steelBolt", 15, 2200, 18, 16 /3, 0, "none", 3], patrolStops: 1, patrolLoop: false, route:[[-43718, -7645]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-44564, -7548, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 5, speed: 1.1, outfit: ["boarArmour", 4], weapon: ["crossbow", [0, 0], 0, 21, 3.4], ranged: [true, "steelBolt", 17, 2200, 19, 18 /3, 0, "none", 3], patrolStops: 1, patrolLoop: false, route:[[-44498, -7556]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-43473, -7641, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 6, speed: 1.1, outfit: ["boarArmour", 5], weapon: ["crossbow", [0, 0], 0, 21, 3.4], ranged: [true, "steelBolt", 18, 2200, 18, 17 /3, 0, "none", 3.5], patrolStops: 1, patrolLoop: false, route:[[-43486, -7613]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-44434, -7321, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 6, speed: 1.1, outfit: ["boarArmour", 4.5], weapon: ["crossbow", [0, 0], 0, 21, 3.4], ranged: [true, "steelBolt", 16, 2200, 17, 16 /3, 0, "none", 4.1], patrolStops: 1, patrolLoop: false, route:[[-44353, -7333]]}));
                        }
                    }
                }

                if (quests.breakawaysQuest == true && uniqueChars.raldoLDS == true)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-45614, -9536, "Soldier", false, "Raldo the Long", {race: "Nirwaden", faction: "hostile", con: 7, speed: 1.34, outfit: ["boarArmour", 4.5], weapon: ["nirineseSpear", [5, 4], 11, 38, 1.3], ranged: [false, "steelBolt", 15, 2200, 18, 16 /3, 0, "none", 3], patrolStops: 1, patrolLoop: false, route:[[-45625, -9552]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-46118, -9720, "Soldier", false, "Breakaway Bandit", {race: "Nirwaden", faction: "hostile", con: 2, speed: 1, outfit: ["boarArmour", 4], weapon: ["crossbow", [0, 0], 0, 21, 3.4], ranged: [true, "steelBolt", 15, 2200, 17, 16 /3, 0, "none", 4], patrolStops: 0, patrolLoop: false, route:[[-44498, -7556]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-45586, -9803, "Soldier", false, "Breakaway Bandit", {race: "Nirwaden", faction: "hostile", con: 4, speed: 1.15, outfit: ["nirwadenGambeson", 1.5], weapon: ["sickle", [3, 3], 0, 23, 1.2], ranged: [false, "steelBolt", 15, 2200, 18, 16 /3, 0, "none", 3], patrolStops: 1, patrolLoop: false, route:[[-45576, -9824]]}));
                    scenicList.push(new Scenery("tent", -45572, -9451, (-0.25 * Math.PI), true));
                    scenicList.push(new Scenery("tent", -45537, -9600, (-0.5 * Math.PI), true));
                    scenicList.push(new Scenery("tent", -45754, -9749, (0.5 * Math.PI), true));
                }

                scenicList.push(new Scenery("cave", -47307, -8789, 0, [854, 297], "arcusMine"));
                scenicList.push(new Scenery("sign", -47221, -8821,  2 / Math.PI - 0.6, 1, "Arcus Co. Mine"));


                change = "s1e5";
            }
        }
        else if (region == "s1") //Y > 6290 && Y < 32370
        {
            if (change != "s1")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                var bushornot = Math.floor(Math.random() * 9);
                if (bushornot == 1)
                {
                    ArtificialIntelligenceAccess.push(new Unit(2977, -4894, "Grush", false, "turtlebob"));
                    ArtificialIntelligenceAccess.push(new Unit(3082, -4954, "Grush", "baby", "turtletim"));
                    ArtificialIntelligenceAccess.push(new Unit(5669, -4701, "Grush", false, "turtledahlia"));
                    scenicList.push(new Scenery("butterMellowPlant", -1071 , -10780, 12.6, true));
                }
                else
                {
                    scenicList.push(new Scenery("techiPlant", -1071 , -10780, 12.6, true));
                    scenicList.push(new Scenery("grushweedPlant", 2977, -4894, 0, 1)); //for grush weed the last number determines its size multiplier.
                    scenicList.push(new Scenery("grushweedPlant", 3082, -4954, 0, 0.6)); //for grush weed the last number determines its size multiplier.
                    scenicList.push(new Scenery("grushweedPlant", 5669, -4701, 0, 1)); //for grush weed the last number determines its size multiplier.
                }

                if (bushornot == 2)
                {
                    ArtificialIntelligenceAccess.push(new Unit(5612, -4955, "Grush", false, "turtlejoe"));
                    ArtificialIntelligenceAccess.push(new Unit(5885, -5133, "Grush", "baby", "turtlejimmy"));
                    ArtificialIntelligenceAccess.push(new Unit(765, -7802, "Grush", "baby", "turtletommy"));
                    ArtificialIntelligenceAccess.push(new Unit(704, -7814, "Grush", "baby", "turtletimmy"));
                    ArtificialIntelligenceAccess.push(new Unit(616, -7845, "Grush", "baby", "turtledarly"));
                    ArtificialIntelligenceAccess.push(new Unit(728, -7995, "Grush", false, "turtlejohn"));
                    scenicList.push(new Scenery("palntPlant", -1544 , -7933, -2.1, true));
                    ArtificialIntelligenceAccess.push(new Unit(1658, -7708, "Naaprid", false, "dopra"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(3008, -7333, "Naaprid", false, "opra"));
                    scenicList.push(new Scenery("palntPlant", -1544 , -7933, -2.1, true));
                    scenicList.push(new Scenery("grushweedPlant", 728, -7995, 2.5, 1)); //for grush weed the last number determines its size multiplier.
                    scenicList.push(new Scenery("grushweedPlant", 704, -7814, 2.5, 0.6)); //for grush weed the last number determines its size multiplier.
                    scenicList.push(new Scenery("grushweedPlant", 765, -7802, 0, 0.6)); //for grush weed the last number determines its size multiplier.
                    scenicList.push(new Scenery("grushweedPlant", 616, -7845, -1, 0.6)); //for grush weed the last number determines its size multiplier.
                    scenicList.push(new Scenery("grushweedPlant", 5612, -4955, 0, 1)); //for grush weed the last number determines its size multiplier.
                    scenicList.push(new Scenery("grushweedPlant", 5885, -5133, 0, 0.6)); //for grush weed the last number determines its size multiplier.
                }

                if (bushornot == 7)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-1294, -7184, "Grush", false, "turtlejamz"));
                    scenicList.push(new Scenery("grushweedPlant", -1495, -7108, 0, 1)); //for grush weed the last number determines its size multiplier.
                    ArtificialIntelligenceAccess.push(new Unit(5798, -4989, "Grush", true, "turtleTrudge"));
                    ArtificialIntelligenceAccess.push(new Unit(1345, -13190, "Grush", false, "turtleBudge"));
                    scenicList.push(new Scenery("palntPlant", -1387 , -10444, 2.2, true));
                    ArtificialIntelligenceAccess.push(new Unit(-2293, -9072, "Evrak", true, "evil"));
                }
                else
                {
                    scenicList.push(new Scenery("grushweedPlant", -1294, -7184, 0, 1)); //for grush weed the last number determines its size multiplier.
                    ArtificialIntelligenceAccess.push(new Unit(-1495, -7108, "Grush", false, "turtlejamza"));
                    ArtificialIntelligenceAccess.push(new Unit(-2293, -9072, "Evrak", false, "evil"));
                    scenicList.push(new Scenery("itlinPlant", -1387 , -10444, -2.2, true));
                    scenicList.push(new Scenery("grushweedPlant", 1345, -13190, 0, 1.425)); //for grush weed the last number determines its size multiplier.
                    scenicList.push(new Scenery("grushweedPlant", 5798, -4989, 2, 1.6)); //for grush weed the last number determines its size multiplier.
                }

                if (bushornot == 5)
                {
                    ArtificialIntelligenceAccess.push(new Unit(1217, -8134, "Grush", true, "turtledarla"));
                    ArtificialIntelligenceAccess.push(new Unit(5593, -4493, "Grush", true, "turtletom"));
                    ArtificialIntelligenceAccess.push(new Unit(2253, -12972, "Grush", false, "turtletyler"));
                    scenicList.push(new Scenery("butterMellowPlant", -597 , -5256, 0, true));
                    ArtificialIntelligenceAccess.push(new Unit(1080, -13248, "Grush", "baby", "turtletonk"));
                    ArtificialIntelligenceAccess.push(new Unit(-1838, -11241, "Frich", "massive", "superpuper"));
                    ArtificialIntelligenceAccess.push(new Unit(1486, -13498, "Golgemoff", true, "Sweetling"));
                }
                else
                {
                    scenicList.push(new Scenery("grushweedPlant", 2253, -12972, 6.5, 1)); //for grush weed the last number determines its size multiplier.
                    scenicList.push(new Scenery("grushweedPlant", 1080, -13248, 0.6, 0.6)); //for grush weed the last number determines its size multiplier.
                    scenicList.push(new Scenery("techiPlant", -597 , -5256, 0, true));
                    scenicList.push(new Scenery("grushweedPlant", 1217, -8134, 1, 1.5)); //for grush weed the last number determines its size multiplier.
                    scenicList.push(new Scenery("grushweedPlant", 5593, -4493, 0, 1.5)); //for grush weed the last number determines its size multiplier.
                }

                //Friches in the plains
                ArtificialIntelligenceAccess.push(new Unit(4510, -6220, "Frich", true, "sweatypie"));
                ArtificialIntelligenceAccess.push(new Unit(4676, -6326, "Frich", false, "manospequenas"));
                ArtificialIntelligenceAccess.push(new Unit(922, -6521, "Frich", true, "paydulce"));
                ArtificialIntelligenceAccess.push(new Unit(819, -6556, "Frich", false, "piespequenos"));
                ArtificialIntelligenceAccess.push(new Unit(1006, -6779, "Frich", false, "culo"));
                ArtificialIntelligenceAccess.push(new Unit(1048, -6976, "Frich", true, "verga"));
                ArtificialIntelligenceAccess.push(new Unit(912, -6945, "Frich", false, "huelefeo"));
                ArtificialIntelligenceAccess.push(new Unit(492, -7087, "Frich", false, "mesamesa"));
                ArtificialIntelligenceAccess.push(new Unit(-818, -11490, "Frich", true, "superculo"));
                ArtificialIntelligenceAccess.push(new Unit(-901, -11511, "Frich", true, "superverga"));
                ArtificialIntelligenceAccess.push(new Unit(-870, -11615, "Frich", true, "superfeo"));
                ArtificialIntelligenceAccess.push(new Unit(-989, -11564, "Frich", false, "sillasilla"));
                ArtificialIntelligenceAccess.push(new Unit(-1706, -11155, "Frich", false, "superfea"));
                ArtificialIntelligenceAccess.push(new Unit(840, -9459, "Frich", false, "superfly"));
                ArtificialIntelligenceAccess.push(new Unit(5050, -5181, "Frich", false, "chal"));
                ArtificialIntelligenceAccess.push(new Unit(4779, -5070, "Frich", false, "chol"));
                ArtificialIntelligenceAccess.push(new Unit(4909, -4986, "Frich", false, "chil"));
                ArtificialIntelligenceAccess.push(new Unit(-308, -4190, "Frich", true, "cholera"));
                ArtificialIntelligenceAccess.push(new Unit(1175, -4670, "Frich", false, "chale"));
                ArtificialIntelligenceAccess.push(new Unit(1274, -4852, "Frich", false, "chole"));
                ArtificialIntelligenceAccess.push(new Unit(1166, -4813, "Frich", false, "chile"));
                ArtificialIntelligenceAccess.push(new Unit(-914, -4703, "Frich", true, "argentina"));
                ArtificialIntelligenceAccess.push(new Unit(2819, -5572, "Frich", true, "bolivia"));
                ArtificialIntelligenceAccess.push(new Unit(6325, -4420, "Frich", false, "chule"));


                //Golgemoffs crawling through your nightmares...
                /*var golgSz = "baby";

                 if (currentSeason == "Frost")
                 {
                 golgSz = false;
                 }
                 if (currentSeason == "Bounty")
                 {
                 golgSz = true;
                 }
                 if (currentSeason != "Bright")
                 {
                 for (var i = 0; i < 5; i++)
                 {
                 for (var j = 0; j < 5; j++)
                 {
                 var rdmX = ((30 * Math.random()) - 15) * i;
                 var rdmY = ((30 * Math.random()) - 15) * j;
                 ArtificialIntelligenceAccess.push(new Unit(3337 + rdmX, -5504 + rdmY, "Golgemoff", golgSz, "Teek", {patrolStops: 5, patrolLoop: true, route:[[3617 + rdmX, -7861 + rdmY], [529 + rdmX, -10411 + rdmY], [-698 + rdmX, -8887 + rdmY], [-2232 + rdmX, -8130 + rdmY], [3337 + rdmX, -5504 + rdmY]]}));
                 }
                 }
                 }*/
                ArtificialIntelligenceAccess.push(new Unit(4526, -5718, "Golgemoff", false, "Keek", {patrolStops: 7, patrolLoop: true, route:[[6981, -6924], [6042, -5080], [5943, -4895], [5813, -4301], [-3119, -4307], [-1572, -6834], [4526, -5718]]}));

                //Evrak and Avrak dominating the plains!!!
                ArtificialIntelligenceAccess.push(new Unit(577, -5839, "Evrak", false, "elvin"));
                ArtificialIntelligenceAccess.push(new Unit(727, -12342, "Evrak", false, "evin"));
                ArtificialIntelligenceAccess.push(new Unit(3273, -9944, "Evrak", false, "evarin"));
                ArtificialIntelligenceAccess.push(new Unit(5974, -7025, "Evrak", false, "evarlin"));
                ArtificialIntelligenceAccess.push(new Unit(3584, -12245, "Evrak", true, "Telvarin"));
                ArtificialIntelligenceAccess.push(new Unit(-1799, -12734, "Avrak", true, "alkra"));
                ArtificialIntelligenceAccess.push(new Unit(-1235, -12105, "Avrak", false, "alka"));
                ArtificialIntelligenceAccess.push(new Unit(4638, -5615, "Avrak", false, "alkro"));
                ArtificialIntelligenceAccess.push(new Unit(1298, -10506, "Avrak", false, "alko"));
                ArtificialIntelligenceAccess.push(new Unit(942, -10185, "Avrak", false, "alkii"));
                ArtificialIntelligenceAccess.push(new Unit(5611, -10601, "Avrak", true, "alkrii"));
                ArtificialIntelligenceAccess.push(new Unit(3873, -7008, "Avrak", false, "alke"));

                //A few varns prowl the fields!!!
                ArtificialIntelligenceAccess.push(new Unit(782, -9091, "Varn", true, "elp"));
                ArtificialIntelligenceAccess.push(new Unit(703, -9124, "Varn", true, "h"));
                ArtificialIntelligenceAccess.push(new Unit(451, -9021, "Varn", true, "mepl"));
                ArtificialIntelligenceAccess.push(new Unit(-2228, -10171, "Varn", false, "ease"));
                ArtificialIntelligenceAccess.push(new Unit(-813, -8554, "Varn", false, "coolBouy"));
                ArtificialIntelligenceAccess.push(new Unit(-2474, -4294, "Varn", true, "ent"));
                ArtificialIntelligenceAccess.push(new Unit(-2860, -4164, "Varn", true, "artm"));
                ArtificialIntelligenceAccess.push(new Unit(-2301, -4213, "Varn", false, "dep"));


                //Anters!!!
                scenicList.push(new Scenery("anterHill", 400, -6000, 0, true));
                scenicList.push(new Scenery("anterHill", 170, -10453, 2.7, true));
                scenicList.push(new Scenery("anterHill", 5691, -13164, -5.7, true));

                //Ardils!!!
                ArtificialIntelligenceAccess.push(new Unit(-1190, -9867, "Ardil", true, "Butklii"));
                ArtificialIntelligenceAccess.push(new Unit(-232, -9270, "Ardil", false, "Butkliil"));
                ArtificialIntelligenceAccess.push(new Unit(15, -9447, "Ardil", true, "Butkliik"));
                ArtificialIntelligenceAccess.push(new Unit(138, -13222, "Ardil", false, "Buttlick"));
                ArtificialIntelligenceAccess.push(new Unit(-2433, -12028, "Ardil", true, "Buklii"));
                ArtificialIntelligenceAccess.push(new Unit(5792, -5342, "Ardil", false, "Buliil"));
                ArtificialIntelligenceAccess.push(new Unit(2934, -5905, "Ardil", false, "Buliilk"));
                ArtificialIntelligenceAccess.push(new Unit(4273, -9773, "Ardil", true, "Buklii"));
                ArtificialIntelligenceAccess.push(new Unit(2361, -8858, "Ardil", false, "Bullkilt"));
                ArtificialIntelligenceAccess.push(new Unit(3644, -5757, "Ardil", false, "Bullkilp"));

                //Naaprids grazing!!!
                ArtificialIntelligenceAccess.push(new Unit(808, -11538, "Naaprid", false, "Hueso"));
                ArtificialIntelligenceAccess.push(new Unit(480, -11396, "Naaprid", false, "Hueco"));
                ArtificialIntelligenceAccess.push(new Unit(569, -11716, "Naaprid", false, "Luto"));
                ArtificialIntelligenceAccess.push(new Unit(805, -11862, "Naaprid", false, "Pena"));
                ArtificialIntelligenceAccess.push(new Unit(1038, -11781, "Naaprid", "baby", "Huesito"));
                ArtificialIntelligenceAccess.push(new Unit(924, -11594, "Naaprid", "baby", "Huequita"));
                ArtificialIntelligenceAccess.push(new Unit(254, -11037, "Naaprid", true, "Sufrimiento"));
                ArtificialIntelligenceAccess.push(new Unit(475, -12180, "Naaprid", true, "Agobio"));
                ArtificialIntelligenceAccess.push(new Unit(5017, -8591, "Naaprid", false, "ad"));
                ArtificialIntelligenceAccess.push(new Unit(4740, -8444, "Naaprid", false, "lad"));
                ArtificialIntelligenceAccess.push(new Unit(4813, -8159, "Naaprid", false, "dad"));
                ArtificialIntelligenceAccess.push(new Unit(5077, -8224, "Naaprid", false, "Pad"));
                ArtificialIntelligenceAccess.push(new Unit(4350, -8271, "Naaprid", false, "Pod"));
                ArtificialIntelligenceAccess.push(new Unit(4483, -8366, "Naaprid", "baby", "rod"));
                ArtificialIntelligenceAccess.push(new Unit(4933, -8304, "Naaprid", "baby", "claud"));
                ArtificialIntelligenceAccess.push(new Unit(4931, -8444, "Naaprid", "baby", "bo"));
                ArtificialIntelligenceAccess.push(new Unit(4626, -8263, "Naaprid", "baby", "shu"));
                ArtificialIntelligenceAccess.push(new Unit(4717, -8770, "Naaprid", true, "tod"));
                ArtificialIntelligenceAccess.push(new Unit(4102, -8558, "Naaprid", true, "kerod"));
                ArtificialIntelligenceAccess.push(new Unit(4368, -7993, "Naaprid", true, "dod"));
                ArtificialIntelligenceAccess.push(new Unit(5110, -7913, "Naaprid", true, "kerod"));
                ArtificialIntelligenceAccess.push(new Unit(5472, -8361, "Naaprid", true, "dode"));

                ArtificialIntelligenceAccess.push(new Unit(3400, -7644, "Naaprid", true, "tode"));
                ArtificialIntelligenceAccess.push(new Unit(2769, -7608, "Naaprid", false, "doda"));
                ArtificialIntelligenceAccess.push(new Unit(3028, -7728, "Naaprid", false, "poda"));
                ArtificialIntelligenceAccess.push(new Unit(3010, -7568, "Naaprid", "baby", "dodo"));

                //Perma-Grushes!!!
                ArtificialIntelligenceAccess.push(new Unit(1166, -7761, "Grush", true, "Cruncher"));
                ArtificialIntelligenceAccess.push(new Unit(1196, -13286, "Grush", false, "Crutcher"));
                ArtificialIntelligenceAccess.push(new Unit(-831, -4602, "Grush", false, "Brutcher"));
                ArtificialIntelligenceAccess.push(new Unit(-1625, -7172, "Grush", "baby", "Butch"));

                //Scenery
                scenicList.push(new Scenery("grushweedPlant", 3160 , -4483, -0.3, 1)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", 3250 , -4508, -1.3, 0.6)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", 2260 , -13141, -1.3, 1)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", 2327 , -12965, 2, 0.6)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", 3200 , -4541, 0.3, 0.6)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", 3257 , -4597, 3.2, 1.2)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", 3129 , -4815, -0.8, 1)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", 2899 , -5057, 0, 1.5)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", 3025 , -5183, 0, 1)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", 5462 , -4553, 0, 1.5)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", 5785 , -4826, 0, 1.1)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", 5632 , -4801, 0, 0.8)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", 5547 , -5043, 0, 1)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", 5842 , -5190, 0, 0.6)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", 5568 , -5328, -1, 1)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", 1436 , -8010, 0, 1)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", 1400 , -8000, 0, 1.15)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", 851 , -8382, -5, 1.5)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", 395 , -8227, 5, 1.2)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", 1006 , -12969, 1.111, 1.5)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", 837 , -12997, 1, 1)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", 882 , -12903, 1.6, 1)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", -1501 , -7190, 3.9, 0.9)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", -1770 , -7376, -1.43, 1.7)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", -1398 , -7335, 2.43, 1)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", -1508 , -7609, 3.333, 1.1657)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", -634 , -4556, -5.333, 1.5)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", -928 , -4507, 6.333, 1)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("techiPlant", 2702 , -12061, -8.5, true));
                scenicList.push(new Scenery("techiPlant", 4234 , -5994, -2.5, true));
                scenicList.push(new Scenery("techiPlant", 5419 , -6449, 2.146, true));
                scenicList.push(new Scenery("techiPlant", 1213 , -10947, -2.146, true));
                scenicList.push(new Scenery("techiPlant", 1818 , -13349, -3.05, true));
                scenicList.push(new Scenery("techiPlant", 6059 , -6527, 1, true));
                scenicList.push(new Scenery("techiPlant", 5391 , -5262, -0.1, true));
                scenicList.push(new Scenery("techiPlant", 890 , -7731, -0.2, true));
                scenicList.push(new Scenery("techiPlant", 2227 , -13406, -1.6, true));
                scenicList.push(new Scenery("techiPlant", 707 , -13146, 1.2, true));
                scenicList.push(new Scenery("techiPlant", 3043 , -13540, 1.82, true));
                scenicList.push(new Scenery("techiPlant", 288 , -13032, 0, true));
                scenicList.push(new Scenery("techiPlant", 3204 , -5508, 4, true));
                scenicList.push(new Scenery("techiPlant", 2228 , -4731, -1.46, true));
                scenicList.push(new Scenery("techiPlant", 1510 , -8302, 1.5, true));
                scenicList.push(new Scenery("techiPlant", 6269 , -4950, -3, true));
                scenicList.push(new Scenery("techiPlant", 6317 , -4979, 3, true));
                scenicList.push(new Scenery("techiPlant", 1332 , -13530, 1.45, true));
                scenicList.push(new Scenery("techiPlant", -339 , -10565, 0.1, true));
                scenicList.push(new Scenery("techiPlant", 247 , -10314, -0.05, true));
                scenicList.push(new Scenery("techiPlant", -907 , -4618, 5, true));
                scenicList.push(new Scenery("techiPlant", 1165 , -5317, 4.5, true));
                scenicList.push(new Scenery("techiPlant", 6013 , -5986, 0, true));
                scenicList.push(new Scenery("techiPlant", 2391 , -13076, -4.85, true));
                scenicList.push(new Scenery("techiPlant", 4478 , -9698, -4.5, true));
                scenicList.push(new Scenery("techiPlant", 6212 , -7094, -0.5, true));
                scenicList.push(new Scenery("techiPlant", 3088 , -7476, 3.55, true));
                scenicList.push(new Scenery("techiPlant", 5112 , -10337, -3.75, true));
                scenicList.push(new Scenery("techiPlant", 6302 , -4235, -3.55, true));
                scenicList.push(new Scenery("techiPlant", 4348 , -13031, 8, true));
                scenicList.push(new Scenery("techiPlant", 1298 , -10232, -0.65, true));
                scenicList.push(new Scenery("techiPlant", 4921 , -10739, 0.45, true));
                scenicList.push(new Scenery("luufPlant", 1040 , -6090, 0, true));
                scenicList.push(new Scenery("luufPlant", 3986 , -5087, -6.4, true));
                scenicList.push(new Scenery("luufPlant", 1270 , -12813, -3, true));
                scenicList.push(new Scenery("luufPlant", 189 , -7280, 2, true));
                scenicList.push(new Scenery("luufPlant", 359 , -10792, 1.11, true));
                scenicList.push(new Scenery("luufPlant", 6164 , -5617, 1.111, true));
                scenicList.push(new Scenery("luufPlant", 395 , -12528, 2.3, true));
                scenicList.push(new Scenery("luufPlant", -1373 , -4875, -6.111, true));
                scenicList.push(new Scenery("luufPlant", 6011 , -8981, 2.5, true));
                scenicList.push(new Scenery("luufPlant", 6263 , -12475, -3, true));
                scenicList.push(new Scenery("luufPlant", 1212 , -4303, -6.111, true));
                scenicList.push(new Scenery("luufPlant", 5130 , -11435, 0, true));
                scenicList.push(new Scenery("luufPlant", 4990 , -13386, -5.4321, true));
                scenicList.push(new Scenery("itlinPlant", 3967 , -8854, -2.25, true));
                scenicList.push(new Scenery("itlinPlant", 5067 , -9141, 3.25, true));
                scenicList.push(new Scenery("itlinPlant", 1721 , -10010, -40.4, true));
                scenicList.push(new Scenery("itlinPlant", -1912 , -12299, 0, true));
                scenicList.push(new Scenery("itlinPlant", -715 , -11942, 1, true));
                scenicList.push(new Scenery("itlinPlant", -1536 , -11629, -2.264, true));
                scenicList.push(new Scenery("itlinPlant", 328 , -4654, -2.4, true));
                scenicList.push(new Scenery("itlinPlant", 4636 , -4323, 5.5, true));
                scenicList.push(new Scenery("itlinPlant", 4427 , -11153, -4.444, true));
                scenicList.push(new Scenery("itlinPlant", 2326 , -8795, 6.4, true));
                scenicList.push(new Scenery("itlinPlant", 5033 , -4823, -6.4, true));
                scenicList.push(new Scenery("itlinPlant", 6229 , -3987, 1.5, true));
                scenicList.push(new Scenery("itlinPlant", 3171 , -10964, 0, true));
                scenicList.push(new Scenery("itlinPlant", 6441 , -9318, 2.5, true));
                scenicList.push(new Scenery("palntPlant", 3758 , -4310, 6, true));
                scenicList.push(new Scenery("palntPlant", 5412 , -6751, 0, true));
                scenicList.push(new Scenery("palntPlant", -134 , -5841, 1, true));
                scenicList.push(new Scenery("palntPlant", 852 , -8584, 2, true));
                scenicList.push(new Scenery("palntPlant", 819 , -13343, 4, true));
                scenicList.push(new Scenery("palntPlant", 410 , -11262, 3, true));
                scenicList.push(new Scenery("palntPlant", 4141 , -11693, -3.2, true));
                scenicList.push(new Scenery("palntPlant", -1572 , -9399, -1.4, true));
                scenicList.push(new Scenery("palntPlant", 3047 , -12626, -2.5, true));
                scenicList.push(new Scenery("palntPlant", 1076 , -9888, 0, true));
                scenicList.push(new Scenery("palntPlant", 1544 , -9168, -3.14159, true));
                scenicList.push(new Scenery("palntPlant", -779 , -5189, 1.9, true));
                scenicList.push(new Scenery("palntPlant", 4348 , -7674, 4.89, true));
                scenicList.push(new Scenery("palntPlant", 5326 , -8149, -1.9, true));
                scenicList.push(new Scenery("palntPlant", 5586 , -12299, 6.2, true));
                scenicList.push(new Scenery("palntPlant", -714 , -6487, 2.3, true));
                scenicList.push(new Scenery("palntPlant", 2858 , -5643, 0.25, true));
                scenicList.push(new Scenery("palntPlant", 3579 , -9140, -1, true));
                scenicList.push(new Scenery("palntPlant", 2950 , -11178, 0, true));
                scenicList.push(new Scenery("butterMellowPlant", 4099 , -12455, 6.66666, true));


                change = "s1";
            }
        }
        else if (region == "s2") //Y > 6290 && Y < 32370
        {
            if (change != "s2")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                //pine trees of the Hent Woods
                scenicList.push(new Scenery("pineTree", 4454 , -17547, 0, true));
                scenicList.push(new Scenery("pineTree", 4165 , -17636, -2, true));
                scenicList.push(new Scenery("pineTree", 4096 , -17461, 0.25, true));
                scenicList.push(new Scenery("pineTree", 3881 , -17567, 6, true));
                scenicList.push(new Scenery("pineTree", 4458 , -17811, -5.5, true));
                scenicList.push(new Scenery("pineTree", 4760 , -17816, 0, true));
                scenicList.push(new Scenery("pineTree", 4690 , -18108, 3, true));
                scenicList.push(new Scenery("pineTree", 4257 , -18126, -4, true));
                scenicList.push(new Scenery("pineTree", 4030 , -17864, -2.87, true));
                scenicList.push(new Scenery("pineTree", 3592 , -17885, -0.25, true));
                scenicList.push(new Scenery("pineTree", 3911 , -18085, 1.4, true));
                scenicList.push(new Scenery("pineTree", 3527 , -18125, -3.6, true));
                scenicList.push(new Scenery("pineTree", 3200 , -18090, 1, true));
                scenicList.push(new Scenery("pineTree", 2945 , -17832, -1, true));
                scenicList.push(new Scenery("pineTree", 2930 , -18115, 0.64, true));
                scenicList.push(new Scenery("pineTree", 2628 , -17873, -21, true));
                scenicList.push(new Scenery("pineTree", 2463 , -18015, -4.25, true));
                scenicList.push(new Scenery("pineTree", 2400 , -17827, 5, true));
                scenicList.push(new Scenery("pineTree", 2604 , -18292, -6, true));
                scenicList.push(new Scenery("pineTree", 2150 , -18202, -3.333, true));
                scenicList.push(new Scenery("pineTree", 2302 , -18474, 2.62, true));
                scenicList.push(new Scenery("pineTree", 2067 , -18710, -4, true));
                scenicList.push(new Scenery("pineTree", 1758 , -18755, 2.9, true));
                scenicList.push(new Scenery("pineTree", 1819 , -19032, -3.2, true));
                scenicList.push(new Scenery("pineTree", 1779 , -19291, -1.4, true));
                scenicList.push(new Scenery("pineTree", 1689 , -19530, 3.45, true));
                scenicList.push(new Scenery("pineTree", 1788 , -19793, 10, true));
                scenicList.push(new Scenery("pineTree", 1784 , -19975, -1, true));
                scenicList.push(new Scenery("pineTree", 2184 , -20173, 0, true));
                scenicList.push(new Scenery("pineTree", 2507 , -20311, -2.6, true));
                scenicList.push(new Scenery("pineTree", 2380 , -20519, 6.25, true));
                scenicList.push(new Scenery("pineTree", 2516 , -20051, 1.9, true));
                scenicList.push(new Scenery("pineTree", 2625 , -20605, 5.4, true));
                scenicList.push(new Scenery("pineTree", 2855 , -20359, -1.3, true));
                scenicList.push(new Scenery("pineTree", 3001 , -20632, 3, true));
                scenicList.push(new Scenery("pineTree", 3273 , -20420, 420, true));
                scenicList.push(new Scenery("pineTree", 3562 , -20574, -2.95, true));
                scenicList.push(new Scenery("pineTree", 3827 , -20435, 2.25, true));
                scenicList.push(new Scenery("pineTree", 3777 , -20587, 1.4, true));
                scenicList.push(new Scenery("pineTree", 3287 , -20705, -3.8, true));
                scenicList.push(new Scenery("pineTree", 3858 , -20196, 0, true));
                scenicList.push(new Scenery("pineTree", 3549 , -20041, 5.1, true));
                scenicList.push(new Scenery("pineTree", 3397 , -20228, -4.64, true));
                scenicList.push(new Scenery("pineTree", 3075 , -20114, -2.2, true));
                scenicList.push(new Scenery("pineTree", 3278 , -19859, -5.25, true));
                scenicList.push(new Scenery("pineTree", 2900 , -19899, 5.27, true));
                scenicList.push(new Scenery("pineTree", 4203 , -20271, 6, true));
                scenicList.push(new Scenery("pineTree", 4095 , -19928, 3.333, true));
                scenicList.push(new Scenery("pineTree", 4590 , -20355, -2.62, true));
                scenicList.push(new Scenery("pineTree", 4455 , -20090, -4.8, true));
                scenicList.push(new Scenery("pineTree", 4782 , -20162, -2.9, true));
                scenicList.push(new Scenery("pineTree", 4648 , -19831, 3.2, true));
                scenicList.push(new Scenery("pineTree", 4288 , -19741, 1.8, true));
                scenicList.push(new Scenery("pineTree", 2147 , -19859, 5.45, true));
                scenicList.push(new Scenery("pineTree", 2560 , -19729, -9, true));
                scenicList.push(new Scenery("pineTree", 2080 , -19510, 6.4, true));
                scenicList.push(new Scenery("pineTree", 2294 , -19131, 0, true));
                scenicList.push(new Scenery("pineTree", 2687 , -19276, 5.1, true));
                scenicList.push(new Scenery("pineTree", 3061 , -19422, -4.64, true));
                scenicList.push(new Scenery("pineTree", 2617 , -18834, -2.2, true));
                scenicList.push(new Scenery("pineTree", 3736 , -19516, -5.25, true));
                scenicList.push(new Scenery("pineTree", 3566 , -19178, 5.27, true));
                scenicList.push(new Scenery("pineTree", 3080 , -18993, 6, true));
                scenicList.push(new Scenery("pineTree", 4236 , -19212, 3.17, true));
                scenicList.push(new Scenery("pineTree", 4954 , -19360, -2.62, true));
                scenicList.push(new Scenery("pineTree", 5164 , -19079, -4.8, true));
                scenicList.push(new Scenery("pineTree", 4725 , -18928, -2.9, true));
                scenicList.push(new Scenery("pineTree", 5044 , -19662, 3.9, true));
                scenicList.push(new Scenery("pineTree", 4689 , -18608, 1.8, true));
                scenicList.push(new Scenery("pineTree", 4089 , -18840, 5.45, true));
                scenicList.push(new Scenery("pineTree", 3554 , -18767, -0.9, true));
                scenicList.push(new Scenery("pineTree", 3903 , -18510, 6.21, true));
                scenicList.push(new Scenery("pineTree", 3170 , -18554, 0, true));
                scenicList.push(new Scenery("pineTree", 3442 , -18398, -1.8, true));
                scenicList.push(new Scenery("pineTree", 4535 , -19436, 4.525, true));
                scenicList.push(new Scenery("pineTree", 4322 , -18519, -2.7, true));
                scenicList.push(new Scenery("pineTree", 2876 , -18659, 2.25, true));

                //shehids of the Hent Woods
                ArtificialIntelligenceAccess.push(new Unit(3932, -17662, "Shehid", true, "Kulbai"));
                ArtificialIntelligenceAccess.push(new Unit(4035, -17625, "Shehid", false, "Kelb"));
                ArtificialIntelligenceAccess.push(new Unit(3938, -17523, "Shehid", false, "Kalblii"));
                ArtificialIntelligenceAccess.push(new Unit(4022, -17478, "Shehid", false, "Kellib"));
                ArtificialIntelligenceAccess.push(new Unit(4151, -17714, "Shehid", true, "Kulblii"));
                ArtificialIntelligenceAccess.push(new Unit(4393, -17575, "Shehid", false, "Kalb"));
                ArtificialIntelligenceAccess.push(new Unit(4507, -17775, "Shehid", false, "Kolblii"));
                ArtificialIntelligenceAccess.push(new Unit(4141, -19864, "Shehid", true, "Kulb"));
                ArtificialIntelligenceAccess.push(new Unit(4366, -19780, "Shehid", false, "Kelblii"));
                ArtificialIntelligenceAccess.push(new Unit(4226, -20180, "Shehid", false, "Kilb"));
                ArtificialIntelligenceAccess.push(new Unit(3423, -20291, "Shehid", false, "Kilblii"));
                ArtificialIntelligenceAccess.push(new Unit(3364, -20321, "Shehid", true, "Kullib"));
                ArtificialIntelligenceAccess.push(new Unit(3288, -20360, "Shehid", false, "Kilbin"));
                ArtificialIntelligenceAccess.push(new Unit(3315, -20481, "Shehid", false, "Kilobii"));
                ArtificialIntelligenceAccess.push(new Unit(3239, -20496, "Shehid", false, "Kilobin"));
                ArtificialIntelligenceAccess.push(new Unit(3709, -20608, "Shehid", true, "Kulobii"));
                ArtificialIntelligenceAccess.push(new Unit(4471, -19469, "Shehid", true, "Kulobin"));
                ArtificialIntelligenceAccess.push(new Unit(4587, -19363, "Shehid", false, "Kelobii"));
                ArtificialIntelligenceAccess.push(new Unit(4436, -19307, "Shehid", false, "Keloblii"));
                ArtificialIntelligenceAccess.push(new Unit(4294, -19340, "Shehid", false, "Kalobii"));
                ArtificialIntelligenceAccess.push(new Unit(4262, -19156, "Shehid", false, "Kaloblii"));
                ArtificialIntelligenceAccess.push(new Unit(4339, -19166, "Shehid", false, "Kelobin"));
                ArtificialIntelligenceAccess.push(new Unit(4476, -19184, "Shehid", false, "Kalobin"));
                ArtificialIntelligenceAccess.push(new Unit(4784, -19147, "Shehid", true, "Kulublii"));
                ArtificialIntelligenceAccess.push(new Unit(4931, -19224, "Shehid", false, "Kaloblin"));
                ArtificialIntelligenceAccess.push(new Unit(4647, -19220, "Shehid", false, "Keloblin"));
                ArtificialIntelligenceAccess.push(new Unit(4771, -19344, "Shehid", false, "Kiloblii"));
                ArtificialIntelligenceAccess.push(new Unit(4647, -19461, "Shehid", false, "Kiloblin"));
                ArtificialIntelligenceAccess.push(new Unit(4839, -19518, "Shehid", true, "Kulub"));
                ArtificialIntelligenceAccess.push(new Unit(4673, -19017, "Shehid", false, "Kilbii"));
                ArtificialIntelligenceAccess.push(new Unit(4514, -18962, "Shehid", false, "Kalbii"));
                ArtificialIntelligenceAccess.push(new Unit(4141, -18799, "Shehid", false, "Kelbii"));
                ArtificialIntelligenceAccess.push(new Unit(5068, -19003, "Shehid", false, "Kolbii"));
                ArtificialIntelligenceAccess.push(new Unit(4027, -18966, "Shehid", false, "Kolblin"));
                ArtificialIntelligenceAccess.push(new Unit(4651, -18044, "Shehid", true, "Kulbii"));
                ArtificialIntelligenceAccess.push(new Unit(4385, -18047, "Shehid", false, "Kilbolin"));
                ArtificialIntelligenceAccess.push(new Unit(2574, -19383, "Shehid", false, "Kalbilin"));
                ArtificialIntelligenceAccess.push(new Unit(2731, -19378, "Shehid", false, "Kolbelin"));
                ArtificialIntelligenceAccess.push(new Unit(1719, -19712, "Shehid", false, "Kelbalin"));
                ArtificialIntelligenceAccess.push(new Unit(1768, -19896, "Shehid", true, "Kulbulun"));
                ArtificialIntelligenceAccess.push(new Unit(2130, -20041, "Shehid", false, "Kellbell"));

                //Plants in the Hent Woods
                scenicList.push(new Scenery("glinPlant", 4600 , -19019, 0.2, true));
                scenicList.push(new Scenery("glinPlant", 4561 , -18967, -2, true));
                scenicList.push(new Scenery("glinPlant", 4671 , -19123, 1, true));
                scenicList.push(new Scenery("glinPlant", 4284 , -19098, -3, true));
                scenicList.push(new Scenery("glinPlant", 4620 , -19317, 2.3, true));
                scenicList.push(new Scenery("glinPlant", 4790 , -19239, 4, true));
                scenicList.push(new Scenery("glinPlant", 4375 , -19333, -0.6, true));
                scenicList.push(new Scenery("glinPlant", 4366 , -19272, 4.3, true));
                scenicList.push(new Scenery("glinPlant", 4515 , -19202, -0.15, true));
                scenicList.push(new Scenery("glinPlant", 4122 , -18173, 3.15, true));
                scenicList.push(new Scenery("glinPlant", 3466 , -19105, 0, true));
                scenicList.push(new Scenery("glinPlant", 2469 , -19910, -5.15, true));
                scenicList.push(new Scenery("glinPlant", 3086 , -18163, 6, true));
                scenicList.push(new Scenery("glinPlant", 2759 , -18588, -1, true));
                scenicList.push(new Scenery("cyrinthilimPlant", 3272 , -20230, 5.3, true));
                scenicList.push(new Scenery("cyrinthilimPlant", 3750 , -19465, 0, true));
                scenicList.push(new Scenery("cyrinthilimPlant", 2502 , -17940, -4.75, true));
                scenicList.push(new Scenery("tepprekliaPlant", 2786 , -19180, 4, true));
                scenicList.push(new Scenery("tepprekliaPlant", 3447 , -19738, 1, true));
                scenicList.push(new Scenery("tepprekliaPlant", 4295 , -19967, -2, true));
                scenicList.push(new Scenery("tepprekliaPlant", 2456 , -19518, -5, true));
                scenicList.push(new Scenery("culprisPlant", 3873 , -19086, -3.1, true));
                scenicList.push(new Scenery("culprisPlant", 3520 , -18606, 2.4, true));
                scenicList.push(new Scenery("culprisPlant", 2823 , -18275, 4.6, true));
                scenicList.push(new Scenery("culprisPlant", 3546 , -18276, -1.9, true));
                scenicList.push(new Scenery("culprisPlant", 4032 , -17721, -3.1, true));
                scenicList.push(new Scenery("stomwikPlant", 4355 , -18817, 0.25, true));
                scenicList.push(new Scenery("stomwikPlant", 3873 , -19909, 2, true));
                scenicList.push(new Scenery("stomwikPlant", 2241 , -18805, -1.11112, true));
                scenicList.push(new Scenery("akerPlant", 3670 , -20463, 0, true));
                scenicList.push(new Scenery("akerPlant", 3569 , -20203, -5, true));
                scenicList.push(new Scenery("akerPlant", 3739 , -20320, 3.8, true));
                scenicList.push(new Scenery("akerPlant", 2496 , -18207, -6, true));
                scenicList.push(new Scenery("akerPlant", 3670 , -18860, 2, true));
                scenicList.push(new Scenery("akerPlant", 4586 , -19997, -4, true));
                scenicList.push(new Scenery("bequonPlant", 3884 , -18747, 0, true));
                scenicList.push(new Scenery("bequonPlant", 4256 , -17828, -5.56, true));

                //creatures of the Hent Woods
                var random = Math.floor(Math.random() * 8);

                if (random == 0) //Varns and Snakes and Bears, oh my!
                {
                    ArtificialIntelligenceAccess.push(new Unit(4519, -19650, "BlackBear", false, "Juvjuv"));
                    ArtificialIntelligenceAccess.push(new Unit(3599, -20269, "BlackBear", false, "Juvjuvjuv"));
                    ArtificialIntelligenceAccess.push(new Unit(4400, -20315, "BlackBear", true, "Juv"));
                    ArtificialIntelligenceAccess.push(new Unit(4413, -18753, "BlackBear", false, "Juvjuvjuvjuv"));
                    ArtificialIntelligenceAccess.push(new Unit(3554, -20498, "Viper", false, "slitherin'"));
                    ArtificialIntelligenceAccess.push(new Unit(3004, -19881, "Viper", false, "Serpal"));
                    ArtificialIntelligenceAccess.push(new Unit(2704, -17946, "Viper", false, "Serper"));
                    ArtificialIntelligenceAccess.push(new Unit(3939, -18619, "Viper", false, "Serperus"));
                    ArtificialIntelligenceAccess.push(new Unit(2685, -18280, "Viper", true, "Serpenta"));
                    ArtificialIntelligenceAccess.push(new Unit(1629, -20101, "Lizard", false, "Lizella"));
                    ArtificialIntelligenceAccess.push(new Unit(4529, -17865, "Lizard", false, "Lizette"));
                    ArtificialIntelligenceAccess.push(new Unit(3435, -17908, "Varn", true, "Dog"));
                    ArtificialIntelligenceAccess.push(new Unit(3540, -17820, "Varn", false, "Dogdog"));
                    ArtificialIntelligenceAccess.push(new Unit(3504, -17954, "Varn", false, "Doggy"));
                    ArtificialIntelligenceAccess.push(new Unit(3583, -18003, "Varn", false, "Doggydog"));
                    ArtificialIntelligenceAccess.push(new Unit(3969, -17955, "Varn", true, "Doggg"));
                    ArtificialIntelligenceAccess.push(new Unit(4102, -17937, "Varn", true, "Dogg"));
                    ArtificialIntelligenceAccess.push(new Unit(3412, -18028, "Varn", true, "Dogggg"));
                    ArtificialIntelligenceAccess.push(new Unit(3270, -18037, "Varn", true, "Doggdog"));
                    ArtificialIntelligenceAccess.push(new Unit(3205, -17996, "Varn", false, "Doggdogdog"));
                    ArtificialIntelligenceAccess.push(new Unit(2989, -17786, "Varn", true, "Doggdogg"));
                    ArtificialIntelligenceAccess.push(new Unit(3922, -19819, "Varn", true, "Gen"));
                    ArtificialIntelligenceAccess.push(new Unit(3688, -19583, "Varn", true, "Gengen"));
                    ArtificialIntelligenceAccess.push(new Unit(3764, -20017, "Varn", false, "Gengengen"));
                    ArtificialIntelligenceAccess.push(new Unit(3148, -19486, "Varn", true, "Gengengengen"));
                    ArtificialIntelligenceAccess.push(new Unit(3335, -19775, "Varn", false, "Gengengengengen"));
                }
                else if (random == 1) //Gribs, Lizards, and Narthwarps + more
                {
                    ArtificialIntelligenceAccess.push(new Unit(2382, -18246, "Lizard", true, "lizelia"));
                    ArtificialIntelligenceAccess.push(new Unit(3232, -18359, "Lizard", true, "lizario"));
                    ArtificialIntelligenceAccess.push(new Unit(3528, -18283, "Lizard", false, "Lizuel"));
                    ArtificialIntelligenceAccess.push(new Unit(3899, -19196, "Lizard", false, "Lizlo"));
                    ArtificialIntelligenceAccess.push(new Unit(4529, -17865, "Lizard", false, "Lizette"));
                    ArtificialIntelligenceAccess.push(new Unit(1629, -20101, "Lizard", false, "Lizella"));
                    ArtificialIntelligenceAccess.push(new Unit(4112, -18408, "Narthwarp", false, "Mokmok"));
                    ArtificialIntelligenceAccess.push(new Unit(3471, -18754, "Narthwarp", false, "Mokmokmok"));
                    ArtificialIntelligenceAccess.push(new Unit(3566, -18703, "Narthwarp", false, "Mokmokmokmok"));
                    ArtificialIntelligenceAccess.push(new Unit(2280, -19632, "Narthwarp", false, "Mokmokmokmokmok"));
                    ArtificialIntelligenceAccess.push(new Unit(2263, -18893, "Narthwarp", false, "Mokkmokk"));
                    ArtificialIntelligenceAccess.push(new Unit(2111, -18829, "Narthwarp", false, "Mokk"));
                    ArtificialIntelligenceAccess.push(new Unit(2065, -18977, "Narthwarp", false, "Mokkmokkmokk"));
                    ArtificialIntelligenceAccess.push(new Unit(2588, -19033, "Narthwarp", false, "Mokkmokkmokkmokk"));
                    ArtificialIntelligenceAccess.push(new Unit(2493, -19087, "Narthwarp", false, "Mokkmokkmokkmokkmokk"));
                    ArtificialIntelligenceAccess.push(new Unit(3922, -19819, "Grib", true, "Gen"));
                    ArtificialIntelligenceAccess.push(new Unit(3688, -19583, "Grib", true, "Gengen"));
                    ArtificialIntelligenceAccess.push(new Unit(3764, -20017, "Grib", false, "Gengengen"));
                    ArtificialIntelligenceAccess.push(new Unit(3148, -19486, "Grib", true, "Gengengengen"));
                    ArtificialIntelligenceAccess.push(new Unit(3335, -19775, "Grib", false, "Gengengengengen"));
                    ArtificialIntelligenceAccess.push(new Unit(2924, -19247, "BlackBear", false, "Juvjuvjuvjuv"));
                    ArtificialIntelligenceAccess.push(new Unit(4572, -19736, "Viper", false, "Serperal"));
                    ArtificialIntelligenceAccess.push(new Unit(4509, -19980, "Varn", true, "Gengengengengen"));
                    ArtificialIntelligenceAccess.push(new Unit(3914, -20453, "Varn", false, "Gengengen"));
                    ArtificialIntelligenceAccess.push(new Unit(3593, -20375, "BlackBear", true, "Juv"));
                    ArtificialIntelligenceAccess.push(new Unit(3122, -20103, "Grib", true, "Genn"));
                    ArtificialIntelligenceAccess.push(new Unit(2713, -20004, "BlackBear", false, "Juvjuv"));
                    ArtificialIntelligenceAccess.push(new Unit(4832, -20389, "Varn", true, "Genegen"));
                    ArtificialIntelligenceAccess.push(new Unit(3983, -20706, "Varn", true, "Gengenege"));
                    ArtificialIntelligenceAccess.push(new Unit(4317, -17697, "Lizard", true, "Genngenn"));
                    ArtificialIntelligenceAccess.push(new Unit(4460, -17692, "Lizard", false, "Gengengenn"));
                    scenicList.push(new Scenery("beeHive", 4386 , -19231, -5.7, true));
                }
                else if (random == 2) //mix of all + extra Lizards and Shehids
                {
                    ArtificialIntelligenceAccess.push(new Unit(4312, -17799, "Shehid", true, "Oogluk"));
                    ArtificialIntelligenceAccess.push(new Unit(4259, -17920, "Shehid", true, "Ooglook"));
                    ArtificialIntelligenceAccess.push(new Unit(3915, -18710, "BlackBear", true, "Juv"));
                    ArtificialIntelligenceAccess.push(new Unit(3689, -18923, "BlackBear", false, "Juve"));
                    ArtificialIntelligenceAccess.push(new Unit(3981, -19126, "BlackBear", false, "Juva"));
                    ArtificialIntelligenceAccess.push(new Unit(4521, -19642, "Varn", true, "Genegen"));
                    ArtificialIntelligenceAccess.push(new Unit(4466, -19796, "Varn", true, "Gengenege"));
                    ArtificialIntelligenceAccess.push(new Unit(4658, -19933, "Varn", false, "Genegene"));
                    ArtificialIntelligenceAccess.push(new Unit(4534, -20054, "Varn", false, "Gengenegeg"));
                    ArtificialIntelligenceAccess.push(new Unit(4739, -19996, "Varn", false, "Gengegnegeg"));
                    ArtificialIntelligenceAccess.push(new Unit(4609, -20199, "Varn", true, "Gengengegg"));
                    ArtificialIntelligenceAccess.push(new Unit(4219, -20339, "Varn", false, "Gengegnegegegg"));
                    ArtificialIntelligenceAccess.push(new Unit(4074, -20492, "Varn", true, "Gengengeggeg"));
                    ArtificialIntelligenceAccess.push(new Unit(3517, -20388, "Lizard", true, "lil"));
                    ArtificialIntelligenceAccess.push(new Unit(3451, -20442, "Lizard", false, "lili"));
                    ArtificialIntelligenceAccess.push(new Unit(3630, -20386, "Lizard", false, "lilil"));
                    ArtificialIntelligenceAccess.push(new Unit(3628, -20278, "Lizard", true, "lilily"));
                    ArtificialIntelligenceAccess.push(new Unit(3730, -20247, "Lizard", true, "lilili"));
                    ArtificialIntelligenceAccess.push(new Unit(3609, -20199, "Lizard", false, "lililil"));
                    ArtificialIntelligenceAccess.push(new Unit(3822, -19959, "Shehid", true, "looklook"));
                    ArtificialIntelligenceAccess.push(new Unit(3366, -19871, "Viper", false, "Serpal"));
                    ArtificialIntelligenceAccess.push(new Unit(3275, -19793, "Viper", false, "Serpette"));
                    ArtificialIntelligenceAccess.push(new Unit(3236, -19926, "Viper", false, "Serpikk"));
                    ArtificialIntelligenceAccess.push(new Unit(3209, -20196, "Shehid", false, "Aglolok"));
                    ArtificialIntelligenceAccess.push(new Unit(3321, -20228, "Shehid", false, "Agloolok"));
                    ArtificialIntelligenceAccess.push(new Unit(2528, -20469, "Narthwarp", false, "Mokk"));
                    ArtificialIntelligenceAccess.push(new Unit(2065, -20536, "Narthwarp", false, "Mokmok"));
                    ArtificialIntelligenceAccess.push(new Unit(2298, -20584, "Narthwarp", false, "Mok"));
                    ArtificialIntelligenceAccess.push(new Unit(2564, -20385, "Narthwarp", false, "Mokkmokk"));
                    ArtificialIntelligenceAccess.push(new Unit(2795, -20356, "Narthwarp", false, "Mokkmokkmokk"));
                    ArtificialIntelligenceAccess.push(new Unit(2189, -20240, "Narthwarp", false, "Mokmokmok"));
                    ArtificialIntelligenceAccess.push(new Unit(1900, -19618, "Grib", false, "Genden"));
                    ArtificialIntelligenceAccess.push(new Unit(1722, -19423, "Grib", true, "Gengen"));
                    ArtificialIntelligenceAccess.push(new Unit(2182, -19675, "Grib", false, "Gengengen"));
                    ArtificialIntelligenceAccess.push(new Unit(2368, -20157, "Shehid", true, "Uglug"));
                    ArtificialIntelligenceAccess.push(new Unit(2385, -19351, "BlackBear", false, "Juvu"));
                    ArtificialIntelligenceAccess.push(new Unit(1792, -19565, "Grib", true, "Gengenggle"));
                    ArtificialIntelligenceAccess.push(new Unit(2835, -18881, "Varn", false, "Gengenegegee"));
                    ArtificialIntelligenceAccess.push(new Unit(2572, -18527, "Narthwarp", false, "Mokkly"));
                    ArtificialIntelligenceAccess.push(new Unit(2386, -18217, "Narthwarp", false, "Mokmokly"));
                    ArtificialIntelligenceAccess.push(new Unit(3128, -18323, "Narthwarp", false, "Mokly"));
                    ArtificialIntelligenceAccess.push(new Unit(3009, -18300, "Narthwarp", false, "Mokkmokkly"));
                    ArtificialIntelligenceAccess.push(new Unit(2787, -17985, "Lizard", true, "lililily"));
                    ArtificialIntelligenceAccess.push(new Unit(2243, -17750, "Lizard", false, "lillii"));
                    ArtificialIntelligenceAccess.push(new Unit(2105, -18961, "Lizard", false, "llili"));
                    ArtificialIntelligenceAccess.push(new Unit(3744, -18017, "Viper", false, "Serpilate"));
                    ArtificialIntelligenceAccess.push(new Unit(3428, -17772, "Lizard", true, "lilililii"));
                    ArtificialIntelligenceAccess.push(new Unit(3642, -18547, "BlackBear", false, "Juvjuv"));
                }
                else if (random == 3)
                {
                    ArtificialIntelligenceAccess.push(new Unit(3848, -18740, "Viper", true, "Serpral"));
                    ArtificialIntelligenceAccess.push(new Unit(4235, -17914, "Narthwarp", true, "tantan"));
                    ArtificialIntelligenceAccess.push(new Unit(4327, -17734, "Narthwarp", false, "tant"));
                    ArtificialIntelligenceAccess.push(new Unit(4323, -17625, "Narthwarp", false, "tanto"));
                    ArtificialIntelligenceAccess.push(new Unit(4260, -17499, "Narthwarp", false, "tanta"));
                    ArtificialIntelligenceAccess.push(new Unit(4116, -18008, "Narthwarp", false, "tantin"));
                    ArtificialIntelligenceAccess.push(new Unit(4479, -18079, "Narthwarp", false, "tantil"));
                    ArtificialIntelligenceAccess.push(new Unit(4429, -18138, "Narthwarp", false, "tantilizer"));
                    ArtificialIntelligenceAccess.push(new Unit(4134, -18013, "Narthwarp", false, "tanton"));
                    ArtificialIntelligenceAccess.push(new Unit(4005, -18143, "Narthwarp", false, "tantorl"));
                    ArtificialIntelligenceAccess.push(new Unit(4087, -18229, "Narthwarp", false, "tantarl"));
                    ArtificialIntelligenceAccess.push(new Unit(3973, -18441, "Narthwarp", false, "tantirl"));
                    if (player.level >= 16 && Math.random() > 0.78)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(3868, -19021, "Viper", "giant", "Seprias Lady-Regent of Snakes"));
                        ArtificialIntelligenceAccess.push(new Unit(2660, -19158, "Viper", true, "Serprala the Lady's Daughter"));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(2660, -19158, "Viper", false, "Serpserp"));
                        ArtificialIntelligenceAccess.push(new Unit(3411, -19806, "Grib", true, "Gengenagin"));
                        ArtificialIntelligenceAccess.push(new Unit(3900, -19921, "Grib", true, "Gengenagen"));
                        ArtificialIntelligenceAccess.push(new Unit(3617, -20306, "Grib", false, "Gengenagon"));
                    }
                    ArtificialIntelligenceAccess.push(new Unit(3148, -18301, "Viper", true, "Serpril"));
                    ArtificialIntelligenceAccess.push(new Unit(2514, -18338, "Viper", false, "Serprol"));
                    ArtificialIntelligenceAccess.push(new Unit(2209, -18137, "Viper", false, "Serprul"));
                    ArtificialIntelligenceAccess.push(new Unit(2277, -18815, "BlackBear", false, "Juvjuv"));
                    ArtificialIntelligenceAccess.push(new Unit(1844, -18832, "Viper", false, "Serprool"));
                    ArtificialIntelligenceAccess.push(new Unit(2735, -20136, "Lizard", true, "lizzzzzzzzzzzzz"));
                    ArtificialIntelligenceAccess.push(new Unit(2890, -20208, "Lizard", false, "lizz"));
                    ArtificialIntelligenceAccess.push(new Unit(3063, -20462, "Shehid", true, "Uglug"));
                    ArtificialIntelligenceAccess.push(new Unit(3260, -20145, "Lizard", false, "lizzz"));
                    ArtificialIntelligenceAccess.push(new Unit(4177, -20089, "BlackBear", true, "Juve"));
                    ArtificialIntelligenceAccess.push(new Unit(4445, -19885, "BlackBear", false, "Juva"));
                    ArtificialIntelligenceAccess.push(new Unit(4394, -20305, "Varn", false, "Geng"));
                    ArtificialIntelligenceAccess.push(new Unit(1597, -19724, "Varn", true, "Genge"));
                    ArtificialIntelligenceAccess.push(new Unit(2285, -20689, "Varn", false, "Gengen"));
                    ArtificialIntelligenceAccess.push(new Unit(2442, -20721, "Varn", true, "Gen"));
                    ArtificialIntelligenceAccess.push(new Unit(1931, -20187, "Varn", true, "Genger"));
                    ArtificialIntelligenceAccess.push(new Unit(1939, -20390, "Varn", true, "Gengerly"));
                    ArtificialIntelligenceAccess.push(new Unit(2161, -20412, "Varn", true, "Gengar"));
                    ArtificialIntelligenceAccess.push(new Unit(3945, -20676, "Lizard", true, "lizzzz"));
                }
                else if (random == 4) //Leveled/Random Map
                {

                    if (player.level >= 9)
                    {
                        if (Math.random() > 0.5)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(2687, -20340, "Grib", true, "geg"));
                            ArtificialIntelligenceAccess.push(new Unit(2526, -20468, "Grib", true, "Gege"));
                            ArtificialIntelligenceAccess.push(new Unit(2819, -20542, "Grib", false, "Gech"));
                            ArtificialIntelligenceAccess.push(new Unit(3002, -20457, "Grib", false, "Goch"));
                            ArtificialIntelligenceAccess.push(new Unit(3162, -20555, "Grib", false, "Gich"));
                            ArtificialIntelligenceAccess.push(new Unit(3133, -20755, "Grib", false, "Guch"));
                            ArtificialIntelligenceAccess.push(new Unit(2791, -20695, "Grib", false, "Gooch"));

                            ArtificialIntelligenceAccess.push(new Unit(2587, -19656, "Varn", false, "Geng"));
                            ArtificialIntelligenceAccess.push(new Unit(2527, -19619, "Varn", true, "Genge"));
                            ArtificialIntelligenceAccess.push(new Unit(2489, -19693, "Varn", false, "Gengen"));
                            ArtificialIntelligenceAccess.push(new Unit(2138, -19535, "Varn", true, "Gen"));
                            ArtificialIntelligenceAccess.push(new Unit(2119, -19443, "Varn", true, "Genger"));
                            ArtificialIntelligenceAccess.push(new Unit(2229, -19145, "Varn", false, "Gengenar"));
                            ArtificialIntelligenceAccess.push(new Unit(1856, -19245, "Varn", true, "Genar"));
                            ArtificialIntelligenceAccess.push(new Unit(2311, -19255, "Varn", true, "Gengar"));
                            ArtificialIntelligenceAccess.push(new Unit(3129, -19416, "Viper", false, "Serprul"));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(2687, -20340, "Varn", true, "geg"));
                            ArtificialIntelligenceAccess.push(new Unit(2526, -20468, "Varn", true, "Gege"));
                            ArtificialIntelligenceAccess.push(new Unit(2819, -20542, "Varn", false, "Gech"));
                            ArtificialIntelligenceAccess.push(new Unit(3002, -20457, "Varn", false, "Goch"));
                            ArtificialIntelligenceAccess.push(new Unit(3162, -20555, "Varn", false, "Gich"));
                            ArtificialIntelligenceAccess.push(new Unit(3133, -20755, "Varn", false, "Guch"));
                            ArtificialIntelligenceAccess.push(new Unit(2791, -20695, "Varn", false, "Gooch"));

                            ArtificialIntelligenceAccess.push(new Unit(2587, -19656, "Grib", false, "Geng"));
                            ArtificialIntelligenceAccess.push(new Unit(2527, -19619, "Grib", true, "Genge"));
                            ArtificialIntelligenceAccess.push(new Unit(2489, -19693, "Grib", false, "Gengen"));
                            ArtificialIntelligenceAccess.push(new Unit(2138, -19535, "Grib", true, "Gen"));
                            ArtificialIntelligenceAccess.push(new Unit(2119, -19443, "Grib", true, "Genger"));
                            ArtificialIntelligenceAccess.push(new Unit(2229, -19145, "Grib", false, "Gengenar"));
                            ArtificialIntelligenceAccess.push(new Unit(1856, -19245, "Grib", true, "Genar"));
                            ArtificialIntelligenceAccess.push(new Unit(2311, -19255, "Grib", true, "Gengar"));
                        }
                        ArtificialIntelligenceAccess.push(new Unit(3751, -17759, "Grib", true, "Giigor"));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(2687, -20340, "Lizard", true, "geg"));
                        ArtificialIntelligenceAccess.push(new Unit(2526, -20468, "Lizard", true, "Gege"));
                        ArtificialIntelligenceAccess.push(new Unit(2819, -20542, "Lizard", false, "Gech"));
                        ArtificialIntelligenceAccess.push(new Unit(3002, -20457, "Varn", false, "Goch"));
                        ArtificialIntelligenceAccess.push(new Unit(3162, -20555, "Varn", false, "Gich"));
                        ArtificialIntelligenceAccess.push(new Unit(3133, -20755, "Varn", false, "Guch"));
                        ArtificialIntelligenceAccess.push(new Unit(2791, -20695, "Varn", false, "Gooch"));

                        ArtificialIntelligenceAccess.push(new Unit(2587, -19656, "Grib", false, "Geng"));
                        ArtificialIntelligenceAccess.push(new Unit(2527, -19619, "Lizard", true, "Genge"));
                        ArtificialIntelligenceAccess.push(new Unit(2489, -19693, "Lizard", false, "Gengen"));
                        ArtificialIntelligenceAccess.push(new Unit(2138, -19535, "Lizard", true, "Gen"));
                        ArtificialIntelligenceAccess.push(new Unit(2229, -19145, "Lizard", false, "Gengenar"));
                        ArtificialIntelligenceAccess.push(new Unit(1856, -19245, "Grib", false, "Genar"));
                        ArtificialIntelligenceAccess.push(new Unit(2311, -19255, "Grib", false, "Gengar"));
                    }

                    ArtificialIntelligenceAccess.push(new Unit(2681, -19030, "BlackBear", false, "Juvjuv"));
                    ArtificialIntelligenceAccess.push(new Unit(3179, -19216, "Lizard", true, "Liz"));
                    ArtificialIntelligenceAccess.push(new Unit(3442, -20728, "Varn", true, "Gronny"));
                    ArtificialIntelligenceAccess.push(new Unit(4042, -19877, "Lizard", false, "Lizonya"));
                    ArtificialIntelligenceAccess.push(new Unit(4492, -19925, "BlackBear", true, "Juv"));
                    ArtificialIntelligenceAccess.push(new Unit(4219, -19484, "Lizard", true, "anaverga"));
                    ArtificialIntelligenceAccess.push(new Unit(3553, -18984, "Narthwarp", false, "tantarla"));
                    ArtificialIntelligenceAccess.push(new Unit(3650, -18626, "Narthwarp", false, "tentarla"));
                    ArtificialIntelligenceAccess.push(new Unit(3889, -18583, "Narthwarp", false, "tintarla"));
                    ArtificialIntelligenceAccess.push(new Unit(4451, -18796, "BlackBear", false, "Jalva"));
                    ArtificialIntelligenceAccess.push(new Unit(4680, -18325, "Narthwarp", false, "tintarla"));
                    ArtificialIntelligenceAccess.push(new Unit(4263, -17901, "Varn", true, "Grealnny"));
                    ArtificialIntelligenceAccess.push(new Unit(3166, -18316, "Lizard", true, "anapico"));
                    ArtificialIntelligenceAccess.push(new Unit(3355, -18232, "Lizard", false, "anapene"));
                    ArtificialIntelligenceAccess.push(new Unit(2481, -17945, "Lizard", true, "Lizeg"));
                    ArtificialIntelligenceAccess.push(new Unit(4727, -17895, "Lizard", false, "Lizplog"));

                    if (Math.random > 0.4)
                    {
                        scenicList.push(new Scenery("beeHive", 3674 , 20495, 3, true));
                    }

                    if (player.level >= 7)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(3419, -19562, "BlackBear", true, "Juva"));
                        ArtificialIntelligenceAccess.push(new Unit(3419, -19562, "BlackBear", false, "Julva"));
                        ArtificialIntelligenceAccess.push(new Unit(3712, -20276, "Varn", true, "Gren"));
                        ArtificialIntelligenceAccess.push(new Unit(3605, -20258, "Varn", true, "Grenny"));
                        ArtificialIntelligenceAccess.push(new Unit(3635, -20757, "Varn", true, "Grinny"));
                        ArtificialIntelligenceAccess.push(new Unit(3813, -20752, "Varn", false, "Grunny"));
                        ArtificialIntelligenceAccess.push(new Unit(4028, -20382, "Varn", true, "Grilnny"));
                        ArtificialIntelligenceAccess.push(new Unit(3987, -20702, "Varn", false, "Gralnny"));
                        ArtificialIntelligenceAccess.push(new Unit(4321, -20178, "Varn", true, "Grolnny"));
                        ArtificialIntelligenceAccess.push(new Unit(2647, -18539, "Grib", true, "Gulch"));
                        ArtificialIntelligenceAccess.push(new Unit(2333, -18795, "Grib", true, "Golch"));
                        ArtificialIntelligenceAccess.push(new Unit(2706, -18085, "BlackBear", true, "Juve"));
                        ArtificialIntelligenceAccess.push(new Unit(3973, -18693, "Narthwarp", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(3827, -18705, "Narthwarp", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(3823, -19007, "Narthwarp", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(4329, -18900, "Narthwarp", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(4503, -18785, "Narthwarp", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(4753, -18549, "Varn", false, "Graelnie"));
                        ArtificialIntelligenceAccess.push(new Unit(4312, -18210, "Varn", true, "Graeln"));
                        ArtificialIntelligenceAccess.push(new Unit(3887, -18275, "BlackBear", false, "Juventud"));
                        ArtificialIntelligenceAccess.push(new Unit(4323, -17698, "Narthwarp", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(4061, -17747, "Narthwarp", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(3971, -17992, "Narthwarp", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(4322, -18068, "Narthwarp", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(2277, -18032, "Grib", true, "Galch"));
                        ArtificialIntelligenceAccess.push(new Unit(3146, -17891, "Grib", true, "Giich"));
                        ArtificialIntelligenceAccess.push(new Unit(3224, -18019, "Grib", false, "Giichii"));
                        ArtificialIntelligenceAccess.push(new Unit(3425, -18015, "Grib", true, "Giichiich"));
                        ArtificialIntelligenceAccess.push(new Unit(3448, -17765, "Grib", true, "Giichiichii"));
                    }
                    else if (player.level >= 3)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(3419, -19562, "BlackBear", false, "Juvu"));
                        ArtificialIntelligenceAccess.push(new Unit(3419, -19562, "Grib", false, "Gerk"));
                        ArtificialIntelligenceAccess.push(new Unit(3605, -20259, "BlackBear", false, "Juvjuv"));
                        ArtificialIntelligenceAccess.push(new Unit(3635, -20757, "Varn", false, "Grinny"));
                        ArtificialIntelligenceAccess.push(new Unit(4321, -20178, "Varn", false, "Grolnny"));
                        ArtificialIntelligenceAccess.push(new Unit(2647, -18539, "Grib", true, "Gulch"));
                        ArtificialIntelligenceAccess.push(new Unit(2333, -18795, "Grib", false, "Golch"));
                        ArtificialIntelligenceAccess.push(new Unit(2706, -18085, "BlackBear", false, "Juvjuvjuv"));
                        ArtificialIntelligenceAccess.push(new Unit(3973, -18693, "Narthwarp", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(3827, -18705, "Narthwarp", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(4503, -18785, "Narthwarp", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(4753, -18549, "Varn", false, "Graelnie"));
                        ArtificialIntelligenceAccess.push(new Unit(3887, -18275, "Lizard", true, "Lizpor"));
                        ArtificialIntelligenceAccess.push(new Unit(4323, -17698, "Narthwarp", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(4061, -17747, "Narthwarp", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(2277, -18032, "Grib", false, "Galch"));
                        ArtificialIntelligenceAccess.push(new Unit(3146, -17891, "Grib", false, "Giich"));
                        ArtificialIntelligenceAccess.push(new Unit(3224, -18019, "Grib", false, "Giichii"));
                        ArtificialIntelligenceAccess.push(new Unit(3425, -18015, "Grib", true, "Giichiich"));
                        ArtificialIntelligenceAccess.push(new Unit(3448, -17765, "Grib", false, "Giichiichii"));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(3419, -19562, "Varn", false, "Vam"));
                        ArtificialIntelligenceAccess.push(new Unit(3419, -19562, "Lizard", true, "LizardBoy"));
                        ArtificialIntelligenceAccess.push(new Unit(3686, -20349, "Lizard", false, "Lizp"));
                        ArtificialIntelligenceAccess.push(new Unit(3615, -20287, "Lizard", true, "Lizpon"));
                        ArtificialIntelligenceAccess.push(new Unit(2647, -18539, "Grib", false, "Gulch"));
                        ArtificialIntelligenceAccess.push(new Unit(2333, -18795, "Grib", false, "Golch"));
                        ArtificialIntelligenceAccess.push(new Unit(2706, -18085, "BlackBear", false, "Juvjuvjuv"));
                        ArtificialIntelligenceAccess.push(new Unit(3973, -18693, "Narthwarp", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(4503, -18785, "Varn", false, "Tumvam"));
                        ArtificialIntelligenceAccess.push(new Unit(3887, -18275, "Lizard", false, "Lizpy"));
                        ArtificialIntelligenceAccess.push(new Unit(4323, -17698, "Narthwarp", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(2277, -18032, "Varn", false, "Vamtum"));
                        ArtificialIntelligenceAccess.push(new Unit(3146, -17891, "Varn", false, "Giich"));
                        ArtificialIntelligenceAccess.push(new Unit(3224, -18019, "Varn", false, "Giichii"));
                        ArtificialIntelligenceAccess.push(new Unit(3425, -18015, "Varn", false, "Giichiich"));
                        ArtificialIntelligenceAccess.push(new Unit(3448, -17765, "Varn", false, "Giichiichii"));
                        if (Math.random() < 0.6)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(3751, -17759, "varn", true, "Fizigor"));
                            ArtificialIntelligenceAccess.push(new Unit(3935, -20447, "Lizard", true, "Lizpila"));
                            ArtificialIntelligenceAccess.push(new Unit(4020, -20326, "Lizard", false, "Lizpil"));
                            ArtificialIntelligenceAccess.push(new Unit(4394, -20285, "Lizard", true, "Lizpilo"));
                            ArtificialIntelligenceAccess.push(new Unit(5151, -19278, "Lizard", false, "Lizpilona"));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(4855, -17761, "varn", false, "Fizigor"));
                            ArtificialIntelligenceAccess.push(new Unit(3935, -20447, "Lizard", false, "Lizpil"));
                            ArtificialIntelligenceAccess.push(new Unit(4020, -20326, "Lizard", true, "Lizpila"));
                            ArtificialIntelligenceAccess.push(new Unit(4809, -20370, "Lizard", true, "Lizpilo"));
                            ArtificialIntelligenceAccess.push(new Unit(5132, -19480, "Lizard", true, "Lizpilon"));
                        }
                    }


                }
                else if (random == 5) //Mostly docile-Narthwarps + a few other creatures...
                {
                    ArtificialIntelligenceAccess.push(new Unit(3393, -20539, "Narthwarp", false, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(3651, -20226, "Narthwarp", false, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(3700, -20367, "Narthwarp", false, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(3540, -20233, "Narthwarp", false, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(3151, -20186, "Narthwarp", false, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(3010, -20568, "Narthwarp", false, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(2549, -20398, "Narthwarp", false, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(2606, -20704, "Lizard", false, "Lizard"));
                    ArtificialIntelligenceAccess.push(new Unit(2274, -20513, "Lizard", false, "Lizard"));
                    ArtificialIntelligenceAccess.push(new Unit(1989, -20179, "Lizard", true, "Lizard"));
                    ArtificialIntelligenceAccess.push(new Unit(1728, -19425, "Lizard", false, "Lizard"));
                    ArtificialIntelligenceAccess.push(new Unit(2767, -18754, "Lizard", true, "Lizard"));
                    ArtificialIntelligenceAccess.push(new Unit(4579, -18346, "Lizard", false, "Lizard"));
                    ArtificialIntelligenceAccess.push(new Unit(3580, -17967, "Lizard", false, "Lizard"));

                    ArtificialIntelligenceAccess.push(new Unit(4252, -17859, "Varn", true, "Grib"));
                    ArtificialIntelligenceAccess.push(new Unit(4332, -17707, "Varn", false, "Grib"));
                    ArtificialIntelligenceAccess.push(new Unit(4427, -17490, "Varn", true, "Grib"));
                    ArtificialIntelligenceAccess.push(new Unit(4108, -17398, "Varn", false, "Grib"));
                    ArtificialIntelligenceAccess.push(new Unit(3794, -17792, "Varn", false, "Grib"));
                    ArtificialIntelligenceAccess.push(new Unit(3915, -17962, "Varn", true, "Grib"));

                    if (Math.random() > 0.71 && player.level >= 5)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(3705, -18333, "BlackBear", true, "Juv"));
                        ArtificialIntelligenceAccess.push(new Unit(4182, -18886, "Varn", true, "Luv"));
                        ArtificialIntelligenceAccess.push(new Unit(4611, -17819, "Varn", true, "Gribbly"));
                        ArtificialIntelligenceAccess.push(new Unit(2634, -19204, "Viper", false, "Serprul"));
                        ArtificialIntelligenceAccess.push(new Unit(2813, -20089, "Narthwarp", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(2685, -20290, "Narthwarp", false, "docile"));

                        if (Math.random() <= 0.34 && player.level >= 10)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(2371, -19404, "Narthwarp", true, "docile"));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(2371, -19404, "BlackBear", true, "docile"));
                        }
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(3705, -18333, "BlackBear", false, "Juvjuv"));
                        ArtificialIntelligenceAccess.push(new Unit(3538, -18844, "Viper", false, "Serprul"));
                        ArtificialIntelligenceAccess.push(new Unit(2359, -19873, "Narthwarp", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(2371, -19404, "BlackBear", false, "docile"));
                    }

                    ArtificialIntelligenceAccess.push(new Unit(4097, -18654, "BlackBear", false, "Juvo"));
                    ArtificialIntelligenceAccess.push(new Unit(2942, -18395, "BlackBear", false, "Juvon"));
                    ArtificialIntelligenceAccess.push(new Unit(4658, -18861, "Varn", true, "Luvy"));
                    ArtificialIntelligenceAccess.push(new Unit(4701, -18694, "Varn", false, "Luvii"));
                    ArtificialIntelligenceAccess.push(new Unit(2863, -19212, "Viper", false, "Serpral"));
                    ArtificialIntelligenceAccess.push(new Unit(2229, -18912, "Varn", false, "Luviy"));
                    ArtificialIntelligenceAccess.push(new Unit(2179, -18591, "Varn", false, "Luviiy"));
                    ArtificialIntelligenceAccess.push(new Unit(2019, -18381, "Varn", true, "Luvil"));
                    ArtificialIntelligenceAccess.push(new Unit(1800, -18703, "Varn", false, "Luviil"));
                    ArtificialIntelligenceAccess.push(new Unit(2122, -18902, "Varn", false, "Luviila"));
                    ArtificialIntelligenceAccess.push(new Unit(1664, -19146, "Varn", true, "Luto"));
                    ArtificialIntelligenceAccess.push(new Unit(1542, -19283, "Varn", false, "Luvluv"));
                    ArtificialIntelligenceAccess.push(new Unit(2045, -19245, "Varn", false, "Luviduv"));

                    ArtificialIntelligenceAccess.push(new Unit(2819, -19500, "Varn", true, "Luta"));
                    ArtificialIntelligenceAccess.push(new Unit(2644, -19719, "Varn", false, "Luvlov"));
                    ArtificialIntelligenceAccess.push(new Unit(2045, -19245, "Varn", false, "Luvidov"));
                    ArtificialIntelligenceAccess.push(new Unit(3225, -19798, "Varn", false, "Luvidove"));
                    ArtificialIntelligenceAccess.push(new Unit(3549, -19961, "Varn", true, "Luvlove"));
                    ArtificialIntelligenceAccess.push(new Unit(3725, -19595, "Varn", false, "Loveydove"));

                    ArtificialIntelligenceAccess.push(new Unit(2143, -18132, "Grib", true, "Giichiil"));

                    ArtificialIntelligenceAccess.push(new Unit(4244, -20082, "Narthwarp", false, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(4037, -20302, "Narthwarp", false, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(4595, -20192, "Narthwarp", false, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(4609, -19901, "Narthwarp", false, "docile"));

                    ArtificialIntelligenceAccess.push(new Unit(2493, -17938, "Shehid", true, "Kulborlii"));
                    ArtificialIntelligenceAccess.push(new Unit(2723, -17863, "Shehid", false, "Kulborliin"));
                    ArtificialIntelligenceAccess.push(new Unit(2812, -17989, "Shehid", true, "Kulborl"));
                    ArtificialIntelligenceAccess.push(new Unit(2689, -17946, "Shehid", false, "Kulboriin"));
                    ArtificialIntelligenceAccess.push(new Unit(2743, -18276, "Shehid", false, "Kulboliin"));
                    ArtificialIntelligenceAccess.push(new Unit(2896, -17759, "Shehid", false, "Koolboliin"));
                }
                else if (random == 6) //Docile-Gribs, docile-Narthwarps, Varn Pack, bit of a mix
                {
                    ArtificialIntelligenceAccess.push(new Unit(4291, -17495, "Grib", true, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(4347, -17692, "Grib", false, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(4096, -18117, "Grib", false, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(4484, -18050, "Grib", false, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(4170, -19196, "Grib", true, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(4281, -19688, "Grib", true, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(3790, -17838, "Lizard", false, "Lizard"));
                    ArtificialIntelligenceAccess.push(new Unit(3750, -18020, "Lizard", true, "Lizard"));
                    ArtificialIntelligenceAccess.push(new Unit(3645, -18037, "Lizard", false, "Lizard"));
                    ArtificialIntelligenceAccess.push(new Unit(4814, -18254, "Lizard", true, "Lizard"));
                    ArtificialIntelligenceAccess.push(new Unit(4598, -20192, "Lizard", false, "Lizard"));
                    ArtificialIntelligenceAccess.push(new Unit(4401, -20284, "Lizard", true, "Lizard"));
                    ArtificialIntelligenceAccess.push(new Unit(4307, -20421, "Lizard", false, "Lizard"));
                    ArtificialIntelligenceAccess.push(new Unit(4612, -17919, "Lizard", false, "Lizard"));
                    ArtificialIntelligenceAccess.push(new Unit(4433, -19881, "Narthwarp", false, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(4363, -20088, "Narthwarp", false, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(4653, -19999, "Ardil", false, "Chipp"));
                    ArtificialIntelligenceAccess.push(new Unit(3705, -19815, "BlackBear", false, "Juvjuv"));
                    ArtificialIntelligenceAccess.push(new Unit(3636, -20386, "BlackBear", true, "Juv"));
                    ArtificialIntelligenceAccess.push(new Unit(3323, -20671, "Viper", false, "Serpral"));
                    ArtificialIntelligenceAccess.push(new Unit(3051, -20328, "Varn", true, "Luta"));
                    ArtificialIntelligenceAccess.push(new Unit(3327, -20042, "Varn", true, "Luto"));
                    ArtificialIntelligenceAccess.push(new Unit(2976, -20028, "Varn", false, "Luvidov"));
                    ArtificialIntelligenceAccess.push(new Unit(2661, -20404, "Varn", false, "Luvidove"));
                    ArtificialIntelligenceAccess.push(new Unit(2784, -20705, "Varn", true, "Lute"));
                    ArtificialIntelligenceAccess.push(new Unit(2577, -20742, "Varn", false, "Luvydove"));
                    ArtificialIntelligenceAccess.push(new Unit(2465, -20662, "Varn", false, "Lovduv"));
                    ArtificialIntelligenceAccess.push(new Unit(2214, -20411, "Varn", true, "Luviidove"));
                    ArtificialIntelligenceAccess.push(new Unit(2161, -19494, "Narthwarp", false, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(2560, -19663, "Narthwarp", false, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(2800, -19032, "BlackBear", false, "Juvjuvjuv"));
                    ArtificialIntelligenceAccess.push(new Unit(2698, -18094, "BlackBear", true, "Juva"));
                    ArtificialIntelligenceAccess.push(new Unit(2608, -18573, "Grib", true, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(2041, -18980, "Grib", true, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(2091, -18130, "Grib", false, "docile"));
                }
                else if (random == 7) //Docile-BlackBears, Random, Vipers, docile-others, Lizards, Mix
                {
                    ArtificialIntelligenceAccess.push(new Unit(3429, -19926, "BlackBear", false, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(3153, -20195, "Narthwarp", false, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(3006, -20550, "Narthwarp", false, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(3864, -20276, "Viper", false, "Serpile"));
                    ArtificialIntelligenceAccess.push(new Unit(3294, -20656, "Viper", false, "Serpinala"));
                    ArtificialIntelligenceAccess.push(new Unit(2118, -18778, "Viper", false, "Serpella"));
                    ArtificialIntelligenceAccess.push(new Unit(3485, -18481, "Viper", false, "Serpine"));
                    ArtificialIntelligenceAccess.push(new Unit(2816, -20636, "Lizard", true, "Lizalina"));
                    ArtificialIntelligenceAccess.push(new Unit(2658, -20406, "Lizard", false, "Lizarene"));
                    ArtificialIntelligenceAccess.push(new Unit(2537, -20470, "Lizard", false, "Lizara"));
                    ArtificialIntelligenceAccess.push(new Unit(2596, -20183, "Lizard", false, "Lizelle"));
                    ArtificialIntelligenceAccess.push(new Unit(3901, -19211, "Lizard", false, "Lizarena")); //
                    ArtificialIntelligenceAccess.push(new Unit(3823, -19446, "Lizard", false, "Lizaria"));
                    ArtificialIntelligenceAccess.push(new Unit(3587, -19390, "Lizard", false, "Lizello"));
                    ArtificialIntelligenceAccess.push(new Unit(2693, -19898, "Lizard", true, "Lizette"));
                    ArtificialIntelligenceAccess.push(new Unit(3095, -19921, "Lizard", true, "Lizayette"));
                    ArtificialIntelligenceAccess.push(new Unit(2690, -18669, "Lizard", false, "Lizanburdough"));
                    ArtificialIntelligenceAccess.push(new Unit(4826, -20366, "Lizard", true, "Lizonardo Di'Caprio"));
                    ArtificialIntelligenceAccess.push(new Unit(2835, -20118, "BlackBear", false, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(2800, -19579, "BlackBear", true, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(3299, -18800, "Lizard", false, "Lizellia"));
                    ArtificialIntelligenceAccess.push(new Unit(3753, -19823, "BlackBear", true, "Juv"));
                    ArtificialIntelligenceAccess.push(new Unit(4704, -18702, "Grib", true, "Grit"));
                    ArtificialIntelligenceAccess.push(new Unit(4437, -18547, "Grib", true, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(4559, -18322, "Grib", false, "Gritlin"));
                    ArtificialIntelligenceAccess.push(new Unit(3569, -17987, "Narthwarp", false, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(4289, -17748, "BlackBear", true, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(2066, -19286, "Lizard", true, "Lizaloria"));

                    if (Math.random() > 0.32)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(3650, -20234, "BlackBear", true, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(3642, -20418, "BlackBear", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(3689, -20334, "BlackBear", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(2498, -19377, "BlackBear", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(2308, -19649, "Lizard", false, "Lizalite"));
                        ArtificialIntelligenceAccess.push(new Unit(4040, -19394, "Grib", false, "docile"));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(3632, -20281, "Viper", true, "Serpevera"));
                        ArtificialIntelligenceAccess.push(new Unit(2308, -19649, "BlackBear", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(4166, -17973, "BlackBear", false, "docile"));
                    }

                    if (Math.random() <= 0.47)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(2869, -18754, "Grib", true, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(3074, -19188, "Grib", true, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(2965, -18979, "Grib", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(2689, -18067, "Narthwarp", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(2373, -18223, "Narthwarp", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(3070, -18081, "Narthwarp", false, "Master Henriquez El Tercero"));
                        ArtificialIntelligenceAccess.push(new Unit(2677, -18246, "Narthwarp", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(3814, -18853, "BlackBear", true, "docile"));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(2869, -18754, "Varn", false, "Tum"));
                        ArtificialIntelligenceAccess.push(new Unit(3074, -19188, "Varn", true, "Timtum"));
                        ArtificialIntelligenceAccess.push(new Unit(2965, -18979, "Varn", true, "Tid"));
                        ArtificialIntelligenceAccess.push(new Unit(2689, -18067, "Grib", true, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(2373, -18223, "Grib", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(3070, -18081, "Narthwarp", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(2677, -18246, "Grib", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(3814, -18853, "BlackBear", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(1609, -19128, "Lizard", false, "Lizaline"));

                        if (Math.random() < 0.25)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(2504, -17936, "Viper", true, "Serprandora"));
                            ArtificialIntelligenceAccess.push(new Unit(4194, -20081, "BlackBear", false, "docile"));
                            ArtificialIntelligenceAccess.push(new Unit(4514, -19928, "BlackBear", false, "Juve"));
                            ArtificialIntelligenceAccess.push(new Unit(3710, -18617, "BlackBear", false, "docile"));
                            ArtificialIntelligenceAccess.push(new Unit(1647, -19177, "Lizard", true, "Lizalina"));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(2504, -17936, "Viper", false, "Serpranda"));
                            ArtificialIntelligenceAccess.push(new Unit(4750, -20065, "Varn", false, "Tum"));
                            ArtificialIntelligenceAccess.push(new Unit(4610, -19921, "Varn", false, "Timtum"));
                            ArtificialIntelligenceAccess.push(new Unit(4444, -20015, "Varn", true, "Tid"));
                            ArtificialIntelligenceAccess.push(new Unit(4433, -19836, "Varn", false, "Timtumtin"));
                            ArtificialIntelligenceAccess.push(new Unit(4073, -20007, "Varn", true, "Tidtim"));
                        }
                    }
                }

                //Plants in the plains
                scenicList.push(new Scenery("tenicPlant", 4733, -21143, 0, true));
                scenicList.push(new Scenery("tenicPlant", 4181, -15438, 6, true));
                scenicList.push(new Scenery("tenicPlant", -1836, -16383, -5, true));
                scenicList.push(new Scenery("tenicPlant", -2063, -19190, 2, true));
                scenicList.push(new Scenery("mufPlant", -2223, -22349, 0, true));
                scenicList.push(new Scenery("mufPlant", 1279, -22813, -4.444, true));
                scenicList.push(new Scenery("mufPlant", 4760, -22801, 5.45, true));
                scenicList.push(new Scenery("mufPlant", -986, -17496, 3.2, true));
                scenicList.push(new Scenery("mufPlant", 860, -20301, -2.34, true));
                scenicList.push(new Scenery("mufPlant", -2283, -17095, 6.1, true));
                scenicList.push(new Scenery("mufPlant", -1738, -22652, -6.1, true));
                scenicList.push(new Scenery("mufPlant", 3443, -21920, 1.4, true));
                scenicList.push(new Scenery("mufPlant", -2474, -20415, -1.5, true));
                scenicList.push(new Scenery("butterMellowPlant", 1056, -18795, 0, true));
                scenicList.push(new Scenery("butterMellowPlant", -1971, -21494, 2, true));
                scenicList.push(new Scenery("butterMellowPlant", 5900, -16792, 3, true));
                scenicList.push(new Scenery("butterMellowPlant", 2159, -17200, 5, true));
                scenicList.push(new Scenery("butterMellowPlant", -2656, -22817, -1, true));
                scenicList.push(new Scenery("butterMellowPlant", 6028, -15547, -4.5, true));
                scenicList.push(new Scenery("palntPlant", 2735, -21625, 1, true));
                scenicList.push(new Scenery("palntPlant", 5698, -18767, 0, true));
                scenicList.push(new Scenery("palntPlant", 1118, -20842, 2.2, true));
                scenicList.push(new Scenery("palntPlant", 295, -20660, 8, true));
                scenicList.push(new Scenery("palntPlant", -1186, -20800, -2.5, true));
                scenicList.push(new Scenery("palntPlant", 3159, -16400, 2.8, true));
                scenicList.push(new Scenery("palntPlant", 2825, -14371, 3.8, true));
                scenicList.push(new Scenery("palntPlant", -2596, -17742, -0.024, true));
                scenicList.push(new Scenery("palntPlant", -853, -22338, 0, true));
                scenicList.push(new Scenery("palntPlant", -2523, -21197, -2.4, true));
                scenicList.push(new Scenery("palntPlant", -1395, -19579, 1.1, true));
                scenicList.push(new Scenery("palntPlant", -1481, -18743, 3, true));
                scenicList.push(new Scenery("palntPlant", 6238, -21848, 0.55, true));
                scenicList.push(new Scenery("palntPlant", 2321, -14880, -1.85, true));
                scenicList.push(new Scenery("palntPlant", 4610, -16078, 5, true));
                scenicList.push(new Scenery("techiPlant", 1616, -20636, 0, true));
                scenicList.push(new Scenery("techiPlant", 1652, -21154, -1.2, true));
                scenicList.push(new Scenery("techiPlant", 894, -19586, -4.2, true));
                scenicList.push(new Scenery("techiPlant", -915, -21455, 3.56, true));
                scenicList.push(new Scenery("techiPlant", -1032, -21601, -3.08, true));
                scenicList.push(new Scenery("techiPlant", -642, -20181, -5.56, true));
                scenicList.push(new Scenery("techiPlant", 4065, -17035, -2.25, true));
                scenicList.push(new Scenery("techiPlant", 1174, -14411, 2.75, true));
                scenicList.push(new Scenery("techiPlant", -2122, -18474, 5.75, true));
                scenicList.push(new Scenery("techiPlant", -799, -19885, -3.92, true));
                scenicList.push(new Scenery("techiPlant", 5837, -17667, 4.22, true));
                scenicList.push(new Scenery("techiPlant", -943, -18314, 5, true));
                scenicList.push(new Scenery("techiPlant", 4462, -14910, 6, true));
                scenicList.push(new Scenery("techiPlant", 5925, -21159, -3.3, true));
                scenicList.push(new Scenery("techiPlant", 6575, -16872, 0, true));
                scenicList.push(new Scenery("techiPlant", 3259, -15092, 0.5, true));
                scenicList.push(new Scenery("techiPlant", 5405, -19306, 6.3, true));
                scenicList.push(new Scenery("techiPlant", 5434, -17520, 3.5, true));
                scenicList.push(new Scenery("techiPlant", -2166, -18274, 1, true));
                scenicList.push(new Scenery("techiPlant", 4024, -14955, 2.25, true));
                scenicList.push(new Scenery("luufPlant", 5068, -17446, -2.06, true));
                scenicList.push(new Scenery("luufPlant", 2710, -16097, -1, true));
                scenicList.push(new Scenery("luufPlant", -1693, -15572, 3, true));
                scenicList.push(new Scenery("luufPlant", -1377, -19963, 0, true));
                scenicList.push(new Scenery("luufPlant", -1497, -23407, 4.6, true));
                scenicList.push(new Scenery("luufPlant", -1421, -14786, -6, true));
                scenicList.push(new Scenery("itlinPlant", 1332, -21470, 2.3, true));
                scenicList.push(new Scenery("itlinPlant", 6052, -19890, -2.9, true));
                scenicList.push(new Scenery("itlinPlant", 6342, -14468, 4.1, true));
                scenicList.push(new Scenery("itlinPlant", -675, -20348, 6.425, true));
                scenicList.push(new Scenery("itlinPlant", -2905, -17392, -5.3, true));
                scenicList.push(new Scenery("itlinPlant", -2447, -23431, 1.3, true));
                scenicList.push(new Scenery("grushweedPlant", 5971, -14811, 6.1, 1));
                scenicList.push(new Scenery("grushweedPlant", 6399, -14768, 3.05, 1.7));
                scenicList.push(new Scenery("grushweedPlant", -1291, -18621, 3.05, 1.3));
                scenicList.push(new Scenery("grushweedPlant", -977, -18860, 0, 0.6));
                scenicList.push(new Scenery("grushweedPlant", -732, -19624, 4.6, 1.5));
                scenicList.push(new Scenery("grushweedPlant", -808, -19963, 0.38, 1));

                //Random
                random = Math.floor(Math.random() * 8);

                if (random == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(6249, -14933, "Grush", true, "Grassy"));
                    ArtificialIntelligenceAccess.push(new Unit(2030, -15428, "Grush", "baby", "Gratzini"));
                    ArtificialIntelligenceAccess.push(new Unit(2047, -15510, "Grush", false, "Gratz"));
                }
                else
                {
                    scenicList.push(new Scenery("grushweedPlant", 6249, -14933, 0, 1.5));
                    scenicList.push(new Scenery("grushweedPlant", 2030, -15428, 0, 0.49));
                    scenicList.push(new Scenery("grushweedPlant", 2047, -15510, 1, 1.02));
                }

                if (random == 2)
                {
                    ArtificialIntelligenceAccess.push(new Unit(6201, -14686, "Grush", false, "Grassy-ass"));
                    ArtificialIntelligenceAccess.push(new Unit(6169, -14817, "Grush", "baby", "Grassito"));
                }
                else
                {
                    scenicList.push(new Scenery("grushweedPlant", 6201, -14686, 0, 1));
                    scenicList.push(new Scenery("grushweedPlant", 6169, -14817, 0, 0.6));
                }

                if (random == 4)
                {
                    ArtificialIntelligenceAccess.push(new Unit(1814, -15460, "Grush", false, "Grasselle"));
                    ArtificialIntelligenceAccess.push(new Unit(5946, -14724, "Grush", false, "Grassia"));
                    ArtificialIntelligenceAccess.push(new Unit(6012, -14645, "Grush", "baby", "Grassita"));
                    ArtificialIntelligenceAccess.push(new Unit(-940, -18757, "Grush", false, "Grassette"));
                    ArtificialIntelligenceAccess.push(new Unit(-738, -19814, "Grush", "baby", "Hierbita"));
                    ArtificialIntelligenceAccess.push(new Unit(-824, -19786, "Grush", "baby", "Pastito"));
                    ArtificialIntelligenceAccess.push(new Unit(-923, -19865, "Grush", false, "Hierba"));
                }
                else
                {
                    scenicList.push(new Scenery("grushweedPlant", -738, -19814, 0, 0.6));
                    scenicList.push(new Scenery("grushweedPlant", -824, -19786, 0, 0.6));
                    scenicList.push(new Scenery("grushweedPlant", -923, -19865, 0, 1));
                    scenicList.push(new Scenery("grushweedPlant", 5946, -14724, 0, 1));
                    scenicList.push(new Scenery("grushweedPlant", 6012, -14645, 0, 0.6));
                    scenicList.push(new Scenery("grushweedPlant", 1814, -15460, 0, 1));
                    scenicList.push(new Scenery("grushweedPlant", -940, -18757, -2, 1.25));
                }

                if (random == 5)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-1723, -18922, "Grush", "giant", "The Hill"));
                    ArtificialIntelligenceAccess.push(new Unit(6622, -14666, "Grush", false, "Grassio"));
                }
                else
                {
                    scenicList.push(new Scenery("grushweedPlant", 6622, -14666, 0.34, 1.21));
                    scenicList.push(new Scenery("grushweedPlant", -1723, -18922, 0, 3));
                }

                if (random == 7)
                {
                    ArtificialIntelligenceAccess.push(new Unit(2179, -15473, "Grush", false, "Grassi"));
                    scenicList.push(new Scenery("grushweedPlant", -1562, -18668, 0, 1.9));
                }
                else
                {
                    scenicList.push(new Scenery("grushweedPlant", 2179, -15473, 0, 1));
                }

                if (random == 8)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-644, -19755, "Grush", false, "Grawly"));
                    ArtificialIntelligenceAccess.push(new Unit(-1177, -18763, "Grush", true, "Grawls"));
                    ArtificialIntelligenceAccess.push(new Unit(2258, -15590, "Grush", false, "Grass"));
                }
                else
                {
                    scenicList.push(new Scenery("grushweedPlant", -1177, -18763, 4, 1.6));
                    scenicList.push(new Scenery("grushweedPlant", 2258, -15590, -4.34, 0.92));
                    scenicList.push(new Scenery("grushweedPlant", -644, -19755, 0, 1));
                }

                if (quests.lostGirlFound == false && quests.lostGirlQuest == true)
                {
                    ArtificialIntelligenceAccess.push(new Unit(4795, -18752, "StoneGolem", "baby", "Sleeping Stone"));
                }
                if (uniqueChars.ireneLDS == true && quests.lostGirlFound == false && quests.lostGirlQuest == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Irene, Fenwik's Daughter")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(5697, -19390, "Person", false, "Irene, Fenwik's Daughter", {race: "Kel", faction: "Kel", personality: "scared", outfit: ["ardilFurClothing", 0], weapon: ["none", [0.1, 0.05], 0, 9, 0.9], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], kid: true, patrolStops: 0, patrolLoop: true, route:[[2049, 1021], [1943, 1127], [1690, 1021]]}));
                    }
                }
                //Avraks/Evraks of the plains
                ArtificialIntelligenceAccess.push(new Unit(2991, -14637, "Evrak", false, "Telve"));
                ArtificialIntelligenceAccess.push(new Unit(4922, -15301, "Avrak", false, "Akreve"));
                ArtificialIntelligenceAccess.push(new Unit(2802, -17230, "Avrak", false, "Akrevel"));
                ArtificialIntelligenceAccess.push(new Unit(6208, -18260, "Avrak", false, "Akrevii"));
                ArtificialIntelligenceAccess.push(new Unit(4030, -23183, "Evrak", false, "Telvel"));
                ArtificialIntelligenceAccess.push(new Unit(2093, -23518, "Evrak", false, "Telvel"));
                ArtificialIntelligenceAccess.push(new Unit(-2319, -21510, "Avrak", false, "Akrevele"));
                ArtificialIntelligenceAccess.push(new Unit(-1762, -19934, "Avrak", false, "Akrevelii"));
                ArtificialIntelligenceAccess.push(new Unit(-1151, -14374, "Evrak", false, "Telven"));
                ArtificialIntelligenceAccess.push(new Unit(-1944, -15540, "Avrak", false, "Akreven"));

                //Mofu Nests / Mofu
                ArtificialIntelligenceAccess.push(new Unit(-1421, -23142, "Mofu", true, "Klenda"));
                ArtificialIntelligenceAccess.push(new Unit(-943, -23383, "Mofu", true, "Klen"));
                ArtificialIntelligenceAccess.push(new Unit(-1126, -23311, "Mofu", false, "Klene"));
                ArtificialIntelligenceAccess.push(new Unit(-1043, -23077, "Mofu", false, "Klena"));
                ArtificialIntelligenceAccess.push(new Unit(-1037, -23202, "Mofu", "baby", "Klee"));
                ArtificialIntelligenceAccess.push(new Unit(-1342, -23373, "Mofu", "baby", "Klea"));
                ArtificialIntelligenceAccess.push(new Unit(-1001, -23405, "Mofu", "baby", "Kleo"));
                ArtificialIntelligenceAccess.push(new Unit(-1467, -23256, "Mofu", "baby", "Kley"));
                ArtificialIntelligenceAccess.push(new Unit(-1505, -23383, "Mofu", false, "Kleno"));
                ArtificialIntelligenceAccess.push(new Unit(-1194, -23568, "Mofu", true, "Klendo"));
                ArtificialIntelligenceAccess.push(new Unit(-1641, -23205, "Mofu", false, "Klenoo"));
                ArtificialIntelligenceAccess.push(new Unit(-1365, -22911, "Mofu", false, "Klendoo"));
                ArtificialIntelligenceAccess.push(new Unit(-1194, -22876, "Mofu", "baby", "Kli"));
                ArtificialIntelligenceAccess.push(new Unit(1908, -23210, "Mofu", false, "Klendup"));
                ArtificialIntelligenceAccess.push(new Unit(2133, -23285, "Mofu", false, "Klip"));
                ArtificialIntelligenceAccess.push(new Unit(1998, -23350, "Mofu", "baby", "Klup"));
                ArtificialIntelligenceAccess.push(new Unit(848, -20033, "Mofu", true, "Klendup"));
                scenicList.push(new Scenery("mofuNest", -943, -23383, -5.5, 1.4)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("mofuNest", -1126, -23311, 6, 1.124)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("mofuNest", -1043, -23077, -1, 1)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("mofuNest", -1421, -23142, -3, 1.6)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("mofuNest", -1505, -23383, 2.5, 1.25)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("mofuNest", -1365, -22911, 4.3, 1)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("mofuNest", 1908, -23210, -4.6, 1.055)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("mofuNest", 2133, -23285, 2.1, 0.9)); //for mofu nests the last number determines its size multiplier.

                //Naaprid herds
                ArtificialIntelligenceAccess.push(new Unit(-1463, -22360, "Naaprid", true, "gove"));
                ArtificialIntelligenceAccess.push(new Unit(-1270, -22172, "Naaprid", true, "gabe"));
                ArtificialIntelligenceAccess.push(new Unit(-1635, -22635, "Naaprid", false, "gebriela"));
                ArtificialIntelligenceAccess.push(new Unit(-1061, -22709, "Naaprid", false, "govree"));
                ArtificialIntelligenceAccess.push(new Unit(-990, -22556, "Naaprid", "baby", "gode"));
                ArtificialIntelligenceAccess.push(new Unit(5784, -20732, "Naaprid", true, "gebriel"));
                ArtificialIntelligenceAccess.push(new Unit(5883, -20926, "Naaprid", false, "gabii"));
                ArtificialIntelligenceAccess.push(new Unit(5514, -21045, "Naaprid", false, "govrea"));

                //Frich Packs
                ArtificialIntelligenceAccess.push(new Unit(-2650, -22483, "Frich", false, "Friz"));
                ArtificialIntelligenceAccess.push(new Unit(-2897, -22179, "Frich", false, "Frez"));
                ArtificialIntelligenceAccess.push(new Unit(-2765, -22644, "Frich", true, "Frilz"));
                ArtificialIntelligenceAccess.push(new Unit(-2363, -22713, "Frich", true, "Frelz"));
                ArtificialIntelligenceAccess.push(new Unit(-2864, -22379, "Frich", false, "Frizly"));
                ArtificialIntelligenceAccess.push(new Unit(-1810, -20015, "Frich", true, "Fraz"));
                ArtificialIntelligenceAccess.push(new Unit(-1678, -20281, "Frich", false, "Frezno"));
                ArtificialIntelligenceAccess.push(new Unit(-1804, -20245, "Frich", false, "Freliz"));
                ArtificialIntelligenceAccess.push(new Unit(-2473, -20333, "Frich", false, "Freloz"));
                ArtificialIntelligenceAccess.push(new Unit(-2697, -19285, "Frich", true, "Frel"));
                ArtificialIntelligenceAccess.push(new Unit(-1085, -18128, "Frich", true, "Frele"));
                ArtificialIntelligenceAccess.push(new Unit(1193, -14827, "Frich", false, "Fraloz"));
                ArtificialIntelligenceAccess.push(new Unit(6703, -19799, "Frich", false, "Fralooz"));
                ArtificialIntelligenceAccess.push(new Unit(5863, -22420, "Frich", true, "Freliz"));
                ArtificialIntelligenceAccess.push(new Unit(6346, -22565, "Frich", false, "Freloz"));
                ArtificialIntelligenceAccess.push(new Unit(6511, -15230, "Frich", true, "Frelaz"));
                ArtificialIntelligenceAccess.push(new Unit(878, -19133, "Frich", false, "Frooz"));

                //Varns
                ArtificialIntelligenceAccess.push(new Unit(-1244, -19247, "Varn", true, "Frel"));
                ArtificialIntelligenceAccess.push(new Unit(5740, -17079, "Varn", false, "Fral"));
                ArtificialIntelligenceAccess.push(new Unit(4016, -21134, "Varn", true, "Freel"));
                ArtificialIntelligenceAccess.push(new Unit(3907, -21317, "Varn", true, "Frol"));
                ArtificialIntelligenceAccess.push(new Unit(2801, -21413, "Varn", false, "Frool"));
                ArtificialIntelligenceAccess.push(new Unit(1155, -17721, "Varn", true, "Frul"));

                //Ardils
                ArtificialIntelligenceAccess.push(new Unit(-558, -22201, "Ardil", false, "Fluffers"));
                ArtificialIntelligenceAccess.push(new Unit(-815, -20960, "Ardil", true, "Fluffiez"));
                ArtificialIntelligenceAccess.push(new Unit(-1514, -16661, "Ardil", false, "Fluffy"));
                ArtificialIntelligenceAccess.push(new Unit(1929, -16664, "Ardil", true, "Fluffez"));
                ArtificialIntelligenceAccess.push(new Unit(5968, -19355, "Ardil", false, "Fluff"));
                ArtificialIntelligenceAccess.push(new Unit(1385, -21580, "Ardil", true, "Fluffel"));

                //sign to Calcutt
                scenicList.push(new Scenery("sign", -212, -15217, Math.PI / 2, 1, "Calcutt Village - 52 sectors"));

                change = "s2";
            }
        }
        else if (region == "s3") //Y > 6290 && Y < 32370
        {
            if (change != "s3")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                //citizens of Echlin village/tribe
                if (quests.fenwikEchlinArmed)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-995, -30767, "Soldier", false, "Echlin Tribe Warrior", {race: "Kel", faction: "Kel", con: 4, speed: 1.65, outfit: ["naapridLeatherArmour", 4], weapon: ["kellishClaymore", [24, 9], 0, 50, 2.06], ranged: [false, "arrow", 5, 1500, 1, 3, 0, "none", 1.50], patrolStops: 0, patrolLoop: true, route:[[3071, 314], [3014, 394], [2218, 346]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-1348, -30360, "Soldier", false, "Echlin Tribe Warrior", {race: "Kel", faction: "Kel", con: 2, speed: 1.80, outfit: ["naapridLeatherArmour", 4], weapon: ["kellishClaymore", [23, 9], 0, 50, 2.15], ranged: [false, "arrow", 5, 1500, 1, 3, 0, "none", 1.50], patrolStops: 6, patrolLoop: true, route:[[-218, -30349], [-227, -31505], [-1706, -31503], [-1724, -30600], [-1366, -30601], [-1348, -30360]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-295, -30422, "Soldier", false, "Echlin Tribe Warrior", {race: "Kel", faction: "Kel", con: 1, speed: 1.95, outfit: ["naapridLeatherArmour", 4], weapon: ["kellishClaymore", [18, 9], 0, 50, 3], ranged: [false, "arrow", 7, 1500, 1, 3, 0, "none", 1.50], patrolStops: 0, patrolLoop: true, route:[[3071, 314], [3014, 394], [2218, 346]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-588, -31257, "Soldier", false, "Echlin Tribe Warrior", {race: "Kel", faction: "Kel", con: 2, speed: 1.7, outfit: ["naapridLeatherArmour", 4], weapon: ["kellishClaymore", [20, 9], 0, 50, 3.15], ranged: [false, "arrow", 7, 1500, 1, 3, 0, "none", 1.50], patrolStops: 0, patrolLoop: true, route:[[3071, 314], [3014, 394], [2218, 346]]}));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(-995, -30767, "Soldier", false, "Echlin Tribe Warrior", {race: "Kel", faction: "Kel", con: 4, speed: 1.65, outfit: ["naapridLeatherArmour", 4], weapon: ["warHammer", [10, 1], 8, 16, 1], ranged: [false, "arrow", 5, 1500, 1, 3, 0, "none", 1.50], patrolStops: 0, patrolLoop: true, route:[[3071, 314], [3014, 394], [2218, 346]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-1348, -30360, "Soldier", false, "Echlin Tribe Warrior", {race: "Kel", faction: "Kel", con: 2, speed: 1.80, outfit: ["naapridLeatherArmour", 4], weapon: ["warHammer", [11, 1], 8, 16, 1], ranged: [false, "arrow", 5, 1500, 1, 3, 0, "none", 1.50], patrolStops: 6, patrolLoop: true, route:[[-218, -30349], [-227, -31505], [-1706, -31503], [-1724, -30600], [-1366, -30601], [-1348, -30360]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-295, -30422, "Soldier", false, "Echlin Tribe Warrior", {race: "Kel", faction: "Kel", con: 1, speed: 1.95, outfit: ["naapridLeatherArmour", 4], weapon: ["longbow", [8, 1], 8, 16, 1], ranged: [true, "arrow", 7, 1500, 1, 5, 0, "none", 1.50], patrolStops: 0, patrolLoop: true, route:[[3071, 314], [3014, 394], [2218, 346]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-588, -31257, "Soldier", false, "Echlin Tribe Warrior", {race: "Kel", faction: "Kel", con: 2, speed: 1.7, outfit: ["naapridLeatherArmour", 4], weapon: ["longbow", [8, 1], 8, 16, 1], ranged: [true, "arrow", 7, 1200, 1, 3, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[3071, 314], [3014, 394], [2218, 346]]}));
                }

                if (uniqueChars.teberLDS == true && quests.bountyTeberCompletionStyle != "royal pardon")
                {
                    var teberName = "Teber the Artisan";
                    if (quests.bountyTeberQuest == true)
                    {
                        teberName = "Teber the Deserter";
                    }

                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == teberName)
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        if (quests.fenwikEchlinArmed)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-441, -30503, "Person", false, teberName, {race: "Freynor", faction: "Kel", personality: "violent", outfit: ["naapridLeatherArmour", 4], weapon: ["kellishClaymore", [19, 2], 0, 50, 2.45], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[2049, 1021], [1943, 1127], [1690, 1021]], merchant: true, merchandise: [[new Item("coins", false, false), 62], [new Item("naapridFiber", false, false), 11], [new Item("ironRing", false, false), 6], [new Item("pintGlass", false, false), 18], [new Item("potionGlass", false, false), 16], [new Item("glassJar", false, false), 7]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-441, -30503, "Person", false, teberName, {race: "Freynor", faction: "Kel", personality: "violent", outfit: ["naapridLeatherArmour", 4], weapon: ["freydicSword", [6, 6], 0, 0, 1.45], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[2049, 1021], [1943, 1127], [1690, 1021]], merchant: true, merchandise: [[new Item("coins", false, false), 62], [new Item("naapridFiber", false, false), 11], [new Item("ironRing", false, false), 6], [new Item("pintGlass", false, false), 18], [new Item("potionGlass", false, false), 16], [new Item("glassJar", false, false), 7]]}));
                        }

                        for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                        {
                            if (ArtificialIntelligenceAccess[i].ID == teberName)
                            {
                                ArtificialIntelligenceAccess[i].healthMAX = 29;
                                ArtificialIntelligenceAccess[i].health = 29;
                                ArtificialIntelligenceAccess[i].speed += 0.05;
                                ArtificialIntelligenceAccess[i].grudge = 340;
                            }
                        }
                    }
                }
                if (uniqueChars.roselinLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Roselin the Tailor")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-1312, -31363, "Person", false, "Roselin the Tailor", {race: "Kel", faction: "Kel", personality: "scared", outfit: ["naapridLeatherArmour", 4], weapon: ["none", [0.1, 0.4], 0, 0, 0.65], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[2049, 1021], [1943, 1127], [1690, 1021]], merchant: true, merchandise: [[new Item("coins", false, false), 30], [new Item("naapridPelt", false, false), 7], [new Item("naapridHorn", false, false), 12], [new Item("naapridLeatherArmour", false, false), 5]]}));
                    }
                }
                if (uniqueChars.fenwikLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Fenwik the Smith")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        if (quests.fenwikShopStyle == "normal")
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-963, -31386, "Person", false, "Fenwik the Smith", {race: "Kel", faction: "Kel", personality: "violent", outfit: ["naapridLeatherArmour", 4], weapon: ["warHammer", [8, 1], 8, 16, 1.4], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[2049, 1021], [1943, 1127], [1690, 1021]], merchant: true, merchandise: [[new Item("coins", false, false), 43], [new Item("iron", false, false), 2], [new Item("kellishSawClub", false, false), 3], [new Item("warHammer", false, false), 4], [new Item("kellishClaymore", false, false), 1], [new Item("timberAxe", false, false), 2], [new Item("longbow", false, false), 1], [new Item("arrow", false, false), 9], [new Item("mace", false, false), 2], [new Item("hammer", false, false), 3]]}));
                        }
                        else if (quests.fenwikShopStyle == "cash")
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-963, -31386, "Person", false, "Fenwik the Smith", {race: "Kel", faction: "Kel", personality: "violent", outfit: ["naapridLeatherArmour", 4], weapon: ["warHammer", [8, 1], 8, 16, 1.4], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[2049, 1021], [1943, 1127], [1690, 1021]], merchant: true, merchandise: [[new Item("coins", false, false), 145], [new Item("kellishSawClub", false, false), 1], [new Item("warHammer", false, false), 1], [new Item("hammer", false, false), 1]]}));
                        }
                    }
                }
                if (uniqueChars.ireneLDS == true && quests.lostGirlFound == true)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-1117, -31425, "Ardil", true, "Irene's Pet Ardil"));
                    ArtificialIntelligenceAccess.push(new Unit(-1004, -31483, "Ardil", true, "Irene's Pet Ardil"));
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Irene")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-1076, -31514, "Person", false, "Irene", {race: "Kel", faction: "Kel", personality: "scared", outfit: ["ardilFurClothing", 0], weapon: ["none", [0.1, 0.05], 0, 9, 0.9], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], kid: true, patrolStops: 0, patrolLoop: true, route:[[2049, 1021], [1943, 1127], [1690, 1021]]}));
                    }
                }
                if (uniqueChars.schuylarLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Chieftain Schuylar")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-1281, -30842, "Person", false, "Chieftain Schuylar", {race: "Kel", faction: "Kel", personality: "violent", outfit: ["naapridLeatherArmour", 6], weapon: ["kellishClaymore", [25, 1], 0, 50, 2], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[2049, 1021], [1943, 1127], [1690, 1021]], merchant: true, merchandise: [[new Item("coins", false, false), 492], [new Item("naapridDrinkinghornFull", false, false), 19], [new Item("naapridMilkhornFull", false, false), 14], [new Item("kellishClayPotOfNaapridMilk", false, false), 6], [new Item("naapridButter", false, false), 5], [new Item("kellishClayPotOfMushroomStew", false, false), 1], [new Item("kellishClayPotOfWater", false, false), 8], [new Item("kellishClayPot", false, false), 9], [new Item("santhBread", false, false), 1], [new Item("kellishSanthDough", false, false), 2], [new Item("rawNaapridFlesh", false, false), 4], [new Item("naapridMeat", false, false), 2], [new Item("pumpkin", false, false), 2], [new Item("jackOLanternEmpty", false, false), 3], [new Item("beesWax", false, false), 4], [new Item("candle", false, false), 6], [new Item("fireStarter", false, false), 2]]}));

                        for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                        {
                            if (ArtificialIntelligenceAccess[i].ID == "Chieftain Schuylar")
                            {
                                ArtificialIntelligenceAccess[i].healthMAX = 32;
                                ArtificialIntelligenceAccess[i].health = 32;
                                ArtificialIntelligenceAccess[i].speed += 0.55;
                                ArtificialIntelligenceAccess[i].grudge = 340;

                            }
                        }
                    }
                }
                //Buildings
                scenicList.push(new Scenery("kellishBuilding1", -1238, -30472, 0, true));
                scenicList.push(new Scenery("kellishBuilding1", -879, -30432, 0, true));
                scenicList.push(new Scenery("kellishBuilding1", -443, -30529, 0, true));
                scenicList.push(new Scenery("kellishBuilding2", -741, -31419, 0, true));
                scenicList.push(new Scenery("kellishBuilding2", -382, -31379, 0, true));
                scenicList.push(new Scenery("kellishBuilding4", -469, -31083, 0, true));
                scenicList.push(new Scenery("kellishBuilding3", -1168, -31170, 0, true));
                scenicList.push(new Scenery("kellishBuilding3", -1319, -31348, 0, true));
                scenicList.push(new Scenery("kellishBuilding4", -312, -30807, 0, true));
                scenicList.push(new Scenery("kellishBuilding6", -1205, -30838, 0, true));

                //stuff
                scenicList.push(new Scenery("well", -718, -30700, 4, true));
                scenicList.push(new Scenery("campFire", -1186, -30846, -1.2, "permaLit"));

                //Echlin Village crafting stations
                scenicList.push(new Scenery("anvil", -884, -31318, -Math.PI * 1/4, true));
                scenicList.push(new Scenery("forge", -882, -31444, Math.PI * 1/2, true));
                scenicList.push(new Scenery("loom", -1327, -31313, 0, true));

                //Echlin Village Farm
                scenicList.push(new Scenery("suuliPlant", -1651 , -30665, 3, "kel"));

                scenicList.push(new Scenery("harstPlant", -1428 , -30652, 1, "kel"));
                scenicList.push(new Scenery("harstPlant", -1458 , -30652, 1, "kel"));
                scenicList.push(new Scenery("harstPlant", -1488 , -30652, 1, "kel"));
                scenicList.push(new Scenery("harstPlant", -1518 , -30652, 1, "kel"));
                scenicList.push(new Scenery("harstPlant", -1548 , -30652, 1, "kel"));
                scenicList.push(new Scenery("harstPlant", -1578 , -30652, 1, "kel"));

                scenicList.push(new Scenery("potatoPlant", -1428 , -30724, 1, "kel"));
                scenicList.push(new Scenery("potatoPlant", -1458 , -30724, 1, "kel"));
                scenicList.push(new Scenery("potatoPlant", -1488 , -30724, 1, "kel"));
                scenicList.push(new Scenery("potatoPlant", -1518 , -30724, 1, "kel"));
                scenicList.push(new Scenery("potatoPlant", -1548 , -30724, 1, "kel"));
                scenicList.push(new Scenery("potatoPlant", -1578 , -30724, 1, "kel"));

                scenicList.push(new Scenery("carrotPlant", -1428 , -30790, 1, "kel"));
                scenicList.push(new Scenery("carrotPlant", -1458 , -30790, 1, "kel"));
                scenicList.push(new Scenery("carrotPlant", -1488 , -30790, 1, "kel"));
                scenicList.push(new Scenery("carrotPlant", -1518 , -30790, 1, "kel"));
                scenicList.push(new Scenery("carrotPlant", -1548 , -30790, 1, "kel"));
                scenicList.push(new Scenery("carrotPlant", -1578 , -30790, 1, "kel"));

                scenicList.push(new Scenery("santhPlant", -1652 , -30738, 1, "kel"));
                scenicList.push(new Scenery("santhPlant", -1652 , -30768, 1, "kel"));
                scenicList.push(new Scenery("santhPlant", -1652 , -30798, 1, "kel"));
                scenicList.push(new Scenery("santhPlant", -1652 , -30828, 1, "kel"));

                scenicList.push(new Scenery("pumpkinPlant", -1653 , -30888, 2, "kel"));
                scenicList.push(new Scenery("pumpkinPlant", -1583 , -30888, -1, "kel"));
                scenicList.push(new Scenery("pumpkinPlant", -1513 , -30888, 1, "kel"));
                scenicList.push(new Scenery("pumpkinPlant", -1443 , -30888, 0, "kel"));

                ArtificialIntelligenceAccess.push(new Unit(-2089, -29849, "Mofu", false, "Tupper"));
                ArtificialIntelligenceAccess.push(new Unit(-2054, -29703, "Mofu", "baby", "Goozy"));
                ArtificialIntelligenceAccess.push(new Unit(-2278, -29667, "Mofu", false, "Tem"));
                ArtificialIntelligenceAccess.push(new Unit(-2372, -29720, "Mofu", "baby", "Tilby"));
                ArtificialIntelligenceAccess.push(new Unit(-2472, -29756, "Mofu", "baby", "Libby"));
                ArtificialIntelligenceAccess.push(new Unit(-2429, -29856, "Mofu", false, "Gelnam"));
                ArtificialIntelligenceAccess.push(new Unit(-2440, -29962, "Mofu", "baby", "Tally"));
                ArtificialIntelligenceAccess.push(new Unit(-2500, -29938, "Mofu", "baby", "Jilin"));
                ArtificialIntelligenceAccess.push(new Unit(-2176, -29434, "Mofu", true, "Loz"));
                ArtificialIntelligenceAccess.push(new Unit(-2368, -29393, "Mofu", "baby", "Kleena"));
                ArtificialIntelligenceAccess.push(new Unit(5547, -29081, "Mofu", "baby", "Feath"));
                ArtificialIntelligenceAccess.push(new Unit(5332, -28842, "Mofu", true, "Fey"));
                ArtificialIntelligenceAccess.push(new Unit(5245, -29093, "Mofu", false, "Fea"));
                ArtificialIntelligenceAccess.push(new Unit(5417, -28940, "Mofu", false, "Fella"));
                ArtificialIntelligenceAccess.push(new Unit(5699, -29055, "Mofu", false, "Afetho"));
                ArtificialIntelligenceAccess.push(new Unit(5526, -29155, "Mofu", true, "Ley"));
                ArtificialIntelligenceAccess.push(new Unit(5040, -28965, "Mofu", true, "Fellont"));
                ArtificialIntelligenceAccess.push(new Unit(5550, -28918, "Mofu", false, "Feo"));
                ArtificialIntelligenceAccess.push(new Unit(5929, -28989, "Mofu", false, "Fennel"));
                ArtificialIntelligenceAccess.push(new Unit(5353, -29162, "Mofu", "baby", "Oregano"));
                ArtificialIntelligenceAccess.push(new Unit(5163, -28992, "Mofu", "baby", "Lavender"));
                ArtificialIntelligenceAccess.push(new Unit(5356, -29044, "Mofu", "baby", "Thyme"));

                ArtificialIntelligenceAccess.push(new Unit(3760, -25089, "Ardil", false, "Fluffi"));
                ArtificialIntelligenceAccess.push(new Unit(1475, -26274, "Ardil", true, "Flof"));
                ArtificialIntelligenceAccess.push(new Unit(2087, -24322, "Ardil", false, "Fluffor"));
                ArtificialIntelligenceAccess.push(new Unit(4695, -31293, "Ardil", false, "Fluffim"));

                ArtificialIntelligenceAccess.push(new Unit(5860, -25482, "Naaprid", true, "tabe"));
                ArtificialIntelligenceAccess.push(new Unit(5715, -25851, "Naaprid", false, "tebriela"));
                ArtificialIntelligenceAccess.push(new Unit(5209, -25700, "Naaprid", false, "tovree"));
                ArtificialIntelligenceAccess.push(new Unit(5292, -25813, "Naaprid", "baby", "tode"));
                ArtificialIntelligenceAccess.push(new Unit(4712, -25481, "Naaprid", true, "tebriel"));
                ArtificialIntelligenceAccess.push(new Unit(4984, -25920, "Naaprid", "baby", "tabii"));
                ArtificialIntelligenceAccess.push(new Unit(5131, -26117, "Naaprid", false, "tovrea"));
                ArtificialIntelligenceAccess.push(new Unit(5702, -26234, "Naaprid", false, "tabel"));
                ArtificialIntelligenceAccess.push(new Unit(5549, -26092, "Naaprid", "baby", "tebel"));
                ArtificialIntelligenceAccess.push(new Unit(6176, -26436, "Naaprid", true, "tebe"));
                ArtificialIntelligenceAccess.push(new Unit(4849, -26178, "Naaprid", true, "telb"));
                ArtificialIntelligenceAccess.push(new Unit(-1573, -32540, "Naaprid", false, "thovrea"));
                ArtificialIntelligenceAccess.push(new Unit(-1065, -32518, "Naaprid", false, "thabel"));
                ArtificialIntelligenceAccess.push(new Unit(-1327, -32617, "Naaprid", "baby", "thebel"));
                ArtificialIntelligenceAccess.push(new Unit(-1165, -32271, "Naaprid", true, "thebe"));

                ArtificialIntelligenceAccess.push(new Unit(-1122, -25315, "Frich", true, "Ratter"));
                ArtificialIntelligenceAccess.push(new Unit(-875, -25470, "Frich", false, "Rata"));
                ArtificialIntelligenceAccess.push(new Unit(-2099, -24804, "Frich", false, "Raton"));
                ArtificialIntelligenceAccess.push(new Unit(-1799, -26221, "Frich", false, "Ratal"));
                ArtificialIntelligenceAccess.push(new Unit(-2069, -27769, "Frich", false, "Ratol"));
                ArtificialIntelligenceAccess.push(new Unit(-1980, -27949, "Frich", false, "Ratyl"));
                ArtificialIntelligenceAccess.push(new Unit(1314, -32450, "Frich", true, "Rattalon"));
                ArtificialIntelligenceAccess.push(new Unit(5609, -27402, "Frich", false, "Ratil"));
                ArtificialIntelligenceAccess.push(new Unit(5797, -27298, "Frich", false, "Ratul"));
                ArtificialIntelligenceAccess.push(new Unit(2245, -27179, "Frich", false, "Ratin"));
                ArtificialIntelligenceAccess.push(new Unit(1895, -25407, "Frich", true, "Rattail"));
                ArtificialIntelligenceAccess.push(new Unit(-1420, -29340, "Frich", false, "Rataul"));
                ArtificialIntelligenceAccess.push(new Unit(-1204, -29146, "Frich", false, "Ratein"));
                ArtificialIntelligenceAccess.push(new Unit(-1381, -33597, "Frich", true, "Froozle"));

                ArtificialIntelligenceAccess.push(new Unit(1314, -32450, "Avrak", false, "Ava"));

                scenicList.push(new Scenery("tunskMound", -2326, -30565, 0, true)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("tunskMound", -660, -29920, -3, true)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("tunskMound", -1619, -25422, 5, true)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("tunskMound", -1234, -26529, -1.5, true)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("tunskMound", 219, -26761, 2.34, true)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("tunskMound", 1328, -27619, 4, true)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("tunskMound", 1089, -28642, -2, true)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("tunskMound", 5323, -28604, 6.44, true)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("tunskMound", 5837, -32383, 1, true)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("tunskMound", 2475, -32587, -4.2, true)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("tunskMound", 3009, -33697, 5.7, true)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("tunskMound", 1016, -32180, 3.3, true)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("tunskMound", 2800, -30129, -3.89, true)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("tunskMound", 3927, -25973, 3.9, true)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("tunskMound", 778, -25529, 4.5, true)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("tunskMound", 1433, -24726, -4.5, true)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("tunskMound", 2162, -28579, -5.3, true)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("tunskMound", -2110, -31828, -2.25, true)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("tunskMound", -1159, -33195, 3.5, true)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("tunskMound", -2384, -33735, -1, true)); //for mofu nests the last number determines its size multiplier.

                //Mofu Habitations
                scenicList.push(new Scenery("mofuNest", -2089, -29849, -3, 1.2)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("mofuNest", -2278, -29667, 1, 1)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("mofuNest", -2429, -29856, 0, 1.15)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("mofuNest", -2176, -29434, -2.245, 1.9)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("mofuNest", 5245, -29093, -6, 1.1)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("mofuNest", 5417, -28940, 1.9, 1.05)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("mofuNest", 5699, -29055, 0.65, 1.15)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("mofuNest", 5332, -28842, -3.845, 1.7)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("mofuNest", 5929, -28989, 4, 1.35)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("mofuNest", 5526, -29155, 5.45, 2.2)); //for mofu nests the last number determines its size multiplier.

                //Plantlife
                scenicList.push(new Scenery("grushweedPlant", -1934, -27527, 5, 1.2));
                scenicList.push(new Scenery("grushweedPlant", 5213, -32206, 2.3681, 1.15));
                scenicList.push(new Scenery("grushweedPlant", 5027, -32290, 2.3681, 0.96));
                scenicList.push(new Scenery("mufPlant", -1212, -25586, 2, true));
                scenicList.push(new Scenery("mufPlant", -1625, -28741, -4, true));
                scenicList.push(new Scenery("mufPlant", 3916, -26914, 3, true));
                scenicList.push(new Scenery("mufPlant", 3791, -28886, -6, true));
                scenicList.push(new Scenery("techiPlant", -2181, -30042, -3.5, true));
                scenicList.push(new Scenery("techiPlant", -574, -27261, 1.65, true));
                scenicList.push(new Scenery("techiPlant", 4316, -27563, -3.5, true));
                scenicList.push(new Scenery("techiPlant", 5929, -32834, 4.98, true));
                scenicList.push(new Scenery("techiPlant", 6297, -32969, -5.78, true));
                scenicList.push(new Scenery("techiPlant", 5597, -25983, -6.13, true));
                scenicList.push(new Scenery("techiPlant", 1211, -28938, 0, true));
                scenicList.push(new Scenery("techiPlant", -1191, -29547, -1.55, true));
                scenicList.push(new Scenery("luufPlant", -2190, -28265, 6, true));
                scenicList.push(new Scenery("luufPlant", 4912, -33426, -4.66, true));
                scenicList.push(new Scenery("itlinPlant", -2044, -26903, -5.9, true));
                scenicList.push(new Scenery("itlinPlant", 1175, -25095, 4.3, true));
                scenicList.push(new Scenery("itlinPlant", 3959, -31413, -3.3, true));
                scenicList.push(new Scenery("itlinPlant", -1843, -25164, 5, true));
                scenicList.push(new Scenery("tenicPlant", 5959, -27404, 2.7, true));
                scenicList.push(new Scenery("butterMellowPlant", 4959, -25479, -1, true));
                scenicList.push(new Scenery("butterMellowPlant", 3003, -32876, -2.2345, true));
                scenicList.push(new Scenery("palntPlant", 3347, -25438, -2.3, true));
                scenicList.push(new Scenery("palntPlant", 4799, -29996, 4.4, true));
                scenicList.push(new Scenery("palntPlant", 3751, -33251, -3.6, true));
                scenicList.push(new Scenery("palntPlant", 1771, -28054, -0.4, true));


                change = "s3";
            }
        }
        else if (region == "s1e1")
        {
            if (change != "s1e1")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                //Animals in the forest
                ArtificialIntelligenceAccess.push(new Unit(-12632, -4608, "Grib", false, "Kab"));
                ArtificialIntelligenceAccess.push(new Unit(-12339, -4511, "Grib", true, "Keb"));
                ArtificialIntelligenceAccess.push(new Unit(-12856, -4354, "Grib", true, "Kubb"));
                ArtificialIntelligenceAccess.push(new Unit(-12706, -4829, "Grib", true, "Kiib"));
                ArtificialIntelligenceAccess.push(new Unit(-12423, -5247, "Narthwarp", false, "Grax"));
                ArtificialIntelligenceAccess.push(new Unit(-11373, -4376, "Shehid", false, "Toot"));
                ArtificialIntelligenceAccess.push(new Unit(-11348, -4490, "Shehid", false, "Tut"));
                ArtificialIntelligenceAccess.push(new Unit(-11120, -4466, "Shehid", false, "Tat"));
                ArtificialIntelligenceAccess.push(new Unit(-10984, -4232, "Shehid", false, "Tittle"));
                ArtificialIntelligenceAccess.push(new Unit(-11225, -4217, "Shehid", false, "Tit"));
                ArtificialIntelligenceAccess.push(new Unit(-10009, -4348, "Shehid", false, "Tilt"));
                ArtificialIntelligenceAccess.push(new Unit(-10428, -4256, "BlackBear", true, "Grrrr"));
                ArtificialIntelligenceAccess.push(new Unit(-7498, -4088, "BlackBear", false, "Grrr"));
                ArtificialIntelligenceAccess.push(new Unit(-10009, -4348, "Shehid", false, "Tilt"));
                scenicList.push(new Scenery("ulgoyPlant", -11988, -4219, 2, 3.4));
                ArtificialIntelligenceAccess.push(new Unit(-12001, -4216, "Ulgoy", true, "Neptune"));
                ArtificialIntelligenceAccess.push(new Unit(-8839, -4188, "Varn", true, "fluff"));
                ArtificialIntelligenceAccess.push(new Unit(-9071, -4112, "Varn", false, "fluf"));
                ArtificialIntelligenceAccess.push(new Unit(-8965, -4248, "Varn", false, "flufff"));
                ArtificialIntelligenceAccess.push(new Unit(-11025, -4803, "Viper", false, "scale"));
                ArtificialIntelligenceAccess.push(new Unit(-11448, -4055, "Lizard", true, "eLIZabeth"));

                ArtificialIntelligenceAccess.push(new Unit(-9805, -9416, "Frich", false, "thugBug"));
                ArtificialIntelligenceAccess.push(new Unit(-9511, -9249, "Frich", true, "thugBug"));
                ArtificialIntelligenceAccess.push(new Unit(-9487, -9384, "Frich", false, "thugBug"));
                ArtificialIntelligenceAccess.push(new Unit(-11547, -10427, "Frich", false, "thugBug"));
                ArtificialIntelligenceAccess.push(new Unit(-11687, -10474, "Frich", true, "thugBug"));
                ArtificialIntelligenceAccess.push(new Unit(-11579, -10281, "Frich", true, "thugBug"));
                ArtificialIntelligenceAccess.push(new Unit(-11763, -10221, "Frich", false, "thugBug"));
                ArtificialIntelligenceAccess.push(new Unit(-11498, -10145, "Frich", false, "thugBug"));
                ArtificialIntelligenceAccess.push(new Unit(-7947, -12989, "Frich", false, "thugBug"));
                ArtificialIntelligenceAccess.push(new Unit(-5246, -11020, "Frich", false, "thugBug"));
                ArtificialIntelligenceAccess.push(new Unit(-5423, -11898, "Frich", false, "thugBug"));
                ArtificialIntelligenceAccess.push(new Unit(-5271, -10854, "Frich", false, "thugBug"));
                ArtificialIntelligenceAccess.push(new Unit(-5423, -5052, "Frich", false, "thugBug"));
                ArtificialIntelligenceAccess.push(new Unit(-5652, -5168, "Frich", true, "thugBug"));
                ArtificialIntelligenceAccess.push(new Unit(-9414, -6154, "Frich", true, "thugBug"));
                ArtificialIntelligenceAccess.push(new Unit(-9194, -6239, "Frich", true, "thugBug"));
                ArtificialIntelligenceAccess.push(new Unit(-9014, -6041, "Frich", false, "thugBug"));
                ArtificialIntelligenceAccess.push(new Unit(-8725, -6390, "Frich", true, "thugBug"));

                ArtificialIntelligenceAccess.push(new Unit(-7522, -11182, "Evrak", false, "thoogBoog"));

                ArtificialIntelligenceAccess.push(new Unit(-6731, -9301, "Ardil", false, "badyBoop"));
                ArtificialIntelligenceAccess.push(new Unit(-4438, -9200, "Ardil", true, "badyBoop"));
                ArtificialIntelligenceAccess.push(new Unit(-11038, -6393, "Ardil", false, "badyBoop"));

                ArtificialIntelligenceAccess.push(new Unit(-5012, -12614, "Naaprid", false, "jerryBoog"));
                ArtificialIntelligenceAccess.push(new Unit(-4688, -12444, "Naaprid", true, "jerryBoog"));
                ArtificialIntelligenceAccess.push(new Unit(-4953, -12709, "Naaprid", "baby", "jerryBoog"));

                ArtificialIntelligenceAccess.push(new Unit(-7799, -5368, "Varn", true, "ppopyDog"));
                ArtificialIntelligenceAccess.push(new Unit(-7724, -5637, "Varn", false, "ppopyDog"));
                ArtificialIntelligenceAccess.push(new Unit(-11475, -8059, "Varn", false, "ppopyDog"));
                ArtificialIntelligenceAccess.push(new Unit(-12220, -6760, "Varn", true, "ppopyDog"));
                ArtificialIntelligenceAccess.push(new Unit(-11913, -5649, "Varn", true, "ppopyDog"));


                //Build Scenery

                scenicList.push(new Scenery("techiPlant", -9289 ,-9603, 1, true));
                scenicList.push(new Scenery("techiPlant", -9649 ,-12638, 2, true));
                scenicList.push(new Scenery("techiPlant", -6660 ,-5127, 3, true));
                scenicList.push(new Scenery("techiPlant", -9275 ,-6523, 4, true));
                scenicList.push(new Scenery("techiPlant", -6227 ,-7006, 5, true));
                scenicList.push(new Scenery("techiPlant", -4357 ,-10745, 6, true));
                scenicList.push(new Scenery("techiPlant", -9778 ,-7778, 8, true));
                scenicList.push(new Scenery("techiPlant", -12453 ,-6554, 10, true));

                scenicList.push(new Scenery("palntPlant", -5177 ,-12902, 12, true));
                scenicList.push(new Scenery("palntPlant", -10814 ,-8486, 15, true));

                scenicList.push(new Scenery("itlinPlant", -7293 , -8208, 5.5, true));
                scenicList.push(new Scenery("itlinPlant", -6836 , -8281, 7.8, true));
                scenicList.push(new Scenery("itlinPlant", -8423 , -8807, 1.1, true));
                scenicList.push(new Scenery("ishPlant", -11117 , -7781, 2.23, true));

                scenicList.push(new Scenery("luufPlant", -11155 ,-9093, 3, true));
                scenicList.push(new Scenery("luufPlant", -5283 ,-10015, 2.5, true));



                //trees in the southern wuncwer woods.
                scenicList.push(new Scenery("pineTree", -7583 , -3885, 1.2, true));
                scenicList.push(new Scenery("pineTree", -8065 , -3688, -3, true));
                scenicList.push(new Scenery("pineTree", -8710 , -3916, -2.5, true));
                scenicList.push(new Scenery("pineTree", -9578 , -3837, 4, true));
                scenicList.push(new Scenery("pineTree", -10111 , -3906, -5, true));
                scenicList.push(new Scenery("pineTree", -11025 , -3706, 2.6, true));
                scenicList.push(new Scenery("pineTree", -11548 , -3882, 5.2, true));
                scenicList.push(new Scenery("pineTree", -12132 , -3725, -1, true));
                scenicList.push(new Scenery("pineTree", -12700 , -3822, 6, true));
                scenicList.push(new Scenery("pineTree", -13186 , -3942, -6.3, true));
                scenicList.push(new Scenery("pineTree", -6995 , -3821, 6.995, true));
                scenicList.push(new Scenery("pineTree", -6398 , -3743, 0.23, true));
                scenicList.push(new Scenery("pineTree", -6848 , -4186, -3.678, true));
                scenicList.push(new Scenery("pineTree", -8029 , -4161, 3.1, true));
                scenicList.push(new Scenery("pineTree", -7448 , -4370, 4.5, true));
                scenicList.push(new Scenery("pineTree", -8620 , -4332, -1.7, true));
                scenicList.push(new Scenery("pineTree", -9388 , -4224, -4.62, true));
                scenicList.push(new Scenery("pineTree", -9795 , -4691, -5.9, true));
                scenicList.push(new Scenery("pineTree", -9968 , -4233, 2.3, true));
                scenicList.push(new Scenery("pineTree", -10507 , -4023, 2.5, true));
                scenicList.push(new Scenery("pineTree", -10465 , -4521, 3.98, true));
                scenicList.push(new Scenery("pineTree", -11005 , -4119, -4.1, true));
                scenicList.push(new Scenery("pineTree", -10660 , -4900, -2, true));
                scenicList.push(new Scenery("pineTree", -11008 , -4524, -4.8, true));
                scenicList.push(new Scenery("pineTree", -11744 , -4280, -1.891, true));
                scenicList.push(new Scenery("pineTree", -11263 , -4864, 5.435, true));
                scenicList.push(new Scenery("pineTree", -11857 , -4696, 3.82, true));
                scenicList.push(new Scenery("pineTree", -11717 , -5059, -6.42, true));
                scenicList.push(new Scenery("pineTree", -12329 , -4069, 2.93, true));
                scenicList.push(new Scenery("pineTree", -12245 , -4426, -4.7, true));
                scenicList.push(new Scenery("pineTree", -12174 , -4947, -2.2, true));
                scenicList.push(new Scenery("pineTree", -12232 , -5375, 5.68, true));
                scenicList.push(new Scenery("pineTree", -12808 , -5502, 1, true));
                scenicList.push(new Scenery("pineTree", -12913 , -4233, -1.5, true));
                scenicList.push(new Scenery("pineTree", -13143 , -4801, 3, true));
                scenicList.push(new Scenery("pineTree", -12722, -4981, 2.136, true));
                scenicList.push(new Scenery("pineTree", -13009 , -5159, -1.29, true));
                scenicList.push(new Scenery("pineTree", -11286 , -5204, 7, true));

                //tomb of ulther, the brave
                scenicList.push(new Scenery("pineTree", -10076 , -11643, 3, true));
                scenicList.push(new Scenery("pineTree", -10720 , -11378, 1, true));
                scenicList.push(new Scenery("stone", -10195 , -11349, 1.3, 3, 1));
                scenicList.push(new Scenery("pineTree", -9458 , -11437, 7, true));
                scenicList.push(new Scenery("pineTree", -10452 , -10851, 4, true));
                scenicList.push(new Scenery("pineTree", -11136 , -11033, 2, true));
                scenicList.push(new Scenery("brightbloomPlant", -10190 , -11268, 4.1, "ultherFlower"));
                ArtificialIntelligenceAccess.push(new Unit(-12115, -11594, "Varn", true, "bossmanI"));
                ArtificialIntelligenceAccess.push(new Unit(-12166, -11846, "Varn", false, "bossmanII"));
                ArtificialIntelligenceAccess.push(new Unit(-11953, -11997, "Varn", true, "bossmanIII"));
                ArtificialIntelligenceAccess.push(new Unit(-10489, -10993, "Shehid", false, "hackeyI"));
                ArtificialIntelligenceAccess.push(new Unit(-11009, -11109, "Shehid", false, "hackeyII"));
                ArtificialIntelligenceAccess.push(new Unit(-10154, -11510, "Shehid", true, "hackeyBossman"));
                scenicList.push(new Scenery("akerPlant", -10152 , -11356, 5.5, true));
                ArtificialIntelligenceAccess.push(new Unit(-12454, -12972, "Avrak", false, "ahhratattackI"));
                ArtificialIntelligenceAccess.push(new Unit(-12200, -12910, "Avrak", false, "ahhratattackII"));
                ArtificialIntelligenceAccess.push(new Unit(-5000, -7500, "Frich", "massive", "uhohspagheti"));
                scenicList.push(new Scenery("grushweedPlant", -7654 , -12453, 1.3, 3));
                scenicList.push(new Scenery("grushweedPlant", -7832 , -12332, 4, 1.6));
                var rndmxz = Math.round(Math.random());
                if (rndmxz == 0)
                {
                    scenicList.push(new Scenery("grushweedPlant", -7370 , -12397, 6, 2));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(-7370 , -12397, "Grush", true, "boyomatic"));
                }
                scenicList.push(new Scenery("glinPlant", -10695 , -11241, 3.7, true));





                //all items dropped on map
                if (quests.ultherMapItems == true)
                {
                    quests.ultherMapItems = false;
                    worldItems.push([new Item("ultherRIP", -10163 , -11312), 1]);
                    worldItems.push([new Item("sealSkin", -10150 , -11312), 1]);
                    worldItems.push([new Item("culprisLeaf", -10157 , -11312), 2]);
                    worldItems.push([new Item("tylunFlower", -10150 , -11312), 1]);
                }

                //Plants of the souther tip of the wuncwer woods
                scenicList.push(new Scenery("akerPlant", -7460 , -4008, 6.8, true));
                scenicList.push(new Scenery("glinPlant", -8837 , -4003, 1, true));
                scenicList.push(new Scenery("culprisPlant", -12566 , -4628, -2, true));
                scenicList.push(new Scenery("neprilnePlant", -11329 , -4441, 3, true));
                scenicList.push(new Scenery("akerPlant", -12309 , -5242, -5.5, true));


                change = "s1e1";
            }
        }
        else if (region == "s3e1")
        {
            if (change != "s3e1")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                //grassborder animals
                ArtificialIntelligenceAccess.push(new Unit(-3906, -29862, "Frich", true, "Ratool"));
                ArtificialIntelligenceAccess.push(new Unit(-4181, -30861, "Frich", false, "Ratain"));
                ArtificialIntelligenceAccess.push(new Unit(-4251, -31000, "Frich", true, "Ratoal"));
                ArtificialIntelligenceAccess.push(new Unit(-4438, -30923, "Frich", false, "Rataon"));
                ArtificialIntelligenceAccess.push(new Unit(-3795, -32187, "Frich", false, "Ration"));
                ArtificialIntelligenceAccess.push(new Unit(-11615, -24474, "Frich", true, "Ratoala"));
                ArtificialIntelligenceAccess.push(new Unit(-11815, -24561, "Frich", false, "Rataono"));
                ArtificialIntelligenceAccess.push(new Unit(-9604, -24669, "Frich", true, "Ratoalo"));
                ArtificialIntelligenceAccess.push(new Unit(-6382, -24510, "Frich", false, "Rata"));

                ArtificialIntelligenceAccess.push(new Unit(-4432, -33545, "Mofu", true, "Kaperbaldi"));
                ArtificialIntelligenceAccess.push(new Unit(-4650, -33429, "Mofu", false, "Aperbaldica"));
                ArtificialIntelligenceAccess.push(new Unit(-4590, -33709, "Mofu", "baby", "Aper"));

                scenicList.push(new Scenery("tunskMound", -9277, -33752, 0, true)); //for mofu nests the last number determines its size multiplier.

                //Mofu Habitations
                scenicList.push(new Scenery("mofuNest", -4432, -33545, -2.1, 1.315)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("techiPlant", -4599, -28695, 3, true));
                scenicList.push(new Scenery("luufPlant", -4355, -24889, -5, true));
                scenicList.push(new Scenery("itlinPlant", -9599, -24620, -3.2, true));
                scenicList.push(new Scenery("techiPlant", -9265, -24930, 1.11, true));

                //Animals in the mud bog
                //ArtificialIntelligenceAccess.push(new Unit(-6610, -32189, "Grewble", false, "Glud"));
                //ArtificialIntelligenceAccess.push(new Unit(-7778, -32048, "BrolleWorms", false, "Slickers"));
                //ArtificialIntelligenceAccess.push(new Unit(-6838, -31129, "Ut", false, "Icky Icky"));
                //ArtificialIntelligenceAccess.push(new Unit(-9239, -31197, "SpittingMudFly", true, "Super Fly"));

                //Build Scenery
                scenicList.push(new Scenery("grewbleEggPatch", -7237 , -31546, -Math.PI * 2.2, false));
                scenicList.push(new Scenery("grewbleEggPatch", -7611 , -29496, -Math.PI * 1.4, false));
                scenicList.push(new Scenery("grewbleEggPatch", -8235 , -26971, -Math.PI * -6.1, false));
                scenicList.push(new Scenery("grewbleEggPatch", -10523 , -27599, -Math.PI * 0, false));
                scenicList.push(new Scenery("grewbleEggPatch", -10238 , -27403, -Math.PI * 5, false));
                scenicList.push(new Scenery("grewbleEggPatch", -10235 , -27494, -Math.PI * 3.77, false));
                scenicList.push(new Scenery("grewbleEggPatch", -10445 , -27153, -Math.PI * -2.4, false));
                scenicList.push(new Scenery("grewbleEggPatch", -10578 , -26210, 1, false));
                scenicList.push(new Scenery("grewbleEggPatch", -6830 , -31015, 2, false));
                scenicList.push(new Scenery("brolleFeast", -10116 , -29425, 0, false));
                scenicList.push(new Scenery("brolleFeast", -7534 , -28197, -Math.PI * 4.2, false));
                scenicList.push(new Scenery("brolleFeast", -10049 , -28561, -Math.PI * -2, false));
                scenicList.push(new Scenery("brolleFeast", -9314 , -26816, -Math.PI * -Math.PI, false));


                //Plants in the mud bog
                scenicList.push(new Scenery("wegPlant", -8039 , -31917, 5, true));
                scenicList.push(new Scenery("wegPlant", -6300 , -33078, 3, true));
                scenicList.push(new Scenery("wegPlant", -8432 , -31226, 0, true));
                scenicList.push(new Scenery("wegPlant", -8636 , -27421, -3.2, true));
                scenicList.push(new Scenery("wegPlant", -7448 , -30705, -4, true));
                scenicList.push(new Scenery("wegPlant", -5333 , -29560, -2, true));
                scenicList.push(new Scenery("wegPlant", -9743 , -26443, 3.14159, true));
                scenicList.push(new Scenery("wegPlant", -6928 , -26150, -1.1, true));
                scenicList.push(new Scenery("wegPlant", -8484 , -25656, -6, true));
                scenicList.push(new Scenery("wegPlant", -12774 , -29931, -2.23, true));
                scenicList.push(new Scenery("wegPlant", -7536 , -31824, 4.3, true));
                scenicList.push(new Scenery("sesrePlant", -9030 , -30602, 1, true));
                scenicList.push(new Scenery("sesrePlant", -9324 , -31587, 2.42, true));
                scenicList.push(new Scenery("sesrePlant", -6549 , -30150, -5.5, true));
                scenicList.push(new Scenery("sesrePlant", -6796 , -27705, 3.6, true));
                scenicList.push(new Scenery("sesrePlant", -10083 , -27886, -2.83, true));
                scenicList.push(new Scenery("sesrePlant", -10853 , -28016, -4, true));
                scenicList.push(new Scenery("sesrePlant", -10158 , -31303, 4.444, true));
                scenicList.push(new Scenery("sesrePlant", -11527 , -32609, -1.131320096913069, true));
                scenicList.push(new Scenery("lorkweedPlant", -7842 , -30440, -2.5, true));
                scenicList.push(new Scenery("lorkweedPlant", -8435 , -32994, 6, true));
                scenicList.push(new Scenery("lorkweedPlant", -9418 , -33194, 9, true));
                scenicList.push(new Scenery("lorkweedPlant", -7043 , -30258, -1, true));
                scenicList.push(new Scenery("lorkweedPlant", -6332 , -28978, 2, true));
                scenicList.push(new Scenery("lorkweedPlant", -6183 , -28293, -1.5, true));
                scenicList.push(new Scenery("lorkweedPlant", -5505 , -26480, 1.35, true));
                scenicList.push(new Scenery("lorkweedPlant", -6410 , -26714, 5.5, true));
                scenicList.push(new Scenery("lorkweedPlant", -8085 , -26216, -5, true));
                scenicList.push(new Scenery("lorkweedPlant", -11399 , -25450, 4.5, true));
                scenicList.push(new Scenery("lorkweedPlant", -11009 , -27171, -3.3, true));
                scenicList.push(new Scenery("lorkweedPlant", -9248 , -26859, 1, true));
                scenicList.push(new Scenery("lorkweedPlant", -6327 , -25252, -3.4444, true));
                scenicList.push(new Scenery("lorkweedPlant", -10968 , -26032, 1.6, true));
                scenicList.push(new Scenery("lorkweedPlant", -11345 , -32173, -3.4444, true));
                scenicList.push(new Scenery("lorkweedPlant", -10617 , -30279, 5.56, true));
                scenicList.push(new Scenery("lorkweedPlant", -8516 , -32417, 2, true));

                var random = Math.floor(Math.random() * 13);

                if (random >= 0 && random <= 7)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-10634, -27122, "Grewble", false, "Glod"));
                    ArtificialIntelligenceAccess.push(new Unit(-10582, -27338, "Grewble", false, "Gled"));
                    ArtificialIntelligenceAccess.push(new Unit(-10158, -27824, "Grewble", false, "Glid"));
                    ArtificialIntelligenceAccess.push(new Unit(-10296, -26454, "Grewble", false, "Glidr"));
                    ArtificialIntelligenceAccess.push(new Unit(-10738, -26060, "Grewble", false, "Glood"));
                    ArtificialIntelligenceAccess.push(new Unit(-11333, -28148, "Grewble", false, "Glewd"));

                    ArtificialIntelligenceAccess.push(new Unit(-10125, -27563, "Grewble", "baby", "Glad"));
                    ArtificialIntelligenceAccess.push(new Unit(-11679, -26352, "Grewble", "baby", "Gliid"));

                    ArtificialIntelligenceAccess.push(new Unit(-10065, -27223, "Grewble", true, "Glud"));
                }
                else if (random <= 11)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-10634, -27122, "Grewble", "baby", "Glod"));
                    ArtificialIntelligenceAccess.push(new Unit(-10582, -27338, "Grewble", false, "Gled"));
                    ArtificialIntelligenceAccess.push(new Unit(-10158, -27824, "Grewble", "baby", "Glid"));
                    ArtificialIntelligenceAccess.push(new Unit(-10296, -26454, "Grewble", false, "Glidr"));
                    ArtificialIntelligenceAccess.push(new Unit(-10738, -26060, "Grewble", false, "Glood"));
                    ArtificialIntelligenceAccess.push(new Unit(-11333, -28148, "Grewble", "baby", "Glewd"));

                    ArtificialIntelligenceAccess.push(new Unit(-10125, -27563, "Grewble", false, "Glad"));
                    ArtificialIntelligenceAccess.push(new Unit(-11679, -26352, "Grewble", true, "Gliid"));

                    ArtificialIntelligenceAccess.push(new Unit(-10065, -27223, "Grewble", false, "Glud"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(-10634, -27122, "Grewble", false, "Glod"));
                    ArtificialIntelligenceAccess.push(new Unit(-10582, -27338, "Grewble", true, "Gled"));
                    ArtificialIntelligenceAccess.push(new Unit(-10158, -27824, "Grewble", false, "Glid"));
                    ArtificialIntelligenceAccess.push(new Unit(-10296, -26454, "Grewble", false, "Glidr"));
                    ArtificialIntelligenceAccess.push(new Unit(-10738, -26060, "Grewble", false, "Glood"));
                    ArtificialIntelligenceAccess.push(new Unit(-11333, -28148, "Grewble", true, "Glewd"));

                    ArtificialIntelligenceAccess.push(new Unit(-10125, -27563, "Grewble", true, "Glad"));
                    ArtificialIntelligenceAccess.push(new Unit(-11679, -26352, "Grewble", false, "Gliid"));

                    ArtificialIntelligenceAccess.push(new Unit(-10065, -27223, "Grewble", "giant", "Horgune the Mud King"));
                }

                random = Math.floor(Math.random() * 13);

                if (random >= 8)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-6385, -29752, "Ut", "baby", "Icky"));
                    ArtificialIntelligenceAccess.push(new Unit(-6187, -30102, "SpittingMudFly", "baby", "Lil Fly"));
                    ArtificialIntelligenceAccess.push(new Unit(-6548, -30629, "Grewble", false, "Gluck"));
                    ArtificialIntelligenceAccess.push(new Unit(-7718, -29738, "Grewble", false, "Glick"));
                    ArtificialIntelligenceAccess.push(new Unit(-7313, -28682, "BrolleWorms", false, "Slipper"));
                    ArtificialIntelligenceAccess.push(new Unit(-6850, -28821, "BrolleWorms", false, "Zapatilla"));
                    ArtificialIntelligenceAccess.push(new Unit(-6843, -28150, "BrolleWorms", false, "Boot"));
                    ArtificialIntelligenceAccess.push(new Unit(-7282, -27862, "Ut", false, "Ick"));
                    ArtificialIntelligenceAccess.push(new Unit(-6706, -27347, "SpittingMudFly", true, "The Fly"));
                    ArtificialIntelligenceAccess.push(new Unit(-6002, -27849, "Grewble", false, "Glon"));
                    ArtificialIntelligenceAccess.push(new Unit(-6843, -28150, "BrolleWorms", false, "Bota"));
                    ArtificialIntelligenceAccess.push(new Unit(-8192, -28544, "SpittingMudFly", "baby", "La Mosca"));
                    ArtificialIntelligenceAccess.push(new Unit(-8341, -27860, "SpittingMudFly", false, "A Fly"));
                    ArtificialIntelligenceAccess.push(new Unit(-8271, -27163, "Grewble", "baby", "Glilk"));
                    ArtificialIntelligenceAccess.push(new Unit(-7761, -26946, "Grewble", false, "Glolk"));
                    ArtificialIntelligenceAccess.push(new Unit(-8552, -26284, "Ut", true, "Ickick"));
                    ArtificialIntelligenceAccess.push(new Unit(-7366, -26352, "Ut", "baby", "Ickuh"));
                    ArtificialIntelligenceAccess.push(new Unit(-6914, -26993, "Ut", "baby", "Ickor"));
                    ArtificialIntelligenceAccess.push(new Unit(-8791, -26838, "Ut", "baby", "Icklii"));
                    ArtificialIntelligenceAccess.push(new Unit(-7199, -25952, "BrolleWorms", false, "Zapato"));
                    ArtificialIntelligenceAccess.push(new Unit(-6452, -26153, "BrolleWorms", false, "Shoe"));
                    ArtificialIntelligenceAccess.push(new Unit(-6784, -25361, "BrolleWorms", false, "Sandal"));
                    ArtificialIntelligenceAccess.push(new Unit(-9461, -27794, "BrolleWorms", false, "Huarache"));
                    ArtificialIntelligenceAccess.push(new Unit(-9021, -29168, "SpittingMudFly", false, "Una Mosca"));
                    ArtificialIntelligenceAccess.push(new Unit(-9415, -29669, "SpittingMudFly", "baby", "Moscita"));
                    ArtificialIntelligenceAccess.push(new Unit(-9155, -30201, "BrolleWorms", false, "Sandalia"));
                    ArtificialIntelligenceAccess.push(new Unit(-8265, -30756, "Ut", false, "Ickle"));
                    ArtificialIntelligenceAccess.push(new Unit(-6741, -31899, "Grewble", false, "Gluyka"));
                    ArtificialIntelligenceAccess.push(new Unit(-8380, -32059, "Ut", false, "Ickler"));
                    ArtificialIntelligenceAccess.push(new Unit(-9083, -32672, "Ut", "baby", "Ickluh"));
                    ArtificialIntelligenceAccess.push(new Unit(-10275, -32356, "BrolleWorms", false, "Flip-Flop"));
                    ArtificialIntelligenceAccess.push(new Unit(-9882, -31837, "BrolleWorms", false, "Chancla"));
                    ArtificialIntelligenceAccess.push(new Unit(-9103, -32300, "BrolleWorms", false, "High-Heels"));
                    ArtificialIntelligenceAccess.push(new Unit(-9271, -31727, "BrolleWorms", false, "Zapato de Tacón"));
                    ArtificialIntelligenceAccess.push(new Unit(-8359, -32655, "BrolleWorms", false, "Tacón"));
                    ArtificialIntelligenceAccess.push(new Unit(-11368, -32751, "SpittingMudFly", true, "Mosca Mosca"));
                    ArtificialIntelligenceAccess.push(new Unit(-12187, -32622, "SpittingMudFly", "baby", "Las Moscas"));
                    ArtificialIntelligenceAccess.push(new Unit(-11866, -32840, "Ut", false, "Icklem"));
                    ArtificialIntelligenceAccess.push(new Unit(-10470, -30354, "BrolleWorms", false, "99er"));
                    ArtificialIntelligenceAccess.push(new Unit(-11487, -29952, "Ut", false, "Icklek"));
                    ArtificialIntelligenceAccess.push(new Unit(-10967, -28766, "SpittingMudFly", "baby", "Fly Fly"));
                    ArtificialIntelligenceAccess.push(new Unit(-6372, -31461, "BrolleWorms", false, "666er"));
                }
                else if (random >= 3)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-6385, -29752, "Ut", false, "Icky"));
                    ArtificialIntelligenceAccess.push(new Unit(-6187, -30102, "SpittingMudFly", false, "Lil Fly"));
                    ArtificialIntelligenceAccess.push(new Unit(-6548, -30629, "Grewble", true, "Gluck"));
                    ArtificialIntelligenceAccess.push(new Unit(-7718, -29738, "Grewble", "baby", "Glick"));
                    ArtificialIntelligenceAccess.push(new Unit(-7313, -28682, "BrolleWorms", false, "Slipper"));
                    ArtificialIntelligenceAccess.push(new Unit(-6850, -28821, "BrolleWorms", false, "Zapatilla"));
                    ArtificialIntelligenceAccess.push(new Unit(-6843, -28150, "BrolleWorms", false, "Boot"));
                    ArtificialIntelligenceAccess.push(new Unit(-7282, -27862, "Ut", "baby", "Ick"));
                    ArtificialIntelligenceAccess.push(new Unit(-6706, -27347, "SpittingMudFly", "giant", "The Fly"));
                    ArtificialIntelligenceAccess.push(new Unit(-6002, -27849, "Grewble", false, "Glon"));
                    ArtificialIntelligenceAccess.push(new Unit(-6843, -28150, "BrolleWorms", false, "Bota"));
                    ArtificialIntelligenceAccess.push(new Unit(-8192, -28544, "SpittingMudFly", false, "La Mosca"));
                    ArtificialIntelligenceAccess.push(new Unit(-8341, -27860, "SpittingMudFly", "baby", "A Fly"));
                    ArtificialIntelligenceAccess.push(new Unit(-8271, -27163, "Grewble", false, "Glilk"));
                    ArtificialIntelligenceAccess.push(new Unit(-7761, -26946, "Grewble", false, "Glolk"));
                    ArtificialIntelligenceAccess.push(new Unit(-8552, -26284, "Ut", false, "Ickick"));
                    ArtificialIntelligenceAccess.push(new Unit(-7366, -26352, "Ut", "baby", "Ickuh"));
                    ArtificialIntelligenceAccess.push(new Unit(-6914, -26993, "BrolleWorms", false, "Ickor"));
                    ArtificialIntelligenceAccess.push(new Unit(-8791, -26838, "Ut", false, "Icklii"));
                    ArtificialIntelligenceAccess.push(new Unit(-7199, -25952, "BrolleWorms", false, "Zapato"));
                    ArtificialIntelligenceAccess.push(new Unit(-6452, -26153, "SpittingMudFly", "baby", "Shoe"));
                    ArtificialIntelligenceAccess.push(new Unit(-6784, -25361, "BrolleWorms", false, "Sandal"));
                    ArtificialIntelligenceAccess.push(new Unit(-9461, -27794, "BrolleWorms", false, "Huarache"));
                    ArtificialIntelligenceAccess.push(new Unit(-9021, -29168, "SpittingMudFly", true, "Una Mosca"));
                    ArtificialIntelligenceAccess.push(new Unit(-9415, -29669, "SpittingMudFly", "baby", "Moscita"));
                    ArtificialIntelligenceAccess.push(new Unit(-9155, -30201, "BrolleWorms", false, "Sandalia"));
                    ArtificialIntelligenceAccess.push(new Unit(-8265, -30756, "Ut", true, "Ickle"));
                    ArtificialIntelligenceAccess.push(new Unit(-6741, -31899, "Grewble", "baby", "Gluyka"));
                    ArtificialIntelligenceAccess.push(new Unit(-8380, -32059, "Ut", "baby", "Ickler"));
                    ArtificialIntelligenceAccess.push(new Unit(-9083, -32672, "Ut", false, "Ickluh"));
                    ArtificialIntelligenceAccess.push(new Unit(-10275, -32356, "BrolleWorms", false, "Flip-Flop"));
                    ArtificialIntelligenceAccess.push(new Unit(-9882, -31837, "BrolleWorms", false, "Chancla"));
                    ArtificialIntelligenceAccess.push(new Unit(-9103, -32300, "BrolleWorms", false, "High-Heels"));
                    ArtificialIntelligenceAccess.push(new Unit(-9271, -31727, "BrolleWorms", false, "Zapato de Tacón"));
                    ArtificialIntelligenceAccess.push(new Unit(-8359, -32655, "BrolleWorms", false, "Tacón"));
                    ArtificialIntelligenceAccess.push(new Unit(-11368, -32751, "SpittingMudFly", "baby", "Mosca Mosca"));
                    ArtificialIntelligenceAccess.push(new Unit(-12187, -32622, "SpittingMudFly", false, "Las Moscas"));
                    ArtificialIntelligenceAccess.push(new Unit(-11866, -32840, "Ut", "baby", "Icklem"));
                    ArtificialIntelligenceAccess.push(new Unit(-10470, -30354, "SpittingMudFly", "baby", "99er"));
                    ArtificialIntelligenceAccess.push(new Unit(-11487, -29952, "Ut", false, "Icklek"));
                    ArtificialIntelligenceAccess.push(new Unit(-10967, -28766, "SpittingMudFly", false, "Fly Fly"));
                    ArtificialIntelligenceAccess.push(new Unit(-6372, -31461, "BrolleWorms", false, "999er"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(-6385, -29752, "Ut", true, "Icky"));
                    ArtificialIntelligenceAccess.push(new Unit(-6187, -30102, "SpittingMudFly", "giant", "Lil Fly"));
                    ArtificialIntelligenceAccess.push(new Unit(-6548, -30629, "Grewble", false, "Gluck"));
                    ArtificialIntelligenceAccess.push(new Unit(-7718, -29738, "Grewble", true, "Glick"));
                    ArtificialIntelligenceAccess.push(new Unit(-7313, -28682, "BrolleWorms", false, "Slipper"));
                    ArtificialIntelligenceAccess.push(new Unit(-6850, -28821, "BrolleWorms", false, "Zapatilla"));
                    ArtificialIntelligenceAccess.push(new Unit(-6843, -28150, "BrolleWorms", false, "Boot"));
                    ArtificialIntelligenceAccess.push(new Unit(-7282, -27862, "Ut", false, "Ick"));
                    ArtificialIntelligenceAccess.push(new Unit(-6706, -27347, "SpittingMudFly", false, "The Fly"));
                    ArtificialIntelligenceAccess.push(new Unit(-6002, -27849, "Grewble", false, "Glon"));
                    ArtificialIntelligenceAccess.push(new Unit(-6843, -28150, "BrolleWorms", false, "Bota"));
                    ArtificialIntelligenceAccess.push(new Unit(-8192, -28544, "SpittingMudFly", true, "La Mosca"));
                    ArtificialIntelligenceAccess.push(new Unit(-8341, -27860, "SpittingMudFly", false, "A Fly"));
                    ArtificialIntelligenceAccess.push(new Unit(-8271, -27163, "Grewble", true, "Glilk"));
                    ArtificialIntelligenceAccess.push(new Unit(-7761, -26946, "Grewble", false, "Glolk"));
                    ArtificialIntelligenceAccess.push(new Unit(-8552, -26284, "Ut", "baby", "Ickick"));
                    ArtificialIntelligenceAccess.push(new Unit(-7366, -26352, "Ut", "baby", "Ickuh"));
                    ArtificialIntelligenceAccess.push(new Unit(-6914, -26993, "Ut", false, "Ickor"));
                    ArtificialIntelligenceAccess.push(new Unit(-8791, -26838, "Ut", "baby", "Icklii"));
                    ArtificialIntelligenceAccess.push(new Unit(-7199, -25952, "BrolleWorms", false, "Zapato"));
                    ArtificialIntelligenceAccess.push(new Unit(-6452, -26153, "BrolleWorms", false, "Shoe"));
                    ArtificialIntelligenceAccess.push(new Unit(-6784, -25361, "BrolleWorms", false, "Sandal"));
                    ArtificialIntelligenceAccess.push(new Unit(-9461, -27794, "BrolleWorms", false, "Huarache"));
                    ArtificialIntelligenceAccess.push(new Unit(-9021, -29168, "SpittingMudFly", "giant", "Una Mosca"));
                    ArtificialIntelligenceAccess.push(new Unit(-9415, -29669, "SpittingMudFly", false, "Moscita"));
                    ArtificialIntelligenceAccess.push(new Unit(-9155, -30201, "BrolleWorms", false, "Sandalia"));
                    ArtificialIntelligenceAccess.push(new Unit(-8265, -30756, "Ut", true, "Ickle"));
                    ArtificialIntelligenceAccess.push(new Unit(-6741, -31899, "Grewble", false, "Gluyka"));
                    ArtificialIntelligenceAccess.push(new Unit(-8380, -32059, "Ut", false, "Ickler"));
                    ArtificialIntelligenceAccess.push(new Unit(-9083, -32672, "Ut", "baby", "Ickluh"));
                    ArtificialIntelligenceAccess.push(new Unit(-10275, -32356, "BrolleWorms", false, "Flip-Flop"));
                    ArtificialIntelligenceAccess.push(new Unit(-9882, -31837, "BrolleWorms", false, "Chancla"));
                    ArtificialIntelligenceAccess.push(new Unit(-9103, -32300, "BrolleWorms", false, "High-Heels"));
                    ArtificialIntelligenceAccess.push(new Unit(-9271, -31727, "BrolleWorms", false, "Zapato de Tacón"));
                    ArtificialIntelligenceAccess.push(new Unit(-8359, -32655, "BrolleWorms", false, "Tacón"));
                    ArtificialIntelligenceAccess.push(new Unit(-11368, -32751, "SpittingMudFly", true, "Mosca Mosca"));
                    ArtificialIntelligenceAccess.push(new Unit(-12187, -32622, "SpittingMudFly", true, "Las Moscas"));
                    ArtificialIntelligenceAccess.push(new Unit(-11866, -32840, "Ut", false, "Icklem"));
                    ArtificialIntelligenceAccess.push(new Unit(-10470, -30354, "BrolleWorms", false, "777er"));
                    ArtificialIntelligenceAccess.push(new Unit(-11487, -29952, "Ut", "baby", "Icklek"));
                    ArtificialIntelligenceAccess.push(new Unit(-10967, -28766, "SpittingMudFly", "baby", "Fly Fly"));
                    ArtificialIntelligenceAccess.push(new Unit(-6372, -31461, "BrolleWorms", false, "55er"));
                }

                //Clay Deposits
                scenicList.push(new Scenery("clayDeposit", -7528, -27313, -5.2, 6));
                scenicList.push(new Scenery("clayDeposit", -9444, -26065, 3.06, 4));
                scenicList.push(new Scenery("clayDeposit", -9253, -28028, 0.25, 2));
                scenicList.push(new Scenery("clayDeposit", -11376, -31332, 5.99, 2));
                scenicList.push(new Scenery("clayDeposit", -7820, -30081, -2.4, 9));
                scenicList.push(new Scenery("clayDeposit", -9852, -31025, 4, 5));
                scenicList.push(new Scenery("clayDeposit", -10243, -32593, -1, 3));
                scenicList.push(new Scenery("clayDeposit", -11861, -32456, 2.46, 7));
                scenicList.push(new Scenery("clayDeposit", -6878, -25600, 3.5, 4));
                scenicList.push(new Scenery("clayDeposit", -6966, -31909, 2.2, 3));

                change = "s3e1";
            }
        }
        else if (region == "e2")
        {
            if (change != "e2")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                //Nelgref Himself
                if (uniqueChars.nelgrefLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Nelgref the Flayer")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-19124, 4998, "Soldier", false, "Nelgref the Flayer", {race: "Freynor", faction: "hostile", con: 12, speed: 2.7, outfit: ["skinAndBones", 4], weapon: ["rasper", [7, 3], 0, 15, 0.9], ranged: [false, "arrow", 9, 2100, 1, 7, 0, "none", 1.2], patrolStops: 0, patrolLoop: false, route:[[221 -750, 5517]]}));
                    }
                }
                //Nelgref's Pets
                if (quests.lostDeliveryPetsKilled < 7)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-19065, 5180, "Soldier", false, "Nelgref's Pet Bandit", {race: "Freynor", faction: "hostile", con: 2, speed: 0, outfit: ["blackBearLeatherArmour", 3.5], weapon: ["longbow", [7, 5], 0, 17, 1.5], ranged: [true, "steelArrow", 10, 2200, 2, 13, 0, "none", 1.65], patrolStops: 0, patrolLoop: true, route:[[3071, 314]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-19488, 4727, "Soldier", false, "Nelgref's Pet Bandit", {race: "Freynor", faction: "hostile", con: 3, speed: 0, outfit: ["blackBearLeatherArmour", 3.75], weapon: ["longbow", [7, 5], 0, 17, 1.5], ranged: [true, "arrow", 8, 2100, 1, 7, 0, "none", 2], patrolStops: 0, patrolLoop: true, route:[[3071, 314]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-19304, 4578, "Soldier", false, "Nelgref's Pet Bandit", {race: "Freynor", faction: "hostile", con: 4, speed: 0, outfit: ["blackBearLeatherArmour", 3.5], weapon: ["longbow", [7, 5], 0, 17, 1.5], ranged: [true, "arrow", 9, 2000, 1, 8, 0, "none", 1], patrolStops: 0, patrolLoop: true, route:[[3071, 314]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-18944, 4663, "Soldier", false, "Nelgref's Pet Bandit", {race: "Freynor", faction: "hostile", con: 4, speed: 0, outfit: ["blackBearLeatherArmour", 3.5], weapon: ["crossbow", [7, 5], 0, 17, 1.5], ranged: [true, "steelBolt", 11, 2250, 18, 40 /3, 0, "none", 7], patrolStops: 0, patrolLoop: true, route:[[3071, 314]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-19037, 4844, "Soldier", false, "Nelgref's Pet Bandit", {race: "Freynor", faction: "hostile", con: 7, speed: 2, outfit: ["blackBearLeatherArmour", 4], weapon: ["freydicSword", [7, 5], 0, 17, 1.5], ranged: [false, "steelBolt", 11, 2250, 18, 40 /3, 0, "none", 7], patrolStops: 0, patrolLoop: true, route:[[3071, 314]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-19102, 5055, "Soldier", false, "Nelgref's Pet Bandit", {race: "Freynor", faction: "hostile", con: 6, speed: 1.89, outfit: ["blackBearLeatherArmour", 4], weapon: ["freydicSword", [9, 4], 0, 17, 1.4], ranged: [false, "steelBolt", 11, 2250, 18, 40 /3, 0, "none", 7], patrolStops: 0, patrolLoop: true, route:[[3071, 314]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-18829, 4944, "Soldier", false, "Nelgref's Pet Bandit", {race: "Freynor", faction: "hostile", con: 5, speed: 1.95, outfit: ["blackBearLeatherArmour", 4.5], weapon: ["freydicSword", [8, 5], 0, 17, 1.65], ranged: [false, "steelBolt", 11, 2250, 18, 40 /3, 0, "none", 7], patrolStops: 0, patrolLoop: true, route:[[3071, 314]]}));
                }
                else if (uniqueChars.nelgrefLDS == false)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-19031, 5072, "Shehid", true, "shetop"));
                    ArtificialIntelligenceAccess.push(new Unit(-19209, 4955, "Shehid", true, "shetel"));
                    ArtificialIntelligenceAccess.push(new Unit(-19220, 4736, "Shehid", false, "shetlip"));
                    ArtificialIntelligenceAccess.push(new Unit(-19361, 4670, "Shehid", false, "shetlic"));
                    ArtificialIntelligenceAccess.push(new Unit(-19390, 4819, "Shehid", false, "shetlil"));
                    ArtificialIntelligenceAccess.push(new Unit(-19028, 4798, "Shehid", false, "shetlaf"));
                    ArtificialIntelligenceAccess.push(new Unit(-18892, 4652, "Shehid", true, "shetlint"));
                    ArtificialIntelligenceAccess.push(new Unit(-19029, 5211, "Shehid", false, "shetluf"));
                    ArtificialIntelligenceAccess.push(new Unit(-18844, 4864, "Shehid", false, "shetlif"));
                    scenicList.push(new Scenery("glinPlant", -19151 , 5065, 5, true));
                    scenicList.push(new Scenery("glinPlant", -19348 , 4690, 1, true));
                    scenicList.push(new Scenery("glinPlant", -19192 , 4937, -2.94, true));
                    scenicList.push(new Scenery("glinPlant", -19087 , 4935, 0, true));
                }

                //The Victims
                scenicList.push(new Scenery("skeleton", -19230, 5008, 5.12, 1.75));
                scenicList.push(new Scenery("skeleton", -19152, 4938, 0, 1.6));
                scenicList.push(new Scenery("skeleton", -19142, 4932, 3, 1));
                scenicList.push(new Scenery("skeleton", -19157, 4928, 1.5, 1.8));
                scenicList.push(new Scenery("skeleton", -19162, 4925, 6, 1.7));
                scenicList.push(new Scenery("skeleton", -19332, 4714, 4.6, 1.6));

                if (quests.lostDeliveryQuest != "complete")
                {
                    scenicList.push(new Scenery("skeleton", -19014, 1364, 2.1, 1.624));
                    scenicList.push(new Scenery("deadNaaprid", -18626, 1304, 3.4, 1.93));
                    scenicList.push(new Scenery("propWagon", -18822, 1253, -3.24, 1.75));
                }

                //Nelgref's Camp
                scenicList.push(new Scenery("tent", -18961, 5013, -1/4 * Math.PI, true));
                scenicList.push(new Scenery("tent", -19367, 5077, 1/4 * Math.PI, true));
                scenicList.push(new Scenery("tent", -19088, 4716, Math.PI, true));
                scenicList.push(new Scenery("tent", -19413, 4554, 1/2 * Math.PI, true));
                scenicList.push(new Scenery("tent", -19511, 4796, 0.875/2 * Math.PI, true));
                if (quests.lostDeliveryCrate == true)
                {
                    quests.lostDeliveryCrate = false;
                    worldItems.push([new Item("freydicSword", -18885, 4710), 1]);
                    worldItems.push([new Item("longbow", -18885, 4845), 1]);
                    worldItems.push([new Item("longbow", -18880, 4849), 1]);
                    worldItems.push([new Item("coins", -18890, 4865), 114]);
                    worldItems.push([new Item("arrow", -18924, 4835), 1]);
                    worldItems.push([new Item("arrow", -18923, 4837), 59]);
                    worldItems.push([new Item("arrow", -18923, 4839), 1]);
                    worldItems.push([new Item("arrow", -18921, 4840), 1]);
                    worldItems.push([new Item("steelBolt", -18924, 4835), 2]);
                    worldItems.push([new Item("steelBolt", -18923, 4837), 14]);
                    worldItems.push([new Item("steelBolt", -18923, 4839), 1]);
                    worldItems.push([new Item("steelBolt", -18922, 4840), 1]);
                    worldItems.push([new Item("crossbow", -18857, 4765), 1]);
                    worldItems.push([new Item("svehnsShipment", -18942, 4822), 1]);
                }

                //Animals in the forest
                ArtificialIntelligenceAccess.push(new Unit(-13935, 2270, "Grib", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-13805, 2514, "Grib", true, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-14035, 4389, "Grib", true, "Kab"));
                ArtificialIntelligenceAccess.push(new Unit(-14477, 1925, "Viper", false, "Slib"));
                ArtificialIntelligenceAccess.push(new Unit(-14087, 1359, "Lizard", true, "Lib"));
                ArtificialIntelligenceAccess.push(new Unit(-14854, 1081, "Lizard", false, "Liv"));
                ArtificialIntelligenceAccess.push(new Unit(-14501, 3283, "BlackBear", false, "Clib"));
                ArtificialIntelligenceAccess.push(new Unit(-14409, 5947, "BlackBear", true, "Clob"));
                ArtificialIntelligenceAccess.push(new Unit(-15119, 2314, "Varn", true, "Flib"));
                ArtificialIntelligenceAccess.push(new Unit(-15015, 2450, "Varn", true, "Flab"));
                ArtificialIntelligenceAccess.push(new Unit(-15423, 2581, "Varn", true, "Flob"));
                ArtificialIntelligenceAccess.push(new Unit(-15295, 2370, "Varn", false, "Fleeb"));
                ArtificialIntelligenceAccess.push(new Unit(-15517, 2396, "Varn", false, "Fliib"));
                ArtificialIntelligenceAccess.push(new Unit(-15335, 2212, "Varn", true, "Fleb"));
                ArtificialIntelligenceAccess.push(new Unit(-15138, 1770, "Varn", false, "Floob"));
                ArtificialIntelligenceAccess.push(new Unit(-17199, 1851, "Varn", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-13713, 5329, "Narthwarp", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-15646, 4550, "Narthwarp", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-15865, 4466, "Narthwarp", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-16109, 4842, "Narthwarp", false, "docile"));
                if (uniqueChars.nelgrefLDS == false)
                {
                    scenicList.push(new Scenery("ulgoyPlant", -16488, 3908, 4.9, 7));
                    ArtificialIntelligenceAccess.push(new Unit(-16473, 3885, "Ulgoy", "giant", "The Really Big Plant"));
                }
                else
                {
                    scenicList.push(new Scenery("ulgoyPlant", -16488, 3908, -1, 3.15));
                    ArtificialIntelligenceAccess.push(new Unit(-16478, 3902, "Ulgoy", true, "Biggy-Realz"));
                }
                ArtificialIntelligenceAccess.push(new Unit(-16247, 3330, "BlackBear", true, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-16497, 2348, "Grib", true, "Gral"));
                ArtificialIntelligenceAccess.push(new Unit(-16874, 2476, "Grib", true, "Grul"));
                ArtificialIntelligenceAccess.push(new Unit(-19305, 2966, "BlackBear", false, "Clibly"));
                if (Math.random() > 0.64)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-19573, 2028, "Viper", true, "Slizer"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(-19573, 2028, "Viper", false, "Slizer"));
                    ArtificialIntelligenceAccess.push(new Unit(-16259, -3313, "Viper", false, "Slipre"));
                    ArtificialIntelligenceAccess.push(new Unit(-15731, 5838, "Narthwarp", false, "Eklitora"));
                }
                ArtificialIntelligenceAccess.push(new Unit(-21387, 2488, "Grib", false, "Bilbo"));
                ArtificialIntelligenceAccess.push(new Unit(-21779, 2420, "Grib", true, "Frodo"));
                ArtificialIntelligenceAccess.push(new Unit(-21522, 2687, "Grib", true, "Samwise"));
                ArtificialIntelligenceAccess.push(new Unit(-22888, 2091, "Varn", true, "Flaib"));
                scenicList.push(new Scenery("ulgoyPlant", -22546, 4123, -3, 2.12));
                ArtificialIntelligenceAccess.push(new Unit(-22550, 4118, "Ulgoy", false, "Planter"));
                ArtificialIntelligenceAccess.push(new Unit(-20755, 3424, "BlackBear", false, "Clibord the Bear"));
                ArtificialIntelligenceAccess.push(new Unit(-21610, 5421, "Lizard", false, "Liva"));
                ArtificialIntelligenceAccess.push(new Unit(-21075, 4279, "Varn", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-20984, 4020, "Varn", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-18413, 6123, "BlackBear", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-17227, 5680, "Lizard", true, "Ligazo"));
                ArtificialIntelligenceAccess.push(new Unit(-15719, 6052, "Narthwarp", false, "Kabordo"));
                ArtificialIntelligenceAccess.push(new Unit(-16052, 6015, "Narthwarp", false, "Eklit"));
                ArtificialIntelligenceAccess.push(new Unit(-14353, 3844, "Shehid", true, "sheta"));
                ArtificialIntelligenceAccess.push(new Unit(-17202, 1305, "Lizard", true, "Luc"));
                ArtificialIntelligenceAccess.push(new Unit(-16084, 1398, "Lizard", false, "Luv"));
                scenicList.push(new Scenery("beeHive", -15375 , -2055, 4.5, true));
                scenicList.push(new Scenery("beeHive", -19953 , -2708, -3.8, true));
                ArtificialIntelligenceAccess.push(new Unit(-17095, -2815, "Narthwarp", true, "Kettoltep"));
                ArtificialIntelligenceAccess.push(new Unit(-17079, -3085, "Narthwarp", false, "Kettol"));
                ArtificialIntelligenceAccess.push(new Unit(-16980, -3120, "Narthwarp", false, "Teptep"));
                ArtificialIntelligenceAccess.push(new Unit(-17672, -3085, "Narthwarp", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-17522, -2898, "Narthwarp", false, "Kettep"));
                ArtificialIntelligenceAccess.push(new Unit(-17424, -2814, "Narthwarp", false, "Toltep"));
                ArtificialIntelligenceAccess.push(new Unit(-16882, -2909, "Narthwarp", false, "Koltep"));
                ArtificialIntelligenceAccess.push(new Unit(-16593, -3099, "Lizard", true, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-16833, -3200, "Lizard", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-16743, -3522, "Lizard", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-16181, -2238, "Shehid", true, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-16327, -2176, "Shehid", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-16161, -2091, "Shehid", false, "Scrud"));
                ArtificialIntelligenceAccess.push(new Unit(-15474, -1603, "BlackBear", true, "Juvitude"));
                ArtificialIntelligenceAccess.push(new Unit(-15906, -1761, "BlackBear", true, "Juvily"));
                ArtificialIntelligenceAccess.push(new Unit(-14651, -1987, "BlackBear", false, "Juvol"));
                ArtificialIntelligenceAccess.push(new Unit(-14275, -2508, "Lizard", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-14922, -2996, "Varn", false, "Tib"));
                ArtificialIntelligenceAccess.push(new Unit(-15003, -3225, "Varn", false, "Tab"));
                ArtificialIntelligenceAccess.push(new Unit(-15621, -2601, "Varn", true, "Tob"));
                ArtificialIntelligenceAccess.push(new Unit(-13547, -3147, "Grib", true, "Todder"));
                ArtificialIntelligenceAccess.push(new Unit(-14165, -1195, "Lizard", true, "docile"));
                scenicList.push(new Scenery("ulgoyPlant", -14555, 441, -1, 3.25));
                ArtificialIntelligenceAccess.push(new Unit(-14546, 437, "Ulgoy", true, "Planted"));
                ArtificialIntelligenceAccess.push(new Unit(-15058, -47, "BlackBear", false, "Plant Food"));
                ArtificialIntelligenceAccess.push(new Unit(-14311, -383, "Varn", true, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-15181, -576, "Lizard", true, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-18661, 424, "BlackBear", false, "Berry Buffer"));
                ArtificialIntelligenceAccess.push(new Unit(-16843, -1317, "Narthwarp", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-14871, -912, "Varn", true, "docile"));
                if (Math.random() > 0.74)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-17651, -2072, "Narthwarp", true, "Kulpatelep"));
                    ArtificialIntelligenceAccess.push(new Unit(-18089, -2704, "Narthwarp", false, "Telp"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(-17651, -2072, "Narthwarp", false, "Kulpa"));
                    ArtificialIntelligenceAccess.push(new Unit(-17449, -2093, "Narthwarp", false, "Telep"));
                    ArtificialIntelligenceAccess.push(new Unit(-17798, -2281, "Narthwarp", false, "Leplep"));
                    ArtificialIntelligenceAccess.push(new Unit(-17836, -2802, "Narthwarp", false, "Telp"));
                    ArtificialIntelligenceAccess.push(new Unit(-18278, -2802, "Narthwarp", false, "Tepla"));
                    ArtificialIntelligenceAccess.push(new Unit(-19849, -3181, "BlackBear", false, "Juvelina"));
                }
                ArtificialIntelligenceAccess.push(new Unit(-19272, -2795, "BlackBear", true, "Juvelin"));
                ArtificialIntelligenceAccess.push(new Unit(-20060, -2796, "Lizard", true, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-20511, -2924, "Grib", true, "Tedder"));
                ArtificialIntelligenceAccess.push(new Unit(-20619, -2502, "Grib", false, "Tedrit"));
                ArtificialIntelligenceAccess.push(new Unit(-18988, -2543, "Viper", false, "Slick-scale"));
                if (Math.random() > 0.82)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-18630, -2335, "Viper", true, "Slick-skin"));
                    ArtificialIntelligenceAccess.push(new Unit(-16830, -64, "BlackBear", false, "Juvelen"));
                    ArtificialIntelligenceAccess.push(new Unit(-21241, 638, "BlackBear", false, "Juvalic"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(-18630, -2335, "Viper", false, "Slick-skin"));
                    ArtificialIntelligenceAccess.push(new Unit(-16830, -64, "BlackBear", true, "Juvelen"));
                    ArtificialIntelligenceAccess.push(new Unit(-21241, 638, "Lizard", false, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(-21031, 477, "Lizard", false, "docile"));
                }
                ArtificialIntelligenceAccess.push(new Unit(-17137, -593, "BlackBear", false, "Juvel"));
                ArtificialIntelligenceAccess.push(new Unit(-17886, -1025, "Lizard", false, "lizter"));
                ArtificialIntelligenceAccess.push(new Unit(-18023, -1131, "Lizard", false, "liztel"));
                ArtificialIntelligenceAccess.push(new Unit(-17567, -1193, "Lizard", false, "lizt"));
                ArtificialIntelligenceAccess.push(new Unit(-16960, 534, "Shehid", false, "Glup"));
                ArtificialIntelligenceAccess.push(new Unit(-17007, 150, "Shehid", false, "Glip"));
                ArtificialIntelligenceAccess.push(new Unit(-14576, 812, "Shehid", true, "Glap"));
                ArtificialIntelligenceAccess.push(new Unit(-15164, 722, "Shehid", false, "Glep"));
                ArtificialIntelligenceAccess.push(new Unit(-15561, 844, "Shehid", true, "Glop"));
                ArtificialIntelligenceAccess.push(new Unit(-19052, -2302, "Shehid", false, "Gliip"));
                ArtificialIntelligenceAccess.push(new Unit(-20743, -2220, "Shehid", false, "Gleep"));
                ArtificialIntelligenceAccess.push(new Unit(-20938, -1931, "Shehid", false, "Gleap"));
                ArtificialIntelligenceAccess.push(new Unit(-20776, -1903, "Varn", true, "docdoc"));
                ArtificialIntelligenceAccess.push(new Unit(-20580, -1805, "Varn", true, "docedoc"));
                ArtificialIntelligenceAccess.push(new Unit(-20254, -1786, "Varn", true, "doc"));
                ArtificialIntelligenceAccess.push(new Unit(-20446, -1736, "Varn", true, "dock"));
                ArtificialIntelligenceAccess.push(new Unit(-20558, -1394, "Varn", true, "doce"));
                ArtificialIntelligenceAccess.push(new Unit(-20809, -1594, "Varn", false, "dewey"));
                ArtificialIntelligenceAccess.push(new Unit(-20745, -1272, "Varn", false, "scrappy"));
                ArtificialIntelligenceAccess.push(new Unit(-21055, -724, "Narthwarp", false, "Kulta"));
                ArtificialIntelligenceAccess.push(new Unit(-20815, -833, "Narthwarp", false, "Tultet"));
                ArtificialIntelligenceAccess.push(new Unit(-21202, 974, "Shehid", false, "Glupt"));
                ArtificialIntelligenceAccess.push(new Unit(-22587, 760, "Grib", true, "Talgtits"));
                ArtificialIntelligenceAccess.push(new Unit(-22665, 465, "Shehid", false, "Glipt"));
                ArtificialIntelligenceAccess.push(new Unit(-22492, -2627, "Shehid", true, "Glept"));
                ArtificialIntelligenceAccess.push(new Unit(-22330, -2847, "Shehid", false, "Glapt"));
                ArtificialIntelligenceAccess.push(new Unit(-21940, -2697, "Shehid", false, "Glopt"));
                ArtificialIntelligenceAccess.push(new Unit(-23064, -3078, "Varn", false, "B-Dew"));
                ArtificialIntelligenceAccess.push(new Unit(-22850, -1810, "Shehid", false, "Gleept"));
                ArtificialIntelligenceAccess.push(new Unit(-22400, -1305, "Lizard", false, "liztil"));
                ArtificialIntelligenceAccess.push(new Unit(-18456, 3006, "Shehid", false, "Glilpt"));
                ArtificialIntelligenceAccess.push(new Unit(-17556, 3418, "Shehid", true, "Glulpt"));
                ArtificialIntelligenceAccess.push(new Unit(-14218, 4947, "Shehid", false, "Glolpt"));
                ArtificialIntelligenceAccess.push(new Unit(-16711, 5327, "Shehid", false, "Glelpt"));
                ArtificialIntelligenceAccess.push(new Unit(-21770, 5635, "Shehid", false, "Glelpt"));
                ArtificialIntelligenceAccess.push(new Unit(-14530, -669, "Shehid", false, "Gloolpt"));
                ArtificialIntelligenceAccess.push(new Unit(-22718, -369, "Lizard", false, "docile"));
                if (Math.random() > 0.80)
                {
                    if (Math.random() > 5)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-21429, 1215, "Viper", false, "Dry-scale"));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-21429, 1215, "Shehid", true, "Glum"));
                    }
                }
                else
                {
                    if (Math.random() > 6.5)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-21429, 1215, "Shehid", false, "Glim"));
                    }
                }
                //Build Scenery

                //trees in the wuntol woods.
                scenicList.push(new Scenery("pineTree", -13696, 1772, 1.3, true));
                scenicList.push(new Scenery("pineTree", -14036, 1575, 2.25, true));
                scenicList.push(new Scenery("pineTree", -14255, 1933, -5.3, true));
                scenicList.push(new Scenery("pineTree", -14548, 1709, -4.25, true));
                scenicList.push(new Scenery("pineTree", -13749, 2072, 3, true));
                scenicList.push(new Scenery("pineTree", -13699, 707, -1.3, true));
                scenicList.push(new Scenery("pineTree", -13735, 1127, -2.25, true));
                scenicList.push(new Scenery("pineTree", -14119, 917, 5.4, true));
                scenicList.push(new Scenery("pineTree", -13447, 104, 4.25, true));
                scenicList.push(new Scenery("pineTree", -14194, 574, -3.5, true));
                scenicList.push(new Scenery("pineTree", -13709, -299, 4.6, true));
                scenicList.push(new Scenery("pineTree", -13857, 269, 2, true));
                scenicList.push(new Scenery("pineTree", -14349, 210, 2.95, true));
                scenicList.push(new Scenery("pineTree", -13966, -29, -6, true));
                scenicList.push(new Scenery("pineTree", -14213, -537, -5, true));
                scenicList.push(new Scenery("pineTree", -13696, -764, 3.7, true));
                scenicList.push(new Scenery("pineTree", -14226, -958, -2, true));
                scenicList.push(new Scenery("pineTree", -13429, -1039, -2.75, true));
                scenicList.push(new Scenery("pineTree", -13757, -1282, 6.1, true));
                scenicList.push(new Scenery("pineTree", -14638, 1014, 4.85, true));
                scenicList.push(new Scenery("pineTree", -14088, -1655, -4.2, true));
                scenicList.push(new Scenery("pineTree", -13524, -1559, 3.8, true));
                scenicList.push(new Scenery("pineTree", -13681, -1845, 1.4, true));
                scenicList.push(new Scenery("pineTree", -14604, 718, 1.68, true));
                scenicList.push(new Scenery("pineTree", -14346, -203, 5.79, true));
                scenicList.push(new Scenery("pineTree", -14298, -1385, -5.34, true));
                scenicList.push(new Scenery("pineTree", -13604, -2246, -2.75, true));
                scenicList.push(new Scenery("pineTree", -14054, -2088, 6.1, true));
                scenicList.push(new Scenery("pineTree", -14422, -1919, -4.85, true));
                scenicList.push(new Scenery("pineTree", -14636, -1141, -6.2, true));
                scenicList.push(new Scenery("pineTree", -14750, -1668, -3.8, true));
                scenicList.push(new Scenery("pineTree", -14003, -2427, -1.4, true));
                scenicList.push(new Scenery("pineTree", -13513, -2573, -1.68, true));
                scenicList.push(new Scenery("pineTree", -13401, -2965, -5.79, true));
                scenicList.push(new Scenery("pineTree", -13693, -3272, 5.34, true));
                scenicList.push(new Scenery("pineTree", -13853, -3600, 2.4, true));
                scenicList.push(new Scenery("pineTree", -13898, -2842, -2.25, true));
                scenicList.push(new Scenery("pineTree", -14160, -3433, 5.6, true));
                scenicList.push(new Scenery("pineTree", -14274, -3142, -4.4, true));
                scenicList.push(new Scenery("pineTree", -14489, -2910, 2.55, true));
                scenicList.push(new Scenery("pineTree", -14605, -3349, -1.3, true));
                scenicList.push(new Scenery("pineTree", -14225, -2703, -2.25, true));
                scenicList.push(new Scenery("pineTree", -14570, -2559, -5.9, true));
                scenicList.push(new Scenery("pineTree", -14744, -2267, 4.25, true));
                scenicList.push(new Scenery("pineTree", -14315, -2276, -3.5, true));
                scenicList.push(new Scenery("pineTree", -14899, -3219, 4.6, true));
                scenicList.push(new Scenery("pineTree", -14827, -3578, 2.678, true));
                scenicList.push(new Scenery("pineTree", -14623, -727, 2.95, true));
                scenicList.push(new Scenery("pineTree", -14891, -334, -6, true));
                scenicList.push(new Scenery("pineTree", -14685, 31, -5, true));
                scenicList.push(new Scenery("pineTree", -14837, 405, 3.7, true));
                scenicList.push(new Scenery("pineTree", -14850, 1520, -2, true));
                scenicList.push(new Scenery("pineTree", -14699, 2005, -2.75, true));
                scenicList.push(new Scenery("pineTree", -13700, 2375, 6.6, true));
                scenicList.push(new Scenery("pineTree", -13454, 2883, 4.85, true));
                scenicList.push(new Scenery("pineTree", -13835, 2716, -4.2, true));
                scenicList.push(new Scenery("pineTree", -14187, 2273, 3.8, true));
                scenicList.push(new Scenery("pineTree", -14702, 2454, 1.4, true));
                scenicList.push(new Scenery("pineTree", -14278, 2555, -1.9, true));
                scenicList.push(new Scenery("pineTree", -14550, 2857, 5.82, true));
                scenicList.push(new Scenery("pineTree", -14060, 3070, 8.9, true));
                scenicList.push(new Scenery("pineTree", -14775, 3265, -3.75, true));
                scenicList.push(new Scenery("pineTree", -13615, 3272, 6.25, true));
                scenicList.push(new Scenery("pineTree", -14006, 3491, 4.45, true));
                scenicList.push(new Scenery("pineTree", -13382, 3558, -6.77, true));
                scenicList.push(new Scenery("pineTree", -13811, 3791, -3.8, true));
                scenicList.push(new Scenery("pineTree", -14545, 3577, -2.1, true));
                scenicList.push(new Scenery("pineTree", -14751, 4028, -1.68, true));
                scenicList.push(new Scenery("pineTree", -14245, 3877, -5.36, true));
                scenicList.push(new Scenery("pineTree", -14299, 4240, 6, true));
                scenicList.push(new Scenery("pineTree", -13935, 4112, -1.5, true));
                scenicList.push(new Scenery("pineTree", -13455, 4015, 1.5, true));
                scenicList.push(new Scenery("pineTree", -14828, 4400, 3.5, true));
                scenicList.push(new Scenery("pineTree", -13638, 4478, -7, true));
                scenicList.push(new Scenery("pineTree", -13579, 4760, 4.8, true));
                scenicList.push(new Scenery("pineTree", -14176, 4636, -4.15, true));
                scenicList.push(new Scenery("pineTree", -14636, 4744, 5, true));
                scenicList.push(new Scenery("pineTree", -13902, 5082, -2.64, true));
                scenicList.push(new Scenery("pineTree", -13402, 5321, 6.64, true));
                scenicList.push(new Scenery("pineTree", -13541, 5707, 0, true));
                scenicList.push(new Scenery("pineTree", -14000, 5467, 24, true));
                scenicList.push(new Scenery("pineTree", -14382, 5058, -1, true));
                scenicList.push(new Scenery("pineTree", -14904, 4994, -3.14, true));
                scenicList.push(new Scenery("pineTree", -14644, 5409, 4.326, true));
                scenicList.push(new Scenery("pineTree", -13707, 6029, 0.2, true));
                scenicList.push(new Scenery("pineTree", -14063, 6249, -1.81, true));
                scenicList.push(new Scenery("pineTree", -13699, 6445, 8.92, true));
                scenicList.push(new Scenery("pineTree", -14144, 5820, 3.14, true));
                scenicList.push(new Scenery("pineTree", -14623, 5700, -4.326, true));
                scenicList.push(new Scenery("pineTree", -14450, 6526, 2.7, true));
                scenicList.push(new Scenery("pineTree", -14642, 6116, 5.82, true));
                scenicList.push(new Scenery("pineTree", -14893, 6438, 0.726, true));
                scenicList.push(new Scenery("pineTree", -15628, 1611, 1.3, true));
                scenicList.push(new Scenery("pineTree", -15344, 1992, 2.25, true));
                scenicList.push(new Scenery("pineTree", -15190, 2889, -5.3, true));
                scenicList.push(new Scenery("pineTree", -15615, 3098, -4.25, true));
                scenicList.push(new Scenery("pineTree", -15241, 3679, 3, true));
                scenicList.push(new Scenery("pineTree", -15469, 2507, -1.3, true));
                scenicList.push(new Scenery("pineTree", -16320, 1764, -2.25, true));
                scenicList.push(new Scenery("pineTree", -15943, 2235, 5.4, true));
                scenicList.push(new Scenery("pineTree", -16085, 2692, 4.25, true));
                scenicList.push(new Scenery("pineTree", -16512, 3569, -3.5, true));
                scenicList.push(new Scenery("pineTree", -15498, 4189, 4.6, true));
                scenicList.push(new Scenery("pineTree", -15242, 4637, 2, true));
                scenicList.push(new Scenery("pineTree", -15361, 5314, 2.95, true));
                scenicList.push(new Scenery("pineTree", -15203, 5851, -6, true));
                scenicList.push(new Scenery("pineTree", -15465, 6213, -5, true));
                scenicList.push(new Scenery("pineTree", -16035, 6526, 3.7, true));
                scenicList.push(new Scenery("pineTree", -16141, 6034, -2, true));
                scenicList.push(new Scenery("pineTree", -15757, 5754, -2.75, true));
                scenicList.push(new Scenery("pineTree", -15901, 4924, 6.1, true));
                scenicList.push(new Scenery("pineTree", -16093, 4488, 4.85, true));
                scenicList.push(new Scenery("pineTree", -16098, 3890, -4.2, true));
                scenicList.push(new Scenery("pineTree", -15749, 3541, 3.8, true));
                scenicList.push(new Scenery("pineTree", -16300, 2986, 1.4, true));
                scenicList.push(new Scenery("pineTree", -16861, 1612, 1.68, true));
                scenicList.push(new Scenery("pineTree", -16864, 2094, 5.79, true));
                scenicList.push(new Scenery("pineTree", -16757, 2600, -5.34, true));
                scenicList.push(new Scenery("pineTree", -16849, 3207, -2.75, true));
                scenicList.push(new Scenery("pineTree", -17408, 2504, 6.1, true));
                scenicList.push(new Scenery("pineTree", -17372, 2912, -4.85, true));
                scenicList.push(new Scenery("pineTree", -16578, 4340, -6.2, true));
                scenicList.push(new Scenery("pineTree", -16868, 4013, -3.8, true));
                scenicList.push(new Scenery("pineTree", -17472, 3463, -1.4, true));
                scenicList.push(new Scenery("pineTree", -16269, 5517, -1.68, true));
                scenicList.push(new Scenery("pineTree", -16404, 5215, -5.79, true));
                scenicList.push(new Scenery("pineTree", -16900, 4847, 5.34, true));
                scenicList.push(new Scenery("pineTree", -17335, 5020, 2.4, true));
                scenicList.push(new Scenery("pineTree", -17027, 5461, -2.25, true));
                scenicList.push(new Scenery("pineTree", -16899, 5902, 5.6, true));
                scenicList.push(new Scenery("pineTree", -16640, 6412, -4.4, true));
                scenicList.push(new Scenery("pineTree", -17292, 6300, 2.55, true));
                scenicList.push(new Scenery("pineTree", -17573, 5935, -1.3, true));
                scenicList.push(new Scenery("pineTree", -17567, 5488, -2.25, true));
                scenicList.push(new Scenery("pineTree", -18078, 5167, -5.9, true));
                scenicList.push(new Scenery("pineTree", -18066, 6193, 4.25, true));
                scenicList.push(new Scenery("pineTree", -18063, 5832, -3.5, true));
                scenicList.push(new Scenery("pineTree", -18476, 5510, 4.6, true));
                scenicList.push(new Scenery("pineTree", -17723, 4700, 2.678, true));
                scenicList.push(new Scenery("pineTree", -17409, 4286, 2.95, true));
                scenicList.push(new Scenery("pineTree", -18154, 3967, -6, true));
                scenicList.push(new Scenery("pineTree", -18089, 3548, -5, true));
                scenicList.push(new Scenery("pineTree", -18045, 2677, 3.7, true));
                scenicList.push(new Scenery("pineTree", -17417, 1513, -2, true));
                scenicList.push(new Scenery("pineTree", -17501, 1941, -2.75, true));
                scenicList.push(new Scenery("pineTree", -18204, 2160, 6.6, true));
                scenicList.push(new Scenery("pineTree", -17837, 3063, 4.85, true));
                scenicList.push(new Scenery("pineTree", -18068, 1665, -4.2, true));
                scenicList.push(new Scenery("pineTree", -19271, 5223, 3.8, true));
                scenicList.push(new Scenery("pineTree", -18871, 5094, 1.4, true));
                scenicList.push(new Scenery("pineTree", -18813, 4792, -1.9, true));
                scenicList.push(new Scenery("pineTree", -19098, 4599, 5.82, true));
                scenicList.push(new Scenery("pineTree", -19543, 4574, 8.9, true));
                scenicList.push(new Scenery("pineTree", -19433, 4942, 0, true));
                scenicList.push(new Scenery("pineTree", -18354, 4916, 6.25, true));
                scenicList.push(new Scenery("pineTree", -17924, 4397, 4.45, true));
                scenicList.push(new Scenery("pineTree", -17583, 3765, -6.77, true));
                scenicList.push(new Scenery("pineTree", -17091, 3684, -3.8, true));
                scenicList.push(new Scenery("pineTree", -18492, 4564, -2.1, true));
                scenicList.push(new Scenery("pineTree", -18851, 4176, -1.68, true));
                scenicList.push(new Scenery("pineTree", -18639, 1603, -5.36, true));
                scenicList.push(new Scenery("pineTree", -18441, 1910, 6, true));
                scenicList.push(new Scenery("pineTree", -18706, 3761, -1.5, true));
                scenicList.push(new Scenery("pineTree", -18544, 2952, 1.5, true));
                scenicList.push(new Scenery("pineTree", -18653, 2522, 3.5, true));
                scenicList.push(new Scenery("pineTree", -18919, 2081, -7.5, true));
                scenicList.push(new Scenery("pineTree", -19315, 1774, 4.8, true));
                scenicList.push(new Scenery("pineTree", -19719, 1517, -4.15, true));
                scenicList.push(new Scenery("pineTree", -19914, 1983, 5, true));
                scenicList.push(new Scenery("pineTree", -19293, 2219, -2.64, true));
                scenicList.push(new Scenery("pineTree", -19081, 2835, 6.64, true));
                scenicList.push(new Scenery("pineTree", -18500, 3371, 0, true));
                scenicList.push(new Scenery("pineTree", -19132, 3300, 23.3, true));
                scenicList.push(new Scenery("pineTree", -19480, 2548, -1, true));
                scenicList.push(new Scenery("pineTree", -19696, 3059, -3.46, true));
                scenicList.push(new Scenery("pineTree", -20199, 1676, 4.637, true));
                scenicList.push(new Scenery("pineTree", -20577, 1620, 0.2, true));
                scenicList.push(new Scenery("pineTree", -20402, 2215, -1.81, true));
                scenicList.push(new Scenery("pineTree", -19785, 2312, 8.92, true));
                scenicList.push(new Scenery("pineTree", -20302, 2697, 3.14, true));
                scenicList.push(new Scenery("pineTree", -18697, 5892, -4.326, true));
                scenicList.push(new Scenery("pineTree", -18660, 6413, 2.7, true));
                scenicList.push(new Scenery("pineTree", -19173, 6128, 5.82, true));
                scenicList.push(new Scenery("pineTree", -18934, 3576, 0.726, true));
                scenicList.push(new Scenery("pineTree", -19412, 5677, -2, true));
                scenicList.push(new Scenery("pineTree", -19471, 4118, 2.25, true));
                scenicList.push(new Scenery("pineTree", -19417, 3763, -5.5, true));
                scenicList.push(new Scenery("pineTree", -19814, 3479, -4.4, true));
                scenicList.push(new Scenery("pineTree", -20462, 3144, 3, true));
                scenicList.push(new Scenery("pineTree", -20954, 2391, -1.3, true));
                scenicList.push(new Scenery("pineTree", -20952, 1992, -2.67, true));
                scenicList.push(new Scenery("pineTree", -21203, 1680, 5.4, true));
                scenicList.push(new Scenery("pineTree", -21683, 1554, 4.25, true));
                scenicList.push(new Scenery("pineTree", -22198, 1638, -3.5, true));
                scenicList.push(new Scenery("pineTree", -22848, 1769, 4.6, true));
                scenicList.push(new Scenery("pineTree", -23443, 1639, 2, true));
                scenicList.push(new Scenery("pineTree", -23265, 2104, 2.95, true));
                scenicList.push(new Scenery("pineTree", -23590, 2527, -6.2, true));
                scenicList.push(new Scenery("pineTree", -22965, 2502, -4.8, true));
                scenicList.push(new Scenery("pineTree", -22529, 2257, 1.7, true));
                scenicList.push(new Scenery("pineTree", -22034, 2058, -3, true));
                scenicList.push(new Scenery("pineTree", -21587, 1938, -2.75, true));
                scenicList.push(new Scenery("pineTree", -21503, 2293, 6.1, true));
                scenicList.push(new Scenery("pineTree", -21065, 2911, 4.85, true));
                scenicList.push(new Scenery("pineTree", -21982, 2543, -4.2, true));
                scenicList.push(new Scenery("pineTree", -22548, 2847, 4.8, true));
                scenicList.push(new Scenery("pineTree", -23254, 2962, 1.4, true));
                scenicList.push(new Scenery("pineTree", -21161, 3398, 2.68, true));
                scenicList.push(new Scenery("pineTree", -20274, 3694, 5.79, true));
                scenicList.push(new Scenery("pineTree", -20851, 3742, -6.34, true));
                scenicList.push(new Scenery("pineTree", -21719, 3688, -3.75, true));
                scenicList.push(new Scenery("pineTree", -21789, 2995, 6.1, true));
                scenicList.push(new Scenery("pineTree", -23551, 3569, -4.85, true));
                scenicList.push(new Scenery("pineTree", -22873, 3300, -6.2, true));
                scenicList.push(new Scenery("pineTree", -23363, 4039, -3.8, true));
                scenicList.push(new Scenery("pineTree", -23458, 4367, -1.4, true));
                scenicList.push(new Scenery("pineTree", -22987, 4643, -1.68, true));
                scenicList.push(new Scenery("pineTree", -23456, 4963, -5.79, true));
                scenicList.push(new Scenery("pineTree", -23592, 5367, 5.34, true));
                scenicList.push(new Scenery("pineTree", -23371, 5680, 2.4, true));
                scenicList.push(new Scenery("pineTree", -23153, 6151, -2.25, true));
                scenicList.push(new Scenery("pineTree", -23518, 6494, 5.6, true));
                scenicList.push(new Scenery("pineTree", -22809, -6432, -4.4, true));
                scenicList.push(new Scenery("pineTree", -16381, 4806, -2.95, true));
                scenicList.push(new Scenery("pineTree", -22013, 3355, 6.2, true));
                scenicList.push(new Scenery("pineTree", -22373, 3615, 4.1, true));
                scenicList.push(new Scenery("pineTree", -22906, 3756, -1.7, true));
                scenicList.push(new Scenery("pineTree", -20111, 4179, 3, true));
                scenicList.push(new Scenery("pineTree", -19838, 3870, 2.75, true));
                scenicList.push(new Scenery("pineTree", -20736, 4221, -6.1, true));
                scenicList.push(new Scenery("pineTree", -21323, 4021, -4.85, true));
                scenicList.push(new Scenery("pineTree", -20033, 4569, 4.2, true));
                scenicList.push(new Scenery("pineTree", -19915, 4909, -4.8, true));
                scenicList.push(new Scenery("pineTree", -20402, 4822, -1.4, true));
                scenicList.push(new Scenery("pineTree", -20422, 4481, -2.68, true));
                scenicList.push(new Scenery("pineTree", -18960, 5557, -5.79, true));
                scenicList.push(new Scenery("pineTree", -19737, 5205, 6.34, true));
                scenicList.push(new Scenery("pineTree", -19925, 5523, 3.75, true));
                scenicList.push(new Scenery("pineTree", -19708, 6434, -6.1, true));
                scenicList.push(new Scenery("pineTree", -19623, 6020, 4.85, true));
                scenicList.push(new Scenery("pineTree", -20206, 6182, 6.2, true));
                scenicList.push(new Scenery("pineTree", -20078, 5835, 3.8, true));
                scenicList.push(new Scenery("pineTree", -20358, 5210, 1.4, true));
                scenicList.push(new Scenery("pineTree", -21859, 4232, 1.68, true));
                scenicList.push(new Scenery("pineTree", -22259, 4058, 5.79, true));
                scenicList.push(new Scenery("pineTree", -22843, 4133, -5.34, true));
                scenicList.push(new Scenery("pineTree", -22906, 5194, -2.4, true));
                scenicList.push(new Scenery("pineTree", -22347, 4442, 2.25, true));
                scenicList.push(new Scenery("pineTree", -21285, 4514, -5.6, true));
                scenicList.push(new Scenery("pineTree", -20887, 4575, 3.8, true));
                scenicList.push(new Scenery("pineTree", -20993, 5001, 1.5, true));
                scenicList.push(new Scenery("pineTree", -21859, 4778, -1.72, true));
                scenicList.push(new Scenery("pineTree", -21489, 5020, 5.9, true));
                scenicList.push(new Scenery("pineTree", -20763, 5526, 5.5, true));
                scenicList.push(new Scenery("pineTree", -22641, 6364, -2.85, true));
                scenicList.push(new Scenery("pineTree", -22659, 5806, 3.2, true));
                scenicList.push(new Scenery("pineTree", -20654, 5920, -5.79, true));
                scenicList.push(new Scenery("pineTree", -20691, 6455, 3, true));
                scenicList.push(new Scenery("pineTree", -21207, 6173, -1.3, true));
                scenicList.push(new Scenery("pineTree", -21382, 5754, -2.25, true));
                scenicList.push(new Scenery("pineTree", -21300, 5423, 5.4, true));
                scenicList.push(new Scenery("pineTree", -21972, 5332, 4.25, true));
                scenicList.push(new Scenery("pineTree", -22316, 5071, -3.5, true));
                scenicList.push(new Scenery("pineTree", -21902, 5673, 4.6, true));
                scenicList.push(new Scenery("pineTree", -22422, 5411, 2, true));
                scenicList.push(new Scenery("pineTree", -22324, 6086, 2.95, true));
                scenicList.push(new Scenery("pineTree", -21735, 5972, -6, true));
                scenicList.push(new Scenery("pineTree", -21914, 6486, -3.75, true));
                scenicList.push(new Scenery("pineTree", -21454, 6550, 1, true));
                scenicList.push(new Scenery("pineTree", -15523, -3446, 1.7, true));
                scenicList.push(new Scenery("pineTree", -15477, -2936, -3, true));
                scenicList.push(new Scenery("pineTree", -15047, -2829, -2.75, true));
                scenicList.push(new Scenery("pineTree", -15291, -2535, 6.1, true));
                scenicList.push(new Scenery("pineTree", -15961, -3196, 4.85, true));
                scenicList.push(new Scenery("pineTree", -16104, -3584, -4.2, true));
                scenicList.push(new Scenery("pineTree", -16551, -3362, 4.8, true));
                scenicList.push(new Scenery("pineTree", -16988, -3495, 0.4, true));
                scenicList.push(new Scenery("pineTree", -17527, -3290, 2.9, true));
                scenicList.push(new Scenery("pineTree", -17857, -3467, -5.4, true));
                scenicList.push(new Scenery("pineTree", -17041, -3173, 6.4, true));
                scenicList.push(new Scenery("pineTree", -16385, -3044, -3.75, true));
                scenicList.push(new Scenery("pineTree", -16764, -2891, 5.6, true));
                scenicList.push(new Scenery("pineTree", -18357, -3323, -4.85, true));
                scenicList.push(new Scenery("pineTree", -18771, -3552, -6.2, true));
                scenicList.push(new Scenery("pineTree", -19190, -3559, -3.8, true));
                scenicList.push(new Scenery("pineTree", -19585, -3316, -1.4, true));
                scenicList.push(new Scenery("pineTree", -19997, -3500, -1.68, true));
                scenicList.push(new Scenery("pineTree", -20458, -3171, -5.79, true));
                scenicList.push(new Scenery("pineTree", -20633, -3579, 5.34, true));
                scenicList.push(new Scenery("pineTree", -20843, -3241, -2.25, true));
                scenicList.push(new Scenery("pineTree", -21051, -3468, 2.4, true));
                scenicList.push(new Scenery("pineTree", -21493, -3139, 5.6, true));
                scenicList.push(new Scenery("pineTree", -21542, -3563, -4.4, true));
                scenicList.push(new Scenery("pineTree", -21973, -3329, -2.95, true));
                scenicList.push(new Scenery("pineTree", -22451, -3402, 6.2, true));
                scenicList.push(new Scenery("pineTree", -22851, -3178, 4.1, true));
                scenicList.push(new Scenery("pineTree", -22988, -3485, -1.7, true));
                scenicList.push(new Scenery("pineTree", -23453, -3480, 3, true));
                scenicList.push(new Scenery("pineTree", -23268, -3193, 2.75, true));
                scenicList.push(new Scenery("pineTree", -23545, -2893, -6.1, true));
                scenicList.push(new Scenery("pineTree", -23159, -2845, -4.85, true));
                scenicList.push(new Scenery("pineTree", -23369, -2422, 4.2, true));
                scenicList.push(new Scenery("pineTree", -23000, -2106, -4.8, true));
                scenicList.push(new Scenery("pineTree", -23584, -1940, -1.4, true));
                scenicList.push(new Scenery("pineTree", -22735, -2606, -2.68, true));
                scenicList.push(new Scenery("pineTree", -22683, -2274, -5.79, true));
                scenicList.push(new Scenery("pineTree", -23244, -1655, 6.34, true));
                scenicList.push(new Scenery("pineTree", -23352, -1265, 3.75, true));
                scenicList.push(new Scenery("pineTree", -23330, -836, -6.9, true));
                scenicList.push(new Scenery("pineTree", -23001, -1077, 4.85, true));
                scenicList.push(new Scenery("pineTree", -22881, -742, 4.34, true));
                scenicList.push(new Scenery("pineTree", -23181, -555, 3.8, true));
                scenicList.push(new Scenery("pineTree", -23519, -321, 1.4, true));
                scenicList.push(new Scenery("pineTree", -23457, 139, 1.68, true));
                scenicList.push(new Scenery("pineTree", -23589, 498, 5.79, true));
                scenicList.push(new Scenery("pineTree", -23146, 704, -5.34, true));
                scenicList.push(new Scenery("pineTree", -23575, 820, -2.4, true));
                scenicList.push(new Scenery("pineTree", -23345, 1047, 2.25, true));
                scenicList.push(new Scenery("pineTree", -19017, -3180, -5.6, true));
                scenicList.push(new Scenery("pineTree", -22878, 1154, 3.8, true));
                scenicList.push(new Scenery("pineTree", -22479, 998, 1.5, true));
                scenicList.push(new Scenery("pineTree", -22018, 1043, -1.72, true));
                scenicList.push(new Scenery("pineTree", -21627, 860, 5.9, true));
                scenicList.push(new Scenery("pineTree", -21408, 1133, 5.5, true));
                scenicList.push(new Scenery("pineTree", -21076, 960, -2.85, true));
                scenicList.push(new Scenery("pineTree", -20592, 1055, 3.2, true));
                scenicList.push(new Scenery("pineTree", -20125, 1130, -5.79, true));
                scenicList.push(new Scenery("pineTree", -15166, 879, 3, true));
                scenicList.push(new Scenery("pineTree", -15498, 1073, -1.3, true));
                scenicList.push(new Scenery("pineTree", -15836, 959, -2.25, true));
                scenicList.push(new Scenery("pineTree", -16481, 1123, 5.4, true));
                scenicList.push(new Scenery("pineTree", -13447, 104, 4.25, true));
                scenicList.push(new Scenery("pineTree", -16239, 786, -3.5, true));
                scenicList.push(new Scenery("pineTree", -16912, 1090, 4.6, true));
                scenicList.push(new Scenery("pineTree", -16836, 783, 2, true));
                scenicList.push(new Scenery("pineTree", -17340, 948, 2.95, true));
                scenicList.push(new Scenery("pineTree", -17633, 1128, -6, true));
                scenicList.push(new Scenery("pineTree", -17686, 853, -5, true));
                scenicList.push(new Scenery("pineTree", -18051, 1017, 3.8, true));
                scenicList.push(new Scenery("pineTree", -18640, 1109, 2.95, true));
                scenicList.push(new Scenery("pineTree", -18449, 626, -1.3, true));
                scenicList.push(new Scenery("pineTree", -18086, 473, -2.25, true));
                scenicList.push(new Scenery("pineTree", -18595, 177, -5.9, true));
                scenicList.push(new Scenery("pineTree", -18943, 470, 4.25, true));
                scenicList.push(new Scenery("pineTree", -19007, 863, -3.5, true));
                scenicList.push(new Scenery("pineTree", -19321, 1028, 4.6, true));
                scenicList.push(new Scenery("pineTree", -19591, 1086, 2.678, true));
                scenicList.push(new Scenery("pineTree", -19454, 591, 2.95, true));
                scenicList.push(new Scenery("pineTree", -19861, 782, -6, true));
                scenicList.push(new Scenery("pineTree", -20305, 610, -5, true));
                scenicList.push(new Scenery("pineTree", -20726, 677, 3.7, true));
                scenicList.push(new Scenery("pineTree", -21306, 349, -2, true));
                scenicList.push(new Scenery("pineTree", -22272, 467, -2.75, true));
                scenicList.push(new Scenery("pineTree", -22777, 218, 6.6, true));
                scenicList.push(new Scenery("pineTree", -22961, -99, 4.85, true));
                scenicList.push(new Scenery("pineTree", -22601, -389, -4.2, true));
                scenicList.push(new Scenery("pineTree", -22346, -1032, 3.8, true));
                scenicList.push(new Scenery("pineTree", -22679, -1501, 1.4, true));
                scenicList.push(new Scenery("pineTree", -22394, -1777, -1.9, true));
                scenicList.push(new Scenery("pineTree", -22195, -2152, 5.82, true));
                scenicList.push(new Scenery("pineTree", -22280, -2462, 8.9, true));
                scenicList.push(new Scenery("pineTree", -22460, -2966, -3.75, true));
                scenicList.push(new Scenery("pineTree", -21994, -2890, 6.25, true));
                scenicList.push(new Scenery("pineTree", -21847, -2554, 4.45, true));
                scenicList.push(new Scenery("pineTree", -21242, -2782, -6.77, true));
                scenicList.push(new Scenery("pineTree", -20737, -2813, -3.8, true));
                scenicList.push(new Scenery("pineTree", -20941, -2418, -2.1, true));
                scenicList.push(new Scenery("pineTree", -21599, -2301, -1.68, true));
                scenicList.push(new Scenery("pineTree", -21830, -1919, -5.36, true));
                scenicList.push(new Scenery("pineTree", -22015, -1518, 6, true));
                scenicList.push(new Scenery("pineTree", -21745, -1091, -1.5, true));
                scenicList.push(new Scenery("pineTree", -21982, -822, 1.5, true));
                scenicList.push(new Scenery("pineTree", -22405, -657, 3.5, true));
                scenicList.push(new Scenery("pineTree", -22649, 555, -7, true));
                scenicList.push(new Scenery("pineTree", -21978, 702, 4.8, true));
                scenicList.push(new Scenery("pineTree", -21794, 281, -4.15, true));
                scenicList.push(new Scenery("pineTree", -22303, 89, 5, true));
                scenicList.push(new Scenery("pineTree", -21923, -316, -2.64, true));
                scenicList.push(new Scenery("pineTree", -21497, -600, 0, true));
                scenicList.push(new Scenery("pineTree", -21209, -2156, 7.9, true));
                scenicList.push(new Scenery("pineTree", -19867, -2946, -9.1, true));
                scenicList.push(new Scenery("pineTree", -18467, -2825, 4.0668, true));
                scenicList.push(new Scenery("pineTree", -18014, -3018, 2.2764, true));
                scenicList.push(new Scenery("pineTree", -17524, -2797, 9.2, true));
                scenicList.push(new Scenery("pineTree", -17149, -2392, -5.669, true));
                scenicList.push(new Scenery("pineTree", -17794, -2511, -1.6281, true));
                scenicList.push(new Scenery("pineTree", -19003, -2621, 2.8392, true));
                scenicList.push(new Scenery("pineTree", -19415, -2979, -6.08, true));
                scenicList.push(new Scenery("pineTree", -19710, -2256, -5, true));
                scenicList.push(new Scenery("pineTree", -16417, -2940, 3.7, true));
                scenicList.push(new Scenery("pineTree", -15963, -2636, 3.5, true));
                scenicList.push(new Scenery("pineTree", -15804, -2315, -0.17, true));
                scenicList.push(new Scenery("pineTree", -16299, -2065, 0.47, true));
                scenicList.push(new Scenery("pineTree", -16735, -2222, -4.18, true));
                scenicList.push(new Scenery("pineTree", -17319, -2106, 9.6, true));
                scenicList.push(new Scenery("pineTree", -18003, -2179, 1.45, true));
                scenicList.push(new Scenery("pineTree", -18405, -2448, -10.34, true));
                scenicList.push(new Scenery("pineTree", -19012, -2127, 3.614, true));
                scenicList.push(new Scenery("pineTree", -20250, -2499, -4.628, true));
                scenicList.push(new Scenery("pineTree", -20266, -2840, -3.4, true));
                scenicList.push(new Scenery("pineTree", -21413, -132, 57, true));
                scenicList.push(new Scenery("pineTree", -21084, -417, 0, true));
                scenicList.push(new Scenery("pineTree", -20910, 40, 3.9, true));
                scenicList.push(new Scenery("pineTree", -20649, -186, -5.4, true));
                scenicList.push(new Scenery("pineTree", -20913, 351, 4.76, true));
                scenicList.push(new Scenery("pineTree", -20389, 143, -2.3764, true));
                scenicList.push(new Scenery("pineTree", -20670, -583, -9.215, true));
                scenicList.push(new Scenery("pineTree", -21272, -973, 5.169, true));
                scenicList.push(new Scenery("pineTree", -20489, -2182, 3.1543, true));
                scenicList.push(new Scenery("pineTree", -16469, -2535, -2.53, true));
                scenicList.push(new Scenery("pineTree", -15175, 539, -4.85, true));
                scenicList.push(new Scenery("pineTree", -15252, 172, 4.2, true));
                scenicList.push(new Scenery("pineTree", -15407, -135, -4.8, true));
                scenicList.push(new Scenery("pineTree", -15893, 98, -1.4, true));
                scenicList.push(new Scenery("pineTree", -15964, -316, -2.68, true));
                scenicList.push(new Scenery("pineTree", -15537, -525, -5.79, true));
                scenicList.push(new Scenery("pineTree", -15121, -901, 6.34, true));
                scenicList.push(new Scenery("pineTree", -15172, -1282, 3.75, true));
                scenicList.push(new Scenery("pineTree", -15234, -1648, -6.9, true));
                scenicList.push(new Scenery("pineTree", -14945, -1971, -4.85, true));
                scenicList.push(new Scenery("pineTree", -15148, -2213, -4.34, true));
                scenicList.push(new Scenery("pineTree", -15506, -2018, -3.8, true));
                scenicList.push(new Scenery("pineTree", -15925, -1908, 1.4, true));
                scenicList.push(new Scenery("pineTree", -15696, 515, -1.68, true));
                scenicList.push(new Scenery("pineTree", -16270, 359, -5.79, true));
                scenicList.push(new Scenery("pineTree", -16702, 375, 5.34, true));
                scenicList.push(new Scenery("pineTree", -17269, 524, 2.4, true));
                scenicList.push(new Scenery("pineTree", -17131, 118, 2.25, true));
                scenicList.push(new Scenery("pineTree", -16383, -38, 5.6, true));
                scenicList.push(new Scenery("pineTree", -16434, -350, 3.8, true));
                scenicList.push(new Scenery("pineTree", -16141, -647, -1.5, true));
                scenicList.push(new Scenery("pineTree", -15721, -803, -1.72, true));
                scenicList.push(new Scenery("pineTree", -15542, -1113, -5.9, true));
                scenicList.push(new Scenery("pineTree", -15649, -1442, -5.5, true));
                scenicList.push(new Scenery("pineTree", -16217, -1569, 2.85, true));
                scenicList.push(new Scenery("pineTree", -16599, -1823, -3.2, true));
                scenicList.push(new Scenery("pineTree", -16996, -1833, -5.79, true));
                scenicList.push(new Scenery("pineTree", -16617, -1506, 3, true));
                scenicList.push(new Scenery("pineTree", -17093, -1481, -1.3, true));
                scenicList.push(new Scenery("pineTree", -17716, -1802, -2.25, true));
                scenicList.push(new Scenery("pineTree", -17687, -1338, 5.4, true));
                scenicList.push(new Scenery("pineTree", -18217, -1786, 4.25, true));
                scenicList.push(new Scenery("pineTree", -18453, -2031, -3.5, true));
                scenicList.push(new Scenery("pineTree", -19535, -2606, 4.6, true));
                scenicList.push(new Scenery("pineTree", -18736, -1734, 2, true));
                scenicList.push(new Scenery("pineTree", -19323, -1726, 2.95, true));
                scenicList.push(new Scenery("pineTree", -19704, -1835, -6, true));
                scenicList.push(new Scenery("pineTree", -20136, -1981, -5, true));
                scenicList.push(new Scenery("pineTree", -20092, -1615, 3.8, true));
                scenicList.push(new Scenery("pineTree", -20490, -1802, 2.95, true));
                scenicList.push(new Scenery("pineTree", -20840, -1975, -1.3, true));
                scenicList.push(new Scenery("pineTree", -21206, -1730, -2.25, true));
                scenicList.push(new Scenery("pineTree", -21494, -1430, -5.9, true));
                scenicList.push(new Scenery("pineTree", -20864, -1537, 4.25, true));
                scenicList.push(new Scenery("pineTree", -20885, -1187, -3.5, true));
                scenicList.push(new Scenery("pineTree", -20468, -1406, 4.6, true));
                scenicList.push(new Scenery("pineTree", -19978, -1231, 2.678, true));
                scenicList.push(new Scenery("pineTree", -19683, -1509, 2.95, true));
                scenicList.push(new Scenery("pineTree", -19035, -1325, -6, true));
                scenicList.push(new Scenery("pineTree", -19546, -1065, -5, true));
                scenicList.push(new Scenery("pineTree", -18977, -932, 3.7, true));
                scenicList.push(new Scenery("pineTree", -20276, -917, -2, true));
                scenicList.push(new Scenery("pineTree", -18295, -1396, -2.75, true));
                scenicList.push(new Scenery("pineTree", -18337, -1079, 6.6, true));
                scenicList.push(new Scenery("pineTree", -17802, -692, 4.85, true));
                scenicList.push(new Scenery("pineTree", -17407, -1040, -5, true));
                scenicList.push(new Scenery("pineTree", -16086, -1190, 3.8, true));
                scenicList.push(new Scenery("pineTree", -16723, -1118, 1.4, true));
                scenicList.push(new Scenery("pineTree", -16909, -724, -1.9, true));
                scenicList.push(new Scenery("pineTree", -17025, -328, 5.82, true));
                scenicList.push(new Scenery("pineTree", -17572, -357, 8.9, true));
                scenicList.push(new Scenery("pineTree", -17698, -90, -3.75, true));
                scenicList.push(new Scenery("pineTree", -17633, 258, 6.25, true));
                scenicList.push(new Scenery("pineTree", -18141, -62, 4.45, true));
                scenicList.push(new Scenery("pineTree", -18048, -419, -6.77, true));
                scenicList.push(new Scenery("pineTree", -18575, -806, -3.8, true));
                scenicList.push(new Scenery("pineTree", -18587, -385, -2.1, true));
                scenicList.push(new Scenery("pineTree", -19092, -631, -1.68, true));
                scenicList.push(new Scenery("pineTree", -19616, -734, -5.36, true));
                scenicList.push(new Scenery("pineTree", -20099, -563, 6, true));
                scenicList.push(new Scenery("pineTree", -19891, -204, -1.5, true));
                scenicList.push(new Scenery("pineTree", -19332, -290, 1.5, true));
                scenicList.push(new Scenery("pineTree", -18907, -86, 3.5, true));
                scenicList.push(new Scenery("pineTree", -19545, 124, -7, true));
                scenicList.push(new Scenery("pineTree", -19923, 398, 4.8, true));
                scenicList.push(new Scenery("pineTree", -16155, -2337, -4.15, true));
                scenicList.push(new Scenery("pineTree", -19903, -2595, 0, true));
                scenicList.push(new Scenery("pineTree", -18192, -746, 2.9999, true));

                //trees to the east
                scenicList.push(new Scenery("pineTree", -24765, 1829, 5, true));
                scenicList.push(new Scenery("pineTree", -24198 , 1709, 2, true));
                scenicList.push(new Scenery("pineTree", -23745 , 1934, -3, true));
                scenicList.push(new Scenery("pineTree", -24444 , 2385, 4.5, true));
                scenicList.push(new Scenery("pineTree", -24198 , 2234, -1, true));
                scenicList.push(new Scenery("pineTree", -23898 , 2830, 2.25, true));
                scenicList.push(new Scenery("pineTree", -24634 , 966, 1.25, true));
                scenicList.push(new Scenery("pineTree", -24197 , 705, 5.42, true));
                scenicList.push(new Scenery("pineTree", -24018 , 991, -3.5, true));
                scenicList.push(new Scenery("pineTree", -24019 , 231, -4, true));
                scenicList.push(new Scenery("pineTree", -23811 , -62, -8, true));
                scenicList.push(new Scenery("pineTree", -24420 , -2, 7, true));
                scenicList.push(new Scenery("pineTree", -23997 , -373, 7.3, true));
                scenicList.push(new Scenery("pineTree", -24020 , 3429, 2.6, true));
                scenicList.push(new Scenery("pineTree", -23774 , 3956, 1.7, true));
                scenicList.push(new Scenery("pineTree", -24052 , 4209, 3, true));
                scenicList.push(new Scenery("pineTree", -23818 , 4635, 4, true));
                scenicList.push(new Scenery("pineTree", -24185 , 4835, -5, true));
                scenicList.push(new Scenery("pineTree", -24463 , 5090, 5.3, true));
                scenicList.push(new Scenery("pineTree", -24052 , 5813, -2, true));
                scenicList.push(new Scenery("pineTree", -23742 , 6022, 1.1, true));
                scenicList.push(new Scenery("pineTree", -24244 , 6281, -1.7, true));
                scenicList.push(new Scenery("pineTree", -24562, 6011, 4.9, true));
                scenicList.push(new Scenery("pineTree", -25076 , 6479, 6.8, true));
                scenicList.push(new Scenery("pineTree", -25651 , 6162, -3.3, true));
                scenicList.push(new Scenery("pineTree", -25213 , 5786, 4.7, true));
                scenicList.push(new Scenery("pineTree", -24775 , 5505, -1.5, true));
                scenicList.push(new Scenery("pineTree", -24165 , 5375, 2.25, true));
                scenicList.push(new Scenery("pineTree", -25098 , 5232, 9, true));
                scenicList.push(new Scenery("pineTree", -25590 , 5399, -8.42, true));
                scenicList.push(new Scenery("pineTree", -25394 , 4982, -4, true));
                scenicList.push(new Scenery("pineTree", -24660 , 4619, -14, true));
                scenicList.push(new Scenery("pineTree", -24660 , 4619, 7.7, true));
                scenicList.push(new Scenery("pineTree", -23789 , 4633, 8.2, true));
                scenicList.push(new Scenery("pineTree", -25189 , 4353, 6, true));
                scenicList.push(new Scenery("pineTree", -24265 , 3738, 3.9, true));
                scenicList.push(new Scenery("pineTree", -25112 , 3699, -5, true));
                scenicList.push(new Scenery("pineTree", -24615 , 3299, 2.5, true));
                scenicList.push(new Scenery("pineTree", -24499 , 2943, -4.4, true));
                scenicList.push(new Scenery("pineTree", -24958 , 2161, -6, true));
                scenicList.push(new Scenery("pineTree", -24835 , 2725, -5.55, true));
                scenicList.push(new Scenery("pineTree", -24703 , 4115, -2.2, true));
                scenicList.push(new Scenery("pineTree", -25089 , 3063, -1.25, true));
                scenicList.push(new Scenery("pineTree", -25395 , 1643, 1.77, true));
                scenicList.push(new Scenery("pineTree", -25610 , 4604, 3.25, true));
                scenicList.push(new Scenery("pineTree", -25377 , 105, -4.7, true));
                scenicList.push(new Scenery("pineTree", -24578 , 366, 1.6, true));
                scenicList.push(new Scenery("pineTree", -23898 , -769, 9.4, true));
                scenicList.push(new Scenery("pineTree", -24547 , -471, -9, true));
                scenicList.push(new Scenery("pineTree", -24943 , -1088, 10.37, true));
                scenicList.push(new Scenery("pineTree", -24322 , -1385, -5.1, true));
                scenicList.push(new Scenery("pineTree", -23705 , -1513, 16, true));
                scenicList.push(new Scenery("pineTree", -24062 , -1706, 8.864, true));
                scenicList.push(new Scenery("pineTree", -23859 , -2235, 9.2, true));
                scenicList.push(new Scenery("pineTree", -23687 , -2627, -7.12, true));
                scenicList.push(new Scenery("pineTree", -24992 , -1579, -3.9, true));
                scenicList.push(new Scenery("pineTree", -24561 , -1965, -6.3, true));
                scenicList.push(new Scenery("pineTree", -24146 , -2050, -2.5, true));
                scenicList.push(new Scenery("pineTree", -24927 , -2450, 4.444, true));
                scenicList.push(new Scenery("pineTree", -24461 , -2299, 6.75, true));
                scenicList.push(new Scenery("pineTree", -24323 , -2744, -3.33, true));
                scenicList.push(new Scenery("pineTree", -24646 , -2924, -2.2, true));
                scenicList.push(new Scenery("pineTree", -23897 , -3066, 0.19, true));
                scenicList.push(new Scenery("pineTree", -24054 , -3525, 0, true));
                scenicList.push(new Scenery("pineTree", -24280 , -3092, 8.88, true));
                scenicList.push(new Scenery("pineTree", -24674 , -3346, 2, true));
                scenicList.push(new Scenery("pineTree", -24367 , -1000, 3, true));
                scenicList.push(new Scenery("pineTree", -25064 , -3010, -10, true));

                //Plants of the wuntol woods
                scenicList.push(new Scenery("neprilnePlant", -17425 , 3993, -5.8, true));
                scenicList.push(new Scenery("pluttPlant", -16685 , 4251, 2.4, true));
                scenicList.push(new Scenery("pluttPlant", -20807 , 5229, 3.4, true));
                scenicList.push(new Scenery("pluttPlant", -17457 , 4992, -5.2, true));
                scenicList.push(new Scenery("pluttPlant", -21673 , -3221, 4.444, true));
                scenicList.push(new Scenery("pluttPlant", -15564 , -1707, 1, true));
                scenicList.push(new Scenery("pluttPlant", -15572 , -1722, 2, true));
                scenicList.push(new Scenery("pluttPlant", -15581 , -1697, 4, true));
                scenicList.push(new Scenery("pluttPlant", -15591 , -1718, 8, true));
                scenicList.push(new Scenery("pluttPlant", -18613 , 308, 16, true));
                scenicList.push(new Scenery("culprisPlant", -16183 , 5023, -3, true));
                scenicList.push(new Scenery("culprisPlant", -15028 , 3554, 3, true));
                scenicList.push(new Scenery("culprisPlant", -18402 , 2601, 4.9, true));
                scenicList.push(new Scenery("culprisPlant", -19197 , 3033, 1.6, true));
                scenicList.push(new Scenery("culprisPlant", -22381 , -2686, 12, true));
                scenicList.push(new Scenery("culprisPlant", -16883 , -1358, -1.5, true));
                scenicList.push(new Scenery("culprisPlant", -21156 , 617, -3.5, true));
                scenicList.push(new Scenery("neprilnePlant", -15323 , 4987, 4, true));
                scenicList.push(new Scenery("neprilnePlant", -21654 , 5532, -4, true));
                scenicList.push(new Scenery("stomwikPlant", -15793 , 5985, 0, true));
                scenicList.push(new Scenery("stomwikPlant", -16580 , 3181, -4.4, true));
                scenicList.push(new Scenery("stomwikPlant", -18732 , -2343, 6, true));
                scenicList.push(new Scenery("akerPlant", -14491 , 5755, 1, true));
                scenicList.push(new Scenery("akerPlant", -14522 , 5800, 0.5, true));
                scenicList.push(new Scenery("akerPlant", -19358 , 4061, 7.6, true));
                scenicList.push(new Scenery("akerPlant", -19053 , 3597, -8.8, true));
                scenicList.push(new Scenery("akerPlant", -22214 , 4390, 0, true));
                scenicList.push(new Scenery("akerPlant", -20611 , -2843, 9.64, true));
                scenicList.push(new Scenery("akerPlant", -14692 , -1805, 7.6, true));
                scenicList.push(new Scenery("akerPlant", -18994 , -2891, -0.89, true));
                scenicList.push(new Scenery("akerPlant", -22180 , 132, -6.6, true));
                scenicList.push(new Scenery("akerPlant", -17058 , -498, 1.9, true));
                scenicList.push(new Scenery("akerPlant", -14749 , 284, -4.82, true));
                scenicList.push(new Scenery("akerPlant", -15193 , -2065, 0.25, true));
                scenicList.push(new Scenery("akerPlant", -17115 , -221, 6.25, true));
                scenicList.push(new Scenery("glinPlant", -14380 , 4881, -1, true));
                scenicList.push(new Scenery("glinPlant", -15147 , 3024, 6, true));
                scenicList.push(new Scenery("glinPlant", -17777 , 3397, -3.5, true));
                scenicList.push(new Scenery("glinPlant", -21282 , 3248, -3.1, true));
                scenicList.push(new Scenery("glinPlant", -15555 , 4047, 4.3, true));
                scenicList.push(new Scenery("glinPlant", -14563 , 3658, 7, true));
                scenicList.push(new Scenery("glinPlant", -16949 , -3390, 6, true));
                scenicList.push(new Scenery("glinPlant", -17023 , -2793, 5, true));
                scenicList.push(new Scenery("glinPlant", -14274 , -2850, -0.4, true));
                scenicList.push(new Scenery("glinPlant", -16534 , -2922, 6, true));
                scenicList.push(new Scenery("glinPlant", -15944 , -2502, -7.789, true));
                scenicList.push(new Scenery("neprilnePlant", -17081 , 2517, -2.6, true));
                scenicList.push(new Scenery("ogardPlant", -19517 , 2316, 3.141593862489, true));
                scenicList.push(new Scenery("ogardPlant", -16292 , -2231, 0, true));
                scenicList.push(new Scenery("wyrPlant", -15134 , 2399, 2.8, true));
                scenicList.push(new Scenery("wyrPlant", -20621 , -1614, -5.6, true));
                scenicList.push(new Scenery("wyrPlant", -17775 , -2176, -2.96, true));
                scenicList.push(new Scenery("wyrPlant", -20900 , -834, 3.9, true));
                scenicList.push(new Scenery("neprilnePlant", -18139 , -2706, 2.34, true));
                scenicList.push(new Scenery("halcifPlant", -17912 , -708, -4.7, true));
                scenicList.push(new Scenery("neprilnePlant", -14519 , -2354, 6.1, true));
                scenicList.push(new Scenery("cyrinthilimPlant", -16948 , -3143, 2, true));
                scenicList.push(new Scenery("cyrinthilimPlant", -21038 , -2478, 4, true));
                scenicList.push(new Scenery("neprilnePlant", -17892 , -1006, 8.5, true));
                if (Math.random() >= 0.84)
                {
                    scenicList.push(new Scenery("halcifPlant", -19558 , -2494, 0, true));
                }
                else
                {
                    scenicList.push(new Scenery("glinPlant", -19558 , -2494, 0, true));
                }

                change = "e2";
            }
        }
        else if (region == "e3")
        {
            if (change != "e3")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //e-4 forest edge
                generator2(9786217, 193249, 242531, 33632203, 8967556824000, 1, -33912, 6507, true);
                cropper(-33912, 6507, -35953, 1571, true, true);

                generator2(2436217, 56679, 21, 3, 894000, 1, -33923, 1056, true);
                cropper(-33923, 1056, -35952, -3576, true, true);

                for (var i = scenicList.length -1; i >= 0; i--)
                {
                    if (scenicList[i].type != "pineTree")
                    {
                        scenicList.splice(i, 1);
                    }
                }

                //-/

                //REGION CREATION
                //Build AI Units

                //PROPS
                //scenicList.push(new Scenery("skeleton", -19230, 5008, 5.12, 1.75));

                //CREATURES
                ArtificialIntelligenceAccess.push(new Unit(-25689, -1562, "Grib", true, "Hungo"));
                ArtificialIntelligenceAccess.push(new Unit(-25630, -1322, "Grib", false, "Hungy"));
                ArtificialIntelligenceAccess.push(new Unit(-32586, -3365, "Grib", true, "Hunga"));
                ArtificialIntelligenceAccess.push(new Unit(-29485, -1450, "Grib", false, "Hungly"));
                ArtificialIntelligenceAccess.push(new Unit(-32582, -463, "Grib", false, "Hungory"));
                ArtificialIntelligenceAccess.push(new Unit(-29778, 88, "Grib", true, "Hungal"));
                ArtificialIntelligenceAccess.push(new Unit(-24672, 5737, "Grib", false, "Hungail"));
                ArtificialIntelligenceAccess.push(new Unit(-27958, -718, "Viper", false, "Slibi"));
                ArtificialIntelligenceAccess.push(new Unit(-25977, -1486, "Lizard", true, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-30202, -4910, "Lizard", true, "lagartija"));
                ArtificialIntelligenceAccess.push(new Unit(-31089, -2866, "Lizard", true, "lagartilla"));
                ArtificialIntelligenceAccess.push(new Unit(-30466, -130, "Lizard", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-27874, -113, "Lizard", false, "Lazzy"));
                ArtificialIntelligenceAccess.push(new Unit(-27693, 86, "Lizard", false, "Lazzu"));
                ArtificialIntelligenceAccess.push(new Unit(-32922, 2547, "Lizard", false, "Ilzy"));
                ArtificialIntelligenceAccess.push(new Unit(-33021, 2331, "Lizard", false, "Zilzy"));
                ArtificialIntelligenceAccess.push(new Unit(-27757, 1189, "Lizard", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-32248, -4, "Lizard", false, "zalzy"));
                ArtificialIntelligenceAccess.push(new Unit(-26865, -122, "BlackBear", false, "Clube"));
                ArtificialIntelligenceAccess.push(new Unit(-31159, 5443, "Varn", false, "Fliku"));
                ArtificialIntelligenceAccess.push(new Unit(-31501, 5621, "Varn", false, "Fliko"));
                ArtificialIntelligenceAccess.push(new Unit(-31117, 5847, "Varn", false, "Flika"));
                ArtificialIntelligenceAccess.push(new Unit(-31079, 6193, "Varn", false, "Fliki"));
                ArtificialIntelligenceAccess.push(new Unit(-30012, 6315, "Varn", true, "Flik"));
                ArtificialIntelligenceAccess.push(new Unit(-31838, -1898, "Viper", false, "Slybi"));
                ArtificialIntelligenceAccess.push(new Unit(-23829, 4690, "Viper", false, "Slybil"));
                ArtificialIntelligenceAccess.push(new Unit(-32119, -2622, "Varn", false, "Flikia"));
                ArtificialIntelligenceAccess.push(new Unit(-32437, -2718, "Varn", true, "Flikei"));
                ArtificialIntelligenceAccess.push(new Unit(-30127, -2694, "Varn", true, "Flikem"));
                ArtificialIntelligenceAccess.push(new Unit(-27605, -3266, "Varn", false, "Flibiora"));
                if (Math.random() > 0.75)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-32302, 2970, "BlackBear", false, "Clubo"));
                    ArtificialIntelligenceAccess.push(new Unit(-26679, 940, "Varn", true, "Flibuh"));
                    ArtificialIntelligenceAccess.push(new Unit(-26416, 839, "Varn", true, "Flibouh"));
                    ArtificialIntelligenceAccess.push(new Unit(-26529, 1123, "Varn", false, "Flibila"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(-32302, 2970, "BlackBear", true, "Klug"));
                }

                if (Math.random() > 0.45)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-29701, 3830, "BlackBear", true, "Klugger"));
                    ArtificialIntelligenceAccess.push(new Unit(-31005, 3285, "Varn", false, "Flikia"));
                    ArtificialIntelligenceAccess.push(new Unit(-30771, 3391, "Varn", true, "Flikei"));
                    ArtificialIntelligenceAccess.push(new Unit(-31103, 3476, "Varn", true, "Flikem"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(-29821, 3847, "BlackBear", false, "Klewga"));
                    ArtificialIntelligenceAccess.push(new Unit(-31261, 3400, "Grib", false, "Hungali"));
                    ArtificialIntelligenceAccess.push(new Unit(-30878, 3099, "Grib", false, "Hungoli"));
                }
                ArtificialIntelligenceAccess.push(new Unit(-31108, 55, "Narthwarp", false, "silwiloi"));
                ArtificialIntelligenceAccess.push(new Unit(-31406, -45, "Narthwarp", false, "silwiloa"));
                ArtificialIntelligenceAccess.push(new Unit(-24591, -1478, "Narthwarp", false, "silwile"));
                ArtificialIntelligenceAccess.push(new Unit(-24410, -2106, "Narthwarp", false, "silwila"));
                ArtificialIntelligenceAccess.push(new Unit(-24513, -2236, "Narthwarp", false, "silwili"));
                ArtificialIntelligenceAccess.push(new Unit(-24525, -2507, "Narthwarp", false, "silwilo"));
                ArtificialIntelligenceAccess.push(new Unit(-24317, -2587, "Narthwarp", false, "silwilu"));
                ArtificialIntelligenceAccess.push(new Unit(-24164, -2288, "Narthwarp", false, "silwileu"));
                ArtificialIntelligenceAccess.push(new Unit(-24033, -1792, "Narthwarp", false, "silwiloux"));
                ArtificialIntelligenceAccess.push(new Unit(-24066, -1625, "Narthwarp", false, "silwilei"));
                ArtificialIntelligenceAccess.push(new Unit(-24636, -1266, "Narthwarp", false, "silwilai"));
                ArtificialIntelligenceAccess.push(new Unit(-27676, 222, "Narthwarp", false, "silwilie"));
                ArtificialIntelligenceAccess.push(new Unit(-27792, 361, "Narthwarp", false, "silwilia"));
                ArtificialIntelligenceAccess.push(new Unit(-33433, 3463, "Narthwarp", false, "silwileo"));
                ArtificialIntelligenceAccess.push(new Unit(-33063, -3535, "Narthwarp", false, "silwilio"));
                scenicList.push(new Scenery("ulgoyPlant", -32682, 3331, 5.666666, 2.6));
                ArtificialIntelligenceAccess.push(new Unit(-32671, 3332, "Ulgoy", false, "avro ol plant"));
                scenicList.push(new Scenery("ulgoyPlant", -25998, -255, 9, 3.5));
                ArtificialIntelligenceAccess.push(new Unit(-26010, -257, "Ulgoy", true, "big ol plant"));
                ArtificialIntelligenceAccess.push(new Unit(-26800, 2650, "Boar", true, "Tambor"));
                ArtificialIntelligenceAccess.push(new Unit(-28221, 3617, "Boar", false, "Tambora"));
                ArtificialIntelligenceAccess.push(new Unit(-28286, 4756, "Boar", false, "Tambura"));
                ArtificialIntelligenceAccess.push(new Unit(-28343, 4711, "Boar", "baby", "Tamburo"));
                ArtificialIntelligenceAccess.push(new Unit(-30371, 4572, "Boar", "baby", "Tamburita"));
                if (Math.random() > 0.6)
                {
                    if (Math.random() > 0.75)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-25457, 2934, "Boar", true, "Tambul"));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-25351, 2875, "Boar", "baby", "Tamburica"));
                    }
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(-25351, 2873, "Grib", true, "Hungul"));
                }

                if (Math.random() > 0.35)
                {
                    if (Math.random() > 0.4)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-28570, -3116, "Boar", "baby", "Tamburima"));
                    }
                    else
                    {
                        if (Math.random() > 0.2)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-28570, -3116, "Boar", false, "Tamburimo"));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-28570, -3116, "Boar", true, "Tamburul"));
                        }
                    }
                }
                else
                {
                    if (Math.random() > 0.39)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-28482, -3034, "BlackBear", false, "Kuba"));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-28632, -2918, "BlackBear", true, "Kubro"));
                    }
                }
                ArtificialIntelligenceAccess.push(new Unit(-24875, 1716, "Shehid", false, "shrimperz"));
                ArtificialIntelligenceAccess.push(new Unit(-32759, 367, "Shehid", true, "chalambara"));
                ArtificialIntelligenceAccess.push(new Unit(-28701, -1787, "Shehid", true, "chalambga"));
                ArtificialIntelligenceAccess.push(new Unit(-27394, -592, "Shehid", false, "chumulga"));
                ArtificialIntelligenceAccess.push(new Unit(-26029, -1178, "Shehid", false, "chumulg"));
                ArtificialIntelligenceAccess.push(new Unit(-26463, -537, "Shehid", true, "chamulg"));
                ArtificialIntelligenceAccess.push(new Unit(-27497, -664, "Shehid", true, "gamulgo"));
                ArtificialIntelligenceAccess.push(new Unit(-27698, -568, "BorbBeetle", true, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-28078, -539, "BorbBeetle", true, "Ben"));
                ArtificialIntelligenceAccess.push(new Unit(-27216, 922, "BorbBeetle", false, "Benjamin"));
                ArtificialIntelligenceAccess.push(new Unit(-32616, 4687, "BorbBeetle", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-31279, -1625, "BorbBeetle", false, "Bilg"));
                ArtificialIntelligenceAccess.push(new Unit(-31756, 1353, "BorbBeetle", false, "Bilig"));
                scenicList.push(new Scenery("beeHive", -26969, -852, 7.25, true));
                ArtificialIntelligenceAccess.push(new Unit(-29364, -1803, "Shehid", false, "chumgam"));
                ArtificialIntelligenceAccess.push(new Unit(-29115, 5990, "Shehid", false, "chumga"));
                ArtificialIntelligenceAccess.push(new Unit(-28980, 5799, "Shehid", true, "chamgu"));
                ArtificialIntelligenceAccess.push(new Unit(-29168, 5800, "Shehid", false, "chumgu"));
                ArtificialIntelligenceAccess.push(new Unit(-29339, 5979, "Shehid", true, "chamgo"));
                ArtificialIntelligenceAccess.push(new Unit(-28812, 5906, "Shehid", false, "chumgo"));
                ArtificialIntelligenceAccess.push(new Unit(-28308, 5584, "Shehid", false, "chumgy"));
                ArtificialIntelligenceAccess.push(new Unit(-27613, 5338, "Shehid", false, "chumgol"));
                ArtificialIntelligenceAccess.push(new Unit(-27035, 4930, "Shehid", false, "chumgal"));
                ArtificialIntelligenceAccess.push(new Unit(-25018, 4068, "Shehid", false, "chamgal"));
                ArtificialIntelligenceAccess.push(new Unit(-25373, 3737, "Shehid", true, "chamgol"));
                ArtificialIntelligenceAccess.push(new Unit(-24666, 3931, "Shehid", false, "chamgil"));
                ArtificialIntelligenceAccess.push(new Unit(-25018, 3065, "Shehid", false, "chamgyl"));
                ArtificialIntelligenceAccess.push(new Unit(-28195, -194, "Shehid", false, "chamgaal"));
                ArtificialIntelligenceAccess.push(new Unit(-30877, -1178, "Shehid", false, "chamgeel"));
                ArtificialIntelligenceAccess.push(new Unit(-29569, -3260, "Shehid", false, "chumgiel"));



                //Build Scenery

                //trees in the wuntol woods.

                //north trees
                //scenicList.push(new Scenery("pineTree", -24463 , 5090, 5.3, true));
                //scenicList.push(new Scenery("pineTree", -24052 , 5813, -2, true));
                //scenicList.push(new Scenery("pineTree", -23742 , 6022, 1.1, true));
                //scenicList.push(new Scenery("pineTree", -24244 , 6281, -1.7, true));
                //scenicList.push(new Scenery("pineTree", -24562, 6011, 4.9, true));
                //scenicList.push(new Scenery("pineTree", -25076 , 6479, 6.8, true));
                //scenicList.push(new Scenery("pineTree", -25651 , 6162, -3.3, true));
                //scenicList.push(new Scenery("pineTree", -25213 , 5786, 4.7, true));
                //scenicList.push(new Scenery("pineTree", -24775 , 5505, -1.5, true));
                //scenicList.push(new Scenery("pineTree", -24165 , 5375, 2.25, true));
                //scenicList.push(new Scenery("pineTree", -32700 , 5990, -9, true));
                //scenicList.push(new Scenery("pineTree", -32391 , 6232, 3.4, true));
                //scenicList.push(new Scenery("pineTree", -32478 , 6524, -5.443, true));
                //scenicList.push(new Scenery("pineTree", -32925 , 6310, 7.75, true));
                //scenicList.push(new Scenery("pineTree", -33352 , 6480, -3.95, true));
                //scenicList.push(new Scenery("pineTree", -33239 , 6077, -2.39239, true));
                //scenicList.push(new Scenery("pineTree", -33706 , 6188, 10.45, true));
                //scenicList.push(new Scenery("pineTree", -33551 , 5652, 12.85, true));
                //scenicList.push(new Scenery("pineTree", -32851 , 5714, -13.1, true));
                scenicList.push(new Scenery("pineTree", -29831 , 5764, 6, true));
                scenicList.push(new Scenery("pineTree", -30049 , 5979, 3, true));
                scenicList.push(new Scenery("pineTree", -30502 , 5984, -2, true));
                scenicList.push(new Scenery("pineTree", -29506 , 5907, 0, true));
                scenicList.push(new Scenery("pineTree", -28894 , 5795, -1, true));
                scenicList.push(new Scenery("pineTree", -28474 , 6009, -0.7, true));
                scenicList.push(new Scenery("pineTree", -28075 , 5806, 2.5, true));
                scenicList.push(new Scenery("pineTree", -27814 , 6059, 0.9, true));
                scenicList.push(new Scenery("pineTree", -27489 , 5917, 5.6, true));
                scenicList.push(new Scenery("pineTree", -27041 , 5927, 4.15, true));
                scenicList.push(new Scenery("pineTree", -26413 , 5795, 3.5, true));
                scenicList.push(new Scenery("pineTree", -25997 , 5968, -2.875, true));
                scenicList.push(new Scenery("pineTree", -26003 , 6438, -4.3, true));
                scenicList.push(new Scenery("pineTree", -26411 , 6102, -9.2, true));
                scenicList.push(new Scenery("pineTree", -26487 , 6578, 5.9, true));
                scenicList.push(new Scenery("pineTree", -26909 , 6226, -2.64, true));
                scenicList.push(new Scenery("pineTree", -27489 , 6420, 0, true));
                scenicList.push(new Scenery("pineTree", -28199 , 6300, 0, true));
                scenicList.push(new Scenery("pineTree", -28604 , 6530, 5.5, true));
                scenicList.push(new Scenery("pineTree", -28934 , 6142, -6.6, true));
                scenicList.push(new Scenery("pineTree", -29304 , 6435, -6.7, true));
                scenicList.push(new Scenery("pineTree", -29738 , 6129, 10, true));
                scenicList.push(new Scenery("pineTree", -29609 , 6578, 5, true));
                scenicList.push(new Scenery("pineTree", -30077 , 6321, -3.13, true));
                scenicList.push(new Scenery("pineTree", -30307 , 5781, -5.8, true));
                scenicList.push(new Scenery("pineTree", -30444 , 6481, 4.42, true));
                scenicList.push(new Scenery("pineTree", -30851 , 6166, -1.3696372563201, true));
                scenicList.push(new Scenery("pineTree", -31004 , 5883, -2.25, true));
                scenicList.push(new Scenery("pineTree", -31423 , 5918, 12, true));
                scenicList.push(new Scenery("pineTree", -31329 , 6277, 0, true));
                scenicList.push(new Scenery("pineTree", -30942 , 6525, 13.5, true));
                scenicList.push(new Scenery("pineTree", -31822 , 6134, -8.4, true));
                scenicList.push(new Scenery("pineTree", -32230 , 5822, 5.7721, true));
                scenicList.push(new Scenery("pineTree", -31791 , 5859, 1.2, true));
                scenicList.push(new Scenery("pineTree", -31661 , 6435, 0, true));
                scenicList.push(new Scenery("pineTree", -29291 , 6142, -4.536, true));

                //westside trees
                scenicList.push(new Scenery("pineTree", -24765, 1829, 5, true));
                scenicList.push(new Scenery("pineTree", -24198 , 1709, 2, true));
                scenicList.push(new Scenery("pineTree", -23745 , 1934, -3, true));
                scenicList.push(new Scenery("pineTree", -24444 , 2385, 4.5, true));
                scenicList.push(new Scenery("pineTree", -24198 , 2234, -1, true));
                scenicList.push(new Scenery("pineTree", -23898 , 2830, 2.25, true));
                scenicList.push(new Scenery("pineTree", -24634 , 966, 1.25, true));
                scenicList.push(new Scenery("pineTree", -24197 , 705, 5.42, true));
                scenicList.push(new Scenery("pineTree", -24018 , 991, -3.5, true));
                scenicList.push(new Scenery("pineTree", -24019 , 231, -4, true));
                scenicList.push(new Scenery("pineTree", -23811 , -62, -8, true));
                scenicList.push(new Scenery("pineTree", -24420 , -2, 7, true));
                scenicList.push(new Scenery("pineTree", -23997 , -373, 7.3, true));
                scenicList.push(new Scenery("pineTree", -24020 , 3429, 2.6, true));
                scenicList.push(new Scenery("pineTree", -23774 , 3956, 1.7, true));
                scenicList.push(new Scenery("pineTree", -24052 , 4209, 3, true));
                scenicList.push(new Scenery("pineTree", -23818 , 4635, 4, true));
                scenicList.push(new Scenery("pineTree", -24185 , 4835, -5, true));
                scenicList.push(new Scenery("pineTree", -24463 , 5090, 5.3, true));
                scenicList.push(new Scenery("pineTree", -24052 , 5813, -2, true));
                scenicList.push(new Scenery("pineTree", -23742 , 6022, 1.1, true));
                scenicList.push(new Scenery("pineTree", -24244 , 6281, -1.7, true));
                scenicList.push(new Scenery("pineTree", -24562, 6011, 4.9, true));
                scenicList.push(new Scenery("pineTree", -25076 , 6479, 6.8, true));
                scenicList.push(new Scenery("pineTree", -25651 , 6162, -3.3, true));
                scenicList.push(new Scenery("pineTree", -25213 , 5786, 4.7, true));
                scenicList.push(new Scenery("pineTree", -24775 , 5505, -1.5, true));
                scenicList.push(new Scenery("pineTree", -24165 , 5375, 2.25, true));
                scenicList.push(new Scenery("pineTree", -25098 , 5232, 9, true));
                scenicList.push(new Scenery("pineTree", -25590 , 5399, -8.42, true));
                scenicList.push(new Scenery("pineTree", -25394 , 4982, -4, true));
                scenicList.push(new Scenery("pineTree", -24660 , 4619, -14, true));
                scenicList.push(new Scenery("pineTree", -24660 , 4619, 7.7, true));
                scenicList.push(new Scenery("pineTree", -23789 , 4633, 8.2, true));
                scenicList.push(new Scenery("pineTree", -25189 , 4353, 6, true));
                scenicList.push(new Scenery("pineTree", -24265 , 3738, 3.9, true));
                scenicList.push(new Scenery("pineTree", -25112 , 3699, -5, true));
                scenicList.push(new Scenery("pineTree", -24615 , 3299, 2.5, true));
                scenicList.push(new Scenery("pineTree", -24499 , 2943, -4.4, true));
                scenicList.push(new Scenery("pineTree", -24958 , 2161, -6, true));
                scenicList.push(new Scenery("pineTree", -24835 , 2725, -5.55, true));
                scenicList.push(new Scenery("pineTree", -24703 , 4115, -2.2, true));
                scenicList.push(new Scenery("pineTree", -25089 , 3063, -1.25, true));
                scenicList.push(new Scenery("pineTree", -25395 , 1643, 1.77, true));
                scenicList.push(new Scenery("pineTree", -25610 , 4604, 3.25, true));
                scenicList.push(new Scenery("pineTree", -25377 , 105, -4.7, true));
                scenicList.push(new Scenery("pineTree", -24578 , 366, 1.6, true));
                scenicList.push(new Scenery("pineTree", -23898 , -769, 9.4, true));
                scenicList.push(new Scenery("pineTree", -24547 , -471, -9, true));
                scenicList.push(new Scenery("pineTree", -24943 , -1088, 10.37, true));
                scenicList.push(new Scenery("pineTree", -24322 , -1385, -5.1, true));
                scenicList.push(new Scenery("pineTree", -23705 , -1513, 16, true));
                scenicList.push(new Scenery("pineTree", -24062 , -1706, 8.864, true));
                scenicList.push(new Scenery("pineTree", -23859 , -2235, 9.2, true));
                scenicList.push(new Scenery("pineTree", -23687 , -2627, -7.12, true));
                scenicList.push(new Scenery("pineTree", -24992 , -1579, -3.9, true));
                scenicList.push(new Scenery("pineTree", -24561 , -1965, -6.3, true));
                scenicList.push(new Scenery("pineTree", -24146 , -2050, -2.5, true));
                scenicList.push(new Scenery("pineTree", -24927 , -2450, 4.444, true));
                scenicList.push(new Scenery("pineTree", -24461 , -2299, 6.75, true));
                scenicList.push(new Scenery("pineTree", -24323 , -2744, -3.33, true));
                scenicList.push(new Scenery("pineTree", -24646 , -2924, -2.2, true));
                scenicList.push(new Scenery("pineTree", -23897 , -3066, 0.19, true));
                scenicList.push(new Scenery("pineTree", -24054 , -3525, 0, true));
                scenicList.push(new Scenery("pineTree", -24280 , -3092, 8.88, true));
                scenicList.push(new Scenery("pineTree", -24674 , -3346, 2, true));
                scenicList.push(new Scenery("pineTree", -24367 , -1000, 3, true));
                scenicList.push(new Scenery("pineTree", -25064 , -3010, -10, true));

                //south trees
                //scenicList.push(new Scenery("pineTree", -24323 , -2744, -3.33, true));
                //scenicList.push(new Scenery("pineTree", -24646 , -2924, -2.2, true));
                //scenicList.push(new Scenery("pineTree", -23897 , -3066, 0.19, true));
                //scenicList.push(new Scenery("pineTree", -24054 , -3525, 0, true));
                //scenicList.push(new Scenery("pineTree", -24280 , -3092, 8.88, true));
                //scenicList.push(new Scenery("pineTree", -24674 , -3346, 2, true));
                //scenicList.push(new Scenery("pineTree", -25064 , -3010, -10, true));
                //scenicList.push(new Scenery("pineTree", -32604 , -3450, -8, true));
                //scenicList.push(new Scenery("pineTree", -32995 , -3536, -4.46, true));
                //scenicList.push(new Scenery("pineTree", -32750 , -3092, 2, true));
                //scenicList.push(new Scenery("pineTree", -32392 , -2822, -3.8, true));
                //scenicList.push(new Scenery("pineTree", -32906 , -2767, 5, true));
                //scenicList.push(new Scenery("pineTree", -33156 , -3023, 6, true));
                //scenicList.push(new Scenery("pineTree", -33499 , -3322, -5.3, true));
                //scenicList.push(new Scenery("pineTree", -33213 , -3006, -7.73, true));
                //scenicList.push(new Scenery("pineTree", -32906 , -2767, 3.8, true));
                //scenicList.push(new Scenery("pineTree", -33703 , -2805, 9, true));
                scenicList.push(new Scenery("pineTree", -25237 , -3468, 12, true));
                scenicList.push(new Scenery("pineTree", -25765 , -2989, 2, true));
                scenicList.push(new Scenery("pineTree", -26046 , -3314, 4, true));
                scenicList.push(new Scenery("pineTree", -25741 , -3637, 7, true));
                scenicList.push(new Scenery("pineTree", -25579 , -3301, 5, true));
                scenicList.push(new Scenery("pineTree", -26097 , -2818, 3.2, true));
                scenicList.push(new Scenery("pineTree", -26440 , -2967, -1.8, true));
                scenicList.push(new Scenery("pineTree", -26477 , -3500, 3.7, true));
                scenicList.push(new Scenery("pineTree", -26750 , -3155, 6, true));
                scenicList.push(new Scenery("pineTree", -27126 , -2881, 1.8, true));
                scenicList.push(new Scenery("pineTree", -27251 , -3287, 5, true));
                scenicList.push(new Scenery("pineTree", -27026 , -3498, 3, true));
                scenicList.push(new Scenery("pineTree", -27736 , -3420, 4.6, true));
                scenicList.push(new Scenery("pineTree", -27578 , -3199, 3.2, true));
                scenicList.push(new Scenery("pineTree", -27473 , -2943, 5.6, true));
                scenicList.push(new Scenery("pineTree", -27799 , -2971, 2, true));
                scenicList.push(new Scenery("pineTree", -25410 , -2954, 3, true));
                scenicList.push(new Scenery("pineTree", -28033 , -3223, 6, true));
                scenicList.push(new Scenery("pineTree", -28260 , -3567, 4, true));
                scenicList.push(new Scenery("pineTree", -28369 , -2844, 3.4, true));
                scenicList.push(new Scenery("pineTree", -28470 , -3119, 5, true));
                scenicList.push(new Scenery("pineTree", -28757 , -3338, 4.1, true));
                scenicList.push(new Scenery("pineTree", -29351 , -2984, 3, true));
                scenicList.push(new Scenery("pineTree", -28877 , -2992, 9, true));
                scenicList.push(new Scenery("pineTree", -29296 , -3304, 5, true));
                scenicList.push(new Scenery("pineTree", -29677 , -3554, 4, true));
                scenicList.push(new Scenery("pineTree", -29868 , -3207, 3.1, true));
                scenicList.push(new Scenery("pineTree", -29172 , -84, 3.6, true));
                scenicList.push(new Scenery("pineTree", -30465 , -3376, 6.7, true));
                scenicList.push(new Scenery("pineTree", -30477 , -2868, 3.9, true));
                scenicList.push(new Scenery("pineTree", -31060 , -3523, 3, true));
                scenicList.push(new Scenery("pineTree", -31079 , -3120, 1, true));
                scenicList.push(new Scenery("pineTree", -31338 , -2791, 5, true));
                scenicList.push(new Scenery("pineTree", -31563 , -3363, 4.2, true));
                scenicList.push(new Scenery("pineTree", -31696 , -3021, 5.9, true));
                scenicList.push(new Scenery("pineTree", -31993 , -3529, 0.9, true));
                scenicList.push(new Scenery("pineTree", -32095 , -2855, 5.2, true));
                scenicList.push(new Scenery("pineTree", -32295 , -3293, 3, true));

                //east trees
                scenicList.push(new Scenery("pineTree", -32545 , -2522, 1, true));
                scenicList.push(new Scenery("pineTree", -32334 , -2205, 5.2, true));
                scenicList.push(new Scenery("pineTree", -32482 , -1700, 3.8, true));
                scenicList.push(new Scenery("pineTree", -33350 , -2564, 7.1, true));
                scenicList.push(new Scenery("pineTree", -32946 , -2242, 2.242, true));
                scenicList.push(new Scenery("pineTree", -33498 , -2098, -6, true));
                scenicList.push(new Scenery("pineTree", -33081 , -1820, 11, true));
                scenicList.push(new Scenery("pineTree", -32842 , -1483, 13, true));
                scenicList.push(new Scenery("pineTree", -32604 , -3450, -8, true));
                scenicList.push(new Scenery("pineTree", -32995 , -3536, -4.46, true));
                scenicList.push(new Scenery("pineTree", -32750 , -3092, 2, true));
                scenicList.push(new Scenery("pineTree", -32392 , -2822, -3.8, true));
                scenicList.push(new Scenery("pineTree", -32906 , -2767, 5, true));
                scenicList.push(new Scenery("pineTree", -33156 , -3023, 6, true));
                scenicList.push(new Scenery("pineTree", -33499 , -3322, -5.3, true));
                scenicList.push(new Scenery("pineTree", -33213 , -3006, -7.73, true));
                scenicList.push(new Scenery("pineTree", -32906 , -2767, 3.8, true));
                scenicList.push(new Scenery("pineTree", -33703 , -2805, 9, true));
                scenicList.push(new Scenery("pineTree", -33660 , -1621, -10, true));
                scenicList.push(new Scenery("pineTree", -33703 , -2805, 9, true));
                scenicList.push(new Scenery("pineTree", -33267 , -1180, 14, true));
                scenicList.push(new Scenery("pineTree", -32553 , -1309, -15.5, true));
                scenicList.push(new Scenery("pineTree", -32309 , -1088, 2.198983648723, true));
                scenicList.push(new Scenery("pineTree", -32706 , -958, 3, true));
                scenicList.push(new Scenery("pineTree", -33801 , -776, 1, true));
                scenicList.push(new Scenery("pineTree", -33304 , -701, -2.35, true));
                scenicList.push(new Scenery("pineTree", -32913 , -478, 0, true));
                scenicList.push(new Scenery("pineTree", -32599 , -25, -1, true));
                scenicList.push(new Scenery("pineTree", -33579 , -320, -20, true));
                scenicList.push(new Scenery("pineTree", -33386 , 65, 0, true));
                scenicList.push(new Scenery("pineTree", -33027 , -159, 2, true));
                scenicList.push(new Scenery("pineTree", -32772, 449, 0, true));
                scenicList.push(new Scenery("pineTree", -32772 , 449, 13.321, true));
                scenicList.push(new Scenery("pineTree", -33143 , 337, 1.4, true));
                scenicList.push(new Scenery("pineTree", -32819 , 1063, -8.214, true));
                scenicList.push(new Scenery("pineTree", -32985 , 749, -1.88, true));
                scenicList.push(new Scenery("pineTree", -33323 , 940, 11, true));
                scenicList.push(new Scenery("pineTree", -33654 , 1025, 0.5, true));
                scenicList.push(new Scenery("pineTree", -33799 , 288, 10, true));
                scenicList.push(new Scenery("pineTree", -33408 , 631, 1.6, true));
                scenicList.push(new Scenery("pineTree", -32438 , 1616, 0.25, true));
                scenicList.push(new Scenery("pineTree", -32630 , 1940, -0.75, true));
                scenicList.push(new Scenery("pineTree", -32312 , 2303, -12.55555, true));
                scenicList.push(new Scenery("pineTree", -32736 , 2532, 3.9, true));
                scenicList.push(new Scenery("pineTree", -32299 , 2885, 3.7, true));
                scenicList.push(new Scenery("pineTree", -32483, 3180, 7.15, true));
                scenicList.push(new Scenery("pineTree", -32599 , 3580, 2.242, true));
                scenicList.push(new Scenery("pineTree", -32450 , 3898, -6, true));
                scenicList.push(new Scenery("pineTree", -32386 , 4502, 11, true));
                scenicList.push(new Scenery("pineTree", -32585 , 4910, 13, true));
                scenicList.push(new Scenery("pineTree", -32929 , 4656, -8, true));
                scenicList.push(new Scenery("pineTree", -32824 , 5229, -4.46, true));
                scenicList.push(new Scenery("pineTree", -32491 , 5555, 5, true));
                scenicList.push(new Scenery("pineTree", -33030 , 5448, -3.8, true));
                scenicList.push(new Scenery("pineTree", -33516 , 5174, -17, true));
                scenicList.push(new Scenery("pineTree", -32700 , 5990, -9, true));
                scenicList.push(new Scenery("pineTree", -32391 , 6232, 3.4, true));
                scenicList.push(new Scenery("pineTree", -32478 , 6524, -5.443, true));
                scenicList.push(new Scenery("pineTree", -32925 , 6310, 7.75, true));
                scenicList.push(new Scenery("pineTree", -33352 , 6480, -3.95, true));
                scenicList.push(new Scenery("pineTree", -33239 , 6077, -2.39239, true));
                scenicList.push(new Scenery("pineTree", -33706 , 6188, 10.45, true));
                scenicList.push(new Scenery("pineTree", -33551 , 5652, 12.85, true));
                scenicList.push(new Scenery("pineTree", -32851 , 5714, -13.1, true));
                scenicList.push(new Scenery("pineTree", -33178 , 5018, -4.4545, true));
                scenicList.push(new Scenery("pineTree", -33491 , 4775, -1.45, true));
                scenicList.push(new Scenery("pineTree", -33333 , 4425, 3.33333333, true));
                scenicList.push(new Scenery("pineTree", -33649 , 4107, -12.85, true));
                scenicList.push(new Scenery("pineTree", -33146 , 4131, 18, true));
                scenicList.push(new Scenery("pineTree", -33000 , 3767, 13.11, true));
                scenicList.push(new Scenery("pineTree", -32609 , 4195, 15.55, true));
                scenicList.push(new Scenery("pineTree", -33035 , 1713, 15.55, true));
                scenicList.push(new Scenery("pineTree", -33397 , 1567, 0, true));
                scenicList.push(new Scenery("pineTree", -33787 , 1495, 1.2, true));
                scenicList.push(new Scenery("pineTree", -33003 , 2122, 2.2, true));
                scenicList.push(new Scenery("pineTree", -33203 , 2407, 3.2, true));
                scenicList.push(new Scenery("pineTree", -33365 , 1910, 1.1, true));
                scenicList.push(new Scenery("pineTree", -33611 , 2246, 5.5, true));
                scenicList.push(new Scenery("pineTree", -33541 , 2684, 6.2, true));
                scenicList.push(new Scenery("pineTree", -33010 , 2814, -7.2, true));
                scenicList.push(new Scenery("pineTree", -32714 , 2946, -8.2, true));
                scenicList.push(new Scenery("pineTree", -32963 , 3282, 0, true));
                scenicList.push(new Scenery("pineTree", -33268 , 3074, -1, true));
                scenicList.push(new Scenery("pineTree", -33510 , 3432, -2.3, true));
                scenicList.push(new Scenery("pineTree", -33795 , 3727, -5, true));
                scenicList.push(new Scenery("pineTree", -33381 , 3837, -1, true));





                //central trees
                scenicList.push(new Scenery("pineTree", -25204 , -2656, 5, true));
                scenicList.push(new Scenery("pineTree", -25237 , -2351, 1, true));
                scenicList.push(new Scenery("pineTree", -25655 , -2247, 3, true));
                scenicList.push(new Scenery("pineTree", -24941 , -2154, 4, true));
                scenicList.push(new Scenery("pineTree", -25050 , -1895, 2.2, true));
                scenicList.push(new Scenery("pineTree", -25317 , -2092, 4.2, true));
                scenicList.push(new Scenery("pineTree", -25822 , -1999, 5.2, true));
                scenicList.push(new Scenery("pineTree", -25736 , -1697, 4, true));
                scenicList.push(new Scenery("pineTree", -25259 , -1301, 5.7, true));
                scenicList.push(new Scenery("pineTree", -25640 , -1423, 2.3, true));
                scenicList.push(new Scenery("pineTree", -26168 , -1820, 5.9, true));
                scenicList.push(new Scenery("pineTree", -25414 , -1788, 3.5, true));
                scenicList.push(new Scenery("pineTree", -26057 , -1518, 1.4, true));
                scenicList.push(new Scenery("pineTree", -25969 , -1188, 4.6, true));
                scenicList.push(new Scenery("pineTree", -26490 , -1286, 2, true));
                scenicList.push(new Scenery("pineTree", -26765 , -1572, 5.4, true));
                scenicList.push(new Scenery("pineTree", -25553 , -928, 1.7, true));
                scenicList.push(new Scenery("pineTree", -26273 , -897, 5.6, true));
                scenicList.push(new Scenery("pineTree", -25228 , -641, 3.9, true));
                scenicList.push(new Scenery("pineTree", -25994 , -548, 3.5, true));
                scenicList.push(new Scenery("pineTree", -26877 , -2671, 2, true));
                scenicList.push(new Scenery("pineTree", -26386 , -2470, 5, true));
                scenicList.push(new Scenery("pineTree", -26813 , -2315, 1.7, true));
                scenicList.push(new Scenery("pineTree", -26135 , -2224, 9, true));
                scenicList.push(new Scenery("pineTree", -26558 , -2027, 2.4, true));
                scenicList.push(new Scenery("pineTree", -26969 , -2030, 3.8, true));
                scenicList.push(new Scenery("pineTree", -27305 , -2619, 4, true));
                scenicList.push(new Scenery("pineTree", -27182 , -2246, 1.8, true));
                scenicList.push(new Scenery("pineTree", -27134 , -1739, 7, true));
                scenicList.push(new Scenery("pineTree", -26430 , -1599, 2, true));
                scenicList.push(new Scenery("pineTree", -27330 , -1967, 6.2, true));
                scenicList.push(new Scenery("pineTree", -27577 , -2339, 0.4, true));
                scenicList.push(new Scenery("pineTree", -27691 , -2683, 5, true));
                scenicList.push(new Scenery("pineTree", -27630 , -2051, 3.3, true));
                scenicList.push(new Scenery("pineTree", -27518 , -1652, 4, true));
                scenicList.push(new Scenery("pineTree", -27225 , -1388, 2.1, true));
                scenicList.push(new Scenery("pineTree", -26889 , -1183, 3.7, true));
                scenicList.push(new Scenery("pineTree", -26661 , -958, 5.3, true));
                scenicList.push(new Scenery("pineTree", -26965 , -907, 1.9, true));
                scenicList.push(new Scenery("pineTree", -27278 , -1065, 5, true));
                scenicList.push(new Scenery("pineTree", -27583 , -1300, 4.2, true));
                scenicList.push(new Scenery("pineTree", -26686 , -688, 0.6, true));
                scenicList.push(new Scenery("pineTree", -27675 , -946, 6, true));
                scenicList.push(new Scenery("pineTree", -27218 , -785, 5.3, true));
                scenicList.push(new Scenery("pineTree", -26994 , -519, 1.1, true));
                scenicList.push(new Scenery("pineTree", -26499 , -449, 9, true));
                scenicList.push(new Scenery("pineTree", -25844 , -162, 1, true));
                scenicList.push(new Scenery("pineTree", -26510 , -126, 3.4, true));
                scenicList.push(new Scenery("pineTree", -26150 , -152, 2, true));
                scenicList.push(new Scenery("pineTree", -25096 , -230, 1, true));
                scenicList.push(new Scenery("pineTree", -25499 , -318, 4.9, true));
                scenicList.push(new Scenery("pineTree", -25825 , 373, 7.3, true));
                scenicList.push(new Scenery("pineTree", -26829 , -288, 3, true));
                scenicList.push(new Scenery("pineTree", -27417 , -501, 1, true));
                scenicList.push(new Scenery("pineTree", -27180 , -293, 3.8, true));
                scenicList.push(new Scenery("pineTree", -26848 , 39, 0.3, true));
                scenicList.push(new Scenery("pineTree", -25716 , 804, 1, true));
                scenicList.push(new Scenery("pineTree", -25341 , 1032, 5, true));
                scenicList.push(new Scenery("pineTree", -26540 , 245, 6, true));
                scenicList.push(new Scenery("pineTree", -26261 , 581, 2, true));
                scenicList.push(new Scenery("pineTree", -26696 , 483, 4, true));
                scenicList.push(new Scenery("pineTree", -26568 , 750, 3.4, true));
                scenicList.push(new Scenery("pineTree", -26171 , 919, 2.4, true));
                scenicList.push(new Scenery("pineTree", -25785 , 1082, 5, true));
                scenicList.push(new Scenery("pineTree", -27058 , 272, 1.2, true));
                scenicList.push(new Scenery("pineTree", -27555 , -730, 8, true));
                scenicList.push(new Scenery("pineTree", -27651 , -56, 3, true));
                scenicList.push(new Scenery("pineTree", -27182 , -17, 4, true));
                scenicList.push(new Scenery("pineTree", -27441 , 397, 3.1, true));
                scenicList.push(new Scenery("pineTree", -27105 , 734, 1, true));
                scenicList.push(new Scenery("pineTree", -26903 , 954, 5.2, true));
                scenicList.push(new Scenery("pineTree", -26551 , 1054, 4.5, true));
                scenicList.push(new Scenery("pineTree", -26145 , 150, 3, true));
                scenicList.push(new Scenery("pineTree", -27570 , 799, 5, true));
                scenicList.push(new Scenery("pineTree", -27421 , 1062, 2.6, true));
                scenicList.push(new Scenery("pineTree", -28021 , 991, 4.6, true));
                scenicList.push(new Scenery("pineTree", -28006 , 597, 1, true));
                scenicList.push(new Scenery("pineTree", -28091 , 282, 5, true));
                scenicList.push(new Scenery("pineTree", -27795 , -374, 8.4, true));
                scenicList.push(new Scenery("pineTree", -27951 , -639, 5.3, true));
                scenicList.push(new Scenery("pineTree", -28483 , 839, 4, true));
                scenicList.push(new Scenery("pineTree", -28598 , 501, 2.3, true));
                scenicList.push(new Scenery("pineTree", -28673 , 147, 7, true));
                scenicList.push(new Scenery("pineTree", -28171 , -88, 4.33, true));
                scenicList.push(new Scenery("pineTree", -28120 , -337, 1, true));
                scenicList.push(new Scenery("pineTree", -28078 , -896, 3, true));
                scenicList.push(new Scenery("pineTree", -27981 , -1188, 4.9, true));
                scenicList.push(new Scenery("pineTree", -28624 , -242, 1.3, true));
                scenicList.push(new Scenery("pineTree", -28416 , -575, 1.8, true));
                scenicList.push(new Scenery("pineTree", -28632 , -860, 2, true));
                scenicList.push(new Scenery("pineTree", -28545 , -1205, 6, true));
                scenicList.push(new Scenery("pineTree", -28116 , -1485, 5.3, true));
                scenicList.push(new Scenery("pineTree", -28544 , 1745, 3.7, true));
                scenicList.push(new Scenery("pineTree", -28118 , -1847, 3, true));
                scenicList.push(new Scenery("pineTree", -28041 , -2230, 10, true));
                scenicList.push(new Scenery("pineTree", -28372 , -2490, 1.5, true));
                scenicList.push(new Scenery("pineTree", -28088 , -2700, 7, true));
                scenicList.push(new Scenery("pineTree", -29172 , -84, 3, true));
                scenicList.push(new Scenery("pineTree", -29040 , -510, 2, true));
                scenicList.push(new Scenery("pineTree", -29631 , -312, 6, true));
                scenicList.push(new Scenery("pineTree", -29613 , -715, 4, true));
                scenicList.push(new Scenery("pineTree", -29136 , -1005, 2.5, true));
                scenicList.push(new Scenery("pineTree", -29071 , -1384, 5, true));
                scenicList.push(new Scenery("pineTree", -28694 , -1613, 3, true));
                scenicList.push(new Scenery("pineTree", -28697 , -2057, 2, true));
                scenicList.push(new Scenery("pineTree", -29296 , -1813, 6, true));
                scenicList.push(new Scenery("pineTree", -29253 , -2365, 1, true));
                scenicList.push(new Scenery("pineTree", -28972 , -2716, 4.6, true));
                scenicList.push(new Scenery("pineTree", -29753 , -2642, 3, true));
                scenicList.push(new Scenery("pineTree", -29747 , -2076, 8, true));
                scenicList.push(new Scenery("pineTree", -30253 , -2326, 2, true));
                scenicList.push(new Scenery("pineTree", -29876 , -1592, 6, true));
                scenicList.push(new Scenery("pineTree", -29783 , -1192, 3, true));
                scenicList.push(new Scenery("pineTree", -29099 , 1015, 4, true));
                scenicList.push(new Scenery("pineTree", -29379 , 665, 2.1, true));
                scenicList.push(new Scenery("pineTree", -29258 , 324, 7, true));
                scenicList.push(new Scenery("pineTree", -29693 , 115, 3, true));
                scenicList.push(new Scenery("pineTree", -30175 , 654, 2, true));
                scenicList.push(new Scenery("pineTree", -29857 , 1048, 9, true));
                scenicList.push(new Scenery("pineTree", -30805 , -2442, 2.7, true));
                scenicList.push(new Scenery("pineTree", -30455 , -1826, 2.6, true));
                scenicList.push(new Scenery("pineTree", -30972 , -2029, 5.3, true));
                scenicList.push(new Scenery("pineTree", -31469 , -2262, 3,7, true));
                scenicList.push(new Scenery("pineTree", -30480 , -1318, 1, true));
                scenicList.push(new Scenery("pineTree", -31019 , -1512, 1.8, true));
                scenicList.push(new Scenery("pineTree", -31395 , -1809, 2.4, true));
                scenicList.push(new Scenery("pineTree", -31912 , -2517, 3, true));
                scenicList.push(new Scenery("pineTree", -31835 , -1971, 2.1, true));
                scenicList.push(new Scenery("pineTree", -32151 , -1387, 4.2, true));
                scenicList.push(new Scenery("pineTree", -31636 , -1478, 1.4, true));
                scenicList.push(new Scenery("pineTree", -31308 , -1050, 3, true));
                scenicList.push(new Scenery("pineTree", -30376 , -875, 2, true));
                scenicList.push(new Scenery("pineTree", -30171 , -479, 1, true));
                scenicList.push(new Scenery("pineTree", -30393 , -39, 6, true));
                scenicList.push(new Scenery("pineTree", -30608 , 354, 2.8, true));
                scenicList.push(new Scenery("pineTree", -30653 , 986, 0.3, true));
                scenicList.push(new Scenery("pineTree", -30966 , 772, 7, true));
                scenicList.push(new Scenery("pineTree", -32234 , 1066, 2, true));
                scenicList.push(new Scenery("pineTree", -32053 , 608, 1.4, true));
                scenicList.push(new Scenery("pineTree", -31731 , 901, 9.1, true));
                scenicList.push(new Scenery("pineTree", -32191 , -374, 6, true));
                scenicList.push(new Scenery("pineTree", -32243 , -788, 3.7, true));
                scenicList.push(new Scenery("pineTree", -32283 , 285, 2.3, true));
                scenicList.push(new Scenery("pineTree", -31906 , 90, 0.4, true));
                scenicList.push(new Scenery("pineTree", -31939 , -1095, 6, true));
                scenicList.push(new Scenery("pineTree", -31292 , 1047, 2.1, true));
                scenicList.push(new Scenery("pineTree", -31455 , 550, 1, true));
                scenicList.push(new Scenery("pineTree", -31165 , 329, 4, true));
                scenicList.push(new Scenery("pineTree", -31042 , 11, 1.8, true));
                scenicList.push(new Scenery("pineTree", -31493 , 138, 5, true));
                scenicList.push(new Scenery("pineTree", -31619 , -361, 4.8, true));
                scenicList.push(new Scenery("pineTree", -31398 , -126, 2.3, true));
                scenicList.push(new Scenery("pineTree", -30746 , -369, 3, true));
                scenicList.push(new Scenery("pineTree", -31164 , -595, 0.8, true));
                scenicList.push(new Scenery("pineTree", -30878 , -1099, 2.1, true));
                scenicList.push(new Scenery("pineTree", -32482 , 774, 3, true));
                scenicList.push(new Scenery("pineTree", -31768 , -753, 0, true));
                scenicList.push(new Scenery("pineTree", -26557 , 5405, 2, true));
                scenicList.push(new Scenery("pineTree", -26078 , 5599, 1, true));
                scenicList.push(new Scenery("pineTree", -26173 , 5301, 3, true));
                scenicList.push(new Scenery("pineTree", -25907 , 5028, 2.9, true));
                scenicList.push(new Scenery("pineTree", -26244 , 4886, 4.3, true));
                scenicList.push(new Scenery("pineTree", -26078 , 5599, 5.7, true));
                scenicList.push(new Scenery("pineTree", -26144 , 4613, 6.7, true));
                scenicList.push(new Scenery("pineTree", -26617 , 5116, 3.5, true));
                scenicList.push(new Scenery("pineTree", -26863 , 5634, 1.2, true));
                scenicList.push(new Scenery("pineTree", -27067 , 5354, 2, true));
                scenicList.push(new Scenery("pineTree", -27088 , 4970, 4.5, true));
                scenicList.push(new Scenery("pineTree", -26783 , 4724, 3.1, true));
                scenicList.push(new Scenery("pineTree", -25889 , 4230, 5.2, true));
                scenicList.push(new Scenery("pineTree", -25456 , 3979, 1, true));
                scenicList.push(new Scenery("pineTree", -25913 , 3874, 3.7, true));
                scenicList.push(new Scenery("pineTree", -25573 , 3553, 1.8, true));
                scenicList.push(new Scenery("pineTree", -25404 , 3290, 8, true));
                scenicList.push(new Scenery("pineTree", -25933 , 3244, 4, true));
                scenicList.push(new Scenery("pineTree", -25653 , 2925, 3, true));
                scenicList.push(new Scenery("pineTree", -25379 , 2570, 1.2, true));
                scenicList.push(new Scenery("pineTree", -26057 , 1695, 2.8, true));
                scenicList.push(new Scenery("pineTree", -25706 , 1977, 1.1, true));
                scenicList.push(new Scenery("pineTree", -25303 , 2042, 5.7, true));
                scenicList.push(new Scenery("pineTree", -25658 , 2315, 3.6, true));
                scenicList.push(new Scenery("pineTree", -26112 , 2155, 6, true));
                scenicList.push(new Scenery("pineTree", -25965 , 2597, 2.5, true));
                scenicList.push(new Scenery("pineTree", -26236 , 3530, 5, true));
                scenicList.push(new Scenery("pineTree", -26344 , 3816, 2, true));
                scenicList.push(new Scenery("pineTree", -26433 , 4271, 0.4, true));
                scenicList.push(new Scenery("pineTree", -26861 , 4349, 1, true));
                scenicList.push(new Scenery("pineTree", -26743 , 3611, 4.2, true));
                scenicList.push(new Scenery("pineTree", -26619 , 3343, 1.3, true));
                scenicList.push(new Scenery("pineTree", -26388 , 3053, 0, true));
                scenicList.push(new Scenery("pineTree", -26022 , 2979, 6, true));
                scenicList.push(new Scenery("pineTree", -26428 , 2753, 3, true));
                scenicList.push(new Scenery("pineTree", -26407 , 2462, 2, true));
                scenicList.push(new Scenery("pineTree", -26619 , 2193, 1, true));
                scenicList.push(new Scenery("pineTree", -26369 , 1919, 5.7, true));
                scenicList.push(new Scenery("pineTree", -26664 , 1603, 2.2, true));
                scenicList.push(new Scenery("pineTree", -26850 , 3095, 3, true));
                scenicList.push(new Scenery("pineTree", -26984 , 3440, 2.7, true));
                scenicList.push(new Scenery("pineTree", -27202 , 3243, 1, true));
                scenicList.push(new Scenery("pineTree", -26798 , 2575, 6, true));
                scenicList.push(new Scenery("pineTree", -27000 , 2398, 3, true));
                scenicList.push(new Scenery("pineTree", -27056 , 2125, 2, true));
                scenicList.push(new Scenery("pineTree", -26873 , 1908, 5, true));
                scenicList.push(new Scenery("pineTree", -27201 , 1728, 3, true));
                scenicList.push(new Scenery("pineTree", -26929 , 2853, 0, true));
                scenicList.push(new Scenery("pineTree", -27207 , 2671, 5.6, true));
                scenicList.push(new Scenery("pineTree", -27421 , 2359, 1.4, true));
                scenicList.push(new Scenery("pineTree", -27443 , 1923, 3.3, true));
                scenicList.push(new Scenery("pineTree", -27667 , 1617, 0.3, true));
                scenicList.push(new Scenery("pineTree", -26786 , 4018, 2.5, true));
                scenicList.push(new Scenery("pineTree", -28165 , 1576, 6, true));
                scenicList.push(new Scenery("pineTree", -28023 , 1822, 2, true));
                scenicList.push(new Scenery("pineTree", -27850 , 2081, 3, true));
                scenicList.push(new Scenery("pineTree", -28313 , 2071, 5.2, true));
                scenicList.push(new Scenery("pineTree", -27955 , 2461, 1, true));
                scenicList.push(new Scenery("pineTree", -27712 , 2756, 0.1, true));
                scenicList.push(new Scenery("pineTree", -27424 , 2976, 4, true));
                scenicList.push(new Scenery("pineTree", -27721 , 3250, 2, true));
                scenicList.push(new Scenery("pineTree", -27483 , 3535, 2.9, true));
                scenicList.push(new Scenery("pineTree", -27217 , 3870, 5, true));
                scenicList.push(new Scenery("pineTree", -27219 , 4623, 1, true));
                scenicList.push(new Scenery("pineTree", -27286 , 4183, 0.7, true));
                scenicList.push(new Scenery("pineTree", -27705 , 4011, 3, true));
                scenicList.push(new Scenery("pineTree", -27816 , 3726, 0, true));
                scenicList.push(new Scenery("pineTree", -28143 , 3578, 1, true));
                scenicList.push(new Scenery("pineTree", -28199 , 3904, 6, true));
                scenicList.push(new Scenery("pineTree", -27725 , 5595, 2, true));
                scenicList.push(new Scenery("pineTree", -25080 , 679, 1.8, true));
                scenicList.push(new Scenery("pineTree", -29000 , 2500, 0, true));
                scenicList.push(new Scenery("pineTree", -28393 , 5561, 0.1, true));
                scenicList.push(new Scenery("pineTree", -27571 , 5235, 6, true));
                scenicList.push(new Scenery("pineTree", -28914 , 5421, 2.1, true));
                scenicList.push(new Scenery("pineTree", -29267 , 5639, 3, true));
                scenicList.push(new Scenery("pineTree", -29763 , 5491, 1.1, true));
                scenicList.push(new Scenery("pineTree", -30222 , 5446, 4, true));
                scenicList.push(new Scenery("pineTree", -30635 , 5633, 2.8, true));
                scenicList.push(new Scenery("pineTree", -31094 , 5492, 5.1, true));
                scenicList.push(new Scenery("pineTree", -31591 , 5590, 0.1, true));
                scenicList.push(new Scenery("pineTree", -32011 , 5451, 6, true));
                scenicList.push(new Scenery("pineTree", -32249 , 5176, 2.1, true));
                scenicList.push(new Scenery("pineTree", -29055 , 1643, 4, true));
                scenicList.push(new Scenery("pineTree", -28965 , 2022, 5.3, true));
                scenicList.push(new Scenery("pineTree", -28493 , 2457, 3.1, true));
                scenicList.push(new Scenery("pineTree", -28268 , 2751, 0, true));
                scenicList.push(new Scenery("pineTree", -28043 , 3053, 1, true));
                scenicList.push(new Scenery("pineTree", -28320 , 3252, 2, true));
                scenicList.push(new Scenery("pineTree", -28613 , 2992, 3, true));
                scenicList.push(new Scenery("pineTree", -29008 , 2896, 6, true));
                scenicList.push(new Scenery("pineTree", -29444 , 1889, 4, true));
                scenicList.push(new Scenery("pineTree", -29368 , 2233, 2.5, true));
                scenicList.push(new Scenery("pineTree", -29366 , 2769, 3, true));
                scenicList.push(new Scenery("pineTree", -29652 , 1573, 5, true));
                scenicList.push(new Scenery("pineTree", -27667 , 4399, 0.4, true));
                scenicList.push(new Scenery("pineTree", -27537 , 4935, 2, true));
                scenicList.push(new Scenery("pineTree", -27755 , 4688, 4, true));
                scenicList.push(new Scenery("pineTree", -31610 , 5257, 1, true));
                scenicList.push(new Scenery("pineTree", -30665 , 5272, 3, true));
                scenicList.push(new Scenery("pineTree", -27287 , 5659, 0, true));
                scenicList.push(new Scenery("pineTree", -28102 , 5319, 2, true));
                scenicList.push(new Scenery("pineTree", -27945 , 5043, 4, true));
                scenicList.push(new Scenery("pineTree", -28087 , 4495, 5, true));
                scenicList.push(new Scenery("pineTree", -28353 , 4798, 0.8, true));
                scenicList.push(new Scenery("pineTree", -28632 , 5130, 4.3, true));
                scenicList.push(new Scenery("pineTree", -29348 , 5309, 0, true));
                scenicList.push(new Scenery("pineTree", -29069 , 5020, 6, true));
                scenicList.push(new Scenery("pineTree", -28748 , 4753, 2, true));
                scenicList.push(new Scenery("pineTree", -28601 , 4417, 1, true));
                scenicList.push(new Scenery("pineTree", -28290 , 4262, 3, true));
                scenicList.push(new Scenery("pineTree", -28759 , 4099, 4, true));
                scenicList.push(new Scenery("pineTree", -29940 , 1863, 5, true));
                scenicList.push(new Scenery("pineTree", -29760 , 2135, 0, true));
                scenicList.push(new Scenery("pineTree", -29599 , 2515, 2, true));
                scenicList.push(new Scenery("pineTree", -30370 , 1636, 1.3, true));
                scenicList.push(new Scenery("pineTree", -28732 , 3321, 4, true));
                scenicList.push(new Scenery("pineTree", -28655 , 3695, 3, true));
                scenicList.push(new Scenery("pineTree", -29071 , 4507, 5, true));
                scenicList.push(new Scenery("pineTree", -29406 , 4145, 0.7, true));
                scenicList.push(new Scenery("pineTree", -29219 , 3847, 2, true));
                scenicList.push(new Scenery("pineTree", -29866 , 5074, 0, true));
                scenicList.push(new Scenery("pineTree", -29494 , 4879, 7, true));
                scenicList.push(new Scenery("pineTree", -29617 , 4529, 3, true));
                scenicList.push(new Scenery("pineTree", -29185 , 3535, 4, true));
                scenicList.push(new Scenery("pineTree", -29407 , 3203, 1, true));
                scenicList.push(new Scenery("pineTree", -29648 , 3473, 0.6, true));
                scenicList.push(new Scenery("pineTree", -29626 , 3804, 4.7, true));
                scenicList.push(new Scenery("pineTree", -29981 , 4258, 3, true));
                scenicList.push(new Scenery("pineTree", -30023 , 4768, 1.3, true));
                scenicList.push(new Scenery("pineTree", -30335 , 5101, 5, true));
                scenicList.push(new Scenery("pineTree", -29871 , 3130, 0.2, true));
                scenicList.push(new Scenery("pineTree", -29981 , 2766, 4, true));
                scenicList.push(new Scenery("pineTree", -30424 , 1945, 3, true));
                scenicList.push(new Scenery("pineTree", -30108 , 2456, 1, true));
                scenicList.push(new Scenery("pineTree", -30821 , 1718, 2, true));
                scenicList.push(new Scenery("pineTree", -30499 , 2284, 5, true));
                scenicList.push(new Scenery("pineTree", -30449 , 2683, 0, true));
                scenicList.push(new Scenery("pineTree", -30336 , 3023, 0.9, true));
                scenicList.push(new Scenery("pineTree", -30175 , 3412, 6, true));
                scenicList.push(new Scenery("pineTree", -29952 , 4002, 4, true));
                scenicList.push(new Scenery("pineTree", -30255 , 3735, 1.6, true));
                scenicList.push(new Scenery("pineTree", -30901 , 2069, 5.1, true));
                scenicList.push(new Scenery("pineTree", -30324 , 4523, 1, true));
                scenicList.push(new Scenery("pineTree", -30565 , 4837, 5.6, true));
                scenicList.push(new Scenery("pineTree", -30490 , 4198, 0.2, true));
                scenicList.push(new Scenery("pineTree", -31192 , 1553, 3, true));
                scenicList.push(new Scenery("pineTree", -31321 , 1879, 2, true));
                scenicList.push(new Scenery("pineTree", -31656 , 1619, 5, true));
                scenicList.push(new Scenery("pineTree", -32036 , 1765, 7, true));
                scenicList.push(new Scenery("pineTree", -31869 , 2032, 0, true));
                scenicList.push(new Scenery("pineTree", -31491 , 2270, 1, true));
                scenicList.push(new Scenery("pineTree", -31015 , 2418, 3, true));
                scenicList.push(new Scenery("pineTree", -30872 , 2680, 4.6, true));
                scenicList.push(new Scenery("pineTree", -30822 , 4522, 2, true));
                scenicList.push(new Scenery("pineTree", -31103 , 5111, 4, true));
                scenicList.push(new Scenery("pineTree", -31876 , 5007, 0.8, true));
                scenicList.push(new Scenery("pineTree", -31077 , 4821, 1, true));
                scenicList.push(new Scenery("pineTree", -31598 , 4783, 2, true));
                scenicList.push(new Scenery("pineTree", -32053 , 4733, 0, true));
                scenicList.push(new Scenery("pineTree", -31946 , 2554, 5, true));
                scenicList.push(new Scenery("pineTree", -31520 , 2564, 6, true));
                scenicList.push(new Scenery("pineTree", -31294 , 2862, 2, true));
                scenicList.push(new Scenery("pineTree", -30821 , 3007, 1, true));
                scenicList.push(new Scenery("pineTree", -30685 , 3332, 4, true));
                scenicList.push(new Scenery("pineTree", -31814 , 2861, 0.4, true));
                scenicList.push(new Scenery("pineTree", -31976 , 3290, 3, true));
                scenicList.push(new Scenery("pineTree", -31310 , 3196, 5.2, true));
                scenicList.push(new Scenery("pineTree", -31300 , 4496, 1, true));
                scenicList.push(new Scenery("pineTree", -31123 , 3593, 0, true));
                scenicList.push(new Scenery("pineTree", -30712 , 3717, 1.8, true));
                scenicList.push(new Scenery("pineTree", -30888 , 3990, 4, true));
                scenicList.push(new Scenery("pineTree", -31379 , 4093, 5, true));
                scenicList.push(new Scenery("pineTree", -31811 , 4373, 6, true));
                scenicList.push(new Scenery("pineTree", -31967 , 4049, 0.7, true));
                scenicList.push(new Scenery("pineTree", -31419 , 3812, 2, true));
                scenicList.push(new Scenery("pineTree", -31892 , 3756, 3, true));
                scenicList.push(new Scenery("pineTree", -32197 , 3614, 1, true));
                scenicList.push(new Scenery("pineTree", -31604 , 3529, 5.3, true));

                //beasts of the wuntol woods
                ArtificialIntelligenceAccess.push(new Unit(-26262 , 3589, "Shehid", true, "Ulugla"));
                ArtificialIntelligenceAccess.push(new Unit(-26356 , 3728, "Shehid", false, "Ulukla"));
                ArtificialIntelligenceAccess.push(new Unit(-25373 , 1556, "Shehid", false, "omgluka"));


                //Plants of the wuntol woods
                scenicList.push(new Scenery("neprilnePlant", -25835 , 4096, -3.8, true));
                scenicList.push(new Scenery("neprilnePlant", -30852 , -2947, 8.8, true));
                scenicList.push(new Scenery("neprilnePlant", -29688 , 435, 2.11, true));
                scenicList.push(new Scenery("neprilnePlant", -25260 , 2293, -5.1, true));
                scenicList.push(new Scenery("neprilnePlant", -29025 , 5615, 5.9, true));
                scenicList.push(new Scenery("neprilnePlant", -27313 , 3382, 1.111, true));
                scenicList.push(new Scenery("pluttPlant", -26283 , 3675, 1.4, true));
                scenicList.push(new Scenery("pluttPlant", -29571 , 589, 2.3, true));
                scenicList.push(new Scenery("pluttPlant", -31154 , 4155, 8.101010101, true));
                scenicList.push(new Scenery("culprisPlant", -26995 , 2600, -4.5, true));
                scenicList.push(new Scenery("culprisPlant", -27410 , 2111, 0.12, true));
                scenicList.push(new Scenery("culprisPlant", -29127 , 2450, 2.7, true));
                scenicList.push(new Scenery("culprisPlant", -32098 , 1106, 5.3, true));
                scenicList.push(new Scenery("culprisPlant", -28822 , -2817, -2.2, true));
                scenicList.push(new Scenery("stomwikPlant", -25310 , 3144, 5, true));
                scenicList.push(new Scenery("stomwikPlant", -25778 , -1544, -9, true));
                scenicList.push(new Scenery("akerPlant", -28603 , 1695, -1.5, true));
                scenicList.push(new Scenery("akerPlant", -32353 , -2381, 3, true));
                scenicList.push(new Scenery("akerPlant", -25849 , -3101, 9.4, true));
                scenicList.push(new Scenery("akerPlant", -28241 , -1223, 14, true));
                scenicList.push(new Scenery("akerPlant", -28265 , 3003, -18, true));
                scenicList.push(new Scenery("akerPlant", -28375 , 3376, 20, true));
                scenicList.push(new Scenery("glinPlant", -28055 , 329, -10.54321, true));
                scenicList.push(new Scenery("glinPlant", -26608 , -1987, -12.24, true));
                scenicList.push(new Scenery("glinPlant", -25223 , -2741, 10, true));
                scenicList.push(new Scenery("glinPlant", -26298 , -558, -0.11, true));
                scenicList.push(new Scenery("glinPlant", -26268 , 3805, 7, true));
                scenicList.push(new Scenery("glinPlant", -26161 , 3535, 12, true));
                scenicList.push(new Scenery("glinPlant", -26200 , 3631, -10.10101, true));
                scenicList.push(new Scenery("glinPlant", -25296 , 1568, 1, true));
                scenicList.push(new Scenery("glinPlant", -30045 , 5911, -10.5, true));
                scenicList.push(new Scenery("glinPlant", -26545 , 3380, 2, true));
                scenicList.push(new Scenery("glinPlant", -26066 , 3152, 10.65, true));
                scenicList.push(new Scenery("glinPlant", -24958 , -1167, 0.61, true));
                scenicList.push(new Scenery("wyrPlant", -32224 , -2656, 1.9, true));
                scenicList.push(new Scenery("wyrPlant", -30055 , -26, 2.486, true));
                scenicList.push(new Scenery("wyrPlant", -30412 , 4928, 3.33, true));
                scenicList.push(new Scenery("cyrinthilimPlant", -32415 , -2877, 2.9, true));
                scenicList.push(new Scenery("cyrinthilimPlant", -26923 , 3407, 19, true));
                scenicList.push(new Scenery("halcifPlant", -27512 , -3081, -1.9, true));
                //scenicList.push(new Scenery("ogardPlant", -16292 , -2231, 0, true)); //this does not spawn in this part of the forrest

                //scenery
                if (Math.random() > 0.65)
                {
                    scenicList.push(new Scenery("temperatePondFishingSpot", -25825, -2623, 0.65, false)); //unique and self deletes on depleation
                }

                //events
                    //forager campout (nirwaden)
                if (Math.random() > 0.7)
                {
                    scenicList.push(new Scenery("tent", -25452, -2416, -1/5 * Math.PI, true));
                    if (Math.random() > 0.45)
                    {
                        scenicList.push(new Scenery("nirwadenGoods", -25516, -2417, 6, 1));
                    }
                    else
                    {
                        scenicList.push(new Scenery("nirwadenGoods", -25405, -2440, 5.4, 1));
                    }
                    scenicList.push(new Scenery("pluttPlant", -25337 , -2570, 3, "picked"));
                    scenicList.push(new Scenery("pluttPlant", -25349 , -2660, -5.5, "picked"));
                    if (Math.random() > 0.55)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-25528, -2509, "Person", false, "Forager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["none", [0.2, 0.25], 0, 0, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 3, patrolLoop: true, route:[[-25507, -2485], [-25387, -2608], [-25580, -2673]]}));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-25496, -2480, "Person", false, "Forager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["none", [0.2, 0.25], 0, 0, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-25516, -2492]]}));
                    }
                }
                else
                {
                    if (Math.random() > 0.6)
                    {
                        scenicList.push(new Scenery("pluttPlant", -25337 , -2570, 3, "picked"));
                        scenicList.push(new Scenery("pluttPlant", -25349 , -2660, -5.5, true));
                        ArtificialIntelligenceAccess.push(new Unit(-25408 , -2560, "BlackBear", false, "Ursa"));
                    }
                    else
                    {
                        if (Math.random() > 0.4)
                        {
                            scenicList.push(new Scenery("pluttPlant", -25337 , -2570, 3, true));
                            scenicList.push(new Scenery("pluttPlant", -25349 , -2660, -5.5, true));
                        }
                        else
                        {
                            scenicList.push(new Scenery("pluttPlant", -25337 , -2570, 3, "picked"));
                            scenicList.push(new Scenery("pluttPlant", -25349 , -2660, -5.5, "picked"));
                            ArtificialIntelligenceAccess.push(new Unit(-25512 , -2619, "BlackBear", true, "Ursula"));
                        }
                    }
                }
                //bandit attack!
                if (uniqueChars.nelgrefLDS)
                {
                    if (Math.random() > 0.79)
                    {
                        if (Math.random() > 0.495)
                        {

                            ArtificialIntelligenceAccess.push(new Unit(-30777, 1321, "Soldier", false, "Nelgref Bandit Scout", {race: "Freynor", faction: "hostile", con: 6, speed: 1.9, outfit: ["blackBearLeatherArmour", 4.25], weapon: ["freydicSword", [9, 4], 0, 17, 1.4], ranged: [false, "steelBolt", 11, 2250, 18, 40 /3, 0, "none", 7], patrolStops: 0, patrolLoop: true, route:[[3071, 314]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-30697, 1242, "Soldier", false, "Nelgref Bandit Scout", {race: "Freynor", faction: "hostile", con: 5, speed: 1.96, outfit: ["blackBearLeatherArmour", 4.4], weapon: ["freydicSword", [8, 5], 0, 17, 1.65], ranged: [false, "steelBolt", 11, 2250, 18, 40 /3, 0, "none", 7], patrolStops: 1, patrolLoop: true, route:[[-30591, 1235]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-31602, 1937, "Soldier", false, "Nelgref Bandit Scout", {race: "Freynor", faction: "hostile", con: 6, speed: 1.9, outfit: ["blackBearLeatherArmour", 4.25], weapon: ["freydicSword", [9, 4], 0, 17, 1.4], ranged: [false, "steelBolt", 11, 2250, 18, 40 /3, 0, "none", 7], patrolStops: 1, patrolLoop: true, route:[[-31577, 1902]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-24976, 864, "Soldier", false, "Nelgref Bandit Scout", {race: "Freynor", faction: "hostile", con: 5, speed: 1.96, outfit: ["blackBearLeatherArmour", 4.4], weapon: ["freydicSword", [8, 5], 0, 17, 1.65], ranged: [false, "steelBolt", 11, 2250, 18, 40 /3, 0, "none", 7], patrolStops: 1, patrolLoop: true, route:[[-24973, 891]]}));
                        }
                    }
                }

                //n-1 e-4 trees
                scenicList.push(new Scenery("pineTree", -34992 , 6702, 6, true));
                scenicList.push(new Scenery("pineTree", -34384, 6421, 5.3, true));

                change = "e3";
            }
        }
        else if (region == "e4") //atalin bridge
        {
            if (change != "e4")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                generator2(9786217, 193249, 242531, 33632203, 8967556824000, 1, -33912, 6507, true);
                cropper(-33912, 6507, -35953, 1571, true, true);

                generator2(2436217, 56679, 21, 3, 894000, 1, -33923, 1056, true);
                cropper(-33923, 1056, -35952, -3576, true, true);

                generator2(897, 27418911, 421534281, 8548903, 119, 1, -44150, -3266, true);
                cropper(-44150, -3266, -45175, -3598, true, true);

                for (var i = scenicList.length -1; i >= 0; i--)
                {
                    if (scenicList[i].type != "pineTree")
                    {
                        scenicList.splice(i, 1);
                    }
                }

                generator2(194838973478567290593490753765777, 874189889999927462711, 21264612647782889982392365641534281, 4291914929422375482332503, 3339769, 1, -40882, 3192, true);
                cropper(-40882, -3192, -44012, -3634, true, true);

                generator2(53765777, 99, 213974281, 332503, 100101000, 1, -33959, -3720, true);
                cropper(-40435, -3624, -44055, -4521, true, true);

                //s-1-e-5
                generator2(789678567456345678, 87675674567589, 23453467578, 87967857598607, 775764427, 1, -44316, -3916, true);
                cropper(-44316, -3916, -44316 - 800, -3916 - 800, true, true); //shortened

                //e-3 trees (west)
                scenicList.push(new Scenery("pineTree", -32545 , -2522, 1, true));
                scenicList.push(new Scenery("pineTree", -32334 , -2205, 5.2, true));
                scenicList.push(new Scenery("pineTree", -32482 , -1700, 3.8, true));
                scenicList.push(new Scenery("pineTree", -33350 , -2564, 7.1, true));
                scenicList.push(new Scenery("pineTree", -32946 , -2242, 2.242, true));
                scenicList.push(new Scenery("pineTree", -33498 , -2098, -6, true));
                scenicList.push(new Scenery("pineTree", -33081 , -1820, 11, true));
                scenicList.push(new Scenery("pineTree", -32842 , -1483, 13, true));
                scenicList.push(new Scenery("pineTree", -32604 , -3450, -8, true));
                scenicList.push(new Scenery("pineTree", -32995 , -3536, -4.46, true));
                scenicList.push(new Scenery("pineTree", -32750 , -3092, 2, true));
                scenicList.push(new Scenery("pineTree", -32392 , -2822, -3.8, true));
                scenicList.push(new Scenery("pineTree", -32906 , -2767, 5, true));
                scenicList.push(new Scenery("pineTree", -33156 , -3023, 6, true));
                scenicList.push(new Scenery("pineTree", -33499 , -3322, -5.3, true));
                scenicList.push(new Scenery("pineTree", -33213 , -3006, -7.73, true));
                scenicList.push(new Scenery("pineTree", -32906 , -2767, 3.8, true));
                scenicList.push(new Scenery("pineTree", -33703 , -2805, 9, true));
                scenicList.push(new Scenery("pineTree", -33660 , -1621, -10, true));
                scenicList.push(new Scenery("pineTree", -33703 , -2805, 9, true));
                scenicList.push(new Scenery("pineTree", -33267 , -1180, 14, true));
                scenicList.push(new Scenery("pineTree", -32553 , -1309, -15.5, true));
                scenicList.push(new Scenery("pineTree", -32309 , -1088, 2.198983648723, true));
                scenicList.push(new Scenery("pineTree", -32706 , -958, 3, true));
                scenicList.push(new Scenery("pineTree", -33801 , -776, 1, true));
                scenicList.push(new Scenery("pineTree", -33304 , -701, -2.35, true));
                scenicList.push(new Scenery("pineTree", -32913 , -478, 0, true));
                scenicList.push(new Scenery("pineTree", -32599 , -25, -1, true));
                scenicList.push(new Scenery("pineTree", -33579 , -320, -20, true));
                scenicList.push(new Scenery("pineTree", -33386 , 65, 0, true));
                scenicList.push(new Scenery("pineTree", -33027 , -159, 2, true));
                scenicList.push(new Scenery("pineTree", -32772, 449, 0, true));
                scenicList.push(new Scenery("pineTree", -32772 , 449, 13.321, true));
                scenicList.push(new Scenery("pineTree", -33143 , 337, 1.4, true));
                scenicList.push(new Scenery("pineTree", -32819 , 1063, -8.214, true));
                scenicList.push(new Scenery("pineTree", -32985 , 749, -1.88, true));
                scenicList.push(new Scenery("pineTree", -33323 , 940, 11, true));
                scenicList.push(new Scenery("pineTree", -33654 , 1025, 0.5, true));
                scenicList.push(new Scenery("pineTree", -33799 , 288, 10, true));
                scenicList.push(new Scenery("pineTree", -33408 , 631, 1.6, true));
                scenicList.push(new Scenery("pineTree", -32438 , 1616, 0.25, true));
                scenicList.push(new Scenery("pineTree", -32630 , 1940, -0.75, true));
                scenicList.push(new Scenery("pineTree", -32312 , 2303, -12.55555, true));
                scenicList.push(new Scenery("pineTree", -32736 , 2532, 3.9, true));
                scenicList.push(new Scenery("pineTree", -32299 , 2885, 3.7, true));
                scenicList.push(new Scenery("pineTree", -32483, 3180, 7.15, true));
                scenicList.push(new Scenery("pineTree", -32599 , 3580, 2.242, true));
                scenicList.push(new Scenery("pineTree", -32450 , 3898, -6, true));
                scenicList.push(new Scenery("pineTree", -32386 , 4502, 11, true));
                scenicList.push(new Scenery("pineTree", -32585 , 4910, 13, true));
                scenicList.push(new Scenery("pineTree", -32929 , 4656, -8, true));
                scenicList.push(new Scenery("pineTree", -32824 , 5229, -4.46, true));
                scenicList.push(new Scenery("pineTree", -32491 , 5555, 5, true));
                scenicList.push(new Scenery("pineTree", -33030 , 5448, -3.8, true));
                scenicList.push(new Scenery("pineTree", -33516 , 5174, -17, true));
                scenicList.push(new Scenery("pineTree", -32700 , 5990, -9, true));
                scenicList.push(new Scenery("pineTree", -32391 , 6232, 3.4, true));
                scenicList.push(new Scenery("pineTree", -32478 , 6524, -5.443, true));
                scenicList.push(new Scenery("pineTree", -32925 , 6310, 7.75, true));
                scenicList.push(new Scenery("pineTree", -33352 , 6480, -3.95, true));
                scenicList.push(new Scenery("pineTree", -33239 , 6077, -2.39239, true));
                scenicList.push(new Scenery("pineTree", -33706 , 6188, 10.45, true));
                scenicList.push(new Scenery("pineTree", -33551 , 5652, 12.85, true));
                scenicList.push(new Scenery("pineTree", -32851 , 5714, -13.1, true));
                scenicList.push(new Scenery("pineTree", -33178 , 5018, -4.4545, true));
                scenicList.push(new Scenery("pineTree", -33491 , 4775, -1.45, true));
                scenicList.push(new Scenery("pineTree", -33333 , 4425, 3.33333333, true));
                scenicList.push(new Scenery("pineTree", -33649 , 4107, -12.85, true));
                scenicList.push(new Scenery("pineTree", -33146 , 4131, 18, true));
                scenicList.push(new Scenery("pineTree", -33000 , 3767, 13.11, true));
                scenicList.push(new Scenery("pineTree", -32609 , 4195, 15.55, true));
                scenicList.push(new Scenery("pineTree", -33035 , 1713, 15.55, true));
                scenicList.push(new Scenery("pineTree", -33397 , 1567, 0, true));
                scenicList.push(new Scenery("pineTree", -33787 , 1495, 1.2, true));
                scenicList.push(new Scenery("pineTree", -33003 , 2122, 2.2, true));
                scenicList.push(new Scenery("pineTree", -33203 , 2407, 3.2, true));
                scenicList.push(new Scenery("pineTree", -33365 , 1910, 1.1, true));
                scenicList.push(new Scenery("pineTree", -33611 , 2246, 5.5, true));
                scenicList.push(new Scenery("pineTree", -33541 , 2684, 6.2, true));
                scenicList.push(new Scenery("pineTree", -33010 , 2814, -7.2, true));
                scenicList.push(new Scenery("pineTree", -32714 , 2946, -8.2, true));
                scenicList.push(new Scenery("pineTree", -32963 , 3282, 0, true));
                scenicList.push(new Scenery("pineTree", -33268 , 3074, -1, true));
                scenicList.push(new Scenery("pineTree", -33510 , 3432, -2.3, true));
                scenicList.push(new Scenery("pineTree", -33795 , 3727, -5, true));
                scenicList.push(new Scenery("pineTree", -33381 , 3837, -1, true));
                cropper(-33450, 6570, -34189, -3636, true, true);

                //n-1 e-4 trees
                scenicList.push(new Scenery("pineTree", -34992 , 6702, 6, true));
                scenicList.push(new Scenery("pineTree", -34384, 6421, 5.3, true));

                //REGION CREATION
                //Build AI Units

                //fishing
                scenicList.push(new Scenery("temperateFishingSpot", -39438, 2114, 10, true));
                scenicList.push(new Scenery("temperateFishingSpot", -38296, 2004, 7, true));
                scenicList.push(new Scenery("temperateFishingSpot", -39109, -260, 1, true));
                scenicList.push(new Scenery("temperateFishingSpot", -39910, -171, 2, true));
                scenicList.push(new Scenery("temperateFishingSpot", -36838, 357, 5, true));
                scenicList.push(new Scenery("temperateFishingSpot", -37862, 4628, 4, true));

                //Duendes
                if (quests.duendeInfestationKillCount < 9 && quests.duendeInfestationDuendeLoad == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44751, -2175, "Duende", true, "arena2"));
                    ArtificialIntelligenceAccess.push(new Unit(-44659, -2187, "Duende", true, "arena2"));
                    ArtificialIntelligenceAccess.push(new Unit(-44706, -2228, "Duende", true, "arena2"));
                    ArtificialIntelligenceAccess.push(new Unit(-44644, -2262, "Duende", true, "arena2"));
                    ArtificialIntelligenceAccess.push(new Unit(-44965, -2336, "Duende", true, "arena2"));
                    ArtificialIntelligenceAccess.push(new Unit(-44918, -2255, "Duende", true, "arena2"));
                    ArtificialIntelligenceAccess.push(new Unit(-44724, -2328, "Duende", true, "arena2"));
                    ArtificialIntelligenceAccess.push(new Unit(-44760, -2286, "Duende", true, "arena2"));
                    ArtificialIntelligenceAccess.push(new Unit(-44858, -2195, "Duende", true, "arena2"));
                }

                if (uniqueChars.sebastianLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Harbourmaster Sebastian")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-40579, 2721, "Person", false, "Harbourmaster Sebastian", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.1, 0.4], 0, 0, 1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-40582, 2725]], merchant: true, merchandise: [[new Item("coins", false, false), 250], [new Item("boat", false, false), 5], [new Item("fishingpole", false, false), 3]]}));
                    }
                }
                if (uniqueChars.ilimoLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Customs Master Ilimo")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-40552, -63, "Person", false, "Customs Master Ilimo", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.15, 0.3], 0, 0, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-40552, -73]]}));
                    }
                }

                if (uniqueChars.jorgeLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Jorge the Killer")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-41301, 707, "Soldier", false, "Jorge the Killer", {race: "Nirwaden", faction: "EstolGang", con: 6, speed: 1.35, outfit: ["sealSkinClothing", 0], weapon: ["nirineseSabre", [8, 9], 0, 20, 1.15], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 1, patrolLoop: true, route:[[-41301, 717]]}));
                    }
                }

                if (uniqueChars.feniglioLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Feniglio")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-41070, 2787, "Person", false, "Feniglio", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["varnFurClothing", 0], weapon: ["none", [0.15, 0.3], 0, 0, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-41065, 2793]]}));
                    }
                }

                if (uniqueChars.micaelLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Micael the Banker")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-41174, 2067, "Person", false, "Micael the Banker", {race: "Orgell", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.2, 0.25], 0, 1, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-41174, 2055]], banker: true}));
                    }
                }

                if (uniqueChars.joaquinLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Joaquin the Barkeep")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        if (player.gamemode == "protagonist")
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-41317, 987, "Person", false, "Sir Elmo, the Carrot Guardian", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.1, 0.4], 0, 0, 1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-41320, 993]], merchant: true, merchandise: [[new Item("carrot", false, false), 20000]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-41317, 987, "Person", false, "Joaquin the Barkeep", {race: "Nirwaden", faction: "EstolGang", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.1, 0.4], 0, 0, 1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-41320, 993]], merchant: true, merchandise: [[new Item("coins", false, false), 25], [new Item("harstAle", false, false), 13], [new Item("harstBread", false, false), 2]]}));
                        }
                    }
                }

                if (uniqueChars.jimenaLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Jimena the Tailor")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-41369, 1725, "Person", false, "Jimena the Tailor", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.1, 0.4], 0, 0, 1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-41370, 1754]], merchant: true, merchandise: [[new Item("coins", false, false), 233], [new Item("nirwadenClothingM", false, false), 2], [new Item("nirwadenClothingF", false, false), 2], [new Item("frichFurClothing", false, false), 3], [new Item("frichFurMittens", false, false), 4], [new Item("nirwadenGambeson", false, false), 5], [new Item("varnFurClothing", false, false), 1], [new Item("varnFurCloak", false, false), 3], [new Item("varnFurDress", false, false), 2]]}));
                    }
                }

                if (uniqueChars.cedricoLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Cedrico the Carpenter")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-41287, 76, "Person", false, "Cedrico the Carpenter", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.1, 0.4], 0, 0, 1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: false, route:[[-41370, 1754]]}));
                    }
                }

                if (uniqueChars.ernestoLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Ernesto the Engineer")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-41687, -201, "Person", false, "Ernesto the Engineer", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["engineerOutfit", 1.8], weapon: ["none", [0.1, 0.4], 0, 0, 1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-41687, -223]]}));
                    }
                }

                if (uniqueChars.ernestoLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Hugo the Inventor")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-41362, 2789, "Person", false, "Hugo the Inventor", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["engineerOutfit", 2.2], weapon: ["hammer", [2, 1], 1, 12, 1.5], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-41317, 2811]]}));
                    }
                }

                if (uniqueChars.ergokuLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Ergoku")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-40868, 1120, "Person", false, "Ergoku", {race: "Orgell", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.3, 0.3], 0, 0, 1.5], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-40869, 1091]]}));
                    }
                }

                if (uniqueChars.hermanLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Herman the Butcher")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-41526, 228, "Person", false, "Herman the Butcher", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["meatCleaver", [2, 2], 1, 11, 1.6], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: false, route:[[-41370, 1754]]}));
                    }
                }

                if (uniqueChars.agustinLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Agustin the Doctor")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-41296, 2415, "Person", false, "Agustin the Doctor", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["doctorOutfit", 0], weapon: ["none", [0.1, 0.4], 0, 0, 1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-41296, 2444]], merchant: true, merchandise: [[new Item("coins", false, false), 100], [new Item("culprisBandage", false, false), 18], [new Item("healingSalve", false, false), 3], [new Item("wyrExtract", false, false), 2], [new Item("wobeaExtract", false, false), 5]]}));
                    }
                }

                if (uniqueChars.ilihimLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Ilihim")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-40866, 906, "Person", false, "Ihilim", {race: "Orgell", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.3, 0.2], 0, 80, 1.25], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-40874, 940]]}));
                    }
                }

                //ArtificialIntelligenceAccess.push(new Unit(-41851, 2067, "Soldier", false, "Doppelganger", {patrolStops: 0, patrolLoop: true, route:[[-41301, 717]]}));

                if (uniqueChars.leonLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Leon the Toll Master")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-36100, 1334, "Soldier", false, "Leon the Toll Master", {race: "Nirwaden", faction: "Nirwaden", con: 12, speed: 1.2, outfit: ["nirwadenPlateArmour", 17.5], weapon: ["nirineseSabre", [11, 11], 0, 22, 1.25], ranged: [false, "steelBolt", 17, 2350, 20, 17 /3, 0, "none", 2.75], patrolStops: 1, patrolLoop: true, route:[[-36090, 1334]]}));
                    }
                }

                //soldiers
                ArtificialIntelligenceAccess.push(new Unit(-41075, 1693, "Soldier", false, "Prison Guard", {race: "Nirwaden", faction: "Nirwaden", con: 6, speed: 1.5, outfit: ["nirwadenGambeson", 1.5], weapon: ["nirineseSabre", [7, 6], 0, 19, 1.2], ranged: [false, "steelBolt", 15, 2200, 18, 16 /3, 0, "none", 3], patrolStops: 1, patrolLoop: false, route:[[-41065, 1693]]}));
                ArtificialIntelligenceAccess.push(new Unit(-36237, 1449, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 6, speed: 1.5, outfit: ["nirwadenMorionArmour", 12.5], weapon: ["nirineseSabre", [9, 9], 0, 21, 1.2], ranged: [false, "steelBolt", 15, 2200, 18, 16 /3, 0, "none", 3], patrolStops: 1, patrolLoop: false, route:[[-36206, 1444]]}));
                ArtificialIntelligenceAccess.push(new Unit(-36241, 1195, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 8, speed: 1.3, outfit: ["nirwadenMorionArmour", 13], weapon: ["nirineseSabre", [9, 10], 0, 21, 1.2], ranged: [false, "steelBolt", 16, 2200, 18, 16 /3, 0, "none", 3.5], patrolStops: 1, patrolLoop: false, route:[[-36206, 1195]]}));

                ArtificialIntelligenceAccess.push(new Unit(-40371, 1452, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 6, speed: 1.5, outfit: ["nirwadenMorionArmour", 12.5], weapon: ["nirineseSabre", [10, 10], 0, 21, 1.2], ranged: [false, "steelBolt", 15.5, 2200, 19, 16 /3, 0, "none", 3.25], patrolStops: 1, patrolLoop: false, route:[[-40371, 1441]]}));
                ArtificialIntelligenceAccess.push(new Unit(-40371, 1177, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 8, speed: 1.3, outfit: ["nirwadenMorionArmour", 13], weapon: ["nirineseSabre", [9, 11], 0, 21, 1.2], ranged: [false, "steelBolt", 14, 2200, 17, 16 /3, 0, "none", 3.35], patrolStops: 1, patrolLoop: false, route:[[-40371, 1195]]}));

                //civvies
                ArtificialIntelligenceAccess.push(new Unit(-40509, 2891, "Person", false, "Nirwaden Fisherman", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["none", [0.15, 0.3], 0, 0, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-40504, 2891]]}));
                ArtificialIntelligenceAccess.push(new Unit(-39893, 2431, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["none", [0.15, 0.3], 0, 0, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 6, patrolLoop: true, route:[[-39893, 2431], [-40654, 2423], [-40695, 1374], [-46061, 1330], [-40695, 1374], [-40654, 2423]]}));
                ArtificialIntelligenceAccess.push(new Unit(-39863, 679, "Person", false, "Nirwaden Dockworker", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["varnFurClothing", 0], weapon: ["crateLight", [0.15, 0.3], 0, 0, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 6, patrolLoop: true, route:[[-40547, 677], [-40540, 40], [-40810, 29], [-40804, -173], [-40675, 684], [-39863, 679]]}));
                ArtificialIntelligenceAccess.push(new Unit(-39899, 790, "Person", false, "Nirwaden Dockworker", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["crateDark", [0.15, 0.3], 0, 0, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 6, patrolLoop: true, route:[[-40993, 786], [-40997, -317], [-40837, -321], [-40997, -317], [-40993, 786], [-39899, 790]]}));
                ArtificialIntelligenceAccess.push(new Unit(-40150, 2425, "Person", false, "Nirwaden Delivery Worker", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["varnFurClothing", 0], weapon: ["basketLight", [0.15, 0.3], 0, 0, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 10, patrolLoop: true, route:[[-40146, 2500], [-41017, 2635], [-41819, 2587],[-41734, 1410], [-45031, 1422], [-41734, 1410],[-41819, 2587], [-41017, 2635], [-40146, 2500], [-40150, 2425]]}));
                ArtificialIntelligenceAccess.push(new Unit(-40170, 226, "Person", false, "Nirwaden Dockworker", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["crateLight", [0.15, 0.3], 0, 0, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 7, patrolLoop: true, route:[[-40172, 137], [-40897, 34], [-40936, -227], [-41012, -228], [-41061, 73], [-40097, 90], [-40170, 226]]}));
                ArtificialIntelligenceAccess.push(new Unit(-40783, 1651, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["none", [0.2, 0.35], 0, 0, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 8, patrolLoop: true, route:[[40788, 1896], [-41197, 1896], [-41222, 1256], [-46007, 1236], [-41222, 1256], [-41197, 1896], [40788, 1896], [-40783, 1651]]}));

                var vendorName = "Shady Vendor";
                if (player.title == "Nobility" || player.title == "Royalty" || player.title == "Highfolk") //rich folks don't have the street smarts to spot gang members on the street
                {
                    vendorName = "Street Vendor";
                }
                ArtificialIntelligenceAccess.push(new Unit(-41381, 933, "Person", false, vendorName, {race: "Nirwaden", faction: "EstolGang", personality: "calculated", outfit: ["none", 0], weapon: ["basketDark", [0.1, 0.4], 0, 0, 1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-41381, 930]], merchant: true, merchandise: [[new Item("coins", false, false), 18], [new Item("kolumPowder", false, false), 6]]}));

                if (Math.random() > 0.6)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-39838, 2636, "Person", false, "Nirwaden Fisherman", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["fishingpole", [0.1, 0.2], 0, 80, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-39829, 2653]]}));
                }
                else
                {
                    if (Math.random() > 0.75)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-39838, 2636, "Person", false, "Nirwaden Fisherman", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["fishingpole", [0.1, 0.2], 0, 80, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-39829, 2653]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-39852, 2530, "Person", false, "Nirwaden Fisherman", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["fishingpole", [0.1, 0.2], 0, 80, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-39848, 2530]]}));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-39852, 2530, "Person", false, "Nirwaden Fisherman", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["fishingpole", [0.1, 0.2], 0, 80, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-39848, 2530]]}));
                    }
                }

                if (Math.random() > 0.5)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-40478, 2130, "Person", false, "Nirwaden Fisherman", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["none", [0.1, 0.2], 0, 80, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-40472, 2124]]}));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(-40089, 1817, "Person", false, "Nirwaden Fisherman", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["fishingpole", [0.1, 0.2], 0, 80, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-40080, 1800]]}));
                }

                if (change == "e3" || change == "s1e3" || change == "n1e3")
                {
                    quests.atalinToll = false;
                }
                scenicList.push(new Scenery("event", -40565, 1344, 0, "atalinTollBridgeValidation"));
                //PROPS

                //scenicList.push(new Scenery("skeleton", -19230, 5008, 5.12, 1.75));

                //CREATURES
                //ArtificialIntelligenceAccess.push(new Unit(-13935, 2270, "Grib", false, "docile"));
                //ArtificialIntelligenceAccess.push(new Unit(-14477, 1925, "Viper", false, "Slib"));
                //ArtificialIntelligenceAccess.push(new Unit(-14087, 1359, "Lizard", true, "Lib"));
                //ArtificialIntelligenceAccess.push(new Unit(-14501, 3283, "BlackBear", false, "Clib"));
                //ArtificialIntelligenceAccess.push(new Unit(-15119, 2314, "Varn", true, "Flib"));
                //ArtificialIntelligenceAccess.push(new Unit(-13713, 5329, "Narthwarp", false, "silwil"));
                //scenicList.push(new Scenery("ulgoyPlant", -16488, 3908, 4.9, 7));
                //ArtificialIntelligenceAccess.push(new Unit(-16473, 3885, "Ulgoy", "giant", "The Really Big Plant"));
                //ArtificialIntelligenceAccess.push(new Unit(-16247, 3330, "Boar", true, "Tambor"));
                //ArtificialIntelligenceAccess.push(new Unit(-14353, 3844, "Shehid", true, "sheta"));
                //scenicList.push(new Scenery("beeHive", -15375 , -2055, 4.5, true));

                //Build Scenery

                //trees in the wuntol woods.
                scenicList.push(new Scenery("pineTree", -13696, 1772, 1.3, true));

                //Plants of the wuntol woods
                //scenicList.push(new Scenery("neprilnePlant", -17425 , 3993, -5.8, true));
                //scenicList.push(new Scenery("pluttPlant", -16685 , 4251, 2.4, true));
                //scenicList.push(new Scenery("culprisPlant", -21156 , 617, -3.5, true));
                //scenicList.push(new Scenery("stomwikPlant", -18732 , -2343, 6, true));
                //scenicList.push(new Scenery("akerPlant", -14491 , 5755, 1, true));
                //scenicList.push(new Scenery("glinPlant", -15944 , -2502, -7.789, true));
                //scenicList.push(new Scenery("ogardPlant", -16292 , -2231, 0, true));
                //scenicList.push(new Scenery("wyrPlant", -15134 , 2399, 2.8, true));
                //scenicList.push(new Scenery("cyrinthilimPlant", -21038 , -2478, 4, true));

                //buildings
                    //dock
                scenicList.push(new Scenery("floatingBoat", -40085, 2701, -2, true));
                scenicList.push(new Scenery("floatingBoat", -39940, 2336, -0.8, true));
                scenicList.push(new Scenery("blood", -40460, 2114, 9.22, 5, 0.3));
                scenicList.push(new Scenery("nirwadenGoods", -40443, 2145, 1, 8));
                scenicList.push(new Scenery("nirwadenGoods", -40435, 2119, 1, 20));
                scenicList.push(new Scenery("floatingBoat", -39815, 2119, -0.35, true));
                scenicList.push(new Scenery("floatingBoat", -40237, 1726, -2.79, true));
                scenicList.push(new Scenery("item", -40425, 2173, 0, "nirwaden", ["bucketOfWater", 1, -4]));
                scenicList.push(new Scenery("nirwadenPump", -40433, 2266, -1/2 * Math.PI, true));
                scenicList.push(new Scenery("nirwadenPump", -40433, 387, -1/2 * Math.PI, true));
                scenicList.push(new Scenery("floatingBoat", -40106, 917, 0.55, true));
                scenicList.push(new Scenery("floatingBoat", -39926, 524, 2.5, true));
                scenicList.push(new Scenery("floatingBoat", -39899, 323, -6.65, true));
                scenicList.push(new Scenery("floatingBoat", -40116, 309, 7.8, true));
                scenicList.push(new Scenery("basket", -40152, 2391, -1.1, 1, [1]));
                    //harbor shop
                scenicList.push(new Scenery("nirwadenBuilding1", -40547, 2837, 0, true));
                scenicList.push(new Scenery("boat", -40712, 2720, 0.6, true));
                scenicList.push(new Scenery("boat", -40704, 2931, -0.4, true));
                scenicList.push(new Scenery("nirwadenMueble", -40600, 2753, 0, 1));
                scenicList.push(new Scenery("nirwadenMueble", -40465, 2860, 1/2 * Math.PI, 7));
                scenicList.push(new Scenery("nirwadenMueble", -40478, 2860, 1/2 * Math.PI, 7));
                scenicList.push(new Scenery("item", -40473, 2823, 0, "nirwaden", ["fishingpole", 1, -5]));
                scenicList.push(new Scenery("item", -40471, 2889, 0, "nirwaden", ["fishingpole", 1, -5]));
                    //customs house
                scenicList.push(new Scenery("nirwadenBuilding1", -40547, -173, 0, true));
                scenicList.push(new Scenery("nirwadenMueble", -40552, -104, 0, 1, 1.15));
                scenicList.push(new Scenery("item", -40531, -103, 2, "nirwaden", ["paperwork", 1, -9]));
                scenicList.push(new Scenery("item", -40565, -105, 0, "nirwaden", ["paperwork", 1, -9]));
                scenicList.push(new Scenery("item", -40548, -104, 0, "nirwaden", ["paperwork", 1, -9]));
                scenicList.push(new Scenery("crate", -40495, -259, -6.5/4 * Math.PI, 1, [1.2]));
                scenicList.push(new Scenery("crate", -40541, -278, 1/5 * Math.PI, 1, [1.2]));
                scenicList.push(new Scenery("crate", -40599, -221, 2.3, 2, [1.2]));
                scenicList.push(new Scenery("crate", -40488, -157, 6.6, 1, [1.55]));
                scenicList.push(new Scenery("crate", -40699, -270, -10, 1, [1.33]));
                scenicList.push(new Scenery("crate", -40769, -319, 11, 1, [1.2]));
                scenicList.push(new Scenery("crate", -40844, -243, 17, 2, [1.25]));
                scenicList.push(new Scenery("crate", -40707, -96, -19, 2, [1.4]));
                scenicList.push(new Scenery("crate", -40462, 484, -7.14, 2, [1.1]));
                scenicList.push(new Scenery("crate", -40437, 568, 8.1, 2, [1.2]));
                scenicList.push(new Scenery("crate", -40342, 243, 20, 1, [1.2]));
                scenicList.push(new Scenery("crate", -40253, 231, -1.67, 2, [1.6]));
                scenicList.push(new Scenery("crate", -40126, 604, 0.9, 1, [1.15]));
                    //storage warehouse
                scenicList.push(new Scenery("nirwadenBuilding2", -41119, 2831, 0, true));
                if (quests.atalinStoragePurchased)
                {
                    scenicList.push(new Scenery("crate", -41061, 2917, 1, 4, [1.6, "atalinStorageCrate1", 5, [], false, 0]));
                }
                else
                {
                    scenicList.push(new Scenery("crate", -41061, 2917, 1, 2, [1.6]));
                }
                scenicList.push(new Scenery("crate", -41153, 2912, 6.66666, 1, [1.55]));
                scenicList.push(new Scenery("crate", -41134, 2826, 4.891231345, 1, [1.41]));
                scenicList.push(new Scenery("crate", -41173, 2745, 2.4444, 2, [1.65]));
                scenicList.push(new Scenery("crate", -41117, 2781, 3.3332, 1, [1.1]));
                scenicList.push(new Scenery("crate", -41058, 2742, 5.1, 2, [1.2]));
                    //Atalin City Bank
                scenicList.push(new Scenery("nirwadenBuilding3", -41123, 2088, 0, true));
                scenicList.push(new Scenery("nirwadenMueble", -41181, 2034, 0, 1));
                scenicList.push(new Scenery("basket", -41278, 2132, -1.2, 2, [1.4]));
                scenicList.push(new Scenery("basket", -41243, 2132, 3.9, 1, [1.44]));
                scenicList.push(new Scenery("basket", -41208, 2132, 2.2, 2, [1.425]));
                scenicList.push(new Scenery("basket", -41173, 2132, 4.5, 1, [1.43]));
                scenicList.push(new Scenery("crate", -41065, 2006, 7.66666, 1, [1.45]));
                scenicList.push(new Scenery("crate", -40977, 2001, 5.891231345, 1, [1.3]));
                scenicList.push(new Scenery("crate", -40971, 2070, -1.4444, 2, [1.7]));
                scenicList.push(new Scenery("crate", -40976, 2170, -2.3332, 1, [1.2]));
                scenicList.push(new Scenery("crate", -41032, 2057, -2.1, 2, [1.26]));
                scenicList.push(new Scenery("crate", -41038, 2142, 3.55, 2, [1.2]));
                scenicList.push(new Scenery("nirwadenGoods", -41110, 2139, 5, 9));
                scenicList.push(new Scenery("nirwadenGoods", -41114, 2170, 8, 9));
                scenicList.push(new Scenery("nirwadenGoods", -41111, 2199, 4.21, 9));
                scenicList.push(new Scenery("nirwadenGoods", -41020, 2195, 7, 9));
                scenicList.push(new Scenery("nirwadenGoods", -41063, 2202, 1.61, 9));
                //dock buildings
                scenicList.push(new Scenery("nirwadenBuilding1", -41360, 2416, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -41025, 1697, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -41028, 2378, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -40548, 1634, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding4", -40780, 1017, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding4", -41431, 1039, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -41245, 808, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -41245, 121, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -41377, 1697, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -41345, 2831, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -41607, -172, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -41593, 230, 0, true));
                    //estolGang hq
                scenicList.push(new Scenery("trapdoor", -41189, 724, 0 * Math.PI, [955, 331], "atalinDrugLab"));
                scenicList.push(new Scenery("crate", -41274, 872, -4.3332, 1, [1.2]));
                scenicList.push(new Scenery("crate", -41185, 899, -2.9, 2, [1]));
                scenicList.push(new Scenery("crate", -41177, 809, 3.78, 1, [1.1]));
                    //brindis: bar and brothel
                scenicList.push(new Scenery("bed", -41479, 1140, -1/2 * Math.PI, false));
                scenicList.push(new Scenery("bed", -41565, 935, 1/2 * Math.PI, false));
                scenicList.push(new Scenery("nirwadenMueble", -41258, 1138, 1.2, 6));
                scenicList.push(new Scenery("nirwadenMueble", -41334, 1139, 1.9, 6));
                scenicList.push(new Scenery("nirwadenMueble", -41299, 1140, 0, 2));
                scenicList.push(new Scenery("nirwadenMueble", -41347, 1015, 0, 7));
                scenicList.push(new Scenery("barrel", -41397, 992, 1 * Math.PI, 0.9));
                scenicList.push(new Scenery("item", -41282, 1126, 0, "nirwaden", ["harstAle", 1, -2]));
                ArtificialIntelligenceAccess.push(new Unit(-41258, 1138, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.15, 0.55], 0, 0, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[-41562, 1135]]}));
                    //riverfront barracks
                scenicList.push(new Scenery("bed", -40516, 1730, -1/2 * Math.PI, false));
                scenicList.push(new Scenery("bed", -40516, 1680, 1/2 * Math.PI, false));
                scenicList.push(new Scenery("bed", -40516, 1630, -1/2 * Math.PI, false));
                scenicList.push(new Scenery("bed", -40516, 1580, 1/2 * Math.PI, false));
                scenicList.push(new Scenery("crate", -40484, 1537, 0.16, 1, [1.3]));
                    //Atalin City Prison
                scenicList.push(new Scenery("trapdoor", -41071, 1774, 0 * Math.PI, [764, 513], "atalinCityPrison"));
                scenicList.push(new Scenery("nirwadenMueble", -41047, 1598, 0, 3));
                scenicList.push(new Scenery("item", -41069, 1597, 0, "nirwaden", ["harstAle", 1, -4]));
                scenicList.push(new Scenery("item", -41017, 1598, 0, "nirwaden", ["harstBread", 1, -7]));
                scenicList.push(new Scenery("item", -41042, 1608, 0, "nirwaden", ["pluttBerries", 1, -4]));
                scenicList.push(new Scenery("crate", -40976, 1774, 1.54, 2, [1.6]));
                scenicList.push(new Scenery("crate", -40959, 1597, 9.3, 1, [0.95]));
                    //riverfront outfitter's
                scenicList.push(new Scenery("nirwadenMueble", -41309, 1755, 1/2 * Math.PI, 3));
                scenicList.push(new Scenery("nirwadenMueble", -41309, 1636, 1/2 * Math.PI, 3));
                scenicList.push(new Scenery("nirwadenMueble", -41442, 1800, 0, 2));
                scenicList.push(new Scenery("nirwadenMueble", -41368, 1756, 0.23, 6));
                scenicList.push(new Scenery("loom", -41371, 1798, -0.1, true));
                scenicList.push(new Scenery("nirwadenMueble", -41402, 1583, 0, 7));
                scenicList.push(new Scenery("nirwadenMueble", -41390, 1583, 0, 7));
                scenicList.push(new Scenery("item", -41453, 1614, 0, "nirwaden", ["bucketOfWater", 1, -5]));
                scenicList.push(new Scenery("item", -41450, 1584, 0, "nirwaden", ["frichPelt", 2, -4]));
                scenicList.push(new Scenery("item", -41420, 1584, 0, "nirwaden", ["frichPelt", 2, -4]));
                scenicList.push(new Scenery("item", -41390, 1584, 0, "nirwaden", ["frichPelt", 2, -4]));
                scenicList.push(new Scenery("item", -41358, 1586, 0, "nirwaden", ["varnPelt", 2, -4]));
                scenicList.push(new Scenery("item", -41325, 1586, 0, "nirwaden", ["cloth", 4, -11]));
                scenicList.push(new Scenery("item", -41300, 1586, 0, "nirwaden", ["cloth", 4, -11]));
                scenicList.push(new Scenery("item", -41307, 1657, 0, "nirwaden", ["nirwadenClothingM", 1, -25]));
                scenicList.push(new Scenery("item", -41305, 1749, 0, "nirwaden", ["nirwadenClothingF", 1, -28]));
                scenicList.push(new Scenery("item", -41441, 1807, 0, "nirwaden", ["frichFurMittens", 1, -9]));
                scenicList.push(new Scenery("item", -41437, 1794, 0, "nirwaden", ["frichFurMittens", 1, -9]));
                scenicList.push(new Scenery("item", -41445, 1781, 0, "nirwaden", ["frichFurMittens", 1, -9]));
                ArtificialIntelligenceAccess.push(new Unit(-41427, 1609, "Person", false, "Wash Boy", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["varnFurClothing", 0], weapon: ["none", [0.1, 0.05], 0, 0, 1.1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], kid: true, patrolStops: 0, patrolLoop: true, route:[[-41562, 1135]]}));
                    //medical clinic
                scenicList.push(new Scenery("lab", -41297, 2478, 0, true));
                scenicList.push(new Scenery("nirwadenMueble", -41337, 2520, 0, 3));
                scenicList.push(new Scenery("nirwadenMueble", -41443, 2305, 0, 6));
                scenicList.push(new Scenery("nirwadenMueble", -41297, 2320, 0, 2));
                scenicList.push(new Scenery("item", -41277, 2318, 0, "nirwaden", ["culprisBandage", 4, -24]));
                scenicList.push(new Scenery("item", -41280, 2331, 0, "nirwaden", ["vialOfWater", 1, -2]));
                scenicList.push(new Scenery("item", -41290, 2327, 0, "nirwaden", ["vialOfWater", 1, -2]));
                scenicList.push(new Scenery("item", -41300, 2310, 0, "nirwaden", ["culprisLeaf", 2, -10]));
                scenicList.push(new Scenery("item", -41277, 2306, 0, "nirwaden", ["culprisLeaf", 1, -5]));
                scenicList.push(new Scenery("item", -41314, 2314, 0, "nirwaden", ["wyrLeaf", 2, -12]));
                scenicList.push(new Scenery("item", -41310, 2327, 0, "nirwaden", ["erguerPaste", 2, -11]));
                scenicList.push(new Scenery("item", -41443, 2307, 0, "nirwaden", ["healingSalve", 1, -25]));
                    //carpentry (furniture store)
                scenicList.push(new Scenery("nirwadenMueble", -41243, 180, 0, 3)); //long table
                scenicList.push(new Scenery("nirwadenMueble", -41183, 21, 1/2 * Math.PI, 2)); //square table
                scenicList.push(new Scenery("nirwadenMueble", -41328, 35, 1/2 * Math.PI, 1)); //short bench
                scenicList.push(new Scenery("nirwadenMueble", -41328, 80, 1/2 * Math.PI, 1)); //short bench
                scenicList.push(new Scenery("item", -41281, 184, 0, "nirwaden", ["woodenBowl", 2, -2]));
                scenicList.push(new Scenery("item", -41298, 165, 0, "nirwaden", ["woodenBowl", 1, -1]));
                scenicList.push(new Scenery("item", -41216, 188, 0, "nirwaden", ["staff", 1, -4]));
                scenicList.push(new Scenery("item", -41243, 181, 0, "nirwaden", ["longbow", 1, -7]));
                scenicList.push(new Scenery("nirwadenMueble", -41234, 23, 1.38, 6));
                scenicList.push(new Scenery("boat", -41228, -75, -0.55, true));
                scenicList.push(new Scenery("crate", -41348, -54, 12, 1, [1.16]));
                scenicList.push(new Scenery("crate", -41282, -43, 9.53, 2, [1.02]));
                scenicList.push(new Scenery("item", -41328, 14, 0, "nirwaden", ["adhesive", 2, -5]));
                scenicList.push(new Scenery("item", -41328, 39, 0, "nirwaden", ["adhesive", 2, -5]));
                scenicList.push(new Scenery("item", -41328, 61, 0, "nirwaden", ["wood", 3, -7]));
                scenicList.push(new Scenery("item", -41328, 83, 0, "nirwaden", ["wood", 3, -7]));
                scenicList.push(new Scenery("item", -41328, 108, 0, "nirwaden", ["wood", 3, -7]));
                scenicList.push(new Scenery("item", -41195, 170, 0, "nirwaden", ["wood", 2, -5]));
                scenicList.push(new Scenery("item", -41188, 33, 0, "nirwaden", ["hammer", 1, -8]));
                    //butcher's
                scenicList.push(new Scenery("nirwadenMueble", -41550, 338, 0, 1)); //short bench
                scenicList.push(new Scenery("nirwadenMueble", -41600, 338, 0, 1)); //short bench
                scenicList.push(new Scenery("nirwadenMueble", -41670, 312, 1/2 * Math.PI, 1)); //short bench
                scenicList.push(new Scenery("nirwadenMueble", -41650, 312, 1/2 * Math.PI, 1)); //short bench
                scenicList.push(new Scenery("blood", -41586, 157, 10, 4, 2.3));
                scenicList.push(new Scenery("deadNaaprid", -41578, 175, 8, 2));
                scenicList.push(new Scenery("blood", -41578, 175, 2, 2, 0.9));
                scenicList.push(new Scenery("item", -41525, 339, 0, "nirwaden", ["rawNaapridFlesh", 2, -11]));
                scenicList.push(new Scenery("item", -41545, 339, 0, "nirwaden", ["rawNaapridFlesh", 2, -11]));
                scenicList.push(new Scenery("item", -41565, 339, 0, "nirwaden", ["rawNaapridFlesh", 2, -11]));
                scenicList.push(new Scenery("item", -41585, 339, 0, "nirwaden", ["rawNaapridFlesh", 2, -11]));
                scenicList.push(new Scenery("item", -41605, 339, 0, "nirwaden", ["rawNaapridFlesh", 2, -11]));
                scenicList.push(new Scenery("item", -41625, 339, 0, "nirwaden", ["rawNaapridFlesh", 2, -11]));
                scenicList.push(new Scenery("item", -41660, 345, 0, "nirwaden", ["rawPorkbelly", 1, -14]));
                scenicList.push(new Scenery("item", -41660, 325, 0, "nirwaden", ["rawPorkbelly", 1, -14]));
                scenicList.push(new Scenery("item", -41650, 300, 0, "nirwaden", ["rawBacon", 1, -6]));
                scenicList.push(new Scenery("item", -41675, 297, 0, "nirwaden", ["rawBacon", 1, -6]));
                scenicList.push(new Scenery("item", -41659, 288, 0, "nirwaden", ["rawBacon", 1, -6]));
                    //engineer place (south)
                scenicList.push(new Scenery("forger", -41665, -270, -1/2 * Math.PI, true));
                scenicList.push(new Scenery("nirwadenMueble", -41664, -171, 0, 1)); //short bench
                scenicList.push(new Scenery("nirwadenMueble", -41686, -224, 0.0002, 6)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -41528, -252, -1/2 * Math.PI, 1)); //short bench
                scenicList.push(new Scenery("nirwadenMueble", -41538, -71, Math.PI, 2)); //square table
                scenicList.push(new Scenery("item", -41687, -172, 0, "nirwaden", ["copperWire", 1, -9]));
                scenicList.push(new Scenery("item", -41667, -172, 0, "nirwaden", ["copperWire", 1, -9]));
                scenicList.push(new Scenery("item", -41647, -172, 0, "nirwaden", ["iron", 2, -9]));
                scenicList.push(new Scenery("item", -41526, -275, 0, "nirwaden", ["copperWire", 1, -9]));
                scenicList.push(new Scenery("item", -41526, -255, 0, "nirwaden", ["salt", 3, -15]));
                scenicList.push(new Scenery("item", -41526, -235, 0, "nirwaden", ["adhesive", 5, -20]));
                scenicList.push(new Scenery("item", -41552, -281, 0, "nirwaden", ["bucketOfWater", 1, -7]));
                scenicList.push(new Scenery("item", -41525, -81, 0, "nirwaden", ["coal", 1, -8]));
                scenicList.push(new Scenery("item", -41543, -64, 0, "nirwaden", ["shotShooter", 1, -18]));
                scenicList.push(new Scenery("item", -41555, -70, 0, "nirwaden", ["bullet", 8, -5]));
                    //engineer place (north)
                scenicList.push(new Scenery("forger", -41285, 2925, 0, true));
                scenicList.push(new Scenery("nirwadenMueble", -41293, 2724 + 40, 0, 1)); //short bench
                scenicList.push(new Scenery("nirwadenMueble", -41333, 2724 + 40, 0, 1)); //short bench
                scenicList.push(new Scenery("nirwadenMueble", -41373, 2724 + 40, 0, 1)); //short bench

                scenicList.push(new Scenery("nirwadenMueble", -41290, 2873, 0, 1)); //short bench
                scenicList.push(new Scenery("nirwadenMueble", -41429, 2910, 1/2 * Math.PI, 1)); //short bench
                scenicList.push(new Scenery("cauldron", -41279, 2723, 3.15, true));
                scenicList.push(new Scenery("anvil", -41282, 2813, 1/2 * Math.PI, true));
                scenicList.push(new Scenery("item", -41271, 2764, 0, "nirwaden", ["copperWire", 1, -9]));
                scenicList.push(new Scenery("item", -41293, 2764, 0, "nirwaden", ["copperWire", 1, -9]));
                scenicList.push(new Scenery("item", -41316, 2764, 0, "nirwaden", ["coal", 2, -16]));
                scenicList.push(new Scenery("item", -41350, 2764, 0, "nirwaden", ["coal", 2, -16]));
                scenicList.push(new Scenery("item", -41370, 2764, 0, "nirwaden", ["iron", 3, -15]));
                scenicList.push(new Scenery("item", -41396, 2764, 0, "nirwaden", ["iron", 3, -15]));
                scenicList.push(new Scenery("item", -41303, 2871, 0, "nirwaden", ["steel", 1, -12]));
                scenicList.push(new Scenery("item", -41275, 2873, 0, "nirwaden", ["steel", 1, -12]));
                scenicList.push(new Scenery("item", -41428, 2936 + 9, 0, "nirwaden", ["copper", 1, -11]));
                scenicList.push(new Scenery("item", -41428, 2916 + 9, 0, "nirwaden", ["copper", 1, -11]));
                scenicList.push(new Scenery("item", -41428, 2896 + 9, 0, "nirwaden", ["copper", 1, -11]));
                scenicList.push(new Scenery("item", -41428, 2873 + 9, 0, "nirwaden", ["copperDust", 2, -19]));
                    //Arcus Mineral Co. HQ
                scenicList.push(new Scenery("nirwadenMueble", -40867, 1053, Math.PI, 2)); //square table
                scenicList.push(new Scenery("nirwadenMueble", -40867, 1020, Math.PI, 2)); //square table
                scenicList.push(new Scenery("nirwadenMueble", -40867, 980, Math.PI, 2)); //square table
                scenicList.push(new Scenery("nirwadenMueble", -40921, 1015, -0.0012, 6)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -40921, 974, 0.0016, 6)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -40912, 1053, -0.0008, 6)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -40867, 1094, 0.0023, 6)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -40871, 938, 0.0013, 6)); //stool
                scenicList.push(new Scenery("item", -40870, 1060, 0, "nirwaden", ["paperwork", 1, -9]));
                scenicList.push(new Scenery("item", -40875, 1051, 0, "nirwaden", ["paperwork", 1, -9]));
                scenicList.push(new Scenery("item", -40886, 969, 0, "nirwaden", ["paperwork", 1, -9]));
                scenicList.push(new Scenery("item", -40869, 991, 0, "nirwaden", ["copper", 1, -10]));
                scenicList.push(new Scenery("item", -40867, 1021, 0, "nirwaden", ["pickaxe", 1, -8]));
                scenicList.push(new Scenery("nirwadenMueble", -40636, 967, 0, 1)); //short bench
                scenicList.push(new Scenery("nirwadenMueble", -40670, 967, 0, 1)); //short bench
                scenicList.push(new Scenery("nirwadenMueble", -40719, 967, 0, 1)); //short bench
                scenicList.push(new Scenery("nirwadenMueble", -40723, 1066, 0, 1)); //short bench
                scenicList.push(new Scenery("item", -40610, 969, 0, "nirwaden", ["copper", 1, -12]));
                scenicList.push(new Scenery("item", -40632, 969, 0, "nirwaden", ["copper", 1, -12]));
                scenicList.push(new Scenery("item", -40655, 969, 0, "nirwaden", ["rawGold", 1, -22]));
                scenicList.push(new Scenery("item", -40680, 969, 0, "nirwaden", ["ironOre", 1, -7]));
                scenicList.push(new Scenery("item", -40706, 969, 0, "nirwaden", ["ironOre", 1, -7]));
                scenicList.push(new Scenery("item", -40728, 969, 0, "nirwaden", ["coal", 1, -9]));
                scenicList.push(new Scenery("item", -40750, 969, 0, "nirwaden", ["coal", 1, -9]));


                //signs
                scenicList.push(new Scenery("sign", -40635, 1167, Math.PI, 3, "Arcus Mineral Co. HQ"));
                scenicList.push(new Scenery("sign", -41712, 139, -1/2 * Math.PI, 3, "Butchery Shop"));
                scenicList.push(new Scenery("sign", -41127, 184, 1/2 * Math.PI, 3, "Wooden Wonders"));
                scenicList.push(new Scenery("sign", -41000, 2886, 1/2 * Math.PI, 3, "Riverfront Storage"));
                scenicList.push(new Scenery("sign", -40664, 2772, -1/2 * Math.PI, 3, "Harbour Office"));
                scenicList.push(new Scenery("sign", -40662, -89, -1/2 * Math.PI, 3, "Atalin Customs House"));
                scenicList.push(new Scenery("sign", -41234, 1942, 0, 3, "Atalin City Bank"));
                scenicList.push(new Scenery("sign", -40666, 1716, -1/2 * Math.PI, 3, "Atalin Barracks: Riverfront"));
                scenicList.push(new Scenery("sign", -40906, 1624, 1/2 * Math.PI, 3, "Atalin City Prison"));
                scenicList.push(new Scenery("sign", -41493, 1627, -1/2 * Math.PI, 3, "Riverfront Outfitter's"));
                scenicList.push(new Scenery("sign", -41476, 2351, -1/2 * Math.PI, 3, "The Atalin Medical Clinic"));

                if (player.gamemode == "protagonist" || player.matureContentFilter == true)
                {
                    if (player.gamemode == "protagonist")
                    {
                        scenicList.push(new Scenery("sign", -41290, 1187, Math.PI, 3, "The Super Buddy Fun House")); //owned by estol gang
                        ArtificialIntelligenceAccess.push(new Unit(-41501, 998, "Person", false, "Buddy", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["northernClothing", 0], weapon: ["none", [0.35, 0.6], 0, 1, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[-41562, 1135]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-41562, 1139, "Person", false, "Buddy", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.15, 0.3], 0, 0, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: true, route:[[-41562, 1135]]}));

                    }
                    else
                    {
                        scenicList.push(new Scenery("sign", -41290, 1187, Math.PI, 3, "The Riverfront Inn")); //owned by estol gang
                        ArtificialIntelligenceAccess.push(new Unit(-41501, 998, "Person", false, "Traveler", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["northernClothing", 0], weapon: ["none", [0.35, 0.6], 0, 1, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[-41562, 1135]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-41562, 1139, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.15, 0.3], 0, 0, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: true, route:[[-41562, 1135]]}));

                    }
                }
                else
                {
                    if (Math.random() > 0.5)
                    {
                        if (Math.random() > 0.5)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-41501, 998, "Person", false, "John", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["varnFurClothing", 0], weapon: ["none", [0.3, 0.55], 0, 1, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[-41562, 1135]]}));
                        }
                        else
                        {
                            if (Math.random() > 0.5)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(-41501, 998, "Person", false, "John", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["frichFurClothing", 0], weapon: ["none", [0.3, 0.55], 0, 1, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[-41562, 1135]]}));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(-41501, 998, "Soldier", false, "John", {race: "Nirwaden", faction: "EstolGang", con: 9, speed: 1.4, outfit: ["blackBearLeatherArmour", 3], weapon: ["nirineseSabre", [9, 10], 0, 21, 1.3], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[813, 325]]}));
                            }
                        }
                    }
                    else
                    {
                        if (Math.random() > 0.5)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-41501, 998, "Person", false, "John", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["frichFurClothing", 0], weapon: ["none", [0.25, 0.55], 0, 1, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[-41562, 1135]]}));
                        }
                        else
                        {
                            if (Math.random() > 0.5)
                            {
                                if (Math.random() > 0.5)
                                {
                                    ArtificialIntelligenceAccess.push(new Unit(-41501, 998, "Person", false, "John", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["northernClothing", 0], weapon: ["none", [0.35, 0.6], 0, 1, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[-41562, 1135]]}));
                                }
                                else
                                {
                                    ArtificialIntelligenceAccess.push(new Unit(-41501, 998, "Soldier", false, "John", {race: "Nirwaden", faction: "EstolGang", con: 3, speed: 1.2, outfit: ["varnFurClothing", 0], weapon: ["hammer", [2, 3], 0, 10, 1.15], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[921, 480]]}));
                                }
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(-41501, 998, "Soldier", false, "John", {race: "Nirwaden", faction: "Nirwaden", con: 8, speed: 1.5, outfit: ["chainArmour", 7], weapon: ["nirineseSabre", [7, 8], 0, 19, 0.9], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: true, route:[]}));
                            }
                        }
                    }
                    ArtificialIntelligenceAccess.push(new Unit(-41562, 1139, "Person", false, "Hooker", {race: "Nirwaden", faction: "EstolGang", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.15, 0.3], 0, 0, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: true, route:[[-41562, 1135]]}));
                    scenicList.push(new Scenery("sign", -41290, 1187, Math.PI, 3, "Brindis: Bar and Brothel")); //owned by estol gang
                }


                //events
                    //boat fishing 1
                if (Math.random() > 0.5)
                {
                    scenicList.push(new Scenery("floatingBoat", -39460, 3091, 0.15, true));
                    ArtificialIntelligenceAccess.push(new Unit(-39460, 3091, "Person", false, "Nirwaden Fisherman", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["fishingpole", [0.1, 0.2], 0, 80, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-39464, 3093]]}));
                }
                else
                {
                    scenicList.push(new Scenery("floatingBoat", -38873, 2620, 3.1, true));
                    ArtificialIntelligenceAccess.push(new Unit(-38872, 2656, "Person", false, "Nirwaden Fisherman", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["fishingpole", [0.1, 0.2], 0, 80, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-38868, 2641]]}));
                }
                    //boat fishing 2
                if (Math.random() > 0.5)
                {
                    scenicList.push(new Scenery("floatingBoat", -39252, 1904, 4.45, true));
                    ArtificialIntelligenceAccess.push(new Unit(-39278, 1903, "Person", false, "Nirwaden Fisherman", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["fishingpole", [0.1, 0.2], 0, 80, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-39265, 1911]]}));
                }
                else
                {
                    scenicList.push(new Scenery("floatingBoat", -38707, 2329, 5.1, true));
                    ArtificialIntelligenceAccess.push(new Unit(-38721, 2335, "Person", false, "Nirwaden Fisherman", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["fishingpole", [0.1, 0.2], 0, 80, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-38723, 2324]]}));
                }
                    //boat fishing 3
                if (Math.random() > 0.5)
                {
                    scenicList.push(new Scenery("floatingBoat", -39585, -540, 6, true));
                    ArtificialIntelligenceAccess.push(new Unit(-39577, -561, "Person", false, "Nirwaden Fisherman", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["fishingpole", [0.1, 0.2], 0, 80, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-39591, -550]]}));
                }
                else
                {
                    scenicList.push(new Scenery("floatingBoat", -38476, -2267, -4.45, true));
                    ArtificialIntelligenceAccess.push(new Unit(-38440, -2256, "Person", false, "Nirwaden Fisherman", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["fishingpole", [0.1, 0.2], 0, 80, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-38461, -2262]]}));
                }
                    //generic traveling merchant with escort
                if (Math.random() > 0.75)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-42558, 1305, "Person", false, "Nirwaden Merchant", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.1, 0.4], 0, 0, 1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 7, patrolLoop: false, route:[[-19029, 1273], [-19023, 1343], [-18339, 1346], [-18357, 1254], [2709, 1351], [2722, 1501], [2722, 1491]], merchant: true, merchandise: [[new Item("coins", false, false), 65], [new Item("harstGrain", false, false), 13], [new Item("redBelliedFalder", false, false), 5], [new Item("garlic", false, false), 2], [new Item("polyapaFruit", false, false), 6], [new Item("chonaFruit", false, false), 5], [new Item("glinMushrooms", false, false), 3], [new Item("curedPork", false, false), 7]]}));
                    var merccSPD = 2;
                    for (var ii = 0; ii < ArtificialIntelligenceAccess.length; ii++)
                    {
                        if (ArtificialIntelligenceAccess[ii].ID == "Nirwaden Merchant")
                        {
                            ArtificialIntelligenceAccess[ii].speed += 0.2;
                            merccSPD = ArtificialIntelligenceAccess[ii].speed;
                            break;
                        }
                    }
                    ArtificialIntelligenceAccess.push(new Unit(-42510, 1305, "Soldier", false, "Hired Blade", {race: "Nirwaden", faction: "Nirwaden", con: 8, speed: merccSPD, outfit: ["chainArmour", 7], weapon: ["nirineseSabre", [7, 8], 0, 19, 0.9], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 3, patrolLoop: true, route:[[-19029, 1273], [-19023, 1343], [-18339, 1346], [-18357, 1254], [2709, 1351], [2774, 1499], [2774, 1484]]}));
                }

                //city orchards
                //row 1
                scenicList.push(new Scenery("polyapaTree", -42049 , 2522, 3, true));
                scenicList.push(new Scenery("polyapaTree", -42353 , 2522, 5, true));
                scenicList.push(new Scenery("polyapaTree", -42654 , 2522, 0, true));
                scenicList.push(new Scenery("polyapaTree", -42950 , 2522, 1.5, true));
                scenicList.push(new Scenery("polyapaTree", -43245 , 2522, -2.5, true));
                scenicList.push(new Scenery("polyapaTree", -43552 , 2522, 4.1233, true));
                scenicList.push(new Scenery("polyapaTree", -43850 , 2522, 8.55, true));
                //row 2
                scenicList.push(new Scenery("chonaTree", -42049 , 2221, 2, true));
                scenicList.push(new Scenery("chonaTree", -42353 , 2221, 10, true));
                scenicList.push(new Scenery("chonaTree", -42654 , 2221, 0.5, true));
                scenicList.push(new Scenery("chonaTree", -42950 , 2221, 7.5, true));
                scenicList.push(new Scenery("chonaTree", -43245 , 2221, -6.5, true));
                scenicList.push(new Scenery("chonaTree", -43552 , 2221, 2.9233, true));
                scenicList.push(new Scenery("chonaTree", -43850 , 2221, 1.55, true));
                //row 3
                scenicList.push(new Scenery("chonaTree", -42049 , 1922, 6, true));
                scenicList.push(new Scenery("chonaTree", -42353 , 1922, 9, true));
                scenicList.push(new Scenery("chonaTree", -42654 , 1922, 2, true));
                scenicList.push(new Scenery("chonaTree", -42950 , 1922, 0, true));
                scenicList.push(new Scenery("chonaTree", -43245 , 1922, -1, true));
                scenicList.push(new Scenery("chonaTree", -43552 , 1922, -4.1233, true));
                scenicList.push(new Scenery("chonaTree", -43850 , 1922, -8.55, true));
                //row 4
                scenicList.push(new Scenery("polyapaTree", -42049 , 1619, -3, true));
                scenicList.push(new Scenery("polyapaTree", -42353 , 1619, -5, true));
                scenicList.push(new Scenery("polyapaTree", -42654 , 1619, 11, true));
                scenicList.push(new Scenery("polyapaTree", -42950 , 1619, 15, true));
                scenicList.push(new Scenery("polyapaTree", -43245 , 1619, 5.2, true));
                scenicList.push(new Scenery("polyapaTree", -43552 , 1619, -7.32233, true));
                scenicList.push(new Scenery("polyapaTree", -43850 , 1619, 14.72, true));

                //----------------------------------------------------------------------- mainroad

                //row 5
                scenicList.push(new Scenery("polyapaTree", -42049 , 1019, -8.8, true));
                scenicList.push(new Scenery("polyapaTree", -42353 , 1019, -7, true));
                scenicList.push(new Scenery("polyapaTree", -42654 , 1019, -1.25, true));
                scenicList.push(new Scenery("polyapaTree", -42950 , 1019, 3.89, true));
                scenicList.push(new Scenery("polyapaTree", -43245 , 1019, 6.2, true));
                scenicList.push(new Scenery("polyapaTree", -43552 , 1019, 2.3, true));
                scenicList.push(new Scenery("polyapaTree", -43850 , 1019, -9, true));

                //row 6
                scenicList.push(new Scenery("chonaTree", -42049 , 717, 10.1, true));
                scenicList.push(new Scenery("chonaTree", -42353 , 717, 11, true));
                scenicList.push(new Scenery("chonaTree", -42654 , 717, 12.5, true));
                scenicList.push(new Scenery("chonaTree", -42950 , 717, 13, true));
                scenicList.push(new Scenery("chonaTree", -43245 , 717, 0.5, true));
                scenicList.push(new Scenery("chonaTree", -43552 , 717, 4.811, true));
                scenicList.push(new Scenery("chonaTree", -43850 , 717, 3.245, true));

                //row 7
                scenicList.push(new Scenery("chonaTree", -42049 , 414, 15.1, true));
                scenicList.push(new Scenery("chonaTree", -42353 , 414, 12, true));
                scenicList.push(new Scenery("chonaTree", -42654 , 414, 11.66, true));
                scenicList.push(new Scenery("chonaTree", -42950 , 414, 13.97, true));
                scenicList.push(new Scenery("chonaTree", -43245 , 414, 7, true));
                scenicList.push(new Scenery("chonaTree", -43552 , 414, -1.9, true));
                scenicList.push(new Scenery("chonaTree", -43850 , 414, -10.2, true));

                //row 8
                scenicList.push(new Scenery("polyapaTree", -42049 , 119, 5.5, true));
                scenicList.push(new Scenery("polyapaTree", -42353 , 119, -6.3, true));
                scenicList.push(new Scenery("polyapaTree", -42654 , 119, -9.9, true));
                scenicList.push(new Scenery("polyapaTree", -42950 , 119, 10.7, true));
                scenicList.push(new Scenery("polyapaTree", -43245 , 119, 7.1, true));
                scenicList.push(new Scenery("polyapaTree", -43552 , 119, -3.4, true));
                scenicList.push(new Scenery("polyapaTree", -43850 , 119, -5, true));

                //e_5 west side
                scenicList.push(new Scenery("nirwadenBuilding4", -44859, -2875, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -44276, -2872, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -44119, -2456, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -44613, -2497, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding3", -44807, -2234, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -45278, -2760, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -45200, -2470, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -45127, -2109, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -45505, -2414, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -45430, -2121, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -44336, -2207, 0, true));
                scenicList.push(new Scenery("nirwadenTiendaD", -44521, -2300, 0, 1));
                scenicList.push(new Scenery("nirwadenTiendaD", -44521, -2200, 0, 0));
                scenicList.push(new Scenery("nirwadenTiendaD", -44521, -2130, 0, 1));
                scenicList.push(new Scenery("nirwadenBuilding3", -45430, -1658, 0, true));
                scenicList.push(new Scenery("nirwadenTiendaU", -44922, -2111, 0, 4));
                scenicList.push(new Scenery("nirwadenTiendaR", -44085, -1873, 0, 0));
                scenicList.push(new Scenery("nirwadenTiendaR", -44091, -1630, 0, 1));
                scenicList.push(new Scenery("nirwadenTiendaD", -44382, -1858, 0, 3));
                scenicList.push(new Scenery("nirwadenTiendaL", -44979, -1661, 0, 5));
                scenicList.push(new Scenery("nirwadenTiendaU", -44677, -1863, 0, 2));
                scenicList.push(new Scenery("nirwadenTiendaD", -44113, -1197, 0, 0));
                scenicList.push(new Scenery("nirwadenTiendaD", -44524, -1582, 0, 0));
                scenicList.push(new Scenery("nirwadenTiendaL", -44696, -1306, 0, 1));
                scenicList.push(new Scenery("nirwadenTiendaR", -44113, -928, 0, 2));
                scenicList.push(new Scenery("nirwadenTiendaU", -44765, -1153, 0, 3));
                scenicList.push(new Scenery("nirwadenTiendaR", -44817, -1296, 0, 2));
                scenicList.push(new Scenery("nirwadenTiendaL", -45265, -1407, 0, 1));
                scenicList.push(new Scenery("nirwadenTiendaR", -45399, -1414, 0, 0));
                scenicList.push(new Scenery("nirwadenTiendaD", -45239, -1103, 0, 5));
                scenicList.push(new Scenery("nirwadenTiendaD", -44536, -791, 0, 0));
                scenicList.push(new Scenery("nirwadenTiendaU", -45234, -985, 0, 2));
                scenicList.push(new Scenery("nirwadenTiendaR", -44897, -666, 0, 1));
                scenicList.push(new Scenery("nirwadenTiendaL", -44484, -647, 0, 1));
                scenicList.push(new Scenery("nirwadenTiendaR", -44592, -646, 0, 3));
                scenicList.push(new Scenery("nirwadenTiendaL", -45590, -896, 0, 0));
                scenicList.push(new Scenery("nirwadenTiendaD", -44099, -519, 0, 5));
                scenicList.push(new Scenery("nirwadenTiendaU", -44097, -406, 0, 2));
                scenicList.push(new Scenery("nirwadenTiendaD", -44722, -365, 0, 0));
                scenicList.push(new Scenery("nirwadenTiendaL", -45236, -511, 0, 2));
                scenicList.push(new Scenery("nirwadenTiendaD", -45282, -648, 0, 3));
                    //stuff
                        //berry stand
                scenicList.push(new Scenery("nirwadenMueble", -44488, -796, Math.PI, 2)); //square table
                scenicList.push(new Scenery("nirwadenGoods", -44536, -777, 6.5, 1)); //plutt
                scenicList.push(new Scenery("nirwadenGoods", -44562, -761, 8, 0)); //aker
                scenicList.push(new Scenery("nirwadenGoods", -44587, -769, 9, 26)); //iema
                scenicList.push(new Scenery("nirwadenGoods", -44611, -776, -12, 26)); //iema
                scenicList.push(new Scenery("item", -44503, -788, 0, "nirwaden", ["akerBerries", 3, -7]));
                scenicList.push(new Scenery("item", -44480, -791, 0, "nirwaden", ["pluttBerries", 3, -7]));
                scenicList.push(new Scenery("item", -44490, -802, 0, "nirwaden", ["iemaBerries", 3, -7]));
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Berry Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44568, -796, "Person", false, "Berry Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.1, 0.3], 0, 0, 1.1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-44568, -801]], merchant: true, merchandise: [[new Item("coins", false, false), 22], [new Item("iemaBerries", false, false), 28], [new Item("akerBerries", false, false), 17], [new Item("pluttBerries", false, false), 13]]}));
                }

                        //mushroom stand
                scenicList.push(new Scenery("nirwadenMueble", -44140, -931, -1/2 * Math.PI, 1));//bench
                scenicList.push(new Scenery("item", -44141, -898, 0, "nirwaden", ["glinMushrooms", 2, -6]));
                scenicList.push(new Scenery("item", -44141, -908, 0, "nirwaden", ["glinMushrooms", 2, -6]));
                scenicList.push(new Scenery("item", -44141, -918, 0, "nirwaden", ["glinMushrooms", 2, -6]));
                scenicList.push(new Scenery("item", -44141, -938, 0, "nirwaden", ["halgomMushrooms", 2, -8]));
                scenicList.push(new Scenery("item", -44141, -958, 0, "nirwaden", ["halgomMushrooms", 2, -8]));
                scenicList.push(new Scenery("nirwadenGoods", -44075, -907, 0, 21)); //glin
                scenicList.push(new Scenery("nirwadenGoods", -44077, -951, 1, 25)); //halgom
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Fungus Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44100, -930, "Person", false, "Fungus Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.1, 0.3], 0, 0, 1.1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-44112, -930]], merchant: true, merchandise: [[new Item("coins", false, false), 17], [new Item("halgomMushrooms", false, false), 15], [new Item("glinMushrooms", false, false), 14]]}));
                }
                        //fuel stand
                scenicList.push(new Scenery("nirwadenMueble", -44143, -1198, 0.25 + Math.PI, 2)); //square table
                scenicList.push(new Scenery("item", -44129, -1205, 0, "nirwaden", ["coal", 2, -9]));
                scenicList.push(new Scenery("item", -44140, -1188, 0, "nirwaden", ["jarOfOil", 1, -10]));
                scenicList.push(new Scenery("item", -44163, -1192, 0, "nirwaden", ["wood", 1, -4]));
                scenicList.push(new Scenery("item", -44156, -1212, 0, "nirwaden", ["wood", 1, -4]));
                scenicList.push(new Scenery("crate", -44033, -1192, 1.9, 2, [1.15]));
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Combustibles Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44086, -1165, "Person", false, "Combustibles Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.1, 0.3], 0, 0, 1.1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-44086, -1180]], merchant: true, merchandise: [[new Item("coins", false, false), 40], [new Item("coal", false, false), 11], [new Item("jarOfOil", false, false), 5], [new Item("wood", false, false), 23]]}));
                }
                        //bee stand
                scenicList.push(new Scenery("nirwadenMueble", -44101, -527, 0.1 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("item", -44101, -527, 0, "nirwaden", ["honey", 1, -8]));
                scenicList.push(new Scenery("item", -44125, -536, 0, "nirwaden", ["honey", 1, -8]));
                scenicList.push(new Scenery("item", -44114, -533, 0, "nirwaden", ["honey", 1, -8]));
                scenicList.push(new Scenery("item", -44077, -521, 0, "nirwaden", ["beesWax", 2, -9]));
                scenicList.push(new Scenery("crate", -44033, -508, 1.777, 1, [1.2]));
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Honey Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44055, -546, "Person", false, "Honey Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.1, 0.3], 0, 0, 1.1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-44055, -539]], merchant: true, merchandise: [[new Item("coins", false, false), 14], [new Item("honey", false, false), 6], [new Item("beesWax", false, false), 8]]}));
                }
                        //spice stand
                scenicList.push(new Scenery("nirwadenMueble", -44103, -394, 0.057 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("item", -44101, -394, 0, "nirwaden", ["salt", 1, -5]));
                scenicList.push(new Scenery("item", -44114, -394, 0, "nirwaden", ["ogard", 1, -10]));
                scenicList.push(new Scenery("item", -44089, -393, 0, "nirwaden", ["apotlPepper", 1, -9]));
                scenicList.push(new Scenery("item", -44080, -395, 0, "nirwaden", ["garlic", 2, -8]));
                scenicList.push(new Scenery("item", -44070, -386, 0, "nirwaden", ["garlic", 2, -8]));
                scenicList.push(new Scenery("nirwadenGoods", -44046, -427, -1.5, 19)); //ogard
                scenicList.push(new Scenery("nirwadenGoods", -44075, -441, 4, 13)); //garlic
                scenicList.push(new Scenery("nirwadenGoods", -44042, -395, 2.25, 13)); //garlic
                //scenicList.push(new Scenery("crate", -44081, -436, 8, 0, [0.9]));
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Spice Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44091, -431, "Person", false, "Spice Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.1, 0.3], 0, 0, 1.1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-44091, -415]], merchant: true, merchandise: [[new Item("coins", false, false), 50], [new Item("ogard", false, false), 3], [new Item("apotlPepper", false, false), 2], [new Item("salt", false, false), 7], [new Item("garlic", false, false), 9]]}));
                }
                        //tialo stand
                scenicList.push(new Scenery("nirwadenMueble", -44597, -615, 0.012 * Math.PI, 2)); //square table
                scenicList.push(new Scenery("item", -44603, -583, 0, "nirwaden", ["bucketOfWater", 1, -7]));
                scenicList.push(new Scenery("item", -44576, -580, 0, "nirwaden", ["bucketOfWater", 1, -7]));
                scenicList.push(new Scenery("item", -44583, -610, 0, "nirwaden", ["tialoFrond", 1, -4]));
                scenicList.push(new Scenery("item", -44578, -627, 0, "nirwaden", ["tialoFrond", 1, -4]));
                scenicList.push(new Scenery("item", -44602, -612, 0, "nirwaden", ["tialoFrond", 1, -4]));
                scenicList.push(new Scenery("item", -44604, -624, 0, "nirwaden", ["tialoFrond", 1, -4]));
                scenicList.push(new Scenery("item", -44595, -620, 0, "nirwaden", ["tialoFrond", 1, -4]));
                scenicList.push(new Scenery("item", -44617, -618, 0, "nirwaden", ["tialoFrond", 1, -4]));
                scenicList.push(new Scenery("nirwadenGoods", -44568, -656, -1.1, 28)); //tialo
                scenicList.push(new Scenery("nirwadenGoods", -44565, -681, 3, 28)); //tialo
                scenicList.push(new Scenery("nirwadenGoods", -44572, -709, 5.2, 28)); //tialo
                //scenicList.push(new Scenery("crate", -44081, -436, 8, 1, [0.9]));
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Tialo Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44573, -659, "Person", false, "Tialo Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.1, 0.3], 0, 0, 1.1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-44609, -659]], merchant: true, merchandise: [[new Item("coins", false, false), 20], [new Item("tialoFrond", false, false), 30]]}));
                }
                        //techi stand
                scenicList.push(new Scenery("nirwadenMueble", -44470, -648, 0.5016 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("item", -44470, -648, 0, "nirwaden", ["techiLeaf", 1, -1]));
                scenicList.push(new Scenery("item", -44470, -657, 0, "nirwaden", ["techiLeaf", 1, -1]));
                scenicList.push(new Scenery("item", -44470, -638, 0, "nirwaden", ["techiLeaf", 1, -1]));
                scenicList.push(new Scenery("item", -44470, -630, 0, "nirwaden", ["techiLeaf", 1, -1]));
                scenicList.push(new Scenery("item", -44470, -665, 0, "nirwaden", ["techiLeaf", 1, -1]));
                scenicList.push(new Scenery("nirwadenGoods", -44507, -711, 2.96, 22)); //techi
                scenicList.push(new Scenery("nirwadenGoods", -44516, -663, 6, 22)); //techi
                scenicList.push(new Scenery("nirwadenGoods", -44519, -617, -1, 22)); //techi
                scenicList.push(new Scenery("crate", -44487, -581, 8, 2, [0.9]));
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Techi Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44525, -641, "Person", false, "Techi Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.1, 0.3], 0, 0, 1.1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-44496, -643]], merchant: true, merchandise: [[new Item("coins", false, false), 36], [new Item("techiLeaf", false, false), 15], [new Item("driedTechiLeaf", false, false), 33]]}));
                }
                //fruit stand
                //scenicList.push(new Scenery("nirwadenMueble", -44470, -648, 0.5016 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("nirwadenGoods", -44677, -343, 9, 7)); //empty
                scenicList.push(new Scenery("nirwadenGoods", -44710, -343, -3.43, 7)); //empty
                scenicList.push(new Scenery("nirwadenGoods", -44655, -371, -2, 7)); //empty
                scenicList.push(new Scenery("nirwadenGoods", -44655, -398, 0, 7)); //empty
                scenicList.push(new Scenery("nirwadenGoods", -44762, -345, 0, 3)); //ogo
                scenicList.push(new Scenery("nirwadenGoods", -44785, -360, 0, 4)); //polyapa
                scenicList.push(new Scenery("nirwadenGoods", -44792, -382, 0, 11)); //empty
                scenicList.push(new Scenery("item", -44792, -380, 0, "nirwaden", ["chonaFruit", 4, -7]));
                scenicList.push(new Scenery("item",-44788, -383, 0, "nirwaden", ["chonaFruit", 4, -7]));
                scenicList.push(new Scenery("item",-44785, -381, 0, "nirwaden", ["chonaFruit", 4, -7]));

                scenicList.push(new Scenery("item", -44792 - 9, -380, 0, "nirwaden", ["chonaFruit", 4, -7]));
                scenicList.push(new Scenery("item",-44788 - 9, -383, 0, "nirwaden", ["chonaFruit", 4, -7]));
                scenicList.push(new Scenery("item",-44785 - 9, -381, 0, "nirwaden", ["chonaFruit", 4, -7]));
                scenicList.push(new Scenery("item",-44710, -345, 0, "nirwaden", ["bequonFruit", 1, -14]));
                scenicList.push(new Scenery("item",-44678, -344, 0, "nirwaden", ["karmFruit", 2, -12]));
                scenicList.push(new Scenery("item",-44656, -372, 0, "nirwaden", ["kwomFruit", 1, -10]));
                scenicList.push(new Scenery("item",-44657, -398, 0, "nirwaden", ["suuliMelon", 3, -21]));

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Fruit Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44717, -338, "Person", false, "Fruit Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.1, 0.3], 0, 0, 1.1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-44717, -389]], merchant: true, merchandise: [[new Item("coins", false, false), 61], [new Item("chonaFruit", false, false), 25], [new Item("polyapaFruit", false, false), 28], [new Item("suuliMelon", false, false), 8], [new Item("bequonFruit", false, false), 2], [new Item("ogoFruit", false, false), 10], [new Item("karmFruit", false, false), 3], [new Item("kwomFruit", false, false), 2]]}));
                }
                    //trapping stand
                scenicList.push(new Scenery("nirwadenMueble", -44726, -1860, 0.5075 * Math.PI, 2)); //square table
                scenicList.push(new Scenery("item", -44726, -1860, 0, "nirwaden", ["jacks", 3, -12]));
                scenicList.push(new Scenery("item", -44711, -1874, 0, "nirwaden", ["jacks", 3, -12]));
                scenicList.push(new Scenery("item", -44710, -1850, 0, "nirwaden", ["beartrap", 1, -11]));
                scenicList.push(new Scenery("item", -44731, -1876, 0, "nirwaden", ["beartrap", 1, -11]));
                scenicList.push(new Scenery("item", -44728, -1841, 0, "nirwaden", ["beartrap", 1, -11]));
                scenicList.push(new Scenery("crate", -44663, -1898, 9.2, 1, [1.15]));

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Trap Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44655, -1862, "Person", false, "Trap Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["blackBearFurClothing", 0.25], weapon: ["crossbow", [0.1, 0.3], 0, 0, 13], ranged: [true, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44655, -1850]], merchant: true, merchandise: [[new Item("coins", false, false), 18], [new Item("jacks", false, false), 13], [new Item("beartrap", false, false), 3]]}));
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Trap Vendor")
                        {
                            ArtificialIntelligenceAccess[i].healthMAX = 24;
                            ArtificialIntelligenceAccess[i].health = 24;
                        }
                    }
                }
                    //brews stand
                scenicList.push(new Scenery("barrel", -44331, -1837, 1.5, 1));
                scenicList.push(new Scenery("barrel", -44366, -1832, -5.25, 1));
                scenicList.push(new Scenery("nirwadenGoods", -44417, -1836, 0, 23)); //hops
                scenicList.push(new Scenery("nirwadenGoods", -44443, -1860, 0, 23)); //hops
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Brew Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44404, -1840, "Person", false, "Brew Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.2, 0.3], 0, 2, 1.2], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-44394, -1862]], merchant: true, merchandise: [[new Item("coins", false, false), 54], [new Item("barrelOfHarstAle", false, false), 1], [new Item("barrelOfSanthAle", false, false), 1], [new Item("hops", false, false), 29]]}));
                }
                    //naaprid stand
                scenicList.push(new Scenery("hayPile", -44060, -2075, 2, 1.7));
                scenicList.push(new Scenery("hayPile", -44078, -2141, 7, 1.6));
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Naaprid Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44049, -1876, "Person", false, "Naaprid Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.3, 0.25], 0, 2, 1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-44082, -1878]]}));
                }
                ArtificialIntelligenceAccess.push(new Unit(-44085, -1834, "Naaprid", "baby", "Ebilita"));
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Ebilita")
                    {
                        ArtificialIntelligenceAccess[i].baseTeam = "Nirwaden";
                        ArtificialIntelligenceAccess[i].speed = 1;
                        ArtificialIntelligenceAccess[i].tamable = false;
                    }
                }
                    //brewery
                scenicList.push(new Scenery("brew", -44268, -2112, 4 + Math.PI, true));
                scenicList.push(new Scenery("barrel", -44328, -2106, 1.5, 1));
                scenicList.push(new Scenery("barrel", -44360, -2098, 3.1, 1));
                scenicList.push(new Scenery("barrel", -44416, -2103, 5.4, 2));
                        //grain stomping
                for (var i = 0; i < 11; i++)
                {
                    scenicList.push(new Scenery("item", -44335 + (63 - 126 * Math.random()), -2246 + (63 - 126 * Math.random()), 0, "nirwaden", ["harstGrain", 1, -1]));
                }
                scenicList.push(new Scenery("nirwadenGoods", -44279, -2312, 9, 23)); //hops
                scenicList.push(new Scenery("nirwadenGoods", -44306, -2312, 6.5, 23)); //hops
                scenicList.push(new Scenery("barrel", -44377, -2317, 4.5, 2));
                scenicList.push(new Scenery("sign", -44221, -2145, 1/2 * Math.PI, 3, "Atalin Brewery"));
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Brewer")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44390, -2097, "Person", false, "Brewer", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.25, 0.25], 0, 2, 1.1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-44384, -2131]], merchant: true, merchandise: [[new Item("coins", false, false), 62], [new Item("barrelOfHarstAle", false, false), 4], [new Item("hops", false, false), 8]]}));
                }
                    //fabric stand
                scenicList.push(new Scenery("nirwadenMueble", -44115, -1637, 0.4961 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("item", -44116, -1610, 0, "nirwaden", ["cloth", 2, -10]));
                scenicList.push(new Scenery("item", -44116, -1630, 0, "nirwaden", ["cloth", 2, -10]));
                scenicList.push(new Scenery("item", -44116, -1659, 0, "nirwaden", ["cloth", 2, -10]));

                scenicList.push(new Scenery("crate", -44102, -1571, 9.2, 2, [1.365]));
                scenicList.push(new Scenery("nirwadenGoods", -44063, -1594, 6.5, 12)); //horsehair
                scenicList.push(new Scenery("nirwadenGoods", -44050, -1621, 10, 12)); //horsehair

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Fabric Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44083, -1636, "Person", false, "Fabric Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.1, 0.1], 0, 0, 2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-44655, -1850]], merchant: true, merchandise: [[new Item("coins", false, false), 24], [new Item("cloth", false, false), 33], [new Item("horseHair", false, false), 19]]}));
                }
                    //grain stand
                scenicList.push(new Scenery("item", -44463, -1566, 0, "nirwaden", ["bagOfHarstFlour", 1, -19]));
                scenicList.push(new Scenery("item", -44508, -1564, 0, "nirwaden", ["bagOfHarstFlour", 1, -19]));
                scenicList.push(new Scenery("item", -44449, -1596, 0, "nirwaden", ["bagOfHarstFlour", 1, -19]));
                scenicList.push(new Scenery("item", -44554, -1554, 0, "nirwaden", ["bagOfSanthFlour", 1, -31]));
                scenicList.push(new Scenery("item", -44589, -1574, 0, "nirwaden", ["bagOfSanthFlour", 1, -31]));
                scenicList.push(new Scenery("crate", -44584, -1604, 11, 2, [1.23]));


                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Flour and Grain Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44520, -1548, "Person", false, "Flour and Grain Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["none", 0], weapon: ["none", [0.125, 0.15], 0, 0, 0.9], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44519, -1584]], merchant: true, merchandise: [[new Item("coins", false, false), 40], [new Item("bagOfHarstFlour", false, false), 5], [new Item("bagOfSanthFlour", false, false), 2], [new Item("harstGrain", false, false), 46], [new Item("santhGrain", false, false), 19]]}));
                }
                    //pork stand
                scenicList.push(new Scenery("nirwadenMueble", -44686, -1298, -1/2 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("crate", -44735, -1267, 5, 2, [1.26]));
                scenicList.push(new Scenery("item", -44688, -1273, 0, "nirwaden", ["boarMeat", 1, -25]));
                scenicList.push(new Scenery("item", -44684, -1300 + 5, 0, "nirwaden", ["curedPork", 3, -8]));
                scenicList.push(new Scenery("item", -44685, -1316 + 5, 0, "nirwaden", ["curedPork", 3, -8]));
                scenicList.push(new Scenery("item", -44682, -1332 + 5, 0, "nirwaden", ["curedPork", 4, -11]));


                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Cured Pork Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44735, -1298, "Person", false, "Cured Pork Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.6, 0.35], 0, 0, 1.24], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44718, -1297]], merchant: true, merchandise: [[new Item("coins", false, false), 95], [new Item("boarMeat", false, false), 3], [new Item("curedPork", false, false), 24]]}));
                }
                    //fish stand
                scenicList.push(new Scenery("nirwadenMueble", -44792, -1148, 1.02 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("nirwadenMueble", -44729, -1149, 0.98 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("crate", -44758, -1194, -1.45, 2, [1.111]));
                scenicList.push(new Scenery("item", -44711, -1142, 0, "nirwaden", ["rawRedBelliedFalder", 2, -8]));
                scenicList.push(new Scenery("item", -44711, -1154, 0, "nirwaden", ["rawRedBelliedFalder", 2, -8]));
                scenicList.push(new Scenery("item", -44724, -1150, 0, "nirwaden", ["crawdid", 3, -17]));
                scenicList.push(new Scenery("item", -44760, -1153, 0, "nirwaden", ["rawSalmon", 2, -26]));
                scenicList.push(new Scenery("item", -44739, -1147, 0, "nirwaden", ["crawdid", 3, -17]));
                scenicList.push(new Scenery("item", -44806, -1155, 0, "nirwaden", ["rawDuskfish", 2, -12]));
                scenicList.push(new Scenery("item", -44806, -1144, 0, "nirwaden", ["rawDuskfish", 2, -12]));
                scenicList.push(new Scenery("item", -44785, -1142, 0, "nirwaden", ["rawSlol", 2, -16]));
                scenicList.push(new Scenery("crate", -44723, -1189, -4.08, 2, [0.88]));


                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Fish Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44802, -1207, "Person", false, "Fish Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.22], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44786, -1174]], merchant: true, merchandise: [[new Item("coins", false, false), 34], [new Item("rawRedBelliedFalder", false, false), 5], [new Item("rawSlol", false, false), 3], [new Item("rawSalmon", false, false), 2], [new Item("crawdid", false, false), 7], [new Item("rawDuskfish", false, false), 4]]}));
                }

                //marketgoers
                    //
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinMarketGoer1")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44120, -1292, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.22], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 13, patrolLoop: true, route:[[-44247, -1635], [-44150, -1624], [-44260, -1991], [-44909, -1987], [-45061, -1853], [-45727, -1845], [-45726, -1409], [-45446, -1402], [-45449, -1453], [-45645, -1215], [-44880, -1302], [-44893, -1725], [-44207, -1701]], altID: "atalinMarketGoer1"}));
                }
                    //
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinMarketGoer2")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-45278, -729, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.22], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 13, patrolLoop: true, route:[[-44536, -942], [-44534, -829], [-44412, -945], [-44167, -931], [-44127, -572], [-44136, -646], [-44447, -653], [-44404, -474], [-45194, -497], [-45074, -522], [-45063, -806], [-45265, -803], [-45278, -729]], altID: "atalinMarketGoer2"}));
                }
                    //
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinMarketGoer3")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44732, -536, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.22], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 10, patrolLoop: true, route:[[-44732, -536], [-44730, -428], [-44712, -465], [-44274, -441], [-44280, -285], [-44097, -283], [-44099, -364], [-44804, -579], [-44274, -441], [-44801, -797]], altID: "atalinMarketGoer3"}));
                }
                    //
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinMarketGoer4")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-45120, -2689, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.2, 0.25], 0, 0, 1.22], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 19, patrolLoop: true, route:[[-45120, -2700], [-45120, -2689], [-45050, -2689], [-45053, -2287], [-45349, -2293], [-45354, -2589], [-45670, -2588], [-45668, -2238], [-46003, -2231], [-46017, -1862], [-45797, -1851], [-45810, -1418], [-45554, -1409], [-45556, -1237], [-44989, -1197], [-44524, -1785], [-44477, -2028], [-44460, -2692], [-45120, -2689]], altID: "atalinMarketGoer4"}));
                }
                    //
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinMarketGoer5")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44675, -1780, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.22], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 12, patrolLoop: true, route:[[-44522, -1623], [-44519, -1950], [-44172, -1943], [-44162, -1635], [-44144, -1633], [-44162, -1635], [-44269, -448], [-45064, -447], [-45043, -1460], [-44342, -1459], [-44334, -1780], [-44675, -1780]], altID: "atalinMarketGoer5"}));
                }
                    //
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinMarketGoer6")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44801, -2864, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.5, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 35, patrolLoop: true, route:[[-44809, -2693], [-44442, -2676], [-44431, -2980], [-44599, -2987], [-44431, -2980], [-44583, -2705], [-44453, -2690], [-44465, -2484], [-44465, -2033], [-44555, -1715], [-45237, -1223], [-45241, -1141], [-45236, -1284], [-45423, -1288], [-45434, -829], [-45048, -817], [-45018, -669], [-44952, -667], [-45000, -671], [-44985, -483], [-44693, -492], [-44683, -1010], [-44363, -1288], [-44892, -1709], [-44879, -1849], [-45275, -1857], [-45275, -2291], [-45349, -2298], [-45349, -2582], [-45438, -2582], [-45433, -2959], [-45110, -2939], [-45110, -2682], [-44806, -2682], [-44801, -2864]], altID: "atalinMarketGoer6"}));
                }

                //midclass housing (interior)
                //
                scenicList.push(new Scenery("fineBed", -44886, -2953, 1 * Math.PI, false, 1)); //white
                scenicList.push(new Scenery("drawerA", -45031, -2974, 1 * Math.PI, 1, [1.5])); //light
                scenicList.push(new Scenery("nirwadenMueble", -44886, -2779, 1 * Math.PI, 2)); //sml table
                scenicList.push(new Scenery("nirwadenMueble", -44941, -2781, 0.754 * Math.PI, 6)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -45031, -2912, -0.5 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("stove", -44814, -2936, Math.PI, false));
                scenicList.push(new Scenery("furRug", -44758, -2837, 3.5, 2.8, 1));
                //
                scenicList.push(new Scenery("stove", -45134, -2591, Math.PI, "lit"));
                //
                scenicList.push(new Scenery("hearth", -44043, -2517, -1/2 * Math.PI, "lit"));
                //
                scenicList.push(new Scenery("stove", -44212, -2992, Math.PI, "lit"));
                //Marketside Lodge (player ownable home)
                scenicList.push(new Scenery("event", -44732, -2239, 0, "atalinDuendeHouse"));
                if (quests.atalinHomeOwned == true)
                {
                    scenicList.push(new Scenery("stove", -44777, -2362, Math.PI, true));
                    scenicList.push(new Scenery("fineBed", -44670, -2135, 1/2 * Math.PI, true, 2)); //blue
                    scenicList.push(new Scenery("nirwadenMueble", -44688, -2340, 1 * Math.PI, 3)); //llongtable
                    scenicList.push(new Scenery("nirwadenMueble", -44635, -2277, 1/2 * Math.PI, 1)); //bench
                    scenicList.push(new Scenery("drawerA", -44630, -2215, 0, 3, [1.55, "atalinHomeDrawer1", 6, [], false, 0])); //light
                    scenicList.push(new Scenery("drawerA", -44751.5, -2114, 1/2 * Math.PI, 3, [2.04, "atalinHomeDrawer2", 12, [], false, 0])); //light
                    scenicList.push(new Scenery("nirwadenMueble", -44798, -2149, -1/2 * Math.PI, 0)); //long bench
                    scenicList.push(new Scenery("furRug", -44901, -2281, -4, 2.5, 2));
                    scenicList.push(new Scenery("nirwadenMueble", -44885, -2188, -1 * Math.PI, 0)); //long bench
                    scenicList.push(new Scenery("nirwadenMueble", -44929, -2188, -1 * Math.PI, 0)); //long bench
                    scenicList.push(new Scenery("nirwadenMueble", -44966, -2336, 1 * Math.PI, 2)); //sqrtable
                    scenicList.push(new Scenery("nirwadenMueble", -44927, -2336, 1.078 * Math.PI, 6)); //stool
                    scenicList.push(new Scenery("nirwadenMueble", -44970, -2298, 0.97 * Math.PI, 6)); //stool
                    scenicList.push(new Scenery("sign", -44917, -2381, 0, 3, "Market Lodge"));
                }
                else
                {
                    scenicList.push(new Scenery("stove", -44777, -2362, Math.PI, false));
                    scenicList.push(new Scenery("fineBed", -44670, -2135, 1/2 * Math.PI, false, 2)); //blue
                    scenicList.push(new Scenery("nirwadenMueble", -44688, -2340, 1 * Math.PI, 3)); //llongtable
                    scenicList.push(new Scenery("nirwadenMueble", -44635, -2277, 1/2 * Math.PI, 1)); //bench
                    scenicList.push(new Scenery("drawerA", -44630, -2215, 0, 1, [1.55])); //light
                    scenicList.push(new Scenery("drawerA", -44751.5, -2114, 1/2 * Math.PI, 1, [2.04])); //light
                    scenicList.push(new Scenery("nirwadenMueble", -44798, -2149, -1/2 * Math.PI, 0)); //long bench
                    scenicList.push(new Scenery("furRug", -44901, -2281, -4, 2.5, 2));
                    scenicList.push(new Scenery("nirwadenMueble", -44885, -2188, -1 * Math.PI, 0)); //long bench
                    scenicList.push(new Scenery("nirwadenMueble", -44929, -2188, -1 * Math.PI, 0)); //long bench
                    scenicList.push(new Scenery("nirwadenMueble", -44966, -2336, 1 * Math.PI, 2)); //sqrtable
                    scenicList.push(new Scenery("nirwadenMueble", -44927, -2336, 1.078 * Math.PI, 6)); //stool
                    scenicList.push(new Scenery("nirwadenMueble", -44970, -2298, 0.97 * Math.PI, 6)); //stool
                    if (quests.duendeInfestationCompletionStyle != "royalException")
                    {
                        scenicList.push(new Scenery("sign", -44917, -2381, 0, 3, "Sale Postponed - until further notice"));
                    }
                }


                //westOnly housing interiors
                scenicList.push(new Scenery("fineBed", -44158, -2358, 1/2 * Math.PI, false, 1)); //white
                scenicList.push(new Scenery("drawerA", -44050, -2343, 1/2 * Math.PI, 1, [1.4])); //light
                scenicList.push(new Scenery("furRug", -44131, -2483, 8.21, 2.3, 2));
                //
                scenicList.push(new Scenery("fineBed", -44340, -2949, -1 * Math.PI, false, 1)); //white
                scenicList.push(new Scenery("crate", -44341, -2775, 1.6, 1, [1.29]));
                scenicList.push(new Scenery("nirwadenMueble", -44197, -2788, 0.5 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("furRug", -44247, -2907, -3, 1.78, 2));
                //
                scenicList.push(new Scenery("furRug", -44608, -2498, -1/2 * Math.PI, 3.1, 1));
                scenicList.push(new Scenery("fineBed", -44659, -2400, -1/2 * Math.PI, false, 1)); //white
                scenicList.push(new Scenery("drawerA", -44544, -2383, 1/2 * Math.PI, 1, [1.6])); //light
                scenicList.push(new Scenery("nirwadenMueble", -44649, -2610, 0 * Math.PI, 0)); //long bench
                //squatter warehouse
                if (quests.atalinE4Items == true)
                {
                    quests.atalinE4Items = false;
                    worldItems.push([new Item("kolumPowder", -40976, 2283), 1]);
                }
                scenicList.push(new Scenery("skeleton", -41005, 2299, 9, 1.67));
                scenicList.push(new Scenery("crate", -41012, 2470, 2, 1, [1.14]));
                scenicList.push(new Scenery("crate", -41019, 2343, 2.23, 1, [1.3]));
                scenicList.push(new Scenery("crate", -41091, 2398, 5, 2, [1.01]));


                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Homeless Squatter")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinHomeless1")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-40958, 2478, "Person", false, "Homeless Squatter", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["frichFurClothing", 0], weapon: ["none", [0.5, 0.4], 0, 0, 0.75], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-40942, 2251]], altID: "atalinHomeless1"}));
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Homeless Squatter")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinHomeless1")
                                {
                                    ArtificialIntelligenceAccess[i].disdained = true;
                                }
                            }
                        }
                    }
                }

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Homeless Squatter")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinHomeless2")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-41094, 2481, "Person", false, "Homeless Squatter", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["frichFurClothing", 0], weapon: ["none", [0.5, 0.4], 0, 0, 0.7], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-41075, 2478]], altID: "atalinHomeless2"}));
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Homeless Squatter")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinHomeless2")
                                {
                                    ArtificialIntelligenceAccess[i].disdained = true;
                                }
                            }
                        }
                    }
                }

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Homeless Squatter")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinHomeless3")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-41084, 2280, "Person", false, "Homeless Squatter", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["frichFurClothing", 0], weapon: ["none", [0.5, 0.4], 0, 0, 0.7], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-41076, 2307]], altID: "atalinHomeless3"}));
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Homeless Squatter")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinHomeless3")
                                {
                                    ArtificialIntelligenceAccess[i].disdained = true;
                                }
                            }
                        }
                    }
                }

                ArtificialIntelligenceAccess.push(new Unit(-40937, 976, "Person", false, "Company Associate", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.3, 0.2], 0, 80, 1.25], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-40922, 972]]}));
                ArtificialIntelligenceAccess.push(new Unit(-40947, 1055, "Person", false, "Company Associate", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.3, 0.2], 0, 80, 1.25], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-40909, 1052]]}));
                ArtificialIntelligenceAccess.push(new Unit(-40957, 1017, "Person", false, "Company Associate", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.3, 0.2], 0, 80, 1.25], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-40922, 1015]]}));
                ArtificialIntelligenceAccess.push(new Unit(-40725, 1002, "Person", false, "Arcus Co Representative", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.3, 0.2], 0, 80, 1.25], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-40723, 1045]]}));

                //poor residential area
                scenicList.push(new Scenery("nirwadenBuilding1", -41112, -1500, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -41483, -1373, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding3", -41580, -1791, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -41676, -2070, 0, true));
                scenicList.push(new Scenery("nirwadenMuebleOver", -41637, -1929, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -41579, -1975, 1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("trapdoor", -41733, -1760, 0 * Math.PI, [4563, -2378], "estolTunnel"));
                scenicList.push(new Scenery("well", -41104, -1729, -2.7, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -41112, -1965, 0, true));
                scenicList.push(new Scenery("nirwadenMuebleOver", -41013, -1680, 1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -41013, -1770, 1/2 * Math.PI, 0)); //long bench
                barrierList.push(new Barrier(-41030, -1818, 180, 29, true));
                barrierList.push(new Barrier(-41024, -3021, 914, 29, true));
                barrierList.push(new Barrier(-43120, -3021, 29, 2100, true));
                scenicList.push(new Scenery("nirwadenMuebleOver", -41013, -2156, 1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -41013, -2266, 1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -41013, -2376, 1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -41013, -2486, 1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -41013, -2596, 1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -41013, -2706, 1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -41013, -2816, 1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -41013, -2926, 1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -41013, -2972, 1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenBuilding1", -41212, -2330, 0, true));
                scenicList.push(new Scenery("nirwadenMuebleOver", -41075, -3014, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -41185, -3014, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -41295, -3014, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -41405, -3014, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -41515, -3014, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -41625, -3014, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -41735, -3014, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -41845, -3014, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -41955, -3014, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -42065, -3014, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -42175, -3014, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -42285, -3014, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -42395, -3014, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -42505, -3014, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -42615, -3014, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -42725, -3014, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -42835, -3014, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -42945, -3014, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -43055, -3014, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenBuilding1", -41212, -2730, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -41553, -2870, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -41553, -2474, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -41889, -2755, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -41871, -2267, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -41877, -2514, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -41690, -1381, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -42040, -1479, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -42040, -1879, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -42268, -1677, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -42225, -2766, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -42563, -2879, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -42563, -2648, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -42334, -2482, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -42350, -2105, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -42464, -1888, 0, true));
                barrierList.push(new Barrier(-42719, -1250, 29, 960, true));
                scenicList.push(new Scenery("nirwadenMuebleOver", -42680, -1237, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -42570, -1237, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -42460, -1237, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -42350, -1237, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -42240, -1237, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -42130, -1237, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -42020, -1237, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -41910, -1237, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -41800, -1237, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -41690, -1237, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMueble", -41580, -1237, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenBuilding2", -42620, -1383, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -42473, -1674, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -42661, -2090, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -42661, -2275, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -42873, -2565, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -42873, -2775, 0, true));
                barrierList.push(new Barrier(-43102, -2718, 900, 29, true));
                scenicList.push(new Scenery("nirwadenMuebleOver", -43088, -2668, -1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -43088, -2558, -1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -43088, -2448, -1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -43088, -2338, -1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -43088, -2228, -1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -43088, -2118, -1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -43088, -2008, -1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -43088, -1898, -1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -43088, -1788, -1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -43088, -1678, -1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -43088, -1568, -1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenBuilding1", -42961, -1663, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -42759, -1739, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -42982, -2187, 0, true));

                scenicList.push(new Scenery("nirwadenBuilding2", -45484, 1336, 0, true));

                scenicList.push(new Scenery("nirwadenBuilding1", -44115, 153, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -44422, 812, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -44651, 808, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding3", -44741, 524, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -44537, 1090, 0, true));

                //poor res interiors

                //plaza buildings interiors
                scenicList.push(new Scenery("sign", -44226, 82, -1/2 * Math.PI, 3, "Atalin Barracks: Market"));
                scenicList.push(new Scenery("bed", -44160, 261, 1/2 *  Math.PI, false));
                scenicList.push(new Scenery("bed", -44066, 46, -1/2 *  Math.PI, false));
                scenicList.push(new Scenery("bed", -44190, 75, 1 *  Math.PI, false));
                scenicList.push(new Scenery("bed", -44040, 234, 0 *  Math.PI, false));
                scenicList.push(new Scenery("crate", -44047, 129, 1.3, 2, [1.342]));

                //player shop in atalin
                scenicList.push(new Scenery("nirwadenMueble", -44633, 632, 1 * Math.PI, 0)); // long bench
                scenicList.push(new Scenery("nirwadenMueble", -44569, 589, 1/2 * Math.PI, 0)); // long bench
                scenicList.push(new Scenery("nirwadenMueble", -44620, 416, 0 * Math.PI, 0)); // long bench
                scenicList.push(new Scenery("nirwadenMueble", -44620, 436, 0 * Math.PI, 0)); // long bench
                scenicList.push(new Scenery("nirwadenMueble", -44858, 438, 1/2 * Math.PI, 1)); //bench
                if (quests.atalinShopOwned == true)
                {
                    scenicList.push(new Scenery("crate", -44717, 421, 0.1, 4, [1.4, "atalinShopCrate", 15, [], false, 0]));
                    scenicList.push(new Scenery("sign", -44873, 376, 0 * Math.PI, 3, "The Atalin Supply"));
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Shopkeeper")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinPlayerShopkeeper")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-44910, 444, "Person", false, "Shopkeeper", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.3, 0.3], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44897, 444]], altID: "atalinPlayerShopkeeper"}));
                    }
                }
                else
                {
                    scenicList.push(new Scenery("crate", -44717, 421, 0.1, 2, [1.4]));
                    scenicList.push(new Scenery("sign", -44873, 376, 0 * Math.PI, 3, "Shop for sale: 19000 coins"));
                }
                //
                scenicList.push(new Scenery("nirwadenMueble", -44645, 737, 1 * Math.PI, 1)); //bench

                if (uniqueChars.manoloLDS)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Guild Master Manolo")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-44646, 702, "Person", false, "Guild Master Manolo", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44649, 722]]}));
                    }
                }
                scenicList.push(new Scenery("nirwadenGoods", -44584, 713, -4.56, 9));
                scenicList.push(new Scenery("nirwadenGoods", -44570, 748, -8.146, 9));
                scenicList.push(new Scenery("crate", -44614, 881, 10, 1, [1.5]));
                scenicList.push(new Scenery("crate", -44701, 904, 12, 2, [1.1]));
                scenicList.push(new Scenery("crate", -44682, 875, 13, 2, [0.87]));
                //
                scenicList.push(new Scenery("nirwadenMueble", -44510, 1145, 1 * Math.PI, 5)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -44510, 1100, 1.1 * Math.PI, 5)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -44510, 1055, 1.3 * Math.PI, 5)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -44510, 1010, 1.8 * Math.PI, 5)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -44468, 1098, -1/2 * Math.PI, 3)); //rect table
                scenicList.push(new Scenery("nirwadenMueble", -44468, 1053, -1/2 * Math.PI, 3)); //rect table
                scenicList.push(new Scenery("crate", -44595, 1182, 3.14159, 2, [1.55]));
                if (uniqueChars.manoloLDS == true)
                {
                    scenicList.push(new Scenery("item", -44470, 1008, 2, "nirwaden", ["paperwork", 3, -18]));
                    scenicList.push(new Scenery("item", -44485, 1146, 2, "nirwaden", ["paperwork", 2, -13]));
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Merchant's Guild Accountant")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "merchGuild1")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-44565, 1145, "Person", false, "Merchant's Guild Accountant", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.3, 0.3], 0, 0, 1.45], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44511, 1146]], altID: "merchGuild1"}));
                    }
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Merchant's Guild Accountant")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "merchGuild2")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-44585, 1006, "Person", false, "Merchant's Guild Accountant", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.3, 0.3], 0, 0, 1.45], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44511, 1010]], altID: "merchGuild2"}));
                    }
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Merchant's Guild Member")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "merchGuild3")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-44464, 806, "Person", false, "Merchant's Guild Member", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.35], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44436, 805]], altID: "merchGuild3"}));
                    }
                }
                scenicList.push(new Scenery("nirwadenMueble", -44353, 909, -1/2 * Math.PI, 2)); //sqr table
                scenicList.push(new Scenery("nirwadenMueble", -44489, 713, -1/2 * Math.PI, 2)); //sqr table

                scenicList.push(new Scenery("sign", -44417, 660, 0 * Math.PI, 3, "The Atalin Merchant's Guild"));
                scenicList.push(new Scenery("sign", -45587, 682, 0 * Math.PI, 3, "Silver Keep Banking"));

                scenicList.push(new Scenery("nirwadenStadium", -45043, 2535, 0, true));
                scenicList.push(new Scenery("nirwadenStadiumCanopy", -45043, 2885, 0, true));

                if (player.raceName != "Nirwaden" || player.title != "Nobility" && player.title != "Royalty")
                {
                    scenicList.push(new Scenery("polyapaTree", -45646, 1617, 1.5, "nirwaden"));
                    scenicList.push(new Scenery("polyapaTree", -45646, 1917, -8, "nirwaden"));

                    scenicList.push(new Scenery("chonaTree", -45346, 1617, 6.5, "nirwaden"));
                    scenicList.push(new Scenery("chonaTree", -45346, 1917, -4.75, "nirwaden"));

                    scenicList.push(new Scenery("chonaTree", -44746, 1617, -2.5, "nirwaden"));
                    scenicList.push(new Scenery("chonaTree", -44746, 1917, 5.5, "nirwaden"));

                    scenicList.push(new Scenery("polyapaTree", -44446, 1617, 3.5, "nirwaden"));
                    scenicList.push(new Scenery("polyapaTree", -44446, 1917, 1.67, "nirwaden"));

                    for (var poop = 0; poop < 16; poop++)
                    {
                        scenicList.push(new Scenery("rosePlant", -44452, 3119 + 300 * poop, 3.78 * 2 * Math.cos(poop * poop), "nirwaden"));
                        scenicList.push(new Scenery("yellowStetriliPlant", -44571, 3004 + 300 * poop, 3.78 * 2 * Math.sin(poop * poop), "nirwaden"));
                        scenicList.push(new Scenery("redStetriliPlant", -44327, 3244 + 300 * poop, 3.78 * 2 * Math.cos(poop + 3 * poop), "nirwaden"));
                    }
                    for (var poop = 0; poop < 15; poop++)
                    {
                        if (poop < 3 || poop > 5)
                        {
                            scenicList.push(new Scenery("yellowStetriliPlant", -44870, 3304 + 300 * poop, 3.78 * 3 * Math.cos(poop * poop), "nirwaden"));
                            scenicList.push(new Scenery("rosePlant", -44752, 3419 + 300 * poop, 5.2 * poop * Math.sin(poop * 8), "nirwaden"));
                            scenicList.push(new Scenery("redStetriliPlant", -44630, 3304 + 300 * poop, 3.78 * 3 * Math.sin(poop + 4 * poop), "nirwaden"));
                        }
                    }
                }
                else
                {
                    scenicList.push(new Scenery("polyapaTree", -45646, 1617, 1.5, true));
                    scenicList.push(new Scenery("polyapaTree", -45646, 1917, -8, true));

                    scenicList.push(new Scenery("chonaTree", -45346, 1617, 6.5, true));
                    scenicList.push(new Scenery("chonaTree", -45346, 1917, -4.75, true));

                    scenicList.push(new Scenery("chonaTree", -44746, 1617, -2.5, true));
                    scenicList.push(new Scenery("chonaTree", -44746, 1917, 5.5, true));

                    scenicList.push(new Scenery("polyapaTree", -44446, 1617, 3.5, true));
                    scenicList.push(new Scenery("polyapaTree", -44446, 1917, 1.67, true));

                    for (var poop = 0; poop < 16; poop++)
                    {
                        scenicList.push(new Scenery("rosePlant", -44452, 3119 + 300 * poop, 3.78 * 2 * Math.cos(poop * poop), true));
                        scenicList.push(new Scenery("yellowStetriliPlant", -44571, 3004 + 300 * poop, 3.78 * 2 * Math.sin(poop * poop), true));
                        scenicList.push(new Scenery("redStetriliPlant", -44327, 3244 + 300 * poop, 3.78 * 2 * Math.cos(poop + 3 * poop), true));
                    }
                    for (var poop = 0; poop < 15; poop++)
                    {
                        if (poop < 3 || poop > 5)
                        {
                            scenicList.push(new Scenery("yellowStetriliPlant", -44870, 3304 + 300 * poop, 3.78 * 3 * Math.cos(poop * poop), true));
                            scenicList.push(new Scenery("rosePlant", -44752, 3419 + 300 * poop, 5.2 * poop * Math.sin(poop * 8), true));
                            scenicList.push(new Scenery("redStetriliPlant", -44630, 3304 + 300 * poop, 3.78 * 3 * Math.sin(poop + 4 * poop), true));
                        }
                    }
                }

                scenicList.push(new Scenery("stillFountain", -45055, 4620, 0, 0, 2));

                if (player.raceName == "Nirwaden" && player.title == "Nobility" || player.raceName == "Nirwaden" && player.title == "Royalty")
                {
                    for (var poop = 0; poop < 9; poop++)
                    {
                        scenicList.push(new Scenery("polyapaTree", -41448 - 300 * poop, -483, 8 * 3 * Math.cos(poop + 5 * poop), true));
                        scenicList.push(new Scenery("chonaTree", -41448 - 300 * poop, -783, 8 * 3 * Math.sin(poop + 7 * poop), true));
                        scenicList.push(new Scenery("polyapaTree", -41448 - 300 * poop, -1083, 8 * 3 * Math.cos(poop + 9 * poop * poop), true));
                    }
                }
                else
                {
                    for (var poop = 0; poop < 9; poop++)
                    {
                        scenicList.push(new Scenery("polyapaTree", -41448 - 300 * poop, -483, 8 * 3 * Math.cos(poop + 5 * poop), "nirwaden"));
                        scenicList.push(new Scenery("chonaTree", -41448 - 300 * poop, -783, 8 * 3 * Math.sin(poop + 7 * poop), "nirwaden"));
                        scenicList.push(new Scenery("polyapaTree", -41448 - 300 * poop, -1083, 8 * 3 * Math.cos(poop + 9 * poop * poop), "nirwaden"));
                    }
                }

                if (player.raceName == "Nirwaden" && player.title == "Nobility" || player.raceName == "Nirwaden" && player.title == "Royalty")
                {
                    for (var poop = 0; poop < 4; poop++)
                    {
                        scenicList.push(new Scenery("chonaTree", -43249, -1684 - 300 * poop, 8 * 3 * Math.sin(poop + 2 * poop * poop), true));
                        scenicList.push(new Scenery("polyapaTree", -43549, -1684 - 300 * poop, 8 * 3 * Math.cos(poop + 5 * poop * poop), true));
                        scenicList.push(new Scenery("chonaTree", -43849, -1684 - 300 * poop, 8 * 6 * Math.sin(poop + 12 * poop), true));
                    }
                }
                else
                {
                    for (var poop = 0; poop < 4; poop++)
                    {
                        scenicList.push(new Scenery("chonaTree", -43249, -1684 - 300 * poop, 8 * 3 * Math.sin(poop + 2 * poop * poop), "nirwaden"));
                        scenicList.push(new Scenery("polyapaTree", -43549, -1684 - 300 * poop, 8 * 3 * Math.cos(poop + 5 * poop * poop), "nirwaden"));
                        scenicList.push(new Scenery("chonaTree", -43849, -1684 - 300 * poop, 8 * 6 * Math.sin(poop + 12 * poop), "nirwaden"));
                    }
                }

                if (quests.duendeInfestationCompletionStyle == "royalException")
                {
                    scenicList.push(new Scenery("skeleton", -44696, -2241, 3.45, 1.55));
                    scenicList.push(new Scenery("skeleton", -44776, -2266, 1.1, 0.91));
                }

                //low res interiors
                scenicList.push(new Scenery("bed", -42831, -2876, -0.13 + Math.PI / 2, false));
                scenicList.push(new Scenery("bed", -42918, -2766, -0.05, false));
                scenicList.push(new Scenery("bed", -42839, -2488, 0.19 + Math.PI / 2, false));
                scenicList.push(new Scenery("bed", -42503, -2952, -0.05 + Math.PI, false));
                scenicList.push(new Scenery("bed", -42570, -2890, -0.21 -1/2 * Math.PI, false));
                scenicList.push(new Scenery("bed", -42607, -2326, 0.3, false));
                scenicList.push(new Scenery("bed", -42686, -2065, 0.421 + Math.PI, false));
                scenicList.push(new Scenery("bed", -42294, -2158, -0.23, false));
                scenicList.push(new Scenery("bed", -42381, -2193, -0.312 + 1/2 * Math.PI, false));
                scenicList.push(new Scenery("bed", -42289, -2581, 0.012 - 1/2 * Math.PI, false));
                scenicList.push(new Scenery("bed", -42371, -2424, 0.2, false));
                scenicList.push(new Scenery("bed", -41864, -2344, 0.0091 - 1/2 * Math.PI, false));
                scenicList.push(new Scenery("bed", -42591, -2708, 0.0891 + 1/2 * Math.PI, false));
                scenicList.push(new Scenery("bed", -42174, -2708, -0.1291 + 1 * Math.PI, false));
                scenicList.push(new Scenery("bed", -42240, -2861, -0.2441 + 1/2 * Math.PI, false));
                scenicList.push(new Scenery("bed", -41848, -2694, -0.0448 - 1/2 * Math.PI, false));
                scenicList.push(new Scenery("bed", -41942, -2792, -0.0248 - 0 * Math.PI, false));

                scenicList.push(new Scenery("nirwadenMueble", -42927, -2601, 0 * Math.PI, 2)); //sqr table
                scenicList.push(new Scenery("nirwadenMueble", -42882, -2607, 3.33389 * Math.PI, 5)); //stool
                scenicList.push(new Scenery("barrel", -42210, -2606, 3.843, 0)); //no tap
                scenicList.push(new Scenery("barrel", -42692, -2981, 5.223, 0)); //no tap
                scenicList.push(new Scenery("nirwadenMueble", -42741, -2355, -0.12 + -1/2 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("nirwadenMueble", -42300, -2048, -2.89 + -1/2 * Math.PI, 6)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -42636, -1981, 0.055 + 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMueble", -42306, -2019, 0.013 + 2 * Math.PI, 2)); //sqr table
                scenicList.push(new Scenery("nirwadenMueble", -42396, -2050, 0.04 + 1 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("nirwadenMueble", -42510, -2810, -0.022 + 1 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("nirwadenMueble", -42252, -2404, 0.0345 + 1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMueble", -42388, -2528, 2.99 + -1/2 * Math.PI, 6)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -42380, -2571, 0.143 + 2 * Math.PI, 2)); //sqr table
                scenicList.push(new Scenery("nirwadenMueble", -42304, -2685, 0.08 + -1/2 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("nirwadenMueble", -41875, -2842, 2.99 + -1/2 * Math.PI, 5)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -41835, -2845, 0.343 + 2 * Math.PI, 2)); //sqr table

                scenicList.push(new Scenery("nirwadenMueble", -41843, -2205, -9.37786 + -1/2 * Math.PI, 5)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -41894, -2198, -7.223786 + -1/2 * Math.PI, 5)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -41843, -2163, -0.022 + 2 * Math.PI, 4)); //super long table
                scenicList.push(new Scenery("nirwadenMueble", -42536, -2541, -0.0056 + 1 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("crate", -42013, -2343, 2.4, 1, [1.31]));
                scenicList.push(new Scenery("crate", -41637, -1679, 1.32, 2, [1.7569]));

                scenicList.push(new Scenery("nirwadenMueble", -41635, -2946, -0.035 + 1/2 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("nirwadenMueble", -41636, -2788, -0.015 - 1/2 * Math.PI, 1)); //bench

                scenicList.push(new Scenery("oilLamp", -41647, -2717, -2.53947818541137 * Math.PI, true, [1000, 2]));
                scenicList.push(new Scenery("barrel", -41680, -2719, 6.5, 0)); //no tap
                scenicList.push(new Scenery("barrel", -42334, -1941, 5.5555, 0)); //no tap
                scenicList.push(new Scenery("oilLamp", -42334, -1941, -9.23247818541132 * Math.PI, true, [1000, 2]));
                scenicList.push(new Scenery("barrel", -42134, -1646, 6.5534, 0)); //no tap
                scenicList.push(new Scenery("barrel", -42108, -1640, 7.1532, 0)); //no tap
                scenicList.push(new Scenery("barrel", -42485, -1274, 8.2525, 0)); //no tap
                scenicList.push(new Scenery("bed", -41494, -2408, 0.023 - 1 * Math.PI, false));
                scenicList.push(new Scenery("bed", -41486, -2517, 0.014 - 0 * Math.PI, false));
                scenicList.push(new Scenery("nirwadenMueble", -41611, -2581, -2.122222 + 1/2 * Math.PI, 6)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -41611, -2532, 0.0089 + -1/2 * Math.PI, 2)); //sqr table
                scenicList.push(new Scenery("nirwadenMueble", -41601, -2364, -0.092 - 2 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("bed", -41225, -2650, 0.025 + 1/2 * Math.PI, false));
                scenicList.push(new Scenery("nirwadenMueble", -41152, -2779, -0.017 + 1/2 * Math.PI, 3)); //rect tbl
                scenicList.push(new Scenery("lab", -41247, -2853, -0.016 + 1 * Math.PI, true)); //rect tbl
                scenicList.push(new Scenery("bed", -41859, -2458, 0.125 + 1/2 * Math.PI, false));
                scenicList.push(new Scenery("bed", -41884, -2580, 0.225 - 1/2 * Math.PI, false));
                scenicList.push(new Scenery("nirwadenMueble", -41900, -2524, -1.111125 + 1/2 * Math.PI, 6)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -41939, -2520, 0.0029 - 1/2 * Math.PI, 2)); //sqr table
                scenicList.push(new Scenery("bed", -41283, -2412, -0.009 - 0 * Math.PI, false));
                scenicList.push(new Scenery("bed", -41212, -2252, -0.018 + 1/2 * Math.PI, false));
                scenicList.push(new Scenery("bed", -41167, -2370, 0.3 - 1 * Math.PI, false));
                scenicList.push(new Scenery("bed", -41651, -1985, 0.216 + 1/2 * Math.PI, false));
                scenicList.push(new Scenery("bed", -41717, -2065, 2.19 - 1/2 * Math.PI, false));
                scenicList.push(new Scenery("nirwadenMueble", -41690, -2165, -5.122222 + 1/2 * Math.PI, 6)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -41741, -2120, 4.122222 + 1/2 * Math.PI, 6)); //stool
                scenicList.push(new Scenery("barrel", -41545, -1957, 11, 0)); //no tap
                scenicList.push(new Scenery("barrel", -41503, -1953, 11, 0)); //no tap
                scenicList.push(new Scenery("bed", -41052, -1888, 0.011 - 1 * Math.PI, false));
                scenicList.push(new Scenery("bed", -41176, -2042, -0.0321 - 0 * Math.PI, false));
                scenicList.push(new Scenery("bed", -41139, -1419, -0.0351 - 1/2 * Math.PI, false));
                scenicList.push(new Scenery("bed", -41075, -1548, -0.0521 - 2 * Math.PI, false));
                scenicList.push(new Scenery("nirwadenMueble", -41443, -1259, -0.011 + 1 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMueble", -41194, -1576, -0.035 + 1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMueble", -41401, -1299, -0.025 + 1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("bed", -41504, -1457, -0.0851 + 1/2 * Math.PI, false));
                scenicList.push(new Scenery("bed", -42080, -1797, -0.4962 + 1/2 * Math.PI, false));
                scenicList.push(new Scenery("bed", -41980, -1810, -0.0062 + 0 * Math.PI, false));
                scenicList.push(new Scenery("bed", -42419, -1837, -0.0022 - 1/2 * Math.PI, false));
                scenicList.push(new Scenery("nirwadenMueble", -42411, -1948, -0.019 - 2 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("nirwadenMueble", -42508, -1945, 3.23323322 + 1/2 * Math.PI, 5)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -42503, -1977, 0.029 - 2 * Math.PI, 2)); //sqr tbl
                scenicList.push(new Scenery("bed", -42037, -1949, -0.01221 + 1/2 * Math.PI, false));
                scenicList.push(new Scenery("bed", -42008, -1562, -0.25221 + 1/2 * Math.PI, false));
                scenicList.push(new Scenery("bed", -42098, -1517, -0.15221 + 1 * Math.PI, false));
                scenicList.push(new Scenery("nirwadenMueble", -41995, -1365, -0.01 + 1 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("bed", -42782, -1832, -0.162314 - 1/2 * Math.PI, false));
                scenicList.push(new Scenery("nirwadenMueble", -42836, -1668, 0.023 + 1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMueble", -42708, -1824, 0.04 - 1 * Math.PI, 2)); //sqr tbl
                scenicList.push(new Scenery("nirwadenMueble", -42516, -1728, -0.005 + 1 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMueble", -42445, -1729, -0.005 + 1 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMueble", -42390, -1730, -0.005 + 1 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("bed", -42436, -1627, -0.555454 - 1/2 * Math.PI, false));
                scenicList.push(new Scenery("barrel", -41807, -2101, 12.12, 0)); //no tap

                scenicList.push(new Scenery("nirwadenMueble", -42665, -1298, 6.2366622 + 1/2 * Math.PI, 5)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -42567, -1307, 1.23323322 - 1/2 * Math.PI, 5)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -42616, -1309, 0.06666 + 1/2 * Math.PI, 2)); //sqr tbl

                scenicList.push(new Scenery("bed", -42685, -1464, -0.015454 - 1 * Math.PI, false));
                scenicList.push(new Scenery("bed", -42575, -1482, -0.010454 - 1/2 * Math.PI, false));

                if (uniqueChars.matildaLDS)
                {
                    scenicList.push(new Scenery("item", -41153, -2825, 0, false, ["kofkeLeaves", 2, 0, "Matilda"]));
                    scenicList.push(new Scenery("item", -41148, -2812, 0, false, ["mofuFoot", 3, 0, "Matilda"]));
                    scenicList.push(new Scenery("item", -41153, -2788, 0, false, ["honey", 1, 0, "Matilda"]));
                    scenicList.push(new Scenery("item", -41160, -2801, 0, false, ["lizardTail", 6, 0, "Matilda"]));
                    scenicList.push(new Scenery("item", -41146, -2770, 0, false, ["tylunFlower", 1, 0, "Matilda"]));
                    scenicList.push(new Scenery("item", -41153, -2748, 0, false, ["glassJar", 1, 0, "Matilda"]));
                    scenicList.push(new Scenery("item", -41160, -2726, 0, false, ["glassJar", 3, 0, "Matilda"]));
                }

                if (uniqueChars.giomardoLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Giomardo")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-42562, -2979, "Person", false, "Giomardo", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["varnFurClothing", 0], weapon: ["none", [0.3, 0.35], 0, 0, 1.225], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-42579, -2960]]}));
                    }
                }

                if (uniqueChars.elmaLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Elma")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-42826, -2733, "Person", false, "Elma", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["frichFurClothing", 0], weapon: ["none", [0.2, 0.25], 0, 0, 1.225], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-42823, -2748]]}));
                    }
                }

                if (uniqueChars.nataliaLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Natalia")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-42755, -2956, "Person", false, "Natalia", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["varnFurClothing", 0], weapon: ["none", [0.015, 0.015], 0, 0, 1.1], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 2, patrolLoop: true, route:[[-42755, -2970], [-42702, -2934]], kid: true}));
                    }
                }
                scenicList.push(new Scenery("stove", -42968, -2880, 1/2 * Math.PI, "lit"));

                if (uniqueChars.ebaroLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Ebaro")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-42914, -2882, "Person", false, "Ebaro", {race: "Nirwaden", faction: "Nirwaden", personality: "none", outfit: ["none", 0], weapon: ["none", [0.005, 0.005], 0, 0, 80], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-42939, -2882]], kid: true}));
                    }
                }

                if (uniqueChars.matildaLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Matilda")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-41225, -2746, "Soldier", false, "Matilda", {race: "Nirwaden", faction: "Nirwaden", con: 5, speed: 5, outfit: ["nirwadenClothingF", 0], weapon: ["burningHands", [5, 5], 3, 3, 0.55], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: true, route:[[-41301, 717]], merchant: true, merchandise: [[new Item("coins", false, false), 3], [new Item("waterwalkingPotion", false, false), 1], [new Item("vialOfGojiiPoison", false, false), 2], [new Item("energyPotionII", false, false), 1]]}));
                    }
                }

                //muggers
                if (Math.random() > 0.8)
                {
                    if (timeOfDay == "Dusk" || timeOfDay == "Night" || timeOfDay == "Dawn")
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-42125, -2733, "Person", false, "Mugger", {race: "Nirwaden", faction: "arena4", personality: "violent", outfit: ["frichFurClothing", 0], weapon: ["sickle", [3.5, 1.5], 0, 23, 1.25], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-42110, -1694]]}));
                    }
                }
                if (Math.random() < 0.2)
                {
                    if (Math.random() > 0.46)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-42031, -2392, "Person", false, "Mugger", {race: "Nirwaden", faction: "arena4", personality: "violent", outfit: ["none", 0], weapon: ["sickle", [2, 2], 0, 22, 1], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-42823, -2748]]}));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-42031, -2392, "Person", false, "Mugger", {race: "Nirwaden", faction: "arena4", personality: "violent", outfit: ["frichFurClothing", 0], weapon: ["sickle", [3, 2], 0, 22, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-42823, -2748]]}));
                    }

                }
                if (Math.random() < 0.2)
                {
                    if (timeOfDay == "Dusk" || timeOfDay == "Night" || timeOfDay == "Dawn")
                    {
                        if (Math.random() > 0.4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-41065, -2940, "Person", false, "Mugger", {race: "Nirwaden", faction: "arena4", personality: "violent", outfit: ["none", 0], weapon: ["sickle", [4, 3], 0, 22, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-42823, -2748]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-41065, -2940, "Person", false, "Mugger", {race: "Nirwaden", faction: "arena4", personality: "violent", outfit: ["none", 0], weapon: ["timberAxe", [6, 5], 0, 28, 2.1], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-42823, -2748]]}));
                        }

                    }
                }
                if (Math.random() < 0.2) //
                {
                    if (timeOfDay == "Dusk" || timeOfDay == "Day" || timeOfDay == "Dawn")
                    {
                        if (Math.random() > 0.4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-42430, -1461, "Person", false, "Mugger", {race: "Nirwaden", faction: "arena4", personality: "violent", outfit: ["none", 0], weapon: ["sickle", [5, 2], 0, 22, 1.26], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-42823, -2748]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-41863, -1312, "Person", false, "Mugger", {race: "Nirwaden", faction: "arena4", personality: "violent", outfit: ["frichFurClothing", 0], weapon: ["sickle", [4, 4], 0, 21, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-42823, -2748]]}));
                        }

                    }
                }
                if (Math.random() < 0.2)
                {
                    if (timeOfDay == "Dusk" || timeOfDay == "Night" || timeOfDay == "Dawn")
                    {
                        if (Math.random() > 0.55)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-42052, -2970, "Person", false, "Mugger", {race: "Nirwaden", faction: "arena4", personality: "violent", outfit: ["frichFurClothing", 0], weapon: ["longbow", [3, 3], 0, 24, 1.15], ranged: [true, "arrow", 5.5, 900, 4, 6, 0, "none", 1.92], patrolStops: 1, patrolLoop: false, route:[[-42054, -2950]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-42052, -2970, "Person", false, "Mugger", {race: "Nirwaden", faction: "arena4", personality: "violent", outfit: ["frichFurClothing", 0], weapon: ["sickle", [3, 3], 0, 24, 1.15], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-42054, -2950]]}));
                        }
                    }
                }

                if (Math.random() < 0.2)
                {
                    if (timeOfDay == "Dusk" || timeOfDay == "Night" || timeOfDay == "Day")
                    {
                        if (Math.random() > 0.7)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-41704, -2958, "Soldier", false, "Estol Thug", {race: "Nirwaden", faction: "EstolGang3", con: 5, speed: 1, outfit: ["none", 0], weapon: ["nirineseSabre", [5, 5], 0, 26, 0.8], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-41704, -2958], [-41700, -2955]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-41700, -2955, "Soldier", false, "Estol Thug", {race: "Nirwaden", faction: "EstolGang3", con: 8, speed: 1, outfit: ["boarArmour", 4.5], weapon: ["nirineseSabre", [8, 6], 0, 25, 0.9], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 2, patrolLoop: true, route:[[-42381, -2951], [-41700, -2955]]}));
                        }
                    }
                }
                if (Math.random() < 0.2)
                {
                    if (timeOfDay == "Dawn" || timeOfDay == "Night" || timeOfDay == "Day")
                    {
                        if (Math.random() > 0.46)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-41609, -2710, "Soldier", false, "Estol Thug", {race: "Nirwaden", faction: "EstolGang3", con: 2, speed: 1.2, outfit: ["nirwadenGambeson", 2.5], weapon: ["nirineseSabre", [7, 5.5], 0, 24, 0.95], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-41610, -2697]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-41676, -2807, "Soldier", false, "Estol Thug", {race: "Nirwaden", faction: "EstolGang3", con: 2.5, speed: 1.2, outfit: ["nirwadenGambeson", 2], weapon: ["nirineseSabre", [9, 4.5], 0, 22, 1.1], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-41683, -2807]]}));
                        }
                    }
                }

                var vendorName = "Shady Vendor";
                if (player.title == "Nobility" || player.title == "Royalty" || player.title == "Highfolk") //rich folks don't have the street smarts to spot gang members on the street
                {
                    vendorName = "Street Vendor";
                }
                if (Math.random() > 0.89)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-41521, -2778, "Person", false, vendorName, {race: "Vardan", faction: "EstolGang", personality: "scared", outfit: ["nirwadenGambeson", 2.5], weapon: ["basketDark", [0.1, 0.4], 0, 0, 1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-41536, -2800]], merchant: true, merchandise: [[new Item("coins", false, false), 26], [new Item("kolumPowder", false, false), 3]]}));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(-41472, -2926, "Person", false, vendorName, {race: "Nirwaden", faction: "EstolGang", personality: "scared", outfit: ["none", 2.5], weapon: ["basketDark", [0.1, 0.4], 0, 0, 1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: false, route:[[-41536, -2800]], merchant: true, merchandise: [[new Item("coins", false, false), 13], [new Item("kolumPowder", false, false), 5]]}));
                }

                if (Math.random() > 0.22)
                {
                    if (Math.random() > 0.49)
                    {
                        scenicList.push(new Scenery("item", -42599, -1308, 0, "nirwaden", ["steamedTialo", 1, -3]));
                    }
                    //
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "slums18")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-42574, -1311, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["none", [0.4, 0.45], 0, 0, 1.25], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-42761, -1709]], kid: true, altID: "slums18"}));
                    }

                    //
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "slums17")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-42619, -1437, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["none", [0.4, 0.45], 0, 0, 1.25], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-42595, -1415]], altID: "slums17"}));
                    }
                }

                if (Math.random() > 0.8)
                {
                    //
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "slums16")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-42458, -1667, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["none", 0], weapon: ["none", [0.35, 0.75], 0, 0, 1.15], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-42761, -1709]], altID: "slums16"}));
                    }
                }

                if (Math.random() > 0.68)
                {
                    //
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "slums15")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-42789, -1695, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.25, 0.25], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-42761, -1709]], altID: "slums15"}));
                    }
                }

                if (Math.random() > 0.9)
                {
                    //
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "slums14")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-42025, -1855, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.15, 0.15], 0, 0, 1.1], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-41509, -1356]], altID: "slums14"}));
                    }
                }

                if (Math.random() > 0.24)
                {

                    //
                    if (Math.random() > 0.73)
                    {
                        if (Math.random() > 0.61)
                        {
                            if (Math.random() > 0.37)
                            {
                                scenicList.push(new Scenery("item", -42491, -1968, 0, "nirwaden", ["steamedTialo", 1, -3]));
                                scenicList.push(new Scenery("item", -42491, -1968, 0, "nirwaden", ["frichMeat", 1, -2]));

                                if (Math.random() > 0.8)
                                {
                                    scenicList.push(new Scenery("item", -42508, -1973, 0, "nirwaden", ["iemaBerries", 1, -4]));
                                }
                            }
                            else
                            {
                                scenicList.push(new Scenery("item", -42491, -1968, 0, "nirwaden", ["steamedTialo", 1, -3]));
                                scenicList.push(new Scenery("item", -42491, -1968, 0, "nirwaden", ["varnMeat", 1, -5]));

                                if (Math.random() > 0.9)
                                {
                                    scenicList.push(new Scenery("item", -42508, -1973, 0, "nirwaden", ["akerBerries", 1, -2]));
                                }
                                else
                                {
                                    if (Math.random() > 0.8)
                                    {
                                        scenicList.push(new Scenery("item", -42508, -1973, 0, "nirwaden", ["iemaBerries", 1, -4]));
                                    }
                                }
                            }
                        }
                        else
                        {
                            if (Math.random() > 0.79)
                            {
                                scenicList.push(new Scenery("item", -42493, -1968, 0, "nirwaden", ["steamedTialo", 1, -3]));
                            }
                        }


                        var hits = 0;
                        for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                        {
                            if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                            {
                                if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                                {
                                    if (ArtificialIntelligenceAccess[i].ultra.altID == "slums13")
                                    {
                                        hits += 1;
                                        break;
                                    }
                                }
                            }
                        }
                        if (hits == 0)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-42509, -1932, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-42508, -1946]], altID: "slums13"}));
                        }
                    }
                    else
                    {
                        var hits = 0;
                        for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                        {
                            if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                            {
                                if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                                {
                                    if (ArtificialIntelligenceAccess[i].ultra.altID == "slums13")
                                    {
                                        hits += 1;
                                        break;
                                    }
                                }
                            }
                        }
                        if (hits == 0)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-42530, -1846, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-42511, -1867]], altID: "slums13"}));
                        }
                    }
                }

                if (Math.random() > 0.55)
                {
                    //
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "slums12")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-41540, -1327, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-41509, -1356]], altID: "slums12"}));
                    }
                }

                if (Math.random() > 0.7)
                {
                    //
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "slums11")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-41060, -2024, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-41741, -2126]], altID: "slums11"}));
                    }
                }


                if (Math.random() > 0.6)
                {
                    if (Math.random() > 0.6)
                    {
                        scenicList.push(new Scenery("item", -41740, -2151, 0, "nirwaden", ["frichMeat", 1, -2]));
                    }

                    //
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "slums10")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-41740, -2089, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["frichFurClothing", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-41741, -2126]], altID: "slums10"}));
                    }
                }

                if (Math.random() > 0.36)
                {
                    scenicList.push(new Scenery("item", -41929, -2520, 0, "nirwaden", ["steamedTialo", 1, -3]));

                    //
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "slums9")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-41812, -2598, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["frichFurClothing", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-41812, -2580]], kid: true, altID: "slums9"}));
                    }

                    //
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "slums8")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-41906, -2524, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["none", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-41611, -2578]], altID: "slums8"}));
                    }
                }

                if (Math.random() > 0.25)
                {
                    scenicList.push(new Scenery("item", -41605, -2552, 0, "nirwaden", ["steamedTialo", 1, -3]));

                    //
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "slums7")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-41611, -2591, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["frichFurClothing", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-41611, -2578]], altID: "slums7"}));
                    }
                }

                if (Math.random() > 0.4)
                {
                    scenicList.push(new Scenery("item", -41850, -2843, 0, "nirwaden", ["steamedTialo", 1, -3]));
                    scenicList.push(new Scenery("item", -41850, -2843, 0, "nirwaden", ["varnMeat", 1, -5]));
                    //
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "slums6")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-41890, -2839, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["varnFurClothing", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-41875, -2842]], altID: "slums6"}));
                    }
                }
                if (Math.random() > 0.25)
                {
                    scenicList.push(new Scenery("item", -41605, -2552, 0, "nirwaden", ["steamedTialo", 1, -3]));

                    //
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "slums7")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-41611, -2591, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["frichFurClothing", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-41611, -2578]], altID: "slums7"}));
                    }
                }

                if (Math.random() > 0.4)
                {
                    scenicList.push(new Scenery("item", -41850, -2843, 0, "nirwaden", ["steamedTialo", 1, -3]));
                    scenicList.push(new Scenery("item", -41850, -2843, 0, "nirwaden", ["varnMeat", 1, -5]));
                    //
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "slums6")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-41890, -2839, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["varnFurClothing", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-41875, -2842]], altID: "slums6"}));
                    }
                }
                if (Math.random() > 0.75)
                {

                    //
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "slums5")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-42619, -2572, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["frichFurClothing", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-42595, -2585]], altID: "slums5"}));
                    }
                }
                if (Math.random() > 0.15)
                {
                    if (Math.random() < 0.19)
                    {
                        scenicList.push(new Scenery("item", -41847, -2179, 0, "nirwaden", ["kolumPowder", 1, -19]));
                    }
                    else
                    {
                        scenicList.push(new Scenery("item", -41847, -2179, 0, "nirwaden", ["varnMeat", 1, -5]));
                    }
                    //
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "slums4")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-41845, -2230, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["frichFurClothing", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-41845, -2205]], altID: "slums4"}));
                    }
                }

                if (Math.random() > 0.6)
                {
                    scenicList.push(new Scenery("item", -42386, -2565, 0, "nirwaden", ["steamedTialo", 1, -3]));
                    scenicList.push(new Scenery("item", -42386, -2565, 0, "nirwaden", ["frichMeat", 1, -2]));
                    //
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "slums3")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-42388, -2510, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["varnFurClothing", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-42388, -2528]], altID: "slums3"}));
                    }
                }

                if (Math.random() > 0.3)
                {
                    scenicList.push(new Scenery("item", -42915, -2613, 0, "nirwaden", ["steamedTialo", 1, -3]));
                    //
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "slums1")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-42882, -2607, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["frichFurClothing", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-44809, -2693]], altID: "slums1"}));
                    }
                }
                if (Math.random() > 0.2)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "slums2")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-42331, -2127, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["frichFurClothing", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-44809, -2693]], altID: "slums2"}));
                    }
                }

                var hits = -1;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].type == "Peacock" && ArtificialIntelligenceAccess[i].ID == "flagabili")
                    {
                        hits = i;
                    }
                }
                if (hits == -1)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44458, 3242, "Peacock", false, "flagabili"));
                }

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinPed1")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    if (timeOfDay == "Day")
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-45095, 3156, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.3, 0.3], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 7, patrolLoop: true, route:[[-45118, 4266], [-45349, 4695], [-45108, 5059], [-44645, 4819], [-44983, 4187], [-44977, 3183], [-45095, 3156]], altID: "atalinPed1"}));
                    }
                }

                //boar fight viewers
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinBF1")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    if (timeOfDay == "Day" || timeOfDay == "Dawn")
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-44390, 2537, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.3, 0.3], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44393, 2537]], altID: "atalinBF1"}));
                    }
                }
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinBF2")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    if (timeOfDay == "Day" || timeOfDay == "Dawn")
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-44307, 2693, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.3, 0.3], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44334, 2689]], altID: "atalinBF2"}));
                    }
                }
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinBF3")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    if (timeOfDay == "Day" || timeOfDay == "Dawn")
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-44777, 2107, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.3, 0.3], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44778, 2144]], altID: "atalinBF3"}));
                    }
                }
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinBF4")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    if (timeOfDay == "Day" || timeOfDay == "Dawn")
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-44875, 2057, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.3, 0.3], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44877, 2086]], altID: "atalinBF4"}));
                    }
                }
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinBF5")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    if (timeOfDay == "Day" || timeOfDay == "Dawn")
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-45600, 2052, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.3, 0.3], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45583, 2092]], altID: "atalinBF5"}));
                    }
                }
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinBF6")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    if (timeOfDay == "Day" || timeOfDay == "Dawn")
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-45747, 2421, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.3, 0.3], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45716, 2433]], altID: "atalinBF6"}));
                    }
                }

                if (uniqueChars.eduardoLDS)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Hidalgo Eduardo the Commissioner")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-45111, 2079, "Soldier", false, "Hidalgo Eduardo the Commissioner", {race: "Nirwaden", faction: "Nirwaden", con: 20, speed: 1.15, outfit: ["matadorOutfit", 0], weapon: ["nirineseSabre", [12, 11], 0, 25, 1.25], ranged: [false, "steelBolt", 14, 2200, 17, 16 /3, 0, "none", 3.35], patrolStops: 1, patrolLoop: false, route:[[-45101, 2053]]}));
                    }
                }

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinPed2")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    if (timeOfDay == "Day" || timeOfDay == "Dusk" || timeOfDay == "Dawn")
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-44124, 1351, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.3, 0.3], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 13, patrolLoop: true, route:[[-45046, 1341], [-45072, 527], [-46096, 498], [-46110, 1414], [-47019, 1410], [-47028, 1131], [-47250, 1122], [-47245, 272], [-47361, 260], [-44337, 245], [-44351, 487], [-44176, 495], [-44124, 1351]], altID: "atalinPed2"}));
                    }
                }

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Altezor Soldier")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "gardenGuard2")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44140, 7902, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 9, speed: 1.34, outfit: ["nirwadenMorionArmour", 12], weapon: ["nirineseSabre", [9, 9], 0, 22, 1], ranged: [false, "steelBolt", 14, 2200, 15, 16 /3, 0, "none", 3], patrolStops: 2, patrolLoop: true, route:[[-44140, 3009], [-44140, 7902]], altID: "gardenGuard2"}));
                }

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Altezor Soldier")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "centreGuard2")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-45144, 1067, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 8, speed: 1.2, outfit: ["nirwadenMorionArmour", 11], weapon: ["nirineseSabre", [10, 10], 0, 23, 1.2], ranged: [false, "steelBolt", 16, 2250, 16, 17 /3, 0, "none", 3], patrolStops: 5, patrolLoop: true, route:[[-46043, 1056], [-45964, 2756], [-45964, 459], [-45144, 459], [-45144, 1067]], altID: "centreGuard2"}));
                }

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Altezor Soldier")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "centreGuard3")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44058, -715, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 9, speed: 1.3, outfit: ["nirwadenMorionArmour", 12], weapon: ["nirineseSabre", [9, 9], 0, 25, 1.25], ranged: [false, "steelBolt", 14, 2250, 19, 18 /3, 0, "none", 3], patrolStops: 0, patrolLoop: false, route:[[-45458, -1070]], altID: "centreGuard3"}));
                }
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Altezor Soldier")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "woodsGuard1")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-43227, -2825, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 8, speed: 1.25, outfit: ["nirwadenMorionArmour", 11], weapon: ["nirineseSabre", [9, 9], 0, 24, 1.3], ranged: [false, "steelBolt", 15, 2250, 17, 17 /3, 0, "none", 3.15], patrolStops: 2, patrolLoop: true, route:[[-44081, -2825], [-43227, -2825]], altID: "woodsGuard1"}));
                }

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Altezor Soldier")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "orchardGuard1")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-41770, 2839, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 6, speed: 1.15, outfit: ["nirwadenMorionArmour", 10], weapon: ["nirineseSabre", [8, 8], 0, 24, 1.35], ranged: [false, "steelBolt", 15, 2250, 17, 17 /3, 0, "none", 3.15], patrolStops: 4, patrolLoop: true, route:[[-44177, 2826], [-44128, 1311], [-41736, 1321], [-41770, 2839]], altID: "orchardGuard1"}));
                }


                change = "e4";
            }
        }
        else if (region == "e5") //Atalin City
        {
            if (change != "e5")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                generator2(897, 27418911, 421534281, 8548903, 119, 1, -44150, -3266, true);
                cropper(-44150, -3266, -45175, -3598, true, true);

                for (var i = scenicList.length -1; i >= 0; i--)
                {
                    if (scenicList[i].type != "pineTree")
                    {
                        scenicList.splice(i, 1);
                    }
                }

                //s-1-e-5
                generator2(789678567456345678, 87675674567589, 23453467578, 87967857598607, 775764427, 1, -44316, -3916, true);
                cropper(-44316, -3916, -46384, -13818, true, true);

                generator2(194838973478567290593490753765777, 874189889999927462711, 21264612647782889982392365641534281, 4291914929422375482332503, 3339769, 1, -40882, 3192, true);
                cropper(-40882, -3192, -44012, -3634, true, true);

                generator2(53765777, 99, 213974281, 332503, 100101000, 1, -33959, -3720, true);
                cropper(-40435, -3624, -44055, -13911, true, true);

                //e - 5 east plains
                generator(865, 32636879, 341351, 76543332, 327689, 2, -47650, 6003); //eastern grasslands in map e-5
                cropper(-47650, 6003, -53392, -3104, true, true);

                for (var i = ArtificialIntelligenceAccess.length -1; i >= 0; i--)
                {
                    if (ArtificialIntelligenceAccess[i].type == "Peacock")
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                    }
                }

                //generator(998194838973478567290593490753765777, 893156183774189889999927462711, 212646126477828899823923656415326758196327583974281, 6688395285999999892194291914929422375482332503, 1111111111009836537010101010010100000011110010 , 1, -44194, 6496);

                //REGION CREATION
                //Build AI Units

                //PROPS
                //scenicList.push(new Scenery("skeleton", -19230, 5008, 5.12, 1.75));

                //CREATURES
                //ArtificialIntelligenceAccess.push(new Unit(-13935, 2270, "Grib", false, "docile"));
                //ArtificialIntelligenceAccess.push(new Unit(-14477, 1925, "Viper", false, "Slib"));
                //ArtificialIntelligenceAccess.push(new Unit(-14087, 1359, "Lizard", true, "Lib"));
                //ArtificialIntelligenceAccess.push(new Unit(-14501, 3283, "BlackBear", false, "Clib"));
                //ArtificialIntelligenceAccess.push(new Unit(-15119, 2314, "Varn", true, "Flib"));
                //ArtificialIntelligenceAccess.push(new Unit(-13713, 5329, "Narthwarp", false, "silwil"));
                //scenicList.push(new Scenery("ulgoyPlant", -16488, 3908, 4.9, 7));
                //ArtificialIntelligenceAccess.push(new Unit(-16473, 3885, "Ulgoy", "giant", "The Really Big Plant"));
                //ArtificialIntelligenceAccess.push(new Unit(-16247, 3330, "Boar", true, "Tambor"));
                //ArtificialIntelligenceAccess.push(new Unit(-14353, 3844, "Shehid", true, "sheta"));
                //scenicList.push(new Scenery("beeHive", -15375 , -2055, 4.5, true));

                //Duendes
                if (quests.duendeInfestationKillCount < 9 && quests.duendeInfestationDuendeLoad == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44751, -2175, "Duende", true, "arena2"));
                    ArtificialIntelligenceAccess.push(new Unit(-44659, -2187, "Duende", true, "arena2"));
                    ArtificialIntelligenceAccess.push(new Unit(-44706, -2228, "Duende", true, "arena2"));
                    ArtificialIntelligenceAccess.push(new Unit(-44644, -2262, "Duende", true, "arena2"));
                    ArtificialIntelligenceAccess.push(new Unit(-44965, -2336, "Duende", true, "arena2"));
                    ArtificialIntelligenceAccess.push(new Unit(-44918, -2255, "Duende", true, "arena2"));
                    ArtificialIntelligenceAccess.push(new Unit(-44724, -2328, "Duende", true, "arena2"));
                    ArtificialIntelligenceAccess.push(new Unit(-44760, -2286, "Duende", true, "arena2"));
                    ArtificialIntelligenceAccess.push(new Unit(-44858, -2195, "Duende", true, "arena2"));
                }

                if (quests.imaginaryFriendQuest == true)
                {
                    if (uniqueChars.boggartLezarLDS)
                    {
                        var hits = 0;
                        for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                        {
                            if (ArtificialIntelligenceAccess[i].ID == "Lezar" && ArtificialIntelligenceAccess[i].type == "Boggart")
                            {
                                hits += 1;
                                break;
                            }
                        }
                        if (hits == 0)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-46191, -1284, "Boggart", true, "Lezar"));//boggart
                        }
                    }
                }

                if (player.raceName != "Nirwaden" || player.title != "Nobility" && player.title != "Royalty")
                {
                    scenicList.push(new Scenery("polyapaTree", -45646, 1617, 1.5, "nirwaden"));
                    scenicList.push(new Scenery("polyapaTree", -45646, 1917, -8, "nirwaden"));

                    scenicList.push(new Scenery("chonaTree", -45346, 1617, 6.5, "nirwaden"));
                    scenicList.push(new Scenery("chonaTree", -45346, 1917, -4.75, "nirwaden"));

                    scenicList.push(new Scenery("chonaTree", -44746, 1617, -2.5, "nirwaden"));
                    scenicList.push(new Scenery("chonaTree", -44746, 1917, 5.5, "nirwaden"));

                    scenicList.push(new Scenery("polyapaTree", -44446, 1617, 3.5, "nirwaden"));
                    scenicList.push(new Scenery("polyapaTree", -44446, 1917, 1.67, "nirwaden"));

                    for (var poop = 0; poop < 16; poop++)
                    {
                        scenicList.push(new Scenery("rosePlant", -44452, 3119 + 300 * poop, 3.78 * 2 * Math.cos(poop * poop), "nirwaden"));
                        scenicList.push(new Scenery("yellowStetriliPlant", -44571, 3004 + 300 * poop, 3.78 * 2 * Math.sin(poop * poop), "nirwaden"));
                        scenicList.push(new Scenery("redStetriliPlant", -44327, 3244 + 300 * poop, 3.78 * 2 * Math.cos(poop + 3 * poop), "nirwaden"));
                    }
                    for (var poop = 0; poop < 15; poop++)
                    {
                        if (poop < 3 || poop > 5)
                        {
                            scenicList.push(new Scenery("yellowStetriliPlant", -44870, 3304 + 300 * poop, 3.78 * 3 * Math.cos(poop * poop), "nirwaden"));
                            scenicList.push(new Scenery("rosePlant", -44752, 3419 + 300 * poop, 5.2 * poop * Math.sin(poop * 8), "nirwaden"));
                            scenicList.push(new Scenery("redStetriliPlant", -44630, 3304 + 300 * poop, 3.78 * 3 * Math.sin(poop + 4 * poop), "nirwaden"));
                        }
                    }

                    for (var poop = 0; poop < 16; poop++)
                    {
                        scenicList.push(new Scenery("yellowStetriliPlant", -45528, 3004 + 300 * poop, 3.78 * 2 * Math.cos(poop * poop), "nirwaden"));
                        scenicList.push(new Scenery("rosePlant", -45652, 3119 + 300 * poop, 3.78 * 2 * Math.sin(poop * poop), "nirwaden"));
                        scenicList.push(new Scenery("redStetriliPlant", -45776, 3244 + 300 * poop, 3.78 * 2 * Math.cos(poop + 3 * poop), "nirwaden"));
                    }

                    for (var poop = 0; poop < 15; poop++)
                    {
                        if (poop < 3 || poop > 5)
                        {
                            scenicList.push(new Scenery("yellowStetriliPlant", -45228, 3304 + 300 * poop, 3.78 * 3 * Math.sin(poop * poop), "nirwaden"));
                            scenicList.push(new Scenery("rosePlant", -45352, 3419 + 300 * poop, 5.2 * poop * Math.cos(poop * 8), "nirwaden"));
                            scenicList.push(new Scenery("redStetriliPlant", -45471, 3304 + 300 * poop, 3.78 * 3 * Math.cos(poop + 4 * poop), "nirwaden"));
                        }
                    }
                }
                else
                {
                    scenicList.push(new Scenery("polyapaTree", -45646, 1617, 1.5, true));
                    scenicList.push(new Scenery("polyapaTree", -45646, 1917, -8, true));

                    scenicList.push(new Scenery("chonaTree", -45346, 1617, 6.5, true));
                    scenicList.push(new Scenery("chonaTree", -45346, 1917, -4.75, true));

                    scenicList.push(new Scenery("chonaTree", -44746, 1617, -2.5, true));
                    scenicList.push(new Scenery("chonaTree", -44746, 1917, 5.5, true));

                    scenicList.push(new Scenery("polyapaTree", -44446, 1617, 3.5, true));
                    scenicList.push(new Scenery("polyapaTree", -44446, 1917, 1.67, true));

                    for (var poop = 0; poop < 16; poop++)
                    {
                        scenicList.push(new Scenery("rosePlant", -44452, 3119 + 300 * poop, 3.78 * 2 * Math.cos(poop * poop), true));
                        scenicList.push(new Scenery("yellowStetriliPlant", -44571, 3004 + 300 * poop, 3.78 * 2 * Math.sin(poop * poop), true));
                        scenicList.push(new Scenery("redStetriliPlant", -44327, 3244 + 300 * poop, 3.78 * 2 * Math.cos(poop + 3 * poop), true));
                    }
                    for (var poop = 0; poop < 15; poop++)
                    {
                        if (poop < 3 || poop > 5)
                        {
                            scenicList.push(new Scenery("yellowStetriliPlant", -44870, 3304 + 300 * poop, 3.78 * 3 * Math.cos(poop * poop), true));
                            scenicList.push(new Scenery("rosePlant", -44752, 3419 + 300 * poop, 5.2 * poop * Math.sin(poop * 8), true));
                            scenicList.push(new Scenery("redStetriliPlant", -44630, 3304 + 300 * poop, 3.78 * 3 * Math.sin(poop + 4 * poop), true));
                        }
                    }

                    for (var poop = 0; poop < 16; poop++)
                    {
                        scenicList.push(new Scenery("yellowStetriliPlant", -45528, 3004 + 300 * poop, 3.78 * 2 * Math.cos(poop * poop), true));
                        scenicList.push(new Scenery("rosePlant", -45652, 3119 + 300 * poop, 3.78 * 2 * Math.sin(poop * poop), true));
                        scenicList.push(new Scenery("redStetriliPlant", -45776, 3244 + 300 * poop, 3.78 * 2 * Math.cos(poop + 3 * poop), true));
                    }

                    for (var poop = 0; poop < 15; poop++)
                    {
                        if (poop < 3 || poop > 5)
                        {
                            scenicList.push(new Scenery("yellowStetriliPlant", -45228, 3304 + 300 * poop, 3.78 * 3 * Math.sin(poop * poop), true));
                            scenicList.push(new Scenery("rosePlant", -45352, 3419 + 300 * poop, 5.2 * poop * Math.cos(poop * 8), true));
                            scenicList.push(new Scenery("redStetriliPlant", -45471, 3304 + 300 * poop, 3.78 * 3 * Math.cos(poop + 4 * poop), true));
                        }
                    }
                }

                scenicList.push(new Scenery("stillFountain", -45055, 4620, 0, 0, 2));


                //Build Scenery
                scenicList.push(new Scenery("nirwadenStadium", -45043, 2535, 0, true));
                scenicList.push(new Scenery("nirwadenStadiumCanopy", -45043, 2885, 0, true));

                scenicList.push(new Scenery("nirwadenStableD", -46576, 1573, 0, true));
                scenicList.push(new Scenery("nirwadenStableD", -46903, 1573, 0, true));
                scenicList.push(new Scenery("hayPile", -46476, 1591, 4, 1.62));
                scenicList.push(new Scenery("hayPile", -46940, 1578, 9, 1.333));
                scenicList.push(new Scenery("nirwadenStableD", -46912, -1625, 0, true));

                ArtificialIntelligenceAccess.push(new Unit(-46606, 1571, "Horse", true, "Elbelico"));
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Elbelico")
                    {
                        ArtificialIntelligenceAccess[i].baseTeam = "Nirwaden";
                        ArtificialIntelligenceAccess[i].tamable = false;
                    }
                }

                //main plaza east
                scenicList.push(new Scenery("nirwadenBuilding7", -46876, -1217, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding4", -46104, -1264, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding5", -47088, 39, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding6", -46759, 898, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -47185, 1331, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1",-46267, 1223 , 0, true));
                scenicList.push(new Scenery("pyre", -45904, 39, 0, true));
                scenicList.push(new Scenery("well", -47164, -1414, 5.15, true));
                scenicList.push(new Scenery("nirwadenBuilding3", -45615, 828, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1",-45695, 1332, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -45484, 1336, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -44115, 153, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -44422, 812, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -44651, 808, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding3", -44741, 524, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -44537, 1090, 0, true));

                //middle class residential east Atalin (westside of map)
                scenicList.push(new Scenery("nirwadenBuilding4", -44859, -2875, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -44276, -2872, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -44119, -2456, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -44613, -2497, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding3", -44807, -2234, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -45278, -2760, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -45200, -2470, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -45127, -2109, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -45505, -2414, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -45430, -2121, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -44336, -2207, 0, true));
                scenicList.push(new Scenery("nirwadenTiendaD", -44521, -2300, 0, 1));
                scenicList.push(new Scenery("nirwadenTiendaD", -44521, -2200, 0, 0));
                scenicList.push(new Scenery("nirwadenTiendaD", -44521, -2130, 0, 1));
                scenicList.push(new Scenery("nirwadenBuilding3", -45430, -1658, 0, true));
                scenicList.push(new Scenery("nirwadenTiendaU", -44922, -2111, 0, 4));
                scenicList.push(new Scenery("nirwadenTiendaR", -44085, -1873, 0, 0));
                scenicList.push(new Scenery("nirwadenTiendaR", -44091, -1630, 0, 1));
                scenicList.push(new Scenery("nirwadenTiendaD", -44382, -1858, 0, 3));
                scenicList.push(new Scenery("nirwadenTiendaL", -44979, -1661, 0, 5));
                scenicList.push(new Scenery("nirwadenTiendaU", -44677, -1863, 0, 2));
                scenicList.push(new Scenery("nirwadenTiendaD", -44113, -1197, 0, 0));
                scenicList.push(new Scenery("nirwadenTiendaD", -44524, -1582, 0, 0));
                scenicList.push(new Scenery("nirwadenTiendaL", -44696, -1306, 0, 1));
                scenicList.push(new Scenery("nirwadenTiendaR", -44113, -928, 0, 2));
                scenicList.push(new Scenery("nirwadenTiendaU", -44765, -1153, 0, 3));
                scenicList.push(new Scenery("nirwadenTiendaR", -44817, -1296, 0, 2));
                scenicList.push(new Scenery("nirwadenTiendaL", -45265, -1407, 0, 1));
                scenicList.push(new Scenery("nirwadenTiendaR", -45399, -1414, 0, 0));
                scenicList.push(new Scenery("nirwadenTiendaD", -45239, -1103, 0, 5));
                scenicList.push(new Scenery("nirwadenTiendaD", -44536, -791, 0, 0));
                scenicList.push(new Scenery("nirwadenTiendaU", -45234, -985, 0, 2));
                scenicList.push(new Scenery("nirwadenTiendaR", -44897, -666, 0, 1));
                scenicList.push(new Scenery("nirwadenTiendaL", -44484, -647, 0, 1));
                scenicList.push(new Scenery("nirwadenTiendaR", -44592, -646, 0, 3));
                scenicList.push(new Scenery("nirwadenTiendaL", -45590, -896, 0, 0));
                scenicList.push(new Scenery("nirwadenTiendaD", -44099, -519, 0, 5));
                scenicList.push(new Scenery("nirwadenTiendaU", -44097, -406, 0, 2));
                scenicList.push(new Scenery("nirwadenTiendaD", -44722, -365, 0, 0));
                scenicList.push(new Scenery("nirwadenTiendaL", -45236, -511, 0, 2));
                scenicList.push(new Scenery("nirwadenTiendaD", -45282, -648, 0, 3));

                scenicList.push(new Scenery("hayPile", -44060, -2075, 2, 1.7));
                scenicList.push(new Scenery("hayPile", -44078, -2141, 7, 1.6));

                //wine stand
                scenicList.push(new Scenery("nirwadenMueble", -45279, -668, 0 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("barrel", -45342, -638, 3.333, 1));
                scenicList.push(new Scenery("item", -45310, -671, 0, "nirwaden", ["glassBottleOfErguerWine", 1, -30]));
                scenicList.push(new Scenery("item", -45294, -672, 0, "nirwaden", ["glassBottleOfErguerWine", 1, -30]));
                scenicList.push(new Scenery("item", -45278, -670, 0, "nirwaden", ["glassBottleOfErguerWine", 1, -30]));
                scenicList.push(new Scenery("item", -45262, -668, 0, "nirwaden", ["glassBottleOfErguerWine", 1, -30]));
                scenicList.push(new Scenery("item", -45249, -670, 0, "nirwaden", ["erguerPaste", 2, -6]));
                scenicList.push(new Scenery("item", -45246, -675, 0, "nirwaden", ["erguerPaste", 2, -6]));
                scenicList.push(new Scenery("item", -45248, -666, 0, "nirwaden", ["erguerPaste", 2, -6]));
                scenicList.push(new Scenery("nirwadenGoods", -45234, -633, 4, 27)); //erguer
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Wine Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-45280, -627, "Person", false, "Wine Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.1, 0.3], 0, 0, 1.1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-45280, -645]], merchant: true, merchandise: [[new Item("coins", false, false), 60], [new Item("glassBottleOfErguerWine", false, false), 9], [new Item("erguerPaste", false, false), 15]]}));
                }
                //lights stand
                scenicList.push(new Scenery("nirwadenMueble", -45234, -467, 1.7, 2)); //square table
                scenicList.push(new Scenery("item", -45223, -449, 0, "nirwaden", ["oilLanternEmpty", 1, -25]));
                scenicList.push(new Scenery("item", -45225, -475, 0, "nirwaden", ["oilLampEmpty", 1, -15]));
                scenicList.push(new Scenery("item", -45242, -472, 0, "nirwaden", ["jarOfOil", 1, -10]));
                scenicList.push(new Scenery("item", -45242, -450, 0, "nirwaden", ["fireStarter", 1, -8]));
                scenicList.push(new Scenery("barrel", -45267, -557, 5.3, 0));
                scenicList.push(new Scenery("crate", -45213, -569, 2.4, 1, [1.02]));
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Lights Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-45280, -524, "Person", false, "Lights Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.1, 0.3], 0, 0, 1.1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-45238, -519]], merchant: true, merchandise: [[new Item("coins", false, false), 16], [new Item("oilLantern", false, false), 2], [new Item("oilLamp", false, false), 2], [new Item("jarOfOil", false, false), 3], [new Item("fireStarter", false, false), 3]]}));
                }
                //dairy stand
                scenicList.push(new Scenery("nirwadenMueble", -44924, -674, 1/2 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("item", -44880, -617, 0, "nirwaden", ["bucketOfNaapridMilk", 1, -19]));
                scenicList.push(new Scenery("item", -44906, -601, 0, "nirwaden", ["bucketOfNaapridMilk", 1, -19]));
                scenicList.push(new Scenery("item", -44929, -706, 0, "nirwaden", ["naapridButter", 2, -15]));
                scenicList.push(new Scenery("item", -44928, -698, 0, "nirwaden", ["mofuEgg", 3, -5]));
                scenicList.push(new Scenery("item", -44921, -688, 0, "nirwaden", ["mofuEgg", 3, -5]));
                scenicList.push(new Scenery("item", -44923, -678, 0, "nirwaden", ["mofuEgg", 3, -5]));
                scenicList.push(new Scenery("item", -44926, -694, 0, "nirwaden", ["mofuEgg", 3, -5]));
                scenicList.push(new Scenery("item", -44927, -690, 0, "nirwaden", ["mofuEgg", 3, -5]));
                scenicList.push(new Scenery("item", -44920, -704, 0, "nirwaden", ["mofuEgg", 3, -5]));
                scenicList.push(new Scenery("item", -44926, -645, 0, "nirwaden", ["naapricha", 1, -40]));
                scenicList.push(new Scenery("item", -44925, -662, 0, "nirwaden", ["naaprichaWedge", 1, -10]));
                scenicList.push(new Scenery("item", -44925, -674, 0, "nirwaden", ["naaprichaWedge", 1, -10]));
                scenicList.push(new Scenery("crate", -44882, -727, 2.832, 1, [1.3]));
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Dairy Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44858, -672, "Person", false, "Dairy Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.1, 0.3], 0, 0, 1.1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-44897, -672]], merchant: true, merchandise: [[new Item("coins", false, false), 35], [new Item("naapricha", false, false), 2], [new Item("naaprichaWedge", false, false), 5], [new Item("bucketOfNaapridMilk", false, false), 2], [new Item("naapridButter", false, false), 4], [new Item("mofuEgg", false, false), 42]]}));
                }

                //fruit stand
                //scenicList.push(new Scenery("nirwadenMueble", -44470, -648, 0.5016 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("nirwadenGoods", -44677, -343, 9, 7)); //empty
                scenicList.push(new Scenery("nirwadenGoods", -44710, -343, -3.43, 7)); //empty
                scenicList.push(new Scenery("nirwadenGoods", -44655, -371, -2, 7)); //empty
                scenicList.push(new Scenery("nirwadenGoods", -44655, -398, 0, 7)); //empty
                scenicList.push(new Scenery("nirwadenGoods", -44762, -345, 0, 3)); //ogo
                scenicList.push(new Scenery("nirwadenGoods", -44785, -360, 0, 4)); //polyapa
                scenicList.push(new Scenery("nirwadenGoods", -44792, -382, 0, 11)); //empty
                scenicList.push(new Scenery("item", -44792, -380, 0, "nirwaden", ["chonaFruit", 4, -7]));
                scenicList.push(new Scenery("item",-44788, -383, 0, "nirwaden", ["chonaFruit", 4, -7]));
                scenicList.push(new Scenery("item",-44785, -381, 0, "nirwaden", ["chonaFruit", 4, -7]));

                scenicList.push(new Scenery("item", -44792 - 9, -380, 0, "nirwaden", ["chonaFruit", 4, -7]));
                scenicList.push(new Scenery("item",-44788 - 9, -383, 0, "nirwaden", ["chonaFruit", 4, -7]));
                scenicList.push(new Scenery("item",-44785 - 9, -381, 0, "nirwaden", ["chonaFruit", 4, -7]));
                scenicList.push(new Scenery("item",-44710, -345, 0, "nirwaden", ["bequonFruit", 1, -14]));
                scenicList.push(new Scenery("item",-44678, -344, 0, "nirwaden", ["karmFruit", 2, -12]));
                scenicList.push(new Scenery("item",-44656, -372, 0, "nirwaden", ["kwomFruit", 1, -10]));
                scenicList.push(new Scenery("item",-44657, -398, 0, "nirwaden", ["suuliMelon", 3, -21]));

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Fruit Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44717, -338, "Person", false, "Fruit Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.1, 0.3], 0, 0, 1.1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-44717, -389]], merchant: true, merchandise: [[new Item("coins", false, false), 61], [new Item("chonaFruit", false, false), 25], [new Item("polyapaFruit", false, false), 28], [new Item("suuliMelon", false, false), 8], [new Item("bequonFruit", false, false), 2], [new Item("ogoFruit", false, false), 10], [new Item("karmFruit", false, false), 3], [new Item("kwomFruit", false, false), 2]]}));
                }
                        //mineral stand
                scenicList.push(new Scenery("nirwadenMueble", -45602, -932, 0.5039 * Math.PI, 2)); //square table
                scenicList.push(new Scenery("item", -45611, -916, 0, "nirwaden", ["rawGold", 1, -25]));
                scenicList.push(new Scenery("item", -45610, -930, 0, "nirwaden", ["rawSilver", 1, -25]));
                scenicList.push(new Scenery("item", -45609, -946, 0, "nirwaden", ["ironOre", 1, -4]));
                scenicList.push(new Scenery("item", -45590, -936, 0, "nirwaden", ["copperOre", 2, -14]));
                scenicList.push(new Scenery("nirwadenGoods", -45600, -878, 1, 14)); //
                scenicList.push(new Scenery("item",-45592, -915, 0, "nirwaden", ["copperDust", 5, -12]));
                scenicList.push(new Scenery("crate", -45586, -833, -8.6321, 1, [1.4]));

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Arcus Co Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-45615, -884, "Person", false, "Arcus Co Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.1, 0.3], 0, 0, 1.1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-45560, -878]], merchant: true, merchandise: [[new Item("coins", false, false), 70], [new Item("copperOre", false, false), 19], [new Item("copperDust", false, false), 6], [new Item("rawGold", false, false), 3], [new Item("rawSilver", false, false), 5], [new Item("ironOre", false, false), 17]]}));
                }
                        //nirwaden mercenaries enclave
                if (uniqueChars.loLDS)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Sellsword" && ArtificialIntelligenceAccess[i].type == "Soldier")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.sellswordID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.sellswordID == "Martin")
                                {
                                    hits += 1;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-44888, -2127, "Soldier", false, "Sellsword", {race: "Nirwaden", faction: "EstolGang", con: 4, speed: 1.1, outfit: ["nirwadenGambeson", 2.5], weapon: ["nirineseSabre", [6, 6], 0, 20, 1.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 1, patrolLoop: true, route:[[-44888, -2097]], sellswordID: "Martin", sightRadius: 600, hirePrice: 90}));
                    }
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Sellsword" && ArtificialIntelligenceAccess[i].type == "Soldier")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.sellswordID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.sellswordID == "David")
                                {
                                    hits += 1;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-44996, -2129, "Soldier", false, "Sellsword", {race: "Nirwaden", faction: "EstolGang", con: 3, speed: 1.435, outfit: ["varnFurClothing", 0], weapon: ["crossbow", [0.1, 0.3], 0, 0, 11], ranged: [true, "steelBolt", 17, 2330, 18, 11 /3, 0, "none", 11], patrolStops: 1, patrolLoop: true, route:[[-44979, -2106]], sellswordID: "David", sightRadius: 1150, hirePrice: 174}));
                    }
                }
                    //trapping stand
                scenicList.push(new Scenery("nirwadenMueble", -44726, -1860, 0.5075 * Math.PI, 2)); //square table
                scenicList.push(new Scenery("item", -44726, -1860, 0, "nirwaden", ["jacks", 3, -12]));
                scenicList.push(new Scenery("item", -44711, -1874, 0, "nirwaden", ["jacks", 3, -12]));
                scenicList.push(new Scenery("item", -44710, -1850, 0, "nirwaden", ["beartrap", 1, -11]));
                scenicList.push(new Scenery("item", -44731, -1876, 0, "nirwaden", ["beartrap", 1, -11]));
                scenicList.push(new Scenery("item", -44728, -1841, 0, "nirwaden", ["beartrap", 1, -11]));
                scenicList.push(new Scenery("crate", -44663, -1898, 9.2, 1, [1.15]));

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Trap Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44655, -1862, "Person", false, "Trap Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["blackBearFurClothing", 0.25], weapon: ["crossbow", [0.1, 0.3], 0, 0, 13], ranged: [true, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44655, -1850]], merchant: true, merchandise: [[new Item("coins", false, false), 18], [new Item("jacks", false, false), 13], [new Item("beartrap", false, false), 3]]}));
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Trap Vendor")
                        {
                            ArtificialIntelligenceAccess[i].healthMAX = 24;
                            ArtificialIntelligenceAccess[i].health = 24;
                        }
                    }
                }
                    //pastry stand
                scenicList.push(new Scenery("nirwadenMueble", -45419, -1418, 0.51 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("item", -45420, -1385, 0, "nirwaden", ["iemaTart", 2, -9]));
                scenicList.push(new Scenery("item", -45419, -1400, 0, "nirwaden", ["iemaTart", 2, -9]));
                scenicList.push(new Scenery("item", -45418, -1413, 0, "nirwaden", ["polyapaTart", 2, -9]));
                scenicList.push(new Scenery("item", -45417, -1424, 0, "nirwaden", ["polyapaTart", 2, -9]));
                scenicList.push(new Scenery("item", -45420, -1436, 0, "nirwaden", ["chonaTart", 2, -9]));
                scenicList.push(new Scenery("item", -45415, -1446, 0, "nirwaden", ["chonaTart", 2, -9]));

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Pastry Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-45390, -1413, "Person", false, "Pastry Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.125, 0.15], 0, 0, 0.9], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-44655, -1850]], merchant: true, merchandise: [[new Item("coins", false, false), 56], [new Item("iemaTart", false, false), 9], [new Item("polyapaTart", false, false), 16], [new Item("chonaTart", false, false), 18]]}));
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Pastry Vendor")
                        {
                            ArtificialIntelligenceAccess[i].speed = 1.525;
                            ArtificialIntelligenceAccess[i].healthMAX = 3;
                            ArtificialIntelligenceAccess[i].health = 3;
                        }
                    }
                }

                //flower stand
                scenicList.push(new Scenery("nirwadenMueble", -45262, -1407, 0.4962 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("item", -45265, -1382, 0, "nirwaden", ["volaFlowers", 1, -16]));
                scenicList.push(new Scenery("item", -45263, -1377, 0, "nirwaden", ["rilthasiaFlower", 1, -8]));
                scenicList.push(new Scenery("item", -45262, -1392, 0, "nirwaden", ["rilthasiaFlower", 1, -8]));
                scenicList.push(new Scenery("item", -45261, -1410, 0, "nirwaden", ["galloshFlower", 1, -15]));
                scenicList.push(new Scenery("item", -45261, -1424, 0, "nirwaden", ["erguerFlower", 3, -9]));
                scenicList.push(new Scenery("item", -45256, -1431, 0, "nirwaden", ["erguerFlower", 3, -9]));
                scenicList.push(new Scenery("crate", -45301, -1364, 6.56 + Math.PI, 1, [1.14]));


                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Flower Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-45327, -1410, "Person", false, "Flower Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.125, 0.15], 0, 0, 0.9], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45286, -1408]], merchant: true, merchandise: [[new Item("coins", false, false), 10], [new Item("rilthasiaFlower", false, false), 6], [new Item("volaFlowers", false, false), 3], [new Item("galloshFlower", false, false), 4], [new Item("erguerFlower", false, false), 22]]}));
                }

                    //hides and pelts stand
                scenicList.push(new Scenery("nirwadenMueble", -44975, -1707, 0.5 * Math.PI, 2)); //table sml square
                scenicList.push(new Scenery("nirwadenMueble", -44978, -1614, 0.512 * Math.PI, 2)); //table sml square
                scenicList.push(new Scenery("crate", -45020, -1617, 0 + Math.PI, 1, [1.14]));
                scenicList.push(new Scenery("item", -44984, -1612, 0, "nirwaden", ["molteHide", 1, -20]));
                scenicList.push(new Scenery("item", -44974, -1624, 0, "nirwaden", ["smlBlackBearPelt", 1, -8]));
                scenicList.push(new Scenery("item", -44973, -1689, 0, "nirwaden", ["varnPelt", 1, -3]));
                scenicList.push(new Scenery("item", -44978, -1704, 0, "nirwaden", ["frichPelt", 1, -1]));
                scenicList.push(new Scenery("item", -44964, -1705, 0, "nirwaden", ["frichPelt", 1, -1]));
                scenicList.push(new Scenery("item", -44972, -1722, 0, "nirwaden", ["ardilPelt", 2, -8]));
                scenicList.push(new Scenery("item", -44979, -1598, 0, "nirwaden", ["varnPelt", 1, -3]));


                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Furs Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-45017, -1659, "Person", false, "Furs Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["none", 0], weapon: ["none", [0.125, 0.15], 0, 0, 0.9], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44986, -1658]], merchant: true, merchandise: [[new Item("coins", false, false), 37], [new Item("molteHide", false, false), 3], [new Item("medBlackBearPelt", false, false), 4], [new Item("varnPelt", false, false), 7], [new Item("frichPelt", false, false), 5], [new Item("ardilPelt", false, false), 2]]}));
                }
                    //root vegetable stand
                scenicList.push(new Scenery("nirwadenMueble", -45242, -1113, Math.PI, 1)); //bench
                scenicList.push(new Scenery("crate", -45192, -1070, 8.2 + Math.PI, 1, [1.03]));
                scenicList.push(new Scenery("item", -45214, -1115, 0, "nirwaden", ["palntRoot", 2, -5]));
                scenicList.push(new Scenery("item", -45226, -1113, 0, "nirwaden", ["palntRoot", 2, -5]));
                scenicList.push(new Scenery("item", -45231, -1117, 0, "nirwaden", ["carrot", 2, -4]));
                scenicList.push(new Scenery("item", -45244, -1115, 0, "nirwaden", ["carrot", 2, -4]));
                scenicList.push(new Scenery("item", -45261, -1112, 0, "nirwaden", ["potato", 1, -1]));
                scenicList.push(new Scenery("item", -45277, -1121, 0, "nirwaden", ["potato", 2, -2]));


                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Vegetable Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-45242, -1059, "Person", false, "Vegetable Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.45], 0, 0, 1.06], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45234, -1085]], merchant: true, merchandise: [[new Item("coins", false, false), 25], [new Item("carrot", false, false), 20], [new Item("palntRoot", false, false), 19], [new Item("potato", false, false), 14]]}));
                }
                    //homeware stand
                scenicList.push(new Scenery("nirwadenMueble", -45235, -977, 0, 1)); //bench
                scenicList.push(new Scenery("crate", -45188, -1020, 3.4, 2, [1.35]));
                scenicList.push(new Scenery("item", -45166, -983, 0, "nirwaden", ["bucket", 1, -6]));
                scenicList.push(new Scenery("item", -45164, -958, 0, "nirwaden", ["bucket", 1, -6]));
                scenicList.push(new Scenery("item", -45282, -1025, 0, "nirwaden", ["barrel", 1, -18]));
                scenicList.push(new Scenery("item", -45264, -979, 0, "nirwaden", ["glassBottle", 1, -4]));
                scenicList.push(new Scenery("item", -45252, -972, 0, "nirwaden", ["glassBottle", 1, -4]));
                scenicList.push(new Scenery("item", -45239, -977, 0, "nirwaden", ["pintGlass", 2, -2]));
                scenicList.push(new Scenery("item", -45223, -984, 0, "nirwaden", ["pintGlass", 2, -2]));
                scenicList.push(new Scenery("item", -45206, -972, 0, "nirwaden", ["woodenBowl", 3, -7]));
                scenicList.push(new Scenery("item", -45205, -985, 0, "nirwaden", ["woodenBowl", 2, -5]));
                scenicList.push(new Scenery("item", -45225, -973, 0, "nirwaden", ["pintGlass", 2, -2]));
                scenicList.push(new Scenery("barrel", -45293, -989, -3.55555, 1));


                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Homeware Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-45229, -1032, "Person", false, "Homeware Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.1, 0.1], 0, 0, 1.14], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45236, -998]], merchant: true, merchandise: [[new Item("coins", false, false), 69], [new Item("barrel", false, false), 2], [new Item("bucket", false, false), 6], [new Item("glassBottle", false, false), 10], [new Item("pintGlass", false, false), 26], [new Item("woodenBowl", false, false), 19]]}));
                }
                    //meat stand
                scenicList.push(new Scenery("nirwadenMueble", -44686, -1298, -1/2 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("crate", -44735, -1267, 5, 2, [1.26]));
                scenicList.push(new Scenery("item", -44688, -1273, 0, "nirwaden", ["boarMeat", 1, -25]));
                scenicList.push(new Scenery("item", -44684, -1300 + 5, 0, "nirwaden", ["curedPork", 3, -8]));
                scenicList.push(new Scenery("item", -44685, -1316 + 5, 0, "nirwaden", ["curedPork", 3, -8]));
                scenicList.push(new Scenery("item", -44682, -1332 + 5, 0, "nirwaden", ["curedPork", 4, -11]));


                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Cured Pork Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44735, -1298, "Person", false, "Cured Pork Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.6, 0.35], 0, 0, 1.24], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44718, -1297]], merchant: true, merchandise: [[new Item("coins", false, false), 95], [new Item("boarMeat", false, false), 3], [new Item("curedPork", false, false), 24]]}));
                }
                //meat stand
                scenicList.push(new Scenery("nirwadenMueble", -44817, -1303, 0.511 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("nirwadenMueble", -44827, -1304, 0.511 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("crate", -44779, -1330, 1.3, 1, [1.15]));
                scenicList.push(new Scenery("item", -44815, -1333, 0, "nirwaden", ["rawNaapridFlesh", 2, -12]));
                scenicList.push(new Scenery("item", -44818, -1271, 0, "nirwaden", ["rawBearFlesh", 2, -20]));
                scenicList.push(new Scenery("item", -44821, -1294, 0, "nirwaden", ["rawBoarChunks", 1, -10]));
                scenicList.push(new Scenery("item", -44830, -1278, 0, "nirwaden", ["rawBoarChunksSmall", 1, -4]));
                scenicList.push(new Scenery("item", -44815, -1296, 0, "nirwaden", ["rawPorkbelly", 1, -24]));
                scenicList.push(new Scenery("item", -44821, -1310, 0, "nirwaden", ["rawBoarFlesh", 1, -17]));
                scenicList.push(new Scenery("item", -44828, -1325, 0, "nirwaden", ["rawVarnFlesh", 3, -9]));


                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Meat Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44769, -1293, "Person", false, "Meat Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.22], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44789, -1292]], merchant: true, merchandise: [[new Item("coins", false, false), 73], [new Item("rawBoarFlesh", false, false), 2], [new Item("rawBoarChunks", false, false), 2], [new Item("rawBoarChunksSmall", false, false), 4], [new Item("rawPorkbelly", false, false), 1], [new Item("rawNaapridFlesh", false, false), 6], [new Item("rawBearFlesh", false, false), 5], [new Item("rawVarnFlesh", false, false), 8]]}));
                }
                //fish stand
                scenicList.push(new Scenery("nirwadenMueble", -44792, -1148, 1.02 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("nirwadenMueble", -44729, -1149, 0.98 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("crate", -44758, -1194, -1.45, 2, [1.111]));
                scenicList.push(new Scenery("item", -44711, -1142, 0, "nirwaden", ["rawRedBelliedFalder", 2, -8]));
                scenicList.push(new Scenery("item", -44711, -1154, 0, "nirwaden", ["rawRedBelliedFalder", 2, -8]));
                scenicList.push(new Scenery("item", -44724, -1150, 0, "nirwaden", ["crawdid", 3, -17]));
                scenicList.push(new Scenery("item", -44760, -1153, 0, "nirwaden", ["rawSalmon", 2, -26]));
                scenicList.push(new Scenery("item", -44739, -1147, 0, "nirwaden", ["crawdid", 3, -17]));
                scenicList.push(new Scenery("item", -44806, -1155, 0, "nirwaden", ["rawDuskfish", 2, -12]));
                scenicList.push(new Scenery("item", -44806, -1144, 0, "nirwaden", ["rawDuskfish", 2, -12]));
                scenicList.push(new Scenery("item", -44785, -1142, 0, "nirwaden", ["rawSlol", 2, -16]));
                scenicList.push(new Scenery("crate", -44723, -1189, -4.08, 2, [0.88]));


                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Fish Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44802, -1207, "Person", false, "Fish Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.22], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44786, -1174]], merchant: true, merchandise: [[new Item("coins", false, false), 34], [new Item("rawRedBelliedFalder", false, false), 5], [new Item("rawSlol", false, false), 3], [new Item("rawSalmon", false, false), 2], [new Item("crawdid", false, false), 7], [new Item("rawDuskfish", false, false), 4]]}));
                }

                //marketgoers
                //
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinMarketGoer1")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44120, -1292, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.22], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 13, patrolLoop: true, route:[[-44247, -1635], [-44150, -1624], [-44260, -1991], [-44909, -1987], [-45061, -1853], [-45727, -1845], [-45726, -1409], [-45446, -1402], [-45449, -1453], [-45645, -1215], [-44880, -1302], [-44893, -1725], [-44207, -1701]], altID: "atalinMarketGoer1"}));
                }
                //
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinMarketGoer2")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-45278, -729, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.22], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 13, patrolLoop: true, route:[[-44536, -942], [-44534, -829], [-44412, -945], [-44167, -931], [-44127, -572], [-44136, -646], [-44447, -653], [-44404, -474], [-45194, -497], [-45074, -522], [-45063, -806], [-45265, -803], [-45278, -729]], altID: "atalinMarketGoer2"}));
                }
                //
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinMarketGoer3")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44732, -536, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.22], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 10, patrolLoop: true, route:[[-44732, -536], [-44730, -428], [-44712, -465], [-44274, -441], [-44280, -285], [-44097, -283], [-44099, -364], [-44804, -579], [-44274, -441], [-44801, -797]], altID: "atalinMarketGoer3"}));
                }
                //
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinMarketGoer4")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-45120, -2689, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.2, 0.25], 0, 0, 1.22], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 19, patrolLoop: true, route:[[-45120, -2700], [-45120, -2689], [-45050, -2689], [-45053, -2287], [-45349, -2293], [-45354, -2589], [-45670, -2588], [-45668, -2238], [-46003, -2231], [-46017, -1862], [-45797, -1851], [-45810, -1418], [-45554, -1409], [-45556, -1237], [-44989, -1197], [-44524, -1785], [-44477, -2028], [-44460, -2692], [-45120, -2689]], altID: "atalinMarketGoer4"}));
                }
                //
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinMarketGoer5")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44675, -1780, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.25], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 12, patrolLoop: true, route:[[-44522, -1623], [-44519, -1950], [-44172, -1943], [-44162, -1635], [-44144, -1633], [-44162, -1635], [-44269, -448], [-45064, -447], [-45043, -1460], [-44342, -1459], [-44334, -1780], [-44675, -1780]], altID: "atalinMarketGoer5"}));
                }
                //
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinMarketGoer6")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44801, -2864, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.5, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 35, patrolLoop: true, route:[[-44809, -2693], [-44442, -2676], [-44431, -2980], [-44599, -2987], [-44431, -2980], [-44583, -2705], [-44453, -2690], [-44465, -2484], [-44465, -2033], [-44555, -1715], [-45237, -1223], [-45241, -1141], [-45236, -1284], [-45423, -1288], [-45434, -829], [-45048, -817], [-45018, -669], [-44952, -667], [-45000, -671], [-44985, -483], [-44693, -492], [-44683, -1010], [-44363, -1288], [-44892, -1709], [-44879, -1849], [-45275, -1857], [-45275, -2291], [-45349, -2298], [-45349, -2582], [-45438, -2582], [-45433, -2959], [-45110, -2939], [-45110, -2682], [-44806, -2682], [-44801, -2864]], altID: "atalinMarketGoer6"}));
                }

                //midclass housing (interior)
                    //
                scenicList.push(new Scenery("fineBed", -44886, -2953, 1 * Math.PI, false, 1)); //white
                scenicList.push(new Scenery("drawerA", -45031, -2974, 1 * Math.PI, 1, [1.5])); //light
                scenicList.push(new Scenery("nirwadenMueble", -44886, -2779, 1 * Math.PI, 2)); //sml table
                scenicList.push(new Scenery("nirwadenMueble", -44941, -2781, 0.754 * Math.PI, 6)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -45031, -2912, -0.5 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("stove", -44814, -2936, Math.PI, false));
                scenicList.push(new Scenery("furRug", -44758, -2837, 3.5, 2.8, 1));
                //
                scenicList.push(new Scenery("stove", -45134, -2591, Math.PI, "lit"));
                //
                scenicList.push(new Scenery("hearth", -44043, -2517, -1/2 * Math.PI, "lit"));
                //
                scenicList.push(new Scenery("stove", -44212, -2992, Math.PI, "lit"));
                //Marketside Lodge (player ownable home)
                scenicList.push(new Scenery("event", -44732, -2239, 0, "atalinDuendeHouse"));
                if (quests.atalinHomeOwned == true)
                {
                    scenicList.push(new Scenery("stove", -44777, -2362, Math.PI, true));
                    scenicList.push(new Scenery("fineBed", -44670, -2135, 1/2 * Math.PI, true, 2)); //blue
                    scenicList.push(new Scenery("nirwadenMueble", -44688, -2340, 1 * Math.PI, 3)); //llongtable
                    scenicList.push(new Scenery("nirwadenMueble", -44635, -2277, 1/2 * Math.PI, 1)); //bench
                    scenicList.push(new Scenery("drawerA", -44630, -2215, 0, 3, [1.55, "atalinHomeDrawer1", 6, [], false, 0])); //light
                    scenicList.push(new Scenery("drawerA", -44751.5, -2114, 1/2 * Math.PI, 3, [2.04, "atalinHomeDrawer2", 12, [], false, 0])); //light
                    scenicList.push(new Scenery("nirwadenMueble", -44798, -2149, -1/2 * Math.PI, 0)); //long bench
                    scenicList.push(new Scenery("furRug", -44901, -2281, -4, 2.5, 2));
                    scenicList.push(new Scenery("nirwadenMueble", -44885, -2188, -1 * Math.PI, 0)); //long bench
                    scenicList.push(new Scenery("nirwadenMueble", -44929, -2188, -1 * Math.PI, 0)); //long bench
                    scenicList.push(new Scenery("nirwadenMueble", -44966, -2336, 1 * Math.PI, 2)); //sqrtable
                    scenicList.push(new Scenery("nirwadenMueble", -44927, -2336, 1.078 * Math.PI, 6)); //stool
                    scenicList.push(new Scenery("nirwadenMueble", -44970, -2298, 0.97 * Math.PI, 6)); //stool
                    scenicList.push(new Scenery("sign", -44917, -2381, 0, 3, "Market Lodge"));
                }
                else
                {
                    scenicList.push(new Scenery("stove", -44777, -2362, Math.PI, false));
                    scenicList.push(new Scenery("fineBed", -44670, -2135, 1/2 * Math.PI, false, 2)); //blue
                    scenicList.push(new Scenery("nirwadenMueble", -44688, -2340, 1 * Math.PI, 3)); //llongtable
                    scenicList.push(new Scenery("nirwadenMueble", -44635, -2277, 1/2 * Math.PI, 1)); //bench
                    scenicList.push(new Scenery("drawerA", -44630, -2215, 0, 1, [1.55])); //light
                    scenicList.push(new Scenery("drawerA", -44751.5, -2114, 1/2 * Math.PI, 1, [2.04])); //light
                    scenicList.push(new Scenery("nirwadenMueble", -44798, -2149, -1/2 * Math.PI, 0)); //long bench
                    scenicList.push(new Scenery("furRug", -44901, -2281, -4, 2.5, 2));
                    scenicList.push(new Scenery("nirwadenMueble", -44885, -2188, -1 * Math.PI, 0)); //long bench
                    scenicList.push(new Scenery("nirwadenMueble", -44929, -2188, -1 * Math.PI, 0)); //long bench
                    scenicList.push(new Scenery("nirwadenMueble", -44966, -2336, 1 * Math.PI, 2)); //sqrtable
                    scenicList.push(new Scenery("nirwadenMueble", -44927, -2336, 1.078 * Math.PI, 6)); //stool
                    scenicList.push(new Scenery("nirwadenMueble", -44970, -2298, 0.97 * Math.PI, 6)); //stool
                    if (quests.duendeInfestationCompletionStyle != "royalException")
                    {
                        scenicList.push(new Scenery("sign", -44917, -2381, 0, 3, "Sale Postponed - until further notice"));
                    }
                }

                //
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinMidClass1")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-45200, -2463, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.2, 0.1], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45182, -2506]], altID: "atalinMidClass1"}));
                }
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinMidClass2")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-45827, -2771, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.5, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45829, -2742]], altID: "atalinMidClass2"}));
                }


                //middle class residental east "     "
                scenicList.push(new Scenery("nirwadenBuilding3", -45688, -2764, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -45990, -2448, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding4", -45728, -2050, 0, true));
                scenicList.push(new Scenery("well", -45617, -2202, -1, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -45985, -1667, 0, true));

                //interiors
                scenicList.push(new Scenery("bed", -45245, -2574, 1/2 * Math.PI, false));
                scenicList.push(new Scenery("nirwadenMueble", -45197, -2373, 1 * Math.PI, 2)); //sml table
                scenicList.push(new Scenery("nirwadenMueble", -45253, -2378, 1 * Math.PI, 5)); //sml stool
                scenicList.push(new Scenery("nirwadenMueble", -45150, -2378, 1 * Math.PI, 5)); //sml stool
                //
                scenicList.push(new Scenery("trapdoor", -45178, -2199, 0 * Math.PI, [851, 496], "estolTunnel"));
                scenicList.push(new Scenery("crate", -45120, -2192, 1.9, 2, [1.2]));
                scenicList.push(new Scenery("crate", -45140, -2122, -3, 2, [1.3]));
                scenicList.push(new Scenery("crate", -45086, -2041, -7, 2, [1.5]));
                scenicList.push(new Scenery("crate", -45194, -2013, 0, 2, [1.45]));
                if (player.estolgangFaction < 50)
                {
                    scenicList.push(new Scenery("crate", -45063, -2208, 9, 4, [0.8, "estolEvidenceCrate", 3, [[new Item("estolProof", false, false), 1], [new Item("kolumPowder", false, false), 19], [new Item("magicMissiles", false, false), 1]], "estolGang", -100]));
                }
                else
                {
                    scenicList.push(new Scenery("crate", -45063, -2208, 9, 2, [0.8]));
                }
                //
                scenicList.push(new Scenery("furRug", -45500, -2384, -9.45, 2.25, 1));
                scenicList.push(new Scenery("bed", -45555, -2308, -1/2 * Math.PI, false));
                scenicList.push(new Scenery("drawerA", -45435, -2301, 1/2 * Math.PI, 1, [1.5])); //light
                scenicList.push(new Scenery("nirwadenMueble", -45515, -2503, 1.2 * Math.PI, 5)); //sml stool
                scenicList.push(new Scenery("nirwadenMueble", -45478, -2490, 1.11 * Math.PI, 5)); //sml stool
                scenicList.push(new Scenery("nirwadenMueble", -45504, -2465, 1 * Math.PI, 2)); //sml table
                //
                scenicList.push(new Scenery("furRug", -46000, -2442, -3.34, 2.35, 1));
                scenicList.push(new Scenery("bed", -45915, -2359, 0 * Math.PI, false));
                scenicList.push(new Scenery("nirwadenMueble", -45956, -2557, 1 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("stove", -46051, -2574, Math.PI, false));
                //
                scenicList.push(new Scenery("fineBed", -45845, -2841, 0 * Math.PI, 0)); //black
                scenicList.push(new Scenery("stove", -45732, -2700, 0, "lit"));
                scenicList.push(new Scenery("nirwadenMueble", -45780, -2749, 0.8 * Math.PI, 5)); //sml stool
                scenicList.push(new Scenery("nirwadenMueble", -45830, -2743, 1.32 * Math.PI, 5)); //sml stool
                scenicList.push(new Scenery("nirwadenMueble", -45809, -2712, 1 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("furRug", -45601, -2763, 1.5, 3.6, 2));
                scenicList.push(new Scenery("crate", -45575, -2678, -7, 2, [1.6]));
                scenicList.push(new Scenery("crate", -45652, -2672, -10, 1, [1.2]));
                scenicList.push(new Scenery("nirwadenMueble", -45648, -2877, 1 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("nirwadenGoods", -45832, -2712, 0, 8)); //placemat light
                scenicList.push(new Scenery("item", -45832, -2712, 0, "nirwaden", ["boarChunksSmall", 1, -6]));
                //
                scenicList.push(new Scenery("furRug", -45286, -2739, 1/2 * Math.PI, 3.1, 1));
                scenicList.push(new Scenery("bed", -45324, -2864, -1/2 * Math.PI, false));
                scenicList.push(new Scenery("nirwadenMueble", -45201, -2682, 1/2 * Math.PI, 0)); //long bench
                //
                scenicList.push(new Scenery("trapdoor", -45375, -2205, 0 * Math.PI, [251, 496], "estolTunnel"));
                //
                scenicList.push(new Scenery("furRug", -45969, -1690, 1/2 * Math.PI, 3.2, 2));
                scenicList.push(new Scenery("bed", -45937, -1560, 1/2 * Math.PI, false));
                scenicList.push(new Scenery("nirwadenMueble", -46066, -1588, 1/2 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("nirwadenMueble", -46066, -1608, 1/2 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("stove", -46079, -1774, 1/2 * Math.PI, false));
                //
                scenicList.push(new Scenery("furRug", -45826, -2086, 0.789486568, 2.4, 1));
                scenicList.push(new Scenery("stove", -45539, -1949, -1/2 * Math.PI, "lit"));
                scenicList.push(new Scenery("fineBed", -45574, -2071, 1 * Math.PI, false, 1)); //white
                scenicList.push(new Scenery("nirwadenMueble", -45658, -2098, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("drawerA", -45555, -1997, 0 * Math.PI, 1, [1.65])); //light
                scenicList.push(new Scenery("nirwadenMueble", -45739, -2137, 1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMueble", -45786, -2159, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMueble", -45786, -2176, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMueble", -45856, -1985, 2.324243 * Math.PI, 6)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -45783, -1984, 0.3298 * Math.PI, 6)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -45818, -1988, 1.023 * Math.PI, 2)); //square table
                //
                scenicList.push(new Scenery("fineBed", -45404, -1576, 0 * Math.PI, false)); //black
                scenicList.push(new Scenery("drawerA", -45343, -1545, 1/2 * Math.PI, 1, [1.61])); //light
                scenicList.push(new Scenery("drawerA", -45298, -1545, 1/2 * Math.PI, 1, [1.61])); //light
                scenicList.push(new Scenery("nirwadenMueble", -45260, -1583, -1/2 * Math.PI, 0)); //bench
                scenicList.push(new Scenery("nirwadenMueble", -45262, -1666, -1/2 * Math.PI, 2)); //sqr table
                scenicList.push(new Scenery("hearth", -45339, -1774, 1 * Math.PI, "lit"));
                scenicList.push(new Scenery("nirwadenMueble", -45503, -1613, -1 * Math.PI, 0)); //bench
                scenicList.push(new Scenery("drawerA", -45585, -1608, 1/2 * Math.PI, 1, [1.7])); //light
                scenicList.push(new Scenery("nirwadenMueble", -45545, -1758, -1/2 * Math.PI, 5)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -45584, -1726, 1/2 * Math.PI, 6)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -45587, -1753, -1/2 * Math.PI, 2)); //sqr table



                if (uniqueChars.loLDS)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Lo")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-45093, -2149, "Soldier", false, "Lo", {race: "Nirwaden", faction: "EstolGang", con: 5, speed: 1.55, outfit: ["nirwadenClothingF", 0], weapon: ["nirineseSabre", [7, 6], 0, 19, 1.1], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 1, patrolLoop: false, route:[[-45073, -2179]]}));
                    }
                }

                if (uniqueChars.tirbutinLDS)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Tirbutin the Tax Officiator")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        if (quests.pireVictim == "Tirbutin the Tax Officiator")
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-45906, 41, "Person", false, "Tirbutin the Tax Officiator", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.5, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45708, 1335]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-45666, 1337, "Person", false, "Tirbutin the Tax Officiator", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.5, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45708, 1335]]}));
                        }
                    }
                }
                else
                {
                    if (player.gender == "Female" && player.title == "Nobility" && player.raceName == "Nirwaden")
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-45666, 1337, "Person", false, "Atalin Tax Officiator", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.5, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45708, 1335]]}));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-45666, 1337, "Person", false, "Atalin Tax Officiator", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.5, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45708, 1335]]}));
                    }
                }

                if (quests.pireVictim == "Marta the Cook")
                {
                    if (uniqueChars.martaLDS == true)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-45906, 41, "Person", false, "Marta the Cook", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.2, 0.2], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45708, 1335]]}));
                    }
                }
                else if (quests.pireVictim == "Suspected Regicide")
                {
                    if (uniqueChars.altezorInfiltratorLDS == true)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-45906, 41, "Person", false, "Suspected Regicide", {race: "Nirwaden", faction: "EstolGang", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.7, 0.5], 0, 0, 1], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45708, 1335]]}));
                    }
                }
                else if (quests.pireVictim == "Belgos")
                {
                    if (uniqueChars.belgosLDS == true)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-45906, 41, "Person", false, "Ser Belgos of Atalin", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["none", 0], weapon: ["none", [0.7, 0.5], 0, 0, 1], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45708, 1335]]}));
                    }
                }
                else if (quests.pireVictim == "Lelaila")
                {
                    if (uniqueChars.lelailaLDS == true)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-45906, 41, "Person", false, "Lelaila", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.015, 0.015], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45708, 1335]]}));
                    }
                }

                if (uniqueChars.francilLDS)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Francil the Stablemaster")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-46436, 1502, "Person", false, "Francil the Stablemaster", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45708, 1335]]}));
                    }
                }

                //
                scenicList.push(new Scenery("sign", -44221, -2145, 1/2 * Math.PI, 3, "Atalin Brewery"));
                scenicList.push(new Scenery("sign", -44226, 82, -1/2 * Math.PI, 3, "Atalin Barracks: Market"));
                scenicList.push(new Scenery("sign", -46743, 1464, 0 * Math.PI, 3, "Atalin Stables"));

                scenicList.push(new Scenery("nirwadenMueble", -45726, 1343, 1/2 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("nirwadenGoods", -45634, 1428, 18, 9));
                scenicList.push(new Scenery("nirwadenGoods", -45651, 1234, -6, 9));
                scenicList.push(new Scenery("nirwadenGoods", -45636, 1326, 7, 9));

                scenicList.push(new Scenery("crate", -45425, 1424, -11, 2, [1.25]));
                scenicList.push(new Scenery("crate", -45523, 1401, 14.4, 1, [1.34]));
                scenicList.push(new Scenery("crate", -45514, 1304, 7.1, 2, [1.15]));
                scenicList.push(new Scenery("crate", -45529, 1248, -15, 1, [1.21]));
                scenicList.push(new Scenery("crate", -45523, 1401, 14.4, 1, [1.34]));
                scenicList.push(new Scenery("crate", -45435, 1251, 16, 2, [1.06]));

                //player shop in atalin
                scenicList.push(new Scenery("nirwadenMueble", -44633, 632, 1 * Math.PI, 0)); // long bench
                scenicList.push(new Scenery("nirwadenMueble", -44569, 589, 1/2 * Math.PI, 0)); // long bench
                scenicList.push(new Scenery("nirwadenMueble", -44620, 416, 0 * Math.PI, 0)); // long bench
                scenicList.push(new Scenery("nirwadenMueble", -44620, 436, 0 * Math.PI, 0)); // long bench
                scenicList.push(new Scenery("nirwadenMueble", -44858, 438, 1/2 * Math.PI, 1)); //bench
                if (quests.atalinShopOwned == true)
                {
                    scenicList.push(new Scenery("crate", -44717, 421, 0.1, 4, [1.4, "atalinShopCrate", 15, [], false, 0]));
                    scenicList.push(new Scenery("sign", -44873, 376, 0 * Math.PI, 3, "The Atalin Supply"));
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Shopkeeper")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinPlayerShopkeeper")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-44910, 444, "Person", false, "Shopkeeper", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.3, 0.3], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44897, 444]], altID: "atalinPlayerShopkeeper"}));
                    }
                }
                else
                {
                    scenicList.push(new Scenery("crate", -44717, 421, 0.1, 2, [1.4]));
                    scenicList.push(new Scenery("sign", -44873, 376, 0 * Math.PI, 3, "Shop for sale: 19000 coins"));
                }

                //
                scenicList.push(new Scenery("nirwadenMueble", -44645, 737, 1 * Math.PI, 1)); //bench

                if (uniqueChars.manoloLDS)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Guild Master Manolo")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-44646, 702, "Person", false, "Guild Master Manolo", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44649, 722]]}));
                    }
                }
                scenicList.push(new Scenery("nirwadenGoods", -44584, 713, -4.56, 9));
                scenicList.push(new Scenery("nirwadenGoods", -44570, 748, -8.146, 9));
                scenicList.push(new Scenery("crate", -44614, 881, 10, 1, [1.5]));
                scenicList.push(new Scenery("crate", -44701, 904, 12, 2, [1.1]));
                scenicList.push(new Scenery("crate", -44682, 875, 13, 2, [0.87]));

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Silver Keep Banker")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "skBanker1")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-45668, 810, "Person", false, "Silver Keep Banker", {race: "Orgell", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.5, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45668, 771]], altID: "skBanker1"}));
                }

                scenicList.push(new Scenery("nirwadenMueble", -45668, 747, 1 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("nirwadenGoods", -45583, 725, -9, 9));
                scenicList.push(new Scenery("nirwadenGoods", -45475, 751, 8, 9));
                scenicList.push(new Scenery("nirwadenGoods", -45495, 834, -2.45, 9));
                scenicList.push(new Scenery("nirwadenGoods", -45448, 907, 3.24, 9));
                scenicList.push(new Scenery("nirwadenGoods", -45557, 904, 1, 9));

                scenicList.push(new Scenery("forger", -47115, 1431, 0, true));
                scenicList.push(new Scenery("anvil", -47244, 1410, 5, true));
                scenicList.push(new Scenery("crate", -47118, 1231, 3.2, 2, [1.19]));
                scenicList.push(new Scenery("nirwadenMueble", -47253, 1281, -1/2 * Math.PI, 3)); //rect table
                scenicList.push(new Scenery("nirwadenMueble", -47207, 1227, 1 * Math.PI, 3)); //rect table

                scenicList.push(new Scenery("sign", -44417, 660, 0 * Math.PI, 3, "The Atalin Merchant's Guild"));
                scenicList.push(new Scenery("sign", -45587, 682, 0 * Math.PI, 3, "Silver Keep Banking"));

                if (uniqueChars.quixoteLDS)
                {
                    scenicList.push(new Scenery("item", -47163, 1220, 0, "nirwaden", ["nirineseSabre", 1, -30]));
                    scenicList.push(new Scenery("item", -47178, 1220, 0, "nirwaden", ["nirineseSabre", 1, -30]));
                    scenicList.push(new Scenery("item", -47194, 1220, 0, "nirwaden", ["nirineseSabre", 1, -30]));
                    scenicList.push(new Scenery("item", -47208, 1220, 0, "nirwaden", ["nirineseSabre", 1, -30]));
                    scenicList.push(new Scenery("item", -47221, 1220, 0, "nirwaden", ["nirineseSabre", 1, -30]));
                    scenicList.push(new Scenery("item", -47254, 1227, 0, "nirwaden", ["crossbow", 1, -39]));
                    scenicList.push(new Scenery("nirwadenGoods", -47254, 1252, 3, 16));
                    scenicList.push(new Scenery("nirwadenGoods", -47254, 1272, 3.55, 16));
                    scenicList.push(new Scenery("nirwadenGoods", -47254, 1280, 3.05, 16));
                    scenicList.push(new Scenery("nirwadenGoods", -47254, 1305, 3.45, 16));
                    scenicList.push(new Scenery("nirwadenGoods", -47254, 1325, 3.1, 16));
                    scenicList.push(new Scenery("item", -47255, 1334, 0, "nirwaden", ["steelBolt", 9, -27]));

                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Master Blacksmith Quixote")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-47207, 1318, "Person", false, "Master Blacksmith Quixote", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingM", 0], weapon: ["hammer", [4, 3], 2.5, 10, 1.5], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-47164, 1319]], merchant: true, merchandise: [[new Item("coins", false, false), 150], [new Item("nirineseSabre", false, false), 8], [new Item("crossbow", false, false), 6], [new Item("steelBolt", false, false), 110], [new Item("estoc", false, false), 2], [new Item("nirwadenSabreAndShield", false, false), 1], [new Item("nirineseSpear", false, false), 5], [new Item("mace", false, false), 2], [new Item("sickle", false, false), 3], [new Item("hammer", false, false), 2], [new Item("timberAxe", false, false), 1], [new Item("spade", false, false), 3], [new Item("pickaxe", false, false), 4], [new Item("nirwadenLance", false, false), 1], [new Item("chainArmour", false, false), 2], [new Item("nirwadenMorionArmour", false, false), 6], [new Item("nirwadenPlateArmour", false, false), 3], [new Item("steelHorseArmour", false, false), 1], [new Item("horseArmourRemover", false, false), 4]]}));
                    }
                }

                if (uniqueChars.cristobalLDS)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Cristobal the Innkeeper")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-46807, -946, "Person", false, "Cristobal the Innkeeper", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.4], 0, 0, 1.25], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46802, -960]], merchant: true, merchandise: [[new Item("coins", false, false), 83], [new Item("santhAle", false, false), 72], [new Item("harstAle", false, false), 19], [new Item("erguerWine", false, false), 3], [new Item("searedFalder", false, false), 6], [new Item("searedSalmon", false, false), 4], [new Item("garlicTialoPork", false, false), 2], [new Item("butteredSanthBread", false, false), 1], [new Item("santhBread", false, false), 2], [new Item("butteredHarstBread", false, false), 1], [new Item("harstBread", false, false), 1]]}));
                    }
                }

                if (uniqueChars.luceliusLDS)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Hidalgo Lucelius")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-46936, -1065, "Person", false, "Hidalgo Lucelius", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.45, 0.4], 0, 0, 1.15], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-46802, -960]]}));
                    }
                }

                if (uniqueChars.velaLDS)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Vela the Baker")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        if (uniqueChars.lelailaLDS)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-46028, -1303, "Person", false, "Vela the Baker", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.2, 0.2], 0, 0, 1.5], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46028, -1239]], merchant: true, merchandise: [[new Item("coins", false, false), 16], [new Item("santhBread", false, false), 7], [new Item("harstBread", false, false), 5]]}));
                        }
                        else
                        {
                            if (quests.imaginaryFriendCompletionStyle == "burntChild")
                            {
                                ArtificialIntelligenceAccess.push(new Unit(-46028, -1303, "Person", false, "Vela the Baker", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.2, 0.2], 0, 0, 1.5], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46028, -1239]]}));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(-46028, -1303, "Person", false, "Vela the Baker", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.2, 0.2], 0, 0, 1.5], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46028, -1239]], merchant: true, merchandise: [[new Item("coins", false, false), 1], [new Item("santhBread", false, false), 3], [new Item("harstBread", false, false), 2]]}));
                            }
                        }
                    }
                }

                if (uniqueChars.lelailaLDS && quests.pireVictim != "Lelaila")
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Lelaila")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        if (quests.imaginaryFriendAdopted == true && player.title != "Nobility" || quests.imaginaryFriendAdopted == true && player.raceName != "Nirwaden")
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-44926, -2264, "Person", false, "Lelaila", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.05, 0.05], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45940, -1301]], kid: true}));
                        }
                        else if (quests.imaginaryFriendAdopted == false)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-45938, -1312, "Person", false, "Lelaila", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.05, 0.05], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45940, -1301]], kid: true}));
                        }
                    }
                }

                if (uniqueChars.emmanuelLDS)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Bishop Emmanuel")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-47260, 41, "Person", false, "Bishop Emmanuel", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["nirwadenPriestRobes", 0], weapon: ["none", [0.06, 0.06], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-47220, 45]]}));
                    }
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Bishop Emmanuel")
                        {
                            ArtificialIntelligenceAccess[i].healthMAX = 26;
                            ArtificialIntelligenceAccess[i].health = 26;
                            ArtificialIntelligenceAccess[i].magicalResistance = 6;
                            break;
                        }
                    }
                }

                scenicList.push(new Scenery("crate", -46330, 1125, 0, 2, [1.55]));
                scenicList.push(new Scenery("crate", -46230, 1285, 5.6, 2, [1.4]));
                scenicList.push(new Scenery("crate", -46313, 1310, -8.2, 1, [1.25]));
                scenicList.push(new Scenery("trapdoor", -46251, 1177, 0.2 * Math.PI, [900, 400], "atalinTortureChamber"));

                scenicList.push(new Scenery("nirwadenMueble", -46782, -1010, 1.34 * Math.PI, 6)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -46811, -1008, 2.54 * Math.PI, 5)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -46841, -1011, 3.44 * Math.PI, 5)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -46805, -985, 1 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("barrel", -46765, -945, -5/3 * Math.PI, 1));

                scenicList.push(new Scenery("nirwadenMueble", -46939, -1065, 6.34 * Math.PI, 6)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -46974, -1030, -2.54 * Math.PI, 5)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -46977, -1099, -7 * Math.PI, 6)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -46970, -1239, -3.1 * Math.PI, 5)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -46938, -1273, 9.1 * Math.PI, 5)); //stool

                scenicList.push(new Scenery("nirwadenMueble", -46778, -1149, 1/2 * Math.PI, 7)); //rect bench
                scenicList.push(new Scenery("nirwadenMueble", -46855.5, -1149, 1/2 * Math.PI, 7)); //rect bench
                scenicList.push(new Scenery("nirwadenMueble", -46818, -1149, 1/2 * Math.PI, 3)); //rect table
                scenicList.push(new Scenery("nirwadenMueble", -46972, -1274.5, 1/2 * Math.PI, 2)); //sqr table
                scenicList.push(new Scenery("nirwadenMueble", -46974, -1063, 0 * Math.PI, 2)); //sqr table

                scenicList.push(new Scenery("fineBed", -47065, -1263, -1/2 * Math.PI, false, 1)); //white
                scenicList.push(new Scenery("fineBed", -46777, -1366, 0 * Math.PI, false, 1)); //white
                scenicList.push(new Scenery("fineBed", -46691, -1161, 1/2 * Math.PI, false, 1)); //white

                scenicList.push(new Scenery("nirwadenMueble", -46595, -1371, 0 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("nirwadenMueble", -46620, -1371, 0 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("nirwadenMueble", -46650, -1371, 0 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("nirwadenMueble", -46678, -1371, 0 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("nirwadenMueble", -46722, -1346, 1/2 * Math.PI, 1)); //bench

                scenicList.push(new Scenery("nirwadenMueble", -47150, -1077, 8.89 * Math.PI, 6)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -47081, -1080, -2.12 * Math.PI, 5)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -47113, -1072, 1/2 * Math.PI, 2)); //sqr table

                scenicList.push(new Scenery("hearth", -47187, -1181, 1/2 * Math.PI, "lit"));
                scenicList.push(new Scenery("furRug", -46645, -1273, 0.8979686 * Math.PI, 2.3, 1));

                scenicList.push(new Scenery("hearth", -46960, -1334, 0 * Math.PI, "lit"));
                scenicList.push(new Scenery("furRug", -46884, -1412, -6.2656543527847 * Math.PI, 2.5, 1));

                scenicList.push(new Scenery("hearth", -46565, -1255, -1/2 * Math.PI, "lit"));
                scenicList.push(new Scenery("furRug", -47109, -1167, 3.912 * Math.PI, 2.1, 1));

                scenicList.push(new Scenery("nirwadenMueble", -46812, -1491, 0 * Math.PI, 0)); //long bench


                scenicList.push(new Scenery("nirwadenMueble", -46262, -1211, -1/2 * Math.PI, 3)); //rect table
                scenicList.push(new Scenery("nirwadenMueble", -46154, -1381, 0 * Math.PI, 0)); //long bench

                scenicList.push(new Scenery("stove", -46273, -1397, 1 * Math.PI, "lit"));
                scenicList.push(new Scenery("stove", -46227, -1397, 1 * Math.PI, "lit"));

                scenicList.push(new Scenery("nirwadenMueble", -46030, -1212, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("crate", -46130, -1168, 0.0019, 2, [1.76]));

                scenicList.push(new Scenery("spiritBasin", -47358, 47, 0, true));

                scenicList.push(new Scenery("item", -46229, -1153, 0, "nirwaden", ["bucketOfWater", 1, -5]));
                scenicList.push(new Scenery("item", -46258, -1160, 0, "nirwaden", ["santhFlour", 4, -16]));
                scenicList.push(new Scenery("item", -46269, -1168, 0, "nirwaden", ["santhFlour", 4, -16]));
                scenicList.push(new Scenery("item", -46258, -1193, 0, "nirwaden", ["harstFlour", 4, -10]));
                scenicList.push(new Scenery("item", -46264, -1197, 0, "nirwaden", ["harstFlour", 4, -10]));
                scenicList.push(new Scenery("item", -46262, -1232, 0, "nirwaden", ["kellishSanthDough", 2, -18]));
                scenicList.push(new Scenery("item", -46264, -1256, 0, "nirwaden", ["harstDough", 1, -3]));
                scenicList.push(new Scenery("item", -46266, -1258, 0, "nirwaden", ["harstDough", 1, -3]));
                scenicList.push(new Scenery("item", -46263, -1257, 0, "nirwaden", ["harstDough", 1, -3]));
                scenicList.push(new Scenery("item", -46186, -1379, 0, "nirwaden", ["harstBread", 1, -11]));
                scenicList.push(new Scenery("item", -46156, -1381, 0, "nirwaden", ["harstBread", 1, -11]));
                scenicList.push(new Scenery("item", -46131, -1381, 0, "nirwaden", ["santhBread", 1, -20]));
                scenicList.push(new Scenery("item", -46105, -1379, 0, "nirwaden", ["santhBread", 1, -20]));
                scenicList.push(new Scenery("item", -46261, -1214, 0, "nirwaden", ["nirwadenPastryDough", 2, -21]));

                scenicList.push(new Scenery("item", -46064, -1214, 0, "nirwaden", ["santhBread", 1, -22]));
                scenicList.push(new Scenery("item", -46040, -1213, 0, "nirwaden", ["santhBread", 1, -22]));
                scenicList.push(new Scenery("item", -46018, -1215, 0, "nirwaden", ["harstBread", 1, -12]));
                scenicList.push(new Scenery("item", -45997, -1212, 0, "nirwaden", ["harstBread", 1, -12]));


                scenicList.push(new Scenery("sign", -47071, 1392, 1/2 * Math.PI, 3, "The Atalin City Smithy"));
                scenicList.push(new Scenery("sign", -46346, 714, 1/2 * Math.PI, 3, "The Royal Order of the Inquisition"));
                scenicList.push(new Scenery("sign", -46874, -29, 1/2 * Math.PI, 3, "The Church of the Everlasting Spirit"));
                scenicList.push(new Scenery("sign", -46380, 1293, -1/2 * Math.PI, 3, "Property of the Inquisition: entry restricted"));
                scenicList.push(new Scenery("sign", -46880, -912, 1 * Math.PI, 3, "Eastover Inn"));
                scenicList.push(new Scenery("sign", -45977, -1119, 1 * Math.PI, 3, "Marketside Bakery"));


                if (Math.random() > 0.21)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-46779, -1127, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-46149, -151]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-46784, -1203, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-46149, -151]]}));

                    if (Math.random() > 0.52)
                    {
                        scenicList.push(new Scenery("item", -46805, -1128, 0, "nirwaden", ["pintGlass", 1, -1]));
                        scenicList.push(new Scenery("item", -46806, -1185, 0, "nirwaden", ["pintGlass", 1, -1]));
                    }
                    else
                    {
                        if (Math.random() > 0.58)
                        {
                            scenicList.push(new Scenery("item", -46805, -1128, 0, "nirwaden", ["harstAle", 1, -3]));
                            scenicList.push(new Scenery("item", -46806, -1185, 0, "nirwaden", ["harstAle", 1, -3]));
                        }
                        else
                        {
                            scenicList.push(new Scenery("item", -46805, -1128, 0, "nirwaden", ["santhAle", 1, -5]));
                            scenicList.push(new Scenery("item", -46806, -1185, 0, "nirwaden", ["pintGlass", 1, -1]));
                        }
                    }
                }
                else
                {
                    if (Math.random() > 0.18)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-46779, -1100, "Person", false, "Nirwaden Villager", {race: "Orgell", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-46149, -151]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-46779, -1127, "Person", false, "Nirwaden Villager", {race: "Orgell", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-46149, -151]], kid: true}));
                        ArtificialIntelligenceAccess.push(new Unit(-46784, -1203, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-46149, -151]]}));

                        scenicList.push(new Scenery("nirwadenGoods", -46804, -1098, 0, 8)); //placemat light
                        scenicList.push(new Scenery("item", -46804, -1098, 0, "nirwaden", ["searedSalmon", 1, -9]));
                        scenicList.push(new Scenery("item", -46806, -1185, 0, "nirwaden", ["santhAle", 1, -5]));
                    }
                }

                if (Math.random() > 0.2)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-46936, -1274, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-46149, -151]]}));
                }

                if (Math.random() > 0.35)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-46974, -1135, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46977, -1101]]}));
                }
                if (Math.random() > 0.7)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-46913, -1197, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46853, -1198]]}));
                }

                if (Math.random() > 0.41)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-46839, -1064, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46840, -1010]]}));
                }

                if (Math.random() > 0.9)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-46810, -1072, "Person", false, "Traveler", {race: "Freynor", faction: "Freynor", personality: "scared", outfit: ["northernClothing", 0], weapon: ["none", [0.55, 0.45], 0, 0, 1.15], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46813, -1010]]}));
                }
                else
                {
                    if (Math.random() > 0.25)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-46970, -990, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46974, -1030]]}));
                    }
                }

                if (Math.random() > 0.2)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-46912, -1149, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46857, -1151]]}));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(-46912, -1149, "Person", false, "Vardanian Refugee", {race: "Vardan", faction: "arena2", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46857, -1151]]}));
                }
                if (Math.random() > 0.15)
                {
                    if (Math.random > 0.55)
                    {
                        if (Math.random > 0.65)
                        {
                            scenicList.push(new Scenery("nirwadenGoods", -46777, -986, 2, 8)); //placemat light
                            scenicList.push(new Scenery("item", -46777, -986, 0, "nirwaden", ["garlicTialoPork", 1, -15]));
                        }
                        else
                        {
                            scenicList.push(new Scenery("nirwadenGoods", -46777, -986, 2, 8)); //placemat light
                            scenicList.push(new Scenery("item", -46777, -986, 0, "nirwaden", ["searedFalder", 1, -6]));
                        }
                    }
                    ArtificialIntelligenceAccess.push(new Unit(-46775, -1065, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46780, -1011]]}));
                }


                //trees in the wuntol woods.
                //scenicList.push(new Scenery("pineTree", -13696, 1772, 1.3, true));


                //Plants of the wuntol woods
                //scenicList.push(new Scenery("neprilnePlant", -17425 , 3993, -5.8, true));
                //scenicList.push(new Scenery("pluttPlant", -16685 , 4251, 2.4, true));
                //scenicList.push(new Scenery("culprisPlant", -21156 , 617, -3.5, true));
                //scenicList.push(new Scenery("stomwikPlant", -18732 , -2343, 6, true));
                //scenicList.push(new Scenery("akerPlant", -14491 , 5755, 1, true));
                //scenicList.push(new Scenery("glinPlant", -15944 , -2502, -7.789, true));
                //scenicList.push(new Scenery("ogardPlant", -16292 , -2231, 0, true));
                //scenicList.push(new Scenery("wyrPlant", -15134 , 2399, 2.8, true));
                //scenicList.push(new Scenery("cyrinthilimPlant", -21038 , -2478, 4, true));

                //pyreGathering
                if (change == "pireGathering")
                {
                    if (Math.random() > 0.49)
                    {
                        if (Math.random() >= 0.5)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-46195, -180, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46149, -151]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-46118, -307, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46029, -147]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45972, -367, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45935, -233]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45703, -343, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45813, -149]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45547, -119, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45603, -94]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45518, 16, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45724, 20]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45605, 192, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45709, 139]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45768, 366, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45798, 282]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45900, 408, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45895, 221]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-46186, 265, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46099, 193]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-46181, -56, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46142, -41]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-46503, 211, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46201, 116]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-46080, 409, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45982, 162]], kid: true}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-46195, -180, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46149, -151]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-46118, -307, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46029, -147]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45972, -367, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45935, -233]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45703, -343, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45813, -149]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45547, -119, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45603, -94]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45518, 16, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45724, 20]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45605, 192, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45709, 139]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45768, 366, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45798, 282]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45900, 408, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45895, 221]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-46186, 265, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46099, 193]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-46181, -56, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46142, -41]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-46503, 211, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46201, 116]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-46080, 409, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45982, 162]]}));

                        }
                    }
                    else
                    {
                        if (Math.random() >= 0.5)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-46195, -180, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46149, -151]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-46118, -307, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46029, -147]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45972, -367, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45935, -233]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45703, -343, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45813, -149]], kid: true}));
                            ArtificialIntelligenceAccess.push(new Unit(-45547, -119, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45603, -94]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45518, 16, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45724, 20]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45605, 192, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45709, 139]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45768, 366, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45798, 282]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45900, 408, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45895, 221]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-46186, 265, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46099, 193]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-46181, -56, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46142, -41]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-46503, 211, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46201, 116]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-46080, 409, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45982, 162]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-46195, -180, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46149, -151]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-46118, -307, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46029, -147]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45972, -367, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45935, -233]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45703, -343, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45813, -149]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45547, -119, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45603, -94]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45518, 16, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45724, 20]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45605, 192, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45709, 139]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45768, 366, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45798, 282]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45900, 408, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45895, 221]], kid: true}));
                            ArtificialIntelligenceAccess.push(new Unit(-46186, 265, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46099, 193]], kid: true}));
                            ArtificialIntelligenceAccess.push(new Unit(-46181, -56, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46142, -41]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-46503, 211, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46201, 116]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-46080, 409, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45982, 162]]}));
                        }
                    }
                }
                else
                {
                    if (Math.random() >= 0.5)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-46937, 130, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-46149, -151]], kid: true}));
                        ArtificialIntelligenceAccess.push(new Unit(-46940, 97, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-46029, -147]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-46940, -16, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45935, -233]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-46941, -53, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45813, -149]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-46996, -18, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45603, -94]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-47002, 129, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45724, 20]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-47004, 102, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45709, 139]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-47058, 124, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45798, 282]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-47108, 96, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-46142, -41]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-47109, 129, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45982, 162]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-47114, -10, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-46201, 116]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-47112, -54, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45813, -149]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-47057, -55, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45813, -149]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-47057, 97, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45724, 20]], kid: true}));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-46937, 130, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-46149, -151]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-46940, 97, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-46029, -147]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-46940, -16, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45935, -233]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-46941, -53, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45813, -149]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-46996, -18, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45603, -94]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-47002, 129, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45724, 20]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-47004, 102, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45709, 139]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-47058, 124, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45798, 282]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-47111, -38, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45895, 221]], kid: true}));
                        ArtificialIntelligenceAccess.push(new Unit(-47112, -58, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-46099, 193]], kid: true}));
                        ArtificialIntelligenceAccess.push(new Unit(-47108, 96, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-46142, -41]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-47109, 129, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45982, 162]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-47114, -10, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-46201, 116]]}));

                    }
                }

                if (uniqueChars.belgosLDS && quests.aFeastForFewerBelgos == "disgraced" || uniqueChars.belgosLDS && quests.aFeastForFewerBelgos == "forgiven")
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Belgos the Disgraced" || ArtificialIntelligenceAccess[i].ID == "Belgos")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        if (quests.aFeastForFewerBelgos == "disgraced")
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-47221, 134, "Person", false, "Belgos the Disgraced", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["nirwadenPriestRobes", 0], weapon: ["none", [0.75, 0.75], 0, 0, 0.9], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-47205, 131]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-47221, 134, "Person", false, "Belgos", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["nirwadenPriestRobes", 0], weapon: ["none", [0.75, 0.75], 0, 0, 0.9], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-47205, 131]]}));
                        }
                    }
                }

                if (player.raceName == "Nirwaden" && player.title == "Nobility")
                {
                    if (seasonOfYear != quests.atalinTournySeason)
                    {
                        quests.atalinTournySeason = seasonOfYear;
                        if (quests.atalinTourny > 0)
                        {
                            quests.atalinTourny -= 1;
                            quests.atalinTournyHosted = true;
                        }
                        else
                        {
                            quests.atalinTournyHosted = false;
                        }
                    }
                }
                else if (seasonOfYear == "Bright")
                {
                    quests.atalinTournyHosted = true;
                }

                if (quests.duendeInfestationCompletionStyle == "royalException")
                {
                    scenicList.push(new Scenery("skeleton", -44696, -2241, 3.45, 1.55));
                    scenicList.push(new Scenery("skeleton", -44776, -2266, 1.1, 0.91));
                }

                //birds in the garden
                var hits = -1;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].type == "Peacock" && ArtificialIntelligenceAccess[i].ID == "flagabili")
                    {
                        hits = i;
                    }
                }
                if (hits == -1)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44458, 3242, "Peacock", false, "flagabili"));
                }

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinPed1")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    if (timeOfDay == "Day")
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-45095, 3156, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.3, 0.3], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 7, patrolLoop: true, route:[[-45118, 4266], [-45349, 4695], [-45108, 5059], [-44645, 4819], [-44983, 4187], [-44977, 3183], [-45095, 3156]], altID: "atalinPed1"}));
                    }
                }

                //boar fight viewers
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinBF1")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    if (timeOfDay == "Day" || timeOfDay == "Dawn")
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-44390, 2537, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.3, 0.3], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44393, 2537]], altID: "atalinBF1"}));
                    }
                }
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinBF2")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    if (timeOfDay == "Day" || timeOfDay == "Dawn")
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-44307, 2693, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.3, 0.3], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44334, 2689]], altID: "atalinBF2"}));
                    }
                }
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinBF3")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    if (timeOfDay == "Day" || timeOfDay == "Dawn")
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-44777, 2107, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.3, 0.3], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44778, 2144]], altID: "atalinBF3"}));
                    }
                }
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinBF4")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    if (timeOfDay == "Day" || timeOfDay == "Dawn")
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-44875, 2057, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.3, 0.3], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44877, 2086]], altID: "atalinBF4"}));
                    }
                }
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinBF5")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    if (timeOfDay == "Day" || timeOfDay == "Dawn")
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-45600, 2052, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.3, 0.3], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45583, 2092]], altID: "atalinBF5"}));
                    }
                }
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinBF6")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    if (timeOfDay == "Day" || timeOfDay == "Dawn")
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-45747, 2421, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.3, 0.3], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45716, 2433]], altID: "atalinBF6"}));
                    }
                }

                if (uniqueChars.eduardoLDS)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Hidalgo Eduardo the Commissioner")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-45111, 2079, "Soldier", false, "Hidalgo Eduardo the Commissioner", {race: "Nirwaden", faction: "Nirwaden", con: 20, speed: 1.15, outfit: ["matadorOutfit", 0], weapon: ["nirineseSabre", [12, 11], 0, 25, 1.25], ranged: [false, "steelBolt", 14, 2200, 17, 16 /3, 0, "none", 3.35], patrolStops: 1, patrolLoop: false, route:[[-45101, 2053]]}));
                    }
                }

                if (change == "matador")
                {
                    var matadorNumRand = Math.random();

                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Matador")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinMatador")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        if (timeOfDay == "Day" || timeOfDay == "Dawn")
                        {
                            if (matadorNumRand > 0.5)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(-44849, 2498, "Soldier", false, "Matador", {race: "Nirwaden", faction: "Nirwaden", con: 20, speed: 1.15, outfit: ["matadorOutfit", 0], weapon: ["silkAndDagger", [7, 7], 0, 19, 1], ranged: [false, "steelBolt", 14, 2200, 17, 16 /3, 0, "none", 3.35], patrolStops: 0, patrolLoop: false, route:[[0, 0]], altID: "atalinMatador"}));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(-45348, 2480, "Soldier", false, "Matador", {race: "Nirwaden", faction: "Nirwaden", con: 20, speed: 1.15, outfit: ["matadorOutfit", 0], weapon: ["silkAndDagger", [7, 7], 0, 19, 1], ranged: [false, "steelBolt", 14, 2200, 17, 16 /3, 0, "none", 3.35], patrolStops: 1, patrolLoop: false, route:[[-45305, 2481]], altID: "atalinMatador"}));
                            }
                        }
                    }

                    //boar fight
                    //naaprid fight

                    if (matadorNumRand > 0.5)
                    {
                        if (Math.random())
                        {
                            if (Math.random())
                            {
                                ArtificialIntelligenceAccess.push(new Unit(-45309, 2438, "Boar", true, "matado"));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(-45385, 2452, "Boar", true, "matado"));
                            }
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-45348, 2510, "Naaprid", true, "matado"));
                        }
                    }
                    else
                    {
                        if (Math.random())
                        {
                            if (Math.random())
                            {
                                ArtificialIntelligenceAccess.push(new Unit(-44654, 2347, "Boar", true, "matado"));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(-44576, 2508, "Boar", true, "matado"));
                            }
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-44737, 2443, "Naaprid", true, "matado"));
                        }
                    }
                }

                if (change == "matar")
                {
                    for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "matado" || ArtificialIntelligenceAccess[i].ID == "Matador")
                        {
                            ArtificialIntelligenceAccess.splice(i, 1);
                        }
                    }

                    var matadorNumRand = Math.random();


                        if (timeOfDay == "Day" || timeOfDay == "Dawn")
                        {
                            player.blinded = true;
                            player.blindedStoreTime = new Date().getTime();
                            player.blindedTime = 1;
                            if (matadorNumRand > 0.5)
                            {
                                X = -44849;
                                Y = 2498;
                            }
                            else
                            {
                                X = -45305;
                                Y = 2481;
                            }
                        }

                    //boar fight
                    //naaprid fight

                    if (matadorNumRand > 0.5)
                    {
                        if (Math.random())
                        {
                            if (Math.random())
                            {
                                ArtificialIntelligenceAccess.push(new Unit(-45309, 2438, "Boar", true, "arena5"));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(-45385, 2452, "Boar", true, "arena5"));
                            }
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-45348, 2510, "Naaprid", true, "arena5"));
                        }
                    }
                    else
                    {
                        if (Math.random())
                        {
                            if (Math.random())
                            {
                                ArtificialIntelligenceAccess.push(new Unit(-44654, 2347, "Boar", true, "arena5"));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(-44576, 2508, "Boar", true, "arena5"));
                            }
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-44737, 2443, "Naaprid", true, "arena5"));
                        }
                    }
                }

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinPed2")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    if (timeOfDay == "Day" || timeOfDay == "Dusk" || timeOfDay == "Dawn")
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-44124, 1351, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.3, 0.3], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 13, patrolLoop: true, route:[[-45046, 1341], [-45072, 527], [-46096, 498], [-46110, 1414], [-47019, 1410], [-47028, 1131], [-47250, 1122], [-47245, 272], [-47361, 260], [-44337, 245], [-44351, 487], [-44176, 495], [-44124, 1351]], altID: "atalinPed2"}));
                    }
                }

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Altezor Soldier")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "centreGuard1")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-46636, -1010, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 7, speed: 1.4, outfit: ["nirwadenMorionArmour", 11], weapon: ["nirineseSabre", [9, 10], 0, 21, 1.3], ranged: [false, "steelBolt", 14, 2200, 15, 16 /3, 0, "none", 3], patrolStops: 13, patrolLoop: true, route:[[-45458, -1070], [-45421, -289], [-45035, -352], [-45036, -952], [-44367, -1000], [-44364, -1737], [-44858, -1738], [-44865, -1863], [-45757, -1846], [-45735, -1469], [-46417, -1470], [-46420, -1007], [-46636, -1010]], altID: "centreGuard1"}));
                }

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Altezor Soldier")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "centreGuard2")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-45144, 1067, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 8, speed: 1.2, outfit: ["nirwadenMorionArmour", 11], weapon: ["nirineseSabre", [10, 10], 0, 23, 1.2], ranged: [false, "steelBolt", 16, 2250, 16, 17 /3, 0, "none", 3], patrolStops: 5, patrolLoop: true, route:[[-46043, 1056], [-45964, 2756], [-45964, 459], [-45144, 459], [-45144, 1067]], altID: "centreGuard2"}));
                }

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Altezor Soldier")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "centreGuard3")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44058, -715, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 9, speed: 1.3, outfit: ["nirwadenMorionArmour", 12], weapon: ["nirineseSabre", [9, 9], 0, 25, 1.25], ranged: [false, "steelBolt", 14, 2250, 19, 18 /3, 0, "none", 3], patrolStops: 0, patrolLoop: false, route:[[-45458, -1070]], altID: "centreGuard3"}));
                }

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Altezor Soldier")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "gardenGuard1")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-45952, 3009, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 8, speed: 1.4, outfit: ["nirwadenMorionArmour", 10], weapon: ["nirineseSabre", [10, 10], 0, 23, 1.2], ranged: [false, "steelBolt", 16, 2200, 19, 17 /3, 0, "none", 3.6], patrolStops: 2, patrolLoop: true, route:[[-45952, 7902], [-45952, 3009]], altID: "gardenGuard1"}));
                }

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Altezor Soldier")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "gardenGuard2")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44140, 7902, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 9, speed: 1.34, outfit: ["nirwadenMorionArmour", 12], weapon: ["nirineseSabre", [9, 9], 0, 22, 1], ranged: [false, "steelBolt", 14, 2200, 15, 16 /3, 0, "none", 3], patrolStops: 2, patrolLoop: true, route:[[-44140, 3009], [-44140, 7902]], altID: "gardenGuard2"}));
                }

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Altezor Soldier")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "woodsGuard1")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-43227, -2825, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 8, speed: 1.25, outfit: ["nirwadenMorionArmour", 11], weapon: ["nirineseSabre", [9, 9], 0, 24, 1.3], ranged: [false, "steelBolt", 15, 2250, 17, 17 /3, 0, "none", 3.15], patrolStops: 2, patrolLoop: true, route:[[-44081, -2825], [-43227, -2825]], altID: "woodsGuard1"}));
                }

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Altezor Soldier")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "orchardGuard1")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-41770, 2839, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 6, speed: 1.15, outfit: ["nirwadenMorionArmour", 10], weapon: ["nirineseSabre", [8, 8], 0, 24, 1.35], ranged: [false, "steelBolt", 15, 2250, 17, 17 /3, 0, "none", 3.15], patrolStops: 4, patrolLoop: true, route:[[-44177, 2826], [-44128, 1311], [-41736, 1321], [-41770, 2839]], altID: "orchardGuard1"}));
                }

                if (uniqueChars.gesuldoLDS == true)
                {
                    if (quests.torturedSpiritQuest == true)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-48144, 130, "Phantom", true, "Gesuldo"));
                        scenicList.push(new Scenery("grave", -48144, 130, 1/2 * Math.PI, 0, ["nirwaden", "Gesuldo"]));
                    }
                }
                else
                {
                    scenicList.push(new Scenery("grave", -48144, 130, 1/2 * Math.PI, 6, ["nirwaden", "Gesuldo"]));
                }

                scenicList.push(new Scenery("grave", -47559, 14, 1/2 * Math.PI, 2, ["nirwaden", false]));
                scenicList.push(new Scenery("grave", -47827, -401, 1/2 * Math.PI, 2, ["nirwaden", false]));
                scenicList.push(new Scenery("grave", -48286, -437, 1/2 * Math.PI, 2, ["nirwaden", false]));
                scenicList.push(new Scenery("grave", -48377, -254, 1/2 * Math.PI, 0, ["nirwaden", false]));
                scenicList.push(new Scenery("grave", -48116, -25, 1/2 * Math.PI, 2, ["nirwaden", false]));
                scenicList.push(new Scenery("grave", -48234, 245, 1/2 * Math.PI, 0, ["nirwaden", false]));
                scenicList.push(new Scenery("grave", -47927, 293, 1/2 * Math.PI, 2, ["nirwaden", false]));

                for (var i = 0; i < 19; i++)
                {
                    scenicList.push(new Scenery("tombstone", -47604 - 900 * seeded(1 + (i * 8.65) + 3.9), 356 - 900 * seeded(i * 2.69 + 8.9), 1/2 * Math.PI, Math.floor(seeded((Math.sin(i * i) + 1.7) * (i + 2.1) + 2) * 11), Math.max(1, seeded((Math.cos(i + 9) + 1) * 4.5) * 1.5)));
                }
                scenicList.push(new Scenery("tombstone", -47943, -399, 1/2 * Math.PI, Math.floor(seeded((Math.sin(30 * 30) + 1.7) * (30 + 2.1) + 2) * 11), Math.max(1, seeded((Math.cos(30 + 9) + 1) * 4.5) * 1.5)));

                scenicList.push(new Scenery("furRug", -46532, 776, 0 * Math.PI, 5, 1));
                scenicList.push(new Scenery("furRug", -46606, 777, 1 * Math.PI, 5, 1));

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Inquisition Emprendor")
                    {
                        hits = true;
                        break;
                    }
                }
                if (hits == 0)
                {
                    if (player.inquisitionRank == "none")
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-46403, 860, "Soldier", false, "Inquisition Emprendor", {race: "Nirwaden", faction: "Nirwaden", con: 8, speed: 1.4, outfit: ["inquisitionOutfit", 11], weapon: ["nirineseSabre", [8, 8], 0, 22, 1.15], ranged: [false, "steelBolt", 14, 2200, 15, 16 /3, 0, "none", 3], patrolStops: 1, patrolLoop: false, route:[[-46409, 849]]}));
                    }
                    else if (player.inquisitionRank == "Initiate")
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-46403, 860, "Soldier", false, "Inquisition Emprendor", {race: "Nirwaden", faction: "Nirwaden", con: 8, speed: 1.4, outfit: ["inquisitionOutfit", 11], weapon: ["nirineseSabre", [8, 8], 0, 22, 1.15], ranged: [false, "steelBolt", 14, 2200, 15, 16 /3, 0, "none", 3], patrolStops: 1, patrolLoop: false, route:[[-46409, 849]], merchant: true, merchandise: [[new Item("coins", false, false), 100], [new Item("witchHunterOutfit", false, false), 1]]}));
                    }
                    else if (player.inquisitionRank != "none")
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-46403, 860, "Soldier", false, "Inquisition Emprendor", {race: "Nirwaden", faction: "Nirwaden", con: 8, speed: 1.4, outfit: ["inquisitionOutfit", 11], weapon: ["nirineseSabre", [8, 8], 0, 22, 1.15], ranged: [false, "steelBolt", 14, 2200, 15, 16 /3, 0, "none", 3], patrolStops: 1, patrolLoop: false, route:[[-46409, 849]], merchant: true, merchandise: [[new Item("coins", false, false), 200], [new Item("witchHunterOutfit", false, false), 1], [new Item("silkAndDagger", false, false), 1], [new Item("inquisitorsBeastManual", false, false), 1]]}));
                    }
                }

                if (uniqueChars.gavilioLDS)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Inquisitor Gavilio")
                        {
                            hits = true;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        if (player.inquisitionRank != "none" && player.inquisitionRank != "Initiate")
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-46829, 687, "Soldier", false, "Inquisitor Gavilio", {race: "Nirwaden", faction: "Nirwaden", con: 8, speed: 1.5, outfit: ["inquisitionOutfit", 2.5], weapon: ["nirineseSabre", [8, 8], 0, 22, 1], ranged: [false, "steelBolt", 20, 2200, 20, 20 /3, 0, "none", 2.5], patrolStops: 1, patrolLoop: false, route:[[-46834, 707]], merchant: true, merchandise: [[new Item("iron", false, false), 25]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-46829, 687, "Soldier", false, "Inquisitor Gavilio", {race: "Nirwaden", faction: "Nirwaden", con: 8, speed: 1.5, outfit: ["inquisitionOutfit", 2.5], weapon: ["nirineseSabre", [8, 8], 0, 22, 1], ranged: [false, "steelBolt", 20, 2200, 20, 20 /3, 0, "none", 2.5], patrolStops: 1, patrolLoop: false, route:[[-46834, 707]], merchant: false, merchandise: []}));
                        }
                    }
                }

                if (uniqueChars.voraelLDS)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Inquisitor Vorael")
                        {
                            hits = true;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-46659, 1024, "Soldier", false, "Inquisitor Vorael", {race: "Nirwaden", faction: "Nirwaden", con: 10, speed: 1.39, outfit: ["inquisitionOutfit", 2.5], weapon: ["silkAndDagger", [7, 6], 6, 20, 1.1], ranged: [false, "steelBolt", 20, 2200, 20, 20 /3, 0, "none", 2.5], patrolStops: 0, patrolLoop: false, route:[[-46834, 707]], merchant: true, merchandise: []}));
                    }
                }

                scenicList.push(new Scenery("furRug", -46862, 1001, 1/2 * Math.PI, 3, 1));
                scenicList.push(new Scenery("furRug", -46862, 911, 1/2 * Math.PI, 3, 1));

                scenicList.push(new Scenery("nirwadenMueble", -46700, 672, 0, 0));
                scenicList.push(new Scenery("nirwadenMueble", -46397, 674, 0, 2));
                scenicList.push(new Scenery("nirwadenMueble", -46439, 681, 3, 5));
                scenicList.push(new Scenery("nirwadenMueble", -46396, 717, 2.1, 5));

                scenicList.push(new Scenery("nirwadenMueble", -46749, 876, 1/2 * Math.PI, 2));

                scenicList.push(new Scenery("nirwadenMueble", -46938, 722, -1/2 * Math.PI, 3));

                scenicList.push(new Scenery("molteTrophy", -46861, 1129, 1/2 * Math.PI, 5));

                scenicList.push(new Scenery("nirwadenMueble", -46700, 672, 0, 0));
                scenicList.push(new Scenery("hyelingSkeleton", -46938, 714, 0.95, 0, 1.1));

                scenicList.push(new Scenery("item", -46665, 672, 0, "nirwaden", ["changelingSkull", 1, -90]));
                scenicList.push(new Scenery("item", -46691, 673, 0, "nirwaden", ["neevFur", 1, -90]));
                scenicList.push(new Scenery("item", -46736.5, 672.5, 0, "nirwaden", ["peacockFeather", 1, -30]));
                scenicList.push(new Scenery("item", -46747, 874, 0, "nirwaden", ["chupacabrasHead", 1, -90]));
                scenicList.push(new Scenery("item", -46932, 773, 0, "nirwaden", ["hyelingClaws", 2, -50]));
                scenicList.push(new Scenery("item", -46932, 666, 0, "nirwaden", ["mofuFeather", 3, -15]));
                scenicList.push(new Scenery("item", -46649, 670, 0, "nirwaden", ["balkurFang", 2, -60]));

                scenicList.push(new Scenery("oilLantern", -46388, 666, 9.17 * Math.PI, true, [1000, 2]));

                scenicList.push(new Scenery("nirwadenMueble", -46602, 1080, 8, 5));
                scenicList.push(new Scenery("nirwadenMueble", -47141, 855, 0.046, 5));
                scenicList.push(new Scenery("nirwadenMueble", -47140, 941, -0.246, 5));

                scenicList.push(new Scenery("nirwadenMueble", -46601, 1120, 1 * Math.PI, 2));


                scenicList.push(new Scenery("nirwadenMueble", -47143, 900, 1/2 * Math.PI, 2));

                scenicList.push(new Scenery("nirwadenMueble", -47037, 1025, 0, 0));

                scenicList.push(new Scenery("item", -46589, 1129, 0, "nirwaden", ["berulnSkull", 1, -90]));
                scenicList.push(new Scenery("item", -47007, 1026.5, 0, "nirwaden", ["utTentacle", 2, -40]));
                scenicList.push(new Scenery("item", -47046, 1028, 0, "nirwaden", ["grushFur", 3, -40]));
                scenicList.push(new Scenery("item", -47072, 1028, 0, "nirwaden", ["walrusTusks", 1, -90]));

                scenicList.push(new Scenery("oilLantern", -46614, 1112, 8.15 * Math.PI, true, [1000, 2]));
                scenicList.push(new Scenery("oilLantern", -47148, 902, -1.4 * Math.PI, true, [1000, 2]));

                scenicList.push(new Scenery("hearth", -47047, 796, 1 * Math.PI, "lit"));

                scenicList.push(new Scenery("crate", -46600, 949, 1.5, 3, [1.4, "trash", 1, [], false, 0])); //trash crate for magical items

                change = "e5";
            }
        }
        else if (region == "n1e5") //Atalin City (castle)
        {
            if (change != "n1e5")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                generator2(77, 893156183774189889999927462711, 54, 6688395285999999892194291914929422375482332503, 11 , 2, -47555, 9583);
                cropper(-47555, 9583, -53158, 7506, true, true);
                scenicList.push(new Scenery("wobeaPlant", -48954, 9749, 5.9, true));
                ArtificialIntelligenceAccess.push(new Unit(-47725, 9724, "Frich", true, "Flioo"));
                ArtificialIntelligenceAccess.push(new Unit(-52909, 9881, "Peacock", false, "nirwaden"));
                ArtificialIntelligenceAccess.push(new Unit(-43765, 10174, "Peacock", true, "nirwaden"));

                //REGION CREATION
                //Build AI Units

                //PROPS
                //scenicList.push(new Scenery("skeleton", -19230, 5008, 5.12, 1.75));

                //CREATURES
                //ArtificialIntelligenceAccess.push(new Unit(-13935, 2270, "Grib", false, "docile"));
                //ArtificialIntelligenceAccess.push(new Unit(-14477, 1925, "Viper", false, "Slib"));
                //ArtificialIntelligenceAccess.push(new Unit(-14087, 1359, "Lizard", true, "Lib"));
                //ArtificialIntelligenceAccess.push(new Unit(-14501, 3283, "BlackBear", false, "Clib"));
                //ArtificialIntelligenceAccess.push(new Unit(-15119, 2314, "Varn", true, "Flib"));
                //ArtificialIntelligenceAccess.push(new Unit(-13713, 5329, "Narthwarp", false, "silwil"));
                //scenicList.push(new Scenery("ulgoyPlant", -16488, 3908, 4.9, 7));
                //ArtificialIntelligenceAccess.push(new Unit(-16473, 3885, "Ulgoy", "giant", "The Really Big Plant"));
                //ArtificialIntelligenceAccess.push(new Unit(-16247, 3330, "Boar", true, "Tambor"));
                //ArtificialIntelligenceAccess.push(new Unit(-14353, 3844, "Shehid", true, "sheta"));
                //scenicList.push(new Scenery("beeHive", -15375 , -2055, 4.5, true));

                //birds in the garden
                if (Math.random())
                {
                    ArtificialIntelligenceAccess.push(new Unit(-45519 + spacer(190), 7037 + spacer(86), "Peacock", true, "altezor"));
                    ArtificialIntelligenceAccess.push(new Unit(-44768 + spacer(60), 6800 + spacer(50), "Peacock", false, "altezor"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(-45695 + spacer(40), 7253 + spacer(40), "Peacock", false, "altezor"));
                }

                if (quests.aFeastForFewerQuest == false && player.fame >= 11 || quests.aFeastForFewerQuest == false && player.nirwadenFaction >= 500)
                {
                    if (uniqueChars.basilioAltezorLDS == true && uniqueChars.liboLDS && uniqueChars.martaLDS)
                    {
                        quests.aFeastForFewerQuest = true;
                        quests.activeQuests.push({name: "A Feast for Fewer", description: "One of the high lord's of Nirwaden has been assassinated with poison. Found out who is behind it."});
                    }
                }

                //Build Scenery
                if (player.raceName != "Nirwaden" || player.title != "Nobility" && player.title != "Royalty")
                {
                    for (var poop = 0; poop < 16; poop++)
                    {
                        scenicList.push(new Scenery("rosePlant", -44452, 3119 + 300 * poop, 3.78 * 2 * Math.cos(poop * poop), "nirwaden"));
                        scenicList.push(new Scenery("yellowStetriliPlant", -44571, 3004 + 300 * poop, 3.78 * 2 * Math.sin(poop * poop), "nirwaden"));
                        scenicList.push(new Scenery("redStetriliPlant", -44327, 3244 + 300 * poop, 3.78 * 2 * Math.cos(poop + 3 * poop), "nirwaden"));
                    }
                    for (var poop = 0; poop < 15; poop++)
                    {
                        if (poop < 3 || poop > 5)
                        {
                            scenicList.push(new Scenery("yellowStetriliPlant", -44870, 3304 + 300 * poop, 3.78 * 3 * Math.cos(poop * poop), "nirwaden"));
                            scenicList.push(new Scenery("rosePlant", -44752, 3419 + 300 * poop, 5.2 * poop * Math.sin(poop * 8), "nirwaden"));
                            scenicList.push(new Scenery("redStetriliPlant", -44630, 3304 + 300 * poop, 3.78 * 3 * Math.sin(poop + 4 * poop), "nirwaden"));
                        }
                    }

                    for (var poop = 0; poop < 16; poop++)
                    {
                        scenicList.push(new Scenery("yellowStetriliPlant", -45528, 3004 + 300 * poop, 3.78 * 2 * Math.cos(poop * poop), "nirwaden"));
                        scenicList.push(new Scenery("rosePlant", -45652, 3119 + 300 * poop, 3.78 * 2 * Math.sin(poop * poop), "nirwaden"));
                        scenicList.push(new Scenery("redStetriliPlant", -45776, 3244 + 300 * poop, 3.78 * 2 * Math.cos(poop + 3 * poop), "nirwaden"));
                    }

                    for (var poop = 0; poop < 15; poop++)
                    {
                        if (poop < 3 || poop > 5)
                        {
                            scenicList.push(new Scenery("yellowStetriliPlant", -45228, 3304 + 300 * poop, 3.78 * 3 * Math.sin(poop * poop), "nirwaden"));
                            scenicList.push(new Scenery("rosePlant", -45352, 3419 + 300 * poop, 5.2 * poop * Math.cos(poop * 8), "nirwaden"));
                            scenicList.push(new Scenery("redStetriliPlant", -45471, 3304 + 300 * poop, 3.78 * 3 * Math.cos(poop + 4 * poop), "nirwaden"));
                        }
                    }
                }
                else
                {
                    for (var poop = 0; poop < 16; poop++)
                    {
                        scenicList.push(new Scenery("rosePlant", -44452, 3119 + 300 * poop, 3.78 * 2 * Math.cos(poop * poop), true));
                        scenicList.push(new Scenery("yellowStetriliPlant", -44571, 3004 + 300 * poop, 3.78 * 2 * Math.sin(poop * poop), true));
                        scenicList.push(new Scenery("redStetriliPlant", -44327, 3244 + 300 * poop, 3.78 * 2 * Math.cos(poop + 3 * poop), true));
                    }
                    for (var poop = 0; poop < 15; poop++)
                    {
                        if (poop < 3 || poop > 5)
                        {
                            scenicList.push(new Scenery("yellowStetriliPlant", -44870, 3304 + 300 * poop, 3.78 * 3 * Math.cos(poop * poop), true));
                            scenicList.push(new Scenery("rosePlant", -44752, 3419 + 300 * poop, 5.2 * poop * Math.sin(poop * 8), true));
                            scenicList.push(new Scenery("redStetriliPlant", -44630, 3304 + 300 * poop, 3.78 * 3 * Math.sin(poop + 4 * poop), true));
                        }
                    }

                    for (var poop = 0; poop < 16; poop++)
                    {
                        scenicList.push(new Scenery("yellowStetriliPlant", -45528, 3004 + 300 * poop, 3.78 * 2 * Math.cos(poop * poop), true));
                        scenicList.push(new Scenery("rosePlant", -45652, 3119 + 300 * poop, 3.78 * 2 * Math.sin(poop * poop), true));
                        scenicList.push(new Scenery("redStetriliPlant", -45776, 3244 + 300 * poop, 3.78 * 2 * Math.cos(poop + 3 * poop), true));
                    }

                    for (var poop = 0; poop < 15; poop++)
                    {
                        if (poop < 3 || poop > 5)
                        {
                            scenicList.push(new Scenery("yellowStetriliPlant", -45228, 3304 + 300 * poop, 3.78 * 3 * Math.sin(poop * poop), true));
                            scenicList.push(new Scenery("rosePlant", -45352, 3419 + 300 * poop, 5.2 * poop * Math.cos(poop * 8), true));
                            scenicList.push(new Scenery("redStetriliPlant", -45471, 3304 + 300 * poop, 3.78 * 3 * Math.cos(poop + 4 * poop), true));
                        }
                    }
                }

                //people/soldiers
                if (uniqueChars.basilioAltezorLDS == true || uniqueChars.emyliaLDS == true || uniqueChars.lailionaLDS == true || player.raceName == "Nirwaden" && player.title == "Nobility" || quests.aFeastForFewerQuest == true)
                {
                    if (quests.aFeastForFewerQuest == true)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-45112, 9472, "Soldier", false, "Nirwaden Knight", {race: "Nirwaden", faction: "Nirwaden", con: 14, speed: 1.25, outfit: ["nirwadenPlateArmour", 18], weapon: ["none", [0.6, 0.6], 0, 0, 1.16], ranged: [false, "steelBolt", 13, 2200, 16, 15 /3, 0, "none", 3.55], patrolStops: 1, patrolLoop: false, route:[[-45082, 9472]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-44825, 9330, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 8, speed: 1.37, outfit: ["nirwadenMorionArmour", 12], weapon: ["nirineseSabre", [10, 9], 0, 22, 1.25], ranged: [false, "steelBolt", 14, 2200, 17, 16 /3, 0, "none", 3.35], patrolStops: 1, patrolLoop: false, route:[[-44886, 9377]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-45335, 9400, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 7, speed: 1.42, outfit: ["nirwadenMorionArmour", 13.5], weapon: ["nirineseSabre", [12, 9], 0, 22, 1.25], ranged: [false, "steelBolt", 13, 2200, 14, 14 /3, 0, "none", 3.25], patrolStops: 1, patrolLoop: false, route:[[-45209, 9436]]}));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-45282, 9397, "Soldier", false, "Nirwaden Knight", {race: "Nirwaden", faction: "Nirwaden", con: 14, speed: 1.25, outfit: ["nirwadenPlateArmour", 18], weapon: ["nirineseSabre", [10, 10], 0, 22, 1.3], ranged: [false, "steelBolt", 13, 2200, 16, 15 /3, 0, "none", 3.55], patrolStops: 1, patrolLoop: false, route:[[-45235, 9343]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-45243, 9031, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 8, speed: 1.37, outfit: ["nirwadenMorionArmour", 12], weapon: ["nirineseSabre", [10, 9], 0, 22, 1.25], ranged: [false, "steelBolt", 14, 2200, 17, 16 /3, 0, "none", 3.35], patrolStops: 1, patrolLoop: false, route:[[-45233, 9030]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-44911, 9031, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 7, speed: 1.42, outfit: ["nirwadenMorionArmour", 13.5], weapon: ["nirineseSabre", [12, 9], 0, 22, 1.25], ranged: [false, "steelBolt", 13, 2200, 14, 14 /3, 0, "none", 3.25], patrolStops: 1, patrolLoop: false, route:[[-44929, 9031]]}));
                    }

                    ArtificialIntelligenceAccess.push(new Unit(-44516, 8126, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 11, speed: 1.25, outfit: ["nirwadenMorionArmour", 13], weapon: ["nirineseSabre", [11, 11], 0, 21, 1.25], ranged: [false, "steelBolt", 14, 2200, 17, 16 /3, 0, "none", 3.35], patrolStops: 4, patrolLoop: true, route:[[-45603, 8126], [-45600, 9692], [-44494, 9697], [-44516, 8126]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-45189, 7856, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 9, speed: 1.34, outfit: ["nirwadenMorionArmour", 13], weapon: ["nirineseSabre", [10, 10], 0, 21, 1.15], ranged: [false, "steelBolt", 14, 2200, 17, 16 /3, 0, "none", 3.35], patrolStops: 1, patrolLoop: false, route:[[-45189, 7846]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-44907, 7856, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 9, speed: 1.34, outfit: ["nirwadenMorionArmour", 13], weapon: ["nirineseSabre", [10, 10], 0, 21, 1.15], ranged: [false, "steelBolt", 14, 2200, 17, 16 /3, 0, "none", 3.35], patrolStops: 1, patrolLoop: false, route:[[-44907, 7846]]}));
                }

                if (quests.aFeastForFewerQuest == true)
                {
                    uniqueChars.basilioAltezorLDS = false;
                }

                if (uniqueChars.basilioAltezorLDS)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "High Lord Basilio Altezor")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-45064, 9476, "Person", false, "High Lord Basilio Altezor", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenNobleOutfit", 0], weapon: ["none", [0.6, 0.5], 0, 2, 1], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45065, 9451]]}));
                    }
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "High Lord Basilio Altezor")
                        {
                            ArtificialIntelligenceAccess[i].healthMAX = 55;
                            ArtificialIntelligenceAccess[i].health = 55;
                            break;
                        }
                    }
                }

                if (uniqueChars.mecheloLDS)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Mechelo the Steward")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        if (quests.aFeastForFewerQuest == true)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-44916, 9437, "Person", false, "Mechelo the Steward", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.3, 0.35], 0, 0, 1.5], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45065, 9451]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-44761, 9276, "Person", false, "Mechelo the Steward", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.3, 0.35], 0, 0, 1.5], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45065, 9451]]}));
                        }
                    }
                }

                if (uniqueChars.belgosLDS && quests.aFeastForFewerBelgos != "disgraced")
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Ser Belgos of Atalin")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        if (quests.aFeastForFewerQuest == true)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-45009, 9481, "Soldier", false, "Ser Belgos of Atalin", {race: "Nirwaden", faction: "Nirwaden", con: 20, speed: 1.2, outfit: ["nirwadenPlateArmour", 21], weapon: ["none", [0.7, 0.6], 0, 0, 1.09], ranged: [false, "steelBolt", 14, 2200, 17, 16 /3, 0, "none", 3.35], patrolStops: 0, patrolLoop: false, route:[[-45138, 9448]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-44838, 9375, "Soldier", false, "Ser Belgos of Atalin", {race: "Nirwaden", faction: "Nirwaden", con: 20, speed: 1.2, outfit: ["nirwadenPlateArmour", 21], weapon: ["estoc", [8, 9], 20, 19, 1.9], ranged: [false, "steelBolt", 14, 2200, 17, 16 /3, 0, "none", 3.35], patrolStops: 1, patrolLoop: false, route:[[-44900, 9335]]}));
                        }
                    }
                }
                if (uniqueChars.emyliaLDS && quests.atalinSisterJarl == false)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "High Dame Emylia Altezor")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-45141, 9476, "Person", false, "High Dame Emylia Altezor", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenLadyPointyCap", 0], weapon: ["none", [0.15, 0.15], 0, 0, 2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45138, 9448]]}));
                    }
                }
                if (uniqueChars.lailionaLDS && quests.atalinSisterJarl == false)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Lailiona")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-45175, 9486, "Person", false, "Lailiona", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenLadyPointyCap", 0], weapon: ["none", [0.04, 0.05], 0, 0, 2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45168, 9449]], kid: true}));
                    }
                }
                if (uniqueChars.liboLDS)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Libo the Servant Boy")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-44732, 8535, "Person", false, "Libo the Servant Boy", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["none", [0.06, 0.06], 0, 0, 1.1], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44735, 8551]], kid: true}));
                    }
                }
                if (uniqueChars.martaLDS)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Marta the Cook")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-44792, 8372, "Person", false, "Marta the Cook", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.16, 0.16], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-44735, 8551]]}));
                    }
                }
                if (quests.aFeastForFewerQuest == true)
                {
                    if (uniqueChars.altezorInfiltratorLDS == true)
                    {
                        var hits = 0;
                        for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                        {
                            if (ArtificialIntelligenceAccess[i].ID == "Off Duty Altezor Soldier" || ArtificialIntelligenceAccess[i].ID == "Suspected Regicide")
                            {
                                hits += 1;
                                break;
                            }
                        }
                        if (hits == 0)
                        {
                            if (quests.aFeastForFewerInfiltrator == true)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(-44430, 8096, "Soldier", false, "Suspected Regicide", {race: "Nirwaden", faction: "EstolGang", con: 6, speed: 1.22, outfit: ["nirwadenMorionArmour", 11], weapon: ["nirineseSabre", [9, 9], 0, 21, 1.2], ranged: [false, "steelBolt", 14, 2200, 17, 16 /3, 0, "none", 3.35], patrolStops: 1, patrolLoop: false, route:[[-44441, 8112]]}));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(-44430, 8096, "Soldier", false, "Off Duty Altezor Soldier", {race: "Nirwaden", faction: "EstolGang", con: 6, speed: 1.22, outfit: ["nirwadenMorionArmour", 11], weapon: ["nirineseSabre", [9, 9], 0, 21, 1.2], ranged: [false, "steelBolt", 14, 2200, 17, 16 /3, 0, "none", 3.35], patrolStops: 1, patrolLoop: false, route:[[-44441, 8112]]}));
                            }
                        }
                    }
                }

                //Altezor Castle
                scenicList.push(new Scenery("nirwadenBuilding1", -44746, 8466, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding4", -44875, 8671, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -45344, 8466, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding8", -45056, 9248, 0, true));
                scenicList.push(new Scenery("nirwadenCastle1", -45066, 8915, 0, true));
                scenicList.push(new Scenery("nirwadenCastleDoor", -45048, 8040, 0, true));
                scenicList.push(new Scenery("nirwadenCastleDoor", -45048, 8315, 0, true));
                scenicList.push(new Scenery("well", -45360, 9146, 2.2, true));
                    //the lord's hall
                scenicList.push(new Scenery("nirwadenMueble", -45066, 9452, 0, 8));
                if (quests.aFeastForFewerQuest == true)
                {
                    scenicList.push(new Scenery("deadBody", -45039, 9483, 2.5 + Math.PI, 1, 1)); //nirwaden
                }
                scenicList.push(new Scenery("nirwadenMueble", -45066, 9409, 0, 4));
                scenicList.push(new Scenery("hearth", -45066, 9507, 0 * Math.PI, "lit"));
                scenicList.push(new Scenery("furRug", -45068, 9240, -1/2 * Math.PI, 4, 1));
                scenicList.push(new Scenery("furRug", -45079, 9117, 0 * Math.PI, 5, 1));
                    //kitchen
                if (player.title == "Nobility" && player.raceName == "Nirwaden" || player.title == "Royalty" && player.raceName == "Nirwaden")
                {
                    scenicList.push(new Scenery("stove", -44845, 8367, 1/2 * Math.PI, "flame"));
                }
                else
                {
                    scenicList.push(new Scenery("stove", -44845, 8367, 1/2 * Math.PI, "lit"));
                }


                if (quests.aFeastForFewerQuest == true) //feast
                {
                    scenicList.push(new Scenery("item", -45074, 9400, 0, "nirwaden", ["boarChunks", 1, 0]));
                    scenicList.push(new Scenery("item", -45090, 9404, 0, "nirwaden", ["boarChunks", 1, 0]));

                    scenicList.push(new Scenery("item", -45070, 9428, 0, "nirwaden", ["pintGlass", 1, 0]));
                    scenicList.push(new Scenery("item", -45101, 9425, 0, "nirwaden", ["glassBottleOfErguerWine", 1, 0]));

                    scenicList.push(new Scenery("item", -45049, 9414, 0, "nirwaden", ["searedFalder", 1, 0]));
                    //scenicList.push(new Scenery("item", -45057, 9427, 0, "nirwaden", ["searedSalmon", 1, 0]));

                    scenicList.push(new Scenery("item", -45086, 9430, 0, "nirwaden", ["pintGlass", 1, 0]));

                    scenicList.push(new Scenery("item", -45121, 9397, 0, "nirwaden", ["porkbelly", 1, 0]));
                    scenicList.push(new Scenery("item", -45014, 9392, 0, "nirwaden", ["boarMeat", 1, 0]));
                    scenicList.push(new Scenery("item", -45115, 9412, 0, "nirwaden", ["bacon", 3, 0]));
                    scenicList.push(new Scenery("item", -45110, 9404, 0, "nirwaden", ["bacon", 3, 0]));
                    scenicList.push(new Scenery("item", -45120, 9403, 0, "nirwaden", ["bacon", 3, 0]));
                    scenicList.push(new Scenery("item", -45037, 9427, 0, "nirwaden", ["porkAndHalgom", 1, 0]));
                    scenicList.push(new Scenery("item", -45017, 9420, 0, "nirwaden", ["naaprichaWedge", 1, 0]));
                    scenicList.push(new Scenery("item", -45022, 9401, 0, "nirwaden", ["curedPork", 2, 0]));
                    scenicList.push(new Scenery("item", -45032, 9410, 0, "nirwaden", ["curedPork", 2, 0]));
                    scenicList.push(new Scenery("item", -45032, 9420, 0, "nirwaden", ["curedPork", 2, 0]));
                    scenicList.push(new Scenery("item", -45037, 9399, 0, "nirwaden", ["naapricha", 1, 0]));
                    scenicList.push(new Scenery("item", -45048, 9388, 0, "nirwaden", ["naapricha", 1, 0]));

                    scenicList.push(new Scenery("item", -45021, 9410, 0, "nirwaden", ["naaprichaWedge", 1, 0]));

                    scenicList.push(new Scenery("item", -45016, 9429, 0, "nirwaden", ["pintGlass", 1, 0]));

                    scenicList.push(new Scenery("item", -45137, 9424, 0, "nirwaden", ["garlicTialoPork", 1, 0]));
                    scenicList.push(new Scenery("item", -45133, 9412, 0, "nirwaden", ["garlicTialoPork", 1, 0]));
                    scenicList.push(new Scenery("item", -45161, 9411, 0, "nirwaden", ["searedSalmon", 1, 0]));
                    scenicList.push(new Scenery("item", -45144, 9417, 0, "nirwaden", ["roastedHalgomMushrooms", 1, 0]));
                    scenicList.push(new Scenery("item", -45118, 9424, 0, "nirwaden", ["glassBottleOfErguerWine", 1, 0]));

                    scenicList.push(new Scenery("item", -45160, 9427, 0, "nirwaden", ["searedSalmon", 1, 0]));
                    scenicList.push(new Scenery("item", -45181, 9423, 0, "nirwaden", ["porkAndHalgom", 1, 0]));
                    scenicList.push(new Scenery("item", -45172, 9419, 0, "nirwaden", ["searedFalder", 1, 0]));

                    scenicList.push(new Scenery("item", -45178, 9405, 0, "nirwaden", ["steamedTialo", 3, 0]));
                    scenicList.push(new Scenery("item", -45166, 9390, 0, "nirwaden", ["steamedTialo", 3, 0]));

                    scenicList.push(new Scenery("item", -45146, 9392, 0, "nirwaden", ["porkbelly", 1, 0]));
                    scenicList.push(new Scenery("item", -45176, 9394, 0, "nirwaden", ["salmon", 1, 0]));
                    scenicList.push(new Scenery("item", -44995, 9425, 0, "nirwaden", ["iemaPork", 1, 0]));
                    scenicList.push(new Scenery("item", -45002, 9407, 0, "nirwaden", ["pintGlass", 1, 0]));

                    scenicList.push(new Scenery("item", -44946, 9412, 0, "nirwaden", ["polyapaTart", 2, 0]));
                    scenicList.push(new Scenery("item", -44960, 9410, 0, "nirwaden", ["chonaTart", 2, 0]));
                    scenicList.push(new Scenery("item", -44957, 9413, 0, "nirwaden", ["iemaTart", 2, 0]));

                    scenicList.push(new Scenery("item", -44944, 9425, 0, "nirwaden", ["polyapaTart", 2, 0]));
                    scenicList.push(new Scenery("item", -44964, 9421, 0, "nirwaden", ["chonaTart", 2, 0]));
                    scenicList.push(new Scenery("item", -44954, 9424, 0, "nirwaden", ["iemaTart", 2, 0]));

                    scenicList.push(new Scenery("item", -44978, 9425, 0, "nirwaden", ["erguerWine", 1, 0]));

                    scenicList.push(new Scenery("item", -44975, 9412, 0, "nirwaden", ["erguerPaste", 2, 0]));
                    scenicList.push(new Scenery("item", -44983, 9418, 0, "nirwaden", ["erguerPaste", 3, 0]));

                    scenicList.push(new Scenery("item", -44986, 9401, 0, "nirwaden", ["iemaBerries", 4, 0]));
                    scenicList.push(new Scenery("item", -44979, 9393, 0, "nirwaden", ["iemaBerries", 4, 0]));

                    scenicList.push(new Scenery("item", -44971, 9401, 0, "nirwaden", ["polyapaTart", 2, 0]));
                    scenicList.push(new Scenery("item", -44945, 9403, 0, "nirwaden", ["iemaTart", 2, 0]));
                    scenicList.push(new Scenery("item", -44956, 9398, 0, "nirwaden", ["chonaTart", 2, 0]));
                    scenicList.push(new Scenery("item", -44972, 9394, 0, "nirwaden", ["chonaFruit", 2, 0]));
                    scenicList.push(new Scenery("item", -44960, 9388, 0, "nirwaden", ["polyapaFruit", 2, 0]));
                    scenicList.push(new Scenery("item", -44942, 9391, 0, "nirwaden", ["chonaFruit", 2, 0]));
                    scenicList.push(new Scenery("item", -44948, 9388, 0, "nirwaden", ["polyapaFruit", 2, 0]));
                    scenicList.push(new Scenery("item", -44991, 9385, 0, "nirwaden", ["polyapaFruit", 2, 0]));
                }
                else if (Math.random() > 0.55) //feast
                {
                    if (player.title == "Nobility" && player.raceName == "Nirwaden" || player.title == "Royalty" && player.raceName == "Nirwaden")
                    {
                        scenicList.push(new Scenery("item", -45074, 9400, 0, "nirwaden", ["boarChunks", 1, 0]));
                        scenicList.push(new Scenery("item", -45090, 9404, 0, "nirwaden", ["boarChunks", 1, 0]));

                        scenicList.push(new Scenery("item", -45070, 9428, 0, "nirwaden", ["erguerWine", 1, 0]));
                        scenicList.push(new Scenery("item", -45101, 9425, 0, "nirwaden", ["glassBottleOfErguerWine", 1, 0]));

                        scenicList.push(new Scenery("item", -45049, 9414, 0, "nirwaden", ["searedFalder", 1, 0]));
                        scenicList.push(new Scenery("item", -45057, 9427, 0, "nirwaden", ["searedSalmon", 1, 0]));

                        scenicList.push(new Scenery("item", -45086, 9430, 0, "nirwaden", ["pintGlass", 1, 0]));

                        scenicList.push(new Scenery("item", -45121, 9397, 0, "nirwaden", ["porkbelly", 1, 0]));
                        scenicList.push(new Scenery("item", -45014, 9392, 0, "nirwaden", ["boarMeat", 1, 0]));
                        scenicList.push(new Scenery("item", -45115, 9412, 0, "nirwaden", ["bacon", 3, 0]));
                        scenicList.push(new Scenery("item", -45110, 9404, 0, "nirwaden", ["bacon", 3, 0]));
                        scenicList.push(new Scenery("item", -45120, 9403, 0, "nirwaden", ["bacon", 3, 0]));
                        scenicList.push(new Scenery("item", -45037, 9427, 0, "nirwaden", ["porkAndHalgom", 1, 0]));
                        scenicList.push(new Scenery("item", -45017, 9420, 0, "nirwaden", ["naaprichaWedge", 1, 0]));
                        scenicList.push(new Scenery("item", -45022, 9401, 0, "nirwaden", ["curedPork", 2, 0]));
                        scenicList.push(new Scenery("item", -45032, 9410, 0, "nirwaden", ["curedPork", 2, 0]));
                        scenicList.push(new Scenery("item", -45032, 9420, 0, "nirwaden", ["curedPork", 2, 0]));
                        scenicList.push(new Scenery("item", -45037, 9399, 0, "nirwaden", ["naapricha", 1, 0]));
                        scenicList.push(new Scenery("item", -45048, 9388, 0, "nirwaden", ["naapricha", 1, 0]));

                        scenicList.push(new Scenery("item", -45021, 9410, 0, "nirwaden", ["naaprichaWedge", 1, 0]));

                        scenicList.push(new Scenery("item", -45016, 9429, 0, "nirwaden", ["erguerWine", 1, 0]));

                        scenicList.push(new Scenery("item", -45137, 9424, 0, "nirwaden", ["garlicTialoPork", 1, 0]));
                        scenicList.push(new Scenery("item", -45133, 9412, 0, "nirwaden", ["garlicTialoPork", 1, 0]));
                        scenicList.push(new Scenery("item", -45161, 9411, 0, "nirwaden", ["searedSalmon", 1, 0]));
                        scenicList.push(new Scenery("item", -45144, 9417, 0, "nirwaden", ["roastedHalgomMushrooms", 1, 0]));
                        scenicList.push(new Scenery("item", -45118, 9424, 0, "nirwaden", ["glassBottleOfErguerWine", 1, 0]));

                        scenicList.push(new Scenery("item", -45160, 9427, 0, "nirwaden", ["searedSalmon", 1, 0]));
                        scenicList.push(new Scenery("item", -45181, 9423, 0, "nirwaden", ["porkAndHalgom", 1, 0]));
                        scenicList.push(new Scenery("item", -45172, 9419, 0, "nirwaden", ["searedFalder", 1, 0]));

                        scenicList.push(new Scenery("item", -45178, 9405, 0, "nirwaden", ["steamedTialo", 3, 0]));
                        scenicList.push(new Scenery("item", -45166, 9390, 0, "nirwaden", ["steamedTialo", 3, 0]));

                        scenicList.push(new Scenery("item", -45146, 9392, 0, "nirwaden", ["porkbelly", 1, 0]));
                        scenicList.push(new Scenery("item", -45176, 9394, 0, "nirwaden", ["salmon", 1, 0]));
                        scenicList.push(new Scenery("item", -44995, 9425, 0, "nirwaden", ["iemaPork", 1, 0]));
                        scenicList.push(new Scenery("item", -45002, 9407, 0, "nirwaden", ["pintGlass", 1, 0]));

                        scenicList.push(new Scenery("item", -44946, 9412, 0, "nirwaden", ["polyapaTart", 2, 0]));
                        scenicList.push(new Scenery("item", -44960, 9410, 0, "nirwaden", ["chonaTart", 2, 0]));
                        scenicList.push(new Scenery("item", -44957, 9413, 0, "nirwaden", ["iemaTart", 2, 0]));

                        scenicList.push(new Scenery("item", -44944, 9425, 0, "nirwaden", ["polyapaTart", 2, 0]));
                        scenicList.push(new Scenery("item", -44964, 9421, 0, "nirwaden", ["chonaTart", 2, 0]));
                        scenicList.push(new Scenery("item", -44954, 9424, 0, "nirwaden", ["iemaTart", 2, 0]));

                        scenicList.push(new Scenery("item", -44978, 9425, 0, "nirwaden", ["erguerWine", 1, 0]));

                        scenicList.push(new Scenery("item", -44975, 9412, 0, "nirwaden", ["erguerPaste", 2, 0]));
                        scenicList.push(new Scenery("item", -44983, 9418, 0, "nirwaden", ["erguerPaste", 3, 0]));

                        scenicList.push(new Scenery("item", -44986, 9401, 0, "nirwaden", ["iemaBerries", 4, 0]));
                        scenicList.push(new Scenery("item", -44979, 9393, 0, "nirwaden", ["iemaBerries", 4, 0]));

                        scenicList.push(new Scenery("item", -44971, 9401, 0, "nirwaden", ["polyapaTart", 2, 0]));
                        scenicList.push(new Scenery("item", -44945, 9403, 0, "nirwaden", ["iemaTart", 2, 0]));
                        scenicList.push(new Scenery("item", -44956, 9398, 0, "nirwaden", ["chonaTart", 2, 0]));
                        scenicList.push(new Scenery("item", -44972, 9394, 0, "nirwaden", ["chonaFruit", 2, 0]));
                        scenicList.push(new Scenery("item", -44960, 9388, 0, "nirwaden", ["polyapaFruit", 2, 0]));
                        scenicList.push(new Scenery("item", -44942, 9391, 0, "nirwaden", ["chonaFruit", 2, 0]));
                        scenicList.push(new Scenery("item", -44948, 9388, 0, "nirwaden", ["polyapaFruit", 2, 0]));
                        scenicList.push(new Scenery("item", -44991, 9385, 0, "nirwaden", ["polyapaFruit", 2, 0]));

                    }
                    else
                    {
                        scenicList.push(new Scenery("item", -45074, 9400, 0, "nirwaden", ["boarChunks", 1, -35]));
                        scenicList.push(new Scenery("item", -45090, 9404, 0, "nirwaden", ["boarChunks", 1, -35]));
                        scenicList.push(new Scenery("item", -45049, 9414, 0, "nirwaden", ["searedFalder", 1, -25]));
                        scenicList.push(new Scenery("item", -45057, 9427, 0, "nirwaden", ["searedSalmon", 1, -25]));
                        scenicList.push(new Scenery("item", -45070, 9428, 0, "nirwaden", ["erguerWine", 1, -15]));
                        scenicList.push(new Scenery("item", -45101, 9425, 0, "nirwaden", ["glassBottleOfErguerWine", 1, -45]));
                        scenicList.push(new Scenery("item", -45086, 9430, 0, "nirwaden", ["pintGlass", 1, -5]));
                        scenicList.push(new Scenery("item", -45121, 9397, 0, "nirwaden", ["porkbelly", 1, -40]));
                        scenicList.push(new Scenery("item", -45014, 9392, 0, "nirwaden", ["boarMeat", 1, -55]));
                        scenicList.push(new Scenery("item", -45115, 9412, 0, "nirwaden", ["bacon", 3, -33]));
                        scenicList.push(new Scenery("item", -45110, 9404, 0, "nirwaden", ["bacon", 3, -33]));
                        scenicList.push(new Scenery("item", -45120, 9403, 0, "nirwaden", ["bacon", 3, -33]));
                        scenicList.push(new Scenery("item", -45037, 9427, 0, "nirwaden", ["porkAndHalgom", 1, -40]));
                        scenicList.push(new Scenery("item", -45017, 9420, 0, "nirwaden", ["naaprichaWedge", 1, -20]));
                        scenicList.push(new Scenery("item", -45022, 9401, 0, "nirwaden", ["curedPork", 2, -20]));
                        scenicList.push(new Scenery("item", -45032, 9410, 0, "nirwaden", ["curedPork", 2, -20]));
                        scenicList.push(new Scenery("item", -45032, 9420, 0, "nirwaden", ["curedPork", 2, -20]));
                        scenicList.push(new Scenery("item", -45037, 9399, 0, "nirwaden", ["naapricha", 1, -50]));
                        scenicList.push(new Scenery("item", -45048, 9388, 0, "nirwaden", ["naapricha", 1, -50]));
                        scenicList.push(new Scenery("item", -45021, 9410, 0, "nirwaden", ["naaprichaWedge", 1, -20]));
                        scenicList.push(new Scenery("item", -45016, 9429, 0, "nirwaden", ["erguerWine", 1, -15]));
                        scenicList.push(new Scenery("item", -45137, 9424, 0, "nirwaden", ["garlicTialoPork", 1, -30]));
                        scenicList.push(new Scenery("item", -45133, 9412, 0, "nirwaden", ["garlicTialoPork", 1, -30]));
                        scenicList.push(new Scenery("item", -45161, 9411, 0, "nirwaden", ["searedSalmon", 1, -25]));
                        scenicList.push(new Scenery("item", -45144, 9417, 0, "nirwaden", ["roastedHalgomMushrooms", 1, -15]));
                        scenicList.push(new Scenery("item", -45118, 9424, 0, "nirwaden", ["glassBottleOfErguerWine", 1, -45]));
                        scenicList.push(new Scenery("item", -45160, 9427, 0, "nirwaden", ["searedSalmon", 1, -25]));
                        scenicList.push(new Scenery("item", -45181, 9423, 0, "nirwaden", ["porkAndHalgom", 1, -35]));
                        scenicList.push(new Scenery("item", -45172, 9419, 0, "nirwaden", ["searedFalder", 1, -25]));
                        scenicList.push(new Scenery("item", -45178, 9405, 0, "nirwaden", ["steamedTialo", 3, -20]));
                        scenicList.push(new Scenery("item", -45166, 9390, 0, "nirwaden", ["steamedTialo", 3, -20]));
                        scenicList.push(new Scenery("item", -45146, 9392, 0, "nirwaden", ["porkbelly", 1, -50]));
                        scenicList.push(new Scenery("item", -45176, 9394, 0, "nirwaden", ["salmon", 1, -15]));
                        scenicList.push(new Scenery("item", -44995, 9425, 0, "nirwaden", ["iemaPork", 1, -35]));
                        scenicList.push(new Scenery("item", -45002, 9407, 0, "nirwaden", ["pintGlass", 1, -10]));
                        scenicList.push(new Scenery("item", -44946, 9412, 0, "nirwaden", ["polyapaTart", 2, -20]));
                        scenicList.push(new Scenery("item", -44960, 9410, 0, "nirwaden", ["chonaTart", 2, -20]));
                        scenicList.push(new Scenery("item", -44957, 9413, 0, "nirwaden", ["iemaTart", 2, -20]));
                        scenicList.push(new Scenery("item", -44944, 9425, 0, "nirwaden", ["polyapaTart", 2, -20]));
                        scenicList.push(new Scenery("item", -44964, 9421, 0, "nirwaden", ["chonaTart", 2, -20]));
                        scenicList.push(new Scenery("item", -44954, 9424, 0, "nirwaden", ["iemaTart", 2, -20]));
                        scenicList.push(new Scenery("item", -44978, 9425, 0, "nirwaden", ["erguerWine", 1, -15]));
                        scenicList.push(new Scenery("item", -44975, 9412, 0, "nirwaden", ["erguerPaste", 2, -20]));
                        scenicList.push(new Scenery("item", -44983, 9418, 0, "nirwaden", ["erguerPaste", 3, -20]));
                        scenicList.push(new Scenery("item", -44986, 9401, 0, "nirwaden", ["iemaBerries", 4, -20]));
                        scenicList.push(new Scenery("item", -44979, 9393, 0, "nirwaden", ["iemaBerries", 4, -20]));

                        scenicList.push(new Scenery("item", -44971, 9401, 0, "nirwaden", ["polyapaTart", 2, -20]));
                        scenicList.push(new Scenery("item", -44945, 9403, 0, "nirwaden", ["iemaTart", 2, -20]));
                        scenicList.push(new Scenery("item", -44956, 9398, 0, "nirwaden", ["chonaTart", 2, -20]));
                        scenicList.push(new Scenery("item", -44972, 9394, 0, "nirwaden", ["chonaFruit", 2, -20]));
                        scenicList.push(new Scenery("item", -44960, 9388, 0, "nirwaden", ["polyapaFruit", 2, -20]));
                        scenicList.push(new Scenery("item", -44942, 9391, 0, "nirwaden", ["chonaFruit", 2, -20]));
                        scenicList.push(new Scenery("item", -44948, 9388, 0, "nirwaden", ["polyapaFruit", 2, -20]));
                        scenicList.push(new Scenery("item", -44991, 9385, 0, "nirwaden", ["polyapaFruit", 2, -20]));
                    }

                }
                else
                {

                }

                if (uniqueChars.lelailaLDS && quests.imaginaryFriendAdopted == true && player.title == "Nobility" && player.raceName == "Nirwaden")
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Lelaila")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        var randbutt = Math.random();
                        if (randbutt > 0.7)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-44738, 9319, "Person", false, "Lelaila", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["basketDark", [0.05, 0.05], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[], kid: true}));
                        }
                        else if (randbutt > 0.4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-44700, 8449, "Person", false, "Lelaila", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["basketLight", [0.05, 0.05], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[], kid: true}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-44771, 9141, "Person", false, "Lelaila", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.05, 0.05], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 5, patrolLoop: true, route:[[-44771, 9141], [-44774, 8877], [-45240, 8875], [-45253, 8673], [-44814, 8867]], kid: true}));
                        }
                    }
                }

                scenicList.push(new Scenery("nirwadenMueble", -44750, 8576, 1 * Math.PI, 1));
                scenicList.push(new Scenery("nirwadenMueble", -44775, 8576, 1 * Math.PI, 1));
                scenicList.push(new Scenery("nirwadenMueble", -44826, 8553, 1/2 * Math.PI, 1));
                scenicList.push(new Scenery("nirwadenMueble", -44826, 8544, 1/2 * Math.PI, 1));
                scenicList.push(new Scenery("item", -44699.5, 8576, 0, "nirwaden", ["bucketOfWater", 1, -7]));

                if (quests.aFeastForFewerQuest == true)
                {
                    if (quests.altezorCastleItems == true)
                    {
                        quests.altezorCastleItems = false;
                        worldItems.push([new Item("emptyVialOfGojiiPoison", -44726, 8575), 1]);
                        worldItems.push([new Item("vomit", -45062, 9484), 1]);
                    }
                }



                //trees in the wuntol woods.
                //scenicList.push(new Scenery("pineTree", -13696, 1772, 1.3, true));


                //Plants of the wuntol woods
                //scenicList.push(new Scenery("neprilnePlant", -17425 , 3993, -5.8, true));
                //scenicList.push(new Scenery("pluttPlant", -16685 , 4251, 2.4, true));
                //scenicList.push(new Scenery("culprisPlant", -21156 , 617, -3.5, true));
                //scenicList.push(new Scenery("stomwikPlant", -18732 , -2343, 6, true));
                //scenicList.push(new Scenery("akerPlant", -14491 , 5755, 1, true));
                //scenicList.push(new Scenery("glinPlant", -15944 , -2502, -7.789, true));
                //scenicList.push(new Scenery("ogardPlant", -16292 , -2231, 0, true));
                //scenicList.push(new Scenery("wyrPlant", -15134 , 2399, 2.8, true));
                //scenicList.push(new Scenery("cyrinthilimPlant", -21038 , -2478, 4, true));

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Altezor Soldier")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "gardenGuard1")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-45952, 3009, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 8, speed: 1.4, outfit: ["nirwadenMorionArmour", 10], weapon: ["nirineseSabre", [10, 10], 0, 23, 1.2], ranged: [false, "steelBolt", 16, 2200, 19, 17 /3, 0, "none", 3.6], patrolStops: 2, patrolLoop: true, route:[[-45952, 7902], [-45952, 3009]], altID: "gardenGuard1"}));
                }

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Altezor Soldier")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "gardenGuard2")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44140, 7902, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 9, speed: 1.34, outfit: ["nirwadenMorionArmour", 12], weapon: ["nirineseSabre", [9, 9], 0, 22, 1], ranged: [false, "steelBolt", 14, 2200, 15, 16 /3, 0, "none", 3], patrolStops: 2, patrolLoop: true, route:[[-44140, 3009], [-44140, 7902]], altID: "gardenGuard2"}));
                }

                if (player.title == "Nobility" && player.raceName == "Nirwaden")
                {
                    scenicList.push(new Scenery("furRug", -44950, 8655, 3.5, 2.4, 0));
                    scenicList.push(new Scenery("furRug", -44772, 8712, 3.5 + Math.PI, 1.67, 0));
                    scenicList.push(new Scenery("fineBed", -44929, 8766, -1/2 * Math.PI, true, 0)); //black
                    scenicList.push(new Scenery("drawerA", -45015, 8785, 1/2 * Math.PI, 3, [2.4, "atalinNobleDrawer1", 20, [], false, 0])); //light
                    scenicList.push(new Scenery("nirwadenMueble", -44929, 8558, 0 * Math.PI, 0)); //long bench
                    scenicList.push(new Scenery("nirwadenMueble", -45006, 8558, 0 * Math.PI, 0)); //long bench
                    scenicList.push(new Scenery("nirwadenMueble", -45045, 8621, 1/2 * Math.PI, 0)); //long bench

                    scenicList.push(new Scenery("nirwadenMueble", -44813, 8623, 1 * Math.PI, 1)); //bench
                    scenicList.push(new Scenery("nirwadenMueble", -44760, 8623, 1 * Math.PI, 1)); //bench
                    scenicList.push(new Scenery("nirwadenMueble", -44710, 8623, 1 * Math.PI, 1)); //bench

                    scenicList.push(new Scenery("nirwadenMueble", -44707, 8639, -1/2 * Math.PI, 2)); //sqr tbl

                    if (player.gender == "Male")
                    {
                        scenicList.push(new Scenery("drawerA", -44700, 8770, 0 * Math.PI, 3, [1.6, "atalinNobleDrawer2", 7, [], false, 0])); //light
                        scenicList.push(new Scenery("hearth", -44698, 8704, -1/2 * Math.PI, "flame"));
                    }
                    else
                    {
                        scenicList.push(new Scenery("loom", -44711, 8769, -1/4 * Math.PI, true));
                        scenicList.push(new Scenery("drawerA", -44865.54, 8621, 0 * Math.PI, 3, [1.6, "atalinNobleDrawer2", 7, [], false, 0])); //light
                        scenicList.push(new Scenery("hearth", -45065, 8723, 1/2 * Math.PI, "flame"));
                    }
                }
                else
                {
                    scenicList.push(new Scenery("furRug", -44950, 8655, 3.5, 2.4, 0));
                    scenicList.push(new Scenery("furRug", -44772, 8712, 3.5 + Math.PI, 1.67, 0));
                    scenicList.push(new Scenery("fineBed", -44929, 8766, -1/2 * Math.PI, false, 0)); //black
                    scenicList.push(new Scenery("drawerA", -45015, 8785, 1/2 * Math.PI, 1, [2.4])); //light
                    scenicList.push(new Scenery("nirwadenMueble", -44929, 8558, 0 * Math.PI, 0)); //long bench
                    scenicList.push(new Scenery("nirwadenMueble", -45006, 8558, 0 * Math.PI, 0)); //long bench
                    scenicList.push(new Scenery("nirwadenMueble", -45045, 8621, 1/2 * Math.PI, 0)); //long bench

                    scenicList.push(new Scenery("nirwadenMueble", -44813, 8623, 1 * Math.PI, 1)); //bench
                    scenicList.push(new Scenery("nirwadenMueble", -44760, 8623, 1 * Math.PI, 1)); //bench
                    scenicList.push(new Scenery("nirwadenMueble", -44710, 8623, 1 * Math.PI, 1)); //bench

                    scenicList.push(new Scenery("nirwadenMueble", -44707, 8639, -1/2 * Math.PI, 2)); //sqr tbl

                    scenicList.push(new Scenery("drawerA", -44700, 8770, 0 * Math.PI, 1, [1.6])); //light
                }

                scenicList.push(new Scenery("bed", -45273, 8540, 0 * Math.PI, 1));
                scenicList.push(new Scenery("bed", -45397, 8540, 1 * Math.PI, 1));
                scenicList.push(new Scenery("bed", -45301, 8366, -1/2 * Math.PI, 1));

                scenicList.push(new Scenery("nirwadenMueble", -45399, 8418, 1.54 * Math.PI, 6)); //stool

                scenicList.push(new Scenery("nirwadenMueble", -45398, 8370, 1/2 * Math.PI, 2)); //sqr tbl

                scenicList.push(new Scenery("nirwadenMueble", -45334.54, 8578, 0 * Math.PI, 1)); //bench


                //snowy part
                ArtificialIntelligenceAccess.push(new Unit(-44778.89090749908, 16050.63183659932, "WinterWolf", false, "esttlfo1"));
                ArtificialIntelligenceAccess.push(new Unit(-44949.00581225769, 15955.98507169797, "WinterWolf", false, "esttlfo2"));
                ArtificialIntelligenceAccess.push(new Unit(-45909.27793815426, 12171.79992305773, "WinterWolf", false, "wintwfs1"));
                ArtificialIntelligenceAccess.push(new Unit(-46149.726572592524, 12088.344781109347, "WinterWolf", false, "wintwfs2"));
                ArtificialIntelligenceAccess.push(new Unit(-46236.19803859372, 12189.689286936253, "WinterWolf", false, "wintwfs3"));
                ArtificialIntelligenceAccess.push(new Unit(-48918.232524670515, 11313.689343791651, "WinterWolf", false, "wintwlvs1"));
                ArtificialIntelligenceAccess.push(new Unit(-49021.27215027349, 11475.049344367611, "WinterWolf", false, "wintwlvs2"));
                ArtificialIntelligenceAccess.push(new Unit(-48719.056264085695, 11350.662271519552, "WinterWolf", false, "wintwlvs3"));
                ArtificialIntelligenceAccess.push(new Unit(-48923.09232073978, 11408.63300823097, "WinterWolf", false, "wintwlvs4"));
                ArtificialIntelligenceAccess.push(new Unit(-53300.62406899323, 15861.137348609482, "WinterWolf", false, "wintsnw1"));
                ArtificialIntelligenceAccess.push(new Unit(-53553.93453473464, 15688.81046625415, "WinterWolf", false, "wintsnw2"));
                ArtificialIntelligenceAccess.push(new Unit(-50025.32521446383, 16148.47473602882, "WinterWolf", false, "wintsnuow1"));
                ArtificialIntelligenceAccess.push(new Unit(-50190.83921564556, 16078.814599475903, "WinterWolf", false, "wintsnuow2"));
                ArtificialIntelligenceAccess.push(new Unit(-50253.86647356398, 16172.92512864752, "WinterWolf", false, "wintsnuow3"));
                ArtificialIntelligenceAccess.push(new Unit(-49800.1372298296, 15388.377167705858, "WinterWolf", false, "wintsnuow4"));
                ArtificialIntelligenceAccess.push(new Unit(-49555.314108521015, 15302.821497857667, "WinterWolf", false, "wintsnuow5"));
                ArtificialIntelligenceAccess.push(new Unit(-49768.76713223927, 15478.343706394438, "WinterWolf", false, "wintsnuow6"));
                ArtificialIntelligenceAccess.push(new Unit(-49743.98766164748, 15209.294193136671, "WinterWolf", false, "wintsnuow7"));
                ArtificialIntelligenceAccess.push(new Unit(-49915.15328707777, 15801.072859665657, "WinterWolf", true, "wintsnuowmo8"));
                ArtificialIntelligenceAccess.push(new Unit(-51693.72751000763, 11165.52208724039, "WinterWolf", false, "wintsnuo1"));
                ArtificialIntelligenceAccess.push(new Unit(-51460.09090432031, 11309.035925584392, "WinterWolf", false, "wintsnuow2"));

                ArtificialIntelligenceAccess.push(new Unit(-44508.51949468403, 13569.176770965978, "Waanti", false, "hrnlitle1"));
                ArtificialIntelligenceAccess.push(new Unit(-44339.21562505046, 13508.824059220144, "Waanti", true, "hrnlitle2"));
                ArtificialIntelligenceAccess.push(new Unit(-44563.2002370857, 13486.03546596161, "Waanti", "baby", "hrnlitle3"));
                ArtificialIntelligenceAccess.push(new Unit(-53243.542557603134, 11484.73167660017, "Waanti", false, "gotherdltle1"));
                ArtificialIntelligenceAccess.push(new Unit(-53064.980418982836, 11381.831488108997, "Waanti", true, "gotherdltle2"));
                ArtificialIntelligenceAccess.push(new Unit(-53188.35536208498, 11570.874026610583, "Waanti", false, "gotherdltle3"));
                ArtificialIntelligenceAccess.push(new Unit(-47296.52456586396, 15774.570352640741, "Waanti", true, "gotherdltd1"));
                ArtificialIntelligenceAccess.push(new Unit(-47114.313709203634, 15855.647955603401, "Waanti", false, "gotherdltd2"));
                ArtificialIntelligenceAccess.push(new Unit(-48175.79249422268, 14064.635710570932, "Waanti", false, "gotherdlt1"));
                ArtificialIntelligenceAccess.push(new Unit(-48069.6773419207, 14105.585611599185, "Waanti", "baby", "gotherdlt2"));
                ArtificialIntelligenceAccess.push(new Unit(-48302.99573508171, 14144.438885942229, "Waanti", true, "gotherdlt3"));

                ArtificialIntelligenceAccess.push(new Unit(-52734.94922675921, 13725.349695710329, "Glutid", false, "ozeee1"));

                scenicList.push(new Scenery("bushkaPlant", -46167.80733178159, 13920.265150960618, 3, true));
                scenicList.push(new Scenery("bushkaPlant", -51851.18409951113, 13673.32426675777, 1, true));
                scenicList.push(new Scenery("bushkaPlant", -49278.8343094348, 11936.216851145005, 3, true));

                scenicList.push(new Scenery("wightBloomPlant", -50198.85019888117, 15590.392350238697, 3, true));


                change = "n1e5";
            }
        }
        else if (region == "s16") //Inochtihikli Village
        {
            if (change != "s16")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                //Animals
                ArtificialIntelligenceAccess.push(new Unit(-2305, -166222, "Yioshk", true, "Bilter"));
                ArtificialIntelligenceAccess.push(new Unit(-1117, -163587, "Yioshk", false, "Biltukin"));

                ArtificialIntelligenceAccess.push(new Unit(-844, -158511, "Yioshk", false, "Binutu"));

                if (change != "s17")
                {
                    if (Math.round(Math.random()))
                    {
                        ArtificialIntelligenceAccess.push(new Unit(2213, -166458, "Yioshk", false, "Bintunin"));
                    }
                }
                else
                {
                    if (Math.round(Math.random()))
                    {
                        ArtificialIntelligenceAccess.push(new Unit(5196, -164759, "Yioshk", true, "Bintunini"));
                    }
                }

                ArtificialIntelligenceAccess.push(new Unit(-1765, -157266, "Yioshk", Math.round(Math.random()), "Biltu"));
                if (Math.round(Math.random()))
                {
                    ArtificialIntelligenceAccess.push(new Unit(6264, -160310, "Rhinoceros", false, "Cagatl"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(6301, -159706, "Taipan", false, "Sapatli"));
                }

                //people

                if (uniqueChars.hamduLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Hamdu the Banker")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(2024, -159004, "Person", false, "Hamdu the Banker", {race: "Orgell", faction: "Freynor", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.1], ranged: [false, "arrow", 8, 2000, 1, 6, 0, "none", 0.95], patrolStops: 1, patrolLoop: false, route:[[2024, -159010]], banker: true}));
                    }

                    ArtificialIntelligenceAccess.push(new Unit(1875, -158844, "Naaprid", true, "Abelt"));
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Abelt")
                        {
                            ArtificialIntelligenceAccess[i].baseTeam = "Freynor";
                            ArtificialIntelligenceAccess[i].speed = 0;
                            ArtificialIntelligenceAccess[i].tamable = false;
                        }
                    }
                }

                if (uniqueChars.sorvaldLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Sorvald the Merchant")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(1987, -159402, "Person", false, "Sorvald the Merchant", {race: "Freynor", faction: "Freynor", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.25, 0.25], 0, 0, 1.25], ranged: [false, "arrow", 8, 2000, 1, 6, 0, "none", 0.95], patrolStops: 1, patrolLoop: false, route:[[1984, -159344]], merchant: true, merchandise: [[new Item("coins", false, false), 100], [new Item("iron", false, false), 15], [new Item("wood", false, false), 21], [new Item("barrelOfHarstAle", false, false), 1], [new Item("akerBerries", false, false), 12], [new Item("pluttBerries", false, false), 3], [new Item("beesWax", false, false), 7], [new Item("oilLamp", false, false), 1], [new Item("jarOfOil", false, false), 1], [new Item("fishingpole", false, false), 1], [new Item("fireStarter", false, false), 1]]}));
                    }

                    ArtificialIntelligenceAccess.push(new Unit(1809, -159530, "Naaprid", true, "Abilt"));
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Abilt")
                        {
                            ArtificialIntelligenceAccess[i].baseTeam = "Freynor";
                            ArtificialIntelligenceAccess[i].speed = 0;
                            ArtificialIntelligenceAccess[i].tamable = false;
                        }
                    }
                }

                ArtificialIntelligenceAccess.push(new Unit(2602, -158899, "Soldier", false, "Alzkwaya Warrior", {race: "Kel", faction: "Kel", con: 6, speed: 1.5, outfit: ["mofuTribalWear", 0], weapon: ["kellishSpear", [7, 3], 4, 16, 1.1], ranged: [false, "steelBolt", 16, 2200, 19, 17 /3, 0, "none", 3.6], patrolStops: 10, patrolLoop: true, route:[[2602, -158899], [2594, -159109], [2267, -159092], [3003, -159391], [3021, -159111], [3488, -159174], [3455, -159549], [2988, -160099], [3014, -159125], [2594, -159109]]}));

                ArtificialIntelligenceAccess.push(new Unit(3132, -159781, "Soldier", false, "Alzkwaya Warrior", {race: "Kel", faction: "Kel", con: 5, speed: 1.55, outfit: ["mofuTribalWear", 0], weapon: ["kellishSpear", [6, 3], 3.5, 16, 1.1], ranged: [false, "steelBolt", 16, 2200, 19, 17 /3, 0, "none", 3.6], patrolStops: 4, patrolLoop: true, route:[[3132, -159781], [3244, -160521], [2231, -160769], [3244, -160521]]}));

                ArtificialIntelligenceAccess.push(new Unit(2347, -159341, "Soldier", false, "Alzkwaya Warrior", {race: "Kel", faction: "Kel", con: 4, speed: 1.57, outfit: ["mofuTribalWear", 0], weapon: ["kellishSword", [6, 5], 0, 18, 1.25], ranged: [false, "steelBolt", 16, 2200, 19, 17 /3, 0, "none", 3.6], patrolStops: 1, patrolLoop: false, route:[[2308, -159335]]}));

                ArtificialIntelligenceAccess.push(new Unit(3099, -160672, "Soldier", false, "Alzkwaya Warrior", {race: "Kel", faction: "Kel", con: 3, speed: 1.6, outfit: ["mofuTribalWear", 0], weapon: ["kellishSpear", [5, 5], 4, 17, 0.9], ranged: [false, "steelBolt", 16, 2200, 19, 17 /3, 0, "none", 3.6], patrolStops: 4, patrolLoop: true, route:[[3099, -160672], [3101, -160944], [2803, -160944], [2803, -160693]]}));

                if (uniqueChars.iplalaLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Iplala the Warrior Elder")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(3287, -160912, "Soldier", false, "Iplala the Warrior Elder", {race: "Kel", faction: "Kel", con: 3, speed: 1, outfit: ["mofuTribalWear", 0], weapon: ["kellishSword", [4, 6], 0, 17, 1.4], ranged: [false, "steelBolt", 16, 2200, 19, 17 /3, 0, "none", 3.6], patrolStops: 1, patrolLoop: false, route:[[3304, -160884]]}));
                    }
                }

                if (uniqueChars.ehitliLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Ehitli")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(2402, -160021, "Soldier", false, "Ehitli", {race: "Kel", faction: "Kel", con: 0.5, speed: 1.45, outfit: ["mofuTribalWear", 0], weapon: ["kellishSpear", [1.7, 0.85], 0, 8, 2], ranged: [false, "steelBolt", 16, 2200, 19, 17 /3, 0, "none", 3.6], patrolStops: 1, patrolLoop: false, route:[[2301, -160018]], kid: true}));
                    }
                }

                if (uniqueChars.muktuLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Muktu the Artisan")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(2920, -160235, "Person", false, "Muktu the Artisan", {race: "Kel", faction: "Kel", personality: "scared", outfit: ["mofuTribalWear", 0], weapon: ["none", [0.2, 0.2], 0, 0, 2], ranged: [false, "arrow", 8, 2000, 1, 6, 0, "none", 0.95], patrolStops: 1, patrolLoop: false, route:[[2964, -160210]], merchant: true, merchandise: [[new Item("coins", false, false), 6], [new Item("clayBowl", false, false), 25], [new Item("naapridDrinkinghorn", false, false), 8], [new Item("kellishClayPot", false, false), 6]]}));
                    }
                }

                ArtificialIntelligenceAccess.push(new Unit(3639, -160235, "Person", false, "Alzkwaya Farmer", {race: "Kel", faction: "Kel", personality: "scared", outfit: ["mofuTribalWear", 0], weapon: ["none", [0.2, 0.2], 0, 0, 2], ranged: [false, "arrow", 8, 2000, 1, 6, 0, "none", 0.95], patrolStops: 1, patrolLoop: false, route:[[3657, -159553]]}));
                ArtificialIntelligenceAccess.push(new Unit(3065, -158801, "Person", false, "Alzkwaya Farmer", {race: "Kel", faction: "Kel", personality: "scared", outfit: ["mofuTribalWear", 0], weapon: ["none", [0.2, 0.2], 0, 0, 2], ranged: [false, "arrow", 8, 2000, 1, 6, 0, "none", 0.95], patrolStops: 1, patrolLoop: false, route:[[2962, -158822]]}));

                if (uniqueChars.imatlLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Imatl the Tailor")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(3170, -159308, "Person", false, "Imatl the Tailor", {race: "Kel", faction: "Kel", personality: "scared", outfit: ["mofuTribalWear", 0], weapon: ["none", [0.2, 0.2], 0, 0, 2], ranged: [false, "arrow", 8, 2000, 1, 6, 0, "none", 0.95], patrolStops: 1, patrolLoop: false, route:[[3151, -159308]], merchant: true, merchandise: [[new Item("coins", false, false), 10], [new Item("mofuTribalWear", false, false), 3], [new Item("mofuRunnerOutfit", false, false), 2], [new Item("mofuFive", false, false), 4]]}));
                    }
                }

                if (uniqueChars.ritlaktlLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Feastmaker Ritlaktl")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(3373, -159891, "Person", false, "Feastmaker Ritlaktl", {race: "Kel", faction: "Kel", personality: "scared", outfit: ["mofuTribalWear", 0], weapon: ["none", [0.2, 0.2], 0, 0, 2], ranged: [false, "arrow", 8, 2000, 1, 6, 0, "none", 0.95], patrolStops: 1, patrolLoop: false, route:[[3333, -159916]], merchant: true, merchandise: [[new Item("coins", false, false), 2], [new Item("rawMofuFlesh", false, false), 6], [new Item("maizeHusk", false, false), 68], [new Item("roastedAktaltlRoot", false, false), 8]]}));
                    }
                }

                if (uniqueChars.ehelteppLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Eheltepp the Blacksmith")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(2707, -159729, "Person", false, "Eheltepp the Blacksmith", {race: "Kel", faction: "Kel", personality: "calculated", outfit: ["mofuTribalWear", 0], weapon: ["hammer", [2, 1], 0.5, 9, 1], ranged: [false, "arrow", 8, 2000, 1, 6, 0, "none", 0.95], patrolStops: 1, patrolLoop: false, route:[[2698, -159742]], merchant: true, merchandise: [[new Item("coins", false, false), 33], [new Item("kellishSpear", false, false), 6], [new Item("kellishSword", false, false), 3]]}));
                    }
                }

                if (uniqueChars.ximataLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Matriarch Ximata")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(3363, -160667, "Person", false, "Matriarch Ximata", {race: "Kel", faction: "Kel", personality: "violent", outfit: ["mofuMatriarchHeaddress", 0], weapon: ["kellishSpear", [5, 6], 5, 34, 1.35], ranged: [false, "arrow", 8, 2000, 1, 6, 0, "none", 0.95], patrolStops: 1, patrolLoop: false, route:[[3365, -160683]], merchant: true, merchandise: [[new Item("coins", false, false), 890], [new Item("mofuTamal", false, false), 12], [new Item("tamal", false, false), 9], [new Item("naapridDrinkinghorn", false, false), 3], [new Item("boiledFrijols", false, false), 2], [new Item("latuku", false, false), 5], [new Item("aktaltlSoup", false, false), 6], [new Item("boiledAktaltlFrond", false, false), 15], [new Item("mazorca", false, false), 30], [new Item("frijols", false, false), 28], [new Item("apotlPepper", false, false), 22], [new Item("aktaltlFrond", false, false), 18], [new Item("aktaltlRoot", false, false), 45], [new Item("lelBerries", false, false), 16], [new Item("pochalPods", false, false), 8], [new Item("yeolWood", false, false), 19]]}));
                    }

                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Matriarch Ximata")
                        {
                            ArtificialIntelligenceAccess[i].healthMAX = 25;
                            ArtificialIntelligenceAccess[i].health = 25;
                        }
                    }
                }

                //Scenery
                scenicList.push(new Scenery("yeolTree", 1805 , -157838, -Math.PI * 3, false));
                scenicList.push(new Scenery("yeolTree", -108 , -158970, -Math.PI * 25, false));
                scenicList.push(new Scenery("yeolTree", 6282 , -158637, -1, false));
                scenicList.push(new Scenery("yeolTree", 2440 , -157733, 2.6, false));
                scenicList.push(new Scenery("yeolTree", 1263 , -160197, 5.6, false));

                for (var l = 0; l < 14; l++)
                {
                    scenicList.push(new Scenery("yeolTree", 2370 + 2800 * seeder(l * (l + 5)) - 1400, -163832 + 2800 * seeder(l + (l + 6)) - 1400, Math.random() * (2* Math.PI), "Kel"));
                }
                ArtificialIntelligenceAccess.push(new Unit(2105, -163958, "Mugmul", false, "Patpatlak"));
                ArtificialIntelligenceAccess.push(new Unit(1676, -164759, "Taipan", true, "Sapatli"));

                ArtificialIntelligenceAccess.push(new Unit(-2420, -164339, "Taipan", false, "Sapatlin"));

                for (var l = 0; l < 30; l++)
                {
                    scenicList.push(new Scenery("maizePlant", 3677 , -158757 + -81 * l, Math.random() * (2* Math.PI), "Kel"));
                }
                for (var l = 0; l < 28; l++)
                {
                    scenicList.push(new Scenery("frijolPlant", 3677 - 81 , -158757 - 81 + -81 * l, Math.random() * (2* Math.PI), "Kel"));
                }
                for (var l = 0; l < 18; l++)
                {
                    scenicList.push(new Scenery("maizePlant", (3677 - 81) - 81 * l , -158757, Math.random() * (2* Math.PI), "Kel"));
                }
                for (var l = 0; l < 18; l++)
                {
                    scenicList.push(new Scenery("frijolPlant", (3677 - 81) - 81 * l , -158757 - 81, Math.random() * (2* Math.PI), "Kel"));
                }
                for (var l = 0; l < 18; l++)
                {
                    scenicList.push(new Scenery("frijolPlant", (3677 - 81) - 81 * l , -158757 - 81 * 28, Math.random() * (2* Math.PI), "Kel"));
                }
                for (var l = 0; l < 18; l++)
                {
                    scenicList.push(new Scenery("maizePlant", (3677 - 81) - 81 * l , -158757 - 81 * 29, Math.random() * (2* Math.PI), "Kel"));
                }

                //huts
                scenicList.push(new Scenery("alzkwayaBuilding5", 3365, -160795, 0, true));
                scenicList.push(new Scenery("alzkwayaBuilding1", 3401, -160371, 0, true));
                scenicList.push(new Scenery("alzkwayaBuilding4", 3435, -160186, 0, true));
                scenicList.push(new Scenery("alzkwayaBuilding1", 2939, -160807, 0, true));
                scenicList.push(new Scenery("well", 2939, -160807, 5.3, true));
                scenicList.push(new Scenery("alzkwayaBuilding3", 2659, -160920, 0, true));
                scenicList.push(new Scenery("alzkwayaBuilding2", 2474, -160919, 0, true));

                scenicList.push(new Scenery("alzkwayaBuilding2", 2372, -159496, 0, true));
                scenicList.push(new Scenery("alzkwayaBuilding4", 2360, -159698, 0, true));
                scenicList.push(new Scenery("alzkwayaBuilding3", 2653, -159637, 0, true));

                scenicList.push(new Scenery("alzkwayaBuilding1", 3471, -158954, 0, true));
                scenicList.push(new Scenery("alzkwayaBuilding1", 3193, -158926, 0, true));
                scenicList.push(new Scenery("alzkwayaBuilding4", 2923, -158957, 0, true));
                scenicList.push(new Scenery("alzkwayaBuilding3", 2299, -158943, 0, true));

                scenicList.push(new Scenery("alzkwayaBuilding4", 3261, -159287, 0, true));

                scenicList.push(new Scenery("alzkwayaBuilding2", 2505, -159372, 0, true));
                scenicList.push(new Scenery("alzkwayaBuilding4", 3167, -159640, 0, true));
                scenicList.push(new Scenery("alzkwayaBuilding1", 3429, -159790, 0, true));
                scenicList.push(new Scenery("alzkwayaBuilding3", 2592, -160242, 0, true));
                scenicList.push(new Scenery("alzkwayaBuilding3", 2381, -160522, 0, true));
                scenicList.push(new Scenery("alzkwayaBuilding2", 2903, -160324, 0, true));

                scenicList.push(new Scenery("propWagon", 2088, -159416, 0.5, true));
                scenicList.push(new Scenery("crate", 2092, -159416, 1, 1, [1.25]));
                scenicList.push(new Scenery("barrel", 2113, -159387, 0.5, 0));

                scenicList.push(new Scenery("dryMudSlab", 3005, -160237, 1.05 + 1/2 * Math.PI, 2, 1.5));
                scenicList.push(new Scenery("dryMudSlab", 2990, -160186, 1 + Math.PI, 2, 3));

                scenicList.push(new Scenery("dryMudSlab", 3293, -159933, 0.2, 4, 3));

                scenicList.push(new Scenery("propWagon", 2067, -158928, 1.4, true));
                scenicList.push(new Scenery("crate", 2067, -158928, 1.45, 1, [1.32]));
                scenicList.push(new Scenery("crate", 2067, -158892, 1.31, 2, [0.76]));
                scenicList.push(new Scenery("loom", 3264, -159244, 0.12, true));
                scenicList.push(new Scenery("dryMudSlab", 3311, -159284, 0, 1.5, 1.5));

                scenicList.push(new Scenery("dryMudSlab", 3361, -160799, 0, 2.5, 1.5));

                scenicList.push(new Scenery("yeolCampFire", 3361, -160840, 2*Math.PI * Math.random(), "permaLit"));
                scenicList.push(new Scenery("yeolCampFire", 3397, -160800, 2*Math.PI * Math.random(), "permaLit"));
                scenicList.push(new Scenery("yeolCampFire", 3326, -160799, 2*Math.PI * Math.random(), "permaLit"));

                scenicList.push(new Scenery("forge", 2634, -159730, 3 + Math.PI, true));
                scenicList.push(new Scenery("anvil", 2686, -159770, 2.6, true));
                scenicList.push(new Scenery("dryMudSlab", 2778, -159805, 1.25 + Math.PI, 1.5, 3.5));
                scenicList.push(new Scenery("dryMudSlab", 2849, -159750, 1.25 + Math.PI - 1/2 * Math.PI, 1.5, 3.5));

                scenicList.push(new Scenery("dryMudSlab", 3112, -159293, Math.PI, 2.25, 2.25));

                scenicList.push(new Scenery("mugmulMat", 2368, -159680, 4, 2));
                scenicList.push(new Scenery("mugmulMat", 2351, -159729, 6.1, 2.2));
                scenicList.push(new Scenery("mugmulMat", 3429, -159794, 1, 3));
                scenicList.push(new Scenery("mugmulMat", 2903, -160329, 2, 2.8));
                scenicList.push(new Scenery("mugmulMat", 2655, -159634, 3, 2.9));

                if (player.raceName != "Kel" || player.gender != "Female" || player.title != "Nobility")
                {
                    scenicList.push(new Scenery("item", 2963, -160169, 0, false, ["kellishClayPot", 1, -9, "Kel"]));
                    scenicList.push(new Scenery("item", 2976, -160180, 0, false, ["kellishClayPot", 1, -9, "Kel"]));
                    scenicList.push(new Scenery("item", 2994, -160188, 0, false, ["kellishClayPot", 1, -9, "Kel"]));
                    scenicList.push(new Scenery("item", 3009, -160197, 0, false, ["naapridDrinkinghorn", 1, -10, "Kel"]));
                    scenicList.push(new Scenery("item", 3024, -160205, 0, false, ["naapridDrinkinghorn", 1, -10, "Kel"]));

                    scenicList.push(new Scenery("item", 3293 + 7, -159933 - 2, 0, false, ["maizeFlour", 2, -5, "Kel"]));
                    scenicList.push(new Scenery("item", 3293 - 6, -159933 + 1, 0, false, ["maizeFlour", 2, -5, "Kel"]));
                    scenicList.push(new Scenery("item", 3293 + 2, -159933 + 5, 0, false, ["maizeFlour", 2, -5, "Kel"]));
                    scenicList.push(new Scenery("item", 3293 - 3, -159933 - 4, 0, false, ["maizeFlour", 2, -5, "Kel"]));

                    scenicList.push(new Scenery("item", 3278 - 3, -159902 - 6, 0, false, ["maize", 1, -3, "Kel"]));
                    scenicList.push(new Scenery("item", 3278 - 14, -159902 - 1, 0, false, ["maize", 1, -3, "Kel"]));
                    scenicList.push(new Scenery("item", 3278 + 12, -159902 + 2, 0, false, ["maize", 1, -3, "Kel"]));
                    scenicList.push(new Scenery("item", 3278 + 1, -159902 + 7, 0, false, ["maize", 1, -3, "Kel"]));

                    scenicList.push(new Scenery("item", 3283, -159974, 0, false, ["kellishClayPotOfWater", 1, -10, "Kel"]));
                    scenicList.push(new Scenery("item", 3316, -159954, 0, false, ["masa", 2, -12, "Kel"]));
                    scenicList.push(new Scenery("item", 3307, -159967, 0, false, ["masa", 2, -12, "Kel"]));

                    scenicList.push(new Scenery("item", 3014, -160221, 0, false, ["clayBowl", 4, -6, "Kel"]));
                    scenicList.push(new Scenery("item", 3009, -160234, 0, false, ["clayBowl", 4, -6, "Kel"]));
                    scenicList.push(new Scenery("item", 3002, -160253, 0, false, ["clayBowl", 4, -6, "Kel"]));

                    scenicList.push(new Scenery("item", 2995, -160873, 0, false, ["kellishClayPot", 1, -8, "Kel"]));
                    scenicList.push(new Scenery("item", 3020, -160850, 0, false, ["kellishClayPot", 1, -8, "Kel"]));
                    scenicList.push(new Scenery("item", 3305, -159277, 0, false, ["mofuFeather", 3, -9, "Kel"]));
                    scenicList.push(new Scenery("item", 3305, -159286, 0, false, ["mofuFeather", 3, -9, "Kel"]));

                    scenicList.push(new Scenery("item", 3361, -160799, 0, false, ["lelBerries", 8, -20, "Kel"]));
                    scenicList.push(new Scenery("item", 3367, -160798, 0, false, ["lelBerries", 8, -20, "Kel"]));
                    scenicList.push(new Scenery("item", 3366, -160803, 0, false, ["lelBerries", 8, -20, "Kel"]));
                    scenicList.push(new Scenery("item", 3355, -160804, 0, false, ["lelBerries", 8, -20, "Kel"]));
                    scenicList.push(new Scenery("item", 3355, -160797, 0, false, ["lelBerries", 8, -20, "Kel"]));

                    scenicList.push(new Scenery("item", 2977, -160793, 0, false, ["itlinBranch", 1, -20, "Kel"]));

                    scenicList.push(new Scenery("mugmulSleepingMat", 3188, -159604, 0, false));
                    scenicList.push(new Scenery("mugmulSleepingMat", 3467, -160159, 1/2 * Math.PI + 0.12, false));
                    scenicList.push(new Scenery("mugmulSleepingMat", 3348, -160364, 1/2 * Math.PI + 0.18, false));
                    scenicList.push(new Scenery("mugmulSleepingMat", 2637, -160921, Math.PI + 0.05, false));
                    scenicList.push(new Scenery("mugmulSleepingMat", 2509, -160918, 0 + 0.07, false));

                    scenicList.push(new Scenery("mugmulSleepingMat", 2400, -160489, 0 + 0.02, false));
                    scenicList.push(new Scenery("mugmulSleepingMat", 2558, -160228, 1/2 * Math.PI - 0.19, false));

                    scenicList.push(new Scenery("item", 2368, -159680, 0, false, ["mofuFeather", 3, -6, "Kel"]));
                    scenicList.push(new Scenery("item", 2368 + 7, -159680 + 9, 0, false, ["mofuFeather", 3, -6, "Kel"]));
                    scenicList.push(new Scenery("item", 2368 -7, -159680 + 6, 0, false, ["mofuFeather", 3, -6, "Kel"]));
                    scenicList.push(new Scenery("item", 2368 + 8, -159680 -5, 0, false, ["mofuFeather", 3, -6, "Kel"]));
                    scenicList.push(new Scenery("item", 2368 -10, -159680 -8, 0, false, ["mofuFeather", 3, -6, "Kel"]));
                    scenicList.push(new Scenery("item", 2368 -3, -159680 + 3, 0, false, ["mofuFeather", 3, -6, "Kel"]));
                    scenicList.push(new Scenery("item", 2368 -6, -159680 - 6, 0, false, ["mofuFoot", 6, -6, "Kel"]));

                    scenicList.push(new Scenery("item", 2351, -159729 - 9, 0, false, ["rawSaskriit", 1, -9, "Kel"]));
                    scenicList.push(new Scenery("item", 2351 + 6, -159729, 0, false, ["rawRiulpo", 2, -14, "Kel"]));
                    scenicList.push(new Scenery("item", 2351 - 10, -159729 + 8, 0, false, ["rawRiulpo", 1, -7, "Kel"]));

                    scenicList.push(new Scenery("mugmulSleepingMat", 2372, -159510, Math.PI - 0.26, false));
                    scenicList.push(new Scenery("mugmulSleepingMat", 2539, -159371, -1/2 * Math.PI - 0.14, false));
                    scenicList.push(new Scenery("crate", 2291, -158924, 3.25/4 * Math.PI, 1, [1.25]));

                    scenicList.push(new Scenery("mugmulSleepingMat", 2951, -158970, -1/2 * Math.PI - 0.2, false));
                    scenicList.push(new Scenery("mugmulSleepingMat", 3174, -158905, Math.PI + 0.3, false));
                    scenicList.push(new Scenery("mugmulSleepingMat", 3507, -158944, 1/2 * Math.PI, false));
                }
                else
                {
                    scenicList.push(new Scenery("item", 2963, -160169, 0, false, ["kellishClayPot", 1, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 2976, -160180, 0, false, ["kellishClayPot", 1, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 2994, -160188, 0, false, ["kellishClayPot", 1, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 3009, -160197, 0, false, ["naapridDrinkinghorn", 1, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 3024, -160205, 0, false, ["naapridDrinkinghorn", 1, 0, "Kel"]));

                    scenicList.push(new Scenery("item", 3293 + 7, -159933 - 2, 0, false, ["maizeFlour", 2, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 3293 - 6, -159933 + 1, 0, false, ["maizeFlour", 2, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 3293 + 2, -159933 + 5, 0, false, ["maizeFlour", 2, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 3293 - 3, -159933 - 4, 0, false, ["maizeFlour", 2, 0, "Kel"]));

                    scenicList.push(new Scenery("item", 3278 - 3, -159902 - 6, 0, false, ["maize", 1, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 3278 - 14, -159902 - 1, 0, false, ["maize", 1, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 3278 + 12, -159902 + 2, 0, false, ["maize", 1, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 3278 + 1, -159902 + 7, 0, false, ["maize", 1, 0, "Kel"]));

                    scenicList.push(new Scenery("item", 3283, -159974, 0, false, ["kellishClayPotOfWater", 1, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 3316, -159954, 0, false, ["masa", 2, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 3307, -159967, 0, false, ["masa", 2, 0, "Kel"]));

                    scenicList.push(new Scenery("item", 3014, -160221, 0, false, ["clayBowl", 4, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 3009, -160234, 0, false, ["clayBowl", 4, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 3002, -160253, 0, false, ["clayBowl", 4, 0, "Kel"]));

                    scenicList.push(new Scenery("item", 2995, -160873, 0, false, ["kellishClayPot", 1, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 3020, -160850, 0, false, ["kellishClayPot", 1, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 3305, -159277, 0, false, ["mofuFeather", 3, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 3305, -159286, 0, false, ["mofuFeather", 3, 0, "Kel"]));

                    scenicList.push(new Scenery("item", 3361, -160799, 0, false, ["lelBerries", 8, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 3367, -160798, 0, false, ["lelBerries", 8, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 3366, -160803, 0, false, ["lelBerries", 8, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 3355, -160804, 0, false, ["lelBerries", 8, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 3355, -160797, 0, false, ["lelBerries", 8, 0, "Kel"]));

                    scenicList.push(new Scenery("item", 2977, -160793, 0, false, ["itlinBranch", 1, -10, "Kel"]));

                    scenicList.push(new Scenery("mugmulSleepingMat", 3188, -159604, 0, true));
                    scenicList.push(new Scenery("mugmulSleepingMat", 3467, -160159, 1/2 * Math.PI + 0.12, true));
                    scenicList.push(new Scenery("mugmulSleepingMat", 3348, -160364, 1/2 * Math.PI + 0.18, true));
                    scenicList.push(new Scenery("mugmulSleepingMat", 2637, -160921, Math.PI + 0.05, true));
                    scenicList.push(new Scenery("mugmulSleepingMat", 2509, -160918, 0 + 0.07, true));

                    scenicList.push(new Scenery("mugmulSleepingMat", 2400, -160489, 0 + 0.02, true));
                    scenicList.push(new Scenery("mugmulSleepingMat", 2558, -160228, 1/2 * Math.PI - 0.19, true));

                    scenicList.push(new Scenery("item", 2368, -159680, 0, false, ["mofuFeather", 3, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 2368 + 7, -159680 + 9, 0, false, ["mofuFeather", 3, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 2368 -7, -159680 + 6, 0, false, ["mofuFeather", 3, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 2368 + 8, -159680 -5, 0, false, ["mofuFeather", 3, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 2368 -10, -159680 -8, 0, false, ["mofuFeather", 3, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 2368 -3, -159680 + 3, 0, false, ["mofuFeather", 3, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 2368 -6, -159680 - 6, 0, false, ["mofuFoot", 6, 0, "Kel"]));

                    scenicList.push(new Scenery("item", 2351, -159729 - 9, 0, false, ["rawSaskriit", 1, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 2351 + 6, -159729, 0, false, ["rawRiulpo", 2, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 2351 - 10, -159729 + 8, 0, false, ["rawRiulpo", 1, 0, "Kel"]));

                    scenicList.push(new Scenery("mugmulSleepingMat", 2372, -159510, Math.PI - 0.26, true));
                    scenicList.push(new Scenery("mugmulSleepingMat", 2539, -159371, -1/2 * Math.PI - 0.14, true));

                    scenicList.push(new Scenery("crate", 2291, -158924, 3.25/4 * Math.PI, 3, [1.25, "inochtihikliCrate1", 7, [], false, 0]));

                    scenicList.push(new Scenery("mugmulSleepingMat", 2951, -158970, -1/2 * Math.PI - 0.2, true));
                    scenicList.push(new Scenery("mugmulSleepingMat", 3174, -158905, Math.PI + 0.3, true));
                    scenicList.push(new Scenery("mugmulSleepingMat", 3507, -158944, 1/2 * Math.PI, true));
                }

                if (player.raceName != "Kel" || player.gender != "Female" || player.title != "Nobility")
                {
                    scenicList.push(new Scenery("item", 2778, -159805, 0, false, ["kellishSpear", 1, -24, "Kel"]));
                    scenicList.push(new Scenery("item", 2850, -159753, 0, false, ["kellishSword", 1, -26, "Kel"]));
                    scenicList.push(new Scenery("item", 2740, -159791, 0, false, ["hammer", 1, -13, "Kel"]));
                    scenicList.push(new Scenery("item", 3112, -159293, 0, false, ["mofuTribalWear", 1, -30, "Kel"]));
                }
                else
                {
                    scenicList.push(new Scenery("item", 2778, -159805, 0, false, ["kellishSpear", 1, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 2850, -159753, 0, false, ["kellishSword", 1, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 2740, -159791, 0, false, ["hammer", 1, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 3112, -159293, 0, false, ["mofuTribalWear", 1, 0, "Kel"]));
                }

                scenicList.push(new Scenery("darkStone", 462 , -164353, 2, 1, 3));
                scenicList.push(new Scenery("darkStone", 1210 , -165349, 7, 1.5, 3));

                ArtificialIntelligenceAccess.push(new Unit(6107, -157621, "Mofu", Math.round(Math.random()), "Fletho"));
                ArtificialIntelligenceAccess.push(new Unit(-1981, -161913, "Mofu", Math.round(Math.random()), "Fletho"));
                ArtificialIntelligenceAccess.push(new Unit(-1523, -161219, "Mofu", Math.round(Math.random()), "Fletho"));
                ArtificialIntelligenceAccess.push(new Unit(-2238, -166431, "Mofu", Math.round(Math.random()), "Fletho"));
                for (var l = 0; l < 9; l++)
                {
                    var sdedX = 3645 + (1400 * seeder(l * 9) - 700);
                    var sdedY = -158099 + (800 * seeder(l * 17) - 400);
                    if (Math.random() > 0.56)
                    {
                        scenicList.push(new Scenery("mofuNest", sdedX, sdedY, Math.random() * (2* Math.PI), Math.random() + 0.6));
                        ArtificialIntelligenceAccess.push(new Unit(sdedX, sdedY, "Mofu", Math.round(Math.random()), "Flethy"));
                    }
                    else
                    {
                        if (Math.random() > 0.6)
                        {
                            scenicList.push(new Scenery("mofuNest", sdedX, sdedY, Math.random() * (2* Math.PI), Math.random() + 0.6));
                            ArtificialIntelligenceAccess.push(new Unit(sdedX + 350 * Math.random() - 175, sdedY + 350 * Math.random() - 175, "Mofu", Math.round(Math.random()), "Flethy"));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(sdedX + 500 * Math.random() - 250, sdedY + 400 * Math.random() - 200, "Mofu", "baby", "Flethu"));
                        }
                    }
                }

                //mofu nest area
                for (var l = 0; l < 14; l++)
                {
                    var sdedX = -223 + (1600 * seeder((l + 1) * 23) - 800);
                    var sdedY = -165430 + (1000 * seeder((l * 3) + 17) - 500);
                    if (Math.random() > 0.56)
                    {
                        scenicList.push(new Scenery("mofuNest", sdedX, sdedY, Math.random() * (2* Math.PI), Math.random() + 0.6));
                        ArtificialIntelligenceAccess.push(new Unit(sdedX, sdedY, "Mofu", Math.round(Math.random()), "Flethy"));
                    }
                    else
                    {
                        if (Math.random() > 0.6)
                        {
                            scenicList.push(new Scenery("mofuNest", sdedX, sdedY, Math.random() * (2* Math.PI), Math.random() + 0.6));
                            ArtificialIntelligenceAccess.push(new Unit(sdedX + 350 * Math.random() - 175, sdedY + 350 * Math.random() - 175, "Mofu", Math.round(Math.random()), "Flethy"));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(sdedX + 500 * Math.random() - 250, sdedY + 400 * Math.random() - 200, "Mofu", "baby", "Flethu"));
                        }
                    }
                }

                //Plants
                scenicList.push(new Scenery("aktaltlPlant", 2180 , -158186, 7, true));
                scenicList.push(new Scenery("aktaltlPlant", -101 , -159578, 5, true));

                scenicList.push(new Scenery("hracklePlant", -990 , -157472, 6, true));
                scenicList.push(new Scenery("hracklePlant", -1574 , -164956, 0.5, true));

                scenicList.push(new Scenery("lelPlant", -2253 , -157661, 0, true));

                scenicList.push(new Scenery("apotlPlant", -299 , -158322, 11, true));
                scenicList.push(new Scenery("apotlPlant", -98 , -160562, 1.5, true));

                scenicList.push(new Scenery("pochalPlant", -1658 , -161677, 5.53, true));
                scenicList.push(new Scenery("pochalPlant", 4819 , -164680, 6.35, true));

                scenicList.push(new Scenery("kwomPlant", 855 , -165126, 5.5, true));

                change = "s16";
            }
        }
        else if (region == "s18")
        {
            if (change != "s18")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                //fishing
                scenicList.push(new Scenery("southFishingSpot", 4100, -180775, 0, true));

                scenicList.push(new Scenery("southFishingSpot", 3545, -179861, 8, true));

                scenicList.push(new Scenery("southFishingSpot", 1636, -179556, 10, true));

                scenicList.push(new Scenery("southFishingSpot", 5851, -182586, 6, true));

                scenicList.push(new Scenery("southFishingSpot", 4845, -180477, 2, true));

                if (quests.lostHuntressQuest == true)
                {
                    scenicList.push(new Scenery("deadDrileQST", 4995, -179625, 2, 1.1));
                    scenicList.push(new Scenery("deadBody", 5020, -179715, 2, 2, 1));
                }

                //Animals
                ArtificialIntelligenceAccess.push(new Unit(6266, -182359, "Drile", true, "Applejack"));
                ArtificialIntelligenceAccess.push(new Unit(6439, -182933, "Drile", false, "AppleBiter"));
                ArtificialIntelligenceAccess.push(new Unit(6040, -183168, "Drile", false, "Applebee"));
                ArtificialIntelligenceAccess.push(new Unit(5335, -181345, "Drile", false, "Applebritz"));
                ArtificialIntelligenceAccess.push(new Unit(6151, -179837, "Drile", true, "Apparee"));
                ArtificialIntelligenceAccess.push(new Unit(4690, -180665, "Drile", false, "Apperbritz"));
                ArtificialIntelligenceAccess.push(new Unit(5155, -180070, "Drile", false, "Alper"));
                ArtificialIntelligenceAccess.push(new Unit(4449, -179738, "Drile", false, "Alparz"));
                ArtificialIntelligenceAccess.push(new Unit(3743, -181656, "Drile", false, "Alparitz"));
                ArtificialIntelligenceAccess.push(new Unit(3286, -180572, "Drile", true, "Alpa"));
                ArtificialIntelligenceAccess.push(new Unit(4014, -180560, "Drile", false, "Alitz"));
                ArtificialIntelligenceAccess.push(new Unit(2881, -179958, "Drile", false, "Alitzer"));
                ArtificialIntelligenceAccess.push(new Unit(2545, -182017, "Drile", false, "Altzer"));
                ArtificialIntelligenceAccess.push(new Unit(2058, -181783, "Drile", false, "Altzir"));
                ArtificialIntelligenceAccess.push(new Unit(1782, -180781, "Drile", false, "Altzor"));
                ArtificialIntelligenceAccess.push(new Unit(2417, -178862, "Drile", false, "Altzar"));
                ArtificialIntelligenceAccess.push(new Unit(1554, -178866, "Drile", true, "Altzarar"));
                ArtificialIntelligenceAccess.push(new Unit(396, -179761, "Drile", true, "Altzirar"));
                ArtificialIntelligenceAccess.push(new Unit(-817, -180135, "Drile", false, "Altzara"));
                ArtificialIntelligenceAccess.push(new Unit(-655, -178249, "Drile", false, "Altzari"));
                ArtificialIntelligenceAccess.push(new Unit(-1804, -179253, "Drile", true, "Altziri"));
                ArtificialIntelligenceAccess.push(new Unit(-1583, -181208, "Drile", true, "Altiriz"));
                ArtificialIntelligenceAccess.push(new Unit(-2472, -180849, "Drile", false, "Alikir"));
                ArtificialIntelligenceAccess.push(new Unit(-2364, -179989, "Drile", false, "Alira"));

                ArtificialIntelligenceAccess.push(new Unit(5505, -177772, "Yioshk", false, "Balsh"));
                ArtificialIntelligenceAccess.push(new Unit(-2008, -178288, "Yioshk", false, "Balish"));
                ArtificialIntelligenceAccess.push(new Unit(-2414, -177863, "Yioshk", true, "Balchis"));
                ArtificialIntelligenceAccess.push(new Unit(-1937, -182918, "Yioshk", true, "Balcho"));
                ArtificialIntelligenceAccess.push(new Unit(677, -183163, "Yioshk", false, "Balich"));
                ArtificialIntelligenceAccess.push(new Unit(1583, -186318, "Yioshk", false, "Balishk"));

                if (Math.round(Math.random()))
                {
                    ArtificialIntelligenceAccess.push(new Unit(3536, -179225, "Zarbu", true, "Seper"));
                    ArtificialIntelligenceAccess.push(new Unit(3487, -178520, "Zarbu", false, "Sepol"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(1817, -177871, "Zarbu", true, "Seper"));
                    ArtificialIntelligenceAccess.push(new Unit(2342, -177751, "Zarbu", false, "Sepol"));
                }

                ArtificialIntelligenceAccess.push(new Unit(-835, -185870, "Zarbu", true, "Sepera"));
                ArtificialIntelligenceAccess.push(new Unit(-494, -186085, "Zarbu", false, "Sepola"));
                ArtificialIntelligenceAccess.push(new Unit(-1138, -186253, "Zarbu", false, "Sepoal"));
                ArtificialIntelligenceAccess.push(new Unit(-1413, -186505, "Zarbu", "baby", "Sepa"));
                ArtificialIntelligenceAccess.push(new Unit(-739, -186444, "Zarbu", false, "Sepalo"));
                ArtificialIntelligenceAccess.push(new Unit(-2058, -185035, "Zarbu", true, "Sepalero"));

                ArtificialIntelligenceAccess.push(new Unit(3764, -183526, "Rhinoceros", true, "Kagher"));
                ArtificialIntelligenceAccess.push(new Unit(3370, -182583, "Rhinoceros", false, "Cagar"));
                ArtificialIntelligenceAccess.push(new Unit(5217, -184077, "Rhinoceros", false, "Cagath"));

                ArtificialIntelligenceAccess.push(new Unit(5598, -186753, "Mugmul", false, "Pikk"));
                ArtificialIntelligenceAccess.push(new Unit(6144, -186277, "Mugmul", false, "Pokk"));
                ArtificialIntelligenceAccess.push(new Unit(4067, -184050, "Mugmul", false, "Pelkk"));

                ArtificialIntelligenceAccess.push(new Unit(1261, -184745, "Taipan", true, "Tatl"));
                ArtificialIntelligenceAccess.push(new Unit(-2044, -182211, "Taipan", false, "Tletl"));

                ArtificialIntelligenceAccess.push(new Unit(2735, -179265, "Mofu", false, "Tabbo"));
                ArtificialIntelligenceAccess.push(new Unit(2562, -179180, "Mofu", false, "Taib"));
                ArtificialIntelligenceAccess.push(new Unit(801, -178707, "Mofu", false, "Talbo"));

                ArtificialIntelligenceAccess.push(new Unit(1234, -177869, "Mofu", true, "Tabbo"));
                scenicList.push(new Scenery("mofuNest", 1234, -177869, -2.1, 1.315));
                ArtificialIntelligenceAccess.push(new Unit(1056, -177963, "Mofu", false, "Taib"));
                scenicList.push(new Scenery("mofuNest", 1056, -177963, -2.1, 1.066));
                ArtificialIntelligenceAccess.push(new Unit(1160, -178188, "Mofu", true, "Talbo"));
                scenicList.push(new Scenery("mofuNest", 1160, -178188, -2.1, 1.291));
                ArtificialIntelligenceAccess.push(new Unit(1397, -178118, "Mofu", "baby", "Tabbo"));
                ArtificialIntelligenceAccess.push(new Unit(1624, -178071, "Mofu", "baby", "Talbo"));

                ArtificialIntelligenceAccess.push(new Unit(3923, -184757, "Mofu", false, "Taibi"));
                scenicList.push(new Scenery("mofuNest", 3923, -184757, -2.1, 1.175));
                ArtificialIntelligenceAccess.push(new Unit(3694, -184887, "Mofu", true, "Talba"));
                scenicList.push(new Scenery("mofuNest", 3694, -184887, -2.1, 1.325));
                ArtificialIntelligenceAccess.push(new Unit(4128, -185222, "Mofu", false, "Taibi"));
                ArtificialIntelligenceAccess.push(new Unit(3785, -185011, "Mofu", "baby", "Talbo"));

                if (Math.round(Math.random()))
                {
                    ArtificialIntelligenceAccess.push(new Unit(659, -181621, "Mofu", true, "Talbo"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(659, -181621, "Mofu", false, "Talbo"));
                }

                //Scenery
                scenicList.push(new Scenery("yeolTree", 6188 , -186461, -Math.PI * 1.5, false));
                scenicList.push(new Scenery("yeolTree", 5996 , -185962, 0, false));
                scenicList.push(new Scenery("yeolTree", 5807 , -186332, -3.65, false));
                scenicList.push(new Scenery("yeolTree", 5886 , -185774, 5.8, false));
                scenicList.push(new Scenery("yeolTree", 5164 , -186885, -7.14, false));
                scenicList.push(new Scenery("yeolTree", 4809 , -186340, 6, false));
                scenicList.push(new Scenery("yeolTree", 4506 , -183947, 9, false));
                scenicList.push(new Scenery("yeolTree", 4024 , -184303, -7.14, false));
                scenicList.push(new Scenery("yeolTree", 3365 , -184004, 1, false));
                scenicList.push(new Scenery("yeolTree", 1042 , -184619, 15, false));
                scenicList.push(new Scenery("yeolTree", -1078 , -184161, -8.2, false));
                scenicList.push(new Scenery("yeolTree", -2036 , -185952, 2.7, false));
                scenicList.push(new Scenery("yeolTree", 4003 , -178178, -3, false));

                //Plants
                scenicList.push(new Scenery("aktaltlPlant", 6114 , -178816, 4.5, true));
                scenicList.push(new Scenery("aktaltlPlant", 3910 , -177484, 7, true));
                scenicList.push(new Scenery("aktaltlPlant", 1936 , -177426, -1.1, true));
                scenicList.push(new Scenery("aktaltlPlant", -1309 , -183269, 6, true));
                scenicList.push(new Scenery("aktaltlPlant", 2378 , -183006, 9.8, true));

                scenicList.push(new Scenery("hracklePlant", 4945 , -179214, -5.5, true));
                scenicList.push(new Scenery("hracklePlant", 3026 , -183633, -1.5, true));
                scenicList.push(new Scenery("hracklePlant", 5629 , -183791, 2.55, true));

                scenicList.push(new Scenery("lelPlant", 411 , -178046, 3, true));
                scenicList.push(new Scenery("lelPlant", -321 , -182515, 1.75, true));
                scenicList.push(new Scenery("lelPlant", 1967 , -186193, 45, true));

                scenicList.push(new Scenery("pochalPlant", -2022 , -177636, 0, true));
                scenicList.push(new Scenery("pochalPlant", -2070 , -184268, 0, true));
                scenicList.push(new Scenery("pochalPlant", 2712 , -185440, 0, true));

                scenicList.push(new Scenery("volaPlant", -73 , -185409, -4, true));
                scenicList.push(new Scenery("volaPlant", 99 , -186460, 0, true));
                scenicList.push(new Scenery("volaPlant", -1812 , -186742, 1, true));
                scenicList.push(new Scenery("volaPlant", 4570 , -183369, 0.6, true));
                scenicList.push(new Scenery("volaPlant", 6149 , -184901, 32, true));

                scenicList.push(new Scenery("apotlPlant", 659 , -185334, 4, true));
                scenicList.push(new Scenery("apotlPlant", 5322 , -186129, 5, true));

                scenicList.push(new Scenery("kwomPlant", 123 , -186606, 0, true));
                scenicList.push(new Scenery("kwomPlant", -2045 , -182210, -3.3, true));

                change = "s18";
            }
        }
        else if (region == "s24") //Jungla first of the jungle
        {
            if (change != "s24")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units
                //ArtificialIntelligenceAccess.push(new Unit(3000, 2500, "ZafBeetle", true, "Tzalit"));
                //scenicList.push(new Scenery("vinePatch", 3500, 2500, 0, 1));
                //scenicList.push(new Scenery("cerebrisPlant", 3500, 2500, 0, 1));
                //scenicList.push(new Scenery("gojiiPlant", 3500, 2500, 0, true));
                //scenicList.push(new Scenery("bahabPlant", 3500, 2500, 0, true));
                //scenicList.push(new Scenery("araneaDen", 3500, 2500, 0, false, true));
                //ArtificialIntelligenceAccess.push(new Unit(3000, 2500, "Gorgon", false, "Gra"));
                //ArtificialIntelligenceAccess.push(new Unit(3000, 2500, "Cruorcca", "massive", "Cruor"));
                //scenicList.push(new Scenery("athergmPlant", 3990, 2500, 0, 1));
                //scenicList.push(new Scenery("decipulaBasePlant", 3670, 2500, 0, "massive"));
                //ArtificialIntelligenceAccess.push(new Unit(3500, 2500, "Zancudo", false, "proboscis"));
                //ArtificialIntelligenceAccess.push(new Unit(3550, 2500, "Venandi", true, "hunter"));
                //ArtificialIntelligenceAccess.push(new Unit(3570, 2500, "EtyrVenandi", true, "scout"));
                //ArtificialIntelligenceAccess.push(new Unit(3570, 2500, "AraneaVenandi", true, "tank"));
                //scenicList.push(new Scenery("valumPlant", 3990, 2500, 0, 1));
                //scenicList.push(new Scenery("decipulaPlant", 3670, 2500, 0, true));
                //ArtificialIntelligenceAccess.push(new Unit(3613, -240174, "Gorgon", false, "Gra"));
                //ArtificialIntelligenceAccess.push(new Unit(3700, 2500, "Boa", false, "constricto"));
                //ArtificialIntelligenceAccess.push(new Unit(3600, 2500, "PoisonDartFrog", true, "coqui"));
                //scenicList.push(new Scenery("sonjaTree", 3600, 2500, 0, true));
                //scenicList.push(new Scenery("crilkPlant", 3600, 2500, 3.2, true));
                //ArtificialIntelligenceAccess.push(new Unit(3500, 2500, "BlackTroll", false, "Brufga"));
                //scenicList.push(new Scenery("overVines", 3600, 2500, 0, 4, 1));
                //scenicList.push(new Scenery("webVictim", 3600, 2500, 0, 3, 1));
                //scenicList.push(new Scenery("jungleStuff", 3600, 2500, 0.23, 2, 1));
                //scenicList.push(new Scenery("selvaTree", 3600, 2500, 0, 0));
                //ArtificialIntelligenceAccess.push(new Unit(2000, -240000, "Gulfrey", true, "Guld"));
                //ArtificialIntelligenceAccess.push(new Unit(5012, -240944, "Torper", true, "Shankstripes"));
                //ArtificialIntelligenceAccess.push(new Unit(1194, -240231, "Etyr", true, "Blackeye"));
                //scenicList.push(new Scenery("blilPlant", 2389 , -239760, 6.78, true));
                //scenicList.push(new Scenery("vinePatch", 3500, 2500, 0, 1));
                //ArtificialIntelligenceAccess.push(new Unit(3550, 2500, "Venandi", true, "hunter"));
                //ArtificialIntelligenceAccess.push(new Unit(3570, 2500, "EtyrVenandi", true, "scout"));
                //ArtificialIntelligenceAccess.push(new Unit(3570, 2500, "AraneaVenandi", true, "tank"));
                //ArtificialIntelligenceAccess.push(new Unit(3500, 2500, "Borea", true, "Ipskwich"));
                //ArtificialIntelligenceAccess.push(new Unit(3500, 2500, "Salisea", false, "Digit"));
                //ArtificialIntelligenceAccess.push(new Unit(3600, 2500, "Crenid", "massive", "Bulgg"));
                //ArtificialIntelligenceAccess.push(new Unit(3908, 2500, "Kigarii", true, "Apex"));
                //scenicList.push(new Scenery("matnaWeb", 3600, 2500, 0, 2.1));
                //ArtificialIntelligenceAccess.push(new Unit(3600, 2500, "Matna", false, "deathByter"));
                //ArtificialIntelligenceAccess.push(new Unit(3600, 2500, "Babosa", true, "Glubber", {patrolStops: 3, patrolLoop: true, route:[[3600, 2500], [3500, 2550], [3650, 2600]]}));
                //scenicList.push(new Scenery("pyromothWeb", 3700, 2500, 0, 1, true));
                //ArtificialIntelligenceAccess.push(new Unit(3700, 2500, "Pyromoth", true, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[3600, 2500], [3500, 2550], [3650, 2600]]}));

                scenicList.push(new Scenery("sonjaTree", -2456.78593620105, -248801.27862364124, 2.574108183118155, 0));

                //Animals
                ArtificialIntelligenceAccess.push(new Unit(-2701.542966220163, -245858.1033030152, "Torper", true, "Shankstripes"));

                ArtificialIntelligenceAccess.push(new Unit(1888.6496216028988, -242342.6411600595, "Kigarii", true, "Apex"));

                ArtificialIntelligenceAccess.push(new Unit(-1986.3322101698857, -239048.15965944892, "ZafBeetle", true, "Tzalit"));
                ArtificialIntelligenceAccess.push(new Unit(-2306.0071735889064, -238785.56241521638, "ZafBeetle", false, "Tzalit"));

                ArtificialIntelligenceAccess.push(new Unit(224.229675788752, -244603.08694509583, "ZafBeetle", false, "Tzalit"));

                ArtificialIntelligenceAccess.push(new Unit(4837.174124647745, -244294.43742840842, "ZafBeetle", false, "Tzalit"));

                ArtificialIntelligenceAccess.push(new Unit(361.8898504429123, -243717.50370834634, "Babosa", true, "Glubber", {patrolStops: 4, patrolLoop: true, route:[[493.3310901368377, -244084.52938908868], [974.6238089242177, -243990.00852774867], [866.1740983040546, -243624.65612768027], [361.8898504429123, -243717.50370834634]]}));

                scenicList.push(new Scenery("valumPlant", 971.4284363969192, -244098.48029564953, 9, 1));

                scenicList.push(new Scenery("valumPlant", -2025.496136794272, -246183.12328148994, 8, 1));

                scenicList.push(new Scenery("valumPlant", 3390.628544267893, -242964.31933951873, 3.1145, 1));

                scenicList.push(new Scenery("valumPlant", 5259.983763674923, -244403.4049940566, 4.1145, 1));

                scenicList.push(new Scenery("vinePatch", 4118.912740983204, -241740.55246108412, 1.2, 3.2));
                scenicList.push(new Scenery("vinePatch", 4369.528703000384, -241729.2183489983, 6.9, 2.4));

                scenicList.push(new Scenery("vinePatch", 4258.947670416234, -241757.3109800963, 0, 3.3));
                scenicList.push(new Scenery("vinePatch", 4374.930834056472, -241631.40937086873, 11, 3.1));
                scenicList.push(new Scenery("vinePatch", 4408.50341447103, -241813.3549501695, 1, 3.15));
                scenicList.push(new Scenery("vinePatch", 4015.5842028955703, -241755.71342704885, 4.5, 3.2));
                scenicList.push(new Scenery("vinePatch", 3955.148741529449, -241646.73379721347, 7, 3.4));
                scenicList.push(new Scenery("vinePatch", 3840.93940831602, -241747.6408760964, 8.1, 3.25));
                scenicList.push(new Scenery("vinePatch", 3710.7740142107086, -241747.35077592882, 9.6, 3.2));
                scenicList.push(new Scenery("vinePatch", 3789.5746949322042, -241599.208859603, 1.1, 3.5));
                scenicList.push(new Scenery("vinePatch", 4069.90019231637, -241616.65687350018, 5.5555, 3.37));

                ArtificialIntelligenceAccess.push(new Unit(723, -238917, "Gulfrey", true, "Guld"));

                ArtificialIntelligenceAccess.push(new Unit(5120.401016896999, -243629.25564790957, "ZafBeetle", false, "Tzalit"));

                ArtificialIntelligenceAccess.push(new Unit(-2224.5275917414156, -240563.0799279693, "Gulfrey", false, "Guld"));
                ArtificialIntelligenceAccess.push(new Unit(-2230.0395542507013, -240850.89572205293, "Gulfrey", false, "Guld"));
                ArtificialIntelligenceAccess.push(new Unit(-2704.5583475165017, -240422.87691745395, "Gulfrey", true, "Guld"));
                ArtificialIntelligenceAccess.push(new Unit(-2374.215591599104, -240218.94532102827, "Gulfrey", false, "Guld"));

                ArtificialIntelligenceAccess.push(new Unit(6122.265832915254, -244157.07240777736, "Gulfrey", true, "Guld"));
                ArtificialIntelligenceAccess.push(new Unit(6171.241639138863, -243954.63809955204, "Gulfrey", false, "Guld"));

                scenicList.push(new Scenery("decipulaBasePlant", 485.64321995948876, -240452.5744509864, 1.2, "massive"));
                ArtificialIntelligenceAccess.push(new Unit(3613, -240174, "Gorgon", false, "Gra"));
                scenicList.push(new Scenery("matnaWeb", 2428.8820710318187, -239195.96170697408, 0.16, 2.4));
                scenicList.push(new Scenery("matnaWeb", 2641, -239213, 0, 2.1));
                scenicList.push(new Scenery("matnaWeb", 2596.485296878123, -239321.8511173763, 2, 2));
                scenicList.push(new Scenery("matnaWeb", 2512.4565346955665, -239252.2712367844, 25, 1.8));
                scenicList.push(new Scenery("matnaWeb", 2468, -239323, 1, 1.9));
                scenicList.push(new Scenery("matnaWeb", 2533.715428174531, -239308.84623092462, 2, 2));
                scenicList.push(new Scenery("matnaWeb", 2516.5131000689303, -239104.6219665395, 1.4, 3));
                scenicList.push(new Scenery("matnaWeb", 2552.4885169199424, -239188.5678700674, 6.8, 1.5));
                scenicList.push(new Scenery("matnaWeb", 2438.7424398070857, -239282.82710745448, 5, 1.5));
                scenicList.push(new Scenery("matnaWeb", 2743.882997029583, -239326.8355721349, 4.2, 3.2));
                scenicList.push(new Scenery("matnaWeb", 2648.833704799415, -239390.36244164268, 3, 1.7));
                scenicList.push(new Scenery("matnaWeb", 2761.8485040445357, -239454.29495895532, 5.5, 2.3));
                scenicList.push(new Scenery("matnaWeb", 2757.47689604678, -239558.80489901893, 0, 1.6));
                scenicList.push(new Scenery("matnaWeb", 2557.9306910888286, -239004.45977414536, 2.57, 2.2));
                ArtificialIntelligenceAccess.push(new Unit(2641, -239213, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(2500, -239248, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(2538, -239273, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(2457, -239322, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(2534, -239312, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(2425, -239202, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(2643, -239386, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(2491, -239045, "Matna", true, "deathByter"));

                scenicList.push(new Scenery("matnaWeb", 1733.139970267189, -243701.86731566204, 2, 2.05));
                scenicList.push(new Scenery("matnaWeb", 1779.7196267953334, -243812.11840635465, 3, 1.75));
                scenicList.push(new Scenery("matnaWeb", 1676.3182323429482, -243841.03246523344, 4, 1.9));
                scenicList.push(new Scenery("matnaWeb", 1711.0245236719834, -243777.80949413104, 8, 2.4));
                scenicList.push(new Scenery("matnaWeb", 1754.944476076132, -243866.0054734262, 1, 1.8));
                scenicList.push(new Scenery("matnaWeb", 1642.0856267908248, -243659.68631489633, 0.1, 2));
                ArtificialIntelligenceAccess.push(new Unit(1764.510897838429, -243814.81194049114, "Matna", true, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(1744.1268700722678, -243746.359146024, "Matna", true, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(1704.7683599171646, -243789.50241960527, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(1734.1076090271786, -243873.97932920814, "Matna", false, "deathByter"));

                scenicList.push(new Scenery("matnaWeb", 5265.153514763114, -242834.64549078967, 14, 2.2));
                scenicList.push(new Scenery("matnaWeb", 5437.887594299024, -242851.85670377366, 10, 2));
                scenicList.push(new Scenery("matnaWeb", 15467.871736774355, -242992.5855018553, 1, 1.95));
                scenicList.push(new Scenery("matnaWeb", 5294.151710244983, -243114.38619152355, 0.5, 2.3));
                scenicList.push(new Scenery("matnaWeb", 5157.572293766633, -243012.89992280834, 9.7, 2.25));
                scenicList.push(new Scenery("matnaWeb", 5160.16487122213, -242880.83501056608, 2.75, 2.35));

                scenicList.push(new Scenery("matnaWeb", 5263.950305668896, -243012.13760837255, 11, 2));
                scenicList.push(new Scenery("matnaWeb", 5234.770770733334, -242943.5601836496, 3, 1.95));
                scenicList.push(new Scenery("matnaWeb", 5348.509840269273, -242859.81811449726, 4.54, 2.3));
                scenicList.push(new Scenery("matnaWeb", 5430.273954398269, -242945.0673261498, 10.3, 2.25));
                scenicList.push(new Scenery("matnaWeb", 5386.001477337873, -243017.61116330072, -4.48, 2.35));
                scenicList.push(new Scenery("matnaWeb", 5279.402536128675, -243048.3349555243, 11.2, 2.25));

                ArtificialIntelligenceAccess.push(new Unit(5258.864808862059, -243005.63059800607, "Matna", true, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(5205.099668091057, -242934.84765971664, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(5255.028671870866, -242863.7121397698, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(5403.143477990687, -242886.88305560712, "Matna", true, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(5435.28664549205, -243003.6342988933, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(5324.4607114099435, -243090.84379356133, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(5335.038621737645, -243000.54924547198, "Matna", false, "deathByter"));

                ArtificialIntelligenceAccess.push(new Unit(3502.7875551930447, -242854.8910955257, "BlackTroll", false, "Brufga"));
                ArtificialIntelligenceAccess.push(new Unit(4025.506433483409, -242825.3965412578, "BlackTroll", true, "Brufga"));
                ArtificialIntelligenceAccess.push(new Unit(3300.244139278479, -241982.95355700157, "BlackTroll", false, "Brufga"));

                scenicList.push(new Scenery("araneaDen", 3826.5477806501094, -246756.12780209514, 6, false, true));

                ArtificialIntelligenceAccess.push(new Unit(3026, -238984, "Lizard", true, "Lib"));
                ArtificialIntelligenceAccess.push(new Unit(-985.9161924139584, -240052.76827072116, "Lizard", false, "Lib"));
                ArtificialIntelligenceAccess.push(new Unit(2547.010371220929, -240495.06988889643, "PetraBeetle", true, "Iga"));
                ArtificialIntelligenceAccess.push(new Unit(1727, -240860, "PoisonDartFrog", false, "Iga"));
                ArtificialIntelligenceAccess.push(new Unit(-162, -239220, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(1255, -238864, "Zancudo", true, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(-638, -241387, "PetraBeetle", false, "Iga"));
                ArtificialIntelligenceAccess.push(new Unit(2948.4683475615493, -241446.2458594295, "PetraBeetle", true, "Iga"));
                ArtificialIntelligenceAccess.push(new Unit(-2308.967270092436, -239789.538683309, "PetraBeetle", true, "Iga"));

                ArtificialIntelligenceAccess.push(new Unit(1772.1262013701078, -241480.3109326768, "PetraBeetle", false, "Iga"));

                ArtificialIntelligenceAccess.push(new Unit(1755.1374712463244, -241822.93491774224, "PoisonDartFrog", true, "Iga"));

                ArtificialIntelligenceAccess.push(new Unit(3943.848345780836, -247539.13188217962, "Zancudo", false, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(3134.0087745909127, -247945.03324801143, "Zancudo", false, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(416.1834723607373, -241352.2196912796, "Zancudo", false, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(-384.8373761236428, -240796.68230211906, "Etyr", true, "Blackeye"));
                ArtificialIntelligenceAccess.push(new Unit(-589.3495063734284, -240775.48875206447, "Etyr", false, "Blackeye"));
                ArtificialIntelligenceAccess.push(new Unit(-1012.3875408130549, -240772.5779532194, "Etyr", false, "Blackeye"));

                ArtificialIntelligenceAccess.push(new Unit(-1846.9951373837232, -244855.41116514278, "Etyr", true, "poop"));
                ArtificialIntelligenceAccess.push(new Unit(-2107.928124825418, -245105.656963485, "Etyr", false, "poop"));
                ArtificialIntelligenceAccess.push(new Unit(-1873.991342947854, -245206.25233043605, "Etyr", false, "poop"));
                ArtificialIntelligenceAccess.push(new Unit(-1575.6826746224524, -245116.7472505272, "Etyr", true, "poop"));
                ArtificialIntelligenceAccess.push(new Unit(-1668.3820383134612, -245393.0306556481, "Etyr", false, "poop"));

                ArtificialIntelligenceAccess.push(new Unit(6165.102304191104, -244566.84256187215, "Etyr", false, "poop"));
                ArtificialIntelligenceAccess.push(new Unit(6484.911675640824, -244426.59753911346, "Etyr", false, "poop"));
                ArtificialIntelligenceAccess.push(new Unit(6771.9587610103745, -244530.67620787537, "Etyr", false, "poop"));
                ArtificialIntelligenceAccess.push(new Unit(6412.505139942507, -244761.216677198, "Etyr", false, "poop"));
                ArtificialIntelligenceAccess.push(new Unit(6198.873798119403, -245060.6393265651, "Etyr", true, "poop"));
                ArtificialIntelligenceAccess.push(new Unit(5746.677407159321, -245128.05561910843, "Etyr", false, "poop"));

                ArtificialIntelligenceAccess.push(new Unit(1474.8686650178968, -246078.49747376118, "Babosa", false, "Glubber", {patrolStops: 5, patrolLoop: true, route:[[1459.5013054630888, -246451.7866154296], [1027.1605832950631, -246511.64659574907], [937.6755136277003, -246370.20276352883], [983.7838020997377, -246082.44762056053], [1474.8686650178968, -246078.49747376118]]}));

                ArtificialIntelligenceAccess.push(new Unit(-608.3537947092788, -244630.919666402, "Zancudo", false, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(1204.2613832398104, -245172.61770782014, "Zancudo", false, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(-1736.0582039346468, -244367.9580484865, "Zancudo", false, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(2745.2080450447, -243115.6838265531, "Zancudo", false, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(4948.831571340287, -245334.32924613977, "Zancudo", false, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(1326.5732822485265, -242945.32281432793, "Zancudo", false, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(4467.774919036949, -242429.64277466357, "Zancudo", false, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(2598.8807456798013, -244216.91517310613, "Zancudo", false, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(4114.112462205032, -243364.84397429784, "Zancudo", true, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(1641.9232111066099, -244456.055540826, "PoisonDartFrog", false, "Iga"));

                ArtificialIntelligenceAccess.push(new Unit(2959.869604039108, -244625.67656328378, "PoisonDartFrog", true, "Iga"));

                ArtificialIntelligenceAccess.push(new Unit(483.869565174845, -244974.59123597702, "Cruorcca", "massive", "Cruor"));

                ArtificialIntelligenceAccess.push(new Unit(-58.61041417592261, -245297.53708851297, "Zancudo", true, "proboscis"));

                scenicList.push(new Scenery("decipulaBasePlant", -326.0166892520984, -245480.51021128724, -1.1, true));

                scenicList.push(new Scenery("decipulaBasePlant", 3440.401080249614, -244181.14699437658, 0.5, true));

                ArtificialIntelligenceAccess.push(new Unit(-366.28813773746066, -246103.19182478715, "PetraBeetle", false, "Iga"));

                ArtificialIntelligenceAccess.push(new Unit(-371.80033725548105, -244759.13677314817, "PetraBeetle", true, "Iga"));

                ArtificialIntelligenceAccess.push(new Unit(-78.50762966859162, -245946.7156401473, "Lizard", false, "docile"));

                scenicList.push(new Scenery("bahabPlant", 146.47863653523274, -245963.45390874983, 8, true));

                scenicList.push(new Scenery("bahabPlant", 88.30576503957869, -246118.1329761419, 2.2, true));
                scenicList.push(new Scenery("bahabPlant", 507.6617801479168, -246518.99545781812, 3.9, true));

                scenicList.push(new Scenery("bahabPlant", 14.487440114974543, -247892.43183491525, -5.63, true));

                scenicList.push(new Scenery("bahabPlant", 4909.339541664249, -242538.30185691811, 8.5, true));

                scenicList.push(new Scenery("araneaDen", 118.2473684902781, -246473.70111611462, -20, true, true));

                scenicList.push(new Scenery("araneaDen", 3273.368739334276, -243878.22515547532, -2.24, false, false)); //no spider

                scenicList.push(new Scenery("bahabPlant", -1800.501688873129, -240399.71213120717, 10.26, true));

                scenicList.push(new Scenery("bahabPlant", 3610.075801300234, -243495.81808164864, 14.25, true));

                scenicList.push(new Scenery("bahabPlant", 2963.391456535867, -245969.15350088495, 3, true));

                ArtificialIntelligenceAccess.push(new Unit(5753.053873591727, -239054.53550365265, "Cruorcca", false, "Cruor"));


                ArtificialIntelligenceAccess.push(new Unit(-1355.5226248321576, -241711.2464268875, "Zancudo", false, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(-1454.925970996786, -242066.53000595584, "Zancudo", false, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(-616.4568890673052, -246356.7154078495, "Cruorcca", true, "Cruor"));
                ArtificialIntelligenceAccess.push(new Unit(-716.860621501376, -246416.57575510704, "Cruorcca", false, "Cruor"));
                ArtificialIntelligenceAccess.push(new Unit(-890.560393625148, -246190.73560639576, "Cruorcca", true, "Cruor"));

                ArtificialIntelligenceAccess.push(new Unit(-461.0344946295871, -246027.3962194965, "PetraBeetle", true, "Iga"));

                scenicList.push(new Scenery("valumPlant", -1213.657136278171, -246402.09345634351, 0, 1));

                ArtificialIntelligenceAccess.push(new Unit(754.0021674802783, -241586.42576424105, "Gorgon", false, "Gra"));

                ArtificialIntelligenceAccess.push(new Unit(6130.083306380039, -240484.84310828746, "Gorgon", true, "Graga"));

                ArtificialIntelligenceAccess.push(new Unit(453.5587398957185, -241986.08539707685, "Zancudo", true, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(480.3946111451097, -242288.7024032443, "Zancudo", false, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(4894.4571580465, -240371.19795566858, "Zancudo", false, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(5935.077766463176, -246381.1068626814, "Zancudo", true, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(2261.2031023021395, -247987.51139406243, "Zancudo", true, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(-621.4578416843605, -242222.6663007408, "Boa", true, "constricto"));

                ArtificialIntelligenceAccess.push(new Unit(5002.518638038544, -247264.54737765098, "Boa", false, "constricto"));

                ArtificialIntelligenceAccess.push(new Unit(-1601.3167050489865, -242960.70234213638, "Crenid", "massive", "Bulgg", {patrolStops: 4, patrolLoop: true, route:[[-2348.150317250757, -242640.9404797037], [-2633.9104560150745, -243504.1377813835], [-1812.1588780601687, -243534.68003095812], [-1601.3167050489865, -242960.70234213638]]}));
                ArtificialIntelligenceAccess.push(new Unit(-2118.369340708121, -243396.67524898695, "Crenid", true, "bulggob"));

                ArtificialIntelligenceAccess.push(new Unit(-1734.7833830734955, -247002.36313512595, "ZafBeetle", false, "Tzalit"));

                ArtificialIntelligenceAccess.push(new Unit(-759.8924322144177, -247786.89577948616, "Kigarii", false, "batter"));
                ArtificialIntelligenceAccess.push(new Unit(2616.7560880016235, -247091.3863405396, "Kigarii", false, "budder"));

                scenicList.push(new Scenery("pyromothWeb", 3693.380471304596, -244919.83519692242, 2, 2, true));
                scenicList.push(new Scenery("pyromothWeb", 3733.7532052408933, -244931.34914915895, 0, 2.5, false));
                ArtificialIntelligenceAccess.push(new Unit(3693.380471304596, -244919.83519692242, "Pyromoth", false, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[2708.5760149387365, -245338.49080831103], [3489.6885731456105, -244501.76449667182], [3693.380471304596, -244919.83519692242]]}));
                ArtificialIntelligenceAccess.push(new Unit(3693.380471304596, -244919.83519692242, "Pyromoth", false, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[3231.9505384576096, -244247.44146962088], [3507.4682778610254, -244271.97939413332], [3693.380471304596, -244919.83519692242]]}));
                scenicList.push(new Scenery("pyromothWeb", 3914.25025171928, -244974.52733858736, 1.3, 4, true));
                scenicList.push(new Scenery("pyromothWeb", 3848.625503218877, -245022.71653676726, 5, 2.5, false));
                scenicList.push(new Scenery("pyromothWeb", 3852.6458503024433, -244969.7444963315, 9, 2, false));
                scenicList.push(new Scenery("pyromothWeb", 3843.50483059997, -244912.94545172522, 13.89, 2.6, true));
                ArtificialIntelligenceAccess.push(new Unit(3868.2378372750286, -244973.60856161983, "Pyromoth", true, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[4194.7049936265585, -243978.58775834437], [3032.171917721282, -244136.0402525356], [3868.2378372750286, -244973.60856161983]]}));

                //Scenery
                scenicList.push(new Scenery("overVines", -1232.2009440245467, -239919.25623572944, -0.4, 4, 2.4));
                scenicList.push(new Scenery("overVines", 442.68248383835265, -246458.89964775322, 2.8, 2, 1.1));
                scenicList.push(new Scenery("overVines", 28.695154724657137, -246462.64475974796, -2.8 + 1/2 * Math.PI, 3, 3.6));
                scenicList.push(new Scenery("overVines", -702.4528057696499, -246293.13616576235, 2.3 + Math.PI, 2, 0.59));
                scenicList.push(new Scenery("overVines", -1950.5453639734114, -240427.3172697648, 2.6, 1, 2.2));
                scenicList.push(new Scenery("overVines", -1857.394352689028, -240209.93659257033, 4.3, 1, 1.6));
                scenicList.push(new Scenery("overVines", -1245.3142302566098, -247126.5811549231, 3.8 + 1/2 * Math.PI, 2, 1.3));
                scenicList.push(new Scenery("overVines", -376.14812830589125, -247795.3992537127, 4 + 1/2 * Math.PI, 1, 2.3));
                scenicList.push(new Scenery("overVines", 3119.2755228302726, -245117.25885910573, 2.5 * Math.PI, 2, 2.2));
                scenicList.push(new Scenery("overVines", 3119.2755228302726, -244960.25885910573, -1, 4, 3.5));
                scenicList.push(new Scenery("overVines", 3390.098498769934, -244725.56880440938, -3, 3, 3.7));
                scenicList.push(new Scenery("overVines", 4608.099696743946, -246608.6943991763, -2.76, 1, 1.4));
                scenicList.push(new Scenery("overVines", 4389.143910552105, -246668.20988485732, -2.76 + 1/2 * Math.PI, 1, 1.2));
                scenicList.push(new Scenery("overVines", 4844.398902672602, -240097.04462310983, -2.55 + 1/2 * Math.PI, 1, 1.14));
                scenicList.push(new Scenery("overVines", 5992.067607134684, -238964.46479396315, 3.55, 2, 0.85));
                scenicList.push(new Scenery("overVines", 5998.067607134684, -238962.45479396382, 3.6 + Math.PI, 2, 1.75));
                scenicList.push(new Scenery("overVines", 6430.447222260217, -239767.81738261197, -2.55 + 1/2 * Math.PI, 1, 1.62));

                //Plants
                scenicList.push(new Scenery("sonjaTree", 5802.338804284937, -240763.69844355193, 15.34, 0));
                scenicList.push(new Scenery("sonjaTree", 5932.462697390982, -243056.57973383623, 1.9, 0));
                scenicList.push(new Scenery("sonjaTree", 4628.3338663629565, -242910.0054822778, 5.2, 0));
                scenicList.push(new Scenery("sonjaTree", 1834.7048864407086, -243734.3655863148, 18.47, 0));
                scenicList.push(new Scenery("sonjaTree", 703.8912499471572, -243864.94025258106, 0.66, 0));
                scenicList.push(new Scenery("sonjaTree", 604.1571393367584, -244246.77754110345, 20, 0));
                scenicList.push(new Scenery("sonjaTree", 265.5838313359285, -240274.07179468567, 1, 0));
                scenicList.push(new Scenery("sonjaTree", 1643.1097050424617, -241842.96783745894, 0, 0));
                scenicList.push(new Scenery("sonjaTree", 3513.8925297545206, -242573.2127253556, 3, 0));
                scenicList.push(new Scenery("sonjaTree", 4236.550084153989, -243854.06363121638, 4.4, 0));
                scenicList.push(new Scenery("sonjaTree", 5121.159619872858, -244851.74103157478, 7.9, 0));
                scenicList.push(new Scenery("sonjaTree", 3886.925202196208, -245890.56400321916, 1.2, 0));
                scenicList.push(new Scenery("sonjaTree", 1104.8090943721538, -246793.10239318456, 1.45, 0));
                scenicList.push(new Scenery("sonjaTree", 682.614314662967, -248008.46330477277, 9, 0));
                scenicList.push(new Scenery("sonjaTree", 3043.568384847559, -247417.1758426731, 6.64, 0));

                scenicList.push(new Scenery("selvaTree", 6456, -238578, 0.38, 0));
                scenicList.push(new Scenery("selvaTree", 5285.7337473321495, -242131.0147369607, 2.38, 0));
                scenicList.push(new Scenery("selvaTree", 5639.1670486389785, -241282.22204374208, 5.38, 0));
                scenicList.push(new Scenery("selvaTree", 6251.096760490781, -240587.52638151028, 10.38, 0));
                scenicList.push(new Scenery("selvaTree", 5672.28761531128, -239961.42129432445, 1.38, 0));
                scenicList.push(new Scenery("selvaTree", 6127.054852197596, -239481.1128481666, 0.25, 0));
                scenicList.push(new Scenery("selvaTree", 5687.632046935739, -238507.84678797744, 3, 0));
                scenicList.push(new Scenery("selvaTree", 5282.9813701041385, -239101.70421127227, 6.5, 0));
                scenicList.push(new Scenery("selvaTree", 6689.905495504767, -240157.0777269516, 7.112, 0));
                scenicList.push(new Scenery("selvaTree", 6822.499115974482, -241846.48509209338, 4.5, 0));
                scenicList.push(new Scenery("selvaTree", 6509.397760320005, -243045.90491297498, 9.2, 0));
                scenicList.push(new Scenery("selvaTree", 5794.569111948266, -243606.48747543432, 1.8, 0));
                scenicList.push(new Scenery("selvaTree", 4075.6982166349076, -243292.91416034597, 11.2, 0));
                scenicList.push(new Scenery("selvaTree", 2891.754625303147, -242213.10071268727, 0.39, 0));
                scenicList.push(new Scenery("selvaTree", 3020.5349845464107, -240712.9563343046, 0.34, 0));
                scenicList.push(new Scenery("selvaTree", 1979.2129789627868, -239547.3284225103, 0, 0));
                scenicList.push(new Scenery("selvaTree", 16.905844863973503, -239223.29097119722, 1, 0));
                scenicList.push(new Scenery("selvaTree", 1001.1523946130909, -238607.04309654268, 2, 0));
                scenicList.push(new Scenery("selvaTree", 4383.912791172222, -240826.066333647, 3.47, 0));
                scenicList.push(new Scenery("selvaTree", 3632.308221233352, -240044.90954222184, 3.8, 0));
                scenicList.push(new Scenery("selvaTree", 4127.987549152959, -239194.4666602631, 4.4444, 0));
                scenicList.push(new Scenery("selvaTree", 2580.993032265319, -238901.6326995298, 5.115, 0));
                scenicList.push(new Scenery("selvaTree", 834.9877291606588, -240179.9422305032, 7.621, 0));
                scenicList.push(new Scenery("selvaTree", -340.33512995840766, -240722.9305987402, 10, 0));
                scenicList.push(new Scenery("selvaTree", -2531.0391560857474, -240317.51649775237, 4, 0));
                scenicList.push(new Scenery("selvaTree", -2375.632782131061, -238617.4969161959, 5, 0));
                scenicList.push(new Scenery("selvaTree", -2222.5461132141963, -246630.2678241724, 8, 0));
                scenicList.push(new Scenery("selvaTree", 1082.2655522230637, -241466.2472777203, 7.5, 0));
                scenicList.push(new Scenery("selvaTree", 2350.62466049103, -241475.81513439413, 6.3, 0));
                scenicList.push(new Scenery("selvaTree", 4198.765804068302, -242376.1314146828, 4.6, 0));
                scenicList.push(new Scenery("selvaTree", 4819.315081964422, -244065.55889126693, 2.81, 0));
                scenicList.push(new Scenery("selvaTree", 3343.2734654036017, -245432.78980159728, 1.23, 0));
                scenicList.push(new Scenery("selvaTree", 1532.149357124841, -245599.34797576012, 3.45, 0));
                scenicList.push(new Scenery("selvaTree", -12.853386513940821, -245096.05378252122, 0.9, 0));
                scenicList.push(new Scenery("selvaTree", -929.2189276625737, -246648.54793274103, 0.8, 0));
                scenicList.push(new Scenery("selvaTree", -14.17310801951131, -248169.42741023542, 0.38, 0));
                scenicList.push(new Scenery("selvaTree", 4720.280197602496, -247644.48583324312, 0.37, 0));
                scenicList.push(new Scenery("selvaTree", 496.5417140164455, -240873.9981759643, 0, 0));
                scenicList.push(new Scenery("selvaTree", -301.64947871242316, -241632.19826234225, 2, 0));
                scenicList.push(new Scenery("selvaTree", 548.2621020602651, -242395.25588283688, 5, 0));
                scenicList.push(new Scenery("selvaTree", 1571.26211643719, -242574.4046303734, 6, 0));
                scenicList.push(new Scenery("selvaTree", 2859.1862763713652, -242997.37562752527, 9, 0));
                scenicList.push(new Scenery("selvaTree", 6405.998430223518, -244973.84248527046, 12, 0));
                scenicList.push(new Scenery("selvaTree", 4986.7636096886545, -246791.2699525836, 12.45, 0));
                scenicList.push(new Scenery("selvaTree", 2772.03695199235, -246527.79620419204, 3.12, 0));
                scenicList.push(new Scenery("selvaTree", 1349.2937988197102, -248043.62475449298, 4.08, 0));
                scenicList.push(new Scenery("selvaTree", 159.9171830618803, -247011.34813553034, 5.11, 0));
                scenicList.push(new Scenery("selvaTree", -311.8839287289242, -245953.94293292792, 7.7, 0));
                scenicList.push(new Scenery("selvaTree", -1772.073357443293, -245275.657164538, 8.8, 0));
                scenicList.push(new Scenery("selvaTree", -2312.607074824722, -243317.19110557012, 11.11, 0));
                scenicList.push(new Scenery("selvaTree", -790.973291627211, -247595.14250034437, 12.12, 0));
                scenicList.push(new Scenery("selvaTree", -2806.209043696943, -247573.01113856363, 4, 0));
                scenicList.push(new Scenery("selvaTree", -2621.7156154234267, -245687.57827824142, 5, 0));
                scenicList.push(new Scenery("selvaTree", -1477.276324957529, -245992.50154016947, 0, 0));
                scenicList.push(new Scenery("selvaTree", -859.3556505924802, -244473.85590628439, 6, 0));
                scenicList.push(new Scenery("selvaTree", 1338.679611609283, -243605.7574058495, 5.328, 0));
                scenicList.push(new Scenery("selvaTree", 3820.676680159974, -244290.3893929381, 9.24, 0));
                scenicList.push(new Scenery("selvaTree", 6709.79091237593, -244408.6126286546, 5, 0));
                scenicList.push(new Scenery("selvaTree", 6200.7743255507, -246322.54257297606, 5, 0));
                scenicList.push(new Scenery("selvaTree", 4621.544364409696, -238546.04183270253, 5, 0));
                scenicList.push(new Scenery("selvaTree", -1607.7395778002597, -239817.2542038627, 6, 0));
                scenicList.push(new Scenery("selvaTree", -1435.136628894679, -241861.64049213254, 1, 0));
                scenicList.push(new Scenery("selvaTree", 1719.450369914336, -240723.65060469595, 0.12, 0));
                scenicList.push(new Scenery("selvaTree", 2190.0020348047005, -243414.1413170709, 14, 0));
                scenicList.push(new Scenery("selvaTree", 3277.7836155109358, -243694.4829159613, 11.56, 0));
                scenicList.push(new Scenery("selvaTree", 4479.28416167602, -245087.61800240714, 5.611, 0));
                scenicList.push(new Scenery("selvaTree", 3713.1760775417993, -246811.96044488635, 6.1516, 0));
                scenicList.push(new Scenery("selvaTree", 6340.251648868997, -247506.5788508865, 8.234, 0));
                scenicList.push(new Scenery("selvaTree", 5618.187260497818, -244521.67687374435, 1.2345, 0));
                scenicList.push(new Scenery("selvaTree", 4445.452822093404, -241705.13404711435, 6.7891011, 0));
                scenicList.push(new Scenery("selvaTree", 3710.911174049878, -241624.41802194578, 2, 0));
                scenicList.push(new Scenery("selvaTree", 513.9925070774623, -241738.15991459895, 7.75, 0));
                scenicList.push(new Scenery("selvaTree", 362.8104101898042, -241467.85540237074, 17.75, 0));
                scenicList.push(new Scenery("selvaTree", -364.50349918089574, -240075.3645833058, 18.65, 0));
                scenicList.push(new Scenery("selvaTree", 1154.9641762946176, -239511.72961036672, 20.19, 0));
                scenicList.push(new Scenery("selvaTree", 1847.0919853353873, -238827.94306016766, 20.04, 0));
                scenicList.push(new Scenery("selvaTree", 3609.163662697182, -238684.98384033298, 1, 0));
                scenicList.push(new Scenery("selvaTree", 2752.6628220848634, -239617.81567987523, 0, 0));
                scenicList.push(new Scenery("selvaTree", 5317.987095558602, -242940.51506757847, 7.95, 0));
                scenicList.push(new Scenery("selvaTree", 6190.145191821316, -242301.50564924965, 0.35, 0));
                scenicList.push(new Scenery("selvaTree", 3382.244826728069, -246162.03936654262, 5.553, 0));
                scenicList.push(new Scenery("selvaTree", 4391.8700587779085, -247069.6896482014, 3.53, 0));
                scenicList.push(new Scenery("selvaTree", 3811.755233551301, -247661.63401348126, 7.68, 0));
                scenicList.push(new Scenery("selvaTree", 4194.025451212907, -248270.51235209382, 8.67, 0));
                scenicList.push(new Scenery("selvaTree", 5825.818948536411, -248092.84296576318, 6.87, 0));
                scenicList.push(new Scenery("selvaTree", 5517.9647447045745, -247355.35267588682, 2.1, 0));
                scenicList.push(new Scenery("selvaTree", 6804.664603363222, -246899.51965900866, 3.2, 0));
                scenicList.push(new Scenery("selvaTree", 5707.844189013861, -245359.35473131938, 5.3, 0));
                scenicList.push(new Scenery("selvaTree", 4977.104122026086, -245739.86426634854, 0, 0));
                scenicList.push(new Scenery("selvaTree", 4219.329181282226, -246348.2796595728, 0.36, 0));
                scenicList.push(new Scenery("selvaTree", 5523.507749227142, -246343.09297169498, 5.77, 0));
                scenicList.push(new Scenery("selvaTree", 6655.739331802637, -245890.36666388914, 10, 0));
                scenicList.push(new Scenery("selvaTree", 5736.0893216942695, -245402.44114301255, 13, 0));
                scenicList.push(new Scenery("selvaTree", 3778.6594897286213, -244984.666642242, 15.5, 0));
                scenicList.push(new Scenery("selvaTree", 3984.771900049937, -245438.0730094797, 11.38, 0));
                scenicList.push(new Scenery("selvaTree", 2456.006932861691, -247232.50100017362, 2.38, 0));
                scenicList.push(new Scenery("selvaTree", 1696.78814238276, -247014.2366869056, 4.38, 0));
                scenicList.push(new Scenery("selvaTree", 1918.901699082147, -246205.52753925687, 6.38, 0));
                scenicList.push(new Scenery("selvaTree", 585.2520583868948, -245855.38097379054, 1, 0));
                scenicList.push(new Scenery("selvaTree", 915.9106521366455, -244770.9174283337, 8.38, 0));
                scenicList.push(new Scenery("selvaTree", 190.25957878765638, -243357.72394548383, 3.6, 0));
                scenicList.push(new Scenery("selvaTree", -956.8170881053126, -242652.05044110955, 7.1153, 0));
                scenicList.push(new Scenery("selvaTree", -2253.8312954571948, -241531.5084733122, 9.1187, 0));
                scenicList.push(new Scenery("selvaTree", -2863.1139273079693, -242413.35456492705, 4.352523, 0));
                scenicList.push(new Scenery("selvaTree", -2677.4792207790156, -244088.24827687975, 8.923469, 0));
                scenicList.push(new Scenery("selvaTree", -2625.6782685361627, -244910.1774952185, 8.67234, 0));
                scenicList.push(new Scenery("selvaTree", -2924.7818779664885, -246845.01589868555, 1.24, 0));
                scenicList.push(new Scenery("selvaTree", -1808.0757082211057, -247490.81468709942, 2.34, 0));
                scenicList.push(new Scenery("selvaTree", 2342.274877637182, -248183.47576047684, 4.591, 0));
                scenicList.push(new Scenery("selvaTree", 3144.8831675220435, -248073.05052506196, 0.6757, 0));
                scenicList.push(new Scenery("selvaTree", 1871.5098412583213, -247649.5939742833, 1, 0));
                scenicList.push(new Scenery("selvaTree", 2229.171853544727, -246710.74920642783, 2, 0));
                scenicList.push(new Scenery("selvaTree", 2496.989911431438, -245866.4772063263, 1.23, 0));
                scenicList.push(new Scenery("selvaTree", 2471.196741172797, -245168.46782505477, 3.345, 0));
                scenicList.push(new Scenery("selvaTree", 1691.6542462826915, -244781.90641457014, 4.45, 0));
                scenicList.push(new Scenery("selvaTree", 2498.1726625143883, -243958.19438320186, 5.6, 0));
                scenicList.push(new Scenery("selvaTree", 903.116351607017, -243013.45390727234, 9.1012, 0));
                scenicList.push(new Scenery("selvaTree", -294.8447844327525, -242817.22058449572, 14.14, 0));
                scenicList.push(new Scenery("selvaTree", -901.9112855105662, -243608.03734120153, 16.88, 0));
                scenicList.push(new Scenery("selvaTree", -218.4703120014234, -244126.0548650673, 2.13, 0));
                scenicList.push(new Scenery("selvaTree", -1767.7533496705148, -244180.41714561015, 3.14, 0));
                scenicList.push(new Scenery("selvaTree", -2003.2864012911693, -244701.5522684866, 1.81, 0));
                scenicList.push(new Scenery("selvaTree", -836.0157752728684, -245164.0832514188, 6.4, 0));
                scenicList.push(new Scenery("selvaTree", -1095.837109391663, -238770.385976248, 1, 0));
                scenicList.push(new Scenery("selvaTree", -513.943089987409, -239497.24675195228, 0.11, 0));
                scenicList.push(new Scenery("selvaTree", -631.8808599704063, -239184.95928489495, 6, 0));
                scenicList.push(new Scenery("selvaTree", -1029.0127492166332, -239513.0153414186, 5.1, 0));
                scenicList.push(new Scenery("selvaTree", -953.4228835367135, -240279.73607356867, 6, 0));
                scenicList.push(new Scenery("selvaTree", -1484.0628603318098, -240632.4664907059, 5.9, 0));
                scenicList.push(new Scenery("selvaTree", -1136.1206320547199, -241331.52633024848, 2.45, 0));
                scenicList.push(new Scenery("selvaTree", -2353.0132799549724, -240960.573803547, 8, 0));
                scenicList.push(new Scenery("selvaTree", -2812.433282926892, -239608.21262043435, 8.9, 0));
                scenicList.push(new Scenery("selvaTree", -2300.019910465406, -239616.0759585277, 8.8, 0));
                scenicList.push(new Scenery("selvaTree", -2997.102997645877, -239068.50927834702, 8.76, 0));
                scenicList.push(new Scenery("selvaTree", -2957.990835461984, -238550.7498541408, 0, 0));
                scenicList.push(new Scenery("selvaTree", -2869.9900527137156, -241336.72894486817, 0.5, 0));
                scenicList.push(new Scenery("selvaTree", -2023.6972896741252, -242200.42456114184, 4.9, 0));
                scenicList.push(new Scenery("selvaTree", -1481.513064274133, -243191.10371818222, 6.38, 0));
                scenicList.push(new Scenery("selvaTree", -737.0582826565646, -242083.6380271347, 7.38, 0));
                scenicList.push(new Scenery("selvaTree", -37.07430092217156, -242223.12585688048, 10, 0));
                scenicList.push(new Scenery("selvaTree", 2315.866789677687, -242478.1332270324, 5, 0));
                scenicList.push(new Scenery("selvaTree", 1635.5289444553694, -244193.62643802853, 2, 0));
                scenicList.push(new Scenery("selvaTree", 2859.8178456615724, -244512.4803130248, 1.5, 0));
                scenicList.push(new Scenery("selvaTree", 5157.8436203160745, -248172.52417872986, 2.4, 0));
                scenicList.push(new Scenery("selvaTree", 6765.422213264215, -248214.792477134, 11.7, 0));
                scenicList.push(new Scenery("selvaTree", 6632.054691606536, -243677.52975788052, 8.1, 0));
                scenicList.push(new Scenery("selvaTree", 6935.149721349768, -242557.2884320633, 2.5, 0));
                scenicList.push(new Scenery("selvaTree", 6526.089965662541, -241194.6368579918, 3.85, 0));
                scenicList.push(new Scenery("selvaTree", 6711.723527318879, -239174.41360222807, 9, 0));
                scenicList.push(new Scenery("selvaTree", 5023.193112053758, -241392.58243667398, 0, 0));
                scenicList.push(new Scenery("selvaTree", 5192.021855731398, -240777.51489964078, 15, 0));
                scenicList.push(new Scenery("selvaTree", 5102.529883070127, -240374.44389658392, 11.6667, 0));
                scenicList.push(new Scenery("selvaTree", 4376.200294507602, -240142.09049503895, 9.24, 0));
                scenicList.push(new Scenery("selvaTree", 4795.194960567286, -239634.66279956672, 10.4444, 0));
                scenicList.push(new Scenery("selvaTree", 666.5078766733278, -239234.0786898618, 16.7, 0));
                scenicList.push(new Scenery("selvaTree", 238.54078903048904, -238534.22047766793, 19, 0));
                scenicList.push(new Scenery("selvaTree", 3403.0543813799195, -239351.896601178, 0.1, 0));
                scenicList.push(new Scenery("selvaTree", -791.9428674261518, -248318.3501637582, 1.9056373382564638, 0));
                scenicList.push(new Scenery("selvaTree", -1551.951546360286, -248136.4984184328, 1.7471011433011883, 0));
                scenicList.push(new Scenery("selvaTree", -2305.4754696275263, -248192.8325672096, 4.121459841633852, 0));
                scenicList.push(new Scenery("selvaTree", -2638.6193485421327, -248420.97341832952, 0.7162704646806648, 0));

                scenicList.push(new Scenery("athergmPlant", 2202.590992967346, -240500.20666563866, 0, 1));
                scenicList.push(new Scenery("athergmPlant", 2618.4363846095093, -240142.1658317146, 0.38, 1));
                scenicList.push(new Scenery("athergmPlant", 2709.838659526797, -240988.83908227834, 3, 1));

                scenicList.push(new Scenery("athergmPlant", 228.01889420659413, -247699.98558177773, 6.38, 1));
                scenicList.push(new Scenery("athergmPlant", 557.5120851598692, -247525.4744416334, 1, 1));

                scenicList.push(new Scenery("athergmPlant", 1193.052376594624, -247377.10316842966, 4.9, 1));
                scenicList.push(new Scenery("athergmPlant", 665.6490828931286, -247120.70555726934, 6.1, 1));

                scenicList.push(new Scenery("valumPlant", 3256.67679138896, -240496.09256270886, 1.1, 1));
                scenicList.push(new Scenery("valumPlant", 782.7767384061933, -239726.7574430189, 2.4, 1));

                scenicList.push(new Scenery("blilPlant", -629 , -241201, 4.3, true));
                scenicList.push(new Scenery("decipulaPlant", -1323, -239981, 2.6 + Math.PI, true));

                scenicList.push(new Scenery("decipulaPlant", 1791.708232684256, -246655.8523586797, 3.77, true));

                scenicList.push(new Scenery("cerebrisPlant", -1289.1308411625598, -239142.629934201, 0, 1));

                scenicList.push(new Scenery("cerebrisPlant", 5420.431412145341, -245796.91911657373, 10.333, 1));
                scenicList.push(new Scenery("cerebrisPlant", 5979.663708737669, -245845.11515259114, 7.7, 1));

                scenicList.push(new Scenery("cerebrisPlant", 5792.8254346266185, -246870.08210748536, 8.16, 1));

                scenicList.push(new Scenery("crilkPlant", -2540.5489729129827, -239294.12830824347, 3.2, true));

                scenicList.push(new Scenery("morshPlant", 1459, -239101, 5, true));
                scenicList.push(new Scenery("gojiiPlant", 1319, -240356, 1, true));

                scenicList.push(new Scenery("morshPlant", 4047.517101092634, -246815.64396131947, 0, true));

                scenicList.push(new Scenery("morshPlant", 4789.333471429053, -240683.90064321287, 0, true));

                scenicList.push(new Scenery("bahabPlant", 5343.077332872674, -246642.27904940248, 3.94, true));

                scenicList.push(new Scenery("bahabPlant", 1883.4155400404993, -243042.30049318518, 2.25, true));

                scenicList.push(new Scenery("bahabPlant", 5022.778166176467, -246997.88650586124, 5.95, true));

                scenicList.push(new Scenery("crilkPlant", 1364.033523306689, -244187.53808791225, 5.5, true));

                scenicList.push(new Scenery("blilPlant", 517 , -246180, 6, true));
                scenicList.push(new Scenery("morshPlant", -145.95728090279195, -246676.0339873085, 1.5, true));

                scenicList.push(new Scenery("crilkPlant", 317.18631662864516, -242090.94949824386, 9.22, true));

                scenicList.push(new Scenery("crilkPlant", 5128.139989304042, -247589.67382914858, 7.18, true));

                scenicList.push(new Scenery("decipulaPlant", -1794.7372566519043, -241146.02033215828, -1.7, true));

                scenicList.push(new Scenery("gojiiPlant", -1484.5286675069713, -242533.41192800153, 5, true));

                scenicList.push(new Scenery("morshPlant", -2053.3582349959493, -243865.72140990268, 3.6, true));

                scenicList.push(new Scenery("morshPlant", -2005.818658347035, -245907.54409386084, 11, true));

                scenicList.push(new Scenery("blilPlant", -1408.5532788560126, -246907.1659089539, -7, true));

                scenicList.push(new Scenery("morshPlant", 3928.416412747804, -242826.3302977449, 2.6, true));

                scenicList.push(new Scenery("blilPlant", 4079.7498854508076, -241935.28153899303, -7, true));

                scenicList.push(new Scenery("gojiiPlant", 5835.200517339243, -242551.81618917012, 5.4, true));

                scenicList.push(new Scenery("blilPlant", 1950.5740942843556, -247490.63680387524, 6, true));

                scenicList.push(new Scenery("selvaTree", 5090.882229517125, -248935.64101073495,1.6631828091169625, 0)); //copied s-25
                scenicList.push(new Scenery("selvaTree", 4313.909380364811, -249300.76406192544,1.777593614719195, 0)); //copied s-25
                scenicList.push(new Scenery("selvaTree", 3234.905809361743, -248874.6292523385,4.815745248560966, 0)); //copied s-25
                scenicList.push(new Scenery("selvaTree", 2247.057198526093, -249187.3423271902,4.061362306635107, 0)); //copied s-25
                scenicList.push(new Scenery("selvaTree", 901.5011723226429, -248895.56789294642,4.067032549336555, 0)); //copied s-25
                scenicList.push(new Scenery("selvaTree", -997.4836287844123, -249083.2136230363,0.32406910450872894, 0)); //copied s-25
                scenicList.push(new Scenery("selvaTree", -103.3258636602553, -249000.52010732685,1.5135845233641347, 0)); //copied s-25
                scenicList.push(new Scenery("selvaTree", -1640.2836796449317, -248882.00728436347,4.41044832880805, 0)); //copied s-25
                scenicList.push(new Scenery("selvaTree", -2893.3079477813358, -249217.25807991243, 3.3887366644230754, 0));
                scenicList.push(new Scenery("selvaTree", -2164.013565809134, -249227.69333148532, 5.7925465854427385, 0));
                scenicList.push(new Scenery("selvaTree", 6622.151615906367, -248846.46983164927, 2.7042163926678184, 0));
                scenicList.push(new Scenery("selvaTree", 5947.447797538148, -248893.47880538003, 4.880465579811383, 0));
                scenicList.push(new Scenery("bahabPlant", 3830.131335971431, -248739.98899903114, 10.2, true));

                change = "s24";
            }
        }
        else if (region == "s25") //Selva second of the jungle
        {
            if (change != "s25")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        //console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        //console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                scenicList.push(new Scenery("sonjaTree", -2456.78593620105, -248801.27862364124, 2.574108183118155, 0));

                scenicList.push(new Scenery("bahabPlant", 14.487440114974543, -247892.43183491525,-5.63, true)); //copied s-24
                scenicList.push(new Scenery("overVines", -376.14812830589125, -247795.3992537127,5.570796326794897, 1, 2.3)); //copied s-24
                scenicList.push(new Scenery("sonjaTree", 682.614314662967, -248008.46330477277,9, 0)); //copied s-24
                scenicList.push(new Scenery("selvaTree", -14.17310801951131, -248169.42741023542,0.38, 0)); //copied s-24
                scenicList.push(new Scenery("selvaTree", 1349.2937988197102, -248043.62475449298,4.08, 0)); //copied s-24
                scenicList.push(new Scenery("selvaTree", 4194.025451212907, -248270.51235209382,8.67, 0)); //copied s-24
                scenicList.push(new Scenery("selvaTree", 5825.818948536411, -248092.84296576318,6.87, 0)); //copied s-24
                scenicList.push(new Scenery("selvaTree", 2342.274877637182, -248183.47576047684,4.591, 0)); //copied s-24
                scenicList.push(new Scenery("selvaTree", 3144.8831675220435, -248073.05052506196,0.6757, 0)); //copied s-24
                scenicList.push(new Scenery("selvaTree", 5157.8436203160745, -248172.52417872986,2.4, 0)); //copied s-24
                scenicList.push(new Scenery("selvaTree", 6765.422213264215, -248214.792477134,11.7, 0)); //copied s-24
                scenicList.push(new Scenery("selvaTree", -791.9428674261518, -248318.3501637582, 1.9056373382564638, 0));
                scenicList.push(new Scenery("selvaTree", -1551.951546360286, -248136.4984184328, 1.7471011433011883, 0));
                scenicList.push(new Scenery("selvaTree", -2305.4754696275263, -248192.8325672096, 4.121459841633852, 0));
                scenicList.push(new Scenery("selvaTree", -2638.6193485421327, -248420.97341832952, 0.7162704646806648, 0));

                //trees
                scenicList.push(new Scenery("selvaTree", -2893.3079477813358, -249217.25807991243, 3.3887366644230754, 0));
                scenicList.push(new Scenery("selvaTree", -2164.013565809134, -249227.69333148532, 5.7925465854427385, 0));
                scenicList.push(new Scenery("selvaTree", 6622.151615906367, -248846.46983164927, 2.7042163926678184, 0));
                scenicList.push(new Scenery("selvaTree", 5947.447797538148, -248893.47880538003, 4.880465579811383, 0));

                scenicList.push(new Scenery("sonjaTree", 6219.791649845992, -257474.8550366464, 0.706021572736711, 0));
                scenicList.push(new Scenery("sonjaTree", 4410.018675717904, -255460.80802709347, 0.7689508535417491, 0));
                scenicList.push(new Scenery("sonjaTree", 3685.859834014434, -255134.6638926526, 5.3199911215917215, 0));
                scenicList.push(new Scenery("sonjaTree", 2522.917929139925, -255017.52998886802, 1.5080744270487496, 0));
                scenicList.push(new Scenery("sonjaTree", 2000.1245364243011, -252251.0944879308, 4.128904419714854, 0));
                scenicList.push(new Scenery("sonjaTree", 1732.6960734731376, -251965.32025520757, 2.67259442162036, 0));
                scenicList.push(new Scenery("sonjaTree", 2718.10606596515, -249651.22032839572, 1.904675762083304, 0));
                scenicList.push(new Scenery("sonjaTree", 2781.032459959664, -249170.9674638133, 2.973786750520736, 0));
                scenicList.push(new Scenery("sonjaTree", 3739.989949748861, -249157.69957225243, 3.685699734957355, 0));
                scenicList.push(new Scenery("sonjaTree", 6233.842471561437, -249366.8206644325, 0.7980779603955188, 0));
                scenicList.push(new Scenery("sonjaTree", 6096.203186232579, -250553.04459464742, 0.767515353828836, 0));
                scenicList.push(new Scenery("sonjaTree", 6683.3510639275355, -250709.55944555908, 1.6315792205478519, 0));
                scenicList.push(new Scenery("sonjaTree", 5133.3848004521615, -251063.86972006265, 1.1653550258607526, 0));
                scenicList.push(new Scenery("sonjaTree", -251.35007637310707, -249476.7752843701, 5.692984967113837, 0));

                scenicList.push(new Scenery("selvaTree", 5090.882229517125, -248935.64101073495, 1.6631828091169625, 0));
                scenicList.push(new Scenery("selvaTree", 4313.909380364811, -249300.76406192544, 1.777593614719195, 0));
                scenicList.push(new Scenery("selvaTree", 3234.905809361743, -248874.6292523385, 4.815745248560966, 0));
                scenicList.push(new Scenery("selvaTree", 2247.057198526093, -249187.3423271902, 4.061362306635107, 0));
                scenicList.push(new Scenery("selvaTree", 901.5011723226429, -248895.56789294642, 4.067032549336555, 0));
                scenicList.push(new Scenery("selvaTree", -2407.4359204468665, -249931.9305955926, 5.602860570534958, 0));
                scenicList.push(new Scenery("selvaTree", -2014.7978081393028, -250684.6155164156, 0.26368785217387025, 0));
                scenicList.push(new Scenery("selvaTree", -1469.9899249009668, -251656.53159830565, 0.13703777332160658, 0));
                scenicList.push(new Scenery("selvaTree", -1554.5493059960081, -250063.29149557507, 3.169689152863309, 0));
                scenicList.push(new Scenery("selvaTree", -997.4836287844123, -249083.2136230363, 0.32406910450872894, 0));
                scenicList.push(new Scenery("selvaTree", -103.3258636602553, -249000.52010732685, 1.5135845233641347, 0));
                scenicList.push(new Scenery("selvaTree", 405.68316970091246, -249544.69831855153, 4.119591051346397, 0));
                scenicList.push(new Scenery("selvaTree", 1556.6450441445902, -249761.19330030715, 5.12384022798858, 0));
                scenicList.push(new Scenery("selvaTree", 2461.8537368537122, -250190.92446319674, 0.0023425167856815643, 0));
                scenicList.push(new Scenery("selvaTree", 3607.332295968785, -249768.77804474672, 3.2677378872373, 0));
                scenicList.push(new Scenery("selvaTree", 5596.086140763397, -249704.16331706205, 5.069685836906301, 0));
                scenicList.push(new Scenery("selvaTree", 6404.713813875322, -249947.914320473, 6.178723811628474, 0));
                scenicList.push(new Scenery("selvaTree", 6029.398660027026, -251112.7146116738, 0.7353039139207319, 0));
                scenicList.push(new Scenery("selvaTree", 6716.146936527519, -252171.00250662427, 4.003126823194302, 0));
                scenicList.push(new Scenery("selvaTree", 5453.670216072348, -252625.20249941794, 0.710615307197029, 0));
                scenicList.push(new Scenery("selvaTree", 4990.627366777751, -253465.40649339661, 5.863810099379903, 0));
                scenicList.push(new Scenery("selvaTree", 6122.80013938354, -253567.2323635857, 5.508802081204333, 0));
                scenicList.push(new Scenery("selvaTree", 6794.241649750445, -253341.81239133916, 1.6210515041230358, 0));
                scenicList.push(new Scenery("selvaTree", 6320.390106191334, -252784.30689760033, 6.019843587478099, 0));
                scenicList.push(new Scenery("selvaTree", 5932.418744776398, -251847.2014405917, 3.6176854358910826, 0));
                scenicList.push(new Scenery("selvaTree", 6863.7281592132895, -251480.0875125397, 3.017384115249953, 0));
                scenicList.push(new Scenery("selvaTree", 5236.14203323123, -251566.77284066126, 1.5162133594778828, 0));
                scenicList.push(new Scenery("selvaTree", 5386.151545500521, -250527.65873308308, 0.15913167938906364, 0));
                scenicList.push(new Scenery("selvaTree", 4651.479437512672, -249964.120086485, 2.46964909448599, 0));
                scenicList.push(new Scenery("selvaTree", 3625.7502571159066, -250679.04500498762, 1.5064759550443632, 0));
                scenicList.push(new Scenery("selvaTree", 2352.0813278971154, -251107.4054797834, 2.598763992848308, 0));
                scenicList.push(new Scenery("selvaTree", 1069.8091957198228, -250530.09093826512, 5.4594924833370815, 0));
                scenicList.push(new Scenery("selvaTree", -257.378859067263, -250445.02969634187, 5.156010080606603, 0));
                scenicList.push(new Scenery("selvaTree", -948.690789942673, -250912.5891959957, 0.9657062912512381, 0));
                scenicList.push(new Scenery("selvaTree", -307.0850787544956, -251890.89926420923, 1.8683439374321589, 2));
                scenicList.push(new Scenery("selvaTree", 706.9839311266094, -252557.45592018284, 3.1647993295543686, 0));
                scenicList.push(new Scenery("selvaTree", -190.95549822165242, -253050.6357957332, 0.5899717032920413, 0));
                scenicList.push(new Scenery("selvaTree", -1823.7758264481643, -252925.74044153522, 4.408260734851363, 0));
                scenicList.push(new Scenery("selvaTree", -3049.604784478791, -252218.1739823773, 4.910242297993053, 0));
                scenicList.push(new Scenery("selvaTree", -2423.057559449246, -251566.96854259112, 1.6262029639451845, 0));
                scenicList.push(new Scenery("selvaTree", 197.33774134412525, -251112.58002820116, 3.8659458156330584, 0));
                scenicList.push(new Scenery("selvaTree", 1508.5550961701279, -251467.9984103211, 5.342769117422882, 0));
                scenicList.push(new Scenery("selvaTree", 1116.5382804765861, -252034.02163801444, 2.157308320833525, 0));
                scenicList.push(new Scenery("selvaTree", 1551.524834392135, -252571.70377895224, 5.526595698797244, 0));
                scenicList.push(new Scenery("selvaTree", 1062.4807974051032, -253196.8034440021, 0.8756296721033254, 0));
                scenicList.push(new Scenery("selvaTree", 513.3889023296906, -253359.3063426218, 4.936924587985385, 0));
                scenicList.push(new Scenery("selvaTree", -115.23454667985274, -253794.79259779505, 3.8104791370996067, 0));
                scenicList.push(new Scenery("selvaTree", -1021.6476081934732, -253248.17216137846, 0.36691874192525203, 0));
                scenicList.push(new Scenery("selvaTree", -1611.6697186222168, -253897.26363386263, 3.5238204236219386, 0));
                scenicList.push(new Scenery("selvaTree", -2666.410016692173, -253092.93173552558, 1.5724645133149582, 0));
                scenicList.push(new Scenery("selvaTree", -1954.8682076984107, -254161.07529017673, 3.5694131426516633, 0));
                scenicList.push(new Scenery("selvaTree", -1172.0616128413224, -255049.35686806918, 2.722020415715492, 0));
                scenicList.push(new Scenery("selvaTree", -76.49265834334504, -255167.97431730368, 1.9818022544335405, 0));
                scenicList.push(new Scenery("selvaTree", 1191.71587775936, -255042.4918986043, 5.507979505570198, 0));
                scenicList.push(new Scenery("selvaTree", 2620.365594324132, -254489.95568001323, 5.773633888025186, 0));
                scenicList.push(new Scenery("selvaTree", 3571.1314464254024, -253900.73038478885, 3.414045490509168, 0));
                scenicList.push(new Scenery("selvaTree", 3007.336246352626, -253057.1106318503, 6.043877104229595, 0));
                scenicList.push(new Scenery("selvaTree", 3108.614704593234, -252315.87515262308, 1.5220300765871984, 0));
                scenicList.push(new Scenery("selvaTree", 3735.730807235009, -251482.15964986433, 0.4079643792227268, 0));
                scenicList.push(new Scenery("selvaTree", 3087.2310583473036, -251526.44544775903, 0.8363891229204039, 0));
                scenicList.push(new Scenery("selvaTree", 4580.973585243788, -250882.50018668317, 5.195985692458598, 0));
                scenicList.push(new Scenery("selvaTree", 6495.772953830459, -254340.19621687033, 5.312691666282804, 0));
                scenicList.push(new Scenery("selvaTree", 5722.799273221719, -254934.92444984714, 3.7433006997825298, 0));
                scenicList.push(new Scenery("selvaTree", 6385.775809154995, -255706.03648594135, 5.990083052947872, 0));
                scenicList.push(new Scenery("selvaTree", 6683.087468342642, -256404.1330817209, 3.8311265308925315, 0));
                scenicList.push(new Scenery("selvaTree", 5735.189360733252, -257159.73169702923, 3.6880057475577, 0));
                scenicList.push(new Scenery("selvaTree", 5979.992737801118, -258200.9576693212, 3.6143684631721746, 0));
                scenicList.push(new Scenery("selvaTree", 6853.248715529339, -258479.30797243607, 5.0301668878086065, 0));
                scenicList.push(new Scenery("selvaTree", 6644.429422501719, -257852.05915022007, 3.667066461151423, 0));
                scenicList.push(new Scenery("selvaTree", 6780.462118799346, -257264.10421755473, 2.4045713735564975, 2));
                scenicList.push(new Scenery("selvaTree", 6251.381815202852, -256772.17798497836, 6.218968242224176, 0));
                scenicList.push(new Scenery("selvaTree", 5293.7453700761, -256519.6035050023, 2.4841741258915837, 0));
                scenicList.push(new Scenery("selvaTree", 5748.219368819785, -256150.25798686338, 1.6906653857174694, 0));
                scenicList.push(new Scenery("selvaTree", 6581.258380564351, -255008.4291945751, 6.1939711267894, 0));
                scenicList.push(new Scenery("selvaTree", 5880.146959704902, -254443.8412385178, 6.275351198675648, 0));
                scenicList.push(new Scenery("selvaTree", 5278.438912100954, -254508.7727106601, 0.5928788509446048, 0));
                scenicList.push(new Scenery("selvaTree", 5552.377867774384, -253925.26415812355, 1.0879219082461542, 0));
                scenicList.push(new Scenery("selvaTree", 4773.905894029834, -252894.55506110092, 5.8236599923803425, 0));
                scenicList.push(new Scenery("selvaTree", 4281.256522625675, -252355.82451762698, 2.7842691254072, 0));
                scenicList.push(new Scenery("selvaTree", 3657.8439480619827, -252811.2788044237, 4.866959414562605, 0));
                scenicList.push(new Scenery("selvaTree", 4432.625214848347, -251543.19419915098, 3.71591081322966, 0));
                scenicList.push(new Scenery("selvaTree", 4097.542379833448, -251126.92640577685, 3.748635836162227, 0));
                scenicList.push(new Scenery("selvaTree", 2351.5588488907097, -251838.21134829673, 1.748302869366682, 0));
                scenicList.push(new Scenery("selvaTree", 2520.2237166755126, -252502.70469679424, 0.8304432838982438, 0));
                scenicList.push(new Scenery("selvaTree", 1944.3748887867112, -253111.70161893242, 1.0404580081469756, 0));
                scenicList.push(new Scenery("selvaTree", 836.7429869063333, -251180.51635720683, 2.04362930746369, 0));
                scenicList.push(new Scenery("selvaTree", 383.66032668124694, -250604.27956991768, 1.4914536200199955, 0));
                scenicList.push(new Scenery("selvaTree", 940.3718964269797, -249944.58416288398, 5.114512051611714, 0));
                scenicList.push(new Scenery("selvaTree", -669.0349044816282, -249796.5937283346, 4.0650954565945066, 0));
                scenicList.push(new Scenery("selvaTree", -1001.6203807781359, -250375.42180243335, 5.855305559784621, 0));
                scenicList.push(new Scenery("selvaTree", -1558.214790028353, -249414.61841771886, 2.830623268590036, 0));
                scenicList.push(new Scenery("selvaTree", -1640.2836796449317, -248882.00728436347, 4.41044832880805, 0));
                scenicList.push(new Scenery("selvaTree", -2797.8563631159227, -250497.43235436414, 5.313701603170505, 0));
                scenicList.push(new Scenery("selvaTree", -2964.113153322586, -251031.88136294368, 4.205408403524591, 0));
                scenicList.push(new Scenery("selvaTree", -847.0083036833544, -252466.88438610133, 4.088978776219057, 0));
                scenicList.push(new Scenery("selvaTree", -1240.3430270179103, -252199.7698296474, 2.734741508135528, 0));
                scenicList.push(new Scenery("selvaTree", -1565.4419864911195, -252508.05747775204, 4.201009509655514, 0));
                scenicList.push(new Scenery("selvaTree", -2219.2343402667975, -252288.4143330023, 2.936113051832877, 0));
                scenicList.push(new Scenery("selvaTree", -2484.611584705608, -253735.49680790384, 6.051023754544802, 0));
                scenicList.push(new Scenery("selvaTree", -2711.7953666003473, -254463.96180157148, 6.231811809769001, 0));
                scenicList.push(new Scenery("selvaTree", -2981.95164312666, -254986.07125880112, 2.75879333463681, 0));
                scenicList.push(new Scenery("selvaTree", -1970.4308175696663, -254953.95089603803, 4.377511707181976, 0));
                scenicList.push(new Scenery("selvaTree", -1645.0651961120136, -255812.83142353798, 5.3202428936557995, 0));
                scenicList.push(new Scenery("selvaTree", -2531.3426646404178, -255981.00428622327, 4.63660578831834, 0));
                scenicList.push(new Scenery("selvaTree", -3160.0512409300145, -255582.39474332813, 5.536628683002516, 0));
                scenicList.push(new Scenery("selvaTree", -2806.765202106457, -256949.1098443605, 3.9656334643693536, 0));
                scenicList.push(new Scenery("selvaTree", -2323.8201389538617, -257902.73363788665, 1.030051127820196, 0));
                scenicList.push(new Scenery("selvaTree", -1522.3415049533646, -257676.0440359007, 0.15333814375925334, 0));
                scenicList.push(new Scenery("selvaTree", -919.9767854956742, -258428.79092357602, 4.259632473459805, 0));
                scenicList.push(new Scenery("selvaTree", -437.26093120608044, -257871.5191858341, 1.7352982380205602, 0));
                scenicList.push(new Scenery("selvaTree", 379.3614769688877, -257899.49792318614, 4.001777123643534, 0));
                scenicList.push(new Scenery("selvaTree", 921.801123874908, -258407.16747822537, 5.3278178307299076, 0));
                scenicList.push(new Scenery("selvaTree", 1525.3081747557903, -257839.0107228158, 3.5285453936068847, 0));
                scenicList.push(new Scenery("selvaTree", 2416.702320984506, -258102.51764896244, 0.6539298207764518, 0));
                scenicList.push(new Scenery("selvaTree", 2915.1137847166337, -258542.57340941636, 4.216784513681946, 0));
                scenicList.push(new Scenery("selvaTree", 3607.804465228051, -258272.5057290578, 5.9899570242983735, 0));
                scenicList.push(new Scenery("selvaTree", 3312.7676228725186, -257312.43941299466, 5.425313393356877, 0));
                scenicList.push(new Scenery("selvaTree", -11.154031571499306, -258448.9695590165, 4.241159964302481, 0));
                scenicList.push(new Scenery("selvaTree", -1775.5406782773439, -258446.49589804508, 0.4469256511075874, 0));
                scenicList.push(new Scenery("selvaTree", -2829.0657055766433, -258280.83066773097, 1.4298305427164388, 0));
                scenicList.push(new Scenery("selvaTree", -2026.6513666785193, -257178.52166551055, 3.737290537199293, 0));
                scenicList.push(new Scenery("selvaTree", -810.4397795237, -256450.83375941883, 5.082355695005325, 0));
                scenicList.push(new Scenery("selvaTree", 401.4382729426939, -256566.01844203332, 0.6519850977159178, 0));
                scenicList.push(new Scenery("selvaTree", 1934.3012146606823, -256640.86999290177, 2.818992567444041, 0));
                scenicList.push(new Scenery("selvaTree", 3458.2455956828394, -256439.03980358364, 4.997132686016105, 0));
                scenicList.push(new Scenery("selvaTree", 5259.589449380638, -257888.63355777654, 3.7509529725290394, 0));
                scenicList.push(new Scenery("selvaTree", 4693.57009867238, -256932.10305935098, 5.983825998514841, 0));
                scenicList.push(new Scenery("selvaTree", 4349.2935851881875, -256079.5235209511, 5.474264896846488, 0));
                scenicList.push(new Scenery("selvaTree", 5411.662495403029, -255608.30902634596, 1.605208877153785, 0));
                scenicList.push(new Scenery("selvaTree", 4157.988241023094, -254761.31110168734, 5.396809844276266, 0));
                scenicList.push(new Scenery("selvaTree", 4292.846614542767, -253794.7916161354, 4.522167859292947, 0));
                scenicList.push(new Scenery("selvaTree", 3407.8776477125134, -254762.02197002296, 5.103113156484063, 0));
                scenicList.push(new Scenery("selvaTree", 2858.7320079762108, -255431.64613256385, 4.011280105526692, 0));
                scenicList.push(new Scenery("selvaTree", 2071.6354182480013, -255277.34453505388, 2.3034788776811315, 0));
                scenicList.push(new Scenery("selvaTree", 1772.1769386152368, -255979.31065963057, 0.7057635143372247, 0));
                scenicList.push(new Scenery("selvaTree", 790.7630514011614, -255619.2474215526, 4.720270758235706, 0));
                scenicList.push(new Scenery("selvaTree", -830.8413145282921, -256078.52038297386, 0.03599938818758201, 0));
                scenicList.push(new Scenery("selvaTree", -452.65804407418386, -254411.95945744685, 0.5578103103928148, 0));
                scenicList.push(new Scenery("selvaTree", 339.82684825893625, -254605.67290348347, 5.364243907670214, 0));
                scenicList.push(new Scenery("selvaTree", -2165.233353209309, -257301.67536599791, 4.551691457135184, 0));
                scenicList.push(new Scenery("selvaTree", -224.4036165698901, -257162.76058616757, 0.6178868297950785, 0));
                scenicList.push(new Scenery("selvaTree", -1338.6898182706725, -257000.4192380961, 4.262882663405007, 0));
                scenicList.push(new Scenery("selvaTree", -1466.5934257866659, -256520.47007394148, 4.224729806457121, 0));
                scenicList.push(new Scenery("selvaTree", -2190.82388547088, -256502.240680529, 0.9809760812987186, 0));
                scenicList.push(new Scenery("selvaTree", -650.8505784190479, -255457.74277390743, 4.312794019132185, 0));
                scenicList.push(new Scenery("selvaTree", 78.03078634584824, -255873.14277192435, 3.3056161325748272, 0));
                scenicList.push(new Scenery("selvaTree", 976.7883780019133, -256179.7199937865, 5.3914640460607925, 0));
                scenicList.push(new Scenery("selvaTree", 1341.3086803582783, -256441.20790689997, 4.610750046778052, 0));
                scenicList.push(new Scenery("selvaTree", 847.6463186551164, -257125.72592789866, 0.24266495878962646, 0));
                scenicList.push(new Scenery("selvaTree", 1464.4447322181618, -257204.9252860935, 1.862843119775707, 0));
                scenicList.push(new Scenery("selvaTree", 2375.070585781404, -257387.87136956127, 5.449333053615748, 0));
                scenicList.push(new Scenery("selvaTree", 2616.310090594589, -256005.13107198256, 2.545096246873428, 0));
                scenicList.push(new Scenery("selvaTree", 3771.79325819661, -255686.49984086704, 3.1612825837645326, 0));
                scenicList.push(new Scenery("selvaTree", 4923.661411710811, -255073.8037705303, 3.3849108862986417, 0));
                scenicList.push(new Scenery("selvaTree", 4539.611573644943, -258401.71391000625, 4.624821054779157, 0));
                scenicList.push(new Scenery("selvaTree", 4060.6594417627352, -257627.64298973643, 4.455939803303608, 0));
                scenicList.push(new Scenery("selvaTree", 4570.913961285334, -257570.75512882433, 2.175442127499705, 0));
                scenicList.push(new Scenery("selvaTree", 5173.565741541433, -257216.388037263, 0.5154356130459489, 0));
                scenicList.push(new Scenery("selvaTree", 2492.0217240155794, -253515.79111471755, 3.226144426159153, 0));
                scenicList.push(new Scenery("selvaTree", 3492.9033647295464, -253387.40890089457, 4.43681953741826, 0));
                scenicList.push(new Scenery("selvaTree", 2925.5267709789828, -253854.51577974224, 3.6760241889916005, 0));
                scenicList.push(new Scenery("selvaTree", 2100.7714974759383, -254015.91840768256, 1.0082848725070124, 0));
                scenicList.push(new Scenery("selvaTree", 1518.6944396959886, -253800.06003913673, 0.8485666859534432, 0));
                scenicList.push(new Scenery("selvaTree", 1270.7985545294525, -254324.38393538282, 0.7803160602114233, 0));
                scenicList.push(new Scenery("selvaTree", 1692.4187846840275, -255029.02818113635, 1.4539349165214335, 0));
                scenicList.push(new Scenery("selvaTree", 891.668274960994, -253781.34757587212, 5.25398524971118, 0));

                scenicList.push(new Scenery("selvaTree", 5979.992737801118, -258200.9576693212,3.6143684631721746, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", 6853.248715529339, -258479.30797243607,5.0301668878086065, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", -919.9767854956742, -258428.79092357602,4.259632473459805, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", 921.801123874908, -258407.16747822537,5.3278178307299076, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", 2416.702320984506, -258102.51764896244,0.6539298207764518, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", 2915.1137847166337, -258542.57340941636,4.216784513681946, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", 3607.804465228051, -258272.5057290578,5.9899570242983735, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", -11.154031571499306, -258448.9695590165,4.241159964302481, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", -1775.5406782773439, -258446.49589804508,0.4469256511075874, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", -2829.0657055766433, -258280.83066773097,1.4298305427164388, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", 4539.611573644943, -258401.71391000625,4.624821054779157, 0)); //copied s26
                scenicList.push(new Scenery("sonjaTree", 1796.7330490860352, -259412.53188916622,4.783685892220547, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", 2195.9792397866295, -258917.38816438202,1.929201977244369, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", 1585.840513707371, -258787.2264802032,3.04496646735412, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", 1166.029724666294, -259115.99156716684,0.2503730382105351, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", 487.4156375361485, -258987.29414101288,5.6561580355329495, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", -72.76207677549083, -259320.22938236475,3.1431809928550973, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", -733.835451698978, -259097.47640020883,2.4627269283360884, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", -1604.0624165881934, -259397.4150237329,2.3302344673672097, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", -1305.7886021416164, -258971.5209969915,4.7257891178084455, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", -2227.119582785373, -259146.0457605493,0.4213303857460939, 2)); //copied s26
                scenicList.push(new Scenery("selvaTree", -2729.148938242257, -258917.05425394422,4.261604606767215, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", 2742.4755207244225, -259346.0407465731,0.4518031817824075, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", 3683.4309832288473, -258934.04032359438,1.479930222072101, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", 4397.34231952278, -259169.7430568225,1.470462915751245, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", 5490.944903023085, -258846.48858048374,1.512365552174078, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", 5186.1909211948305, -259455.42418295806,5.462872230197226, 0)); //copied s26


                //REGION CREATION
                //Build AI Units
                //ArtificialIntelligenceAccess.push(new Unit(3000, 2500, "ZafBeetle", true, "Tzalit"));
                //scenicList.push(new Scenery("vinePatch", 3500, 2500, 0, 1));
                //scenicList.push(new Scenery("cerebrisPlant", 3500, 2500, 0, 1));
                //scenicList.push(new Scenery("gojiiPlant", 3500, 2500, 0, true));
                //scenicList.push(new Scenery("bahabPlant", 3500, 2500, 0, true));
                //scenicList.push(new Scenery("araneaDen", 3500, 2500, 0, false, true));
                //ArtificialIntelligenceAccess.push(new Unit(3000, 2500, "Gorgon", false, "Gra"));
                //ArtificialIntelligenceAccess.push(new Unit(3000, 2500, "Cruorcca", "massive", "Cruor"));
                //ArtificialIntelligenceAccess.push(new Unit(3908, 2500, "Kigarii", true, "Apex"));
                //ArtificialIntelligenceAccess.push(new Unit(3600, 2500, "Crenid", "massive", "Bulgg"));
                //scenicList.push(new Scenery("athergmPlant", 3990, 2500, 0, 1));
                //scenicList.push(new Scenery("decipulaBasePlant", 3670, 2500, 0, "massive"));
                //ArtificialIntelligenceAccess.push(new Unit(4522.335247873034, -249275.47102745296, "Zancudo", false, "proboscis"));
                //ArtificialIntelligenceAccess.push(new Unit(3550, 2500, "Venandi", true, "hunter"));
                //ArtificialIntelligenceAccess.push(new Unit(3570, 2500, "EtyrVenandi", true, "scout"));
                //ArtificialIntelligenceAccess.push(new Unit(3570, 2500, "AraneaVenandi", true, "tank"));
                //scenicList.push(new Scenery("valumPlant", 3990, 2500, 0, 1));
                //scenicList.push(new Scenery("decipulaPlant", 3670, 2500, 0, true));
                //ArtificialIntelligenceAccess.push(new Unit(3613, -240174, "Gorgon", false, "Gra"));
                //ArtificialIntelligenceAccess.push(new Unit(3700, 2500, "Boa", false, "constricto"));
                //ArtificialIntelligenceAccess.push(new Unit(3600, 2500, "PoisonDartFrog", true, "coqui"));
                //scenicList.push(new Scenery("sonjaTree", 3600, 2500, 0, true));
                //scenicList.push(new Scenery("matnaWeb", 3600, 2500, 0, 2.1));
                //ArtificialIntelligenceAccess.push(new Unit(3600, 2500, "Matna", false, "deathByter"));
                //ArtificialIntelligenceAccess.push(new Unit(3600, 2500, "Babosa", true, "Glubber", {patrolStops: 3, patrolLoop: true, route:[[3600, 2500], [3500, 2550], [3650, 2600]]}));
                //scenicList.push(new Scenery("pyromothWeb", 3700, 2500, 0, 1, true));
                //ArtificialIntelligenceAccess.push(new Unit(3700, 2500, "Pyromoth", true, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[3600, 2500], [3500, 2550], [3650, 2600]]}));
                //scenicList.push(new Scenery("crilkPlant", 3600, 2500, 3.2, true));
                //ArtificialIntelligenceAccess.push(new Unit(3500, 2500, "BlackTroll", false, "Brufga"));
                //scenicList.push(new Scenery("overVines", 3600, 2500, 0, 4, 1));
                //scenicList.push(new Scenery("webVictim", 3600, 2500, 0, 3, 1));
                //scenicList.push(new Scenery("jungleStuff", 3600, 2500, 0.23, 2, 1));
                //scenicList.push(new Scenery("selvaTree", 3600, 2500, 0, 0));
                //ArtificialIntelligenceAccess.push(new Unit(2000, -240000, "Gulfrey", true, "Guld"));
                //ArtificialIntelligenceAccess.push(new Unit(5012, -240944, "Torper", true, "Shankstripes"));
                //ArtificialIntelligenceAccess.push(new Unit(1194, -240231, "Etyr", true, "Blackeye"));
                //scenicList.push(new Scenery("blilPlant", 2389 , -239760, 6.78, true));
                //scenicList.push(new Scenery("vinePatch", 3500, 2500, 0, 1));
                //ArtificialIntelligenceAccess.push(new Unit(3550, 2500, "Venandi", true, "hunter"));
                //ArtificialIntelligenceAccess.push(new Unit(3570, 2500, "EtyrVenandi", true, "scout"));
                //ArtificialIntelligenceAccess.push(new Unit(3570, 2500, "AraneaVenandi", true, "tank"));
                //ArtificialIntelligenceAccess.push(new Unit(3500, 2500, "Borea", true, "Ipskwich"));
                //ArtificialIntelligenceAccess.push(new Unit(3500, 2500, "Salisea", false, "Digit"));

                //Animals
                ArtificialIntelligenceAccess.push(new Unit(3445.9937948417128, -248811.02452374334, "Etyr", true, "Blackeye"));
                ArtificialIntelligenceAccess.push(new Unit(3378.2560697414783, -248735.71879514208, "Etyr", false, "Blackeye"));
                ArtificialIntelligenceAccess.push(new Unit(3064.6843568289005, -248797.19562605474, "Etyr", false, "Blackeye"));
                ArtificialIntelligenceAccess.push(new Unit(3218.5853797684417, -249040.96146032837, "Etyr", false, "Blackeye"));

                ArtificialIntelligenceAccess.push(new Unit(2210.2339904839855, -251923.15386484528, "Etyr", true, "Blackeye"));
                ArtificialIntelligenceAccess.push(new Unit(2083.5565302200207, -251749.87536716665, "Etyr", false, "Blackeye"));

                ArtificialIntelligenceAccess.push(new Unit(4522.335247873034, -249275.47102745296, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(5245.7840475599, -249002.26318939513, "Zancudo", true, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(5988.993678357919, -248986.18119487033, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(5974.264268155306, -258414.9150131341, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(4369.517375014708, -257765.9490706217, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(2484.9103005752104, -257916.8672380956, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(4227.771846210647, -256040.4862948412, "Zancudo", false, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(3927.249698799146, -255717.7173744563, "Zancudo", false, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(-2386.4575874353795, -256403.94779749378, "Zancudo", false, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(-1286.9892407217499, -256522.78946112926, "Zancudo", false, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(968.6318177409056, -253842.36825434677, "Zancudo", true, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(-2534.7791468696405, -252960.60059629858, "Zancudo", true, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(2818.7042154681976, -255153.2935205221, "EtyrVenandi", true, "scout"));
                ArtificialIntelligenceAccess.push(new Unit(2671.2164891909074, -255292.1012346063, "EtyrVenandi", false, "scout"));
                ArtificialIntelligenceAccess.push(new Unit(2902.816047285979, -255315.77430001108, "EtyrVenandi", false, "scout"));
                ArtificialIntelligenceAccess.push(new Unit(3177.707680906615, -254822.9671098343, "EtyrVenandi", false, "scout"));

                ArtificialIntelligenceAccess.push(new Unit(1431.1862403622229, -253429.89739009054, "EtyrVenandi", true, "scout"));
                ArtificialIntelligenceAccess.push(new Unit(1725.3126188806943, -253119.98011757596, "EtyrVenandi", false, "scout"));

                scenicList.push(new Scenery("decipulaPlant", 4601.666005180314, -256350.75173208362, 6, true));

                scenicList.push(new Scenery("decipulaPlant", 2906.6841954716224, -252647.1057315692, -0.1, true));

                scenicList.push(new Scenery("decipulaBasePlant", 4917.808613483976, -253960.67848881765, 2.2, true));

                scenicList.push(new Scenery("decipulaBasePlant", 4839.920247166196, -254157.50239975366, 0.68, false));

                scenicList.push(new Scenery("decipulaBasePlant", 4042.1620365485305, -254329.32969166574, -1, true));

                scenicList.push(new Scenery("decipulaBasePlant", 3135.7316836046625, -252679.282199154, 1.56, false));

                scenicList.push(new Scenery("blilPlant", 928.805225433131, -251603.64983384093, 19, true));

                scenicList.push(new Scenery("blilPlant", -470.9390016003971, -251318.1865111086, 19, true));

                scenicList.push(new Scenery("gojiiPlant", 2770.1966475281256, -250765.70181540382, 6.4, true));


                ArtificialIntelligenceAccess.push(new Unit(6287.677962858545, -251578.3457090744, "Gulfrey", false, "Guld"));

                ArtificialIntelligenceAccess.push(new Unit(6150.954646791944, -252941.79522302054, "Gulfrey", true, "Guld"));

                ArtificialIntelligenceAccess.push(new Unit(5818.499268977176, -250152.70102112732, "Boa", false, "constricto"));
                ArtificialIntelligenceAccess.push(new Unit(401.5755647431258, -251827.83444990648, "Boa", false, "constricto"));
                ArtificialIntelligenceAccess.push(new Unit(-1983.983267393181, -253414.0857372819, "Boa", true, "constricto"));

                ArtificialIntelligenceAccess.push(new Unit(4446.374237409595, -250096.0665275809, "PoisonDartFrog", false, "coqui"));
                ArtificialIntelligenceAccess.push(new Unit(4918.865336039311, -249334.1191245097, "PetraBeetle", true, "Iga"));
                ArtificialIntelligenceAccess.push(new Unit(5330.174224406059, -254656.35830746597, "PetraBeetle", false, "Iga"));
                ArtificialIntelligenceAccess.push(new Unit(5486.8931539221985, -255208.8046815171, "PoisonDartFrog", true, "coqui"));
                ArtificialIntelligenceAccess.push(new Unit(3527.6287857059256, -258051.18387233923, "PoisonDartFrog", false, "coqui"));

                ArtificialIntelligenceAccess.push(new Unit(-42.148252494938475, -252465.82709270593, "PetraBeetle", true, "Iga"));

                ArtificialIntelligenceAccess.push(new Unit(3797.647283318696, -254603.4638844468, "PoisonDartFrog", true, "coqui"));

                ArtificialIntelligenceAccess.push(new Unit(5976.562842027705, -254038.84765659654, "Gorgon", false, "Grag"));

                ArtificialIntelligenceAccess.push(new Unit(5596.29590266698, -253308.6296209968, "Cruorcca", "massive", "Cruor"));
                ArtificialIntelligenceAccess.push(new Unit(5805.461467183113, -253548.12888844643, "Cruorcca", true, "Cruor"));
                ArtificialIntelligenceAccess.push(new Unit(5349.276018270936, -253561.84237107344, "Cruorcca", "massive", "Cruor"));

                ArtificialIntelligenceAccess.push(new Unit(3052.6837105219765, -257981.83504572362, "BlackTroll", false, "Brufga"));
                ArtificialIntelligenceAccess.push(new Unit(3034.4679006244737, -257752.88075363528, "BlackTroll", true, "Brufga"));
                ArtificialIntelligenceAccess.push(new Unit(2759.784596878349, -257604.03156693772, "BlackTroll", false, "Brufga"));

                ArtificialIntelligenceAccess.push(new Unit(4047.070363262499, -257008.74193077037, "BlackTroll", false, "Brufga"));
                ArtificialIntelligenceAccess.push(new Unit(3654.3046109881698, -256870.5277052209, "BlackTroll", true, "Brufga"));

                ArtificialIntelligenceAccess.push(new Unit(4579.118372694415, -254090.37668813663, "ZafBeetle", false, "Tzalit"));

                ArtificialIntelligenceAccess.push(new Unit(-1941.9101368561446, -249734.0552648165, "ZafBeetle", true, "Tzalit"));

                scenicList.push(new Scenery("matnaWeb", -1248.7928445856437, -250229.13664057758, 0, 3));
                scenicList.push(new Scenery("matnaWeb", -1192.7041202125167, -250331.19437722332, 5, 2.25));
                scenicList.push(new Scenery("matnaWeb", -1302.3371301321313, -250171.2990506931, 10, 1.9));
                ArtificialIntelligenceAccess.push(new Unit(-1248.7928445856437, -250229.13664057758, "Matna", true, "donh"));
                ArtificialIntelligenceAccess.push(new Unit(-1258.7928445856437, -250220.13664057758, "Matna", false, "gonh"));
                ArtificialIntelligenceAccess.push(new Unit(-1240.7928445856437, -250230.13664057758, "Matna", false, "lohn"));

                //vines
                scenicList.push(new Scenery("overVines", 4176.211064004871, -249875.37758651574, -0.6, 4, 5));
                scenicList.push(new Scenery("overVines", 4205.041307447935, -249877.0530990496, -0.2 + 1/2 * Math.PI, 2, 1.8));
                scenicList.push(new Scenery("overVines", 5993.105890889222, -249986.53550639257, 4 + 1/2 * Math.PI, 3, 3));
                scenicList.push(new Scenery("overVines", 3692.4781160015277, -257875.72605335293, 13.55, 1, 1.15));
                scenicList.push(new Scenery("overVines", 3584.177606416626, -257667.2203066686, 13.55, 2, 0.9));
                scenicList.push(new Scenery("overVines", 3584.177606416626, -257650.2003066686, 14, 2, 1));
                scenicList.push(new Scenery("overVines", -1225.4959841553357, -255930.28946210223, 9.2, 4, 2.1));

                scenicList.push(new Scenery("overVines", 4153.253896170796, -251844.3766493973, 11.2, 1, 2.22));

                scenicList.push(new Scenery("overVines", 1317.3641263230081, -250944.46659946014, 1, 2, 1));

                scenicList.push(new Scenery("vinePatch", 3761.8477439753106, -257934.4524329317, 2, 2.5));
                scenicList.push(new Scenery("vinePatch", 3752.9309638174295, -257853.31446300584, 1, 2.6));
                scenicList.push(new Scenery("vinePatch", 3647.598629428478, -257928.13561149355, 0.7, 2.4));

                scenicList.push(new Scenery("vinePatch", 4497.97218409932, -254863.509567, 8, 2.2));
                scenicList.push(new Scenery("vinePatch", 4643.781255676743, -254890.77543502665, 9.8, 2.1));
                scenicList.push(new Scenery("vinePatch", 4559.684842958875, -254895.29172090703, 3, 3));
                scenicList.push(new Scenery("vinePatch", 4777.977832666722, -254960.24345582732, 5, 3.2));

                scenicList.push(new Scenery("vinePatch", 4360.092795484291, -254721.6548654766, 11.5, 4));

                scenicList.push(new Scenery("vinePatch", 4653.225034382625, -254971.5894830742, 7, 2.1));
                scenicList.push(new Scenery("vinePatch", 4420.359198118161, -254805.85273277925, 6, 2.3));
                scenicList.push(new Scenery("vinePatch", 4209.195042176571, -254715.18097234968, 4.3, 2.9));
                scenicList.push(new Scenery("vinePatch", 4841.87246986231, -255054.28928447817, 2.1, 2.5));
                scenicList.push(new Scenery("vinePatch", 4902.939307001633, -254971.56741410802, 46, 2.8));
                scenicList.push(new Scenery("vinePatch", 4528.985418810061, -255017.30237312702, 22, 2.7));
                scenicList.push(new Scenery("vinePatch", 4640.544381816028, -255067.68225871224, 1, 3.1));

                //Plants
                scenicList.push(new Scenery("blilPlant", 4079.2539998820657, -249674.53841142682, 8.78, true));
                scenicList.push(new Scenery("valumPlant", 5439.078259634222, -249399.13330422374, 2.5, 1));

                scenicList.push(new Scenery("valumPlant", 4677.80333582715, -255519.53964371927, 5, 1));

                scenicList.push(new Scenery("athergmPlant", 5765.898095030428, -252421.8849911782, 9, 1));

                scenicList.push(new Scenery("athergmPlant", -1983.6863734291167, -256165.1402124825, 1.111, 1));

                scenicList.push(new Scenery("blilPlant", 938.544314569325, -255619.89714910672, 7.04, true));

                scenicList.push(new Scenery("gojiiPlant", 5398.362051521597, -256930.91767361204, 2.7, true));

                scenicList.push(new Scenery("gojiiPlant", -547.4516230096013, -257483.6529623042, 9.15, true));

                ArtificialIntelligenceAccess.push(new Unit(5769.236799809854, -257690.7503437623, "Borea", true, "tigi"));
                ArtificialIntelligenceAccess.push(new Unit(1976.8678403753383, -253607.6456871002, "Borea", false, "tigi"));

                ArtificialIntelligenceAccess.push(new Unit(-437.1812190299004, -252671.83320459694, "Borea", true, "tigi"));

                ArtificialIntelligenceAccess.push(new Unit(4983.8322071547955, -257472.749373676, "Lizard", true, "Lib"));

                scenicList.push(new Scenery("cerebrisPlant", 3192.3747333010974, -254330.58311550645, 9, 1));

                scenicList.push(new Scenery("morshPlant", 4076.326185347622, -256705.3338885674, 1.7, true));

                scenicList.push(new Scenery("morshPlant", -957.3711897922115, -253463.12969949513, 7.7, true));

                scenicList.push(new Scenery("cerebrisPlant", 3199.7340465856455, -256030.34867801843, 5.4, 1));

                scenicList.push(new Scenery("morshPlant", -1004.7625750646035, -257582.76304277914, 1.7, true));

                scenicList.push(new Scenery("cerebrisPlant", 3377.7663867284036, -255775.4374193447, 5.4, 1));

                ArtificialIntelligenceAccess.push(new Unit(5185.783411503336, -256236.1306402805, "Salisea", false, "Digit"));

                ArtificialIntelligenceAccess.push(new Unit(5303.405695744353, -256043.20809766892, "Salisea", true, "Digit"));

                ArtificialIntelligenceAccess.push(new Unit(5237.064608913608, -255812.2882042722, "Salisea", false, "Digit"));

                ArtificialIntelligenceAccess.push(new Unit(4813.402884277566, -256136.27847603254, "Salisea", false, "Digit"));

                ArtificialIntelligenceAccess.push(new Unit(4983.040380913248, -255852.3231301714, "Salisea", true, "Digit"));

                ArtificialIntelligenceAccess.push(new Unit(4920.851429815205, -254796.42544913423, "Salisea", false, "Digit"));

                ArtificialIntelligenceAccess.push(new Unit(1332.7272896363847, -252534.48254372375, "Salisea", false, "Digit"));

                ArtificialIntelligenceAccess.push(new Unit(1143.2746294494034, -251623.0470016015, "Salisea", false, "Digit"));

                scenicList.push(new Scenery("crilkPlant", 4601.2533009915505, -254422.26613629196, 5.5, true));

                scenicList.push(new Scenery("cerebrisPlant", 3332.4252864554933, -255358.86283795183, 2, 1));

                scenicList.push(new Scenery("cerebrisPlant", 2927.2769639881544, -254921.36930091857, 0.43, 1));

                scenicList.push(new Scenery("araneaDen", 3134.5020319808045, -254327.52477417636, Math.PI, true, true));

                scenicList.push(new Scenery("crilkPlant", 2060.8792587665985, -251568.2397045376, 7.65, true));

                scenicList.push(new Scenery("morshPlant", 3140.35175226548, -253585.08383289012, -2.9, true));

                scenicList.push(new Scenery("cerebrisPlant", 2565.746574414494, -254012.01188481625, 3.3, 1));

                scenicList.push(new Scenery("cerebrisPlant", 2169.3137742613694, -253661.561882547, 10, 1));

                scenicList.push(new Scenery("cerebrisPlant", 3849.1438243434254, -252338.24101279047, 10.2, 1));

                scenicList.push(new Scenery("cerebrisPlant", 1876.0305538267555, -253488.38386774098, 13, 1));

                scenicList.push(new Scenery("araneaDen", -1150.8835197182443, -254445.83047639337, Math.PI, false, true));

                scenicList.push(new Scenery("crilkPlant", -240.64530807585157, -254825.4569521544, 5.5, true));

                scenicList.push(new Scenery("bahabPlant", -390.03545873242507, -255335.15816940938, 0, true));

                scenicList.push(new Scenery("bahabPlant", -611.85006520677, -255250.87910371964, 0, true));

                scenicList.push(new Scenery("bahabPlant", 484.32995323706837, -256078.03564881184, 0, true));

                scenicList.push(new Scenery("bahabPlant", -341.0186570461173, -256642.96210773356, 0, true));

                scenicList.push(new Scenery("blilPlant", 3788.235695272241, -252193.8129117763, 9.04, true));

                scenicList.push(new Scenery("blilPlant", 4788.8583005135715, -251296.63073078293, 13.1, true));

                scenicList.push(new Scenery("bahabPlant", 3830.131335971431, -248739.98899903114, 10.2, true));


                ArtificialIntelligenceAccess.push(new Unit(-811.139112670939, -256655.17619560743, "Salisea", true, "Digit"));

                ArtificialIntelligenceAccess.push(new Unit(-676.8786353866498, -256529.3197564452, "Salisea", false, "Digit"));

                ArtificialIntelligenceAccess.push(new Unit(-383.77554895651366, -257091.94101076867, "Salisea", false, "Digit"));

                change = "s25";
            }
        }
        else if (region == "s26") //Silvestre third of the jungle
        {
            if (change != "s26")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        //console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        //console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                scenicList.push(new Scenery("selvaTree", 5979.992737801118, -258200.9576693212,3.6143684631721746, 0)); //copied s25
                scenicList.push(new Scenery("selvaTree", 6853.248715529339, -258479.30797243607,5.0301668878086065, 0)); //copied s25
                scenicList.push(new Scenery("selvaTree", -919.9767854956742, -258428.79092357602,4.259632473459805, 0)); //copied s25
                scenicList.push(new Scenery("selvaTree", 921.801123874908, -258407.16747822537,5.3278178307299076, 0)); //copied s25
                scenicList.push(new Scenery("selvaTree", 2416.702320984506, -258102.51764896244,0.6539298207764518, 0)); //copied s25
                scenicList.push(new Scenery("selvaTree", 2915.1137847166337, -258542.57340941636,4.216784513681946, 0)); //copied s25
                scenicList.push(new Scenery("selvaTree", 3607.804465228051, -258272.5057290578,5.9899570242983735, 0)); //copied s25
                scenicList.push(new Scenery("selvaTree", -11.154031571499306, -258448.9695590165,4.241159964302481, 0)); //copied s25
                scenicList.push(new Scenery("selvaTree", -1775.5406782773439, -258446.49589804508,0.4469256511075874, 0)); //copied s25
                scenicList.push(new Scenery("selvaTree", -2829.0657055766433, -258280.83066773097,1.4298305427164388, 0)); //copied s25
                scenicList.push(new Scenery("selvaTree", 4539.611573644943, -258401.71391000625,4.624821054779157, 0)); //copied s25

                //trees
                scenicList.push(new Scenery("sonjaTree", -1098.8326396219063, -265409.766106384, 1.04399899646541, 0));
                scenicList.push(new Scenery("sonjaTree", 169.5603609401237, -264915.143796942, 5.179040164905984, 0));
                scenicList.push(new Scenery("sonjaTree", 595.0142411826399, -264373.1834101587, 0.6351892933526592, 0));
                scenicList.push(new Scenery("sonjaTree", -102.65235021448, -263884.67728246556, 3.828615755005252, 0));
                scenicList.push(new Scenery("sonjaTree", 1522.7793042570115, -259770.6733800629, 2.265286473977714, 0));
                scenicList.push(new Scenery("sonjaTree", 1796.7330490860352, -259412.53188916622, 4.783685892220547, 0));
                scenicList.push(new Scenery("sonjaTree", 2303.9855199505414, -259538.0573479494, 2.178774366738636, 0));
                scenicList.push(new Scenery("sonjaTree", 4532.352337890427, -260697.91337492247, 2.743562556174455, 0));
                scenicList.push(new Scenery("sonjaTree", 6731.827842214851, -264194.5234148736, 0.8609703310231208, 0));
                scenicList.push(new Scenery("sonjaTree", 5487.2730912011475, -265407.7385954542, 1.2531468967053414, 0));
                scenicList.push(new Scenery("sonjaTree", -970.5323870141946, -267358.07602774317, 3.0825778088635296, 0));
                scenicList.push(new Scenery("sonjaTree", -664.1342136168482, -266556.22634653246, 3.667525535952872, 0));

                scenicList.push(new Scenery("selvaTree", 2195.9792397866295, -258917.38816438202, 1.929201977244369, 0));
                scenicList.push(new Scenery("selvaTree", 1585.840513707371, -258787.2264802032, 3.04496646735412, 0));
                scenicList.push(new Scenery("selvaTree", 1166.029724666294, -259115.99156716684, 0.2503730382105351, 0));
                scenicList.push(new Scenery("selvaTree", 487.4156375361485, -258987.29414101288, 5.6561580355329495, 0));
                scenicList.push(new Scenery("selvaTree", -72.76207677549083, -259320.22938236475, 3.1431809928550973, 0));
                scenicList.push(new Scenery("selvaTree", -733.835451698978, -259097.47640020883, 2.4627269283360884, 0));
                scenicList.push(new Scenery("selvaTree", -657.4099706646189, -259744.16544638426, 5.329386854868633, 0));
                scenicList.push(new Scenery("selvaTree", -1604.0624165881934, -259397.4150237329, 2.3302344673672097, 0));
                scenicList.push(new Scenery("selvaTree", -1305.7886021416164, -258971.5209969915, 4.7257891178084455, 0));
                scenicList.push(new Scenery("selvaTree", -2227.119582785373, -259146.0457605493, 0.4213303857460939, 2));
                scenicList.push(new Scenery("selvaTree", -2729.148938242257, -258917.05425394422, 4.261604606767215, 0));
                scenicList.push(new Scenery("selvaTree", -2955.1451727362264, -259579.6696669299, 3.143475802037798, 0));
                scenicList.push(new Scenery("selvaTree", -2294.5803932316953, -259915.13087924625, 5.141149209522408, 0));
                scenicList.push(new Scenery("selvaTree", -1620.735900639366, -259743.70595801243, 0.9056041504563416, 0));
                scenicList.push(new Scenery("selvaTree", -1082.3333258781488, -260387.2133453761, 0.8124307967770156, 0));
                scenicList.push(new Scenery("selvaTree", -1675.3003374339028, -260834.14584176347, 3.9644923734411597, 0));
                scenicList.push(new Scenery("selvaTree", -2548.568669590788, -260760.16905577588, 0.049527291900146986, 0));
                scenicList.push(new Scenery("selvaTree", -2975.805353970352, -260375.85734601214, 2.672386186360749, 0));
                scenicList.push(new Scenery("selvaTree", -2900.6311058416063, -261447.08099986077, 3.9139048070357463, 0));
                scenicList.push(new Scenery("selvaTree", -2155.746198373544, -261726.01235957563, 5.351693887914114, 0));
                scenicList.push(new Scenery("selvaTree", -2036.7530590218414, -261328.49060768672, 1.6208975132838346, 0));
                scenicList.push(new Scenery("selvaTree", -1173.1651313004215, -261303.8793797694, 0.8023825304804122, 0));
                scenicList.push(new Scenery("selvaTree", -1533.8696185176452, -261723.9033373287, 5.78524774913039, 0));
                scenicList.push(new Scenery("selvaTree", -773.1688844389653, -261763.96006876862, 3.686776383363518, 0));
                scenicList.push(new Scenery("selvaTree", -918.086015407789, -262307.1031630312, 0.5608473894171453, 0));
                scenicList.push(new Scenery("selvaTree", -1540.8656829741747, -262507.9311626861, 4.866721221852842, 0));
                scenicList.push(new Scenery("selvaTree", -2271.241509527436, -262291.7133104595, 5.673464397605758, 0));
                scenicList.push(new Scenery("selvaTree", -2279.955160732297, -262755.75894354755, 1.9544858299244123, 2));
                scenicList.push(new Scenery("selvaTree", -2835.6799284682106, -262501.6341247694, 5.928443838057688, 0));
                scenicList.push(new Scenery("selvaTree", -2792.598026084228, -262986.68339242047, 5.7262682637746884, 0));
                scenicList.push(new Scenery("selvaTree", -2314.7029050915453, -263211.08955057274, 1.6674937664452665, 0));
                scenicList.push(new Scenery("selvaTree", -2862.1936003800065, -263579.98291476804, 4.9941032116784125, 0));
                scenicList.push(new Scenery("selvaTree", -2265.829694508109, -263926.63532153337, 2.238118919761368, 0));
                scenicList.push(new Scenery("selvaTree", -1498.5512674497948, -263725.737770605, 5.859181368012981, 0));
                scenicList.push(new Scenery("selvaTree", -752.9552137474772, -263198.57951664436, 5.107292222377767, 0));
                scenicList.push(new Scenery("selvaTree", 81.77008161971911, -262625.5039468659, 2.4113325715625056, 0));
                scenicList.push(new Scenery("selvaTree", 541.6161371544656, -261770.18622387212, 2.7469704230885075, 0));
                scenicList.push(new Scenery("selvaTree", 385.00896118790956, -260512.40219183837, 4.626128706949016, 0));
                scenicList.push(new Scenery("selvaTree", -249.9453050862809, -260934.70197677647, 3.9541916672416186, 0));
                scenicList.push(new Scenery("selvaTree", -976.4784781592388, -260672.22493010416, 5.254764732277487, 0));
                scenicList.push(new Scenery("selvaTree", -240.06973123881247, -260137.83986909877, 4.696881376688082, 0));
                scenicList.push(new Scenery("selvaTree", 727.2615148503612, -259787.8994778215, 0.29750725155190333, 0));
                scenicList.push(new Scenery("selvaTree", 1535.9778920823885, -260453.37157566941, 3.4976888284266208, 0));
                scenicList.push(new Scenery("selvaTree", 2447.032251075087, -260077.37240400948, 0.7296087246631235, 0));
                scenicList.push(new Scenery("selvaTree", 2742.4755207244225, -259346.0407465731, 0.4518031817824075, 0));
                scenicList.push(new Scenery("selvaTree", 3683.4309832288473, -258934.04032359438, 1.479930222072101, 0));
                scenicList.push(new Scenery("selvaTree", 4397.34231952278, -259169.7430568225, 1.470462915751245, 0));
                scenicList.push(new Scenery("selvaTree", 5490.944903023085, -258846.48858048374, 1.512365552174078, 0));
                scenicList.push(new Scenery("selvaTree", 5186.1909211948305, -259455.42418295806, 5.462872230197226, 0));
                scenicList.push(new Scenery("selvaTree", 4579.517911967057, -259970.51385643327, 1.7393494494076132, 0));
                scenicList.push(new Scenery("selvaTree", 3871.313252317325, -260454.20085676538, 3.57640683582189, 0));
                scenicList.push(new Scenery("selvaTree", 3458.507824274936, -259888.07357225116, 2.0492513280821933, 0));
                scenicList.push(new Scenery("selvaTree", 3160.477886702632, -260575.8608624016, 0.44185684939648306, 0));
                scenicList.push(new Scenery("selvaTree", 3572.212111452034, -261027.54438953943, 5.860048721300801, 0));
                scenicList.push(new Scenery("selvaTree", 2922.4122508034006, -261392.0687900657, 2.7489559690175023, 0));
                scenicList.push(new Scenery("selvaTree", 2286.7759195560543, -260840.81899290948, 2.1301483586601133, 0));
                scenicList.push(new Scenery("selvaTree", 1506.4337710204748, -261467.98367176123, 1.2994988918542658, 0));
                scenicList.push(new Scenery("selvaTree", 677.8480334259341, -261130.16679790607, 2.4485711294733314, 2));
                scenicList.push(new Scenery("selvaTree", -256.4030096225395, -261320.19168795348, 0.7432677313228816, 0));
                scenicList.push(new Scenery("selvaTree", 6119.175267859392, -260235.54987266872, 0.06977083489696345, 0));
                scenicList.push(new Scenery("selvaTree", 6551.521269377119, -260899.30902816795, 5.317558814973565, 0));
                scenicList.push(new Scenery("selvaTree", 5848.803867836289, -261425.24655735516, 4.039578553812557, 0));
                scenicList.push(new Scenery("selvaTree", 5245.14244312392, -260772.04948815829, 4.637777287894734, 0));
                scenicList.push(new Scenery("selvaTree", 4322.76355421948, -261370.7246174034, 0.008037030533136275, 0));
                scenicList.push(new Scenery("selvaTree", 5111.288352480252, -261836.33314591256, 3.7190742316532677, 0));
                scenicList.push(new Scenery("selvaTree", 6088.737769204111, -262283.7459615118, 4.317310202927329, 0));
                scenicList.push(new Scenery("selvaTree", 6688.565814340128, -261988.08218684152, 4.566412448690218, 0));
                scenicList.push(new Scenery("selvaTree", 6602.266478240653, -262698.400026396, 2.5060778617117796, 0));
                scenicList.push(new Scenery("selvaTree", 6208.593256983087, -263031.61151572026, 1.1758949895451105, 0));
                scenicList.push(new Scenery("selvaTree", 6660.3952033480655, -263146.6844888692, 4.7886084999445115, 0));
                scenicList.push(new Scenery("selvaTree", 5871.427300351798, -263710.4076032107, 5.8484739560919525, 0));
                scenicList.push(new Scenery("selvaTree", 6492.541199503315, -263732.4509544618, 5.200480716761086, 0));
                scenicList.push(new Scenery("selvaTree", 6137.57736694447, -264304.16455201106, 5.903531958944568, 0));
                scenicList.push(new Scenery("selvaTree", 5463.886116651516, -264118.0005034292, 4.912074975443793, 0));
                scenicList.push(new Scenery("selvaTree", 5001.951871273673, -263574.7347059865, 1.9528587409735927, 0));
                scenicList.push(new Scenery("selvaTree", 5435.317324358327, -263108.58645778155, 5.039526171414164, 0));
                scenicList.push(new Scenery("selvaTree", 5613.459878791194, -262503.0193697893, 2.0709090964143213, 0));
                scenicList.push(new Scenery("selvaTree", 4638.944135500057, -262654.02022634214, 2.5899347124001735, 0));
                scenicList.push(new Scenery("selvaTree", 4014.300757466076, -263618.8346500672, 3.969252972777593, 0));
                scenicList.push(new Scenery("selvaTree", 4487.327696237593, -264746.02763862076, 6.03700211977033, 0));
                scenicList.push(new Scenery("selvaTree", 5057.131157014005, -265218.6701767484, 5.8077094875877835, 0));
                scenicList.push(new Scenery("selvaTree", 5745.406068444243, -265904.53787284874, 5.502683183032824, 0));
                scenicList.push(new Scenery("selvaTree", 6404.459619699003, -266363.74055466056, 1.1702395382367137, 0));
                scenicList.push(new Scenery("selvaTree", 6332.347041264317, -265288.8916103807, 2.040181133275652, 0));
                scenicList.push(new Scenery("selvaTree", 6874.90159077363, -265804.3147937464, 5.525290724238231, 0));
                scenicList.push(new Scenery("selvaTree", 6733.221467170367, -264671.27227349876, 4.531561161399204, 0));
                scenicList.push(new Scenery("selvaTree", 5639.175504776973, -264960.03320192144, 4.312664036560091, 0));
                scenicList.push(new Scenery("selvaTree", 5092.515481753799, -264422.06510359934, 2.789500125291215, 0));
                scenicList.push(new Scenery("selvaTree", 4523.156003325847, -263976.67648764665, 1.8023495674307668, 0));
                scenicList.push(new Scenery("selvaTree", 3571.838584821447, -264501.20891578513, 3.1916499383460204, 0));
                scenicList.push(new Scenery("selvaTree", 2264.897987727676, -264455.96273346903, 0.41468709641936596, 0));
                scenicList.push(new Scenery("selvaTree", 2726.8334088208003, -265138.15177702735, 2.6968643164269612, 0));
                scenicList.push(new Scenery("selvaTree", 3204.590335277873, -265599.175614802, 1.3569860853585614, 0));
                scenicList.push(new Scenery("selvaTree", 3903.4409400798163, -266119.5012552104, 3.706503178242424, 0));
                scenicList.push(new Scenery("selvaTree", 4811.939540112596, -265575.1141148433, 0.6153717687611788, 0));
                scenicList.push(new Scenery("selvaTree", 4964.7527926936045, -266503.7416819134, 3.9689711456578616, 0));
                scenicList.push(new Scenery("selvaTree", 5129.344908516842, -267324.82652437326, 2.086668473587247, 0));
                scenicList.push(new Scenery("selvaTree", 4200.997484704929, -267558.8004470021, 0.9985497080540024, 0));
                scenicList.push(new Scenery("selvaTree", 3751.2084480606354, -266917.3542916353, 3.463146626753227, 0));
                scenicList.push(new Scenery("selvaTree", 3050.754221916511, -267596.48217134096, 4.367100083902059, 0));
                scenicList.push(new Scenery("selvaTree", 2301.644797649274, -266984.07552949473, 1.2728049397282413, 0));
                scenicList.push(new Scenery("selvaTree", 1502.69803035736, -267536.1606983817, 3.430588517005139, 0));
                scenicList.push(new Scenery("selvaTree", 3846.5162846180087, -262788.2214589846, 3.0057998246884474, 0));
                scenicList.push(new Scenery("selvaTree", 3533.3534643038065, -262375.08263073384, 2.7594553458878788, 0));
                scenicList.push(new Scenery("selvaTree", 4458.27769123422, -261980.11932220386, 2.4622093670429415, 0));
                scenicList.push(new Scenery("selvaTree", 3566.085467960932, -261840.76320357758, 5.711024179710387, 0));
                scenicList.push(new Scenery("selvaTree", 2890.739191648622, -262083.49462209851, 4.778595568699873, 0));
                scenicList.push(new Scenery("selvaTree", 3392.05720553415, -263350.2116975718, 0.16459417583673308, 0));
                scenicList.push(new Scenery("selvaTree", 2936.747982215133, -263040.6958357287, 4.020177823851078, 0));
                scenicList.push(new Scenery("selvaTree", 2788.5844153575404, -262510.63603433047, 5.83674234961262, 0));
                scenicList.push(new Scenery("selvaTree", 2212.803410974614, -261962.8982445264, 0.8249788548313579, 0));
                scenicList.push(new Scenery("selvaTree", 1736.565760620534, -262197.7703338114, 2.447769444924464, 0));
                scenicList.push(new Scenery("selvaTree", 2331.2024767847356, -262559.62509677134, 4.686128586222074, 0));
                scenicList.push(new Scenery("selvaTree", 1777.8917673143512, -262583.7530012652, 3.597086354026544, 0));
                scenicList.push(new Scenery("selvaTree", 1881.4436468243161, -263059.1397706429, 5.079778033829544, 0));
                scenicList.push(new Scenery("selvaTree", 2380.0342813422944, -263398.65771282325, 3.8301883843353637, 0));
                scenicList.push(new Scenery("selvaTree", 3039.5204215209915, -263787.7458511174, 2.915532758109828, 0));
                scenicList.push(new Scenery("selvaTree", 3500.243711254988, -263920.99899824033, 0.3398904740753809, 0));
                scenicList.push(new Scenery("selvaTree", 2892.4798575492214, -264140.3920522426, 5.576164692732073, 0));
                scenicList.push(new Scenery("selvaTree", 2986.2031932446603, -264614.1019554205, 4.469734688682991, 0));
                scenicList.push(new Scenery("selvaTree", 2447.557668050421, -263954.9313741805, 1.0871018705623459, 0));
                scenicList.push(new Scenery("selvaTree", 1840.3597350255902, -263805.2865622326, 0.2824391117134053, 0));
                scenicList.push(new Scenery("selvaTree", 1154.2868083617604, -263519.75539335964, 5.690261190913494, 0));
                scenicList.push(new Scenery("selvaTree", 1180.0666437493644, -262749.63472240965, 3.4633838556469807, 0));
                scenicList.push(new Scenery("selvaTree", 607.187744201223, -263073.0294876144, 2.3840715442923903, 0));
                scenicList.push(new Scenery("selvaTree", 378.1676004666942, -263669.5866871042, 0.447698621585481, 0));
                scenicList.push(new Scenery("selvaTree", 958.3832163017858, -264056.13668259076, 0.6626796035084762, 0));
                scenicList.push(new Scenery("selvaTree", 1387.6744456753133, -264588.91731051623, 2.3845219648086604, 0));
                scenicList.push(new Scenery("selvaTree", 2008.1595321678224, -265554.9031335616, 1.0571983108191207, 0));
                scenicList.push(new Scenery("selvaTree", 2470.817594893622, -266076.24177549424, 5.543013961356903, 0));
                scenicList.push(new Scenery("selvaTree", 3290.904588453677, -266336.8982159453, 1.7682576667841288, 0));
                scenicList.push(new Scenery("selvaTree", 2991.2671833612776, -266932.0697059559, 5.8777223850912925, 0));
                scenicList.push(new Scenery("selvaTree", 2361.3788713585477, -266413.87529288745, 3.281227009950665, 0));
                scenicList.push(new Scenery("selvaTree", 1655.2226136996496, -266015.21998869925, 5.120827327812088, 0));
                scenicList.push(new Scenery("selvaTree", 1439.448048187563, -266494.92253773706, 1.404480749045944, 0));
                scenicList.push(new Scenery("selvaTree", 1129.3113088406258, -266904.5607551442, 3.6699467397107477, 0));
                scenicList.push(new Scenery("selvaTree", 690.3340163299883, -267244.5524908962, 4.73136416281165, 0));
                scenicList.push(new Scenery("selvaTree", 699.6505547236782, -267881.4171040223, 1.846348037616708, 0));
                scenicList.push(new Scenery("selvaTree", 1360.789639033819, -268160.4928341862, 5.280632040823476, 0));
                scenicList.push(new Scenery("selvaTree", 2407.4516326516623, -267724.8361890759, 3.6993568366985303, 0));
                scenicList.push(new Scenery("selvaTree", 2424.2655008453175, -268352.7386287463, 2.2373573067777355, 0));
                scenicList.push(new Scenery("selvaTree", 3841.143585296995, -268042.40774943837, 4.3994824313173835, 0));
                scenicList.push(new Scenery("selvaTree", 4286.132593382943, -268600.4061528521, 5.098674499387533, 0));
                scenicList.push(new Scenery("selvaTree", 5270.955312454512, -268329.875679584, 5.821434552101014, 0));
                scenicList.push(new Scenery("selvaTree", 5003.03510338266, -267922.0368438612, 0.7741629109155723, 0));
                scenicList.push(new Scenery("selvaTree", 6047.753858105574, -267466.03237681254, 4.950535944978795, 0));
                scenicList.push(new Scenery("selvaTree", 5806.649842990189, -266726.1249391452, 3.77507397627468, 0));
                scenicList.push(new Scenery("selvaTree", 6462.495337128649, -267133.31192974927, 2.1226033235397557, 0));
                scenicList.push(new Scenery("selvaTree", 6695.253175854426, -267925.7087083112, 2.745276652810543, 0));
                scenicList.push(new Scenery("selvaTree", 6341.502541087451, -268532.45661210926, 2.1261645006385272, 0));
                scenicList.push(new Scenery("selvaTree", 6862.277480314462, -268320.4794127339, 3.6725797699518337, 0));
                scenicList.push(new Scenery("selvaTree", 5006.948263767332, -268773.12199122086, 6.0080415676905545, 0));
                scenicList.push(new Scenery("selvaTree", 3381.59148970668, -268727.46520231414, 4.604495057228546, 0));
                scenicList.push(new Scenery("selvaTree", 3044.38194043022, -268245.59296575456, 2.6290420812945774, 0));
                scenicList.push(new Scenery("selvaTree", 1766.9677519466345, -268657.1414941285, 5.988219849444361, 0));
                scenicList.push(new Scenery("selvaTree", 760.5222001191379, -268441.8725537625, 2.787429914838643, 0));
                scenicList.push(new Scenery("selvaTree", -181.97701292878932, -268211.3505414967, 2.3877602170962766, 0));
                scenicList.push(new Scenery("selvaTree", -794.4820545108985, -268669.8711261764, 5.6432382510178485, 0));
                scenicList.push(new Scenery("selvaTree", 1108.645349268474, -265399.4802672543, 0.7121449334135266, 0));
                scenicList.push(new Scenery("selvaTree", 761.9106520397322, -264946.09261481784, 3.769588946837442, 0));
                scenicList.push(new Scenery("selvaTree", -3.450868946841762, -264441.56905112334, 2.4606930547109527, 0));
                scenicList.push(new Scenery("selvaTree", -333.0266666087658, -265202.53166197153, 1.0333093209528272, 0));
                scenicList.push(new Scenery("selvaTree", -987.0206070107897, -264801.8861833819, 5.7492146422027135, 0));
                scenicList.push(new Scenery("selvaTree", -748.5564830221575, -264112.3422632782, 0.3512013992568732, 0));
                scenicList.push(new Scenery("selvaTree", 75.73513093672543, -263270.6352642482, 5.484871176270266, 0));
                scenicList.push(new Scenery("selvaTree", -1951.4739852501802, -264694.9628576743, 3.376502630303439, 0));
                scenicList.push(new Scenery("selvaTree", -1739.1972305191723, -265515.02261665685, 1.3628181117572553, 0));
                scenicList.push(new Scenery("selvaTree", -2156.0799554498217, -266329.2475606782, 5.132502572327114, 0));
                scenicList.push(new Scenery("selvaTree", -825.6277262778805, -265926.97280421, 0.4089587953363858, 0));
                scenicList.push(new Scenery("selvaTree", -273.86493541149787, -265927.65472366364, 1.583498252820528, 0));
                scenicList.push(new Scenery("selvaTree", 423.983720930312, -265404.27526982996, 5.872017060676609, 0));
                scenicList.push(new Scenery("selvaTree", 662.0226386227325, -266174.65576708905, 3.449290225871697, 0));
                scenicList.push(new Scenery("selvaTree", -301.7527123763473, -267112.5218960844, 0.23640144246860084, 0));
                scenicList.push(new Scenery("selvaTree", -1222.7493770391654, -267984.78121151373, 4.177092067817911, 0));
                scenicList.push(new Scenery("selvaTree", -2372.885049209108, -268568.55214114126, 3.4274451461131776, 0));
                scenicList.push(new Scenery("selvaTree", -2763.701663323263, -267962.6045127618, 3.9019535922953037, 0));
                scenicList.push(new Scenery("selvaTree", -1786.0623266754817, -267500.08765410486, 0.9328870261023595, 0));
                scenicList.push(new Scenery("selvaTree", -2709.847801933497, -267149.4379632595, 5.489144215335178, 0));
                scenicList.push(new Scenery("selvaTree", -1424.6460863524933, -266737.5754357933, 4.067358715365895, 0));
                scenicList.push(new Scenery("selvaTree", -2555.8613062455197, -266599.82227354636, 1.6724669262416307, 0));
                scenicList.push(new Scenery("selvaTree", -2929.5839311338, -265867.1175774097, 1.7727935960376784, 0));
                scenicList.push(new Scenery("selvaTree", -2451.3656452452487, -265226.05617234146, 2.9854376973772228, 0));
                scenicList.push(new Scenery("selvaTree", -2853.9784081309253, -264694.27677322977, 5.754516301307423, 0));
                scenicList.push(new Scenery("selvaTree", -1486.8848340119018, -266256.0594092661, 2.253063667510842, 0));
                scenicList.push(new Scenery("selvaTree", -1356.0883489185437, -264340.7824212701, 0.9916645424191155, 1));


                //REGION CREATION
                //Build AI Units
                //ArtificialIntelligenceAccess.push(new Unit(3000, 2500, "ZafBeetle", true, "Tzalit"));
                //scenicList.push(new Scenery("vinePatch", 3500, 2500, 0, 1));
                //scenicList.push(new Scenery("cerebrisPlant", 3500, 2500, 0, 1));
                //scenicList.push(new Scenery("gojiiPlant", 3500, 2500, 0, true));
                //scenicList.push(new Scenery("bahabPlant", 3500, 2500, 0, true));
                //scenicList.push(new Scenery("araneaDen", 3500, 2500, 0, false, true));
                //ArtificialIntelligenceAccess.push(new Unit(3000, 2500, "Gorgon", false, "Gra"));
                //ArtificialIntelligenceAccess.push(new Unit(3000, 2500, "Cruorcca", "massive", "Cruor"));
                //ArtificialIntelligenceAccess.push(new Unit(3908, 2500, "Kigarii", true, "Apex"));
                //ArtificialIntelligenceAccess.push(new Unit(3600, 2500, "Crenid", "massive", "Bulgg"));
                //scenicList.push(new Scenery("athergmPlant", 3990, 2500, 0, 1));
                //scenicList.push(new Scenery("decipulaBasePlant", 3670, 2500, 0, "massive"));
                //ArtificialIntelligenceAccess.push(new Unit(3500, 2500, "Zancudo", false, "proboscis"));
                //ArtificialIntelligenceAccess.push(new Unit(3550, 2500, "Venandi", true, "hunter"));
                //ArtificialIntelligenceAccess.push(new Unit(3570, 2500, "EtyrVenandi", true, "scout"));
                //ArtificialIntelligenceAccess.push(new Unit(3570, 2500, "AraneaVenandi", true, "tank"));
                //scenicList.push(new Scenery("valumPlant", 3990, 2500, 0, 1));
                //scenicList.push(new Scenery("decipulaPlant", 3670, 2500, 0, true));
                //ArtificialIntelligenceAccess.push(new Unit(3613, -240174, "Gorgon", false, "Gra"));
                //ArtificialIntelligenceAccess.push(new Unit(3700, 2500, "Boa", false, "constricto"));
                //ArtificialIntelligenceAccess.push(new Unit(3600, 2500, "PoisonDartFrog", true, "coqui"));
                //scenicList.push(new Scenery("sonjaTree", 3600, 2500, 0, true));
                //ArtificialIntelligenceAccess.push(new Unit(3600, 2500, "Babosa", true, "Glubber", {patrolStops: 3, patrolLoop: true, route:[[3600, 2500], [3500, 2550], [3650, 2600]]}));
                //scenicList.push(new Scenery("crilkPlant", 3600, 2500, 3.2, true));
                //ArtificialIntelligenceAccess.push(new Unit(3500, 2500, "BlackTroll", false, "Brufga"));
                //scenicList.push(new Scenery("overVines", 3600, 2500, 0, 4, 1));
                //scenicList.push(new Scenery("webVictim", 3600, 2500, 0, 3, 1));
                //scenicList.push(new Scenery("jungleStuff", 3600, 2500, 0.23, 2, 1));
                //scenicList.push(new Scenery("selvaTree", 3600, 2500, 0, 0));
                //ArtificialIntelligenceAccess.push(new Unit(2000, -240000, "Gulfrey", true, "Guld"));
                //ArtificialIntelligenceAccess.push(new Unit(5012, -240944, "Torper", true, "Shankstripes"));
                //ArtificialIntelligenceAccess.push(new Unit(1194, -240231, "Etyr", true, "Blackeye"));
                //scenicList.push(new Scenery("blilPlant", 2389 , -239760, 6.78, true));
                //scenicList.push(new Scenery("vinePatch", 3500, 2500, 0, 1));
                //ArtificialIntelligenceAccess.push(new Unit(3550, 2500, "Venandi", true, "hunter"));
                //ArtificialIntelligenceAccess.push(new Unit(3570, 2500, "EtyrVenandi", true, "scout"));
                //ArtificialIntelligenceAccess.push(new Unit(3570, 2500, "AraneaVenandi", true, "tank"));
                //ArtificialIntelligenceAccess.push(new Unit(3500, 2500, "Borea", true, "Ipskwich"));
                //ArtificialIntelligenceAccess.push(new Unit(3500, 2500, "Salisea", false, "Digit"));
                //ArtificialIntelligenceAccess.push(new Unit(4918.865336039311, -249334.1191245097, "PetraBeetle", true, "Iga"));
                //scenicList.push(new Scenery("matnaWeb", 3600, 2500, 0, 2.1));
                //ArtificialIntelligenceAccess.push(new Unit(3600, 2500, "Matna", false, "deathByter"));
                //scenicList.push(new Scenery("pyromothWeb", 3700, 2500, 0, 1, true));
                //ArtificialIntelligenceAccess.push(new Unit(3700, 2500, "Pyromoth", true, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[3600, 2500], [3500, 2550], [3650, 2600]]}));


                //Animals

                //mosquitos
                ArtificialIntelligenceAccess.push(new Unit(4269.803829079993, -259402.49298615917, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(4640.5994572750615, -260188.46422221122, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(6050.452565452965, -260423.85140678284, "Zancudo", true, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(6487.141985411079, -261021.3462442532, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(5229.448078868083, -261797.7259446977, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(4997.406973334392, -263461.79535097996, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(5525.359712849768, -263144.50176342984, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(6140.201406803113, -262995.80003570893, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(5643.802587693002, -264073.46328313876, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(5744.659770027101, -264921.8995393215, "Zancudo", true, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(6620.76239403375, -264694.8411742891, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(5814.380816211047, -265793.2685654835, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(3973.868818197966, -267621.1970594778, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(2318.334495932765, -267812.92024736974, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(1350.1467852270307, -267344.58490628743, "Zancudo", true, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(553.9233177106274, -267237.8639792498, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(-1454.303564053199, -266170.2498388885, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(-2703.358251204129, -267819.0300121837, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(-2372.7427788453433, -265452.5293690334, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(-2418.170902612062, -262137.14472565943, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(-1544.9040357892588, -260777.55224930847, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(-1160.32352465748, -260196.2153157505, "Zancudo", true, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(-146.34275012765815, -261315.07523048948, "Zancudo", false, "proboscis"));

                //silk web
                scenicList.push(new Scenery("pyromothWeb", 5202.023520843928, -260833.07256089375, 8.5, 1.9, false));
                scenicList.push(new Scenery("pyromothWeb", 5182.136724292073, -260785.982217097, 7.5, 1.8, true));
                scenicList.push(new Scenery("pyromothWeb", 5158.422840688663, -260825.88973776187, 6.5, 1.9, true));
                scenicList.push(new Scenery("pyromothWeb", 5258.99306798978, -260833.2027562627, 5.5, 2, false));
                scenicList.push(new Scenery("pyromothWeb", 5298.442788298497, -260731.52624619586, 4.5, 1.7, false));
                scenicList.push(new Scenery("pyromothWeb", 5264.170028115285, -260700.4416497506, 3.5, 1.8, false));
                scenicList.push(new Scenery("pyromothWeb", 5211.229102850447, -260699.35828365778, 2.5, 1.9, false));
                scenicList.push(new Scenery("pyromothWeb", 5170.5033567710725, -260745.01868992025, 1.5, 2, true));
                scenicList.push(new Scenery("pyromothWeb", 5143.032854180979, -260710.8404205633, 9.5, 1.75, false));
                scenicList.push(new Scenery("pyromothWeb", 5296.686449568767, -260848.64319283568, 8, 1.8, true));
                scenicList.push(new Scenery("pyromothWeb", 5311.063733571117, -260815.75325317343, 7, 1.9, false));
                scenicList.push(new Scenery("pyromothWeb", 5299.660138768576, -260777.6740378878, 6, 1.95, true));
                scenicList.push(new Scenery("pyromothWeb", 4551.934820275825, -260758.67111553557, 5, 1.8, true));
                scenicList.push(new Scenery("pyromothWeb", 4581.494906726502, -260800.7331911931, 4, 1.85, false));
                scenicList.push(new Scenery("pyromothWeb", 4530.106667814906, -260792.25479197147, 3, 1.9, true));
                scenicList.push(new Scenery("pyromothWeb", 4506.47432640891, -260762.88901003014, 2, 2, true));
                scenicList.push(new Scenery("pyromothWeb", 4451.5896311881015, -260717.87271330494, 1, 1.7, true));
                scenicList.push(new Scenery("pyromothWeb", 4458.46649773349, -260668.25852880118, 0.5, 1.9, false));
                scenicList.push(new Scenery("pyromothWeb", 4452.422758581761, -260757.80441214546, 0, 2, true));
                scenicList.push(new Scenery("pyromothWeb", 3918.41489431579, -260508.81309724104, -0.7, 1.8, true));
                scenicList.push(new Scenery("pyromothWeb", 3864.0719498386466, -260524.2248782942, -1.4, 1.9, false));
                scenicList.push(new Scenery("pyromothWeb", 3895.0204501630105, -260542.5891355048, -2.1, 1.75, false));
                scenicList.push(new Scenery("pyromothWeb", 3811.808954041577, -260483.02839307464, -2.8, 1.85, false));
                scenicList.push(new Scenery("pyromothWeb", 3788.7776735522157, -260510.68076117907, -3.5, 1.75, false));
                scenicList.push(new Scenery("pyromothWeb", 3760.4770005349046, -260464.77632556806, -4.2, 2, true));
                scenicList.push(new Scenery("pyromothWeb", 3793.094719549204, -260425.04454722404, -4.9, 1.85, true));
                scenicList.push(new Scenery("pyromothWeb", 3862.662288976458, -260390.0944646811, -5.6, 1.95, false));
                scenicList.push(new Scenery("pyromothWeb", 3819.97072194999, -260370.10920510124, -3.9, 1.8, true));
                scenicList.push(new Scenery("pyromothWeb", 3921.188777754823, -260419.1351399643, -1.6, 1.95, false));
                scenicList.push(new Scenery("pyromothWeb", 4312.120159829035, -261301.57696800862, -3.9, 1.9, true));
                scenicList.push(new Scenery("pyromothWeb", 4371.441248855981, -261315.92113270587, -5.6, 1.85, false));
                scenicList.push(new Scenery("pyromothWeb", 4380.495774003381, -261409.73840081284, -8.9, 1.75, false));
                scenicList.push(new Scenery("pyromothWeb", 3827.4147826693106, -260400.2289419662, 6.9, 2.75, true));
                scenicList.push(new Scenery("pyromothWeb", 4400.999836714025, -261349.1692851699, -0.6, 1.95, false));
                scenicList.push(new Scenery("pyromothWeb", 4358.528431264525, -261276.1720661907, -9.9, 1.7, true));
                scenicList.push(new Scenery("pyromothWeb", 3795.6154465364084, -260455.2055675528, 2.7, 1.5, false));
                scenicList.push(new Scenery("pyromothWeb", 4672.456563232898, -262591.8058631848, -11.6, 2, false));

                ArtificialIntelligenceAccess.push(new Unit(4374.728023183254, -261415.35004280598, "Pyromoth", false, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[4922.445925120089, -261026.2655011074], [4506.597658258431, -260350.37489392216], [4149.878672801568, -260864.9347136809]]}));
                ArtificialIntelligenceAccess.push(new Unit(4394.823321652654, -261333.1368335051, "Pyromoth", true, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[4550.341057338279, -260941.87179168887], [4016.108937472709, -260997.13360568523], [3993.9633039078526, -261516.5915724642]]}));
                ArtificialIntelligenceAccess.push(new Unit(4319.678262080488, -261303.33490210754, "Pyromoth", true, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[4151.282795156203, -261299.63946977316], [3979.708519668682, -261709.84116105735], [3684.429078173389, -261420.879853775]]}));

                ArtificialIntelligenceAccess.push(new Unit(5184.504782107487, -260832.6973276676, "Pyromoth", false, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[4974.235655369779, -261124.95518088088], [5307.611436219217, -261277.4034525869], [4645.741225175337, -261473.76560163402]]}));
                ArtificialIntelligenceAccess.push(new Unit(5253.3502661986295, -260835.86647344328, "Pyromoth", true, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[4741.469415701861, -261131.11144564595], [5421.834971317158, -261730.3968234436], [5461.545977679089, -261224.25088178954]]}));
                ArtificialIntelligenceAccess.push(new Unit(5298.083142955871, -260817.22857961434, "Pyromoth", false, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[5611.7859234652715, -261019.32175247726], [6121.1496458209895, -261106.2493947143], [5769.121356645528, -260466.25092043405]]}));
                ArtificialIntelligenceAccess.push(new Unit(5291.869666961932, -260718.15617282162, "Pyromoth", false, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[4546.644349951893, -260381.17730118326], [4775.482882549208, -260841.90504963204], [5478.0444532949405, -260264.7822467209]]}));
                ArtificialIntelligenceAccess.push(new Unit(5207.958530509781, -260709.25814285572, "Pyromoth", false, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[5800.777368185567, -260749.78155517075], [5509.371166282503, -260409.4154859872], [6198.200449054615, -260688.08995164733]]}));
                ArtificialIntelligenceAccess.push(new Unit(5158.581149883719, -260730.669250966, "Pyromoth", true, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[5915.3221553954945, -261014.01991720678], [5615.106243463765, -260811.06990347864], [6122.132268836255, -260506.69678383946]]}));

                ArtificialIntelligenceAccess.push(new Unit(4578.237204976154, -260798.95256848686, "Pyromoth", false, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[5005.884610895907, -260281.8007114303], [4299.889577541493, -260510.66687177605], [4699.512020654861, -260646.34560513575]]}));
                ArtificialIntelligenceAccess.push(new Unit(4455.070741707775, -260755.79914846263, "Pyromoth", true, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[4249.150714738456, -260755.80772346357], [4411.667710333483, -260920.39524799833], [3990.5402356082955, -260935.20883123297]]}));
                ArtificialIntelligenceAccess.push(new Unit(4468.328456353887, -260664.04912215698, "Pyromoth", false, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[4186.536949523978, -260889.7661673509], [4198.330803892696, -260199.6481215158], [4863.098966069076, -260702.47782578264]]}));

                ArtificialIntelligenceAccess.push(new Unit(3880.2099511304427, -260537.71420784152, "Pyromoth", true, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[4858.8745732619, -261344.96719190184], [4795.094213375881, -260975.58214203647], [3921.146974911236, -261128.0391471937]]}));
                ArtificialIntelligenceAccess.push(new Unit(3796.222223179316, -260498.88083170346, "Pyromoth", false, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[3719.46065286578, -260194.97883554798], [3135.3482200001486, -260290.0246022686], [3621.5924678014258, -260439.91707741917]]}));
                ArtificialIntelligenceAccess.push(new Unit(3807.8929479269436, -260425.39626269587, "Pyromoth", false, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[3965.3203729060247, -259895.10984053308], [4431.55612725956, -259635.42894726185], [4378.905267895647, -260597.64032882694]]}));
                ArtificialIntelligenceAccess.push(new Unit(3864.0135715823308, -260385.35607701517, "Pyromoth", false, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[4074.4800994295288, -260846.82011348286], [3387.497267235249, -260433.3771734148], [4101.357965126312, -259733.9229455689]]}));
                ArtificialIntelligenceAccess.push(new Unit(3928.2247837641194, -260425.0654886384, "Pyromoth", true, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[4175.925417882983, -260794.4589853232], [4889.896859681867, -260920.245736022], [4666.79422965094, -260170.44459246914]]}));

                ArtificialIntelligenceAccess.push(new Unit(4672.456563232898, -262591.8058631848, "Pyromoth", false, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[5081.806843452209, -262780.1729005377], [4564.993859715438, -263183.1684683729], [4053.6180234121575, -261991.23967912197]]}));


                scenicList.push(new Scenery("matnaWeb", 711.542791121957, -263579.33285234094, 1, 3));
                scenicList.push(new Scenery("matnaWeb", 622.4310944685602, -263484.61812568345, 2, 2.1));
                scenicList.push(new Scenery("matnaWeb", 717.8131847174468, -263499.78367504396, 2, 1.5));
                scenicList.push(new Scenery("matnaWeb", 580.7184096288204, -263602.76293653465, 1, 1.9));
                scenicList.push(new Scenery("matnaWeb", 536.4051778949428, -263527.6440234545, 3, 2.6));
                scenicList.push(new Scenery("matnaWeb", 686.9354530300573, -263419.61888618063, 4, 3.1));
                scenicList.push(new Scenery("matnaWeb", 795.9227540840594, -263562.2678825696, 5, 2.9));
                scenicList.push(new Scenery("matnaWeb", 914.4349987097538, -263526.5261301833, 33, 2.2));
                scenicList.push(new Scenery("matnaWeb", 826.9549964194061, -263476.34285308665, 3, 1.4));
                scenicList.push(new Scenery("matnaWeb", 882.3842484621052, -263392.71320729563, 5, 1.6));
                scenicList.push(new Scenery("matnaWeb", 968.8630214771075, -263443.60972203605, 66, 2.7));
                scenicList.push(new Scenery("matnaWeb", 1028.2505752744592, -263529.1151277369, 7, 2.8));
                scenicList.push(new Scenery("matnaWeb", 1100.9290436079295, -263456.83351561567, 0, 2.5));
                scenicList.push(new Scenery("matnaWeb", 771.4640113417272, -263406.83072160115, 9, 1.6));
                scenicList.push(new Scenery("matnaWeb", 695.7359712278537, -263308.13663959666, 11, 1.85));
                scenicList.push(new Scenery("matnaWeb", 622.7632423346347, -263359.7432071138, 21, 1.92));
                scenicList.push(new Scenery("matnaWeb", 528.8287404780706, -263438.6432445237, 67, 2.14));
                scenicList.push(new Scenery("matnaWeb", 475.88649103291823, -263343.98739320785, 2, 2.1));
                scenicList.push(new Scenery("matnaWeb", 540.7860069207203, -263267.2683510292, 3, 2));
                scenicList.push(new Scenery("matnaWeb", 635.5701390156975, -263244.7838079651, 0.67, 1.4));
                scenicList.push(new Scenery("matnaWeb", 743.8359227800343, -263234.25597781234, 4, 1.2));
                scenicList.push(new Scenery("matnaWeb", 686.9390001841505, -263173.7981361192, 2, 1.5));
                scenicList.push(new Scenery("matnaWeb", 566.0041032894562, -263191.72345454973, 2, 1.8));
                scenicList.push(new Scenery("matnaWeb", 632.0216973631896, -263140.1515477885, 0.1, 1.99));
                scenicList.push(new Scenery("matnaWeb", 433.6132368306281, -263276.67379784584, 56, 1.9));
                scenicList.push(new Scenery("matnaWeb", 306.8324539824556, -263335.6015095918, 5, 1.66));
                scenicList.push(new Scenery("matnaWeb", 244.52545539304478, -263260.7272336817, 43, 1.7));
                scenicList.push(new Scenery("matnaWeb", 175.8463238675142, -263354.7269512563, 1, 2.6));
                scenicList.push(new Scenery("matnaWeb", 137.57483881085466, -263300.64936496585, 2.1, 2.75));
                scenicList.push(new Scenery("matnaWeb", 308.16115879706666, -263441.05610475765, 4.17, 2.98));
                scenicList.push(new Scenery("matnaWeb", 385.0920909931817, -263386.82583657483, 5, 2.9));
                scenicList.push(new Scenery("matnaWeb", 448.15417010684143, -263470.57531964773, 33, 2.2));
                scenicList.push(new Scenery("matnaWeb", 829.1804533274257, -263351.5973188615, 3, 1.4));
                scenicList.push(new Scenery("matnaWeb", 775.7791490667593, -263315.57039734453, 5, 1.6));
                scenicList.push(new Scenery("matnaWeb", 874.503077514828, -263252.9937439104, 66, 2.7));
                scenicList.push(new Scenery("matnaWeb", 928.6791037908768, -263318.84671164036, 7, 2.8));
                scenicList.push(new Scenery("matnaWeb", 1046.3775128394716, -263359.68811176583, 0, 2.5));
                scenicList.push(new Scenery("matnaWeb", 1031.0512840634924, -263255.45508793194, 9, 1.6));
                scenicList.push(new Scenery("matnaWeb", 941.0139890467383, -263171.806323363, 11, 1.85));
                scenicList.push(new Scenery("matnaWeb", 1029.6404556198443, -263177.2062473451, 21, 1.92));
                scenicList.push(new Scenery("matnaWeb", 1031.1490567093165, -263106.0313124439, 67, 2.14));
                scenicList.push(new Scenery("matnaWeb", 1105.6387713669037, -263132.0639932609, 21, 1.92));
                scenicList.push(new Scenery("matnaWeb", 1181.8989556367424, -263206.5786088367, 67, 2.14));
                scenicList.push(new Scenery("matnaWeb", 1158.8235833241233, -263304.31259127497, 2, 2.1));
                scenicList.push(new Scenery("matnaWeb", 1235.6789309882074, -263260.0266665673, 3, 2));
                scenicList.push(new Scenery("matnaWeb", 1266.615424174856, -263334.43279491964, 0.67, 1.4));
                scenicList.push(new Scenery("matnaWeb", 1350.0479721039858, -263399.05268500006, 4, 1.2));
                scenicList.push(new Scenery("matnaWeb", 1349.4893252673476, -263333.91830807674, 2, 1.5));
                scenicList.push(new Scenery("matnaWeb", 830.056603313503, -263418.3498298618, 2, 1));
                scenicList.push(new Scenery("matnaWeb", 868.7933517049055, -263437.34446271637, 3, 1));
                scenicList.push(new Scenery("matnaWeb", 815.657634663721, -263276.9782133386, 0.67, 1));
                scenicList.push(new Scenery("matnaWeb", 860.8282486174146, -263155.19459974277, 4, 1));
                scenicList.push(new Scenery("matnaWeb", 967.6879057156928, -263224.621975865, 2, 1));

                ArtificialIntelligenceAccess.push(new Unit(1032.9660053006135, -263115.4608290161, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(1014.0173636268543, -263169.4380993793, "Matna", true, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(1118.766797249022, -263183.04560599226, "Matna", true, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(1172.9854999820404, -263296.3527932676, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(1220.825250700848, -263235.66330487415, "Matna", true, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(1344.0127806786927, -263356.83001403237, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(698.0986005709826, -263595.0055318976, "Matna", true, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(722.8944596456432, -263516.5251154429, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(826.7813420071186, -263478.9238307368, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(982.552768433982, -263511.5076168161, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(1046.3190363160475, -263469.24064900534, "Matna", true, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(1114.8038971241826, -263443.59412550565, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(1022.0074786773441, -263391.4674044189, "Matna", true, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(931.7894683332206, -263383.4502535763, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(888.2097264947794, -263287.11762673594, "Matna", true, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(709.5025297812775, -263315.99423762586, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(638.297014942165, -263413.86385921616, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(595.1271037550013, -263311.903073869, "Matna", true, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(630.8358982071026, -263238.8489896462, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(612.4161692465699, -263160.4082050187, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(367.021370527228, -263370.637738837, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(461.69277986821504, -263472.52273422375, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(239.05260378584137, -263365.26638325996, "Matna", true, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(172.41457131042188, -263307.43722878327, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(152.73476290372764, -263361.8274339532, "Matna", false, "deathByter"));


                ArtificialIntelligenceAccess.push(new Unit(5749.104938630086, -260663.86369006475, "PoisonDartFrog", true, "coqui"));
                ArtificialIntelligenceAccess.push(new Unit(1571.8385731948845, -259159.26898569742, "PoisonDartFrog", false, "coqui"));
                ArtificialIntelligenceAccess.push(new Unit(-82.08277258699725, -260969.4431342987, "PoisonDartFrog", false, "coqui"));
                ArtificialIntelligenceAccess.push(new Unit(-601.3444679231691, -267700.7618114963, "PoisonDartFrog", false, "coqui"));


                ArtificialIntelligenceAccess.push(new Unit(5954.342494364304, -260864.16158235632, "PetraBeetle", true, "Iga"));
                ArtificialIntelligenceAccess.push(new Unit(1969.4050327679272, -259305.16013501878, "PetraBeetle", false, "Iga"));
                ArtificialIntelligenceAccess.push(new Unit(1900.6741474198823, -265034.6693848448, "PetraBeetle", false, "Iga"));

                ArtificialIntelligenceAccess.push(new Unit(3519.971668998765, -259074.1381384746, "Salisea", true, "Digit"));

                ArtificialIntelligenceAccess.push(new Unit(-2151.961149498817, -260754.7825341946, "Boa", false, "constricto"));


                ArtificialIntelligenceAccess.push(new Unit(5803.68815106469, -262841.29015757603, "Crenid", "massive", "Bulgg"));
                ArtificialIntelligenceAccess.push(new Unit(6186.1168581740585, -263183.26607095165, "Crenid", "massive", "Bulge"));
                ArtificialIntelligenceAccess.push(new Unit(5979.061660353685, -263592.6013487039, "Crenid", true, "Bulge"));
                ArtificialIntelligenceAccess.push(new Unit(5218.220871651891, -263066.2531396759, "Crenid", false, "Bulge"));
                ArtificialIntelligenceAccess.push(new Unit(2625.928981133707, -267360.80492916645, "Crenid", "massive", "Bulge"));
                ArtificialIntelligenceAccess.push(new Unit(1685.7013354430953, -266920.35869494855, "Crenid", false, "Bulge"));

                ArtificialIntelligenceAccess.push(new Unit(4896.868345686636, -263228.3306215461, "Cruorcca", true, "Cruor"));
                ArtificialIntelligenceAccess.push(new Unit(4373.050912052841, -263012.739660678, "Cruorcca", true, "Cruor"));
                ArtificialIntelligenceAccess.push(new Unit(4126.112722467591, -263537.56575281324, "Cruorcca", false, "Cruor"));
                ArtificialIntelligenceAccess.push(new Unit(3973.5069740881104, -259713.1713679376, "Cruorcca", false, "Cruor"));
                ArtificialIntelligenceAccess.push(new Unit(-1966.2414667769106, -267972.678436393, "Cruorcca", false, "Cruor"));

                ArtificialIntelligenceAccess.push(new Unit(2872.489557301989, -262517.36951612675, "Etyr", false, "Blackeye"));
                ArtificialIntelligenceAccess.push(new Unit(2920.1932794411227, -262397.52715489984, "Etyr", false, "Blackeye"));
                ArtificialIntelligenceAccess.push(new Unit(2762.1757767036625, -262292.1605769792, "Etyr", true, "Blackeye"));
                ArtificialIntelligenceAccess.push(new Unit(2795.895428820782, -261996.55846261748, "Etyr", false, "Blackeye"));
                ArtificialIntelligenceAccess.push(new Unit(2629.538517597956, -262610.19645110046, "Etyr", false, "Blackeye"));
                ArtificialIntelligenceAccess.push(new Unit(2774.037949184009, -262835.4393097099, "Etyr", false, "Blackeye"));
                ArtificialIntelligenceAccess.push(new Unit(3046.4502538592556, -263028.65987455426, "Etyr", false, "Blackeye"));
                ArtificialIntelligenceAccess.push(new Unit(2994.7392416544717, -263193.5776723688, "Etyr", false, "Blackeye"));
                ArtificialIntelligenceAccess.push(new Unit(3463.352064962917, -263210.952834816, "EtyrVenandi", true, "scout"));

                ArtificialIntelligenceAccess.push(new Unit(2460.8061318824825, -261621.07362082347, "Babosa", false, "Glubber", {patrolStops: 5, patrolLoop: true, route:[[1990.933324790878, -261565.7587326989], [1843.5548941994662, -261415.22998687538], [2459.42299509663, -261473.89863432117], [2306.5928925290405, -261493.6128657583], [2460.8061318824825, -261621.07362082347]]}));
                ArtificialIntelligenceAccess.push(new Unit(-1905.7374218792677, -262040.60500600297, "Babosa", true, "Glubber", {patrolStops: 5, patrolLoop: true, route:[[-1820.6933792104232, -262215.1927815059], [-1597.6116374879293, -262095.21717143196], [-1321.5314174366042, -262185.9122657355], [-1185.9624774260874, -261859.4728084011], [-1905.7374218792677, -262040.60500600297]]}));

                ArtificialIntelligenceAccess.push(new Unit(1681.3558238292387, -260249.83237899176, "Gulfrey", true, "Guld"));

                ArtificialIntelligenceAccess.push(new Unit(273.1374574797518, -260001.55880512673, "Kigarii", false, "Apex"));
                ArtificialIntelligenceAccess.push(new Unit(4635.879759575706, -266955.67214333516, "Kigarii", true, "Apex"));

                //vines
                scenicList.push(new Scenery("overVines", 5554.70967462545, -261093.6262693448, 2.4 + 1/2 * Math.PI, 2, 0.4));
                scenicList.push(new Scenery("overVines", 5523.293297024121, -261102.3185662407, 2.5 + 1/2 * Math.PI, 2, 0.4));
                scenicList.push(new Scenery("overVines", 5556.438227465363, -261060.105011923, 2.35 + 1/2 * Math.PI, 2, 0.5));
                scenicList.push(new Scenery("overVines", -1154.8052791815055, -259713.7124840554, 1.5 + 1/2 * Math.PI, 4, 1.7));
                scenicList.push(new Scenery("overVines", -1205.2599470496466, -259651.91496844456, 2.8 + 1/2 * Math.PI, 1, 0.6));
                scenicList.push(new Scenery("overVines", -1080.2061069410247, -259502.03842091028, 4.04 + 1/2 * Math.PI, 1, 3));
                scenicList.push(new Scenery("overVines", -2519.136923852883, -260266.0014857257, 2.04 + 1/2 * Math.PI, 1, 1.5));
                scenicList.push(new Scenery("overVines", -2519.136923852883, -260266.0014857257, 2.9, 2, 0.9));
                scenicList.push(new Scenery("overVines", -95.35357001196743, -261965.29728880405, 0.06 + 1/2 * Math.PI, 2, 1.4));
                scenicList.push(new Scenery("overVines", 4282.638579192958, -265747.6624170115, 3.7 + 1/2 * Math.PI, 2, 1.12));

                scenicList.push(new Scenery("vinePatch", 6034.193221243634, -261368.41499466178, 1.15, 3.26));
                scenicList.push(new Scenery("vinePatch", 3728.4846229260806, -262491.8521197386, 2.15, 4.34));
                scenicList.push(new Scenery("vinePatch", -1258.5491353322884, -259575.76926021616, 1.56, 1.56));

                //Plants
                scenicList.push(new Scenery("morshPlant", 4857.5664245748985, -261269.01242977037, 2.5, true));
                scenicList.push(new Scenery("morshPlant", 4417.549886880482, -263411.75912739703, 4.5, true));
                scenicList.push(new Scenery("morshPlant", -762.3181761627527, -260927.56723164715, 9.56, true));

                scenicList.push(new Scenery("crilkPlant", 2093.7695372243134, -260470.7285480992, 4.8, true));
                scenicList.push(new Scenery("crilkPlant", 821.7739269763672, -259317.56604620256, -1.2, true));
                scenicList.push(new Scenery("crilkPlant", -2488.8960647483004, -261359.02182588534, -5.7, true));
                scenicList.push(new Scenery("crilkPlant", -1672.3505703738972, -262193.6903354082, -4.3, true));
                scenicList.push(new Scenery("crilkPlant", 4176.357599035673, -267269.9730521145, 4.5, true));
                scenicList.push(new Scenery("crilkPlant", 5585.88890123568, -264488.9056430031, -7.5, true));

                scenicList.push(new Scenery("blilPlant", 2346.043596218452, -261328.39220413272, 8.88, true));
                scenicList.push(new Scenery("blilPlant", 1380.2852001620563, -260850.31617402995, 4.88, true));
                scenicList.push(new Scenery("blilPlant", -1736.455523960932, -260275.34195776194, 5, true));
                scenicList.push(new Scenery("blilPlant", 4306.632953414962, -266485.32116305706, 1.5, true));

                scenicList.push(new Scenery("bahabPlant", 5999.7624171702555, -260972.48364782424, 2, true));
                scenicList.push(new Scenery("bahabPlant", 5653.314646302119, -260850.06088074943, 2.3, true));
                scenicList.push(new Scenery("bahabPlant", 5805.835355466302, -260779.29937380587, 5, true));
                scenicList.push(new Scenery("bahabPlant", 6131.793424524885, -260723.38847668347, 5.6, true));
                scenicList.push(new Scenery("bahabPlant", 5865.6681777282065, -260645.9338969951, 0, true));
                scenicList.push(new Scenery("bahabPlant", 5638.719117251768, -260528.9867876961, 0.9, true));
                scenicList.push(new Scenery("bahabPlant", -1881.2392243768063, -263713.54323973635, 30, true));

                scenicList.push(new Scenery("valumPlant", 5197.36655843433, -260077.98141034157, 6, 1));
                scenicList.push(new Scenery("valumPlant", 5670.036562739987, -259818.15665452258, 6, 1));
                scenicList.push(new Scenery("valumPlant", 3667.409576084825, -261422.51652893538, 10, 1));
                scenicList.push(new Scenery("valumPlant", -1266.4313024867424, -263351.62063255266, 70, 1));
                scenicList.push(new Scenery("valumPlant", 4566.965924971434, -265920.3841465193, 77, 1));

                scenicList.push(new Scenery("decipulaPlant", 5704.174722008882, -262056.70815647295, 3.25, false));
                scenicList.push(new Scenery("decipulaPlant", -492.3976455081914, -259353.24163151486, 5.1, false));
                scenicList.push(new Scenery("decipulaBasePlant", 5035.561597248472, -262296.12855861, 7, "massive"));
                scenicList.push(new Scenery("decipulaBasePlant", 4476.410637304893, -267949.47278123914, 7, true));

                scenicList.push(new Scenery("cerebrisPlant", 3748.8113172177254, -263283.6676830767, -2.4, 1));
                scenicList.push(new Scenery("cerebrisPlant", 3459.441933864003, -263020.7364963823, 2.4, 1));
                scenicList.push(new Scenery("cerebrisPlant", 3487.9209162300917, -262849.0209283592, 2.2, 1));
                scenicList.push(new Scenery("cerebrisPlant", 3156.66356280045, -262734.195309178, -5.5, 1));
                scenicList.push(new Scenery("cerebrisPlant", 3204.699991902742, -262368.24199241673, 5.7, 1));
                scenicList.push(new Scenery("cerebrisPlant", 3642.7302521290762, -265745.26268771803, 51, 1));
                scenicList.push(new Scenery("cerebrisPlant", 4113.005688852541, -265543.5853202275, 3, 1));
                scenicList.push(new Scenery("cerebrisPlant", 4472.061069942149, -265910.2877904976, 52, 1));
                scenicList.push(new Scenery("cerebrisPlant", 4324.726609849201, -265131.86851691984, 45, 1));
                scenicList.push(new Scenery("cerebrisPlant", 4653.077527968725, -265149.5236375416, 5.7, 1));
                scenicList.push(new Scenery("cerebrisPlant", 3801.002046538707, -265369.94011823204, 21, 1));
                scenicList.push(new Scenery("cerebrisPlant", 3238.787192213151, -265202.9821096797, 9, 1));
                scenicList.push(new Scenery("cerebrisPlant", 3556.075601987135, -265077.69826522435, 0.78, 1));
                scenicList.push(new Scenery("cerebrisPlant", 4006.550472690758, -264966.2220356442, 51, 1));
                scenicList.push(new Scenery("cerebrisPlant", 4059.1333561037177, -264509.955307244, 3, 1));
                scenicList.push(new Scenery("cerebrisPlant", 4047.283844540133, -264120.67130639387, 52, 1));
                scenicList.push(new Scenery("cerebrisPlant", 4714.301922883041, -264379.5992574575, 46, 1));
                scenicList.push(new Scenery("cerebrisPlant", 5317.4881918805995, -266221.0355849394, 5.7, 1));
                scenicList.push(new Scenery("cerebrisPlant", 4537.9043783956, -267191.590341996, 11, 1));
                scenicList.push(new Scenery("cerebrisPlant", 4815.740698655899, -267020.7035083028, 35, 1));
                scenicList.push(new Scenery("cerebrisPlant", 4544.77596073842, -266831.6108425615, 32, 1));
                scenicList.push(new Scenery("cerebrisPlant", 6030.741485589818, -268183.41342025285, 22, 1));
                scenicList.push(new Scenery("cerebrisPlant", 5539.154241483463, -267901.619250499, 23, 1));

                scenicList.push(new Scenery("gojiiPlant", 3332.017448849407, -267062.0654235848, 70, true));


                scenicList.push(new Scenery("athergmPlant", 3145.216724887294, -261751.03192985064, 3.6, 1));
                scenicList.push(new Scenery("athergmPlant", -2042.6088585103491, -259548.9460585754, 4.1, 1));

                change = "s26";
            }
        }
        else if (region == "s4")
        {
            if (change != "s4")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                generator2(998194838973478567290593490753765777, 893156183774189889999927462711, 212646126477828899823923656415326758196327583974281, 6688395285999999892194291914929422375482332503, 1111111111009836537010101010010100000011110010 , 0, 6997, -34734);
                trimmer(434.61849699811074, -44423.834101181696, 284.8898175850846, -44507.41441065698, false);
                trimmer(-806.7417209570492, -34633.92173035913, -1060.7593222988721, -38254.921303375566, false);

                change = "s4";
            }
        }
        else if (region == "s5")
        {
            if (change != "s5")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                generator2(5736809278362490038293, 918929, 2392365641532675817348289600124772911, 66897437318899912746321004929422375, 27138463725763667236888366664 , 0, 6712, -45024);
                trimmer(6706.511984252476, -46639.560260598635, 6586.768919842608, -46711.23408554718, false);
                trimmer(5997.574834492017, -52847.19909806379, 5717.451997282227, -53038.20435162931, false);

                change = "s5";
            }
        }
        else if (region == "s6")
        {
            if (change != "s6")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                generator2(19298741243437438992, 9274652547777276453, 7428457849984359745, 66897439835628573277771, 37899910280830 , 0, 6703, -54922);


                change = "s6";
            }
        }
        else if (region == "s7")
        {
            if (change != "s7")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                generator2(29530258, 90, 72, 3258295, 102938219982, 0, 6702, -65155);


                change = "s7";
            }
        }
        else if (region == "s8")
        {
            if (change != "s8")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                generator2(829427148172141, 920883248418247, 2733294217, 7420383218, 348919421, 0, 6702, -75322);


                change = "s8";
            }
        }
        else if (region == "s9")
        {
            if (change != "s9")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                generator2(232239741218412, 98124912914, 903814729794, 11829144012, 1213249, 0, 6589, -87613);


                change = "s9";
            }
        }
        else if (region == "s10")
        {
            if (change != "s10")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                generator2(432492005292412, 232435923599384100, 128321492394420300012, 12314294993281923192, 3485124912, 0, 6775, -95695);
                trimmer(2740, -98131, 2534, -98413, false);

                change = "s10";
            }
        }
        else if (region == "s11")
        {
            if (change != "s11")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                generator2(3427925020108480120421, 22333339235043853496, 232389333858603333, 523323213198492334333334, 8333397129741365, 0, 6725, -105895);

                for (var i = scenicList.length - 1; i >= 0; i--)
                {
                    if (scenicList[i].X < 2802 && scenicList[i].X > 2501)
                    {
                        scenicList.splice(i, 1);
                    }
                }


                change = "s11";
            }
        }
        else if (region == "s12")
        {
            if (change != "s12")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                generator2(77216413742348524795734, 557765, 8412977777914721, 67763481412, 2937777349372358, 0, 6729, -116124);

                for (var i = scenicList.length - 1; i >= 0; i--)
                {
                    if (scenicList[i].X < 2802 && scenicList[i].X > 2501)
                    {
                        scenicList.splice(i, 1);
                    }
                }


                change = "s12";
            }
        }
        else if (region == "s13")
        {
            if (change != "s13")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                generator2(41421321742348524795734, 523523685563431242342, 3341425464573235536241721, 745221412, 2836632675290991358, 0, 6692, -126326);

                for (var i = scenicList.length - 1; i >= 0; i--)
                {
                    if (scenicList[i].X < 2806 && scenicList[i].X > 2501)
                    {
                        scenicList.splice(i, 1);
                    }
                }


                change = "s13";
            }
        }
        else if (region == "s14")
        {
            if (change != "s14")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                generator(56, 5, 33, 45, 135, 0, 6738, -136459);

                change = "s14";
            }
        }
        else if (region == "s15")
        {
            if (change != "s15")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                generator(11124, 34, 92, 110, 22340, 0, 6679, -146718);
                trimmer(809, -155022, 704, -155128, false);
                trimmer(6940, -155987, -3197, -156973, false);
                scenicList.push(new Scenery("sign", 1008, -146856, -1/2 * Math.PI, 0, "Inochtihikli Village - 46 sectors"));

                change = "s15";
            }
        }
        else if (region == "s17")
        {
            if (change != "s17")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                //Animals
                ArtificialIntelligenceAccess.push(new Unit(4223, -169078, "Mugmul", false, "Pkotpaht"));
                ArtificialIntelligenceAccess.push(new Unit(5256, -170128, "Mugmul", false, "Pkotpahti"));
                ArtificialIntelligenceAccess.push(new Unit(5979, -168026, "Mugmul", false, "Pkotpahti"));
                ArtificialIntelligenceAccess.push(new Unit(4259, -169683, "Mugmul", true, "Pkatpoht"));
                ArtificialIntelligenceAccess.push(new Unit(3850, -170690, "Taipan", false, "Sapatli"));

                ArtificialIntelligenceAccess.push(new Unit(2570, -171420, "Taipan", true, "Sapatli"));
                ArtificialIntelligenceAccess.push(new Unit(2721, -171094, "Taipan", true, "Sapatli"));
                ArtificialIntelligenceAccess.push(new Unit(2222, -171501, "Taipan", false, "Sapatli"));
                ArtificialIntelligenceAccess.push(new Unit(2846, -171256, "Taipan", false, "Sapatli"));

                for (var l = 0; l < 8; l++)
                {
                    var sdedX = 1317 + (1400 * seeder(l * 12) - 700);
                    var sdedY = -174630 + (1400 * seeder(l * 15) - 700);
                    if (Math.random() > 0.56)
                    {
                        scenicList.push(new Scenery("mofuNest", sdedX, sdedY, Math.random() * (2* Math.PI), Math.random() + 0.8));
                        ArtificialIntelligenceAccess.push(new Unit(sdedX, sdedY, "Mofu", Math.round(Math.random()), "Flethy"));
                    }
                    else
                    {
                        if (Math.random() > 0.6)
                        {
                            scenicList.push(new Scenery("mofuNest", sdedX, sdedY, Math.random() * (2* Math.PI), Math.random() + 0.8));
                            ArtificialIntelligenceAccess.push(new Unit(sdedX + 350 * Math.random() - 175, sdedY + 350 * Math.random() - 175, "Mofu", Math.round(Math.random()), "Flethy"));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(sdedX + 500 * Math.random() - 250, sdedY + 400 * Math.random() - 200, "Mofu", "baby", "Flethu"));
                        }
                    }
                }

                ArtificialIntelligenceAccess.push(new Unit(1853, -169373, "Yioshk", true, "Biltir"));
                ArtificialIntelligenceAccess.push(new Unit(-1506, -173266, "Yioshk", false, "Biltor"));
                ArtificialIntelligenceAccess.push(new Unit(672, -175776, "Yioshk", false, "Biltar"));
                ArtificialIntelligenceAccess.push(new Unit(5986, -174729, "Yioshk", true, "Biltirin"));
                ArtificialIntelligenceAccess.push(new Unit(4783, -176294, "Rhinoceros", false, "Cacaletp"));

                ArtificialIntelligenceAccess.push(new Unit(5882, -169442, "Zarbu", false, "zabiido"));
                ArtificialIntelligenceAccess.push(new Unit(4985, -169270, "Zarbu", false, "zabiidu"));
                ArtificialIntelligenceAccess.push(new Unit(6250, -170008, "Zarbu", "baby", "zabiida"));
                ArtificialIntelligenceAccess.push(new Unit(6036, -170808, "Zarbu", true, "zabiidin"));

                ArtificialIntelligenceAccess.push(new Unit(5788, -172535, "Taipan", false, "Sapatli"));

                ArtificialIntelligenceAccess.push(new Unit(4126, -174209, "Zarbu", false, "zabiidu"));
                ArtificialIntelligenceAccess.push(new Unit(3644, -174756, "Zarbu", "baby", "zabiida"));

                ArtificialIntelligenceAccess.push(new Unit(3930, -173373, "Yioshk", false, "Biltar"));

                scenicList.push(new Scenery("yeolTree", 6100 , -172371, 10.5, false));
                scenicList.push(new Scenery("yeolTree", 3153 , -175028, 14, false));

                ArtificialIntelligenceAccess.push(new Unit(2991, -175363, "Mofu", Math.round(Math.random()), "Flethy"));
                ArtificialIntelligenceAccess.push(new Unit(3240, -176626, "Mofu", Math.round(Math.random()), "Flethy"));
                ArtificialIntelligenceAccess.push(new Unit(5054, -169154, "Mofu", Math.round(Math.random()), "Flethy"));

                //Scenery
                for (var l = 0; l < 18; l++)
                {
                    scenicList.push(new Scenery("yeolTree", 4700 + 3000 * seeder(l + (l + 99)) - 1500, -169200 + 3000 * seeder(l * (l * 20)) - 1500, Math.random() * (2* Math.PI), true));
                }
                scenicList.push(new Scenery("darkStone", 2758 , -171183, 6, 2, 1));
                scenicList.push(new Scenery("yeolTree", 2209 , -171535, 8, false));
                scenicList.push(new Scenery("kwomPlant", 3313 , -172394, 7, true));
                scenicList.push(new Scenery("apotlPlant", 1252 , -172151, 5, true));
                scenicList.push(new Scenery("yeolTree", 11 , -174015, -2.9, false));
                scenicList.push(new Scenery("pochalPlant", -882 , -174683, 10, true));
                scenicList.push(new Scenery("hracklePlant", -1994 , -171679, 0.5, true));
                scenicList.push(new Scenery("hracklePlant", 228 , -170877, 0, true));
                scenicList.push(new Scenery("hracklePlant", 2033 , -176060, 2.5, true));
                scenicList.push(new Scenery("aktaltlPlant", 4940 , -176674, 6.7, true));
                scenicList.push(new Scenery("aktaltlPlant", 4715 , -172609, 13.1, true));
                scenicList.push(new Scenery("kwomPlant", 3829 , -175155, 9, true));
                scenicList.push(new Scenery("darkStone", 5624 , -167429, 8, 1, 2));
                scenicList.push(new Scenery("apotlPlant", 5735 , -174626, 2.2, true));
                scenicList.push(new Scenery("hracklePlant", 4797, -170657, 1.17, true));

                change = "s17";
            }
        }
        else if (region == "s19")
        {
            if (change != "s19")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                generator(6665, 10, 56, 72, 83, 3, 6665, -187521);

                change = "s19";
            }
        }
        else if (region == "s20")
        {
            if (change != "s20")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                generator(794, 2353, 986, 38, 89765, 3, 6732, -197713);
                trimmer(-3078, -197378, -3888, -207313);

                change = "s20";
            }
        }
        else if (region == "s21")
        {
            if (change != "s21")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                generator(673, 20791, 10, 110, 11010, 3, 6703, -207910);
                trimmer(7997, -216466, 7355, -216833, false);


                change = "s21";
            }
        }
        else if (region == "s22")
        {
            if (change != "s22")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                scenicList.push(new Scenery("yeolTree", -1789.9381250000004, -217656.13882572018,4.343001556192405, true)); //copied s21
                scenicList.push(new Scenery("hracklePlant", 3421.228, -217190.30544999999,5.345574630865979, true)); //copied s21
                scenicList.push(new Scenery("pochalPlant", 2478.6633249999995, -217310.3455,4.820169979450494, true)); //copied s21
                generator(74, 3090, 75, 567, 89, 3, 6568, -218179);
                trimmer(6685, -227283, -3236, -229903);


                change = "s22";
            }
        }
        else if (region == "s23")
        {
            if (change != "s23")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                generator(27, 150, 9870, 5545, 29, 3, 6727, -228264);
                scenicList.push(new Scenery("selvaTree", 6456, -238578,0.38, 0)); //copied s24
                scenicList.push(new Scenery("selvaTree", 5687.632046935739, -238507.84678797744,3, 0)); //copied s24
                scenicList.push(new Scenery("selvaTree", 1001.1523946130909, -238607.04309654268,2, 0)); //copied s24
                scenicList.push(new Scenery("selvaTree", -2375.632782131061, -238617.4969161959,5, 0)); //copied s24
                scenicList.push(new Scenery("selvaTree", 4621.544364409696, -238546.04183270253,5, 0)); //copied s24
                scenicList.push(new Scenery("selvaTree", 1847.0919853353873, -238827.94306016766,20.04, 0)); //copied s24
                scenicList.push(new Scenery("selvaTree", 3609.163662697182, -238684.98384033298,1, 0)); //copied s24
                scenicList.push(new Scenery("selvaTree", -1095.837109391663, -238770.385976248,1, 0)); //copied s24
                scenicList.push(new Scenery("selvaTree", -2957.990835461984, -238550.7498541408,0, 0)); //copied s24
                scenicList.push(new Scenery("selvaTree", 238.54078903048904, -238534.22047766793,19, 0)); //copied s24


                change = "s23";
            }
        }
    }
    else if (map == "sagesCache")
    {
        if (region == "sagesCache")
        {
            if (change != "sagesCache")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (!ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //barriers
                barrierList.push(new Barrier(1000, -66, 720, 70, true));
                barrierList.push(new Barrier(328, -66, 1546, 70, true)); //long vertical right (entrance)
                barrierList.push(new Barrier(328, 1775, 900, 70, true)); //extension vertical right (entrance)
                barrierList.push(new Barrier(328, -96, 70, 720, true));
                barrierList.push(new Barrier(702, 570, 70, 370, true));
                barrierList.push(new Barrier(702, 630, 2045, 70, true)); //longer vertical left (entrance)
                barrierList.push(new Barrier(30, 2607, 70, 300, true));
                barrierList.push(new Barrier(30, 2607, 990, 70, true));
                barrierList.push(new Barrier(770, 2607, 70, 2031, true)); //bottom left horizontal east
                barrierList.push(new Barrier(1070, 2977, 70, 1731, true)); //top left horizontal east
                barrierList.push(new Barrier(1000, 2976, 650, 70, true));
                barrierList.push(new Barrier(30, 3578, 70, 1020, true));
                barrierList.push(new Barrier(2730, 1738, 886, 70, true)); //east chamber
                barrierList.push(new Barrier(3401, 1738, 1550, 70, true));
                barrierList.push(new Barrier(2730, 1704, 70, 700, true));
                barrierList.push(new Barrier(3100, 3278, 70, 340, true));
                barrierList.push(new Barrier(2730, 3045, 1130, 70, true));
                barrierList.push(new Barrier(3099, 3347, 1430, 70, true));
                barrierList.push(new Barrier(3163, 4704, 70, 1738, true));
                barrierList.push(new Barrier(3100, 5073, 70, 2105, true));
                barrierList.push(new Barrier(2732, 4475, 899, 70, true));
                barrierList.push(new Barrier(3099, 5141, 560, 70, true));
                barrierList.push(new Barrier(1832, 5304, 70, 900, true));
                barrierList.push(new Barrier(1830, 5308, 966, 70, true));
                barrierList.push(new Barrier(2199, 5658, 70, 950, true));
                barrierList.push(new Barrier(2199, 5677, 598, 70, true));
                barrierList.push(new Barrier(5198, 3273, 1850, 70, true));
                barrierList.push(new Barrier(4832, 3208, 70, 415, true));
                barrierList.push(new Barrier(4832, 3208, 1560, 70, true));
                barrierList.push(new Barrier(1535, 6204, 70, 330, true));
                barrierList.push(new Barrier(1535, 6209, 700, 70, true));
                barrierList.push(new Barrier(2270, 6206, 70, 330, true));
                barrierList.push(new Barrier(2497, 6239, 670, 70, true));
                barrierList.push(new Barrier(1552, 6878, 70, 1000, true));
                barrierList.push(new Barrier(-202, 4106, 70, 3000, true));
                barrierList.push(new Barrier(-199, 4478, 70, 3000, true));
                barrierList.push(new Barrier(-196, 4478, 600, 70, true));
                barrierList.push(new Barrier(-1160, 5078, 70, 1010, true));
                barrierList.push(new Barrier(-1173, 4778, 340, 70, true));
                barrierList.push(new Barrier(-1168, 3805, 70, 1010, true));
                barrierList.push(new Barrier(-1169, 3795, 680, 70, true));
                barrierList.push(new Barrier(-202, 3800, 320, 70, true));
                barrierList.push(new Barrier(-1699, 4406, 70, 535, true));
                barrierList.push(new Barrier(-2054, 4777, 70, 910, true));
                barrierList.push(new Barrier(-1701, 1774, 2640, 70, true)); //long vertical
                barrierList.push(new Barrier(-2078, 1403, 70, 380, true));
                barrierList.push(new Barrier(-2068, 1426, 2752, 70, true));
                barrierList.push(new Barrier(-2072, 4477, 390, 70, true));
                barrierList.push(new Barrier(-1786, 202, 70, 740, true));
                barrierList.push(new Barrier(-1766, 200, 1240, 70, true));
                barrierList.push(new Barrier(-1097, 212, 1000, 70, true)); //vertical left side south
                barrierList.push(new Barrier(-1398, 1174, 70, 400, true));
                barrierList.push(new Barrier(-1398, 1174, 262, 70, true));
                barrierList.push(new Barrier(-1404, 1403, 70, 1740, true));
                barrierList.push(new Barrier(-1636, 1778, 70, 1964, true));
                barrierList.push(new Barrier(-4085, 4108, 70, 2060, true)); //bot
                barrierList.push(new Barrier(-4470, 4478, 70, 2417, true)); //top
                barrierList.push(new Barrier(-4100, 3871, 300, 70, true));
                barrierList.push(new Barrier(-4093, 3872, 70, 600, true));
                barrierList.push(new Barrier(-4468, 3874, 620, 70, true)); //right vertical
                barrierList.push(new Barrier(-3506, 2906, 1025, 70, true)); //far left low
                barrierList.push(new Barrier(-5357, 2907, 70, 1900, true)); //bottom low (left)
                barrierList.push(new Barrier(-5370, 2924, 290, 70, true)); // |
                barrierList.push(new Barrier(-5902, 3200, 70, 603, true)); // --
                barrierList.push(new Barrier(-5905, 2898, 320, 70, true)); // |
                barrierList.push(new Barrier(-6890, 2904, 70, 1010, true));
                barrierList.push(new Barrier(-6869, 2900, 1000, 70, true));
                barrierList.push(new Barrier(-6889, 3872, 70, 1010, true)); //top right far horizontal
                barrierList.push(new Barrier(-5359, 3870, 70, 900, true)); //top right near horizontal
                barrierList.push(new Barrier(-5899, 3578, 70, 570, true));
                barrierList.push(new Barrier(-5899, 3581, 360, 70, true));
                barrierList.push(new Barrier(-5373, 3574, 340, 70, true));


                //REGION CREATION
                //Build AI Units

                //first room
                var rndx = Math.random();
                if (rndx >= 0.55)
                {
                    ArtificialIntelligenceAccess.push(new Unit(845, 498, "Nog", true, "Kalp"));
                    ArtificialIntelligenceAccess.push(new Unit(490, 106, "Nog", true, "Dilk"));
                    ArtificialIntelligenceAccess.push(new Unit(757, 144, "Nog", false, "Pesht"));
                }
                else if (rndx >= 0.25)
                {
                    ArtificialIntelligenceAccess.push(new Unit(845, 498, "Frich", true, "Ja"));
                    ArtificialIntelligenceAccess.push(new Unit(490, 106, "Frich", false, "Li"));
                    ArtificialIntelligenceAccess.push(new Unit(757, 144, "Frich", true, "Ko"));
                }
                else if (rndx >= 0.15)
                {
                    ArtificialIntelligenceAccess.push(new Unit(795, 439, "Oolid", true, "Oglomok"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(931, 482, "Oolid", false, "Aglomel"));
                    ArtificialIntelligenceAccess.push(new Unit(672, 35, "Oolid", false, "Eklamil"));
                }
                //hallway ambush or not
                rndx = Math.random();
                if (rndx >= 0.67)
                {
                    ArtificialIntelligenceAccess.push(new Unit(558, 1522, "Nog", false, "Paik"));
                }
                else if (rndx >= 0.46)
                {
                    ArtificialIntelligenceAccess.push(new Unit(558, 1522, "Nog", true, "Paike"));
                }
                else if (rndx >= 0.34)
                {
                    ArtificialIntelligenceAccess.push(new Unit(486, 1607, "Oolid", false, "ilklo"));
                }
                else if (rndx >= 0.26)
                {
                    ArtificialIntelligenceAccess.push(new Unit(558, 1522, "Frich", true, "Zo"));
                    ArtificialIntelligenceAccess.push(new Unit(486, 1607, "Frich", false, "Ka"));
                }

                rndx = Math.random();
                if (rndx >= 0.80)
                {
                    ArtificialIntelligenceAccess.push(new Unit(770, 2982, "Frich", "massive", "Scurr"));
                    ArtificialIntelligenceAccess.push(new Unit(487, 3438, "Frich", "massive", "Relf"));
                }
                else if (rndx >= 0.60)
                {
                    ArtificialIntelligenceAccess.push(new Unit(560, 3189, "Tilk", true, "Poluikeiv"));
                }
                else if (rndx >= 0.40)
                {
                    ArtificialIntelligenceAccess.push(new Unit(853, 3420, "Tilk", false, "Kastur"));
                    ArtificialIntelligenceAccess.push(new Unit(235, 3325, "Tilk", false, "Polukz"));
                }
                else if (rndx >= 0.20)
                {
                    ArtificialIntelligenceAccess.push(new Unit(476, 3362, "Oolid", true, "Merhuv"));
                    ArtificialIntelligenceAccess.push(new Unit(697, 3090, "Oolid", false, "Clotzalk"));
                }
                else
                {
                    if (Math.round(Math.random()))
                    {
                        ArtificialIntelligenceAccess.push(new Unit(538, 3055, "Soldier", false, "Looter", {race: "Thengar", faction: "hostile", con: 4, speed: 0, outfit: ["none", 0], weapon: ["longbow", [0.1, 0.4], 0, 16, 1], ranged: [true, "arrow", 8, 1100, 1, 5, 0, "none", 1.2], patrolStops: 0, patrolLoop: false, route:[[435 - 750, 5563], [400 - 750, 5668], [636 - 750, 5860], [827 - 750, 5357]]}));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(538, 3055, "Soldier", false, "Looter", {race: "Freynor", faction: "hostile", con: 6, speed: 0, outfit: ["none", 0], weapon: ["longbow", [0.1, 0.4], 0, 16, 1], ranged: [true, "arrow", 7, 1275, 1, 4, 0, "none", 1.6], patrolStops: 0, patrolLoop: false, route:[[435 - 750, 5563], [400 - 750, 5668], [636 - 750, 5860], [827 - 750, 5357]]}));
                    }
                    scenicList.push(new Scenery("bearTrap", 629, 2638, 1/8 * Math.PI, true));
                    scenicList.push(new Scenery("bearTrap", 549, 2500, 5.5/8 * Math.PI, true));
                    scenicList.push(new Scenery("bearTrap", 448, 2531, 0 * Math.PI, true));
                    scenicList.push(new Scenery("bearTrap", 409, 2405, 0.5 * Math.PI, true));
                    scenicList.push(new Scenery("bearTrap", 660, 2315, 0.33 * Math.PI, true));
                }
                rndx = Math.random();
                if (rndx <= 0.5)
                {
                    ArtificialIntelligenceAccess.push(new Unit(2981, 1978, "Nog", true, "Pok"));
                    ArtificialIntelligenceAccess.push(new Unit(3332, 1834, "Nog", true, "Zob"));
                    ArtificialIntelligenceAccess.push(new Unit(3253, 2121, "Nog", false, "Zim"));
                    ArtificialIntelligenceAccess.push(new Unit(3089, 2322, "Nog", false, "Zal"));
                    ArtificialIntelligenceAccess.push(new Unit(2903, 2302, "Nog", false, "Zil"));
                    ArtificialIntelligenceAccess.push(new Unit(3297, 2545, "Nog", false, "Zop"));
                    ArtificialIntelligenceAccess.push(new Unit(3198, 2888, "Nog", true, "Zolth"));
                    ArtificialIntelligenceAccess.push(new Unit(3089, 3165, "Nog", false, "Zole"));
                    ArtificialIntelligenceAccess.push(new Unit(3368, 3229, "Nog", false, "Afer"));
                }
                else if (rndx <= 0.8)
                {
                    ArtificialIntelligenceAccess.push(new Unit(2981, 1978, "Frich", false, "Fok"));
                    ArtificialIntelligenceAccess.push(new Unit(3332, 1834, "Frich", false, "Fob"));
                    ArtificialIntelligenceAccess.push(new Unit(3253, 2121, "Frich", true, "Fim"));
                    ArtificialIntelligenceAccess.push(new Unit(3089, 2322, "Frich", true, "Fal"));
                    ArtificialIntelligenceAccess.push(new Unit(2903, 2302, "Frich", false, "Fil"));
                    ArtificialIntelligenceAccess.push(new Unit(3297, 2545, "Frich", false, "Fop"));
                    ArtificialIntelligenceAccess.push(new Unit(3198, 2888, "Frich", true, "Folth"));
                    ArtificialIntelligenceAccess.push(new Unit(3089, 3165, "Frich", true, "Fole"));
                    ArtificialIntelligenceAccess.push(new Unit(3368, 3229, "Frich", false, "Fer"));
                }
                else if (rndx <= 0.95)
                {
                    ArtificialIntelligenceAccess.push(new Unit(3071, 1887, "Oolid", true, "Plutma"));
                    ArtificialIntelligenceAccess.push(new Unit(3219, 2195, "Oolid", true, "Hlolutmor"));
                    ArtificialIntelligenceAccess.push(new Unit(3231, 2657, "Oolid", false, "Hlotm"));
                    ArtificialIntelligenceAccess.push(new Unit(2948, 3245, "Oolid", false, "Flomlaak"));
                    ArtificialIntelligenceAccess.push(new Unit(3293, 2822, "Oolid", false, "Flotmora"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(3241, 2194, "Tilk", false, "Kolkezafa"));
                    ArtificialIntelligenceAccess.push(new Unit(3153, 1883, "Tilk", false, "Karkefol"));
                }

                rndx = Math.random();
                if (rndx <= 0.25)
                {
                    ArtificialIntelligenceAccess.push(new Unit(5056, 3469, "Tilk", true, "Lestuxlevt"));
                }
                else if (rndx <= 0.5)
                {
                    ArtificialIntelligenceAccess.push(new Unit(5056, 3469, "Olkrin", "baby", "Vaulswarthe"));
                }

                rndx = Math.random();
                if (rndx <= 0.1)
                {
                    ArtificialIntelligenceAccess.push(new Unit(2362, 6727, "Tilk", false, "Ekenveldt"));
                    ArtificialIntelligenceAccess.push(new Unit(1758, 6733, "Tilk", false, "Akenveldt"));
                    ArtificialIntelligenceAccess.push(new Unit(2049, 6625, "Tilk", false, "Ikenveldt"));
                }
                else if (rndx <= 0.2)
                {
                    ArtificialIntelligenceAccess.push(new Unit(2053, 6796, "Olkrin", "baby", "Vonklaove"));
                }
                else if (rndx <= 0.3)
                {
                    ArtificialIntelligenceAccess.push(new Unit(2049, 6558, "Tilk", true, "Kavenveldt"));
                }
                else if (rndx <= 0.8)
                {
                    ArtificialIntelligenceAccess.push(new Unit(2298, 6676, "Nog", false, "Af"));
                    ArtificialIntelligenceAccess.push(new Unit(2115, 6553, "Nog", true, "Aft"));
                    ArtificialIntelligenceAccess.push(new Unit(2039, 6798, "Nog", true, "Afte"));
                    ArtificialIntelligenceAccess.push(new Unit(1814, 6738, "Nog", false, "Afe"));
                    ArtificialIntelligenceAccess.push(new Unit(1707, 6535, "Nog", true, "Tefa"));
                    ArtificialIntelligenceAccess.push(new Unit(1943, 6477, "Nog", false, "Tafe"));
                    ArtificialIntelligenceAccess.push(new Unit(2232, 6520, "Nog", true, "Efat"));
                    ArtificialIntelligenceAccess.push(new Unit(2443, 6387, "Nog", false, "Faet"));
                }
                else if (rndx <= 0.88)
                {
                    ArtificialIntelligenceAccess.push(new Unit(2055, 6547, "MountainFrich", true, "Holof"));
                }

                rndx = Math.random();
                if (rndx <= 0.2)
                {
                    ArtificialIntelligenceAccess.push(new Unit(2016, 4351, "Nog", false, "Atle"));
                }
                else if (rndx <= 0.4)
                {
                    ArtificialIntelligenceAccess.push(new Unit(2016, 4351, "Nog", true, "Etla"));
                }
                else if (rndx <= 0.5)
                {
                    ArtificialIntelligenceAccess.push(new Unit(2016, 4351, "Nog", true, "Etla"));
                    ArtificialIntelligenceAccess.push(new Unit(1959, 4257, "Nog", true, "Leat"));
                }
                else if (rndx <= 0.6)
                {
                    ArtificialIntelligenceAccess.push(new Unit(2011, 4322, "MountainFrich", false, "Kalofer"));
                }
                else if (rndx <= 0.7)
                {
                    ArtificialIntelligenceAccess.push(new Unit(1513, 4426, "Oolid", false, "Koulpil"));
                }
                else if (rndx <= 0.8)
                {
                    ArtificialIntelligenceAccess.push(new Unit(1513, 4426, "Oolid", true, "Foulok"));
                    ArtificialIntelligenceAccess.push(new Unit(1631, 4236, "Oolid", true, "Fowlomn"));
                }

                rndx = Math.random();
                if (rndx <= 0.3)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-670, 1671, "Miter", false, "Cash"));
                }
                else if (rndx <= 0.6)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-670, 1671, "Miter", true, "Cash"));
                }
                else if (rndx <= 0.7)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-670, 1671, "Miter", false, "Cash"));
                    ArtificialIntelligenceAccess.push(new Unit(-863, 1532, "Miter", false, "Grave"));
                }
                else if (rndx <= 0.8)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-815, 1699, "Miter", true, "Cash"));
                    ArtificialIntelligenceAccess.push(new Unit(-568, 1560, "Miter", true, "Grave"));
                }
                else if (rndx <= 0.9)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-815, 1699, "Miter", true, "Cash"));
                    ArtificialIntelligenceAccess.push(new Unit(-568, 1560, "Miter", false, "Grave"));
                }
                else if (rndx <= 1)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-815, 1699, "Miter", false, "Cash"));
                    ArtificialIntelligenceAccess.push(new Unit(-568, 1560, "Miter", true, "Grave"));
                }

                rndx = Math.random();
                if (rndx <= 0.25)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-1257, 873, "Tilk", true, "Thavenveldt"));
                    ArtificialIntelligenceAccess.push(new Unit(-1409, 492, "Tilk", true, "Dgavemxeldt"));
                    ArtificialIntelligenceAccess.push(new Unit(-1199, 474, "Tilk", false, "Jyermovenm"));
                }
                else if (rndx <= 0.6)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-1249, 1029, "Miter", false, "Ditch"));
                    ArtificialIntelligenceAccess.push(new Unit(-1221, 383, "Miter", true, "Cash"));
                    ArtificialIntelligenceAccess.push(new Unit(-1422, 470, "Miter", true, "Grave"));
                    ArtificialIntelligenceAccess.push(new Unit(-1520, 749, "Miter", true, "Dig"));
                }
                else if (rndx <= 1)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-1221, 383, "Miter", true, "Cash"));
                    ArtificialIntelligenceAccess.push(new Unit(-1422, 470, "Miter", true, "Grave"));
                    ArtificialIntelligenceAccess.push(new Unit(-1520, 749, "Miter", true, "Dig"));
                }

                scenicList.push(new Scenery("spindleTrap", -1748, 1715, -0.33 * Math.PI, true));
                scenicList.push(new Scenery("spindleTrap", -1911, 1543, 0.66 * Math.PI, true));
                scenicList.push(new Scenery("spindleTrap", -1904, 1719, 0.2 * Math.PI, true));
                scenicList.push(new Scenery("spindleTrap", -1777, 1588, -0.55 * Math.PI, true));

                //TODO finish this dungeon (include the lightning spear mage as the final boss if you engage the right quest)

                //Build Scenery
                scenicList.push(new Scenery("caveExit", 959, 16, 3/4 * Math.PI, [35773, 1297], "world"));

                scenicList.push(new Scenery("blackBearFurRug", 2049, 6450, 1/2 * Math.PI, 1.6));
                scenicList.push(new Scenery("skeleton", 2058, 6781, 0.2 * Math.PI, 1.6));
                scenicList.push(new Scenery("feastingTable", 2232, 6536, -1/2 * Math.PI, true));
                scenicList.push(new Scenery("feastingTable", 1790, 6536, -1/2 * Math.PI, true));
                scenicList.push(new Scenery("bartop", 2061, 6712, 1 * Math.PI, true));
                scenicList.push(new Scenery("hearth", 2062, 6855, 0 * Math.PI, "ash"));

                scenicList.push(new Scenery("magicButton", 2805, 1935, Math.PI, "magesCache", 1));
                scenicList.push(new Scenery("skeleton", 2881.6936888668993, 1827.604513908504, 0.68 * Math.PI, 1.4));
                scenicList.push(new Scenery("magicButton", -174, 4470, 1/2 * Math.PI, "magesCache", 2));
                scenicList.push(new Scenery("item", -207, 4455, 0, false, ["arrow", 1, 0]));
                scenicList.push(new Scenery("magicButton", -1104, 553, 0, "magesCache", 3));
                scenicList.push(new Scenery("item", -1217, 593, 0, false, ["steelArrow", 1, 0]));
                scenicList.push(new Scenery("magicLock", -967, 4008, 0, "magesCache"));

                scenicList.push(new Scenery("magicOrbPortal", -6341, 3777, 0, "magesCache", [0, 0, "sagesTrap"]));

                if (uniqueChars.vsevolodLDS == true && quests.theSecretOfTheSagesCacheQuest == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Vsevolod")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-4278, 3654, "Soldier", false, "Vsevolod", {race: "Vardan", faction: "loner", con: 7, speed: 1.2, outfit: ["blackMageRobe", 0], weapon: ["drainingI", [9, 4], 0, 200, 3], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, CNX: 200, MR: 7, patrolStops: 1, patrolLoop: false, route:[[-4285, 3646]]}));
                    }
                }

                if (uniqueChars.aleksiLDS == true && quests.theSecretOfTheSagesCacheQuest == true || uniqueChars.aleksiLDS == true && have("garldsMemories", 1))
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "High Magus Aleksi")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-6341.102330659225, 3708.7013251695707, "Soldier", false, "High Magus Aleksi", {race: "Cephrite", faction: "loner", con: 9, speed: 1.4, outfit: ["magusRobesM", 0], weapon: ["lightningCorseque", [12, 6], 5, 43, 1.5], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, CNX: 50, MR: 4, patrolStops: 1, patrolLoop: false, route:[[-6313.101891814239, 3687.254470007552]]}));
                    }
                }




                if (quests.sagesCacheStash)
                {
                    quests.sagesCacheStash = false;
                    worldItems.push([new Item("oiledArrow", 2051, 6782), 9]);
                    worldItems.push([new Item("longbow", 2066, 6646), 1]);
                    worldItems.push([new Item("longsword", 2099, 6821), 1]);
                    worldItems.push([new Item("pintGlass", 2053, 6701), 1]);
                }

                change = "sagesCache";
            }
        }
    }
    else if (map == "sagesTrap")
    {
        if (region == "sagesTrap")
        {
            if (change != "sagesTrap")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (!ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //barriers

                //REGION CREATION
                //Build AI Units

                if (quests.theSecretOfTheSagesCacheQuest == true)
                {
                    quests.theSecretOfTheSagesCacheCompletionStyle = "foundCache";
                    quests.theSecretOfTheSagesCacheQuest = "complete";
                    if (uniqueChars.vsevolodLDS == true)
                    {
                        quests.completeQuests.push({name: "The Secret of the Sage's Cache", description: "You have solved the puzzle and entered the magical realm wherein the sage's treasure lies, but you have been decieved by Vsevolod who has turned on you."});
                    }
                    else
                    {
                        quests.completeQuests.push({name: "The Secret of the Sage's Cache", description: "You have solved the puzzle and entered the magical realm wherein the sage's treasure lies."});
                    }
                    player.thengarFaction += 20;
                    if (player.class == "Mage" || player.class == "Priest" || player.class == "Shaman")
                    {
                        player.magicalExperience += 300;
                    }
                    else
                    {
                        player.experience += 1100;
                    }
                    player.fame += 1;
                }

                scenicList.push(new Scenery("returnOrbPortal", 0, 0, 0, 1, [-6341, 3777, "sagesCache"]));

                if (uniqueChars.vsevolodLDS == true && quests.theSecretOfTheSagesCacheQuest == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Vsevolod")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(200, -100, "Soldier", false, "Vsevolod", {race: "Vardan", faction: "loner", con: 7, speed: 1.2, outfit: ["blackMageRobe", 0], weapon: ["drainingI", [9, 4], 0, 200, 3], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, CNX: 200, MR: 19, patrolStops: 1, patrolLoop: false, route:[[50405, -10488]]}));
                    }
                }

                if (uniqueChars.aleksiLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "High Magus Aleksi")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-100, 200, "Soldier", false, "High Magus Aleksi", {race: "Cephrite", faction: "loner", con: 9, speed: 1.4, outfit: ["magusRobesM", 0], weapon: ["lightningCorseque", [12, 6], 5, 43, 1.5], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, CNX: 50, MR: 4, patrolStops: 1, patrolLoop: false, route:[[-6313.101891814239, 3687.254470007552]]}));
                    }
                }

                ArtificialIntelligenceAccess.push(new Unit(2000, 1000, "AncientBeing", false, "edod"));
                ArtificialIntelligenceAccess.push(new Unit(4000, -4500, "AncientBeing", false, "ezod"));
                ArtificialIntelligenceAccess.push(new Unit(0, -5000, "AncientBeing", false, "ezob"));
                ArtificialIntelligenceAccess.push(new Unit(-1000, 2000, "AncientBeing", true, "elbav"));
                ArtificialIntelligenceAccess.push(new Unit(6500, 4900, "AncientBeing", true, "evohg"));
                ArtificialIntelligenceAccess.push(new Unit(-7200, -8100, "AncientBeing", false, "izub"));
                ArtificialIntelligenceAccess.push(new Unit(3700, 2500, "AncientBeing", false, "izub"));
                ArtificialIntelligenceAccess.push(new Unit(-6600, 1200, "AncientBeing", true, "izud"));


                scenicList.push(new Scenery("skeleton", 2990, 3998, -3/5 * Math.PI, 1.55));
                if (quests.sagesTrapStash)
                {
                    quests.sagesTrapStash = false;
                    worldItems.push([new Item("theCorpseRing", 3000, 4000), 1]);
                    worldItems.push([new Item("summonDemon", 3020, 3980), 1]);
                    worldItems.push([new Item("surge", 4000, 3990), 1]);
                    worldItems.push([new Item("powerDraw", 2650, 3760), 1]);
                    worldItems.push([new Item("theUndyingEdge", 6000, 5000), 1]);
                }

                change = "sagesTrap";
            }

            //endless
            if (X > 11900)
            {
                X = -9400;
            }
            if (X < -9500)
            {
                X = 11800;
            }
            if (Y > 11900)
            {
                Y = -10650;
            }
            if (Y < -10750)
            {
                Y = 11800;
            }
        }
    }
    else if (map == "olkrinCave")
    {
        if (region == "olkrinCave")
        {
            if (change != "olkrinCave")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (!ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //barriers
                barrierList.push(new Barrier((699.2775959526685), (-626.4157589439692), 610, 55, true));
                barrierList.push(new Barrier((53.525631205374566), (-625.4873771085416), 599, 46, true));
                barrierList.push(new Barrier((59.525631205374566), (-665.4873771085416), 40, 678, true));
                barrierList.push(new Barrier((-201.30830598087573), (-58.62361297357552), 34, 300, true));
                barrierList.push(new Barrier((700.5657995280674), (-59.358577294819156), 34, 300, true));
                barrierList.push(new Barrier((-245.4796189509459), (-69.44429392578598), 944, 45, true));
                barrierList.push(new Barrier((-253.19519507655968), (875.750368990627), 49, 427, true));
                barrierList.push(new Barrier((98.80480492344032), (574.750368990627), 342, 49, true));
                barrierList.push(new Barrier((99.78854284546219), (574.5061676967189), 49, 957, true));
                barrierList.push(new Barrier((997.0312725235607), (-79.25240342488746), 1016, 49, true));

                //REGION CREATION
                //Build AI Units

                //first room
                var rndx = Math.random();
                if (currentSeason == "Frost")
                {
                    if (rndx >= 0.55)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-35.91479298993537, 718.2031138716949, "Olkrin", false, "Vonklaove"));
                    }
                    else if (rndx >= 0.25)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(801.7774826257606, 252.92874679398903, "Olkrin", "baby", "Vonklaove"));
                    }
                    else if (rndx >= 0.15)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(407.2402681626587, -361.597244535653, "Olkrin", false, "Vonklaove"));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(425.5992467516493, 357.74979540429297, "Olkrin", "baby", "Vonklaove"));
                        ArtificialIntelligenceAccess.push(new Unit(411.9739910131497, 145.78208294963602, "Olkrin", "baby", "Vonklaove"));
                    }
                }
                else
                {
                    if (rndx <= 0.25)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(425.5992467516493, 357.74979540429297, "Olkrin", "baby", "Vonklaove"));
                    }
                    else if (rndx <= 0.05)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(801.7774826257606, 252.92874679398903, "Olkrin", false, "Vonklaove"));
                    }
                }


                //Build Scenery
                scenicList.push(new Scenery("caveExit", 959, 16, 3.3/4 * Math.PI, [31111.6597044643, -8937.125409297807], "world"));

                change = "olkrinCave";
            }
        }
    }
    else if (map == "venningCityPrison")
    {
        if (region == "venningCityPrison")
        {
            if (change != "venningCityPrison")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (!ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //barriers
                barrierList.push(new Barrier(1000, -66, 720, 70, true));
                barrierList.push(new Barrier(330, -66, 720, 70, true));
                barrierList.push(new Barrier(320, -99, 70, 750, true));
                barrierList.push(new Barrier(320, 577, 70, 750, true));

                //scenery
                if (player.prisoner != true)
                {
                    scenicList.push(new Scenery("ladder", 483, 45, 0 * Math.PI, [-18450, 44450], "world"));
                }
                //units
                ArtificialIntelligenceAccess.push(new Unit(780, 338, "Soldier", false, "Prisoner", {race: "Freynor", faction: "arena2", con: 2, speed: 1.5, outfit: ["none", 0], weapon: ["none", [0.45, 0.3], 0, 0, 1], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));

                change = "venningCityPrison";
            }
        }
    }
    else if (map == "mrbHQ")
    {
        if (region == "mrbHQ")
        {
            if (change != "mrbHQ")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (!ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //barriers

                //scenery
                scenicList.push(new Scenery("mrbAssets", 6960.7891866820155, -232268.61677319987, 1/2 * Math.PI, 1, [2, 2116, 2253, "world"]));

                change = "mrbHQ";
            }
        }
    }
    else if (map == "venningMineshaft")
    {
        if (region == "venningMineshaft")
        {
            if (change != "venningMineshaft")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (!ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //barriers
                barrierList.push(new Barrier(1000, 277, 1870, 70, true));
                barrierList.push(new Barrier(1000 - 300, 277 + 1800, 70, 300, true));
                barrierList.push(new Barrier(700, 2077 + 70, 230, 70, true));
                barrierList.push(new Barrier(770, 2307, 70, 3900, true));
                barrierList.push(new Barrier(700 + 3900, 2307 + 70, 300, 70, true));
                barrierList.push(new Barrier(700 + 3900 + 70, 2307 + 300, 70, 1500, true));
                barrierList.push(new Barrier(6100, 2607, 2400, 70, true));
                barrierList.push(new Barrier(6100, 5007, 70, 370, true));
                barrierList.push(new Barrier(6400, 5077, 600, 70, true));
                barrierList.push(new Barrier(6400, 5607, 70, 1570, true));
                barrierList.push(new Barrier(7900, 5677, 670, 70, true));
                barrierList.push(new Barrier(7000, 6277, 70, 900, true));
                barrierList.push(new Barrier(7000, 6347, 300, 70, true));
                barrierList.push(new Barrier(5500, 6577, 70, 1500, true));
                barrierList.push(new Barrier(5500, 6647, 300, 70, true));
                barrierList.push(new Barrier(4530, 6877, 70, 970, true));
                barrierList.push(new Barrier(4530, 5907, 970, 70, true));
                barrierList.push(new Barrier(4600, 5907, 70, 900, true));
                barrierList.push(new Barrier(5430, 5607, 300, 70, true));
                barrierList.push(new Barrier(5500, 5607, 70, 300, true));
                barrierList.push(new Barrier(5730, 3277, 2330, 70, true));
                barrierList.push(new Barrier(5730 - 2100, 3277, 70, 2100, true));
                barrierList.push(new Barrier(3630, 2677, 600, 70, true));
                barrierList.push(new Barrier(330, 2677, 70, 3300, true));
                barrierList.push(new Barrier(330, 1407, 1270, 70, true));
                barrierList.push(new Barrier(400, 1407, 70, 300, true));
                barrierList.push(new Barrier(630, 207, 1200, 70, true));
                barrierList.push(new Barrier(700, 207, 70, 370, true));


                //scenery
                scenicList.push(new Scenery("caveExit", 856, 284, 1/2 * Math.PI, [-17477, 39222], "world"));
                //units
                var rnd = Math.random();
                if (rnd <= 0.15 || quests.theMineshaftMysteryQuest == true)
                {
                    if (Math.round(Math.random()) == 1)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(703, 1764, "Balkur", true, "Benjamin"));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(703, 1764, "Balkur", false, "Benjamin"));
                    }
                }

                if (quests.stolenScriptureLilBaskKilled < 4)
                {
                    ArtificialIntelligenceAccess.push(new Unit(6139, 6271, "Basilisk", "baby", "lilBask"));
                    if (quests.stolenScriptureLilBaskKilled < 3)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(5965, 4795, "Basilisk", "baby", "lilBask"));
                        if (quests.stolenScriptureLilBaskKilled < 2)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(5482, 2891, "Basilisk", "baby", "lilBask"));
                            if (quests.stolenScriptureLilBaskKilled < 1)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(4638, 3037, "Basilisk", "baby", "lilBask"));
                            }
                        }
                    }
                }
                if (quests.stolenScriptureBaskKilled < 2)
                {
                    ArtificialIntelligenceAccess.push(new Unit(7221, 5970, "Basilisk", false, "Bask"));
                    if (quests.stolenScriptureBaskKilled < 1)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(5321, 6261, "Basilisk", false, "Bask"));
                    }
                }
                //if (quests.theMineshaftMysteryQuest != "complete")
                //{
                    ArtificialIntelligenceAccess.push(new Unit(4277, 2907, "Soldier", false, "Rafaard the Looter", {race: "Freynor", faction: "Freynor", con: 6, speed: 1.34, outfit: ["northernClothing", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.85], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                //}

                //EVENTS
                if (quests.theMineshaftMysteryQuest == true)
                {
                    scenicList.push(new Scenery("event", 3816, 2529, 25, "theMineshaftMystery0"));
                }

                //ITEMS
                if (quests.stolenScripturePutScroll == false)
                {
                    quests.stolenScripturePutScroll = true;
                    worldItems.push([new Item("stolenTablet", 4851, 6722), 1]);
                    worldItems.push([new Item("rawGold", 7785, 5762), 1]);
                    worldItems.push([new Item("rawGold", 7800, 5751), 1]);
                }

                change = "venningMineshaft";
            }
        }
    }
    else if (map == "arcusMine")
    {
        if (region == "arcusMine")
        {
            if (change != "arcusMine")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (!ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //barriers
                barrierList.push(new Barrier(1000, 277, 300, 70, true));//left
                barrierList.push(new Barrier(700, 207, 70, 370, true));//bototm
                barrierList.push(new Barrier(630, 207, 1270, 70, true));//right

                barrierList.push(new Barrier(630, 207 + 1270, 70, 370, true)); //b

                barrierList.push(new Barrier(700 + 300, 207 + 300, 70, 370, true)); //b

                barrierList.push(new Barrier(1000 - 70, 277 + 1200, 370, 70, true)); //l

                barrierList.push(new Barrier(700 + 600, 277 + 300, 900, 70, true)); //ll

                barrierList.push(new Barrier(700 + 600, 277 + 1200 - 70, 70, 1270, true)); //bb

                barrierList.push(new Barrier(700 + 300, 277 + 1570 - 70, 70, 900, true)); //bb
                barrierList.push(new Barrier(700 + 1800, 277 + 1200, 670, 70, true)); //ll

                barrierList.push(new Barrier(700 + 1200, 277 + 1870 - 70, 70, 670, true)); //uu
                barrierList.push(new Barrier(700 + 1130, 277 + 1570 - 70, 370, 70, true)); //ur

                scenicList.push(new Scenery("alcaStone", 1072 , 608, 1.5, 2, 1));
                scenicList.push(new Scenery("alcaStone", 1167 , 1091, 3, 1.5, 3));
                scenicList.push(new Scenery("alcaStone", 718 , 1006, 6.75, 1, 3));
                scenicList.push(new Scenery("alcaStone", 1054 , 1425, 0, 3, 2));
                scenicList.push(new Scenery("alcaStone", 1720 , 1656, 1.24, 2.5, 1));
                scenicList.push(new Scenery("alcaStone", 2316 , 1653, 8.9, 2, 2));
                scenicList.push(new Scenery("alcaStone", 2339 , 1524, -5, 3, 2));
                scenicList.push(new Scenery("alcaStone", 2451 , 2034, 11.5, 1.5, 3));
                scenicList.push(new Scenery("alcaStone", 2022 , 1937, -16, 3, 1));


                //scenery
                scenicList.push(new Scenery("arcusExit", 856, 284, 1/2 * Math.PI, [-47261, -8859], "world"));

                if (uniqueChars.gavorLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Arcus Mining Co. Foreman Gavor")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(774, 598, "Person", false, "Arcus Mining Co. Foreman Gavor", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.65, 0.45], 0, 0, 1.33], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[839, 397]]}));
                        for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                        {
                            if (ArtificialIntelligenceAccess[i].ID == "Toggin")
                            {
                                ArtificialIntelligenceAccess[i].healthMAX = 16;
                                ArtificialIntelligenceAccess[i].health = 16;
                            }
                        }
                    }
                }

                scenicList.push(new Scenery("oilLamp", 815, 442, 5.8678137818541137 * Math.PI, true, [1000, 2]));

                change = "arcusMine";
            }
        }
    }
    else if (map == "lethikCityPrison")
    {
        if (region == "lethikCityPrison")
        {
            if (change != "lethikCityPrison")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (!ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //barriers
                barrierList.push(new Barrier(1000, -66, 720, 70, true));
                barrierList.push(new Barrier(-275, -66, 720, 70, true));
                barrierList.push(new Barrier(-291, -99, 70, 1320, true));
                barrierList.push(new Barrier(-291, 577, 70, 1320, true));

                //scenery
                scenicList.push(new Scenery("ladder", 373, 465, 0 * Math.PI, [53014, -6700], "world"));
                //units
                ArtificialIntelligenceAccess.push(new Unit(467, 434, "Soldier", false, "Beulingerr Soldier", {race: "Thengar", faction: "Thengar", con: 7, speed: 1.38, outfit: ["chainArmour", 7], weapon: ["thenganSword", [10, 5], 0, 16, 1.4], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, patrolStops: 0, patrolLoop: true, route:[]}));
                ArtificialIntelligenceAccess.push(new Unit(852, 495, "Soldier", false, "Slave Man", {race: "Kel", faction: "arena2", con: 1.25, speed: 1, outfit: ["none", 0], weapon: ["none", [0.45, 0.3], 0, 0, 1], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                ArtificialIntelligenceAccess.push(new Unit(855, 252, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena2", con: 1, speed: 1.15, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.85], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                ArtificialIntelligenceAccess.push(new Unit(869, 284, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                ArtificialIntelligenceAccess.push(new Unit(794, 248, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                ArtificialIntelligenceAccess.push(new Unit(520, 319, "Soldier", false, "Slave Man", {race: "Kel", faction: "arena2", con: 1.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.45, 0.3], 0, 0, 1], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                ArtificialIntelligenceAccess.push(new Unit(178, 505, "Soldier", false, "Slave Man", {race: "Kel", faction: "Kel", con: 1.25, speed: 1, outfit: ["none", 0], weapon: ["none", [0.45, 0.3], 0, 0, 1], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                ArtificialIntelligenceAccess.push(new Unit(304, 388, "Soldier", false, "Beulingerr Soldier", {race: "Thengar", faction: "Thengar", con: 7, speed: 1.38, outfit: ["chainArmour", 7], weapon: ["thenganSword", [10, 5], 0, 16, 1.4], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, patrolStops: 0, patrolLoop: true, route:[]}));
                ArtificialIntelligenceAccess.push(new Unit(374, 192, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena2", con: 2, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.85], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                ArtificialIntelligenceAccess.push(new Unit(389, 114, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                ArtificialIntelligenceAccess.push(new Unit(50, 25, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                ArtificialIntelligenceAccess.push(new Unit(4, 41, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                ArtificialIntelligenceAccess.push(new Unit(-14, 74, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena2", con: 0.75, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                ArtificialIntelligenceAccess.push(new Unit(41, 287, "Soldier", false, "Slave Man", {race: "Kel", faction: "arena2", con: 1.25, speed: 1, outfit: ["none", 0], weapon: ["none", [0.45, 0.3], 0, 0, 1], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                ArtificialIntelligenceAccess.push(new Unit(-70, 429, "Soldier", false, "Slave Man", {race: "Kel", faction: "arena2", con: 1.25, speed: 1, outfit: ["none", 0], weapon: ["none", [0.45, 0.3], 0, 0, 1], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                ArtificialIntelligenceAccess.push(new Unit(623, 53, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena2", con: 1, speed: 1.15, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.85], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));

                //If not noble or royal and thengan the guards will attack you for trespassing.
                if (player.raceName != "Thengar" || player.title != "Nobility" && player.title != "Royalty")
                {
                    console.log("pass");
                    for (var ii = 0; ii < ArtificialIntelligenceAccess.length; ii++)
                    {
                        if (ArtificialIntelligenceAccess[ii].team == "Thengar")
                        {
                            ArtificialIntelligenceAccess[ii].disturbedTime = new Date().getTime();
                        }
                    }
                }

                change = "lethikCityPrison";
            }
        }
    }
    else if (map == "atalinDrugLab")
    {
        if (region == "atalinDrugLab")
        {
            if (change != "atalinDrugLab")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (!ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //barriers
                barrierList.push(new Barrier(1000, -66, 700, 70, true));
                barrierList.push(new Barrier(640, -66, 700, 70, true));
                barrierList.push(new Barrier(320, 215, 70, 700, true));
                barrierList.push(new Barrier(320, 577, 70, 700, true));

                //scenery
                scenicList.push(new Scenery("ladder", 955, 331, 0 * Math.PI, [-41189, 724], "world"));
                scenicList.push(new Scenery("oilLamp", 721, 502, 3.86947818541137 * Math.PI, true, [1000, 2]));
                scenicList.push(new Scenery("oilLamp", 988, 440, 0.86947818541137 * Math.PI, true, [1000, 2]));
                scenicList.push(new Scenery("cauldron", 934, 529, 0.2, true));
                scenicList.push(new Scenery("crate", 849, 548, 1.5, 2, [1.2]));
                scenicList.push(new Scenery("crate", 975, 551, 2.36, 1, [0.81]));
                scenicList.push(new Scenery("item", 896, 515, 2.5, "estolGang", ["kolumPowder", 3, -11]));

                scenicList.push(new Scenery("trapdoor", 751, 326, 0 * Math.PI, [4457, -1018], "estolTunnel"));

                //units
                ArtificialIntelligenceAccess.push(new Unit(808, 306, "Soldier", false, "Estol Thug", {race: "Nirwaden", faction: "EstolGang", con: 8, speed: 1.4, outfit: ["blackBearLeatherArmour", 2.5], weapon: ["nirineseSabre", [9, 9], 0, 21, 1.25], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 1, patrolLoop: false, route:[[813, 325]]}));
                ArtificialIntelligenceAccess.push(new Unit(921, 475, "Soldier", false, "Estol Alchemist", {race: "Nirwaden", faction: "EstolGang", con: 3, speed: 1.2, outfit: ["varnFurClothing", 0], weapon: ["hammer", [2, 3], 0, 10, 1.15], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 1, patrolLoop: false, route:[[921, 480]]}));

                if (player.estolgangFaction <= 10)
                {
                    for (var ii = 0; ii < ArtificialIntelligenceAccess.length; ii++)
                    {
                        if (ArtificialIntelligenceAccess[ii].team == "EstolGang")
                        {
                            ArtificialIntelligenceAccess[ii].disturbedTime = new Date().getTime();
                        }
                    }
                }

                change = "atalinDrugLab";
            }
        }
    }
    else if (map == "estolTunnel")
    {
        if (region == "estolTunnel")
        {
            if (change != "estolTunnel")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (!ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //barriers
                barrierList.push(new Barrier(1000, -2126, 2860, 70, true));
                barrierList.push(new Barrier(640, -2958, 3250, 70, true));

                barrierList.push(new Barrier(-30, 220, 70, 670, true));
                barrierList.push(new Barrier(29, 77, 500, 70, true));

                //barrierList.push(new Barrier(320, 215, 70, 700, true));
                barrierList.push(new Barrier(20, 577, 70, 1300, true));

                barrierList.push(new Barrier(1000, -2126, 70, 3300, true));
                barrierList.push(new Barrier(590, -2493, 70, 2210, true));

                barrierList.push(new Barrier(4230, -2126, 1200, 70, true));
                barrierList.push(new Barrier(4600, -2496, 1570, 70, true));
                barrierList.push(new Barrier(4230, -926, 70, 500, true));

                barrierList.push(new Barrier(3100, -2493, 70, 1700, true));

                barrierList.push(new Barrier(3100, -3623, 1200, 70, true));
                barrierList.push(new Barrier(2730, -3623, 1200, 70, true));

                barrierList.push(new Barrier(3100, -3623, 70, 370, true));
                barrierList.push(new Barrier(2360, -3623, 70, 370, true));

                barrierList.push(new Barrier(2430, -4893, 1270, 70, true));

                barrierList.push(new Barrier(3400, -4893, 1270, 70, true));
                barrierList.push(new Barrier(2430, -4893, 70, 970, true));

                //scenery
                scenicList.push(new Scenery("ladder", 4563, -2378, 0 * Math.PI, [-41733, -1760], "world"));
                scenicList.push(new Scenery("ladder", 851, 496, 0 * Math.PI, [-45172, -2201], "world"));
                scenicList.push(new Scenery("ladder", 251, 496, 0 * Math.PI, [-45375, -2205], "world"));
                scenicList.push(new Scenery("ladder", 4457, -1018, 0 * Math.PI, [751, 326], "atalinDrugLab"));
                scenicList.push(new Scenery("oilLamp", 976, 529, 0.86947818541137 * Math.PI, true, [1000, 2]));
                scenicList.push(new Scenery("oilLamp", 4529, -996, 2.86947818541137 * Math.PI, true, [1000, 2]));
                scenicList.push(new Scenery("oilLamp", 3063, -2417, 8.87683723 * Math.PI, true, [1000, 2]));
                scenicList.push(new Scenery("oilLamp", 211, 378, 5.2718276484671 * Math.PI, true, [1000, 2]));
                scenicList.push(new Scenery("oilLamp", 656, 307, 3.86947818541137 * Math.PI, true, [1000, 2]));
                scenicList.push(new Scenery("oilLamp", 903, -2232, -1.86947818541137 * Math.PI, true, [1000, 2]));
                scenicList.push(new Scenery("oilLantern", 2957, -3737, -4.448488284422484 * Math.PI, true, [1000, 2]));
                scenicList.push(new Scenery("oilLantern", 2756, -4110, -6.648488284422484 * Math.PI, true, [1000, 2]));
                scenicList.push(new Scenery("oilLantern", 3189, -4345, -2.228488284422484 * Math.PI, true, [1000, 2]));
                scenicList.push(new Scenery("oilLantern", 2838, -4640, -1.111111284422484 * Math.PI, true, [1000, 2]));
                scenicList.push(new Scenery("oilLantern", 3269, -4745, 3.448488284422484 * Math.PI, true, [1000, 2]));
                scenicList.push(new Scenery("oilLantern", 3148, -3982, 3.448488284422484 * Math.PI, true, [1000, 2]));
                scenicList.push(new Scenery("oilLantern", 2977, -4370, 3.448488284422484 * Math.PI, true, [1000, 2]));
                scenicList.push(new Scenery("oilLamp", 2604, -4412, 0.86947818541137 * Math.PI, true, [1000, 2]));
                scenicList.push(new Scenery("oilLamp", 2615, -3787, -0.55947818541137 * Math.PI, true, [1000, 2]));
                //scenicList.push(new Scenery("cauldron", 934, 529, 0.2, true));
                //scenicList.push(new Scenery("crate", 849, 548, 1.5, 2, [1.2]));
                //scenicList.push(new Scenery("crate", 975, 551, 2.36, 1, [0.81]));
                //scenicList.push(new Scenery("item", 896, 515, 2.5, "estolGang", ["kolumPowder", 3, -11]));

                //units
                ArtificialIntelligenceAccess.push(new Unit(808, 306, "Soldier", false, "Estol Thug", {race: "Nirwaden", faction: "EstolGang", con: 8, speed: 1.4, outfit: ["blackBearLeatherArmour", 2.5], weapon: ["nirineseSabre", [9, 9], 0, 21, 1.25], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 1, patrolLoop: false, route:[[813, 325]]}));
                //ArtificialIntelligenceAccess.push(new Unit(921, 475, "Soldier", false, "Estol Alchemist", {race: "Nirwaden", faction: "EstolGang", con: 3, speed: 1.2, outfit: ["varnFurClothing", 0], weapon: ["hammer", [2, 3], 0, 10, 1.15], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 1, patrolLoop: false, route:[[921, 480]]}));

                if (player.estolgangFaction < 50)
                {
                    for (var ii = 0; ii < ArtificialIntelligenceAccess.length; ii++)
                    {
                        if (ArtificialIntelligenceAccess[ii].team == "EstolGang")
                        {
                            ArtificialIntelligenceAccess[ii].disturbedTime = new Date().getTime();
                        }
                    }
                }

                change = "estolTunnel";
            }
        }
    }
    else if (map == "atalinCityPrison")
    {
        if (region == "atalinCityPrison")
        {
            if (change != "atalinCityPrison")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (!ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //barriers
                barrierList.push(new Barrier(1000, -66, 700, 70, true));
                barrierList.push(new Barrier(640, -66, 700, 70, true));
                barrierList.push(new Barrier(320, 215, 70, 700, true));
                barrierList.push(new Barrier(320, 577, 70, 700, true));

                //scenery
                if (player.nirwadenFaction > -25)
                {
                    scenicList.push(new Scenery("ladder", 764, 513, 0 * Math.PI, [-41071, 1774], "world"));
                }
                else
                {
                    scenicList.push(new Scenery("event", 900, 400, 0, "atalinPrisonSentence"));
                }
                scenicList.push(new Scenery("oilLamp", 856, 430, 2.211984 * Math.PI, true, [1000, 2]));

                //units

                change = "atalinCityPrison";
            }
        }
    }
    else if (map == "atalinTortureChamber")
    {
        if (region == "atalinTortureChamber")
        {
            if (change != "atalinTortureChamber")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (!ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //barriers
                barrierList.push(new Barrier(1000, -66, 700, 70, true));
                barrierList.push(new Barrier(640, -66, 700, 70, true));
                barrierList.push(new Barrier(320, 215, 70, 700, true));
                barrierList.push(new Barrier(320, 577, 70, 700, true));

                //scenery
                scenicList.push(new Scenery("ladder", 900, 400, 0 * Math.PI, [-46251, 1177], "world"));
                scenicList.push(new Scenery("nirwadenMueble", 863, 539, -1 * Math.PI, 3)); //rect table
                scenicList.push(new Scenery("deadBody", 903, 540, -1/2 * Math.PI, 1, 1)); //nirwaden
                scenicList.push(new Scenery("blood", 864, 539, -1/2 * Math.PI, 3, 0.9));
                scenicList.push(new Scenery("skeleton", 930, 316, -2/5 * Math.PI, 1.6)); //nirwaden
                scenicList.push(new Scenery("nirwadenMueble", 748, 345, -1/2 * Math.PI, 3)); //rect table
                scenicList.push(new Scenery("deadBody", 746, 365, 0 * Math.PI, 1, 0.65)); //nirwaden
                scenicList.push(new Scenery("blood", 746, 359, -1.2 * Math.PI, 3, 0.724));

                scenicList.push(new Scenery("oilLamp", 800, 464, 3.211984 * Math.PI, true, [1000, 2]));

                //units
                ArtificialIntelligenceAccess.push(new Unit(783, 488, "Soldier", false, "Inquisition Torturer", {race: "Nirwaden", faction: "Nirwaden", con: 10, speed: 1.3, outfit: ["inquisitionOutfit", 4], weapon: ["nirineseSabre", [10, 9], 0, 22, 1.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[813, 325]]}));


                if (player.inquisitionRank == "none")
                {
                    if (player.title != "Royalty" && player.title != "Nobility" && player.title != "Highfolk" && player.class != "Priest" || player.raceName != "Nirwaden")
                    {
                        for (var ii = 0; ii < ArtificialIntelligenceAccess.length; ii++)
                        {
                            if (ArtificialIntelligenceAccess[ii].team == "Nirwaden" && ArtificialIntelligenceAccess[ii].dmx == map)
                            {
                                ArtificialIntelligenceAccess[ii].disturbedTime = new Date().getTime();
                            }
                        }
                    }
                }

                change = "atalinTortureChamber";
            }
        }
    }
}

function spacer(amt)
{
    return amt - (2 * amt) * Math.random();
}

function sSpacer(amt, seed)
{
    return amt - (2 * amt) * seeder(seed);
}

function generator2(seedA, seedB, seedC, seedD, seedE, biome, xSt, ySt, dontIncludeUnits) //the maps will be generated starting in the top left corner --> down and to the right
{
    var genID = "generated-" + (seeder((seedA + seedB + seedC + seedD + seedE) * (biome + 1)) + Math.random())
    var mapSz = 9750; //this is the aproximate pixle length of a map
    var seededE = seeder(seedE);
    var seededD = seeder(seedD);
    var seededC = seeder(seedC);
    var seededB = seeder(seedB);
    var seededA = seeder(seedA);
    var seeded1;
    var seeded2;
    var seeded3;
    var seeded4;
    var seeded5;

    if (biome == 0) //Kellish Grasslands
    {
        for (var i = 0; i < Math.floor(seededB * 8); i++) //avraks
        {
            seeded2 = seeder(seedA + seedA * i);
            seeded3 = seeder(seedA + seedA / (i + 1));

            ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz, ySt - seeded3 * mapSz, "Avrak", false, "generated"));
        }
        for (var i = 0; i < Math.floor(seededE * 2.15); i++) //anterhills
        {
            seeded2 = seeder(seedB + seedB * i);
            seeded3 = seeder(seedB + seedB / (i + 1));

            scenicList.push(new Scenery("anterHill", xSt - seeded2 * mapSz, ySt - seeded3 * mapSz, 2*Math.PI * Math.random(), true));
        }
        for (var i = 0; i < Math.floor(seededD * 19); i++) //Itlin bushes
        {
            seeded2 = seeder(seedA + seedE * i);
            seeded3 = seeder(seedE + seedC / (i + 1));

            if (seeder(seededB + 89910 * i) > 0.44)
            {
                scenicList.push(new Scenery("itlinPlant", xSt - seeded2 * mapSz, ySt - seeded3 * mapSz, 2*Math.PI * Math.random(), true));
            }
            else
            {
                scenicList.push(new Scenery("ishPlant", xSt - seeded2 * mapSz, ySt - seeded3 * mapSz, 2*Math.PI * Math.random(), true));
            }
        }
        for (var i = 0; i < Math.floor(seededE * 16); i++) //muf plants
        {
            seeded1 = seeder(seedC + seedA * i * 6800);
            seeded5 = seeder(seedB + seedD / (i + 190));


            scenicList.push(new Scenery("mufPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2*Math.PI * Math.random(), true));
        }
        for (var i = 0; i < Math.floor(seededB * 16); i++) //luuf plants
        {
            seeded1 = seeder(seedA + seedD * i * 17890);
            seeded5 = seeder(seedE + seedA * (i + 19560));

            scenicList.push(new Scenery("luufPlant", xSt - seeded1 * mapSz, ySt - seeded5 * mapSz, 2*Math.PI * Math.random(), true));
        }
        for (var i = 0; i < Math.floor(((seededB + seededA) / 2) * 22); i++) //palnt plants
        {
            seeded1 = seeder(seedD + seedE * i * 17890);
            seeded5 = seeder(seedE + seedC * (i + 19560));

            scenicList.push(new Scenery("palntPlant", xSt - seeded1 * mapSz, ySt - seeded5 * mapSz, 2*Math.PI * Math.random(), true));
        }
        for (var i = 0; i < Math.floor(((seededC + seededD + seededE) / 3) * 11); i++) //buttermellow plants
        {
            seeded1 = seeder(seedE + seedE * i);
            seeded5 = seeder(seedD + seedD / (i + 1));


            scenicList.push(new Scenery("butterMellowPlant", xSt - seeded1 * mapSz, ySt - seeded5 * mapSz, 2*Math.PI * Math.random(), true));
        }
        for (var i = 0; i < Math.floor(seededA * 20); i++) //techi plants
        {
            seeded1 = seeder(seedC + seedC * i * 23000);
            seeded5 = seeder(seedC + 100 + seedC * 56 * i * i);


            scenicList.push(new Scenery("techiPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2*Math.PI * Math.random(), true));
        }

        if (elevation == -2 || elevation == -1)
        {
            for (var i = 0; i < (Math.floor(seededD * 9) + 1); i++) //techi plants
            {
                seeded5 = seeder(seedC + seedE * i * 19191);
                seeded1 = seeder(seedE + 19 + seedC * 19 * i);

                if (seeder(seedB + 900 * i) > 0.495)
                {
                    scenicList.push(new Scenery("corneliusPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2*Math.PI * Math.random(), true));
                }
                else
                {
                    scenicList.push(new Scenery("rilthasiaPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2*Math.PI * Math.random(), true));
                }
            }
        }

        if (elevation == 0)
        {
            for (var i = 0; i < Math.floor(seededC * 11); i++) //ardils
            {
                seeded1 = seeder(seedB + seedB * 90000 * i);
                seeded4 = seeder(seedA + seedD * 110201 * i);

                if (seeder(seedE + 88888 * i) > 0.5)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Ardil", true, genID));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Ardil", false, genID));
                }
            }
        }
        else
        {
            for (var i = 0; i < Math.floor(seededC * 5); i++) //ardils
            {
                seeded1 = seeder(seedB + seedB * 90000 * i);
                seeded4 = seeder(seedA + seedD * 110201 * i);

                if (seeder(seedE + 999992 * i) > 0.5)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Ardil", true, genID));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Ardil", false, genID));
                }
            }
        }

        for (var i = 0; i < Math.floor(seededA * 8); i++) //evraks
        {
            seeded2 = seeder(seedA + seedA * 12012 * i);
            seeded3 = seeder(seedD + seedA * 5555 * i);

            ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded2 * mapSz, "Evrak", false, genID));
        }

        if (elevation == 0)
        {
            for (var i = 0; i < Math.floor(seededA * 9); i++) //friches / frich packs
            {
                seeded2 = seeder(seedD + seedD * 12012 * i);
                seeded3 = seeder(seedD + seedD * 5555 * i);

                for (var j = 0; j < Math.floor(seededE * 6); j++)
                {
                    if (seeder(seedB + 76823 * j) > 0.615)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(35), ySt - seeded3 * mapSz + spacer(35), "Frich", true, genID));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(35), ySt - seeded3 * mapSz + spacer(35), "Frich", false, genID));
                    }
                }
            }
        }

        for (var i = 0; i < Math.floor(seededE * 6); i++) //Naaprid herds
        {
            seeded1 = seeder(seedB + seedA * 222 * i);
            seeded2 = seeder(seedD + seedC * 1119 * i);

            for (var j = 0; j < Math.floor(seededE * 9); j++)
            {
                var seeded5 = seeder(seedB + seedD * Math.ceil(76823 / j));

                if (seeded5 < 0.4)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + spacer(130), ySt - seeded2 * mapSz + spacer(130), "Naaprid", true, genID));
                }
                else if (seeded5 < 0.81)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + spacer(130), ySt - seeded2 * mapSz + spacer(130), "Naaprid", false, genID));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + spacer(130), ySt - seeded2 * mapSz + spacer(130), "Naaprid", "baby", genID));
                }
            }
        }

        for (var i = 0; i < Math.floor(((seededA + seededB) / 2) * 17); i++) //tunsk mounds
        {
            seeded1 = seeder(seedC + seedC * 12 * i);
            seeded2 = seeder(seedB + seedB / (39 * i + 5));

            scenicList.push(new Scenery("tunskMound", xSt - seeded2 * mapSz, ySt - seeded1 * mapSz, 2*Math.PI * Math.random(), true));
        }
        for (var i = 0; i < Math.floor(seededC * 14); i++) //grushes / grushweed patches
        {
            seeded1 = seeder(seedB + seedA * 17 * i);
            seeded2 = seeder(seedA + seedB / (5 * i + 3));

            seeded3 = seeder(i * seedA);
            for (var j = 0; j < Math.floor(seeded3 * 7); j++)
            {
                seeded4 = seeder(seedC + seedB * 5 * j);
                seeded5 = seeder(seedA + seedC * 19 * j);

                if (Math.random() <= 0.29)
                {
                    var rand = Math.random();
                    if (rand < 0.2)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + (Math.floor(seeded4 * 50) + 39) * j, ySt - seeded2 * mapSz + (Math.floor(seeded5 * 50) + 39) * j, "Grush", true, genID));
                    }
                    else if (rand < 0.5)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + (Math.floor(seeded4 * 50) + 16) * j, ySt - seeded2 * mapSz + (Math.floor(seeded5 * 50) + 16) * j, "Grush", "baby", genID));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + (Math.floor(seeded4 * 50) + 25) * j, ySt - seeded2 * mapSz + (Math.floor(seeded5 * 50) + 25) * j, "Grush", false, genID));
                    }
                }
                else
                {
                    var rand = Math.random();
                    if (rand < 0.2)
                    {
                        scenicList.push(new Scenery("grushweedPlant", xSt - seeded1 * mapSz + (Math.floor(seeded4 * 50) + 39) * j, ySt - seeded2 * mapSz + (Math.floor(seeded5 * 50) + 39) * j, 2*Math.PI * Math.random(), seeder(seedC + 99 * i + 38 * j) + 0.65));
                    }
                    else if (rand < 0.5)
                    {
                        scenicList.push(new Scenery("grushweedPlant", xSt - seeded1 * mapSz + (Math.floor(seeded4 * 50) + 16) * j, ySt - seeded2 * mapSz + (Math.floor(seeded5 * 50) + 16) * j, 2*Math.PI * Math.random(), seeder(seedB + 99 * i + 49 * j) + 0.05));
                    }
                    else
                    {
                        scenicList.push(new Scenery("grushweedPlant", xSt - seeded1 * mapSz + (Math.floor(seeded4 * 50) + 25) * j, ySt - seeded2 * mapSz + (Math.floor(seeded5 * 50) + 25) * j, 2*Math.PI * Math.random(), seeder(seedA + 99 * i + 27 * j) + 0.25));
                    }
                }
            }
        }

        for (var i = 0; i < Math.floor(((seededB + seededA) / 2) * 9); i++) //mofus and mofu nests
        {
            seeded1 = seeder(seedD + seedC * 17 * i);
            seeded2 = seeder(seedA + seedA / (5 * i + 3));

            seeded3 = seeder(i * seedA);
            for (var j = 0; j < Math.floor(seeded3 * 11); j++)
            {
                seeded4 = seeder(seedB + seedB * 60 * j);
                seeded5 = seeder(seedC + seedC * 390 * j);

                    var rand = Math.random();
                    if (rand < 0.4)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + (Math.floor(seeded4 * 70) + 39) * j, ySt - seeded2 * mapSz + (Math.floor(seeded5 * 50) + 39) * j, "Mofu", true, genID));
                    }
                    else if (rand < 0.5)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + (Math.floor(seeded4 * 50) + 16) * j, ySt - seeded2 * mapSz + (Math.floor(seeded5 * 50) + 16) * j, "Mofu", "baby", genID));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + (Math.floor(seeded4 * 60) + 25) * j, ySt - seeded2 * mapSz + (Math.floor(seeded5 * 50) + 25) * j, "Mofu", false, genID));
                    }

                if (Math.random() <= 0.84)
                {
                    if (rand < 0.4)
                    {
                        scenicList.push(new Scenery("mofuNest", xSt - seeded1 * mapSz + (Math.floor(seeded4 * 70) + 39) * j, ySt - seeded2 * mapSz + (Math.floor(seeded5 * 50) + 39) * j, 2 * Math.PI * Math.random(), seeder(seedC + 99 * i + 38 * j) + 0.65));
                    }
                    else if (rand >= 0.5)
                    {
                        scenicList.push(new Scenery("mofuNest", xSt - seeded1 * mapSz + (Math.floor(seeded4 * 60) + 25) * j, ySt - seeded2 * mapSz + (Math.floor(seeded5 * 50) + 25) * j, 2 * Math.PI * Math.random(), seeder(seedA + 99 * i + 27 * j) + 0.25));
                    }
                }
            }
        }
    }
    else if (biome == 1) //nordic woods
    {
        for (var i = 0; i < Math.floor(261 + seeder(seededE * 9887 + seedA / 100) * 300); i++) //trees
        {
            seeded2 = seeder((seedE + seedD + 87989) * (i + 50));
            seeded3 = seeder(i * ((seedA + 897) + seedC) * 54 + 96 * seedB * (i + 19));

            scenicList.push(new Scenery("pineTree", xSt - seeded2 * mapSz, ySt - seeded3 * mapSz, 2 * Math.PI * Math.random(), true));
        }
        for (var i = 0; i < Math.floor(seededD * 26); i++) //lizard
        {
            seeded2 = seeder(seedB + seedD * i * 23252);
            seeded5 = seeder(seedC + seedC * (i + 4343556));
            seeded3 = seeder(seedA + seedE * (i + 79214956));
            seeded4 = seeder(seedC + seedD * (i + 897462));

            var rnd = seeder(seedD + 208721864 * i);
            if (rnd > 0.3) {
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded5 * mapSz, "Lizard", false, genID));
            }
            else {
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz, ySt - seeded4 * mapSz, "Lizard", true, genID));
            }
        }
        for (var i = 0; i < Math.floor(seededC * 16); i++) //bear
        {
            seeded2 = seeder(seedA + seedD * i * 899122);
            seeded5 = seeder(seedD + seedC * (i + 4826));
            seeded3 = seeder(seedB + seedA * (i + 12222));
            seeded4 = seeder(seedE + seedE * (i + 3222562));

            var rnd = seeder(seedC + 99829761 * i);
            if (rnd > 0.8)
            {
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz, ySt - seeded2 * mapSz, "BlackBear", true, genID));
            }
            else if (rnd > 0.6)
            {
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(25), ySt - seeded4 * mapSz + spacer(25), "BlackBear", true, genID));
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(100),ySt - seeded4 * mapSz + spacer(100), "BlackBear", false, genID));
            }
            else
            {
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded4 * mapSz, ySt - seeded3 * mapSz, "BlackBear", false, genID));
            }
        }

        if (X > 47082) //in Thengaria only (WEST)
        {
            for (var i = 0; i < Math.floor(seededC * 26); i++) //kofke
            {
                seeded1 = seeder(seedA + seedD * i * 17890);
                seeded5 = seeder(seedE + seedA * (i + 19560));

                scenicList.push(new Scenery("kofkePlant", xSt - seeded1 * mapSz, ySt - seeded5 * mapSz, 2 * Math.PI * Math.random(), true));
            }
            for (var i = 0; i < Math.floor(seededE * 7); i++) //steugiurne
            {
                seeded1 = seeder(seedA + seedD * i * 900 + 300 * seedB);
                seeded5 = seeder(seedB + seedD * (i + 283));

                scenicList.push(new Scenery("steugiurnePlant", xSt - seeded1 * mapSz, ySt - seeded5 * mapSz, 2 * Math.PI * Math.random(), true));
            }
            for (var i = 0; i < Math.floor(seededE * 5); i++) //thalis
            {
                seeded1 = seeder(seedC + seedC * i * 89651239283);
                seeded5 = seeder(seedB + seedB * (i + 48627881));

                scenicList.push(new Scenery("thalisPlant", xSt - seeded1 * mapSz, ySt - seeded5 * mapSz, 2 * Math.PI * Math.random(), true));
            }
            for (var i = 0; i < Math.floor(seededE * 19); i++) //callop
            {
                seeded1 = seeder(seedA + seedD * i * 900 + 300 * seedB);
                seeded5 = seeder(seedB + seedD * (i + 283));

                scenicList.push(new Scenery("callopPlant", xSt - seeded1 * mapSz, ySt - seeded5 * mapSz, 2 * Math.PI * Math.random(), true));
            }
            for (var i = 0; i < Math.floor(seededE * 19); i++) //darb
            {
                seeded1 = seeder(seedC + seedC * i * 700 + 100 * seedA);
                seeded2 = seeder(seedA + seedB * (i + 90022343));

                scenicList.push(new Scenery("darbPlant", xSt - seeded1 * mapSz, ySt - seeded2 * mapSz, 2 * Math.PI * Math.random(), true));
            }
            if (seeder(seedE + 9993714638717) > 0.7) {
                for (var i = 0; i < Math.floor(seededA * 2); i++) //brightbloom
                {
                    seeded1 = seeder(seedB + seedA * i * 855 + 366 * seedC);
                    seeded2 = seeder(seedC + seedB * (i + 334456));

                    scenicList.push(new Scenery("brightbloomPlant", xSt - seeded1 * mapSz, ySt - seeded2 * mapSz, 2 * Math.PI * Math.random(), true));
                }
            }
            for (var i = 0; i < Math.floor(seededA * 20); i++) //fletter
            {
                seeded1 = seeder((seedB + seedA) * i * 1225 + 399726 * seedB);
                seeded2 = seeder(seedC + seedE * (i + 33523536));

                var rnd = seeder(seedD + 3259876121 * i);
                if (rnd > 0.6) {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Fletter", true, genID));
                }
                else {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Fletter", false, genID));
                }
            }
            for (var i = 0; i < Math.floor(seededB * 18); i++) //skol
            {
                seeded1 = seeder(seedA + seedD * i * 198790);
                seeded2 = seeder(seedA + seedA * i * 5555);
                seeded4 = seeder(seedE + seedA * (i + 983820));
                seeded3 = seeder(seedC + seedC * (i + 6880));

                var rnd = seeder(seedB + 98568761 * i);
                if (rnd > 0.9) {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Skol", true, genID));
                }
                else if (rnd > 0.8) {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded4 * mapSz, "Skol", false, genID));
                }
                else if (rnd > 0.4) {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz, ySt - seeded4 * mapSz, "Skol", false, genID));
                    ArtificialIntelligenceAccess.push(new Unit(60 + xSt - seeded2 * mapSz, 190 + ySt - seeded4 * mapSz, "Skol", false, genID));
                    ArtificialIntelligenceAccess.push(new Unit(200 + xSt - seeded2 * mapSz, -150 + ySt - seeded4 * mapSz, "Skol", false, genID));
                    ArtificialIntelligenceAccess.push(new Unit(110 + xSt - seeded2 * mapSz, 110 + ySt - seeded4 * mapSz, "Skol", false, genID));
                    ArtificialIntelligenceAccess.push(new Unit(300 + xSt - seeded2 * mapSz, -55 + ySt - seeded4 * mapSz, "Skol", true, genID));
                }
                else {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded3 * mapSz, "Skol", false, genID));
                    ArtificialIntelligenceAccess.push(new Unit(60 + xSt - seeded1 * mapSz, 190 + ySt - seeded3 * mapSz, "Skol", false, genID));
                    ArtificialIntelligenceAccess.push(new Unit(200 + xSt - seeded1 * mapSz, -150 + ySt - seeded3 * mapSz, "Skol", false, genID));
                    ArtificialIntelligenceAccess.push(new Unit(110 + xSt - seeded1 * mapSz, 110 + ySt - seeded3 * mapSz, "Skol", false, genID));
                    ArtificialIntelligenceAccess.push(new Unit(300 + xSt - seeded1 * mapSz, -55 + ySt - seeded3 * mapSz, "Skol", false, genID));
                }
            }
            for (var i = 0; i < Math.floor(seededC * 29); i++) //hoffalgre
            {
                seeded2 = seeder(seedD + seedD * i * 9984722);
                seeded5 = seeder(seedD + seedC * (i + 5343556));
                seeded3 = seeder(seedB + seedE * (i + 89214956));
                seeded4 = seeder(seedB + seedE * (i + 112462));

                var rnd = seeder(seedE + 99829761 * i);
                if (rnd > 0.625) {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz, ySt - seeded2 * mapSz, "Hoffalgre", false, genID));
                }
                else if (rnd > 0.39) {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(30), ySt - seeded4 * mapSz + spacer(30), "Hoffalgre", true, genID));
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(30), ySt - seeded4 * mapSz + spacer(30), "Hoffalgre", true, genID));
                }
                else {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded4 * mapSz, ySt - seeded3 * mapSz, "Hoffalgre", true, genID));
                }
            }
        }
        else {
            if (Y < -13476) //SOUTH
            {
                for (var i = 0; i < Math.floor(seeder(seedE + seedD + 12312378265) * 12); i++) //viper
                {
                    seeded2 = seeder((seedE + seedB) * (4 + i * 749));
                    seeded5 = seeder((seedB + seedA) * (i + 8527));
                    seeded3 = seeder((seedD + seedA) * (i + 12986));
                    seeded4 = seeder((seedB + seedC) * (i + 297864));

                    var rnd = seeder((seedA * seedE / 10980) * i * seedC);
                    if (rnd > 0.65)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded5 * mapSz, "Viper", true, genID));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz, ySt - seeded4 * mapSz, "Viper", false, genID));
                    }
                }
                for (var i = 0; i < Math.floor(seeder(seedE + seedD + 782765737825) * 8); i++) //bequon
                {
                    seeded2 = seeder((seedD + seedB) * (5 + i * 7465));
                    seeded5 = seeder((seedA + seedC) * (i + 8234));
                    seeded3 = seeder((seedE + seedC) * (i + 21486));
                    seeded4 = seeder((seedB + seedD) * (i + 2354));

                    scenicList.push(new Scenery("bequonPlant", xSt - seeded3 * mapSz, ySt - seeded3 * mapSz, 2 * Math.PI * Math.random(), true));
                }
                for (var i = 0; i < Math.floor(seeder(seedB + seedC + 58637825) * 28); i++) //Teppreklia
                {
                    seeded2 = seeder((seedE + seedB) * (5 + i * 338965));
                    seeded5 = seeder((seedA + seedD) * (i + 1434));
                    seeded3 = seeder((seedB + seedE) * (i + 9823686));
                    seeded4 = seeder((seedC + seedB) * (i + 4284));

                    scenicList.push(new Scenery("tepprekliaPlant", xSt - seeded3 * mapSz, ySt - seeded3 * mapSz, 2 * Math.PI * Math.random(), true));
                }
            }
            else {
                for (var i = 0; i < Math.floor(seededB * 4); i++) //viper
                {
                    seeded2 = seeder((seedE + seedB) * (1 + i * 899));
                    seeded5 = seeder((seedB + seedA) * (i + 214096));
                    seeded3 = seeder((seedC + seedA) * (i + 387326));
                    seeded4 = seeder((seedB + seedE) * (i + 21680004));

                    var rnd = seeder((seedA * seedE / 10980) * i * seedC);
                    if (rnd > 0.9)
                    {
                        //ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded5 * mapSz, "Viper", true, genID));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz, ySt - seeded4 * mapSz, "Viper", false, genID));
                    }
                }
                if (seeder(seedA * 55555) < 0.22) {
                    for (var i = 0; i < Math.floor(seededB * 2); i++) //halcif
                    {
                        seeded1 = seeder((seedE + seedE) * i * 65524);
                        seeded5 = seeder(seedD * seedB * (i + 4947));

                        scenicList.push(new Scenery("halcifPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2 * Math.PI * Math.random(), true));
                    }
                }
                for (var i = 0; i < Math.floor(seededE * 4); i++) //cyrinthilim
                {
                    seeded1 = seeder((seedE + seedD) * i * 65524);
                    seeded5 = seeder(seedC * seedA * (i + 4947));

                    if (seeder(seedA * seedD * 5782 + seedB * 9875122) < 0.6) {
                        scenicList.push(new Scenery("cyrinthilimPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2 * Math.PI * Math.random(), true));
                    }
                }
                for (var i = 0; i < Math.floor(seededB * 34); i++) //shehid
                {
                    seeded2 = seeder((seedC + seedD) * i * 987106124);
                    seeded5 = seeder((seedE + seedE) * (i + 72746));
                    seeded3 = seeder((seedC + seedA) * (i + 356));
                    seeded4 = seeder((seedA + seedA) * (i + 214));

                    var rnd = seeder((seedA * seedE / 10980) * i * seedC);
                    if (rnd > 0.8) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded5 * mapSz, "Shehid", true, genID));
                    }
                    else {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz, ySt - seeded4 * mapSz, "Shehid", false, genID));
                    }
                }
                for (var i = 0; i < Math.floor(seeder((seededB + 88632755517832) / seededA) * 20); i++) //glin
                {
                    seeded1 = seeder((seedE + seedD) * i * 948877);
                    seeded5 = seeder(seedC * 787811012 + 3 * seedB * (i + 85215));

                    scenicList.push(new Scenery("glinPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2 * Math.PI * Math.random(), true));
                }
            }


            for (var i = 0; i < Math.floor(seededE * 9); i++) //varn
            {
                seeded2 = seeder(seedC + seedB * i * 1211202);
                seeded5 = seeder(seedC + seedA * (i + 346));
                seeded3 = seeder(seedB + seedB * (i + 98172));
                seeded4 = seeder(seedB + seedB * (i + 79822));

                var rnd = seeder(seedC + 99829761 * i);
                if (rnd > 0.85) {
                    if (Math.random() < 0.5) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz, ySt - seeded2 * mapSz, "Varn", true, genID));
                    }
                    else {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz, ySt - seeded2 * mapSz, "Varn", false, genID));
                    }
                }
                else if (rnd > 0.4) {
                    if (Math.random() < 0.5) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(90), ySt - seeded4 * mapSz + spacer(90), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(90), 75 + ySt - seeded4 * mapSz + spacer(90), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(30), ySt - seeded4 * mapSz + spacer(30), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(30), 75 + ySt - seeded4 * mapSz + spacer(30), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(30), ySt - seeded4 * mapSz + spacer(30), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(100), 75 + ySt - seeded4 * mapSz + spacer(100), "Varn", false, genID));
                    }
                    else {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(30), ySt - seeded4 * mapSz + spacer(30), "Varn", true, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(90), 75 + ySt - seeded4 * mapSz + spacer(90), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(90), ySt - seeded4 * mapSz + spacer(90), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(80), 75 + ySt - seeded4 * mapSz + spacer(80), "Varn", true, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(40), ySt - seeded4 * mapSz + spacer(50), "Varn", true, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(30), 75 + ySt - seeded4 * mapSz + spacer(30), "Varn", false, genID));
                    }
                }
                else {
                    if (Math.random() < 0.5) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(50), ySt - seeded4 * mapSz + spacer(50), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(80), 75 + ySt - seeded4 * mapSz + spacer(80), "Varn", true, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(30), ySt - seeded4 * mapSz + spacer(30), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(30), 75 + ySt - seeded4 * mapSz + spacer(30), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(40), ySt - seeded4 * mapSz + spacer(40), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(55), 75 + ySt - seeded4 * mapSz + spacer(55), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(105), ySt - seeded4 * mapSz + spacer(70), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(45), 75 + ySt - seeded4 * mapSz + spacer(60), "Varn", true, genID));
                    }
                    else {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(40), ySt - seeded4 * mapSz + spacer(40), "Varn", true, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(40), 75 + ySt - seeded4 * mapSz + spacer(40), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(40), ySt - seeded4 * mapSz + spacer(40), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(40), 75 + ySt - seeded4 * mapSz + spacer(40), "Varn", true, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(40), ySt - seeded4 * mapSz + spacer(40), "Varn", true, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(40), 75 + ySt - seeded4 * mapSz + spacer(40), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(40), ySt - seeded4 * mapSz + spacer(40), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(40), 75 + ySt - seeded4 * mapSz + spacer(40), "Varn", true, genID));
                    }
                }
            }
            for (var i = 0; i < Math.floor(seeder(seededB + seedA + seedD) * 3); i++) //beehives
            {
                seeded2 = seeder(seedB + seedB * i);
                seeded3 = seeder(seedB + seedB / (i + 1));

                scenicList.push(new Scenery("beehive", xSt - seeded2 * mapSz, ySt - seeded3 * mapSz, 2 * Math.PI * Math.random(), true));
            }
            for (var i = 0; i < Math.floor(seeder(seededA + 99 * seedB) * 14); i++) //stomwik
            {
                seeded2 = seeder(seedC + seedE * i * 69895);
                seeded4 = seeder(seedE + seedA / (i + 32874914289));

                scenicList.push(new Scenery("stomwikPlant", xSt - seeded4 * mapSz, ySt - seeded2 * mapSz, 2 * Math.PI * Math.random(), true));
            }
            for (var i = 0; i < Math.floor(seeder(seededC + 564341 * seedA) * 25); i++) //neprilne
            {
                seeded2 = seeder(seedA + seedC * i * 5985);
                seeded4 = seeder((seedE * i + seedA) + 2459 * (i + 867));

                scenicList.push(new Scenery("neprilnePlant", xSt - seeded4 * mapSz, ySt - seeded2 * mapSz, 2 * Math.PI * Math.random(), true));
            }
            for (var i = 0; i < Math.floor(seeder(seededD + 7989747231) * 16); i++) //common berry bushes
            {
                seeded2 = seeder(seedA + seedE * i);
                seeded3 = seeder(seedE + seedC / (i + 1));

                if (seeder(seededB + 89910 * i) > 0.34) {
                    scenicList.push(new Scenery("akerPlant", xSt - seeded3 * mapSz, ySt - seeded3 * mapSz, 2 * Math.PI * Math.random(), true));
                }
                else {
                    scenicList.push(new Scenery("pluttPlant", xSt - seeded2 * mapSz, ySt - seeded1 * mapSz, 2 * Math.PI * Math.random(), true));
                }
            }
            for (var i = 0; i < Math.floor(seededE * 18); i++) //culpris
            {
                seeded1 = seeder(seedB + seedD * i * 6800);
                seeded5 = seeder(seedD + seedC / (i + 190));

                scenicList.push(new Scenery("culprisPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2 * Math.PI * Math.random(), true));
            }

            if (X < -30000 && Y < 6278) //in Nirwaden only (EAST)
            {
                for (var i = 0; i < Math.floor(seeder(seedE + seedB + 6879372675365) * 3); i++) //changeling
                {
                    seeded2 = seeder((seedD + seedA) * (5 + i * 666));
                    seeded5 = seeder((seedB + seedC) * (i + 9087827));
                    seeded3 = seeder((seedD + seedA) * (i + 232986));
                    seeded4 = seeder((seedC + seedE) * (i + 280987864));

                    var rnd = seeder((seedC * seedE / 10980) * i * (seedD + seedA));
                    if (rnd > 0.55)
                    {
                        if (Math.random() >= 0.55)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded5 * mapSz, "Changeling", false, genID));
                        }
                    }
                }
                for (var i = 0; i < Math.floor(seeder((seededC + 99761242) / seededA) * 21); i++) //halgom
                {
                    seeded1 = seeder((seedC + seedB) * i * 661727);
                    seeded5 = seeder(seedA * 78652382 + 3 * seedD * (i + 581738765));

                    scenicList.push(new Scenery("halgomPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2 * Math.PI * Math.random(), true));
                }

                for (var i = 0; i < Math.floor(seeder((seededE + 3214576122534)) * 18); i++) //halgom
                {
                    seeded1 = seeder((seedB + seedE) * i * 661727);
                    seeded5 = seeder(seedC * 78652382 + 3 * seedA * (i + 47886865));

                    scenicList.push(new Scenery("iemaPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2 * Math.PI * Math.random(), true));
                }

                for (var i = 0; i < Math.floor(seededB * 10); i++) //boar
                {
                    seeded1 = seeder(seedA + seedD * i * 17890);
                    seeded5 = seeder(seedE + seedA * (i + 19560));

                    var rnd = seeder(seedB + 98568761 * i);
                    if (rnd > 0.7) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Boar", true, genID));
                    }
                    else if (rnd > 0.4) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded4 * mapSz, "Boar", false, genID));
                    }
                    else if (rnd > 0.2) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded2 * mapSz, "Boar", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz + spacer(110), ySt - seeded2 * mapSz + spacer(110), "Boar", false, genID));
                    }
                    else if (rnd > 0.1) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Boar", true, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + spacer(110), ySt - seeded4 * mapSz + spacer(110), "Boar", false, genID));
                    }
                    else {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Boar", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + spacer(110),ySt - seeded4 * mapSz + spacer(110), "Boar", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + spacer(180),ySt - seeded4 * mapSz + spacer(130), "Boar", false, genID));
                    }
                }
                for (var i = 0; i < Math.floor(seeder(18 + seededB) * 8); i++) //molte
                {
                    seeded2 = seeder(seedA + seedD * i * 27758);
                    seeded5 = seeder(seedE + seedC * (i + 1234556));
                    seeded3 = seeder(seedE + seedA * (i + 8645656));
                    seeded4 = seeder(seedC + seedB * (i + 3532));

                    var rnd = seeder(seedB + 99829761 * i);
                    if (rnd > 0.4) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded5 * mapSz, "Molte", false, genID));
                    }
                    else {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz, ySt - seeded4 * mapSz, "Molte", true, genID));
                    }
                }
                for (var i = 0; i < Math.floor(seeder(seededB * 978987 + seedA * 35) * 9); i++) //BorbBeetle
                {
                    seeded2 = seeder(seedE + seedD * i * 27758);
                    seeded5 = seeder(seedE + seedA * (i + 1234556));
                    seeded3 = seeder(seedC + seedA * (i + 8645656));
                    seeded4 = seeder(seedC + seedE * (i + 3532));

                    var rnd = seeder(seedB + 99829761 * i);
                    if (rnd > 0.41) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded5 * mapSz, "BorbBeetle", false, genID));
                    }
                    else {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz, ySt - seeded4 * mapSz, "BorbBeetle", true, genID));
                    }
                }
            }
            else {
                for (var i = 15; i < Math.floor(seeder(seededD + 798974723111241111) * 31); i++) //common berry bushes
                {
                    seeded2 = seeder(seedA * 656412 + seedC * i);
                    seeded3 = seeder(seedB + seedA / (i + 1));

                    if (seeder(seededB + 27856120 * i) > 0.34) {
                        scenicList.push(new Scenery("akerPlant", xSt - seeded3 * mapSz, ySt - seeded3 * mapSz, 2 * Math.PI * Math.random(), true));
                    }
                    else {
                        scenicList.push(new Scenery("pluttPlant", xSt - seeded2 * mapSz, ySt - seeded1 * mapSz, 2 * Math.PI * Math.random(), true));
                    }
                }
                for (var i = 0; i < Math.floor(seededB * 13); i++) //wyr
                {
                    seeded1 = seeder(seedC + seedA * i * 6677278431124);
                    seeded5 = seeder(seedD + seedC / (i + 87637677776));

                    scenicList.push(new Scenery("wyrPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2 * Math.PI * Math.random(), true));
                }
                if (seeder(seedC + 7899) > 0.65) {
                    for (var i = 0; i < Math.floor(seededD * 2); i++) //tylun
                    {
                        seeded1 = seeder(seedE * seedB * i * 855524);
                        seeded5 = seeder(seedB * seedA / (i + 2894677));

                        scenicList.push(new Scenery("tylunPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2 * Math.PI * Math.random(), true));
                    }
                }
                if (seeder(seedB * 31991) > 0.7) {
                    for (var i = 0; i < Math.floor(seededE * 2); i++) //ogard
                    {
                        seeded1 = seeder((seedE + seedD) * i * 65524);
                        seeded5 = seeder(seedC * seedA * (i + 4947));

                        scenicList.push(new Scenery("ogardPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2 * Math.PI * Math.random(), true));
                    }
                }
                for (var i = 0; i < Math.floor(seeder(seededE + 9874 + ((34 + seedA) * seedD)) * 17); i++) //grib
                {
                    seeded2 = seeder(seedB + seedD * i * 1089765602);
                    seeded5 = seeder(seedC + seedB * (i + 332525));
                    seeded3 = seeder(seedB + seedE * (i + 234122));
                    seeded4 = seeder(seedE + seedB * (i + 78623522));

                    var rnd = seeder(seedC + 99829761 * i);
                    if (rnd > 0.65) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz, ySt - seeded2 * mapSz, "Grib", true, genID));
                    }
                    else if (rnd > 0.5) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz, ySt - seeded4 * mapSz, "Grib", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(90), ySt - seeded4 * mapSz + spacer(75), "Grib", false, genID));
                    }
                    else {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded4 * mapSz, ySt - seeded3 * mapSz, "Grib", false, genID));
                    }
                }
                for (var i = 0; i < Math.floor(seeder(seededC + 8976721453687 / (seedE + seedC)) * 26); i++) //narthwarp
                {
                    seeded2 = seeder((seedD + seedB) * (787 + i * 88976729));
                    seeded5 = seeder((seedB + seedD) * (i + 5843796));
                    seeded3 = seeder((seedB + seedA) * (i + 7867326));
                    seeded4 = seeder((seedD + seedE) * (i + 478398004));

                    var rnd = seeder((seedC * seedA / 277910808) * i * seedD);
                    if (rnd > 0.91)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded5 * mapSz, "Narthwarp", true, genID));
                    }
                    else
                    {
                        rnd = seeder((seedB * seedA / 2778657238) * i * seedD);
                        if (rnd > 0.91)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded5 * mapSz, "Narthwarp", false, genID));
                        }
                        else
                        {
                            rnd = seeder((seedC * seedD / 19757491111) * i * seedA);
                            if (rnd > 0.5)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz + spacer(20), ySt - seeded5 * mapSz + spacer(20), "Narthwarp", false, genID));
                                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(20), ySt - seeded4 * mapSz + spacer(20), "Narthwarp", false, genID));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(65), ySt - seeded4 * mapSz + spacer(65), "Narthwarp", false, genID));
                                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz + spacer(65), ySt - seeded5 * mapSz + spacer(65), "Narthwarp", false, genID));
                                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(65), ySt - seeded4 * mapSz + spacer(65), "Narthwarp", false, genID));
                                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz + spacer(65), ySt - seeded5 * mapSz + spacer(65), "Narthwarp", false, genID));
                                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(65), ySt - seeded4 * mapSz + spacer(65), "Narthwarp", false, genID));
                            }
                        }
                    }
                }
            }
        }
    }
    else if (biome == 2) //Nirwaden Grasslands
    {
        for (var i = 0; i < Math.floor(seededB * 6); i++) //naaprid
        {
            seeded2 = seeder(seedD + seedA * i);
            seeded3 = seeder(seedC + seedE / (i + 1));


            for (var j = 0; j < Math.floor(seeder(seededE * (seedD + seededE)) * 8); j++)
            {
                var rando = seeder(seedD * i + 6 * 62 + 1284298 * j * seedA);
                if (rando > 0.75)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(120), ySt - seeded3 * mapSz + spacer(120), "Naaprid", true, genID));
                }
                else if (rando > 0.25)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(120), ySt - seeded3 * mapSz + spacer(120), "Naaprid", false, genID));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(120), ySt - seeded3 * mapSz + spacer(120), "Naaprid", "baby", genID));
                }
            }
        }

        if (map != "n1e4" && map != "n1e5")
        {
            for (var i = 0; i < Math.floor(seededD * 2); i++) //horse
            {
                seeded2 = seeder(seedD + seedE * i);
                seeded3 = seeder(seedB + seedA / (i + 1));

                if (seeder(seedC + 89 + (seedC * 2 * i)) >= 0.5)
                {
                    for (var j = 0; j < Math.floor(seeder(seededA * (seedD + seededB)) * 19); j++)
                    {
                        var rando = seeder(seedE * i + 45 * 22 + 67645 * j * seedB);
                        if (rando > 0.75)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(320), ySt - seeded3 * mapSz + spacer(320), "Horse", true, genID));
                        }
                        else if (rando > 0.25)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(250), ySt - seeded3 * mapSz + spacer(250), "Horse", false, genID));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(200), ySt - seeded3 * mapSz + spacer(200), "Horse", "baby", genID));
                        }
                    }
                }
            }
        }
        for (var i = 0; i < Math.floor(seededC * 4.85); i++) //Wobea Plant
        {
            seeded2 = seeder(seedA + seedB * i);
            seeded3 = seeder(seedB + seedE * (i + 1));

            scenicList.push(new Scenery("wobeaPlant", xSt - seeded2 * mapSz, ySt - seeded3 * mapSz, 2*Math.PI * Math.random(), true));
        }
        for (var i = 0; i < Math.floor(((seededA + seededB) / 2) * 21); i++) //Erguer flowers
        {
            seeded2 = seeder(seedB + seedE * i);
            seeded3 = seeder(seedD * i + seedC * i + 1);


            scenicList.push(new Scenery("erguerPlant", xSt - seeded2 * mapSz, ySt - seeded3 * mapSz, 2*Math.PI * Math.random(), true));
        }
        for (var i = 0; i < Math.floor(seededE * 16); i++) //Chona and polyapa trees
        {
            seeded2 = seeder(seedB * i + seedD + 77 * i);
            seeded3 = seeder(seedC + i * seedC);

            if (seeder(seedB * i + seedD * seedA + 575757578 * i) > 0.49)
            {
                scenicList.push(new Scenery("chonaTree", xSt - seeded2 * mapSz, ySt - seeded3 * mapSz, 2*Math.PI * Math.random(), true));
            }
            else
            {
                scenicList.push(new Scenery("polyapaTree", xSt - seeded2 * mapSz, ySt - seeded3 * mapSz, 2*Math.PI * Math.random(), true));
            }
        }
        for (var i = 0; i < Math.floor(seededB * 18); i++) //techi plants
        {
            seeded1 = seeder(seedA + seedA * i * 23000);
            seeded5 = seeder(seedA * i + 100 + seedD * 56 * i);


            scenicList.push(new Scenery("techiPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2*Math.PI * Math.random(), true));
        }


        for (var i = 0; i < Math.floor(seededC * 3); i++) //ardils
        {
            seeded1 = seeder(seedC + seedD * 7854500 * i);
            seeded4 = seeder(seedA + seedA * 11078651 * i);

            if (seeder(seedE + 88888 * i) > 0.5)
            {
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Ardil", true, genID));
            }
            else
            {
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Ardil", false, genID));
            }
        }

        for (var i = 0; i < Math.floor(seededB * 15); i++) //peacocks
        {
            seeded2 = seeder(seedB + seedA + seedA * 12012 * i);
            seeded3 = seeder(seedD + seedA * 5555 * i);

            if (seeder(seedD + seedE + 999 * i) > 0.55)
            {
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded2 * mapSz, "Peacock", true, genID));
            }
            else
            {
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded2 * mapSz, "Peacock", false, genID));
            }
        }

        for (var i = 0; i < Math.floor(seededE * 11); i++) //friches / frich packs
        {
            seeded2 = seeder(seedB + seedC * 12012 * i);
            seeded3 = seeder(seedA + seedD * 5555 * i);

            for (var j = 0; j < Math.floor(seeder(seededA * 39 + 0.5 * i) * 6); j++)
            {
                var rando = seeder(seedC * 98754673 * j + i * seedA + 30);
                if (rando > 0.94)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(100), ySt - seeded3 * mapSz + spacer(100), "Frich", "massive", genID));
                }
                else if (rando > 0.22)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(75), ySt - seeded3 * mapSz + spacer(75), "Frich", true, genID));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(90), ySt - seeded3 * mapSz + spacer(90), "Frich", false, genID));
                }
            }
        }

        if (Y < -13813)
        {
            for (var i = 0; i < Math.floor(((seededB + seededA) / 2) * 7); i++) //palnt plants
            {
                seeded1 = seeder(seedD + seedE * i * 17890);
                seeded5 = seeder(seedE + seedC * (i + 19560));

                scenicList.push(new Scenery("palntPlant", xSt - seeded1 * mapSz, ySt - seeded5 * mapSz, 2*Math.PI * Math.random(), true));
            }
            for (var i = 0; i < Math.floor(((seededA + seededB) / 2) * 8); i++) //tunsk mounds
            {
                seeded1 = seeder(seedC + seedC * 14.5 * i);
                seeded2 = seeder(seedB + seedB / (82 * i + 16));

                scenicList.push(new Scenery("tunskMound", xSt - seeded2 * mapSz, ySt - seeded1 * mapSz, 2*Math.PI * Math.random(), true));
            }
            for (var i = 0; i < Math.floor(((seededD + seededC) / 2) * 3); i++) //chupacabras
            {
                seeded1 = seeder(seedE + seedC * 13 * i);
                seeded2 = seeder(seedA + seedD / (46 * i + 51));

                var rando = seeder(seedD + seedD + 999 * i + 99 * seedB);
                if (rando > 0.94)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded2 * mapSz, "Chupacabras", true, genID));
                }
                else if (rando < 0.11)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded2 * mapSz, "Chupacabras", false, genID));
                }
            }
        }
        if (elevation < 0)
        {
            for (var i = 0; i < Math.floor(seededB * 2); i++)
            {
                seeded2 = seeder(seedA + seedA * 12012 * i);
                seeded3 = seeder(seedD + seedA * 5555 * i);

                var rando = seeder(seedD + seedD + 999 * i + 99 * seedB);
                if (rando > 0.99)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded2 * mapSz, "Griffin", true, genID));
                }
                else if (rando <= 0.05)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded2 * mapSz, "Griffin", false, genID));
                }
            }
        }

    }
    //console.log(scenicList);

    if (dontIncludeUnits == true)
    {
        for (var trimm = ArtificialIntelligenceAccess.length - 1; trimm >= 0; trimm--)
        {
            if (ArtificialIntelligenceAccess[trimm].ID == genID && !ArtificialIntelligenceAccess[trimm].guarantee)
            {
                ArtificialIntelligenceAccess.splice(trimm, 1);
            }
        }
    }
}

function generator(seedA, seedB, seedC, seedD, seedE, biome, xSt, ySt, dontIncludeUnits) //the maps will be generated starting in the top left corner --> down and to the right
{
    var genID = "generated-" + (seeded((seedA + seedB + seedC + seedD + seedE) * (biome + 1)) + Math.random())
    var mapSz = 9750; //this is the aproximate pixle length of a map
    var seededE = seeded(seedE);
    var seededD = seeded(seedD);
    var seededC = seeded(seedC);
    var seededB = seeded(seedB);
    var seededA = seeded(seedA);
    var seeded1;
    var seeded2;
    var seeded3;
    var seeded4;
    var seeded5;

    if (biome == 0) //Kellish Grasslands
    {
        for (var i = 0; i < Math.floor(seededB * 8); i++) //avraks
        {
            seeded2 = seeded(seedA + seedA * i);
            seeded3 = seeded(seedA + seedA / (i + 1));

            ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz, ySt - seeded3 * mapSz, "Avrak", false, "generated"));
        }
        for (var i = 0; i < Math.floor(seededE * 2.15); i++) //anterhills
        {
            seeded2 = seeded(seedB + seedB * i);
            seeded3 = seeded(seedB + seedB / (i + 1));

            scenicList.push(new Scenery("anterHill", xSt - seeded2 * mapSz, ySt - seeded3 * mapSz, 2*Math.PI * Math.random(), true));
        }
        for (var i = 0; i < Math.floor(seededD * 19); i++) //Itlin bushes
        {
            seeded2 = seeded(seedA + seedE * i);
            seeded3 = seeded(seedE + seedC / (i + 1));

            if (seeded(seededB + 89910 * i) > 0.44)
            {
                scenicList.push(new Scenery("itlinPlant", xSt - seeded2 * mapSz, ySt - seeded3 * mapSz, 2*Math.PI * Math.random(), true));
            }
            else
            {
                scenicList.push(new Scenery("ishPlant", xSt - seeded2 * mapSz, ySt - seeded3 * mapSz, 2*Math.PI * Math.random(), true));
            }
        }
        for (var i = 0; i < Math.floor(seededE * 16); i++) //muf plants
        {
            seeded1 = seeded(seedC + seedA * i * 6800);
            seeded5 = seeded(seedB + seedD / (i + 190));


            scenicList.push(new Scenery("mufPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2*Math.PI * Math.random(), true));
        }
        for (var i = 0; i < Math.floor(seededB * 16); i++) //luuf plants
        {
            seeded1 = seeded(seedA + seedD * i * 17890);
            seeded5 = seeded(seedE + seedA * (i + 19560));

            scenicList.push(new Scenery("luufPlant", xSt - seeded1 * mapSz, ySt - seeded5 * mapSz, 2*Math.PI * Math.random(), true));
        }
        for (var i = 0; i < Math.floor(((seededB + seededA) / 2) * 22); i++) //palnt plants
        {
            seeded1 = seeded(seedD + seedE * i * 17890);
            seeded5 = seeded(seedE + seedC * (i + 19560));

            scenicList.push(new Scenery("palntPlant", xSt - seeded1 * mapSz, ySt - seeded5 * mapSz, 2*Math.PI * Math.random(), true));
        }
        for (var i = 0; i < Math.floor(((seededC + seededD + seededE) / 3) * 11); i++) //buttermellow plants
        {
            seeded1 = seeded(seedE + seedE * i);
            seeded5 = seeded(seedD + seedD / (i + 1));


            scenicList.push(new Scenery("butterMellowPlant", xSt - seeded1 * mapSz, ySt - seeded5 * mapSz, 2*Math.PI * Math.random(), true));
        }
        for (var i = 0; i < Math.floor(seededA * 20); i++) //techi plants
        {
            seeded1 = seeded(seedC + seedC * i * 23000);
            seeded5 = seeded(seedC + 100 + seedC * 56 * i * i);


            scenicList.push(new Scenery("techiPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2*Math.PI * Math.random(), true));
        }

        if (elevation == -2 || elevation == -1)
        {
            for (var i = 0; i < (Math.floor(seededD * 9) + 1); i++) //techi plants
            {
                seeded5 = seeded(seedC + seedE * i * 19191);
                seeded1 = seeded(seedE + 19 + seedC * 19 * i);

                if (seeded(seedB + 900 * i) > 0.495)
                {
                    scenicList.push(new Scenery("corneliusPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2*Math.PI * Math.random(), true));
                }
                else
                {
                    scenicList.push(new Scenery("rilthasiaPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2*Math.PI * Math.random(), true));
                }
            }
        }

        if (elevation == 0)
        {
            for (var i = 0; i < Math.floor(seededC * 11); i++) //ardils
            {
                seeded1 = seeded(seedB + seedB * 90000 * i);
                seeded4 = seeded(seedA + seedD * 110201 * i);

                if (seeded(seedE + 88888 * i) > 0.5)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Ardil", true, genID));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Ardil", false, genID));
                }
            }
        }
        else
        {
            for (var i = 0; i < Math.floor(seededC * 5); i++) //ardils
            {
                seeded1 = seeded(seedB + seedB * 90000 * i);
                seeded4 = seeded(seedA + seedD * 110201 * i);

                if (seeded(seedE + 999992 * i) > 0.5)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Ardil", true, genID));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Ardil", false, genID));
                }
            }
        }

        for (var i = 0; i < Math.floor(seededA * 8); i++) //evraks
        {
            seeded2 = seeded(seedA + seedA * 12012 * i);
            seeded3 = seeded(seedD + seedA * 5555 * i);

            ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded2 * mapSz, "Evrak", false, genID));
        }

        if (elevation == 0)
        {
            for (var i = 0; i < Math.floor(seededA * 9); i++) //friches / frich packs
            {
                seeded2 = seeded(seedD + seedD * 12012 * i);
                seeded3 = seeded(seedD + seedD * 5555 * i);

                for (var j = 0; j < Math.floor(seededE * 6); j++)
                {
                    if (seeded(seedB + 76823 * j) > 0.615)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(35), ySt - seeded3 * mapSz + spacer(35), "Frich", true, genID));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(35), ySt - seeded3 * mapSz + spacer(35), "Frich", false, genID));
                    }
                }
            }
        }

        for (var i = 0; i < Math.floor(seededE * 6); i++) //Naaprid herds
        {
            seeded1 = seeded(seedB + seedA * 222 * i);
            seeded2 = seeded(seedD + seedC * 1119 * i);

            for (var j = 0; j < Math.floor(seededE * 9); j++)
            {
                var seeded5 = seeded(seedB + seedD * Math.ceil(76823 / j));

                if (seeded5 < 0.4)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + spacer(130), ySt - seeded2 * mapSz + spacer(130), "Naaprid", true, genID));
                }
                else if (seeded5 < 0.81)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + spacer(130), ySt - seeded2 * mapSz + spacer(130), "Naaprid", false, genID));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + spacer(130), ySt - seeded2 * mapSz + spacer(130), "Naaprid", "baby", genID));
                }
            }
        }

        for (var i = 0; i < Math.floor(((seededA + seededB) / 2) * 17); i++) //tunsk mounds
        {
            seeded1 = seeded(seedC + seedC * 12 * i);
            seeded2 = seeded(seedB + seedB / (39 * i + 5));

            scenicList.push(new Scenery("tunskMound", xSt - seeded2 * mapSz, ySt - seeded1 * mapSz, 2*Math.PI * Math.random(), true));
        }
        for (var i = 0; i < Math.floor(seededC * 14); i++) //grushes / grushweed patches
        {
            seeded1 = seeded(seedB + seedA * 17 * i);
            seeded2 = seeded(seedA + seedB / (5 * i + 3));

            seeded3 = seeded(i * seedA);
            for (var j = 0; j < Math.floor(seeded3 * 7); j++)
            {
                seeded4 = seeded(seedC + seedB * 5 * j);
                seeded5 = seeded(seedA + seedC * 19 * j);

                if (Math.random() <= 0.29)
                {
                    var rand = Math.random();
                    if (rand < 0.2)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + (Math.floor(seeded4 * 50) + 39) * j, ySt - seeded2 * mapSz + (Math.floor(seeded5 * 50) + 39) * j, "Grush", true, genID));
                    }
                    else if (rand < 0.5)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + (Math.floor(seeded4 * 50) + 16) * j, ySt - seeded2 * mapSz + (Math.floor(seeded5 * 50) + 16) * j, "Grush", "baby", genID));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + (Math.floor(seeded4 * 50) + 25) * j, ySt - seeded2 * mapSz + (Math.floor(seeded5 * 50) + 25) * j, "Grush", false, genID));
                    }
                }
                else
                {
                    var rand = Math.random();
                    if (rand < 0.2)
                    {
                        scenicList.push(new Scenery("grushweedPlant", xSt - seeded1 * mapSz + (Math.floor(seeded4 * 50) + 39) * j, ySt - seeded2 * mapSz + (Math.floor(seeded5 * 50) + 39) * j, 2*Math.PI * Math.random(), seeded(seedC + 99 * i + 38 * j) + 0.65));
                    }
                    else if (rand < 0.5)
                    {
                        scenicList.push(new Scenery("grushweedPlant", xSt - seeded1 * mapSz + (Math.floor(seeded4 * 50) + 16) * j, ySt - seeded2 * mapSz + (Math.floor(seeded5 * 50) + 16) * j, 2*Math.PI * Math.random(), seeded(seedB + 99 * i + 49 * j) + 0.05));
                    }
                    else
                    {
                        scenicList.push(new Scenery("grushweedPlant", xSt - seeded1 * mapSz + (Math.floor(seeded4 * 50) + 25) * j, ySt - seeded2 * mapSz + (Math.floor(seeded5 * 50) + 25) * j, 2*Math.PI * Math.random(), seeded(seedA + 99 * i + 27 * j) + 0.25));
                    }
                }
            }
        }

        for (var i = 0; i < Math.floor(((seededB + seededA) / 2) * 9); i++) //mofus and mofu nests
        {
            seeded1 = seeded(seedD + seedC * 17 * i);
            seeded2 = seeded(seedA + seedA / (5 * i + 3));

            seeded3 = seeded(i * seedA);
            for (var j = 0; j < Math.floor(seeded3 * 11); j++)
            {
                seeded4 = seeded(seedB + seedB * 60 * j);
                seeded5 = seeded(seedC + seedC * 390 * j);

                var rand = Math.random();
                if (rand < 0.4)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + (Math.floor(seeded4 * 70) + 39) * j, ySt - seeded2 * mapSz + (Math.floor(seeded5 * 50) + 39) * j, "Mofu", true, genID));
                }
                else if (rand < 0.5)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + (Math.floor(seeded4 * 50) + 16) * j, ySt - seeded2 * mapSz + (Math.floor(seeded5 * 50) + 16) * j, "Mofu", "baby", genID));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + (Math.floor(seeded4 * 60) + 25) * j, ySt - seeded2 * mapSz + (Math.floor(seeded5 * 50) + 25) * j, "Mofu", false, genID));
                }

                if (Math.random() <= 0.84)
                {
                    if (rand < 0.4)
                    {
                        scenicList.push(new Scenery("mofuNest", xSt - seeded1 * mapSz + (Math.floor(seeded4 * 70) + 39) * j, ySt - seeded2 * mapSz + (Math.floor(seeded5 * 50) + 39) * j, 2 * Math.PI * Math.random(), seeded(seedC + 99 * i + 38 * j) + 0.65));
                    }
                    else if (rand >= 0.5)
                    {
                        scenicList.push(new Scenery("mofuNest", xSt - seeded1 * mapSz + (Math.floor(seeded4 * 60) + 25) * j, ySt - seeded2 * mapSz + (Math.floor(seeded5 * 50) + 25) * j, 2 * Math.PI * Math.random(), seeded(seedA + 99 * i + 27 * j) + 0.25));
                    }
                }
            }
        }
    }
    else if (biome == 1) //nordic woods
    {
        for (var i = 0; i < Math.floor(261 + seeded(seededE * 9887 + seedA / 100) * 300); i++) //trees
        {
            seeded2 = seeded((seedE + seedD + 87989) * (i + 50));
            seeded3 = seeded(i * ((seedA + 897) + seedC) * 54 + 96 * seedB * (i + 19));

            scenicList.push(new Scenery("pineTree", xSt - seeded2 * mapSz, ySt - seeded3 * mapSz, 2 * Math.PI * Math.random(), true));
        }
        for (var i = 0; i < Math.floor(seededD * 26); i++) //lizard
        {
            seeded2 = seeded(seedB + seedD * i * 23252);
            seeded5 = seeded(seedC + seedC * (i + 4343556));
            seeded3 = seeded(seedA + seedE * (i + 79214956));
            seeded4 = seeded(seedC + seedD * (i + 897462));

            var rnd = seeded(seedD + 208721864 * i);
            if (rnd > 0.3) {
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded5 * mapSz, "Lizard", false, genID));
            }
            else {
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz, ySt - seeded4 * mapSz, "Lizard", true, genID));
            }
        }
        for (var i = 0; i < Math.floor(seededC * 16); i++) //bear
        {
            seeded2 = seeded(seedA + seedD * i * 899122);
            seeded5 = seeded(seedD + seedC * (i + 4826));
            seeded3 = seeded(seedB + seedA * (i + 12222));
            seeded4 = seeded(seedE + seedE * (i + 3222562));

            var rnd = seeded(seedC + 99829761 * i);
            if (rnd > 0.8)
            {
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz, ySt - seeded2 * mapSz, "BlackBear", true, genID));
            }
            else if (rnd > 0.6)
            {
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(25), ySt - seeded4 * mapSz + spacer(25), "BlackBear", true, genID));
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(100),ySt - seeded4 * mapSz + spacer(100), "BlackBear", false, genID));
            }
            else
            {
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded4 * mapSz, ySt - seeded3 * mapSz, "BlackBear", false, genID));
            }
        }

        if (X > 47082) //in Thengaria only (WEST)
        {
            for (var i = 0; i < Math.floor(seededC * 26); i++) //kofke
            {
                seeded1 = seeded(seedA + seedD * i * 17890);
                seeded5 = seeded(seedE + seedA * (i + 19560));

                scenicList.push(new Scenery("kofkePlant", xSt - seeded1 * mapSz, ySt - seeded5 * mapSz, 2 * Math.PI * Math.random(), true));
            }
            for (var i = 0; i < Math.floor(seededE * 7); i++) //steugiurne
            {
                seeded1 = seeded(seedA + seedD * i * 900 + 300 * seedB);
                seeded5 = seeded(seedB + seedD * (i + 283));

                scenicList.push(new Scenery("steugiurnePlant", xSt - seeded1 * mapSz, ySt - seeded5 * mapSz, 2 * Math.PI * Math.random(), true));
            }
            for (var i = 0; i < Math.floor(seededE * 5); i++) //thalis
            {
                seeded1 = seeded(seedC + seedC * i * 89651239283);
                seeded5 = seeded(seedB + seedB * (i + 48627881));

                scenicList.push(new Scenery("thalisPlant", xSt - seeded1 * mapSz, ySt - seeded5 * mapSz, 2 * Math.PI * Math.random(), true));
            }
            for (var i = 0; i < Math.floor(seededE * 19); i++) //callop
            {
                seeded1 = seeded(seedA + seedD * i * 900 + 300 * seedB);
                seeded5 = seeded(seedB + seedD * (i + 283));

                scenicList.push(new Scenery("callopPlant", xSt - seeded1 * mapSz, ySt - seeded5 * mapSz, 2 * Math.PI * Math.random(), true));
            }
            for (var i = 0; i < Math.floor(seededE * 19); i++) //darb
            {
                seeded1 = seeded(seedC + seedC * i * 700 + 100 * seedA);
                seeded2 = seeded(seedA + seedB * (i + 90022343));

                scenicList.push(new Scenery("darbPlant", xSt - seeded1 * mapSz, ySt - seeded2 * mapSz, 2 * Math.PI * Math.random(), true));
            }
            if (seeded(seedE + 9993714638717) > 0.7) {
                for (var i = 0; i < Math.floor(seededA * 2); i++) //brightbloom
                {
                    seeded1 = seeded(seedB + seedA * i * 855 + 366 * seedC);
                    seeded2 = seeded(seedC + seedB * (i + 334456));

                    scenicList.push(new Scenery("brightbloomPlant", xSt - seeded1 * mapSz, ySt - seeded2 * mapSz, 2 * Math.PI * Math.random(), true));
                }
            }
            for (var i = 0; i < Math.floor(seededA * 20); i++) //fletter
            {
                seeded1 = seeded((seedB + seedA) * i * 1225 + 399726 * seedB);
                seeded2 = seeded(seedC + seedE * (i + 33523536));

                var rnd = seeded(seedD + 3259876121 * i);
                if (rnd > 0.6) {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Fletter", true, genID));
                }
                else {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Fletter", false, genID));
                }
            }
            for (var i = 0; i < Math.floor(seededB * 18); i++) //skol
            {
                seeded1 = seeded(seedA + seedD * i * 198790);
                seeded2 = seeded(seedA + seedA * i * 5555);
                seeded4 = seeded(seedE + seedA * (i + 983820));
                seeded3 = seeded(seedC + seedC * (i + 6880));

                var rnd = seeded(seedB + 98568761 * i);
                if (rnd > 0.9) {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Skol", true, genID));
                }
                else if (rnd > 0.8) {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded4 * mapSz, "Skol", false, genID));
                }
                else if (rnd > 0.4) {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz, ySt - seeded4 * mapSz, "Skol", false, genID));
                    ArtificialIntelligenceAccess.push(new Unit(60 + xSt - seeded2 * mapSz, 190 + ySt - seeded4 * mapSz, "Skol", false, genID));
                    ArtificialIntelligenceAccess.push(new Unit(200 + xSt - seeded2 * mapSz, -150 + ySt - seeded4 * mapSz, "Skol", false, genID));
                    ArtificialIntelligenceAccess.push(new Unit(110 + xSt - seeded2 * mapSz, 110 + ySt - seeded4 * mapSz, "Skol", false, genID));
                    ArtificialIntelligenceAccess.push(new Unit(300 + xSt - seeded2 * mapSz, -55 + ySt - seeded4 * mapSz, "Skol", true, genID));
                }
                else {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded3 * mapSz, "Skol", false, genID));
                    ArtificialIntelligenceAccess.push(new Unit(60 + xSt - seeded1 * mapSz, 190 + ySt - seeded3 * mapSz, "Skol", false, genID));
                    ArtificialIntelligenceAccess.push(new Unit(200 + xSt - seeded1 * mapSz, -150 + ySt - seeded3 * mapSz, "Skol", false, genID));
                    ArtificialIntelligenceAccess.push(new Unit(110 + xSt - seeded1 * mapSz, 110 + ySt - seeded3 * mapSz, "Skol", false, genID));
                    ArtificialIntelligenceAccess.push(new Unit(300 + xSt - seeded1 * mapSz, -55 + ySt - seeded3 * mapSz, "Skol", false, genID));
                }
            }
            for (var i = 0; i < Math.floor(seededC * 29); i++) //hoffalgre
            {
                seeded2 = seeded(seedD + seedD * i * 9984722);
                seeded5 = seeded(seedD + seedC * (i + 5343556));
                seeded3 = seeded(seedB + seedE * (i + 89214956));
                seeded4 = seeded(seedB + seedE * (i + 112462));

                var rnd = seeded(seedE + 99829761 * i);
                if (rnd > 0.625) {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz, ySt - seeded2 * mapSz, "Hoffalgre", false, genID));
                }
                else if (rnd > 0.39) {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(30), ySt - seeded4 * mapSz + spacer(30), "Hoffalgre", true, genID));
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(30), ySt - seeded4 * mapSz + spacer(30), "Hoffalgre", true, genID));
                }
                else {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded4 * mapSz, ySt - seeded3 * mapSz, "Hoffalgre", true, genID));
                }
            }
        }
        else {
            if (Y < -13476) //SOUTH
            {
                for (var i = 0; i < Math.floor(seeded(seedE + seedD + 12312378265) * 12); i++) //viper
                {
                    seeded2 = seeded((seedE + seedB) * (4 + i * 749));
                    seeded5 = seeded((seedB + seedA) * (i + 8527));
                    seeded3 = seeded((seedD + seedA) * (i + 12986));
                    seeded4 = seeded((seedB + seedC) * (i + 297864));

                    var rnd = seeded((seedA * seedE / 10980) * i * seedC);
                    if (rnd > 0.65)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded5 * mapSz, "Viper", true, genID));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz, ySt - seeded4 * mapSz, "Viper", false, genID));
                    }
                }
                for (var i = 0; i < Math.floor(seeded(seedE + seedD + 782765737825) * 8); i++) //bequon
                {
                    seeded2 = seeded((seedD + seedB) * (5 + i * 7465));
                    seeded5 = seeded((seedA + seedC) * (i + 8234));
                    seeded3 = seeded((seedE + seedC) * (i + 21486));
                    seeded4 = seeded((seedB + seedD) * (i + 2354));

                    scenicList.push(new Scenery("bequonPlant", xSt - seeded3 * mapSz, ySt - seeded3 * mapSz, 2 * Math.PI * Math.random(), true));
                }
                for (var i = 0; i < Math.floor(seeded(seedB + seedC + 58637825) * 28); i++) //Teppreklia
                {
                    seeded2 = seeded((seedE + seedB) * (5 + i * 338965));
                    seeded5 = seeded((seedA + seedD) * (i + 1434));
                    seeded3 = seeded((seedB + seedE) * (i + 9823686));
                    seeded4 = seeded((seedC + seedB) * (i + 4284));

                    scenicList.push(new Scenery("tepprekliaPlant", xSt - seeded3 * mapSz, ySt - seeded3 * mapSz, 2 * Math.PI * Math.random(), true));
                }
            }
            else {
                for (var i = 0; i < Math.floor(seededB * 4); i++) //viper
                {
                    seeded2 = seeded((seedE + seedB) * (1 + i * 899));
                    seeded5 = seeded((seedB + seedA) * (i + 214096));
                    seeded3 = seeded((seedC + seedA) * (i + 387326));
                    seeded4 = seeded((seedB + seedE) * (i + 21680004));

                    var rnd = seeded((seedA * seedE / 10980) * i * seedC);
                    if (rnd > 0.9)
                    {
                        //ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded5 * mapSz, "Viper", true, genID));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz, ySt - seeded4 * mapSz, "Viper", false, genID));
                    }
                }
                if (seeded(seedA * 55555) < 0.22) {
                    for (var i = 0; i < Math.floor(seededB * 2); i++) //halcif
                    {
                        seeded1 = seeded((seedE + seedE) * i * 65524);
                        seeded5 = seeded(seedD * seedB * (i + 4947));

                        scenicList.push(new Scenery("halcifPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2 * Math.PI * Math.random(), true));
                    }
                }
                for (var i = 0; i < Math.floor(seededE * 4); i++) //cyrinthilim
                {
                    seeded1 = seeded((seedE + seedD) * i * 65524);
                    seeded5 = seeded(seedC * seedA * (i + 4947));

                    if (seeded(seedA * seedD * 5782 + seedB * 9875122) < 0.6) {
                        scenicList.push(new Scenery("cyrinthilimPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2 * Math.PI * Math.random(), true));
                    }
                }
                for (var i = 0; i < Math.floor(seededB * 34); i++) //shehid
                {
                    seeded2 = seeded((seedC + seedD) * i * 987106124);
                    seeded5 = seeded((seedE + seedE) * (i + 72746));
                    seeded3 = seeded((seedC + seedA) * (i + 356));
                    seeded4 = seeded((seedA + seedA) * (i + 214));

                    var rnd = seeded((seedA * seedE / 10980) * i * seedC);
                    if (rnd > 0.8) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded5 * mapSz, "Shehid", true, genID));
                    }
                    else {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz, ySt - seeded4 * mapSz, "Shehid", false, genID));
                    }
                }
                for (var i = 0; i < Math.floor(seeded((seededB + 88632755517832) / seededA) * 20); i++) //glin
                {
                    seeded1 = seeded((seedE + seedD) * i * 948877);
                    seeded5 = seeded(seedC * 787811012 + 3 * seedB * (i + 85215));

                    scenicList.push(new Scenery("glinPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2 * Math.PI * Math.random(), true));
                }
            }


            for (var i = 0; i < Math.floor(seededE * 9); i++) //varn
            {
                seeded2 = seeded(seedC + seedB * i * 1211202);
                seeded5 = seeded(seedC + seedA * (i + 346));
                seeded3 = seeded(seedB + seedB * (i + 98172));
                seeded4 = seeded(seedB + seedB * (i + 79822));

                var rnd = seeded(seedC + 99829761 * i);
                if (rnd > 0.85) {
                    if (Math.random() < 0.5) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz, ySt - seeded2 * mapSz, "Varn", true, genID));
                    }
                    else {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz, ySt - seeded2 * mapSz, "Varn", false, genID));
                    }
                }
                else if (rnd > 0.4) {
                    if (Math.random() < 0.5) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(90), ySt - seeded4 * mapSz + spacer(90), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(90), 75 + ySt - seeded4 * mapSz + spacer(90), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(30), ySt - seeded4 * mapSz + spacer(30), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(30), 75 + ySt - seeded4 * mapSz + spacer(30), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(30), ySt - seeded4 * mapSz + spacer(30), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(100), 75 + ySt - seeded4 * mapSz + spacer(100), "Varn", false, genID));
                    }
                    else {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(30), ySt - seeded4 * mapSz + spacer(30), "Varn", true, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(90), 75 + ySt - seeded4 * mapSz + spacer(90), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(90), ySt - seeded4 * mapSz + spacer(90), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(80), 75 + ySt - seeded4 * mapSz + spacer(80), "Varn", true, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(40), ySt - seeded4 * mapSz + spacer(50), "Varn", true, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(30), 75 + ySt - seeded4 * mapSz + spacer(30), "Varn", false, genID));
                    }
                }
                else {
                    if (Math.random() < 0.5) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(50), ySt - seeded4 * mapSz + spacer(50), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(80), 75 + ySt - seeded4 * mapSz + spacer(80), "Varn", true, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(30), ySt - seeded4 * mapSz + spacer(30), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(30), 75 + ySt - seeded4 * mapSz + spacer(30), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(40), ySt - seeded4 * mapSz + spacer(40), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(55), 75 + ySt - seeded4 * mapSz + spacer(55), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(105), ySt - seeded4 * mapSz + spacer(70), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(45), 75 + ySt - seeded4 * mapSz + spacer(60), "Varn", true, genID));
                    }
                    else {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(40), ySt - seeded4 * mapSz + spacer(40), "Varn", true, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(40), 75 + ySt - seeded4 * mapSz + spacer(40), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(40), ySt - seeded4 * mapSz + spacer(40), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(40), 75 + ySt - seeded4 * mapSz + spacer(40), "Varn", true, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(40), ySt - seeded4 * mapSz + spacer(40), "Varn", true, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(40), 75 + ySt - seeded4 * mapSz + spacer(40), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(40), ySt - seeded4 * mapSz + spacer(40), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(40), 75 + ySt - seeded4 * mapSz + spacer(40), "Varn", true, genID));
                    }
                }
            }
            for (var i = 0; i < Math.floor(seeded(seededB + seedA + seedD) * 3); i++) //beehives
            {
                seeded2 = seeded(seedB + seedB * i);
                seeded3 = seeded(seedB + seedB / (i + 1));

                scenicList.push(new Scenery("beehive", xSt - seeded2 * mapSz, ySt - seeded3 * mapSz, 2 * Math.PI * Math.random(), true));
            }
            for (var i = 0; i < Math.floor(seeded(seededA + 99 * seedB) * 14); i++) //stomwik
            {
                seeded2 = seeded(seedC + seedE * i * 69895);
                seeded4 = seeded(seedE + seedA / (i + 32874914289));

                scenicList.push(new Scenery("stomwikPlant", xSt - seeded4 * mapSz, ySt - seeded2 * mapSz, 2 * Math.PI * Math.random(), true));
            }
            for (var i = 0; i < Math.floor(seeded(seededC + 564341 * seedA) * 25); i++) //neprilne
            {
                seeded2 = seeded(seedA + seedC * i * 5985);
                seeded4 = seeded((seedE * i + seedA) + 2459 * (i + 867));

                scenicList.push(new Scenery("neprilnePlant", xSt - seeded4 * mapSz, ySt - seeded2 * mapSz, 2 * Math.PI * Math.random(), true));
            }
            for (var i = 0; i < Math.floor(seeded(seededD + 7989747231) * 16); i++) //common berry bushes
            {
                seeded2 = seeded(seedA + seedE * i);
                seeded3 = seeded(seedE + seedC / (i + 1));

                if (seeded(seededB + 89910 * i) > 0.34) {
                    scenicList.push(new Scenery("akerPlant", xSt - seeded3 * mapSz, ySt - seeded3 * mapSz, 2 * Math.PI * Math.random(), true));
                }
                else {
                    scenicList.push(new Scenery("pluttPlant", xSt - seeded2 * mapSz, ySt - seeded1 * mapSz, 2 * Math.PI * Math.random(), true));
                }
            }
            for (var i = 0; i < Math.floor(seededE * 18); i++) //culpris
            {
                seeded1 = seeded(seedB + seedD * i * 6800);
                seeded5 = seeded(seedD + seedC / (i + 190));

                scenicList.push(new Scenery("culprisPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2 * Math.PI * Math.random(), true));
            }

            if (X < -30000 && Y < 6278) //in Nirwaden only (EAST)
            {
                for (var i = 0; i < Math.floor(seeded(seedE + seedB + 6879372675365) * 3); i++) //changeling
                {
                    seeded2 = seeded((seedD + seedA) * (5 + i * 666));
                    seeded5 = seeded((seedB + seedC) * (i + 9087827));
                    seeded3 = seeded((seedD + seedA) * (i + 232986));
                    seeded4 = seeded((seedC + seedE) * (i + 280987864));

                    var rnd = seeded((seedC * seedE / 10980) * i * (seedD + seedA));
                    if (rnd > 0.55)
                    {
                        if (Math.random() >= 0.55)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded5 * mapSz, "Changeling", false, genID));
                        }
                    }
                }
                for (var i = 0; i < Math.floor(seeded((seededC + 99761242) / seededA) * 21); i++) //halgom
                {
                    seeded1 = seeded((seedC + seedB) * i * 661727);
                    seeded5 = seeded(seedA * 78652382 + 3 * seedD * (i + 581738765));

                    scenicList.push(new Scenery("halgomPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2 * Math.PI * Math.random(), true));
                }

                for (var i = 0; i < Math.floor(seeded((seededE + 3214576122534)) * 18); i++) //halgom
                {
                    seeded1 = seeded((seedB + seedE) * i * 661727);
                    seeded5 = seeded(seedC * 78652382 + 3 * seedA * (i + 47886865));

                    scenicList.push(new Scenery("iemaPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2 * Math.PI * Math.random(), true));
                }

                for (var i = 0; i < Math.floor(seededB * 10); i++) //boar
                {
                    seeded1 = seeded(seedA + seedD * i * 17890);
                    seeded5 = seeded(seedE + seedA * (i + 19560));

                    var rnd = seeded(seedB + 98568761 * i);
                    if (rnd > 0.7) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Boar", true, genID));
                    }
                    else if (rnd > 0.4) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded4 * mapSz, "Boar", false, genID));
                    }
                    else if (rnd > 0.2) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded2 * mapSz, "Boar", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz + spacer(110), ySt - seeded2 * mapSz + spacer(110), "Boar", false, genID));
                    }
                    else if (rnd > 0.1) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Boar", true, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + spacer(110), ySt - seeded4 * mapSz + spacer(110), "Boar", false, genID));
                    }
                    else {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Boar", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + spacer(110),ySt - seeded4 * mapSz + spacer(110), "Boar", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + spacer(180),ySt - seeded4 * mapSz + spacer(130), "Boar", false, genID));
                    }
                }
                for (var i = 0; i < Math.floor(seeded(18 + seededB) * 8); i++) //molte
                {
                    seeded2 = seeded(seedA + seedD * i * 27758);
                    seeded5 = seeded(seedE + seedC * (i + 1234556));
                    seeded3 = seeded(seedE + seedA * (i + 8645656));
                    seeded4 = seeded(seedC + seedB * (i + 3532));

                    var rnd = seeded(seedB + 99829761 * i);
                    if (rnd > 0.4) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded5 * mapSz, "Molte", false, genID));
                    }
                    else {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz, ySt - seeded4 * mapSz, "Molte", true, genID));
                    }
                }
                for (var i = 0; i < Math.floor(seeded(seededB * 978987 + seedA * 35) * 9); i++) //BorbBeetle
                {
                    seeded2 = seeded(seedE + seedD * i * 27758);
                    seeded5 = seeded(seedE + seedA * (i + 1234556));
                    seeded3 = seeded(seedC + seedA * (i + 8645656));
                    seeded4 = seeded(seedC + seedE * (i + 3532));

                    var rnd = seeded(seedB + 99829761 * i);
                    if (rnd > 0.41) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded5 * mapSz, "BorbBeetle", false, genID));
                    }
                    else {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz, ySt - seeded4 * mapSz, "BorbBeetle", true, genID));
                    }
                }
            }
            else {
                for (var i = 15; i < Math.floor(seeded(seededD + 798974723111241111) * 31); i++) //common berry bushes
                {
                    seeded2 = seeded(seedA * 656412 + seedC * i);
                    seeded3 = seeded(seedB + seedA / (i + 1));

                    if (seeded(seededB + 27856120 * i) > 0.34) {
                        scenicList.push(new Scenery("akerPlant", xSt - seeded3 * mapSz, ySt - seeded3 * mapSz, 2 * Math.PI * Math.random(), true));
                    }
                    else {
                        scenicList.push(new Scenery("pluttPlant", xSt - seeded2 * mapSz, ySt - seeded1 * mapSz, 2 * Math.PI * Math.random(), true));
                    }
                }
                for (var i = 0; i < Math.floor(seededB * 13); i++) //wyr
                {
                    seeded1 = seeded(seedC + seedA * i * 6677278431124);
                    seeded5 = seeded(seedD + seedC / (i + 87637677776));

                    scenicList.push(new Scenery("wyrPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2 * Math.PI * Math.random(), true));
                }
                if (seeded(seedC + 7899) > 0.65) {
                    for (var i = 0; i < Math.floor(seededD * 2); i++) //tylun
                    {
                        seeded1 = seeded(seedE * seedB * i * 855524);
                        seeded5 = seeded(seedB * seedA / (i + 2894677));

                        scenicList.push(new Scenery("tylunPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2 * Math.PI * Math.random(), true));
                    }
                }
                if (seeded(seedB * 31991) > 0.7) {
                    for (var i = 0; i < Math.floor(seededE * 2); i++) //ogard
                    {
                        seeded1 = seeded((seedE + seedD) * i * 65524);
                        seeded5 = seeded(seedC * seedA * (i + 4947));

                        scenicList.push(new Scenery("ogardPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2 * Math.PI * Math.random(), true));
                    }
                }
                for (var i = 0; i < Math.floor(seeded(seededE + 9874 + ((34 + seedA) * seedD)) * 17); i++) //grib
                {
                    seeded2 = seeded(seedB + seedD * i * 1089765602);
                    seeded5 = seeded(seedC + seedB * (i + 332525));
                    seeded3 = seeded(seedB + seedE * (i + 234122));
                    seeded4 = seeded(seedE + seedB * (i + 78623522));

                    var rnd = seeded(seedC + 99829761 * i);
                    if (rnd > 0.65) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz, ySt - seeded2 * mapSz, "Grib", true, genID));
                    }
                    else if (rnd > 0.5) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz, ySt - seeded4 * mapSz, "Grib", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(90), ySt - seeded4 * mapSz + spacer(75), "Grib", false, genID));
                    }
                    else {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded4 * mapSz, ySt - seeded3 * mapSz, "Grib", false, genID));
                    }
                }
                for (var i = 0; i < Math.floor(seeded(seededC + 8976721453687 / (seedE + seedC)) * 26); i++) //narthwarp
                {
                    seeded2 = seeded((seedD + seedB) * (787 + i * 88976729));
                    seeded5 = seeded((seedB + seedD) * (i + 5843796));
                    seeded3 = seeded((seedB + seedA) * (i + 7867326));
                    seeded4 = seeded((seedD + seedE) * (i + 478398004));

                    var rnd = seeded((seedC * seedA / 277910808) * i * seedD);
                    if (rnd > 0.91)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded5 * mapSz, "Narthwarp", true, genID));
                    }
                    else
                    {
                        rnd = seeded((seedB * seedA / 2778657238) * i * seedD);
                        if (rnd > 0.91)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded5 * mapSz, "Narthwarp", false, genID));
                        }
                        else
                        {
                            rnd = seeded((seedC * seedD / 19757491111) * i * seedA);
                            if (rnd > 0.5)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz + spacer(20), ySt - seeded5 * mapSz + spacer(20), "Narthwarp", false, genID));
                                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(20), ySt - seeded4 * mapSz + spacer(20), "Narthwarp", false, genID));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(65), ySt - seeded4 * mapSz + spacer(65), "Narthwarp", false, genID));
                                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz + spacer(65), ySt - seeded5 * mapSz + spacer(65), "Narthwarp", false, genID));
                                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(65), ySt - seeded4 * mapSz + spacer(65), "Narthwarp", false, genID));
                                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz + spacer(65), ySt - seeded5 * mapSz + spacer(65), "Narthwarp", false, genID));
                                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(65), ySt - seeded4 * mapSz + spacer(65), "Narthwarp", false, genID));
                            }
                        }
                    }
                }
            }
        }
    }
    else if (biome == 2) //Nirwaden Grasslands
    {
        for (var i = 0; i < Math.floor(seededB * 6); i++) //naaprid
        {
            seeded2 = seeded(seedD + seedA * i);
            seeded3 = seeded(seedC + seedE / (i + 1));


            for (var j = 0; j < Math.floor(seeded(seededE * (seedD + seededE)) * 8); j++)
            {
                var rando = seeded(seedD * i + 6 * 62 + 1284298 * j * seedA);
                if (rando > 0.75)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(120), ySt - seeded3 * mapSz + spacer(120), "Naaprid", true, genID));
                }
                else if (rando > 0.25)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(120), ySt - seeded3 * mapSz + spacer(120), "Naaprid", false, genID));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(120), ySt - seeded3 * mapSz + spacer(120), "Naaprid", "baby", genID));
                }
            }
        }

        if (map != "n1e4" && map != "n1e5")
        {
            for (var i = 0; i < Math.floor(seededD * 2); i++) //horse
            {
                seeded2 = seeded(seedD + seedE * i);
                seeded3 = seeded(seedB + seedA / (i + 1));

                if (seeded(seedC + 89 + (seedC * 2 * i)) >= 0.5)
                {
                    for (var j = 0; j < Math.floor(seeded(seededA * (seedD + seededB)) * 19); j++)
                    {
                        var rando = seeded(seedE * i + 45 * 22 + 67645 * j * seedB);
                        if (rando > 0.75)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(320), ySt - seeded3 * mapSz + spacer(320), "Horse", true, genID));
                        }
                        else if (rando > 0.25)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(250), ySt - seeded3 * mapSz + spacer(250), "Horse", false, genID));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(200), ySt - seeded3 * mapSz + spacer(200), "Horse", "baby", genID));
                        }
                    }
                }
            }
        }
        for (var i = 0; i < Math.floor(seededC * 4.85); i++) //Wobea Plant
        {
            seeded2 = seeded(seedA + seedB * i);
            seeded3 = seeded(seedB + seedE * (i + 1));

            scenicList.push(new Scenery("wobeaPlant", xSt - seeded2 * mapSz, ySt - seeded3 * mapSz, 2*Math.PI * Math.random(), true));
        }
        for (var i = 0; i < Math.floor(((seededA + seededB) / 2) * 21); i++) //Erguer flowers
        {
            seeded2 = seeded(seedB + seedE * i);
            seeded3 = seeded(seedD * i + seedC * i + 1);


            scenicList.push(new Scenery("erguerPlant", xSt - seeded2 * mapSz, ySt - seeded3 * mapSz, 2*Math.PI * Math.random(), true));
        }
        for (var i = 0; i < Math.floor(seededE * 16); i++) //Chona and polyapa trees
        {
            seeded2 = seeded(seedB * i + seedD + 77 * i);
            seeded3 = seeded(seedC + i * seedC);

            if (seeded(seedB * i + seedD * seedA + 575757578 * i) > 0.49)
            {
                scenicList.push(new Scenery("chonaTree", xSt - seeded2 * mapSz, ySt - seeded3 * mapSz, 2*Math.PI * Math.random(), true));
            }
            else
            {
                scenicList.push(new Scenery("polyapaTree", xSt - seeded2 * mapSz, ySt - seeded3 * mapSz, 2*Math.PI * Math.random(), true));
            }
        }
        for (var i = 0; i < Math.floor(seededB * 18); i++) //techi plants
        {
            seeded1 = seeded(seedA + seedA * i * 23000);
            seeded5 = seeded(seedA * i + 100 + seedD * 56 * i);


            scenicList.push(new Scenery("techiPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2*Math.PI * Math.random(), true));
        }


        for (var i = 0; i < Math.floor(seededC * 3); i++) //ardils
        {
            seeded1 = seeded(seedC + seedD * 7854500 * i);
            seeded4 = seeded(seedA + seedA * 11078651 * i);

            if (seeded(seedE + 88888 * i) > 0.5)
            {
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Ardil", true, genID));
            }
            else
            {
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Ardil", false, genID));
            }
        }

        for (var i = 0; i < Math.floor(seededB * 15); i++) //peacocks
        {
            seeded2 = seeded(seedB + seedA + seedA * 12012 * i);
            seeded3 = seeded(seedD + seedA * 5555 * i);

            if (seeded(seedD + seedE + 999 * i) > 0.55)
            {
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded2 * mapSz, "Peacock", true, genID));
            }
            else
            {
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded2 * mapSz, "Peacock", false, genID));
            }
        }

        for (var i = 0; i < Math.floor(seededE * 11); i++) //friches / frich packs
        {
            seeded2 = seeded(seedB + seedC * 12012 * i);
            seeded3 = seeded(seedA + seedD * 5555 * i);

            for (var j = 0; j < Math.floor(seeded(seededA * 39 + 0.5 * i) * 6); j++)
            {
                var rando = seeded(seedC * 98754673 * j + i * seedA + 30);
                if (rando > 0.94)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(100), ySt - seeded3 * mapSz + spacer(100), "Frich", "massive", genID));
                }
                else if (rando > 0.22)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(75), ySt - seeded3 * mapSz + spacer(75), "Frich", true, genID));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(90), ySt - seeded3 * mapSz + spacer(90), "Frich", false, genID));
                }
            }
        }

        if (Y < -13813)
        {
            for (var i = 0; i < Math.floor(((seededB + seededA) / 2) * 7); i++) //palnt plants
            {
                seeded1 = seeded(seedD + seedE * i * 17890);
                seeded5 = seeded(seedE + seedC * (i + 19560));

                scenicList.push(new Scenery("palntPlant", xSt - seeded1 * mapSz, ySt - seeded5 * mapSz, 2*Math.PI * Math.random(), true));
            }
            for (var i = 0; i < Math.floor(((seededA + seededB) / 2) * 8); i++) //tunsk mounds
            {
                seeded1 = seeded(seedC + seedC * 14.5 * i);
                seeded2 = seeded(seedB + seedB / (82 * i + 16));

                scenicList.push(new Scenery("tunskMound", xSt - seeded2 * mapSz, ySt - seeded1 * mapSz, 2*Math.PI * Math.random(), true));
            }
            for (var i = 0; i < Math.floor(((seededD + seededC) / 2) * 3); i++) //chupacabras
            {
                seeded1 = seeded(seedE + seedC * 13 * i);
                seeded2 = seeded(seedA + seedD / (46 * i + 51));

                var rando = seeded(seedD + seedD + 999 * i + 99 * seedB);
                if (rando > 0.94)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded2 * mapSz, "Chupacabras", true, genID));
                }
                else if (rando < 0.11)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded2 * mapSz, "Chupacabras", false, genID));
                }
            }
        }
        if (elevation < 0)
        {
            for (var i = 0; i < Math.floor(seededB * 2); i++)
            {
                seeded2 = seeded(seedA + seedA * 12012 * i);
                seeded3 = seeded(seedD + seedA * 5555 * i);

                var rando = seeded(seedD + seedD + 999 * i + 99 * seedB);
                if (rando > 0.99)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded2 * mapSz, "Griffin", true, genID));
                }
                else if (rando <= 0.05)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded2 * mapSz, "Griffin", false, genID));
                }
            }
        }

    }
    else if (biome == 3) //savannah
    {
        for (var i = 0; i < Math.floor(seededB * 7 + 1); i++)
        {
            seeded2 = seeded(seedA + seedD * 12012 * i);
            seeded3 = seeded(seedD + seedA * 5555 * i);

            for (var l = 0; l < Math.floor(seeded(seedE * 87 + seedA * 21 * i + seedB * 62 * i) * 6 + 2); l++)
            {
                var sdedX = xSt - seeded3 * mapSz + 1400 * seeded(l + (l + 89 + seedD * l)) - 700;
                var sdedY = ySt - seeded2 * mapSz + 1400 * seeded(l * (l * 21) + 34 * l + 31 + (seedA + seedC) * (l + 1)) - 700;
                scenicList.push(new Scenery("yeolTree", sdedX, sdedY, Math.random() * (2* Math.PI), true));

                var randooo = seeded(seedB * 8 + seedA * 9 + seedD * 55 + seedE * 22 + seedC * 43 + (seedA + seedD) * l + (seedB + 567) * i);
                if (randooo > 0.69)
                {
                    var rando = seeded(seedB * 4 + seedA * 8 + seedD * 16 + seedE * 33 + seedC * 40 + (seedE + seedA) * i * l);

                    if (rando > 0.9)
                    {
                        var randoo = seeded(seedB * 3 + seedA * 14 + seedD * 12 + seedE * 13 + seedC * 45 + (seedC + seedB) * i * l);

                        if (randoo > 0.7)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(sdedX + spacer(85), sdedY + spacer(85), "Taipan", true, genID));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(sdedX + spacer(85), sdedY + spacer(85), "Taipan", false, genID));
                        }
                    }
                    else if (rando > 0.5)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(sdedX + spacer(140), sdedY + spacer(140), "Mugmul", true, genID));
                    }
                    else if (rando > 0.075)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(sdedX + spacer(140), sdedY + spacer(140), "Mugmul", false, genID));
                    }
                    else
                    {
                        var randoo = seeded(seedB * 8 + seedA * 1 + seedD * 15 + seedE * 18 + seedC * 7 + (seedB + seedC) * i * l);

                        if (randoo > 0.8)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(sdedX + spacer(85), sdedY + spacer(85), "Taipan", true, genID));
                            ArtificialIntelligenceAccess.push(new Unit(sdedX + spacer(85), sdedY + spacer(85), "Taipan", true, genID));
                        }
                        else if (randoo > 0.45)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(sdedX + spacer(85), sdedY + spacer(85), "Taipan", true, genID));
                            ArtificialIntelligenceAccess.push(new Unit(sdedX + spacer(85), sdedY + spacer(85), "Taipan", false, genID));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(sdedX + spacer(85), sdedY + spacer(85), "Taipan", false, genID));
                            ArtificialIntelligenceAccess.push(new Unit(sdedX + spacer(85), sdedY + spacer(85), "Taipan", false, genID));
                        }
                    }
                }
            }
        }

        for (var i = 0; i < Math.floor(seeded(seedA * 71 + seedB * 80) * 9); i++)
        {
            seeded2 = seeded(seedB + seedB * 38936 * i);
            seeded3 = seeded(seedA + seedA * 1682 * i);

            scenicList.push(new Scenery("yeolTree", xSt - seeded3 * mapSz + 3000 * seeded(i + (i + 17 + seedA * i)) - 1500, ySt - seeded2 * mapSz + 3000 * seeder(i * (i * 13) + 10 * i + 31 + (seedA + seedC) * (i + 1)) - 1500, Math.random() * (2* Math.PI), true));
        }

        for (var i = 0; i < Math.floor(seeded(seedC * 90 + seedC) * 7); i++) //hrackle plant
        {
            seeded1 = seeded(seedB + seedA * i * 98712);
            seeded5 = seeded(seedA * i + 92 + seedE * 11 * i);

            scenicList.push(new Scenery("hracklePlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2*Math.PI * Math.random(), true));
        }

        for (var i = 0; i < Math.floor(seeded(seedD * 90 + seedA) * 4); i++) //apotl plants
        {
            seeded1 = seeded(seedC + 20 + seedB * i * 112);
            seeded5 = seeded(32 + seedA * i + 12 + seedD * 11 * i);

            scenicList.push(new Scenery("apotlPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2*Math.PI * Math.random(), true));
        }

        for (var i = 0; i < Math.floor(seeded(seedB * 61 + seedE) * 8); i++) //aktaltl plants
        {
            seeded1 = seeded(seedC * i + 56 + seedE * i * 112);
            seeded5 = seeded(seedD * i + 12 + seedC * 11 * i);

            scenicList.push(new Scenery("aktaltlPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2*Math.PI * Math.random(), true));
        }

        for (var i = 0; i < Math.floor(seeded(seedC * 32 + seedD * 170) * 6); i++) //pochal plants
        {
            seeded1 = seeded(seedA * i + 88 + seedA * i * 187);
            seeded5 = seeded(seedD * i + 43 + seedB * 213 * i);

            scenicList.push(new Scenery("pochalPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2*Math.PI * Math.random(), true));
        }

        for (var i = 0; i < Math.floor(seeded(seedA * 32 + seedD) * 7); i++) //kwom plants
        {
            seeded1 = seeded(seedB * i + 20 + seedE * i * 187);
            seeded5 = seeded(seedA * i + 43 + seedC * 213 * i);

            scenicList.push(new Scenery("kwomPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2*Math.PI * Math.random(), true));
        }
        for (var i = 0; i < Math.floor(seeded(seedD * 93 + seedD) * 5); i++) //lel plants
        {
            seeded1 = seeded(seedB * i + 25);
            seeded5 = seeded(seedE * i + 14 + seedC * 200 * i);

            scenicList.push(new Scenery("lelPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2*Math.PI * Math.random(), true));
        }

        for (var i = 0; i < Math.floor(seeded(seedA * 2) * 3); i++) //taipan
        {
            seeded2 = seeded(seedD + seedE * i * 234322);
            seeded5 = seeded(seedC + seedD * (i + 9878656));
            seeded3 = seeded(seedA + seedC * (i + 70004956));
            seeded4 = seeded(seedE + seedB * (i + 123425));

            var rnd = seeded(seedA + 22144 * i);
            if (rnd > 0.4)
            {
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded5 * mapSz, "Taipan", false, genID));
            }
            else
            {
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz, ySt - seeded4 * mapSz, "Taipan", true, genID));
            }
        }

        for (var i = 0; i < Math.floor(seeded(seedB * 18 + 4) * 4); i++) //Rhino
        {
            seeded2 = seeded(seedD + seedD * i * 112322);
            seeded5 = seeded(seedA + seedE * (i + 5328656));
            seeded3 = seeded(seedD + seedC * (i + 8654956));
            seeded4 = seeded(seedE + seedA * (i + 9668));

            var rnd = seeded(seedC * i + seedE + 1144 * i);
            if (rnd > 0.7)
            {
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz, ySt - seeded4 * mapSz, "Rhinocerous", false, genID));
            }
            else if (rnd > 0.5)
            {
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz, ySt - seeded3 * mapSz, "Rhinocerous", true, genID));
            }
        }

        for (var i = 0; i < Math.floor(seededA * 3); i++)
        {
            seeded2 = seeded(seedB * i + 17 + seedD * 22312 * i);
            seeded3 = seeded(seedD * i + 3 + seedE * 54637 * i);

            for (var l = 0; l < Math.floor(seeded(seededB * 11) * 10); l++)
            {
                var sdedX = xSt - seeded2 * mapSz + (1400 * seeded(l * 12 + seedE * l + seedA * l) - 700);
                var sdedY = ySt - seeded3 * mapSz + (1400 * seeded(l * 15 + seedB * l + seedC * l) - 700);
                if (Math.random() > 0.56)
                {
                    scenicList.push(new Scenery("mofuNest", sdedX, sdedY, Math.random() * (2* Math.PI), Math.random() + 0.8));
                    ArtificialIntelligenceAccess.push(new Unit(sdedX, sdedY, "Mofu", Math.round(Math.random()), genID));
                }
                else
                {
                    if (Math.random() > 0.6)
                    {
                        scenicList.push(new Scenery("mofuNest", sdedX, sdedY, Math.random() * (2* Math.PI), Math.random() + 0.8));
                        ArtificialIntelligenceAccess.push(new Unit(sdedX + 350 * Math.random() - 175, sdedY + 350 * Math.random() - 175, "Mofu", Math.round(Math.random()), genID));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(sdedX + 500 * Math.random() - 250, sdedY + 400 * Math.random() - 200, "Mofu", "baby", genID));
                    }
                }
            }
        }

        for (var i = 0; i < Math.floor(seeded(seedD * 77 + 36) * 6 + 5); i++) //Yioshks
        {
            seeded2 = seeded(seedB + seedB * 1313 * i);
            seeded3 = seeded(seedA + seedA * 66714 * i);

            if (Math.round(seeded((seedB + seedA + seedC) * 54)))
            {
                for (var j = 0; j < Math.floor(seeded(seededC * 48 + 3 * i) * 3); j++)
                {
                    var rando = seeded(seedC * 98754673 * j + i * seedE + 29);
                    if (rando > 0.62)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(100), ySt - seeded3 * mapSz + spacer(100), "Yioshk", true, genID));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(100), ySt - seeded3 * mapSz + spacer(100), "Yioshk", false, genID));
                    }
                }
            }
            else
            {
                var rando = seeded(seedE * 1142467 * j + i * seedD + 19);
                if (rando > 0.72)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(100), ySt - seeded3 * mapSz + spacer(100), "Yioshk", true, genID));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(100), ySt - seeded3 * mapSz + spacer(100), "Yioshk", false, genID));
                }
            }
        }

        for (var i = 0; i < Math.floor(seeded(seedC * 320) * 4); i++) //zarbus
        {
            seeded2 = seeded(seedE + seedE * 33333 * i);
            seeded3 = seeded(seedB + seedC + seedA * 54546 * i);

            if (Math.round(seeded((seedB + seedA + seedC) * 551 + seedB * i)))
            {
                for (var j = 0; j < Math.floor(seeded(seededD * 67 + 91 * i) * 5); j++)
                {
                    var rando = seeded(seedC * 72674 * j + i * seedE + 80);
                    if (rando > 0.5)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(220), ySt - seeded3 * mapSz + spacer(220), "Zarbu", false, genID));
                    }
                    else if (rando > 0.23)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(220), ySt - seeded3 * mapSz + spacer(220), "Zarbu", "baby", genID));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(220), ySt - seeded3 * mapSz + spacer(220), "Zarbu", true, genID));
                    }
                }
            }
            else
            {
                var rando = seeded(seedC * 18726 * j + i * seedA + 191);
                if (rando > 0.8)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(60), ySt - seeded3 * mapSz + spacer(60), "Zarbu", true, genID));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(60), ySt - seeded3 * mapSz + spacer(60), "Zarbu", false, genID));
                }
            }
        }
    }
    //console.log(scenicList);

    if (dontIncludeUnits == true)
    {
        for (var trimm = ArtificialIntelligenceAccess.length - 1; trimm >= 0; trimm--)
        {
            if (ArtificialIntelligenceAccess[trimm].ID == genID && !ArtificialIntelligenceAccess[trimm].guarantee && ArtificialIntelligenceAccess[trimm].team != "player")
            {
                ArtificialIntelligenceAccess.splice(trimm, 1);
            }
        }
    }
}

function trimmer(x1, y1, x2, y2, safe)
{
    if (safe)
    {
        for (var trimm = ArtificialIntelligenceAccess.length - 1; trimm >= 0; trimm--)
        {
            if (ArtificialIntelligenceAccess[trimm].playerSeen == false && !ArtificialIntelligenceAccess[trimm].guarantee && ArtificialIntelligenceAccess[trimm].savified != true && ArtificialIntelligenceAccess[trimm].team != "player")
            {
                if (ArtificialIntelligenceAccess[trimm].X <= x1 && ArtificialIntelligenceAccess[trimm].X >= x2 && ArtificialIntelligenceAccess[trimm].Y <= y1 && ArtificialIntelligenceAccess[trimm].Y >= y2)
                {
                    ArtificialIntelligenceAccess.splice(trimm, 1);
                }
            }
        }

        for (var trimm = scenicList.length - 1; trimm >= 0; trimm--)
        {
            if (scenicList[trimm].savified != true)
            {
                if (scenicList[trimm].X <= x1 && scenicList[trimm].X >= x2 && scenicList[trimm].Y <= y1 && scenicList[trimm].Y >= y2)
                {
                    scenicList.splice(trimm, 1);
                }
            }
        }
    }
    else
    {
        for (var trimm = ArtificialIntelligenceAccess.length - 1; trimm >= 0; trimm--)
        {
            if (!ArtificialIntelligenceAccess[trimm].guarantee && ArtificialIntelligenceAccess[trimm].team != "player")
            {
                if (ArtificialIntelligenceAccess[trimm].X <= x1 && ArtificialIntelligenceAccess[trimm].X >= x2 && ArtificialIntelligenceAccess[trimm].Y <= y1 && ArtificialIntelligenceAccess[trimm].Y >= y2)
                {
                    ArtificialIntelligenceAccess.splice(trimm, 1);
                }
            }
        }

        for (var trimm = scenicList.length - 1; trimm >= 0; trimm--)
        {
            if (scenicList[trimm].X <= x1 && scenicList[trimm].X >= x2 && scenicList[trimm].Y <= y1 && scenicList[trimm].Y >= y2)
            {
                scenicList.splice(trimm, 1);
            }
        }
    }
}

function cropper(x1, y1, x2, y2, safe, salvo)
{
    if (safe)
    {
        for (var cropp = ArtificialIntelligenceAccess.length - 1; cropp >= 0; cropp--)
        {
            if (ArtificialIntelligenceAccess[cropp].playerSeen == false && !ArtificialIntelligenceAccess[cropp].guarantee && ArtificialIntelligenceAccess[cropp].savified != true && ArtificialIntelligenceAccess[cropp].team != "player")
            {
                if (ArtificialIntelligenceAccess[cropp].X > x1 || ArtificialIntelligenceAccess[cropp].X < x2 || ArtificialIntelligenceAccess[cropp].Y > y1 || ArtificialIntelligenceAccess[cropp].Y < y2)
                {
                    ArtificialIntelligenceAccess.splice(cropp, 1);
                }
                else if (salvo == true)
                {
                    ArtificialIntelligenceAccess[cropp].savified = true;
                }
            }
        }

        for (var cropp = scenicList.length - 1; cropp >= 0; cropp--)
        {
            if (scenicList[cropp].savified != true)
            {
                if (scenicList[cropp].X > x1 || scenicList[cropp].X < x2 || scenicList[cropp].Y > y1 || scenicList[cropp].Y < y2)
                {
                    scenicList.splice(cropp, 1);
                }
                else if (salvo == true)
                {
                    scenicList[cropp].savified = true;
                }
            }
        }
    }
    else
    {
        for (var cropp = ArtificialIntelligenceAccess.length - 1; cropp >= 0; cropp--)
        {
            if (!ArtificialIntelligenceAccess[cropp].guarantee && ArtificialIntelligenceAccess[cropp].team != "player")
            {
                if (ArtificialIntelligenceAccess[cropp].X > x1 || ArtificialIntelligenceAccess[cropp].X < x2 || ArtificialIntelligenceAccess[cropp].Y > y1 || ArtificialIntelligenceAccess[cropp].Y < y2)
                {
                    ArtificialIntelligenceAccess.splice(cropp, 1);
                }
                else if (salvo == true)
                {
                    ArtificialIntelligenceAccess[cropp].savified = true;
                }
            }
        }

        for (var cropp = scenicList.length - 1; cropp >= 0; cropp--)
        {
            if (scenicList[cropp].X > x1 || scenicList[cropp].X < x2 || scenicList[cropp].Y > y1 || scenicList[cropp].Y < y2)
            {
                scenicList.splice(cropp, 1);
            }
            else if (salvo == true)
            {
                scenicList[cropp].savified = true;
            }
        }
    }
}

function seeder(seedNum)
{
    seed = seedNum;
    //console.log(seededRandom());
    return seededRandom();
}

function seeded(seedNum)
{
    //console.log(seededRandom());

    /* Simple hash function. */
    var a = 1, c = 0, h, o;
    var s = "" + seedNum;
    a = 0;
    /*jshint plusplus:false bitwise:false*/
    for (h = s.length - 1; h >= 0; h--) {
        o = s.charCodeAt(h);
        a = (a<<6&268435455) + o + (o<<14);
        c = a & 266338304;
        a = c!==0?a^c>>21:a;
    }
    return (a % 10000000) / 10000000;
}

function seededRandom()
{
    var max = 1;
    var min = 0;

    seed = (seed * 9301 + 49297) % 233280;
    var rnd = seed / 233280;

    return min + rnd * (max - min);
}