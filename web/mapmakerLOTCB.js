/**
 * Created by skyelipson on 5/6/18.
 */
function buildMaster()
{
    if (map == "world") //If the map is the main world map.
    {
        if (region == "central") //Y < 6870
        {
            if (change != "central")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units
                //The master thief of teshir
                if (quests.theMasterThiefOfTeshirNeevSlain != true)
                {
                    ArtificialIntelligenceAccess.push(new Unit(2100, 1050, "Neev", false, "Easter"));
                }

                //ArtificialIntelligenceAccess.push(new Unit(3000, 1500, "Griffin", "massive", "Criaad The Voracious"));
                //ArtificialIntelligenceAccess.push(new Unit(3000, 1400, "Peacock", true, "Deriere"));
                //ArtificialIntelligenceAccess.push(new Unit(3000, 1500, "Horse", true, "player"));
                //ArtificialIntelligenceAccess.push(new Unit(3050, 1650, "Boar", true, "Deedee"));
                //scenicList.push(new Scenery("thegolthornPlant", 3000, 1500, 0.1, true));
                //ArtificialIntelligenceAccess.push(new Unit(3000, 1500, "ThegolThorn", true, "pugil"));
                //ArtificialIntelligenceAccess.push(new Unit(3000, 1500, "Bat", false, "ifi"));
                //ArtificialIntelligenceAccess.push(new Unit(3000, 1500, "Cheshire", true, "Faxic"));
                //ArtificialIntelligenceAccess.push(new Unit(3000, 1500, "Person", false, "Dave the Wolf", {race: "Freynor", faction: "arena2", personality: "violent", outfit: ["northernClothing", 0], weapon: ["none", [0.1, 0.4], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: false, route:[[0, 0]], lycan: true}));
                //ArtificialIntelligenceAccess.push(new Unit(3000, 1500, "Person", false, "Loria the Bloodsucker", {race: "Vardan", faction: "arena2", personality: "violent", outfit: ["none", 0], weapon: ["none", [0.1, 0.4], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: false, route:[[0, 0]], vamp: true}));
                //ArtificialIntelligenceAccess.push(new Unit(3000, 1500, "Bovine", true, "Wifi Cow"));
                //ArtificialIntelligenceAccess.push(new Unit(3000, 1500, "Sheep", false, "Double-0-Fuzzball"));
                //ArtificialIntelligenceAccess.push(new Unit(3000, 1500, "Toad", true, "Hurgar"));
                //ArtificialIntelligenceAccess.push(new Unit(5550, 2500, "Koivaya", true, "Hamber"));
                //ArtificialIntelligenceAccess.push(new Unit(5550, 2500, "Koivaya", false, "Hem"));
                //ArtificialIntelligenceAccess.push(new Unit(3000, 2500, "ZafBeetle", true, "Tzalit"));
                //scenicList.push(new Scenery("viudaTunnel", 3500, 2500, 0, true, false));
                //scenicList.push(new Scenery("vinePatch", 3500, 2500, 0, 1));
                //scenicList.push(new Scenery("cerebrisPlant", 3500, 2500, 0, 1));
                //scenicList.push(new Scenery("gojiiPlant", 3500, 2500, 0, true));
                //scenicList.push(new Scenery("bahabPlant", 3500, 2500, 0, true));
                //scenicList.push(new Scenery("araneaDen", 3500, 2500, 0, false, true));
                //ArtificialIntelligenceAccess.push(new Unit(3500, 2500, "Borea", true, "Ipskwich"));
                //ArtificialIntelligenceAccess.push(new Unit(3500, 2500, "Salisea", false, "Digit"));
                //ArtificialIntelligenceAccess.push(new Unit(3000, 2500, "Gorgon", false, "Gra"));
                //ArtificialIntelligenceAccess.push(new Unit(3000, 2500, "Cruorcca", "massive", "Cruor"));
                //ArtificialIntelligenceAccess.push(new Unit(3908, 2500, "Dalger", true, "Apom"));
                //ArtificialIntelligenceAccess.push(new Unit(3908, 2500, "Kigarii", true, "Apex"));
                //ArtificialIntelligenceAccess.push(new Unit(3600, 2500, "Crenid", "massive", "Bulgg"));
                //scenicList.push(new Scenery("athergmPlant", 3990, 2500, 0, 1));
                //scenicList.push(new Scenery("decipulaBasePlant", 3670, 2500, 0, "massive"));
                //ArtificialIntelligenceAccess.push(new Unit(3500, 2500, "Zancudo", false, "proboscis"));
                //ArtificialIntelligenceAccess.push(new Unit(3550, 2500, "Venandi", true, "hunter"));
                //ArtificialIntelligenceAccess.push(new Unit(3570, 2500, "EtyrVenandi", true, "scout"));
                //ArtificialIntelligenceAccess.push(new Unit(3570, 2500, "AraneaVenandi", true, "tank"));
                //scenicList.push(new Scenery("valumPlant", 3990, 2500, 0, 1));
                //scenicList.push(new Scenery("decipulaPlant", 3670, 2500, 0, true));
                //scenicList.push(new Scenery("porstolPlant", 3750, 2500, 0, true));
                //scenicList.push(new Scenery("ashaiCampFire", 3750, 2500, 0, true));
                //scenicList.push(new Scenery("ashaiTree", 3750, 2500, 0, 1));
                //scenicList.push(new Scenery("iodPlant", 3750, 2500, 0, true));
                //scenicList.push(new Scenery("poegroonPlant", 3800, 2500, 0, true));
                //scenicList.push(new Scenery("gribnoyPlant", 3700, 2500, 0, true));
                //scenicList.push(new Scenery("maleotPlant", 3600, 2500, 0, true));
                //ArtificialIntelligenceAccess.push(new Unit(3700, 2500, "Boa", false, "constricto"));
                //ArtificialIntelligenceAccess.push(new Unit(3600, 2500, "PoisonDartFrog", true, "coqui"));
                //scenicList.push(new Scenery("sonjaTree", 3600, 2500, 0, true));
                //scenicList.push(new Scenery("matnaWeb", 3600, 2500, 0, 2.1));
                //ArtificialIntelligenceAccess.push(new Unit(3600, 2500, "Matna", false, "deathByter"));
                //ArtificialIntelligenceAccess.push(new Unit(3600, 2500, "Babosa", true, "Glubber", {patrolStops: 3, patrolLoop: true, route:[[3600, 2500], [3500, 2550], [3650, 2600]]}));
                //scenicList.push(new Scenery("pyromothWeb", 3700, 2500, 0, 1, true));
                //ArtificialIntelligenceAccess.push(new Unit(3700, 2500, "Pyromoth", true, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[3600, 2500], [3500, 2550], [3650, 2600]]}));
                //scenicList.push(new Scenery("crilkPlant", 3600, 2500, 3.2, true));
                //ArtificialIntelligenceAccess.push(new Unit(3600, 2500, "Person", false, "Mr. Dumpty", {race: "Humpty", faction: "Cephrite", personality: "violent", outfit: ["none", 8], weapon: ["none", [3, 2], 3, 22, 2], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: false, route:[[0, 0], [0, 0]], kid: true, kidSize: 2}));
                //ArtificialIntelligenceAccess.push(new Unit(3400, 2500, "Soldier", false, "Mrs. Dumpty", {race: "Humpty", faction: "Cephrite", con: 5, speed: 0.85, outfit: ["none", 9], weapon: ["none", [3, 3], 3.5, 25, 2], ranged: [false, "arrow", 8, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: false, route:[[0, 0], [0, 0]], kid: true, kidSize: 2.1}));
                //ArtificialIntelligenceAccess.push(new Unit(3500, 2500, "BlackTroll", false, "Brufga"));
                //scenicList.push(new Scenery("overVines", 3600, 2500, 0, 4, 1));
                //scenicList.push(new Scenery("webVictim", 3600, 2500, 0, 3, 1));
                //scenicList.push(new Scenery("jungleStuff", 3600, 2500, 0.23, 2, 1));
                //scenicList.push(new Scenery("selvaTree", 3600, 2500, 0, 0));
                //scenicList.push(new Scenery("kozlyakPlant", 3600, 2500, 3.2, true));
                //ArtificialIntelligenceAccess.push(new Unit(4000, 2500, "MudToad", true, "Slub"));
                //ArtificialIntelligenceAccess.push(new Unit(4000, 2500, "Ghoul", true, "Slub"));
                //ArtificialIntelligenceAccess.push(new Unit(4000, 2900, "Ghoul", false, "Sluba"));
                //ArtificialIntelligenceAccess[ArtificialIntelligenceAccess.length - 1].eggs = "fecundo";
                //scenicList.push(new Scenery("eyewortPlant", 3400, 2400, 2.2, true));
                //scenicList.push(new Scenery("sciltPlant", 3400, 2400, 1.6, true, 1));
                //scenicList.push(new Scenery("korceidaPlant", 3400, 2400, 2, true));
                //scenicList.push(new Scenery("lauminPlant", 3600, 2400, 2, true));
                //ArtificialIntelligenceAccess.push(new Unit(3900, 2900, "Xormid", false, "Sluba"));
                //ArtificialIntelligenceAccess.push(new Unit(3900, 2900, "Silter", false, "Screpa"));
                //ArtificialIntelligenceAccess.push(new Unit(3900, 2900, "KorskBeetle", true, "Scraupp"));
                //scenicList.push(new Scenery("nechrovite", 2000 , 1000, 7, 1, 1));
                //scenicList.push(new Scenery("meklePlant", 3400, 2400, 2.2, true));
                //scenicList.push(new Scenery("laicaumPlant", 3200, 2400, 1.2, true));
                //scenicList.push(new Scenery("danzigPlant", 3000, 2400, 3, true));
                //ArtificialIntelligenceAccess.push(new Unit(3400, 2400, "Vreck", true, "Skeever", {patrolStops: 5, patrolLoop: true, route:[[4000, 2000], [3400, 2400], [3100, 2600], [3500, 3000], [4500, 2500]]}));
                //scenicList.push(new Scenery("vardanianBasin", 3600, 2400, 2, true));
                //scenicList.push(new Scenery("swampWalk", 3600, 2400, 2, true));
                //scenicList.push(new Scenery("swampWalkShort", 3530, 2291, 2 + 1/2 * Math.PI, true));
                //scenicList.push(new Scenery("swampStilt", 3599, 2255, 0, true));
                //scenicList.push(new Scenery("swampPlank", 3585, 2306, 0.2, true));
                //scenicList.push(new Scenery("swampBridge", 3500, 2442, 0, false));
                //scenicList.push(new Scenery("swampPlatform", 3346, 2506, 0.13, true));
                //scenicList.push(new Scenery("vardanianPyre", 3304, 2529, 2.2, false, 0.8));
                //scenicList.push(new Scenery("pikeWall", 3280, 2435, 0.23, true));
                //scenicList.push(new Scenery("mimicry", 3369, 2651, 1.2, "TentMimic"));
                //ArtificialIntelligenceAccess.push(new Unit(4000, 2300, "Hydra", false, "Hercules"));
                //ArtificialIntelligenceAccess.push(new Unit(3900, 2900, "Mimic", false, "Mimmi"));
                //scenicList.push(new Scenery("door", 3346, 2506, -1/2 * Math.PI, 3, [true, "abc"]));
                //scenicList.push(new Scenery("appleTree", 3002.861389777469, 2550.1841011505403, 6, true));
                //scenicList.push(new Scenery("ogoTree", 4202.861389777469, 2700.2841011505403, 6, true));
                //scenicList.push(new Scenery("greatPineTree", 3791.380634648301, 2587.5857670519786, 3.0663822932121048, 8.646700282896546, "snowy"));
                //scenicList.push(new Scenery("vardanBuilding1", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding2", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding3", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding4", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding5", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding6", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding7", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding8", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding9", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding10", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding11", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding12", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding13", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding14", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding15", 5500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding16", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding17", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding18", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding19", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding20", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding21", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding22", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding23", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding24", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding25", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding26", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding27", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding28", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding29", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding30", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding31", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding32", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding33", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding34", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding35", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding36", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding37", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding38", 4500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanBuilding39", 4500, 2400, -1/2 * Math.PI, 1));
                //scenicList.push(new Scenery("vardanBuilding40", 4500, 2400, Math.PI, 1.5));
                //ArtificialIntelligenceAccess.push(new Unit(4000, 2500, "Cirmusid", false, "Sluch"));
                //ArtificialIntelligenceAccess.push(new Unit(4000, 2500, "Borgal", false, "Sluch"));
                //ArtificialIntelligenceAccess.push(new Unit(4000, 2500, "Mornid", false, "Slewuch"));
                //scenicList.push(new Scenery("ribbackWeb", 4500, 2400, 0, 1));
                //scenicList.push(new Scenery("ribbackNest", 4500, 2400, 0, 1));
                //ArtificialIntelligenceAccess.push(new Unit(4100, 3200, "Ribback", false, "humpi"));
                //ArtificialIntelligenceAccess.push(new Unit(4000, 2500, "Ribback", false, "humphump"));
                //ArtificialIntelligenceAccess.push(new Unit(5000, 2400, "Ribback", true, "humpa"));
                //ArtificialIntelligenceAccess.push(new Unit(3900, 2900, "Fegil", false, "hik"));
                //ArtificialIntelligenceAccess.push(new Unit(3700, 2800, "Fegil", true, "hik"));
                //ArtificialIntelligenceAccess.push(new Unit(3700, 2800, "Palinsyda", true, "Monm"));
                //scenicList.push(new Scenery("vardanianWell", 3500, 2400, 0, true));
                //scenicList.push(new Scenery("vardanianMueble", 3500, 2400, 0, 22, 1)); //flag stand royal
                //scenicList.push(new Scenery("vardanianMueble", 3500, 2400, 0, 23, 1)); //flag stand rebel
                //scenicList.push(new Scenery("vardanCastle1", 5800, 2700, 0, 2.4));
                //scenicList.push(new Scenery("vardanBed", 5800, 2700, 0, [true, 0.8], 3));
                //scenicList.push(new Scenery("vardanianHearth", 3500, 2400, 2/3 * Math.PI, true));
                //sscenicList.push(new Scenery("thenganBuilding6", 4500, 2400, 0, 2));
                //ArtificialIntelligenceAccess.push(new Unit(4100, 2300, "GreyHorse", false, "player"));
                //ArtificialIntelligenceAccess.push(new Unit(4100, 2300, "BlackBeruln", true, "Hutu"));
                //ArtificialIntelligenceAccess.push(new Unit(4100, 2500, "Skeleton", false, "Boneboy"));
                //ArtificialIntelligenceAccess.push(new Unit(4100, 2500, "Lich", true, "Boneman"));
                //ArtificialIntelligenceAccess.push(new Unit(4100, 2500, "CorpseGolem", false, "Boneburg"));
                //scenicList.push(new Scenery("trainingDummy", 4000, 2400, 0, 1.5));
                //scenicList.push(new Scenery("rangedTarget", 3900, 2400, 0, 1.5));
                //ArtificialIntelligenceAccess.push(new Unit(4100, 2500, "Fox", false, "Berney"));
                //ArtificialIntelligenceAccess.push(new Unit(4300, 2500, "ArcticFox", true, "Berney"));
                //scenicList.push(new Scenery("thenganBuilding7", 3900, 2400, 1/2 * Math.PI, 1.4));
                //scenicList.push(new Scenery("thenganBuilding8", 3900, 2400, 1/2 * Math.PI, 1));
                //scenicList.push(new Scenery("bloatGas", 4900, 2400, 0, true, 2));
                //scenicList.push(new Scenery("bloatGas", 4500, 2400, 0, false));
                //scenicList.push(new Scenery("thenganBuilding9", 3900, 2400, 0, 1));
                //scenicList.push(new Scenery("thenganBridges", 3900, 2400, 1/2 * Math.PI, 1, 0));
                //scenicList.push(new Scenery("deadDeer", 3200, 2200, 0.25, true, false));
                //ArtificialIntelligenceAccess.push(new Unit(4100, 2500, "Deer", true, "Iclom"));
                //ArtificialIntelligenceAccess.push(new Unit(3900, 2600, "Badger", false, "Malta"));
                //scenicList.push(new Scenery("jollePlant", 3400, 2400, 0.2, true));
                //ArtificialIntelligenceAccess.push(new Unit(4200, 2500, "GrizzlyBear", "kag", "Kag the scarred devourer"));
                //ArtificialIntelligenceAccess.push(new Unit(4200, 2500, "GrizzlyBear", true, "Kaaguf"));
                //ArtificialIntelligenceAccess.push(new Unit(4200, 2500, "StovolBeetle", false, "escarabajo"));
                //ArtificialIntelligenceAccess.push(new Unit(4200, 2500, "Skindler", false, "bloathead"));
                //ArtificialIntelligenceAccess.push(new Unit(4300, 2450, "Skindler", true, "grendle"));
                //scenicList.push(new Scenery("thenganorCastles", 4500, 2600, 1/2 * Math.PI, 2.6, 3));
                //ArtificialIntelligenceAccess.push(new Unit(4100, 2500, "Sowt", false, "Sosluk"));
                //ArtificialIntelligenceAccess.push(new Unit(4500, 2500, "Wendigo", false, "wendy"));
                //ArtificialIntelligenceAccess.push(new Unit(4500, 2500, "Crow", true, "Seven"));
                //ArtificialIntelligenceAccess.push(new Unit(4520, 2550, "Crow", "shadow", "Eight"));
                //scenicList.push(new Scenery("sewer", 3400, 2400, 0, [0, 0], "world"));
                //scenicList.push(new Scenery("metalLadder", 0, 0, 0, [3400, 2400], "world"));
                //scenicList.push(new Scenery("thenganorCastleParts", 4500, 2600, 1/2 * Math.PI, 1, 4));
                //ArtificialIntelligenceAccess.push(new Unit(4400, 2500, "Elk", "baby", "Nihgi"));

                //scenicList.push(new Scenery("wendigoCircle", 3900, 2400, 0.38, true));

                //scenicList.push(new Scenery("mrbAssets", 4900, 2100, 1/2 * Math.PI, 5, 2)); //wall sml
                //scenicList.push(new Scenery("mrbAssets", 4900, 2100, 1/2 * Math.PI, 6, 2)); //window sml
                //scenicList.push(new Scenery("mrbAssets", 4900, 2100, 1/2 * Math.PI, 7, 2)); //wall lrg
                //scenicList.push(new Scenery("mrbAssets", 4900, 2100, 1/2 * Math.PI, 8, 2)); //window lrg
                //scenicList.push(new Scenery("mrbAssets", 4900, 2100, 1/2 * Math.PI, 9, 2)); //door

                //scenicList.push(new Scenery("dethMasterHut", 3600, 2500, 0, 0, "deth1"));
                //scenicList.push(new Scenery("dethTotem", 3600, 3400, 0, 0, "deth1"));
                //scenicList.push(new Scenery("dethArmory", 4000, 3000, 0, true, "deth1"));
                //scenicList.push(new Scenery("dethOutfitter", 3700, 3000, 0, 1, "deth1"));
                //scenicList.push(new Scenery("dethElkPile", 4200, 2600, 0, true, "deth1"));
                //ArtificialIntelligenceAccess.push(new Unit(3450, 2010, "Deth", false, "deth1", {age: 3, CON: 18, DEX: 17, APR: 19, PER: 14, ING: 8}));
                //ArtificialIntelligenceAccess.push(new Unit(3500, 2020, "Deth", false, "deth1", {age: 3, CON: 19, DEX: 15, APR: 15, PER: 18, ING: 15}));
                //ArtificialIntelligenceAccess.push(new Unit(3475, 2030, "Deth", false, "deth1", {age: 3, CON: 16, DEX: 19, APR: 20, PER: 12, ING: 4}));
                //ArtificialIntelligenceAccess.push(new Unit(3400, 2000, "Deth", false, "deth1", {age: 4, CON: 14, DEX: 18, APR: 12, PER: 15, ING: 16}));

                //Friches in the plains
                ArtificialIntelligenceAccess.push(new Unit(2921, -1125, "Frich", false, "Fuzzy Wuzzy"));
                ArtificialIntelligenceAccess.push(new Unit(2683, -1204, "Frich", false, "Ruby Soho"));
                ArtificialIntelligenceAccess.push(new Unit(2786, -1398, "Frich", true, "Brufe"));
                ArtificialIntelligenceAccess.push(new Unit(1739, -863, "Frich", true, "Nosey"));
                ArtificialIntelligenceAccess.push(new Unit(1513, -803, "Frich", true, "Friskers"));
                ArtificialIntelligenceAccess.push(new Unit(5000, 226, "Frich", false, "Tiddle"));
                ArtificialIntelligenceAccess.push(new Unit(4976, 316, "Frich", false, "Toodle"));
                ArtificialIntelligenceAccess.push(new Unit(4908, 230, "Frich", false, "Takkle"));
                ArtificialIntelligenceAccess.push(new Unit(4874, 37, "Frich", false, "Tooble"));
                ArtificialIntelligenceAccess.push(new Unit(4791, 82, "Frich", false, "Tuddle"));
                ArtificialIntelligenceAccess.push(new Unit(-1110, 10, "Frich", false, "Tuk"));
                ArtificialIntelligenceAccess.push(new Unit(-1166, 85, "Frich", false, "Tud"));
                ArtificialIntelligenceAccess.push(new Unit(-1152, -22, "Frich", false, "Tux"));
                ArtificialIntelligenceAccess.push(new Unit(-1558, -1017, "Frich", false, "boo"));
                ArtificialIntelligenceAccess.push(new Unit(-1536, -1108, "Frich", true, "baa"));
                ArtificialIntelligenceAccess.push(new Unit(-1687, -1365, "Frich", true, "bei"));
                ArtificialIntelligenceAccess.push(new Unit(-1555, -1412, "Frich", false, "ban"));
                ArtificialIntelligenceAccess.push(new Unit(-1358, 128, "Frich", false, "buk"));
                ArtificialIntelligenceAccess.push(new Unit(4458, 3109, "Frich", false, "uk"));
                ArtificialIntelligenceAccess.push(new Unit(4544, 3162, "Frich", false, "us"));
                ArtificialIntelligenceAccess.push(new Unit(4422, 3236, "Frich", true, "au"));
                ArtificialIntelligenceAccess.push(new Unit(6181, 3940, "Frich", false, "Zuke"));
                ArtificialIntelligenceAccess.push(new Unit(6071, 3847, "Frich", false, "Cuke"));
                ArtificialIntelligenceAccess.push(new Unit(6030, 4102, "Frich", false, "kook"));
                ArtificialIntelligenceAccess.push(new Unit(6142, 4141, "Frich", false, "Zook"));
                ArtificialIntelligenceAccess.push(new Unit(5333, 1329, "Frich", true, "Luke"));
                ArtificialIntelligenceAccess.push(new Unit(5212, 1254, "Frich", false, "shook"));
                ArtificialIntelligenceAccess.push(new Unit(3428, 4445, "Frich", false, "Tuco"));
                ArtificialIntelligenceAccess.push(new Unit(3215, 4393, "Frich", true, "Zuko"));
                ArtificialIntelligenceAccess.push(new Unit(3045, 4011, "Frich", false, "Jango"));
                ArtificialIntelligenceAccess.push(new Unit(3226, 4819, "Frich", false, "Franco"));
                ArtificialIntelligenceAccess.push(new Unit(3397, 4777, "Frich", true, "Bilbo"));
                ArtificialIntelligenceAccess.push(new Unit(3467, 4626, "Frich", true, "Frodo"));
                ArtificialIntelligenceAccess.push(new Unit(-339, 4588, "Frich", false, "Bambi"));
                ArtificialIntelligenceAccess.push(new Unit(-377, 4684, "Frich", true, "Hunter"));
                ArtificialIntelligenceAccess.push(new Unit(-622, 4606, "Frich", false, "MamaDeer"));
                ArtificialIntelligenceAccess.push(new Unit(-692, 4814, "Frich", false, "PapaBuck"));
                ArtificialIntelligenceAccess.push(new Unit(-2132, 5878, "Frich", true, "Rathair"));
                ArtificialIntelligenceAccess.push(new Unit(-730, 3592, "Frich", false, "Richard"));
                ArtificialIntelligenceAccess.push(new Unit(-923, 3404, "Frich", false, "John"));
                ArtificialIntelligenceAccess.push(new Unit(-955, 3520, "Frich", true, "Izzy"));
                ArtificialIntelligenceAccess.push(new Unit(-910, 3645, "Frich", false, "Charles"));
                ArtificialIntelligenceAccess.push(new Unit(-596, 3860, "Frich", false, "Edward"));
                ArtificialIntelligenceAccess.push(new Unit(-30, -833, "Frich", true, "Chak"));
                ArtificialIntelligenceAccess.push(new Unit(-221, -891, "Frich", false, "Eduk"));
                ArtificialIntelligenceAccess.push(new Unit(-121, -1062, "Frich", false, "Toog"));
                ArtificialIntelligenceAccess.push(new Unit(-389, 2569, "Frich", false, "Gud"));
                ArtificialIntelligenceAccess.push(new Unit(-1673, -2423, "Frich", true, "mayonzuko"));
                //Alpha only frich pack guarding the lone farm house
                ArtificialIntelligenceAccess.push(new Unit(-885, -1994, "Frich", true, "Chucky"));
                ArtificialIntelligenceAccess.push(new Unit(-836, -2136, "Frich", true, "Chucky2"));
                ArtificialIntelligenceAccess.push(new Unit(-1048, -1858, "Frich", true, "Chucky3"));
                ArtificialIntelligenceAccess.push(new Unit(-1156, -1766, "Frich", true, "Chucky4"));
                ArtificialIntelligenceAccess.push(new Unit(-1277, -1974, "Frich", true, "Chucky5"));
                ArtificialIntelligenceAccess.push(new Unit(-1080, -2190, "Frich", true, "Chucky6"));

                if (quests.huntingWagerFrichPack == true && quests.huntingWagerKillCount < 3)
                {
                    if (quests.huntingWagerKillCount == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(3665, -624, "Frich", "massive", "Pucker"));
                        ArtificialIntelligenceAccess.push(new Unit(3927, -494, "Frich", "massive", "Tucker"));
                        ArtificialIntelligenceAccess.push(new Unit(3792, -802, "Frich", "massive", "Hunky-Dory"));
                    }
                    else if (quests.huntingWagerKillCount == 1)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(3665, -624, "Frich", "massive", "Pucker"));
                        ArtificialIntelligenceAccess.push(new Unit(3927, -494, "Frich", "massive", "Tucker"));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(3792, -802, "Frich", "massive", "Hunky-Dory"));
                    }
                }

                if (duendeSwarm == true)
                {
                    for (var i =0; i < 12;i++)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(3050, 1650, "Duende", "true", "Krico"));
                    }
                    for (var i =0; i < 12;i++)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(892, 1308, "Duende", "true", "Krica"));
                    }
                }


                //Citizens of Teshir

                //Projectile(TYPE ultra.ranged[1],startX, startY, startAngle, SPEED ultra.ranged[2], RANGE ultra.ranged[3], NEGATION ultra.ranged[4], list, DAMAGE ultra.ranged[5], MAGIC DAMAGE ultra.ranged[6], ABILITY ultra.ranged[7])

                ArtificialIntelligenceAccess.push(new Unit(1661, 2311, "Soldier", false, "Tor Captain", {race: "Freynor", faction: "Freynor", con: 9, speed: 1.15, outfit: ["chainArmour", 10], weapon: ["freydicGreatSword", [25, 14], 0, 35, 2.25], ranged: [false, "arrow", 7, 1800, 1, 6, 0, "stunI", 2.4], patrolStops: 4, patrolLoop: true, route:[[1654, 1507], [1661, 2311], [1864, 2315], [1852, 1499]]}));
                ArtificialIntelligenceAccess.push(new Unit(2254, 311, "Soldier", false, "Tor Soldier", {race: "Freynor", faction: "Freynor", con: 5, speed: 1.50, outfit: ["chainArmour", 7], weapon: ["freydicSword", [9, 7], 0, 16, 1], ranged: [false, "arrow", 5, 1500, 1, 3, 0, "none", 1.50], patrolStops: 3, patrolLoop: true, route:[[3071, 314], [3014, 394], [2218, 346]]}));
                ArtificialIntelligenceAccess.push(new Unit(2741, 1421, "Soldier", false, "Tor Soldier", {race: "Freynor", faction: "Freynor", con: 4, speed: 1.25, outfit: ["chainArmour", 9], weapon: ["freydicSword", [8, 6], 0, 16, 1], ranged: [false, "arrow", 7, 2000, 1, 6, 0, "none", 1.25], patrolStops: 4, patrolLoop: true, route:[[1833, 1424], [1848, 2413], [3046, 2407], [2741, 1421]]}));
                ArtificialIntelligenceAccess.push(new Unit(1430, 2238, "Soldier", false, "Tor Soldier", {race: "Freynor", faction: "Freynor", con: 8, speed: 1.1, outfit: ["chainArmour", 9], weapon: ["freydicSword", [7, 9], 0, 16, 1], ranged: [false, "arrow", 8, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: false, route:[]}));
                ArtificialIntelligenceAccess.push(new Unit(1247, 1210, "Soldier", false, "Tor Soldier", {race: "Freynor", faction: "Freynor", con: 6, speed: 1.40, outfit: ["chainArmour", 8], weapon: ["freydicSword", [8, 9], 0, 16, 1], ranged: [false, "arrow", 6, 1950, 1, 4, 0, "none", 1.35], patrolStops: 6, patrolLoop: true, route:[[901, 1195], [969, 527], [1932, 549], [1941, 814], [1932, 549], [969, 527]]}));

                ArtificialIntelligenceAccess.push(new Unit(2360, 2341, "Person", false, "Freynor Villager", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["frichFurClothing", 0], weapon: ["none", [0.1, 0.4], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 10, patrolLoop: true, route:[[2284, 2430], [1677, 2425], [1712, 1410], [1405, 1459], [1405, 1637], [1237, 1637], [1405, 1637], [1405, 1459], [1699, 1434], [1692, 2500]]}));
                ArtificialIntelligenceAccess.push(new Unit(2249, 754, "Person", false, "Freynor Villager", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["frichFurClothing", 0], weapon: ["none", [0.1, 0.4], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 9, patrolLoop: true, route:[[2144, 751], [2154, 504], [2942, 536], [2884, 2455], [1655, 2430], [1663, 1165], [2152, 1141], [2181, 795], [2249, 754]]}));
                ArtificialIntelligenceAccess.push(new Unit(1807, 645, "Person", false, "Freynor Villager", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["frichFurClothing", 0], weapon: ["none", [0.1, 0.4], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 7, patrolLoop: true, route:[[1793, 314], [761, 337], [749, 1431], [1663, 1439], [2138, 1272], [2165, 697], [1807, 645]]}));

                //barFolk
                ArtificialIntelligenceAccess.push(new Unit(2346, 2005, "Person", false, "Freynor Villager", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["frichFurClothing", 0], weapon: ["none", [0.1, 0.4], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[2348, 1978]]}));
                ArtificialIntelligenceAccess.push(new Unit(2259, 1710, "Person", false, "Freynor Villager", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["frichFurClothing", 0], weapon: ["none", [0.1, 0.4], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[2289, 1710]]}));
                //innGuest (Random)
                var rnnd = Math.random();
                var travelerFood = 0;
                if (rnnd <= 0.4) //freydic traveler
                {
                    if (Math.round(Math.random()))
                    {
                        if (Math.random() > 0.3)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(2241, 2030, "Person", false, "Traveler", {race: "Freynor", faction: "arena2", personality: "violent", outfit: ["northernClothing", 0], weapon: ["none", [0.1, 0.4], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[2242, 2062]]}));
                            travelerFood = 1; //to the right of kedwin
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(2138, 2078, "Person", false, "Traveler", {race: "Freynor", faction: "arena2", personality: "violent", outfit: ["northernClothing", 0], weapon: ["none", [0.1, 0.4], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[2102, 2077]]}));
                            travelerFood = 2; //in upper room
                        }
                    }
                    else
                    {
                        if (Math.random() > 0.3)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(2241, 2030, "Person", false, "Traveler", {race: "Freynor", faction: "arena2", personality: "violent", outfit: ["sealSkinClothing", 0], weapon: ["none", [0.1, 0.4], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[2242, 2062]]}));
                            travelerFood = 1; //to the right of kedwin
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(2138, 2078, "Person", false, "Traveler", {race: "Freynor", faction: "arena2", personality: "violent", outfit: ["sealSkinClothing", 0], weapon: ["none", [0.1, 0.4], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[2102, 2077]]}));
                            travelerFood = 2; //in upper room
                        }
                    }
                }
                else if (rnnd <= 0.5) //kellish traveler
                {
                    if (Math.random() > 0.3)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(2241, 2030, "Person", false, "Traveler", {race: "Kel", faction: "Kel", personality: "violent", outfit: ["naapridLeatherArmour", 3.5], weapon: ["none", [0.28, 0.5], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[2242, 2062]]}));
                        travelerFood = 3; //to the right of kedwin
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(2138, 2078, "Person", false, "Traveler", {race: "Kel", faction: "Kel", personality: "violent", outfit: ["naapridLeatherArmour", 3.5], weapon: ["none", [0.28, 0.5], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[2102, 2077]]}));
                        travelerFood = 4; //in upper room
                    }
                }
                else if (rnnd <= 0.7)
                {
                    if (Math.random() > 0.3)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(2291, 1939, "Person", false, "Traveler", {race: "Thengar", faction: "Thengar", personality: "violent", outfit: ["none", 0], weapon: ["none", [0.3, 0.65], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[2317, 1938]]}));
                        travelerFood = 5; //middle chair in middle of room
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(2051, 1787, "Person", false, "Traveler", {race: "Thengar", faction: "Thengar", personality: "violent", outfit: ["none", 0], weapon: ["none", [0.3, 0.65], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[2050, 1755]]}));
                        travelerFood = 6; //in lower room top chair
                    }
                }
                else if (rnnd <= 0.9)
                {
                    if (Math.random() > 0.25)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(2130, 1707, "Person", false, "Traveler", {race: "Orgell", faction: "Orgell", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.3, 0.35], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[2087, 1706]]}));
                        travelerFood = 7; //lower room left chair
                    }
                }
                else
                {
                    if (Math.random() > 0.3)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(2291, 1939, "Person", false, "Traveler", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.3, 0.4], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[2317, 1938]]}));
                        travelerFood = 8; //middle chair in middle of room
                    }
                    else
                    {
                        travelerFood = 9; //in lower room left chair
                        ArtificialIntelligenceAccess.push(new Unit(2130, 1707, "Person", false, "Traveler", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.3, 0.4], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[2087, 1706]]}));

                    }
                }

                //The Jarl's Guards
                ArtificialIntelligenceAccess.push(new Unit(-95, 645, "Soldier", false, "Tor Huskarl", {race: "Freynor", faction: "Freynor", con: 16, speed: 1.55, outfit: ["chainArmour", 12], weapon: ["freydicSword", [11, 9], 0, 17, 1], ranged: [false, "arrow", 7, 2000, 1, 6, 0, "none", 1.25], rot: -1/2*Math.PI, patrolStops: 2, patrolLoop: true, route:[[-95, 645], [-95, 645]]}));
                ArtificialIntelligenceAccess.push(new Unit(-620, 645, "Soldier", false, "Tor Huskarl", {race: "Freynor", faction: "Freynor", con: 16, speed: 1.55, outfit: ["chainArmour", 12], weapon: ["freydicSword", [11, 9], 0, 17, 1], ranged: [false, "arrow", 7, 2000, 1, 6, 0, "none", 1.25], rot: -1/2*Math.PI, patrolStops: 2, patrolLoop: true, route:[[-620, 645], [-620, 645]]}));

                if (uniqueChars.drohforLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Drohfor")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(1875, 243, "Person", false, "Drohfor", {race: "Freynor", faction: "Freynor", personality: "violent", outfit: ["walrusLeatherArmour", 5], weapon: ["longbow", [0.1, 0.4], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [true, "arrow", 8, 2000, 1, 6, 0, "none", 0.95], patrolStops: 7, patrolLoop: true, route:[[1875, 243], [1600, -181], [987, -45], [384, -299], [1707, -151], [1420, -366], [1581, 21]]}));
                    }
                }
                if (quests.teshirNorthRoadQuest != "complete")
                {
                    if (uniqueChars.togginLDS == true)
                    {
                        var hits = 0;
                        for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                        {
                            if (ArtificialIntelligenceAccess[i].ID == "Toggin")
                            {
                                hits += 1;
                            }
                        }
                        if (hits == 0)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(1830, 2767, "Person", false, "Toggin", {race: "Freynor", faction: "Freynor", personality: "violent", outfit: ["blackBearFurClothing", 0], weapon: ["timberAxe", [10, 4], 1.5, 12, 1.55], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 3, patrolLoop: true, route:[[1771, 2698], [1675, 2861], [1830, 2767]]}));
                            for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                            {
                                if (ArtificialIntelligenceAccess[i].ID == "Toggin")
                                {
                                    ArtificialIntelligenceAccess[i].healthMAX = 16;
                                    ArtificialIntelligenceAccess[i].health = 16;
                                }
                            }
                        }
                    }
                }
                if (uniqueChars.kedwinLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Kedwin")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(2287, 2031, "Person", false, "Kedwin", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["frichFurClothing", 0], weapon: ["none", [0.5, 1], 0, 0, 1.1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[2287, 2065]]}));
                        for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                        {
                            if (ArtificialIntelligenceAccess[i].ID == "Kedwin")
                            {
                                ArtificialIntelligenceAccess[i].healthMAX = 19;
                                ArtificialIntelligenceAccess[i].health = 19;
                            }
                        }
                    }
                }
                if (uniqueChars.aarniLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Aarni the Stablemaster")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(644, 1513, "Person", false, "Aarni the Stablemaster", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["varnFurClothing", 0], weapon: ["none", [0.5, 0.6], 0, 0, 1.1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[644, 1525]]}));
                        for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                        {
                            if (ArtificialIntelligenceAccess[i].ID == "Aarni")
                            {
                                ArtificialIntelligenceAccess[i].healthMAX = 9;
                                ArtificialIntelligenceAccess[i].health = 9;
                            }
                        }
                    }
                }
                if (uniqueChars.garldLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Garld the Crazy Beggar" || ArtificialIntelligenceAccess[i].ID == "Garld, Sage of Gemith")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(2523, 1489, "Person", false, "Garld the Crazy Beggar", {race: "Freynor", faction: "Freynor", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.5, 1], 0, 0, 1.1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: false, route:[[2072, 1535], [1939, 1509], [2033, 1499]]}));
                        for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                        {
                            if (ArtificialIntelligenceAccess[i].ID == "Garld the Crazy Beggar" || ArtificialIntelligenceAccess[i].ID == "Garld, Sage of Gemith")
                            {
                                ArtificialIntelligenceAccess[i].healthMAX = 12.1;
                                ArtificialIntelligenceAccess[i].health = 12.1;
                            }
                        }
                    }
                }
                if (uniqueChars.odeeLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Odee the Banker")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(1155, 1632, "Person", false, "Odee the Banker", {race: "Orgell", faction: "Freynor", personality: "calculated", outfit: ["winterWolfClothing", 0], weapon: ["none", [0.1, 0.4], 0, 0, 0.85], ranged: [false, "arrow", 8, 2000, 1, 6, 0, "none", 0.95], patrolStops: 1, patrolLoop: false, route:[[1170, 1632]], banker: true}));
                    }
                }
                if (uniqueChars.stendorLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Tor Commissioner Stendor")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(1949, 2282, "Soldier", false, "Tor Commissioner Stendor", {race: "Freynor", faction: "Freynor", con: 12, speed: 1.32, outfit: ["chainArmour", 10], weapon: ["freydicGreatSword", [25, 14], 0, 35, 2.25], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], patrolStops: 0, patrolLoop: true, route:[[1654, 1507], [1661, 2311], [1864, 2315], [1852, 1499]]}));
                    }
                }
                if (uniqueChars.OrjovTorLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Jarl Orjov Tor")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-344, -48, "Soldier", false, "Jarl Orjov Tor", {race: "Freynor", faction: "Freynor", con: 40, speed: 0.6, outfit: ["northernPlateArmour", 22], weapon: ["freydicGreatSword", [37, 20], 0, 37, 5], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, patrolStops: 1, patrolLoop: false, route:[[-341, -24]]}));
                    }
                }

                if (uniqueChars.pynskeLDS == true && quests.atalinTeshirAnnexed == false)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Ser Olis Pynske")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-514, 277, "Soldier", false, "Ser Olis Pynske", {race: "Freynor", faction: "Freynor", con: 20, speed: 0.55, outfit: ["northernPlateArmour", 16], weapon: ["freydicGreatSword", [25, 14], 0, 37, 5.5], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, patrolStops: 2, patrolLoop: true, route:[[-514, 277], [-514, 277]]}));
                    }
                }

                if (quests.atalinSisterJarl == true)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-514, 277, "Soldier", false, "Nirwaden Knight", {race: "Nirwaden", faction: "Nirwaden", con: 15, speed: 1.3, outfit: ["nirwadenPlateArmour", 19], weapon: ["nirineseSabre", [9, 8], 0, 0, 1.25], ranged: [false, "steelBolt", 13, 2200, 16, 15 /3, 0, "none", 3.55], patrolStops: 2, patrolLoop: true, route:[[-514, 277], [-514, 277]]}));
                }

                if (uniqueChars.lailionaLDS && quests.atalinSisterJarl == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Lailiona")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-344, -48, "Person", false, "Lailiona", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenNobleDress", 0], weapon: ["none", [0.04, 0.05], 0, 0, 2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-341, -24]], kid: true}));
                    }
                }

                if (uniqueChars.emyliaLDS && quests.atalinSisterJarl == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "High Dame Emylia Altezor")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-380, -54, "Person", false, "High Dame Emylia Altezor", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenLadyPointyCap", 0], weapon: ["none", [0.15, 0.15], 0, 0, 2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-375, -22]]}));
                    }
                }


                if (uniqueChars.laandegLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Laandeg the Alchemist")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(1193, 777, "Person", false, "Laandeg the Alchemist", {race: "Freynor", faction: "Freynor", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.1, 0.4], 0, 0, 1.1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[1193, 777]], merchant: true, merchandise: [[new Item("coins", false, false), 29], [new Item("culprisBandage", false, false), 2], [new Item("healingSalve", false, false), 4], [new Item("trollsBlood", false, false), 1], [new Item("stomwikCream", false, false), 2], [new Item("rawTrollsBlood", false, false), 1], [new Item("cleansingPotion", false, false), 1], [new Item("energyPotionI", false, false), 3], [new Item("speedPotionI", false, false), 2], [new Item("energilPotionI", false, false), 2], [new Item("energilPotionII", false, false), 1], [new Item("mightPotionI", false, false), 3], [new Item("pouchOfGlowDust", false, false), 2], [new Item("pouchOfIrilDust", false, false), 2], [new Item("ogardPerfume", false, false), 8], [new Item("potionGlass", false, false), 18], [new Item("glassJar", false, false), 14], [new Item("rawWolfLiver", false, false), 4], [new Item("salt", false, false), 3]]}));
                    }
                }
                if (uniqueChars.hilmundChildLDS == true && quests.hilmundChild)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "[ " + quests.hilmundChildName + " ]")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(2346, 1788, "Person", false, "[ " + quests.hilmundChildName + " ]", {race: player.raceName, faction: "player", personality: "violent", outfit: ["frichFurClothing", 0], weapon: ["none", [0.2, 0.2], 0, 0, 1.2], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[2164, 1656]], kid: true}));
                    }
                }
                if (uniqueChars.hilmundLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Hilmund the Innkeeper")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(2346, 1756, "Person", false, "Hilmund the Innkeeper", {race: "Freynor", faction: "Freynor", personality: "violent", outfit: ["none", 0], weapon: ["none", [0.3, 0.7], 0, 0, 0.8], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[2164, 1656]], merchant: true, merchandise: [[new Item("coins", false, false), 86 + quests.hilmundNewWealth], [new Item("harstAle", false, false), 64], [new Item("mead", false, false), 8], [new Item("santhAle", false, false), 5], [new Item("pluttWine", false, false), 19], [new Item("glassBottleOfPluttWine", false, false), 6], [new Item("pluttCiderPintGlass", false, false), 7], [new Item("waterPintGlass", false, false), 9], [new Item("bucketOfWater", false, false), 1], [new Item("walrusLeatherWaterskinFull", false, false), 11], [new Item("walrusMeat", false, false), 8], [new Item("bearMeat", false, false), 3], [new Item("winterWolfMeat", false, false), 5], [new Item("frichMeat", false, false), 17], [new Item("wolfLiver", false, false), 6], [new Item("harstBread", false, false), 1], [new Item("suuliMelonSlice", false, false), 14]]}));
                    }
                }
                if (uniqueChars.bobithLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Svehn the Smith")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        if (quests.lostDeliveryCompletionStyle != "keptShipment" && quests.lostDeliveryQuest == "complete")
                        {
                            ArtificialIntelligenceAccess.push(new Unit(1690, 1021, "Person", false, "Svehn the Smith", {race: "Freynor", faction: "Freynor", personality: "violent", outfit: ["none", 0], weapon: ["none", [0.1, 0.4], 0, 0, 0.65], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[2049, 1021], [1943, 1127], [1690, 1021]], merchant: true, merchandise: [[new Item("coins", false, false), 124 + quests.bobithNewWealth], [new Item("thriceForgedSteel", false, false), 1], [new Item("steel", false, false), 8], [new Item("iron", false, false), 6], [new Item("mace", false, false), 3], [new Item("hammer", false, false), 2], [new Item("freydicSpear", false, false), 5], [new Item("freydicSword", false, false), 2], [new Item("freydicWarAxe", false, false), 1], [new Item("freydicGreatSword", false, false), 1], [new Item("chainArmour", false, false), 2], [new Item("longbow", false, false), 2], [new Item("arrow", false, false), 92], [new Item("steelArrow", false, false), 61], [new Item("timberAxe", false, false), 3], [new Item("nirineseSpear", false, false), 1], [new Item("nirineseSabre", false, false), 1], [new Item("pickaxe", false, false), 1], [new Item("beartrap", false, false), 1], [new Item("clawtrap", false, false), 1], [new Item("jacks", false, false), 14]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(1690, 1021, "Person", false, "Svehn the Smith", {race: "Freynor", faction: "Freynor", personality: "violent", outfit: ["none", 0], weapon: ["none", [0.1, 0.4], 0, 0, 0.65], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[2049, 1021], [1943, 1127], [1690, 1021]], merchant: true, merchandise: [[new Item("coins", false, false), 103 + quests.bobithNewWealth], [new Item("steel", false, false), 8], [new Item("iron", false, false), 6], [new Item("mace", false, false), 3], [new Item("hammer", false, false), 2], [new Item("freydicSpear", false, false), 5], [new Item("freydicSword", false, false), 2], [new Item("freydicWarAxe", false, false), 1], [new Item("freydicGreatSword", false, false), 1], [new Item("chainArmour", false, false), 2], [new Item("longbow", false, false), 2], [new Item("arrow", false, false), 92], [new Item("steelArrow", false, false), 61], [new Item("timberAxe", false, false), 3], [new Item("pickaxe", false, false), 1], [new Item("beartrap", false, false), 1], [new Item("clawtrap", false, false), 1], [new Item("jacks", false, false), 14]]}));
                        }
                    }
                }
                if (uniqueChars.medliaLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Medlia the Merchant")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(1406, 1941, "Person", false, "Medlia the Merchant", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["winterWolfClothing", 0], weapon: ["none", [0.1, 0.4], 0, 0, 1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[1425, 1941]], merchant: true, merchandise: [[new Item("coins", false, false), 179 + quests.medliaNewWealth], [new Item("wood", false, false), 48], [new Item("tent", false, false), 2], [new Item("fireStarter", false, false), 3], [new Item("jarOfOil", false, false), 1], [new Item("rawWalrusFlesh", false, false), 8], [new Item("walrusHide", false, false), 1], [new Item("walrusTusks", false, false), 1], [new Item("oilLampEmpty", false, false), 2], [new Item("oilLanternEmpty", false, false), 5], [new Item("candle", false, false), 12], [new Item("beesWax", false, false), 9], [new Item("ogardPerfume", false, false), 2], [new Item("frichPelt", false, false), 3], [new Item("rawFrichFlesh", false, false), 22], [new Item("winterWolfPelt", false, false), 3], [new Item("rawWinterWolfFlesh", false, false), 2], [new Item("rawWolfLiver", false, false), 1], [new Item("walrusLeatherWaterskin", false, false), 2], [new Item("harstGrain", false, false), 29], [new Item("potato", false, false), 8], [new Item("carrot", false, false), 13], [new Item("suuliMelon", false, false), 5], [new Item("driedTechiLeaf", false, false), 14], [new Item("ogard", false, false), 1], [new Item("freydicFolkTales", false, false), 1]]}));
                    }
                }
                if (uniqueChars.teberLDS == true && quests.bountyTeberCompletionStyle == "royal pardon")
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Teber the Artisan")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        if (quests.bankruptNeculai)
                        {
                            var xx = 2644;
                            var yy = 2006;
                        }
                        else
                        {
                            var xx = 1999;
                            var yy = 1604;
                        }

                        ArtificialIntelligenceAccess.push(new Unit(xx, yy, "Person", false, "Teber the Artisan", {race: "Freynor", faction: "Kel", personality: "scared", outfit: ["winterWolfClothing", 0], weapon: ["none", [0.4, 0.6], 0, 0, 1.15], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[2049, 1021], [1943, 1127], [1690, 1021]], merchant: true, merchandise: [[new Item("coins", false, false), 75], [new Item("naapridFiber", false, false), 7], [new Item("pintGlass", false, false), 19], [new Item("potionGlass", false, false), 18], [new Item("glassJar", false, false), 10]]}));
                        for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                        {
                            if (ArtificialIntelligenceAccess[i].ID == "Teber the Artisan")
                            {
                                ArtificialIntelligenceAccess[i].healthMAX = 29;
                                ArtificialIntelligenceAccess[i].health = 29;
                                ArtificialIntelligenceAccess[i].speed += 0.05;
                                ArtificialIntelligenceAccess[i].grudge = 340;
                            }
                        }
                    }
                }
                if (uniqueChars.maggyLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Maggy the Tailor")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(2672, 1594, "Person", false, "Maggy the Tailor", {race: "Freynor", faction: "Freynor", personality: "scared", outfit: ["ardilFurSkirt", 0], weapon: ["none", [0.1, 0.4], 0, 0, 1.2], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[2836, 2058], [2858, 1524]], merchant: true, merchandise: [[new Item("coins", false, false), 180], [new Item("frichFurClothing", false, false), 12], [new Item("frichFurMittens", false, false), 5], [new Item("varnFurClothing", false, false), 5], [new Item("varnFurCloak", false, false), 2], [new Item("varnFurDress", false, false), 3], [new Item("ardilFurClothing", false, false), 1], [new Item("ardilFurSkirt", false, false), 2], [new Item("ardilFurGloves", false, false), 4], [new Item("winterWolfClothing", false, false), 1], [new Item("winterWolfOutfit", false, false), 1], [new Item("winterWolfDress", false, false), 1], [new Item("naapridLeatherArmour", false, false), 2], [new Item("walrusLeatherArmour", false, false), 3], [new Item("blackBearFurClothing", false, false), 1], [new Item("emptyBagHarst", false, false), 3]]}));
                    }
                }

                //a vardanian merchant who can be kicked out of town in a quest.
                if (uniqueChars.neculaiLDS == true && quests.medliaCompetitionControlQuest != "complete")
                {
                    if (player.raceName != "Freynor" || player.title != "Royalty" || player.raceName == "Freynor" && player.title == "Royalty" && player.vardanFaction >= 0) // if you are royalty of freynor your actions determine the nations friends and enemies.
                    {
                        var hits = 0;
                        for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                        {
                            if (ArtificialIntelligenceAccess[i].ID == "Neculai the Merchant" || ArtificialIntelligenceAccess[i].ID == "Neculai the Beggar")
                            {
                                hits += 1;
                            }
                        }
                        if (hits == 0)
                        {
                            if (quests.bankruptNeculai != true)
                            {
                                if (quests.theBalgurMercenariesCompletionStyle == "killedMercs" && quests.theBalgurMercenariesQuest == "complete" || quests.theBalgurMercenariesCompletionStyle == "royalProtection" && quests.theBalgurMercenariesQuest == "complete"|| quests.theBalgurMercenariesCompletionStyle == "threaten" && quests.theBalgurMercenariesQuest == "complete" || quests.theBalgurMercenariesCompletionStyle == "paidMercs" && quests.theBalgurMercenariesQuest == "complete") //if you beat neculai's quest in a way positive for neculai he likes you enough to sell his swamp walker armour.
                                {
                                    ArtificialIntelligenceAccess.push(new Unit(2498, 1144, "Person", false, "Neculai the Merchant", {race: "Vardan", faction: "Vardan", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.2, 0.5], 0, 0, 0.55], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[], merchant: true, merchandise: [[new Item("coins", false, false), 37], [new Item("frichFurClothing", false, false), 3], [new Item("mace", false, false), 1], [new Item("vardanianAxe", false, false), 3], [new Item("vardanianAxeDual", false, false), 2], [new Item("vardanianCleaver", false, false), 1], [new Item("vardanianClub", false, false), 1], [new Item("smashStick", false, false), 1], [new Item("rawWolfLiver", false, false), 4], [new Item("blackChainArmour", false, false), 2], [new Item("trollFlesh", false, false), 2], [new Item("wood", false, false), 14], [new Item("freydicSword", false, false), 1], [new Item("frichPelt", false, false), 6], [new Item("rawWalrusFlesh", false, false), 5], [new Item("walrusMeat", false, false), 1], [new Item("swampWalkerArmour", false, false), 1]]}));
                                }
                                else
                                {
                                    ArtificialIntelligenceAccess.push(new Unit(2498, 1144, "Person", false, "Neculai the Merchant", {race: "Vardan", faction: "Vardan", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.2, 0.5], 0, 0, 0.55], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[], merchant: true, merchandise: [[new Item("coins", false, false), 37], [new Item("frichFurClothing", false, false), 3], [new Item("mace", false, false), 1], [new Item("vardanianAxe", false, false), 3], [new Item("vardanianAxeDual", false, false), 2], [new Item("vardanianCleaver", false, false), 1], [new Item("smashStick", false, false), 1], [new Item("rawWolfLiver", false, false), 4], [new Item("blackChainArmour", false, false), 2], [new Item("trollFlesh", false, false), 2], [new Item("wood", false, false), 14], [new Item("freydicSword", false, false), 1], [new Item("frichPelt", false, false), 6], [new Item("rawWalrusFlesh", false, false), 5], [new Item("walrusMeat", false, false), 1]]}));
                                }
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(2756, 1815, "Person", false, "Neculai the Beggar", {race: "Vardan", faction: "Vardan", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.2, 0.5], 0, 0, 0.55], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[]}));
                            }

                        }
                    }
                }

                if (quests.spouseTrackerQuest == "complete" && quests.spouseTrackerCompletionStyle == "bienEscort" || quests.spouseTrackerQuest == "complete" && quests.spouseTrackerCompletionStyle == "malEscort")
                {
                    if (uniqueChars.bellaLDS == true)
                    {
                        var hits = 0;
                        for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                        {
                            if (ArtificialIntelligenceAccess[i].ID == "Madam Bella")
                            {
                                hits += 1;
                            }
                        }
                        if (hits == 0)
                        {
                            if (player.gamemode == "protagonist")
                            {
                                ArtificialIntelligenceAccess.push(new Unit(2687.167015109158, 2240.688924879708, "Person", false, "Bouncy Ball Saleswoman", {race: "Thengar", faction: "Freynor", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.1, 0.1], 0, 0, 1.5], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[2686.756821173579, 2251.491555658622]]}));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(2687.167015109158, 2240.688924879708, "Person", false, "Madam Bella", {race: "Thengar", faction: "Freynor", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.1, 0.1], 0, 0, 1.5], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[2686.756821173579, 2251.491555658622]]}));
                            }
                        }
                    }
                    if (uniqueChars.mesekLDS == true)
                    {
                        var hits = 0;
                        for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                        {
                            if (ArtificialIntelligenceAccess[i].ID == "Mesek the Runaway")
                            {
                                hits += 1;
                            }
                        }
                        if (hits == 0)
                        {
                            if (player.gamemode == "protagonist")
                            {
                                ArtificialIntelligenceAccess.push(new Unit(2702.149154924032, 2308.4115238442287, "Person", false, "Bouncy Ball Salesman", {race: "Kel", faction: "Freynor", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 2, 1.12], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[2695.3375492293803, 2301.4451089292443]]}));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(2702.149154924032, 2308.4115238442287, "Person", false, "Mesek the Runaway", {race: "Kel", faction: "Freynor", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 2, 1.12], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[2695.3375492293803, 2301.4451089292443]]}));
                            }
                        }
                    }
                }

                //A stray herd of Naaprids in the northern grassland
                ArtificialIntelligenceAccess.push(new Unit(4942, -1180, "Naaprid", true, "Naanav"));
                ArtificialIntelligenceAccess.push(new Unit(4860, -1377, "Naaprid", true, "Naarimov"));
                ArtificialIntelligenceAccess.push(new Unit(5265, -1535, "Naaprid", true, "Naastelav"));
                ArtificialIntelligenceAccess.push(new Unit(5513, -1322, "Naaprid", false, "Naanava"));
                ArtificialIntelligenceAccess.push(new Unit(5468, -1244, "Naaprid", "baby", "Naarimova"));
                ArtificialIntelligenceAccess.push(new Unit(5634, -1223, "Naaprid", false, "Naastelava"));
                ArtificialIntelligenceAccess.push(new Unit(5737, -1388, "Naaprid", false, "kaastelava"));
                ArtificialIntelligenceAccess.push(new Unit(5896, -1482, "Naaprid", false, "Laastelava"));
                ArtificialIntelligenceAccess.push(new Unit(5986, -1355, "Naaprid", "baby", "Aaptelava"));
                ArtificialIntelligenceAccess.push(new Unit(6111, -943, "Naaprid", true, "Paaktolav"));

                //Domestic Naaprid
                if (uniqueChars.aarniLDS)
                {
                    ArtificialIntelligenceAccess.push(new Unit(574, 1804, "Naaprid", true, "Stovilav"));
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Stovilav")
                        {
                            ArtificialIntelligenceAccess[i].baseTeam = "Freynor";
                        }
                    }
                }


                //Grassland Ardils
                ArtificialIntelligenceAccess.push(new Unit(-24, -235, "Ardil", true, "Fuzzybut"));
                ArtificialIntelligenceAccess.push(new Unit(1796, -2657, "Ardil", true, "Fannyfur"));
                ArtificialIntelligenceAccess.push(new Unit(-3756, -1947, "Ardil", true, "Fannybut"));
                ArtificialIntelligenceAccess.push(new Unit(-3953, -2040, "Ardil", false, "Fannyfran"));
                ArtificialIntelligenceAccess.push(new Unit(-3432, 884, "Ardil", false, "Frannyfran"));
                ArtificialIntelligenceAccess.push(new Unit(-103, 1881, "Ardil", true, "Fannylanlan"));
                ArtificialIntelligenceAccess.push(new Unit(301, 4049, "Ardil", false, "Frannyfranfran"));
                ArtificialIntelligenceAccess.push(new Unit(4575, 4970, "Ardil", false, "fuzybut"));
                ArtificialIntelligenceAccess.push(new Unit(5756, 5372, "Ardil", true, "furrybut"));
                ArtificialIntelligenceAccess.push(new Unit(6183, 1172, "Ardil", false, "Furryfran"));
                ArtificialIntelligenceAccess.push(new Unit(4742, 2099, "Ardil", true, "Fuzzyfran"));

                //Wild Varns ventured into grassland to find new food source (because of clearcut)
                ArtificialIntelligenceAccess.push(new Unit(-42, -1983, "Varn", true, "Scrag"));
                ArtificialIntelligenceAccess.push(new Unit(-420, -1871, "Varn", false, "Kretta"));
                ArtificialIntelligenceAccess.push(new Unit(-2190, -1403, "Varn", false, "Arlea"));
                ArtificialIntelligenceAccess.push(new Unit(-2033, -1369, "Varn", true, "Valentina"));
                ArtificialIntelligenceAccess.push(new Unit(-1257, -6310, "Varn", false, "Racho"));
                ArtificialIntelligenceAccess.push(new Unit(-1910, 4940, "Varn", false, "Ferra"));
                ArtificialIntelligenceAccess.push(new Unit(-1549, -5102, "Varn", false, "Juanito"));
                ArtificialIntelligenceAccess.push(new Unit(-905, 2130, "Varn", false, "Domingo"));
                ArtificialIntelligenceAccess.push(new Unit(3918, -2387, "Varn", false, "Wyhay"));
                ArtificialIntelligenceAccess.push(new Unit(-2340, -2853, "Varn", true, "Wandigo"));
                ArtificialIntelligenceAccess.push(new Unit(-2357, -3126, "Varn", false, "Wandago"));
                ArtificialIntelligenceAccess.push(new Unit(-2012, -3280, "Varn", true, "wandoo"));
                ArtificialIntelligenceAccess.push(new Unit(-2406, 757, "Varn", false, "Wiggin"));
                ArtificialIntelligenceAccess.push(new Unit(-2206, 2201, "Varn", true, "Ender"));
                ArtificialIntelligenceAccess.push(new Unit(-1712, 2328, "Varn", false, "Starter"));
                ArtificialIntelligenceAccess.push(new Unit(-2187, 3320, "Varn", false, "Easer"));

                if (uniqueChars.hetmerLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Hetmer The Bandit Chief")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(35 - 750, 5540, "Soldier", false, "Hetmer The Bandit Chief", {race: "Freynor", faction: "hostile", con: 7, speed: 1.2, outfit: ["hetmerArmour", 5.5], weapon: ["freydicSword", [7, 7], 0, 16, 1], ranged: [false, "arrow", 9, 2100, 1, 7, 0, "none", 1.2], patrolStops: 1, patrolLoop: false, route:[[221 -750, 5517]]}));
                    }
                }

                //Bandits and bandit chief (Bandidos Nortenos)
                if (quests.teshirNorthRoadBandits == true)
                {
                    //ArtificialIntelligenceAccess.push(new Unit(1663, 5750, "Soldier", false, "Northern Bandit", {race: "Freynor", faction: "hostile", con: 5, speed: 1.10, outfit: ["walrusLeatherArmour", 4], weapon: ["crossbow", [0.1, 0.4], 0, 16, 1], ranged: [true, "steelBolt", 10, 2000, 12, 23 /3, 0, "none", 2.2], patrolStops: 1, patrolLoop: false, route:[[586, 6301]]}));
                    ArtificialIntelligenceAccess.push(new Unit(1563, 5864, "Soldier", false, "Northern Bandit", {race: "Freynor", faction: "hostile", con: 2, speed: 1.05, outfit: ["walrusLeatherArmour", 4], weapon: ["freydicSword", [4, 4], 0, 16, 1], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 4, patrolLoop: true, route:[[506, 6152], [1042, 6325], [1551, 6202], [1563, 5864]]}));
                    ArtificialIntelligenceAccess.push(new Unit(1941, 5902, "Soldier", false, "Northern Bandit", {race: "Freynor", faction: "hostile", con: 4, speed: 1.15, outfit: ["none", 0], weapon: ["longbow", [0.1, 0.4], 0, 0, 0.85], ranged: [true, "arrow", 6, 1750, 1, 4, 0, "none", 1.4], patrolStops: 3, patrolLoop: true, route:[[1941, 5902], [2384, 5809], [1926, 6003]]}));
                    ArtificialIntelligenceAccess.push(new Unit(435 - 750, 5563, "Soldier", false, "Northern Bandit", {race: "Freynor", faction: "hostile", con: 3, speed: 1.05, outfit: ["walrusLeatherArmour", 4], weapon: ["longbow", [0.1, 0.4], 0, 16, 1], ranged: [true, "arrow", 7, 1900, 1, 4, 0, "none", 1.5], patrolStops: 4, patrolLoop: true, route:[[435 - 750, 5563], [400 - 750, 5668], [636 - 750, 5860], [827 - 750, 5357]]}));
                    ArtificialIntelligenceAccess.push(new Unit(348 - 750, 5428, "Soldier", false, "Northern Bandit", {race: "Freynor", faction: "hostile", con: 5, speed: 0.90, outfit: ["none", 1], weapon: ["freydicSword", [6, 4], 0, 16, 1], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 3, patrolLoop: true, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                }

                //a well known thengan mercenary crew's captain.
                if (uniqueChars.kronheimeLDS == true && quests.theBalgurMercenariesQuest == true && quests.theBalgurMercenariesCompletionStyle != "threaten" && quests.theBalgurMercenariesCompletionStyle != "paidMercs"&& quests.theBalgurMercenariesCompletionStyle != "royalProtection")
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Mercenary Captain Kronheime")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(4062, 2531, "Soldier", false, "Mercenary Captain Kronheime", {race: "Thengar", faction: "TheBalgurMercenaries", con: 20, speed: 1.3, outfit: ["balgurCaptainArmour", 7], weapon: ["flail", [25, 7], 11, 63, 3.1], ranged: [false, "arrow", 7, 1800, 1, 6, 0, "none", 2.4], patrolStops: 0, patrolLoop: false, route:[[1654, 1507], [1661, 2311], [1864, 2315], [1852, 1499]]}));
                    }
                }
                //balgur mercenaries
                if (quests.theBalgurMercenariesQuest == true && quests.theBalgurMercenariesCompletionStyle != "threaten" && quests.theBalgurMercenariesCompletionStyle != "paidMercs" && quests.theBalgurMercenariesCompletionStyle != "royalProtection")
                {
                    ArtificialIntelligenceAccess.push(new Unit(4143, 2400, "Soldier", false, "Balgur Mercenary", {race: "Thengar", faction: "TheBalgurMercenaries", con: 10, speed: 1.2, outfit: ["balgurMercArmour", 5], weapon: ["longSpikedMorningStar", [13, 5], 14, 20, 2.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(4138, 2642, "Soldier", false, "Balgur Mercenary", {race: "Thengar", faction: "TheBalgurMercenaries", con: 8, speed: 1.25, outfit: ["balgurMercArmour", 3.5], weapon: ["longSpikedMorningStar", [11, 4], 14, 20, 2.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(4321, 2575, "Soldier", false, "Balgur Mercenary", {race: "Thengar", faction: "TheBalgurMercenaries", con: 10, speed: 1.3, outfit: ["balgurMercArmour", 3.5], weapon: ["longSpikedMorningStar", [12, 4], 14, 20, 2.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(4322, 2486, "Soldier", false, "Balgur Mercenary", {race: "Thengar", faction: "TheBalgurMercenaries", con: 12, speed: 1.225, outfit: ["balgurMercArmour", 4.5], weapon: ["longSpikedMorningStar", [14, 6], 14, 20, 2.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(3912, 2723, "Soldier", false, "Balgur Mercenary", {race: "Thengar", faction: "TheBalgurMercenaries", con: 7, speed: 1.175, outfit: ["balgurMercArmour", 3.5], weapon: ["longSpikedMorningStar", [10, 3], 14, 20, 2.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(3924, 2341, "Soldier", false, "Balgur Mercenary", {race: "Thengar", faction: "TheBalgurMercenaries", con: 13, speed: 1.3, outfit: ["balgurMercArmour", 5], weapon: ["longSpikedMorningStar", [14, 7], 14, 20, 2.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(3796, 2347, "Soldier", false, "Balgur Mercenary", {race: "Thengar", faction: "TheBalgurMercenaries", con: 11, speed: 1.25, outfit: ["balgurMercArmour", 4], weapon: ["longSpikedMorningStar", [13, 6], 14, 20, 2.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 2, patrolLoop: true, route:[[3409, 2704], [3796, 2347]]}));
                    ArtificialIntelligenceAccess.push(new Unit(3785, 2716, "Soldier", false, "Balgur Mercenary", {race: "Thengar", faction: "TheBalgurMercenaries", con: 9, speed: 1.25, outfit: ["balgurMercArmour", 4], weapon: ["longSpikedMorningStar", [12, 5], 14, 20, 2.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 2, patrolLoop: true, route:[[3414, 2337], [3785, 2716]]}));
                }

                //Scenery
                //buildings in the city
                scenicList.push(new Scenery("freydicBuilding1", 2142, 1900, 0, true));
                scenicList.push(new Scenery("freydicBuilding2", 2111, 2268, 0, true));
                scenicList.push(new Scenery("freydicBuilding2", 2430, 2268, 0, true));
                scenicList.push(new Scenery("freydicBuilding2", 2698, 2268, 0, true));
                scenicList.push(new Scenery("freydicBuilding2", 2319, 876, 0, true));
                scenicList.push(new Scenery("freydicBuilding2", 2319, 683, 0, true));
                scenicList.push(new Scenery("freydicBuilding2", 2319, 1064, 0, true));
                scenicList.push(new Scenery("freydicBuilding2", 1149, 1043, 0, true));
                scenicList.push(new Scenery("freydicBuilding2", 1149, 2256, 0, true));
                scenicList.push(new Scenery("freydicBuilding2", 1149, 2078, 0, true));
                scenicList.push(new Scenery("freydicBuilding2", 1149, 1900, 0, true));
                scenicList.push(new Scenery("freydicBuilding3", 2654, 2000, 0, true));
                scenicList.push(new Scenery("freydicBuilding3", 2654, 1644, 0, true));
                scenicList.push(new Scenery("freydicBuilding3", 1430, 1051, 0, true));
                scenicList.push(new Scenery("freydicBuilding3", 1450, 2240, 0, true));
                scenicList.push(new Scenery("freydicBuilding3", 1450, 1943, 0, true));
                scenicList.push(new Scenery("freydicBuilding4", 1260, 734, 0, true));
                scenicList.push(new Scenery("freydicBuilding4", 1306, 1643, 0, true));
                scenicList.push(new Scenery("freydicBuilding5", 1735, 715, 0, true));
                scenicList.push(new Scenery("freydicBuilding5", 2678, 1064, 0, true));
                scenicList.push(new Scenery("freydicBuilding5", 2678, 876, 0, true));
                scenicList.push(new Scenery("freydicBuilding5", 2678, 683, 0, true));
                scenicList.push(new Scenery("freydicBuilding3", 576, 1590, 0, true));

                //interior design
                //bank
                scenicList.push(new Scenery("woodenBench", 1205, 1635, -1/2 * Math.PI, 0));
                scenicList.push(new Scenery("stumpStool", 1168, 1632, -1/2 * Math.PI, 0));
                scenicList.push(new Scenery("stumpStoolSml", 1235, 1635, -1/2 * Math.PI, 0));
                scenicList.push(new Scenery("crate", 1142, 1700, -3/4 * Math.PI, 1, [1.5]));
                scenicList.push(new Scenery("crate", 1147, 1572, 6.5/4 * Math.PI, 1, [1.15]));
                scenicList.push(new Scenery("crate", 1376, 1699, 1.4/4 * Math.PI, 1, [1.38]));
                scenicList.push(new Scenery("crate", 1498, 1719, 0/4 * Math.PI, 1, [1]));
                scenicList.push(new Scenery("crate", 1491, 1614, -5/4 * Math.PI, 1, [1.2]));
                //tailors
                scenicList.push(new Scenery("woodenBench", 2654, 1743, -1 * Math.PI, 0));
                scenicList.push(new Scenery("woodenBench", 2548, 1653, -1/2 * Math.PI, 0));
                scenicList.push(new Scenery("item", 2737, 1564, 0, "freynor", ["bucketOfWater", 1, -15]));
                scenicList.push(new Scenery("item", 2687, 1741, 0, "freynor", ["frichPelt", 1, -5]));
                scenicList.push(new Scenery("item", 2651, 1741, 0, "freynor", ["frichPelt", 1, -5]));
                scenicList.push(new Scenery("item", 2614, 1741, 0, "freynor", ["frichPelt", 1, -5]));
                scenicList.push(new Scenery("item", 2548, 1686, 0, "freynor", ["ardilPelt", 1, -7]));
                scenicList.push(new Scenery("item", 2548, 1666, 0, "freynor", ["ardilPelt", 1, -7]));
                scenicList.push(new Scenery("item", 2548, 1630, 0, "freynor", ["varnPelt", 1, -8]));
                scenicList.push(new Scenery("item", 2550, 1608, 0, "freynor", ["varnPelt", 1, -8]));
                //Inn
                scenicList.push(new Scenery("barrel", 2345, 1689, -1/2 * Math.PI, 1));
                scenicList.push(new Scenery("woodenBench", 2276, 2101, -1 * Math.PI, 0));
                scenicList.push(new Scenery("stumpStoolSml", 2287, 2065, -1/2 * Math.PI, 0));
                scenicList.push(new Scenery("stumpStoolSml", 2243, 2066, -1/2 * Math.PI, 0));
                scenicList.push(new Scenery("stumpStoolSml", 2323, 2064, -1/2 * Math.PI, 0));
                scenicList.push(new Scenery("smallTable", 2353, 1940, -1/2 * Math.PI, 0));
                scenicList.push(new Scenery("stumpStoolSml", 2347, 1904, -1/2 * Math.PI, 0));
                scenicList.push(new Scenery("stumpStoolSml", 2348, 1979, -1/2 * Math.PI, 0));
                scenicList.push(new Scenery("stumpStoolSml", 2314, 1940, -1/2 * Math.PI, 0));
                scenicList.push(new Scenery("smallTable", 2056, 2079, -1/2 * Math.PI, 0));
                scenicList.push(new Scenery("stumpStoolSml", 2106, 2081, -1/2 * Math.PI, 0));
                scenicList.push(new Scenery("smallTable", 2052, 1711, -1/2 * Math.PI, 0));
                scenicList.push(new Scenery("stumpStoolSml", 2089, 1708, -1/2 * Math.PI, 0));
                scenicList.push(new Scenery("stumpStoolSml", 2053, 1756, -1/2 * Math.PI, 0));
                //barracks
                scenicList.push(new Scenery("woodenBench", 1351, 2229, -1/2 * Math.PI, 0));
                if (player.raceName == "Freynor" && player.title == "Royalty" || player.title == "Nobility" && player.raceName == "Freynor" || quests.atalinTeshirAnnexed == true)
                {
                    scenicList.push(new Scenery("item", 1348, 2202, 0, "freynor", ["freydicSword", 1, 0]));
                    scenicList.push(new Scenery("item", 1349, 2256, 0, "freynor", ["arrow", 7, 0]));
                    scenicList.push(new Scenery("item", 1349, 2246, 0, "freynor", ["arrow", 8, 0]));
                    scenicList.push(new Scenery("item", 1349, 2236, 0, "freynor", ["arrow", 7, 0]));
                }
                else
                {
                    scenicList.push(new Scenery("item", 1348, 2202, 0, "freynor", ["freydicSword", 1, -17, "Tor Soldier"]));
                    scenicList.push(new Scenery("item", 1349, 2256, 0, "freynor", ["arrow", 7, -6, "Tor Soldier"]));
                    scenicList.push(new Scenery("item", 1349, 2246, 0, "freynor", ["arrow", 8, -6, "Tor Soldier"]));
                    scenicList.push(new Scenery("item", 1349, 2236, 0, "freynor", ["arrow", 7, -6, "Tor Soldier"]));
                }
                scenicList.push(new Scenery("smallTable", 1530, 2323, -1/2 * Math.PI, 0));
                scenicList.push(new Scenery("stumpStoolSml", 1528, 2285, -1/2 * Math.PI, 0));
                scenicList.push(new Scenery("stumpStoolSml", 1497, 2322, -1/2 * Math.PI, 0));
                scenicList.push(new Scenery("crate", 1532, 2168, -4.38/4 * Math.PI, 1, [1.24]));
                //alchemyshopstuff
                scenicList.push(new Scenery("hearth", 1119, 820, 0/4 * Math.PI, "lit"));
                scenicList.push(new Scenery("woodenBench", 1158, 738, -1 * Math.PI, 0));
                scenicList.push(new Scenery("item", 1158, 738, 0, "freynor", ["rawWolfLiver", 1, -5]));
                scenicList.push(new Scenery("item", 1140, 738, 0, "freynor", ["potionGlass", 1, -2]));
                scenicList.push(new Scenery("item", 1176, 738, 0, "freynor", ["vialOfWater", 1, -3]));
                scenicList.push(new Scenery("item", 1123, 738, 0, "freynor", ["potionGlass", 1, -2]));
                scenicList.push(new Scenery("item", 1194, 739, 0, "freynor", ["salt", 2, -11]));
                scenicList.push(new Scenery("crate", 1107, 671, -5/4 * Math.PI, 2, [1.4]));
                scenicList.push(new Scenery("crate", 1347, 805, 4.1/4 * Math.PI, 2, [1.2]));
                scenicList.push(new Scenery("crate", 1450, 771, 4.9/4 * Math.PI, 1, [1.3]));
                scenicList.push(new Scenery("crate", 1404, 674, 13.91/4 * Math.PI, 2, [1.1]));
                //medlia shop stuff
                scenicList.push(new Scenery("crate", 1497, 2002, 7/4 * Math.PI, 2, [1.51]));
                scenicList.push(new Scenery("crate", 1373, 1983, 6.333/4 * Math.PI, 1, [1.1515]));
                scenicList.push(new Scenery("crate", 1458, 1881, 1.6/4 * Math.PI, 1, [1.41]));
                //smithy's
                scenicList.push(new Scenery("woodenBench", 1394, 1091, -1/2 * Math.PI, 0));
                scenicList.push(new Scenery("item", 1394, 1071, 0, "freynor", ["freydicSword", 1, -17]));
                scenicList.push(new Scenery("item", 1394, 1112, 0, "freynor", ["freydicSword", 1, -17]));
                scenicList.push(new Scenery("woodenBench", 1475, 1091, -1/2 * Math.PI, 0));
                scenicList.push(new Scenery("item", 1475, 1091, 0, "freynor", ["freydicGreatSword", 1, -26]));
                scenicList.push(new Scenery("woodenBench", 1435, 959, -1 * Math.PI, 0));
                scenicList.push(new Scenery("item", 1472, 960, 0, "freynor", ["hammer", 1, -8]));
                scenicList.push(new Scenery("item", 1446, 959, 0, "freynor", ["iron", 1, -7]));
                scenicList.push(new Scenery("item", 1420, 958, 0, "freynor", ["iron", 1, -7]));
                scenicList.push(new Scenery("item", 1393, 962, 0, "freynor", ["steel", 1, -13]));
                scenicList.push(new Scenery("crate", 1346, 973, 0.556781792/4 * Math.PI, 1, [1.55]));
                //Stable
                scenicList.push(new Scenery("crate", 633, 1656, -6/4 * Math.PI, 1, [1.3]));
                scenicList.push(new Scenery("crate", 497, 1604, -1/4 * Math.PI, 1, [1]));
                scenicList.push(new Scenery("crate", 578, 1522, 8/4 * Math.PI, 1, [1.4]));
                scenicList.push(new Scenery("crate", 552, 1659, 1/5 * Math.PI, 1, [1.25]));


                //Signs
                scenicList.push(new Scenery("sign", 1570, 1115, 1/2 * Math.PI, 3, "Svehn's Smithy"));
                scenicList.push(new Scenery("sign", 2792, 1706, 1/2 * Math.PI, 3, "Northfolk Outfitters"));
                scenicList.push(new Scenery("sign", 1583, 2026, 1/2 * Math.PI, 3, "Teshir General Goods"));
                scenicList.push(new Scenery("sign", 1583, 2316, 1/2 * Math.PI, 3, "Teshir City Barracks"));
                scenicList.push(new Scenery("sign", 1484, 1514, 0 * Math.PI, 3, "Teshir City Bank"));
                scenicList.push(new Scenery("sign", 2175, 1657, 0 * Math.PI, 3, "The Harvest's Bounty - Inn"));
                scenicList.push(new Scenery("sign", 1446, 611, 0 * Math.PI, 3, "Bubbling Creations - Alchemy Shop"));
                scenicList.push(new Scenery("sign", 700, 1530, 1/2 * Math.PI, 3, "Teshir Stablehouse"));

                //filler and the rest
                //the inn
                scenicList.push(new Scenery("bartop", 2308, 1736, -1/2 * Math.PI, true));
                scenicList.push(new Scenery("bed", 1985, 1850, 1/2 * Math.PI, false));
                scenicList.push(new Scenery("bed", 2105, 1913, -1/2 * Math.PI, false));
                scenicList.push(new Scenery("hearth", 2186, 1880, 1/2 * Math.PI, "lit"));

                //The Players Home (purchasable)
                if (quests.teshirHomeOwned || quests.atalinTeshirAnnexed == true)
                {
                    scenicList.push(new Scenery("walrusHideRug", 2663, 1989, 0, 1.65));
                    scenicList.push(new Scenery("sign", 2792, 2056, 1/2 * Math.PI, 3, "Fairfield Lodge"));
                    scenicList.push(new Scenery("bed", 2594, 2082, 1/2 * Math.PI, true));
                    scenicList.push(new Scenery("hearth", 2555, 1910, 3/4 * Math.PI, true));
                    scenicList.push(new Scenery("crate", 2731, 2080, 3.5/4 * Math.PI, 3, [1.2, "teshirHomeCrate1", 6, [[new Item("woodenBowl", false, false), 7]], false, 0]));
                }
                else
                {
                    scenicList.push(new Scenery("walrusHideRug", 2663, 1989, 0, 1.65));
                    scenicList.push(new Scenery("sign", 2792, 2056, 1/2 * Math.PI, 3, "For Sale - 6200 coins"));
                    scenicList.push(new Scenery("bed", 2594, 2082, 1/2 * Math.PI, false));
                    scenicList.push(new Scenery("hearth", 2555, 1910, 3/4 * Math.PI, false));
                    scenicList.push(new Scenery("crate", 2731, 2080, 3.5/4 * Math.PI, 1, [1.2]));
                }
                scenicList.push(new Scenery("smallTable", 2679, 1917, 0, 0));
                scenicList.push(new Scenery("stumpStoolSml", 2716, 1916, -4, 0));
                scenicList.push(new Scenery("stumpStoolSml", 2642, 1912, 1, 0));

                if (quests.teshirConverted == true)
                {
                    scenicList.push(new Scenery("nirwadenBuilding5", 500, 2533, 0, true));
                    if (uniqueChars.OrjovTorLDS == false)
                    {
                        scenicList.push(new Scenery("pyre", 562, 2224, 0, false));
                    }
                    if (uniqueChars.bernardoLDS)
                    {
                        var hits = 0;
                        for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                        {
                            if (ArtificialIntelligenceAccess[i].ID == "Bishop Bernardo")
                            {
                                hits += 1;
                                break;
                            }
                        }
                        if (hits == 0)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(333, 2538, "Person", false, "Bishop Bernardo", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenPriestRobes", 0], weapon: ["none", [0.04, 0.05], 0, 0, 1.6], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[368, 2538]]}));
                        }
                        for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                        {
                            if (ArtificialIntelligenceAccess[i].ID == "Bishop Bernardo")
                            {
                                ArtificialIntelligenceAccess[i].healthMAX = 19;
                                ArtificialIntelligenceAccess[i].health = 19;
                                ArtificialIntelligenceAccess[i].magicalResistance = 6;
                                break;
                            }
                        }
                    }
                    if (uniqueChars.aavaiLDS)
                    {
                        var hits = 0;
                        for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                        {
                            if (ArtificialIntelligenceAccess[i].ID == "Aavai the Reformed Northern Bandit")
                            {
                                hits += 1;
                                break;
                            }
                        }
                        if (hits == 0)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(531, 2438, "Soldier", false, "Aavai the Reformed Northern Bandit", {race: "Freynor", faction: "Freynor", con: 5, speed: 0.90, outfit: ["none", 1], weapon: ["none", [0.4, 0.4], 0, 0, 0.95], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: true, route:[[0, 0]]}));
                        }
                    }
                    ArtificialIntelligenceAccess.push(new Unit(480, 2623, "Person", false, "Freynor Villager", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["frichFurClothing", 0], weapon: ["none", [0.25, 0.6], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: false, route:[[2348, 1978]]}));
                    ArtificialIntelligenceAccess.push(new Unit(589, 2475, "Person", false, "Freynor Villager", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["frichFurClothing", 0], weapon: ["none", [0.3, 0.5], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: false, route:[[2289, 1710]]}));
                }
                //The Jarl's Estate
                scenicList.push(new Scenery("freydicBuilding6", -102, 474, 0, true));
                scenicList.push(new Scenery("freydicBuilding7", -338, 127, 0, true));
                scenicList.push(new Scenery("freydicBuilding3", -603, 474, 0, true));
                scenicList.push(new Scenery("woodenGate", -348, 597, 0, true));
                scenicList.push(new Scenery("smallRockCircle", -348 , 464, 4, true));
                scenicList.push(new Scenery("smallRockCircle", -348 , 464, 4 * 1/2 * Math.PI, true));
                scenicList.push(new Scenery("smallRockCircle", -348 , 464, 4 * -1/4 * Math.PI, true));
                if (quests.atalinTeshirAnnexed == true)
                {
                    scenicList.push(new Scenery("tylunPlant", -348 , 464, 4, "nirwaden", "theGreatFlowerOfTheJarlOfTeshir"));
                }
                else
                {
                    scenicList.push(new Scenery("tylunPlant", -348 , 464, 4, "freynor", "theGreatFlowerOfTheJarlOfTeshir"));
                }
                //The noble player's room
                scenicList.push(new Scenery("walrusHideRug", -90, 466, 0, 2));
                if (player.title == "Nobility" && player.raceName == "Freynor" || player.title == "Royalty" && player.raceName == "Freynor" || quests.atalinTeshirAnnexed == true)
                {
                    scenicList.push(new Scenery("hearth", -339, -79, 0, "flame"));
                    scenicList.push(new Scenery("bed", -33, 563, -1/2 * Math.PI, true));
                    scenicList.push(new Scenery("hearth", 0, 471, -1/2 * Math.PI, "flame"));
                }
                else
                {
                    scenicList.push(new Scenery("hearth", -339, -79, 0, "lit"));
                    scenicList.push(new Scenery("bed", -33, 563, -1/2 * Math.PI, false));
                    scenicList.push(new Scenery("hearth", 0, 471, -1/2 * Math.PI, "lit"));
                }
                if (player.gender == "Female" && player.title == "Nobility" && player.raceName == "Freynor" || quests.atalinTeshirAnnexed == true)
                {
                    scenicList.push(new Scenery("loom", -183, 392, 3/4 * Math.PI, true));
                }
                //The Jarls Chamber
                scenicList.push(new Scenery("walrusHideRug", -331, 141, -1/2 * Math.PI, 2.5));
                scenicList.push(new Scenery("feastingTable", -476, 156, -1/2 * Math.PI, true));
                scenicList.push(new Scenery("feastingTable", -187, 156, -1/2 * Math.PI, true));
                scenicList.push(new Scenery("bartop", -335, -3, 0 * Math.PI, true));
                //food occasionally
                if (Math.round(Math.random()))
                {
                    if (player.raceName == "Freynor" && player.title == "Royalty" || player.title == "Nobility" && player.raceName == "Freynor" || quests.atalinTeshirAnnexed == true)
                    {
                        scenicList.push(new Scenery("item", -342, 8, 0, "freynor", ["bearMeat", 1, 0]));
                        scenicList.push(new Scenery("item", -342, 8, 0, "freynor", ["pluttBerries", 2, 0]));
                        scenicList.push(new Scenery("item", -342, 8, 0, "freynor", ["salt", 1, 0]));
                        scenicList.push(new Scenery("item", -360, 5, 0, "freynor", ["pluttWine", 1, 0]));
                        scenicList.push(new Scenery("item", -393, 8, 0, "freynor", ["pluttWine", 1, 0]));
                        if (player.title == "Nobility" && player.raceName == "Freynor")
                        {
                            var rnnd = Math.random();
                            if (rnnd < 0.33)
                            {
                                if (player.gender != "Female")
                                {
                                    scenicList.push(new Scenery("item", -380, 3, 0, "freynor", ["mofuMeat", 1, 0]));
                                }
                                else
                                {
                                    scenicList.push(new Scenery("item", -380, 6, 0, "freynor", ["akerBerries", 1, 0]));
                                    scenicList.push(new Scenery("item", -378, 3, 0, "freynor", ["suuliMelonSlice", 1, 0]));
                                    scenicList.push(new Scenery("item", -386, 3, 0, "freynor", ["suuliMelonSlice", 1, 0]));
                                }
                            }
                            else if (rnnd < 0.667)
                            {
                                scenicList.push(new Scenery("item", -380, 1, 0, "freynor", ["pluttMoffling", 1, 0]));
                            }
                            else
                            {
                                scenicList.push(new Scenery("item", -380, 1, 0, "freynor", ["akerMoffling", 1, 0]));
                            }
                        }
                    }
                    else
                    {
                        scenicList.push(new Scenery("item", -342, 8, 0, "freynor", ["bearMeat", 1, -25]));
                        scenicList.push(new Scenery("item", -342, 8, 0, "freynor", ["pluttBerries", 2, -14]));
                        scenicList.push(new Scenery("item", -342, 8, 0, "freynor", ["salt", 1, -15]));
                        scenicList.push(new Scenery("item", -360, 5, 0, "freynor", ["pluttWine", 1, -16]));
                    }
                }
                //knight/huskarl's quarters
                scenicList.push(new Scenery("hearth", -709, 471, 1/2 * Math.PI, "lit"));
                scenicList.push(new Scenery("crate", -519, 555, 0.012/4 * Math.PI, 1, [1.29]));
                scenicList.push(new Scenery("bed", -545, 388, -1/2 * Math.PI, false));
                scenicList.push(new Scenery("bed", -668, 561, 1/2 * Math.PI, false));
                scenicList.push(new Scenery("bed", -668, 387, 1/2 * Math.PI, false));

                //bandit Camp in the north east
                //tents
                scenicList.push(new Scenery("tent", 74 - 750, 5672, (0.5/5 * 2 * Math.PI), true));
                scenicList.push(new Scenery("tent", 544 - 750, 5618, (4.5/5 * 2 * Math.PI), true));
                scenicList.push(new Scenery("tent", 280 - 750, 5700, 0, true));
                scenicList.push(new Scenery("tent", 255 - 750, 5249, Math.PI, true));
                scenicList.push(new Scenery("tent", -12 - 750, 5426, 1/2 * Math.PI, true));
                //campfire
                scenicList.push(new Scenery("campFire", 248 - 750, 5494, 3/4 * Math.PI, true));
                //Teshir Shop Stuff (outdoor until buildings are added)
                scenicList.push(new Scenery("anvil", 1751, 948, Math.PI * 3.45/4, true));
                scenicList.push(new Scenery("forge", 1770, 1086, Math.PI, true));
                scenicList.push(new Scenery("loom", 2625, 1569, 1/2 * Math.PI, true));
                scenicList.push(new Scenery("lab", 1199, 824, 0, true));
                if (quests.theBrokenWellFixed)
                {
                    scenicList.push(new Scenery("well", 2446, 1712, 0, true));
                }
                else
                {
                    scenicList.push(new Scenery("brokenWell", 2446, 1712, 0, true));
                }

                //The lonely farm house
                scenicList.push(new Scenery("rubbledHome", -1107, -1974, 0, true));
                //its own broken well
                scenicList.push(new Scenery("brokenWell", -1398, -1886, -2.74, true));
                //its little farm
                scenicList.push(new Scenery("harstPlant", -940 , -1944, Math.PI * 0.58, "freynor"));
                scenicList.push(new Scenery("harstPlant", -987 , -2007, Math.PI * 1, "freynor"));
                scenicList.push(new Scenery("harstPlant", -892 , -2019, -Math.PI * 2.2, "freynor"));
                scenicList.push(new Scenery("harstPlant", -822 , -1975, Math.PI * 3, "freynor"));
                scenicList.push(new Scenery("harstPlant", -816 , -2069, -Math.PI * 0.4675, "freynor"));

                if (travelerFood == 1)
                {
                    scenicList.push(new Scenery("item", 2228, 2101, 0, "freynor", ["harstAle", 1, 0, "Traveler"]));
                    scenicList.push(new Scenery("item", 2242, 2098, 0, "freynor", ["frichMeat", 1, 0, "Traveler"]));
                }
                else if (travelerFood == 2)
                {
                    if (Math.round(Math.random()))
                    {
                        scenicList.push(new Scenery("item", 2060, 2074, 0, "freynor", ["pintGlass", 1, 0, "Traveler"]));
                    }
                    else
                    {
                        scenicList.push(new Scenery("item", 2063, 2082, 0, "freynor", ["harstAle", 1, 0, "Traveler"]));
                    }
                }
                else if (travelerFood == 3)
                {
                    scenicList.push(new Scenery("item", 2228, 2101, 0, "freynor", ["santhAle", 1, 0, "Traveler"]));
                    scenicList.push(new Scenery("item", 2242, 2098, 0, "freynor", ["wolfLiver", 1, 0, "Traveler"]));
                }
                else if (travelerFood == 4)
                {
                    scenicList.push(new Scenery("item", 2063, 2082, 0, "freynor", ["frichMeat", 1, 0, "Traveler"]));
                }
                else if (travelerFood == 5)
                {
                    scenicList.push(new Scenery("item", 2343, 1941, 0, "freynor", ["harstAle", 1, 0, "Traveler"]));
                }
                else if (travelerFood == 6)
                {
                    scenicList.push(new Scenery("item", 2041, 1712, 0, "freynor", ["harstAle", 1, 0, "Traveler"]));
                    scenicList.push(new Scenery("item", 2052, 1720, 0, "freynor", ["frichMeat", 1, 0, "Traveler"]));
                }
                else if (travelerFood == 7)
                {
                    scenicList.push(new Scenery("item", 2061, 1710, 0, "orgell", ["walrusMeat", 1, -5, "Traveler"]));
                }
                else if (travelerFood == 9)
                {
                    scenicList.push(new Scenery("item", 2061, 1710, 0, "freynor", ["walrusMeat", 1, 0, "Traveler"]));
                }
                else if (travelerFood == 8)
                {
                    scenicList.push(new Scenery("item", 2342, 1940, 0, "freynor", ["bearMeat", 1, 0, "Traveler"]));
                    scenicList.push(new Scenery("item", 2353, 1932, 0, "freynor", ["harstAle", 1, 0, "Traveler"]));
                }

                scenicList.push(new Scenery("item", 2311, 1709, 0, "freynor", ["harstAle", 1, -3]));

                if (Math.round(Math.random()))
                {
                    scenicList.push(new Scenery("item", 2353, 1951, 0, "freynor", ["pintGlass", 1, -3]));
                }
                else
                {
                    scenicList.push(new Scenery("item", 2353, 1951, 0, "freynor", ["harstAle", 1, -3]));
                }

                //The City Farm
                scenicList.push(new Scenery("harstPlant", 2241 , 240, Math.PI * 0.44, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2241 , 165, Math.PI * 3.1, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2241 , 52, -Math.PI * 3.1, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2241 , -31, Math.PI * 2, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2241 , -107, Math.PI * 2.45, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2241 , -197, -Math.PI * 1.66, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2241 , -286, -Math.PI * 0.1, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2329 , 240, -Math.PI * 2.2, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2329 , 166, Math.PI * 3.1, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2329 , 76, Math.PI * 3.1, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2329 , -17, Math.PI * 3.1, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2329 , -105, Math.PI * 3.1, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2329 , -197, Math.PI * 3.1, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2329 , -297, Math.PI * 3.1, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2422 , 240, Math.PI * 0.05, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2422 , 162, Math.PI * 0.05, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2422 , 71, Math.PI * 0.05, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2422 , -12, Math.PI * 0.05, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2422 , -95, Math.PI * 0.05, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2422 , -195, Math.PI * 0.05, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2422 , -289, Math.PI * 0.05, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2498 , 240, -Math.PI * 1.56, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2498 , 164, -Math.PI * 1.56, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2498 , 59, -Math.PI * 1.56, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2498 , -24, -Math.PI * 1.56, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2498 , -95, -Math.PI * 1.56, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2498 , -192, -Math.PI * 1.56, "freynor"));
                scenicList.push(new Scenery("harstPlant", 2498 , -286, -Math.PI * 1.56, "freynor"));

                scenicList.push(new Scenery("potatoPlant", 2566 , 240, 0, "freynor"));
                scenicList.push(new Scenery("potatoPlant", 2566 , 193, 0, "freynor"));
                scenicList.push(new Scenery("potatoPlant", 2566 , 165, 0, "freynor"));
                scenicList.push(new Scenery("potatoPlant", 2566 , 118, 0, "freynor"));
                scenicList.push(new Scenery("potatoPlant", 2566 , 84, 0, "freynor"));
                scenicList.push(new Scenery("potatoPlant", 2566 , 140, 0, "freynor"));
                scenicList.push(new Scenery("potatoPlant", 2603 , 240, 0, "freynor"));
                scenicList.push(new Scenery("potatoPlant", 2603 , 206, 0, "freynor"));
                scenicList.push(new Scenery("potatoPlant", 2603 , 179, 0, "freynor"));
                scenicList.push(new Scenery("potatoPlant", 2603 , 138, 0, "freynor"));
                scenicList.push(new Scenery("potatoPlant", 2603 , 113, 0, "freynor"));
                scenicList.push(new Scenery("potatoPlant", 2603 , 83, 0, "freynor"));
                scenicList.push(new Scenery("potatoPlant", 2668 , 240, 0, "freynor"));
                scenicList.push(new Scenery("potatoPlant", 2668 , 221, 0, "freynor"));
                scenicList.push(new Scenery("potatoPlant", 2668 , 194, 0, "freynor"));
                scenicList.push(new Scenery("potatoPlant", 2668 , 153, 0, "freynor"));
                scenicList.push(new Scenery("potatoPlant", 2668 , 122, 0, "freynor"));
                scenicList.push(new Scenery("potatoPlant", 2668 , 86, 0, "freynor"));
                scenicList.push(new Scenery("potatoPlant", 2696 , 240, 0, "freynor"));
                scenicList.push(new Scenery("potatoPlant", 2696 , 214, 0, "freynor"));
                scenicList.push(new Scenery("potatoPlant", 2696 , 178, 0, "freynor"));
                scenicList.push(new Scenery("potatoPlant", 2696 , 147, 0, "freynor"));
                scenicList.push(new Scenery("potatoPlant", 2696 , 111, 0, "freynor"));
                scenicList.push(new Scenery("potatoPlant", 2696 , 81, 0, "freynor"));

                scenicList.push(new Scenery("suuliPlant", 2686 , 6, 1, "freynor"));
                scenicList.push(new Scenery("suuliPlant", 2686 , -59, 2, "freynor"));
                scenicList.push(new Scenery("suuliPlant", 2628 , 5, 3, "freynor"));
                scenicList.push(new Scenery("suuliPlant", 2628 , -60, 0, "freynor"));
                scenicList.push(new Scenery("suuliPlant", 2566 , 3, -0.5, "freynor"));
                scenicList.push(new Scenery("suuliPlant", 2566 , -61, 2.34, "freynor"));

                scenicList.push(new Scenery("carrotPlant", 2559 , -138, 1.2, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2559 , -153, -2.1, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2559 , -168, -1.2, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2559 , -183, 3, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2559 , -198, 1.78, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2559 , -213, -0.4, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2559 , -228, -3, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2559 , -243, -1.2, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2559 , -258, 3, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2559 , -273, 1.78, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2559 , -288, -0.4, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2559 , -303, -3, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2624 , -138, -0.9, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2624 , -153, -2.8, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2624 , -168, -1.9, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2624 , -183, -2, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2624 , -198, 2.34, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2624 , -213, 0.5, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2624 , -228, 1, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2624 , -243, 0, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2624 , -258, 0.1, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2624 , -273, -0.95, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2624 , -288, -3.214, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2624 , -303, 2.867, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2680 , -138, -1.8, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2680 , -153, 2.1, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2680 , -168, -1.5667, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2680 , -183, 0, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2680 , -198, 1.3, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2680 , -213, 0.4, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2680 , -228, 3, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2680 , -243, -1.5, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2680 , -258, 1.5, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2680 , -273, 1.89, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2680 , -288, -0.21, "freynor"));
                scenicList.push(new Scenery("carrotPlant", 2680 , -303, 0.3, "freynor"));

                scenicList.push(new Scenery("santhPlant", 2763 , -310, Math.PI * 0.14, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2763 , -285, -Math.PI * 0.44, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2763 , -260, Math.PI * 1.8, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2763 , -235, -Math.PI * 2.34, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2763 , -210, Math.PI * 0.44, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2763 , -185, Math.PI * 0.14, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2763 , -160, -Math.PI * 0.44, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2763 , -135, Math.PI * 1.8, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2763 , -110, -Math.PI * 2.34, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2763 , -85, Math.PI * 3.2, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2823 , -310, Math.PI * 0.14, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2823 , -285, -Math.PI * 0.44, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2823 , -260, Math.PI * 1.8, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2823 , -235, -Math.PI * 2.34, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2823 , -210, Math.PI * 0.44, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2823 , -185, Math.PI * 0.14, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2823 , -160, -Math.PI * 0.44, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2823 , -135, Math.PI * 1.8, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2823 , -110, -Math.PI * 2.34, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2823 , -85, Math.PI * 3.2, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2883 , -310, Math.PI * 0.14, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2883 , -285, -Math.PI * 0.44, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2883 , -260, Math.PI * 1.8, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2883 , -235, -Math.PI * 2.34, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2883 , -210, Math.PI * 0.44, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2883 , -185, Math.PI * 0.14, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2883 , -160, -Math.PI * 0.44, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2883 , -135, Math.PI * 1.8, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2883 , -110, -Math.PI * 2.34, "freynor"));
                scenicList.push(new Scenery("santhPlant", 2883 , -85, Math.PI * 3.2, "freynor"));

                //plains plants
                scenicList.push(new Scenery("techiPlant", 3781 , -1155, -Math.PI * 0.2, true));
                scenicList.push(new Scenery("techiPlant", 5001 , 164, Math.PI * 0.5, true));
                scenicList.push(new Scenery("techiPlant", 6014 , -1047, 3, true));
                scenicList.push(new Scenery("techiPlant", 3021 , -2478, 1, true));
                scenicList.push(new Scenery("techiPlant", 3068 , -2418, Math.PI * 9.1, true));
                scenicList.push(new Scenery("techiPlant", 6018 , -2253, 2, true));
                scenicList.push(new Scenery("techiPlant", 5689 , 3451, Math.PI * 1.7, true));
                scenicList.push(new Scenery("techiPlant", 2937 , 5977, Math.PI * 0.66, true));
                scenicList.push(new Scenery("techiPlant", -1057 , 2813, Math.PI * 3.8, true));
                scenicList.push(new Scenery("techiPlant", -62 , -46, Math.PI * -62.46, true));

                if (player.gamemode == "MRB")
                {
                    scenicList.push(new Scenery("mrbAssets", 2116, 2253, 1/2 * Math.PI, 1, [2, 6960.7891866820155, -232268.61677319987, "mrbHQ"]));
                }

                change = "central";
            }
        }
        else if (region == "n1w1") //Y > 6290 && Y < 32370
        {
            if (change != "n1w1")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                //meant for the map
                //balkur
                //ArtificialIntelligenceAccess.push(new Unit(-2158, 13626, "Balkur", false, "Tiitvehlesh"));

                //waanti
                //ArtificialIntelligenceAccess.push(new Unit(323, 15308, "Waanti", true, "Goablt"));

                //winter wolves
                //ArtificialIntelligenceAccess.push(new Unit(4659, 8375, "WinterWolf", false, "Dogmeat"));

                //glutids
                //ArtificialIntelligenceAccess.push(new Unit(2255, 10148, "Glutid", true, "Glup", {patrolStops: 5, patrolLoop: true, route:[[1741, 10369], [1898, 9900], [1602, 9909], [1635, 10189], [2255, 10148]]}));

                //Scenery
                //scenicList.push(new Scenery("bushkaPlant", 576, 8067, 2.5, true));
                //scenicList.push(new Scenery("wightbloomPlant", 611 , 15616, 5, true));

                scenicList.push(new Scenery("darkStone",15318.228569826544, 8056.846598629125, -4.5, 1.5, 2));
                scenicList.push(new Scenery("darkStone", 11546.757294639594, 9922.21566342075, -2.45, 1.5, 2));
                scenicList.push(new Scenery("stone", 10856.254759272359, 11695.743612505914, 2.19, 2.5, 1));
                scenicList.push(new Scenery("stone", 12201.917266253942, 15422.445220748885, -1.19, 2, 3));
                scenicList.push(new Scenery("stone", 16108.926125953518, 11749.559296933905, -1.19, 4, 2));
                scenicList.push(new Scenery("darkStone", 13549.453649904517, 12110.514672395324, 11, 1.5, 1));
                scenicList.push(new Scenery("stone", 9103.845959355775, 10787.810568983634, -1.19, 1.5, 2));


                ArtificialIntelligenceAccess.push(new Unit(16067.11456732482, 7575.977438270176, "MountainFrich", false, "lstnonerth1"));


                ArtificialIntelligenceAccess.push(new Unit(8650.867135320244, 15748.306078912403, "WinterWolf", false, "lstinsow1"));
                ArtificialIntelligenceAccess.push(new Unit(8833.364481449378, 15652.945643472942, "WinterWolf", false, "lstinsow2"));
                ArtificialIntelligenceAccess.push(new Unit(16252.301717276636, 9275.597011148186, "WinterWolf", false, "lstinwentr1"));
                ArtificialIntelligenceAccess.push(new Unit(16017.100557089088, 9078.331207576335, "WinterWolf", true, "lstinwentrmuth"));
                ArtificialIntelligenceAccess.push(new Unit(16084.440101267981, 9163.152992812165, "WinterWolf", false, "lstinwentr2"));
                ArtificialIntelligenceAccess.push(new Unit(15897.25191882054, 9184.697763063614, "WinterWolf", false, "lstinwentr3"));
                ArtificialIntelligenceAccess.push(new Unit(15763.83266045582, 8865.010621447256, "WinterWolf", false, "lstinwentr4"));
                ArtificialIntelligenceAccess.push(new Unit(15769.48719279765, 9067.135555023144, "WinterWolf", false, "lstinwentr5"));
                ArtificialIntelligenceAccess.push(new Unit(11397.245011105077, 14060.272120928526, "WinterWolf", false, "lstinicecrys1"));
                ArtificialIntelligenceAccess.push(new Unit(11163.614322114578, 13934.084859508233, "WinterWolf", false, "lstinicecrys2"));
                ArtificialIntelligenceAccess.push(new Unit(11297.266752018977, 13850.421336181624, "WinterWolf", false, "lstinicecrys3"));
                ArtificialIntelligenceAccess.push(new Unit(10456.141046274734, 11591.349243290699, "WinterWolf", false, "lstinmplsyrip1"));
                ArtificialIntelligenceAccess.push(new Unit(10696.843732873744, 11672.877305922137, "WinterWolf", false, "lstinmplsyrip2"));
                ArtificialIntelligenceAccess.push(new Unit(10693.74804041502, 11796.253293105223, "WinterWolf", false, "lstinmplsyrip3"));
                ArtificialIntelligenceAccess.push(new Unit(10856.254759272359, 11695.743612505914, "WinterWolf", false, "lstinmplsyrip4"));


                ArtificialIntelligenceAccess.push(new Unit(7750, 12984, "WinterWolf", false, "lstinwentr3"));
                ArtificialIntelligenceAccess.push(new Unit(7653, 13455, "WinterWolf", false, "lstinwentr4"));


                ArtificialIntelligenceAccess.push(new Unit(12376.523993899022, 8243.563984321085, "Glutid", false, "firNatat1"));
                ArtificialIntelligenceAccess.push(new Unit(11039.586775372409, 15986.629608466079, "Glutid", false, "firNatat2"));
                ArtificialIntelligenceAccess.push(new Unit(11245.464883850309, 15645.740086003992, "Glutid", false, "firNatat3"));


                ArtificialIntelligenceAccess.push(new Unit(15570.339197603756, 14650.45718221831, "Waanti", false, "ydleleloo1"));
                ArtificialIntelligenceAccess.push(new Unit(15008.793141878725, 14499.21820699782, "Waanti", true, "ydleleloo2"));
                ArtificialIntelligenceAccess.push(new Unit(14860.989415219557, 14587.435524580458, "Waanti", "baby", "ydleleloo3"));
                ArtificialIntelligenceAccess.push(new Unit(14427.98439274702, 15072.401206024557, "Waanti", false, "ydleleloo4"));
                ArtificialIntelligenceAccess.push(new Unit(14752.273737650828, 15164.343707482367, "Waanti", false, "ydleleloo5"));
                ArtificialIntelligenceAccess.push(new Unit(14818.740550526118, 15095.07487873786, "Waanti", "baby", "ydleleloo6"));
                ArtificialIntelligenceAccess.push(new Unit(15695.138122706598, 15350.785648802674, "Waanti", true, "ydleleloo7"));
                ArtificialIntelligenceAccess.push(new Unit(14479.462894504624, 15267.287130329823, "Waanti", true, "ydleleloo8"));
                ArtificialIntelligenceAccess.push(new Unit(15566.027520576292, 15232.016075112875, "Waanti", false, "ydleleloo9"));
                ArtificialIntelligenceAccess.push(new Unit(15133.02135125285, 14806.116299535423, "Waanti", false, "ydleleloo10"));
                ArtificialIntelligenceAccess.push(new Unit(15048.800292802935, 15322.160353147583, "Waanti", false, "ydleleloo11"));
                ArtificialIntelligenceAccess.push(new Unit(8724.757450605708, 14337.395350097036, "Waanti", false, "Gothrdloanly1"));
                ArtificialIntelligenceAccess.push(new Unit(8567.345471777382, 14276.609981381416, "Waanti", true, "Gothrdloanly2"));
                ArtificialIntelligenceAccess.push(new Unit(8681.945427979472, 14284.252538727673, "Waanti", "baby", "Gothrdloanly3"));


                ArtificialIntelligenceAccess.push(new Unit(15858.369449530492, 11509.279852484511, "Balkur", false, "Hunpryclws"));


                scenicList.push(new Scenery("wightbloomPlant", 14934.371305467583, 9118.072157479264, 2.5, true));
                scenicList.push(new Scenery("wightbloomPlant", 9579.541758714351, 16023.122943428982, 3, true));


                scenicList.push(new Scenery("bushkaPlant", 11892.601449495927, 8484.425475508762, 1, true));
                scenicList.push(new Scenery("bushkaPlant", 9874.515200136972, 14307.27500104145, 2, true));
                scenicList.push(new Scenery("bushkaPlant", 8468.369856819632, 11899.002451265527, 4, true));
                scenicList.push(new Scenery("bushkaPlant", 11427.814519139989, 12417.908999379171, 1.5, true));
                scenicList.push(new Scenery("bushkaPlant", 12358.304594790208, 15268.242792566381, 1.8, true));
                scenicList.push(new Scenery("bushkaPlant", 15830.665680671083, 14837.068739704257, -9.8, true));
                scenicList.push(new Scenery("bushkaPlant", 14939.226320523008, 11920.739539445425, -4.8, true));

                //Seguidores del Hielo
                ArtificialIntelligenceAccess.push(new Unit(9000, 10000, "HyelingSoldier", true, "Frost Maw"));
                ArtificialIntelligenceAccess.push(new Unit(8900, 10100, "HyelingSoldier", false, "Long Tooth"));
                ArtificialIntelligenceAccess.push(new Unit(9584, 9046, "Hyeling", "baby", "Cold Cloth"));
                ArtificialIntelligenceAccess.push(new Unit(9498, 8856, "Hyeling", false, "Old Eyes"));
                ArtificialIntelligenceAccess.push(new Unit(10041, 8746, "Hyeling", true, "White Hammer"));
                ArtificialIntelligenceAccess.push(new Unit(9711, 8503, "HyelingSoldier", false, "Running Stone"));
                scenicList.push(new Scenery("largeCeremonialRockCircle", 10075 , 8783, 0, true));
                scenicList.push(new Scenery("hyelingTent", 9199 , 8965, 1/2 * Math.PI, true));
                scenicList.push(new Scenery("hyelingTent", 9677 , 9170, -1/11 * Math.PI, true));
                scenicList.push(new Scenery("hyelingTent", 10800 , 8897, -1/2 * Math.PI, true));
                scenicList.push(new Scenery("hyelingTent", 10458 , 8363, -3/5 * Math.PI, true));


                change = "n1w1";
            }
        }
        else if (region == "n1") //Y > 6290 && Y < 32370
        {
            if (change != "n1")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                //meant for the map
                //balkur
                ArtificialIntelligenceAccess.push(new Unit(5432, 15332, "Balkur", true, "Tiitvehlesh"));
                ArtificialIntelligenceAccess.push(new Unit(-396, 15991, "Balkur", false, "Tiitvehlesh"));
                ArtificialIntelligenceAccess.push(new Unit(-2158, 13626, "Balkur", false, "Tiitvehlesh"));

                //waanti
                ArtificialIntelligenceAccess.push(new Unit(323, 15308, "Waanti", true, "Goablt"));
                ArtificialIntelligenceAccess.push(new Unit(-693, 14241, "Waanti", true, "golabtlt"));
                ArtificialIntelligenceAccess.push(new Unit(110, 14479, "Waanti", false, "hablyem"));
                ArtificialIntelligenceAccess.push(new Unit(614, 14798, "Waanti", false, "yematlt"));
                ArtificialIntelligenceAccess.push(new Unit(219, 14191, "Waanti", "baby", "yem"));
                ArtificialIntelligenceAccess.push(new Unit(853, 14583, "Waanti", "baby", "yatlt"));
                ArtificialIntelligenceAccess.push(new Unit(19, 13961, "Waanti", false, "yetlat"));
                ArtificialIntelligenceAccess.push(new Unit(645, 14231, "Waanti", true, "Lebyetlt"));
                ArtificialIntelligenceAccess.push(new Unit(4965, 12265, "Waanti", true, "Kajlabtlt"));
                ArtificialIntelligenceAccess.push(new Unit(5334, 12140, "Waanti", false, "yablyem"));
                ArtificialIntelligenceAccess.push(new Unit(5037, 12049, "Waanti", false, "kematlt"));
                ArtificialIntelligenceAccess.push(new Unit(4620, 11851, "Waanti", "baby", "jemsi"));
                ArtificialIntelligenceAccess.push(new Unit(-2041, 7579, "Waanti", true, "Febyektl"));

                //winter wolves
                ArtificialIntelligenceAccess.push(new Unit(4659, 8375, "WinterWolf", false, "Dogmeat"));
                ArtificialIntelligenceAccess.push(new Unit(4345, 8849, "WinterWolf", false, "Husky"));
                ArtificialIntelligenceAccess.push(new Unit(3674, 8607, "WinterWolf", false, "German"));
                ArtificialIntelligenceAccess.push(new Unit(5676, 9600, "WinterWolf", true, "Ghost"));
                ArtificialIntelligenceAccess.push(new Unit(-1466, 9900, "WinterWolf", false, "Russia"));
                ArtificialIntelligenceAccess.push(new Unit(-2484, 9430, "WinterWolf", false, "Icepaw"));
                ArtificialIntelligenceAccess.push(new Unit(-1447, 9055, "WinterWolf", false, "Eski"));
                ArtificialIntelligenceAccess.push(new Unit(629, 10673, "WinterWolf", false, "Moaba"));
                ArtificialIntelligenceAccess.push(new Unit(198, 10037, "WinterWolf", false, "Alaska"));
                ArtificialIntelligenceAccess.push(new Unit(6290, 8636, "WinterWolf", false, "Everest"));

                ArtificialIntelligenceAccess.push(new Unit(7750, 12984, "WinterWolf", false, "lstinwentr3"));
                ArtificialIntelligenceAccess.push(new Unit(7653, 13455, "WinterWolf", false, "lstinwentr4"));

                //glutids
                ArtificialIntelligenceAccess.push(new Unit(-275, 9055, "Glutid", "massive", "Glub", {patrolStops: 4, patrolLoop: true, route:[[-1071, 9239], [-1003, 9594], [-75, 9913], [-275, 9055]]}));
                ArtificialIntelligenceAccess.push(new Unit(2255, 10148, "Glutid", true, "Glup", {patrolStops: 5, patrolLoop: true, route:[[1741, 10369], [1898, 9900], [1602, 9909], [1635, 10189], [2255, 10148]]}));
                ArtificialIntelligenceAccess.push(new Unit(5175, 12158, "Glutid", false, "Glip", {patrolStops: 3, patrolLoop: true, route:[[4509, 12083], [5073, 12453], [5175, 12158]]}));

                //Scenery
                scenicList.push(new Scenery("bushkaPlant", 576, 8067, 2.5, true));
                scenicList.push(new Scenery("bushkaPlant", -930 , 11917, -1, true));
                scenicList.push(new Scenery("wightbloomPlant", -1508 , 14448, 0, true));
                scenicList.push(new Scenery("wightbloomPlant", 611 , 15616, 5, true));
                scenicList.push(new Scenery("bushkaPlant", 5101 , 14837, -3.2, true));
                scenicList.push(new Scenery("bushkaPlant", 4226 , 13450, 0, true));
                scenicList.push(new Scenery("wightbloomPlant", 5400 , 10239, -4, true));
                scenicList.push(new Scenery("bushkaPlant", -1811 , 15449, -1.5, true));


                //Seguidores del Hielo
                //ArtificialIntelligenceAccess.push(new Unit(9000, 10000, "HyelingSoldier", true, "Frost Maw"));
                //ArtificialIntelligenceAccess.push(new Unit(8900, 10100, "HyelingSoldier", false, "Long Tooth"));
                //ArtificialIntelligenceAccess.push(new Unit(9584, 9046, "Hyeling", "baby", "Cold Cloth"));
                //ArtificialIntelligenceAccess.push(new Unit(9498, 8856, "Hyeling", false, "Old Eyes"));
                //ArtificialIntelligenceAccess.push(new Unit(10041, 8746, "Hyeling", true, "White Hammer"));
                //ArtificialIntelligenceAccess.push(new Unit(9711, 8503, "HyelingSoldier", false, "Running Stone"));
                //scenicList.push(new Scenery("largeCeremonialRockCircle", 10075 , 8783, 0, true));
                //scenicList.push(new Scenery("hyelingTent", 9199 , 8965, 1/2 * Math.PI, true));
                //scenicList.push(new Scenery("hyelingTent", 9677 , 9170, -1/11 * Math.PI, true));
                //scenicList.push(new Scenery("hyelingTent", 10800 , 8897, -1/2 * Math.PI, true));
                //scenicList.push(new Scenery("hyelingTent", 10458 , 8363, -3/5 * Math.PI, true));


                change = "n1";
            }
        }
        else if (region == "n2")
        {
            if (change != "n2")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                //meant for the map

                //humans
                //walrus stuff merchant
                if (uniqueChars.hetmerLDS == false)
                {
                    if (Math.random() < 0.2)
                    {
                        if (change == "n1")
                        {
                            ArtificialIntelligenceAccess.push(new Unit(1714, 27290, "Person", false, "Freydic Merchant", {race: "Freynor", faction: "Freynor", personality: "scared", outfit: ["winterWolfClothing", 0], weapon: ["none", [0.4, 0.6], 0, 0, 1.15], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 6, patrolLoop: false, route:[[1720, 1939], [1488, 1939], [1714, 1939], [1714, 1457], [1730, 1187], [1734, 1192]], merchant: true, merchandise: [[new Item("coins", false, false), 18], [new Item("walrusTusks", false, false), 2], [new Item("rawWalrusFlesh", false, false), 3], [new Item("walrusHide", false, false), 2], [new Item("blubber", false, false), 5]]}));
                            for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                            {
                                if (ArtificialIntelligenceAccess[i].ID == "Freydic Merchant")
                                {
                                    ArtificialIntelligenceAccess[i].speed = 1.05;
                                    ArtificialIntelligenceAccess[i].healthMAX = 9;
                                    ArtificialIntelligenceAccess[i].health = 9;
                                    break;
                                }
                            }
                            ArtificialIntelligenceAccess.push(new Unit(1740, 27200, "Soldier", false, "Hired Blade", {race: "Freynor", faction: "Freynor", con: 3, speed: 1.05, outfit: ["walrusLeatherArmour", 4], weapon: ["freydicSword", [4, 4], 0, 16, 1.1], ranged: [false, "arrow", 4, 1500, 1, 4, 0, "none", 2], patrolStops: 4, patrolLoop: true, route:[[1746, 1939], [1740, 1457], [1756, 1187], [1760, 1190]]}));
                        }
                    }
                }

                //balkur
                if (this.change != "n3")
                {
                    ArtificialIntelligenceAccess.push(new Unit(-1455, 26201, "Balkur", false, "Tivilesh"));
                }
                else if (this.change != "n2e1")
                {
                    ArtificialIntelligenceAccess.push(new Unit(-2227, 24702, "Balkur", true, "Tivel"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(-2601, 25894, "WinterWolf", false, "Lusgya"));
                    ArtificialIntelligenceAccess.push(new Unit(-1989, 25549, "WinterWolf", false, "Lusgo"));
                    ArtificialIntelligenceAccess.push(new Unit(-1574, 25983, "WinterWolf", false, "Lusga"));
                    ArtificialIntelligenceAccess.push(new Unit(-740, 26220, "WinterWolf", false, "Lusgor"));
                }
                //waanti
                ArtificialIntelligenceAccess.push(new Unit(2658, 24515, "Waanti", "baby", "yiim"));
                ArtificialIntelligenceAccess.push(new Unit(2831, 24278, "Waanti", true, "Jilm"));
                ArtificialIntelligenceAccess.push(new Unit(2856, 24679, "Waanti", false, "Gemela"));
                ArtificialIntelligenceAccess.push(new Unit(5475, 23502, "Waanti", true, "Halm"));
                ArtificialIntelligenceAccess.push(new Unit(4605, 25537, "Waanti", false, "Gemala"));
                ArtificialIntelligenceAccess.push(new Unit(5266, 25378, "Waanti", true, "Holm"));
                ArtificialIntelligenceAccess.push(new Unit(-14, 22543, "Waanti", "baby", "yaam"));
                ArtificialIntelligenceAccess.push(new Unit(438, 22293, "Waanti", true, "Kilmi"));
                ArtificialIntelligenceAccess.push(new Unit(227, 22115, "Waanti", false, "Gemelia"));
                ArtificialIntelligenceAccess.push(new Unit(367, 22857, "Waanti", true, "Helm"));
                ArtificialIntelligenceAccess.push(new Unit(-754, 22419, "Waanti", "baby", "yaant"));
                ArtificialIntelligenceAccess.push(new Unit(-1304, 22980, "Waanti", true, "Kilmikan"));
                ArtificialIntelligenceAccess.push(new Unit(-1153, 22410, "Waanti", false, "Gemelaya"));
                ArtificialIntelligenceAccess.push(new Unit(533, 23721, "Waanti", false, "Gemayla"));

                //koobu
                ArtificialIntelligenceAccess.push(new Unit(-917, 19442, "Koobu", false, "Kipper"));

                //winter wolves
                //Southwesterly woof pak... Represent!
                if (this.change != "n1" && this.change != "n2w1")
                {
                    ArtificialIntelligenceAccess.push(new Unit(6199, 16919, "WinterWolf", true, "Husky"));
                    ArtificialIntelligenceAccess.push(new Unit(6605, 16771, "WinterWolf", false, "Husgy"));
                    ArtificialIntelligenceAccess.push(new Unit(6493, 17189, "WinterWolf", false, "Husgo"));
                    ArtificialIntelligenceAccess.push(new Unit(5851, 17051, "WinterWolf", false, "Husga"));
                    ArtificialIntelligenceAccess.push(new Unit(6259, 16641, "WinterWolf", false, "Husgor"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(5824, 17987, "WinterWolf", true, "Husgol"));
                    ArtificialIntelligenceAccess.push(new Unit(5685, 17633, "WinterWolf", false, "Husgorr"));
                }
                //mid west group
                ArtificialIntelligenceAccess.push(new Unit(3537, 21261, "WinterWolf", false, "Hasga"));
                ArtificialIntelligenceAccess.push(new Unit(4215, 21803, "WinterWolf", false, "Hasgora"));
                ArtificialIntelligenceAccess.push(new Unit(4546, 19176, "WinterWolf", false, "Holsgor"));
                //mideasterly woofs
                ArtificialIntelligenceAccess.push(new Unit(119, 24403, "WinterWolf", false, "Lusgora"));
                ArtificialIntelligenceAccess.push(new Unit(-2350, 17359, "WinterWolf", false, "Lusgorr"));

                //glutids
                ArtificialIntelligenceAccess.push(new Unit(6317, 21218, "Glutid", true, "Gluptard", {patrolStops: 5, patrolLoop: true, route:[[6037, 21507], [6833, 21852], [6568, 22378], [7140, 22077], [6317, 21218]]}));
                ArtificialIntelligenceAccess.push(new Unit(6021, 26071, "Glutid", false, "Gluptario", {patrolStops: 3, patrolLoop: true, route:[[6709, 26233], [6448, 26854], [6021, 26071]]}));
                ArtificialIntelligenceAccess.push(new Unit(6293, 26383, "Glutid", false, "Gluptaria", {patrolStops: 1, patrolLoop: true, route:[[6293, 26383]]}));
                ArtificialIntelligenceAccess.push(new Unit(2674, 17194, "Glutid", false, "Gluptariela", {patrolStops: 1, patrolLoop: true, route:[[2674, 17194]]}));
                ArtificialIntelligenceAccess.push(new Unit(2874, 20010, "Glutid", true, "Gluptiel", {patrolStops: 2, patrolLoop: true, route:[[3445, 19710], [2874, 20010]]}));

                //Scenery
                scenicList.push(new Scenery("bushkaPlant", 5940, 17870, -1.5, true));
                scenicList.push(new Scenery("bushkaPlant", 2608, 24656, 8, true));
                scenicList.push(new Scenery("bushkaPlant", 202, 23641, -5.2, true));

                scenicList.push(new Scenery("wightbloomPlant", 5160 , 26153, 0.25, true));
                scenicList.push(new Scenery("wightbloomPlant", -2114 , 25954, -3, true));
                scenicList.push(new Scenery("wightbloomPlant", -1606 , 22788, -4.78, true));

                scenicList.push(new Scenery("tyrniPlant", 3391, 22531, 0, true));
                scenicList.push(new Scenery("tyrniPlant", -1157, 25240, -5.5, true));

                scenicList.push(new Scenery("stone", -1033 , 22648, 6, 1, 1));
                scenicList.push(new Scenery("stone", -949 , 22322, 4, 0.5, 3));
                scenicList.push(new Scenery("stone", 56 , 23763, 2, 1.5, 1));

                //Hyeling Camps
                //ArtificialIntelligenceAccess.push(new Unit(10041, 8746, "Hyeling", true, "White Hammer"));
                //ArtificialIntelligenceAccess.push(new Unit(9711, 8503, "HyelingSoldier", false, "Running Stone"));
                //scenicList.push(new Scenery("largeCeremonialRockCircle", 10075 , 8783, 0, true));
                //scenicList.push(new Scenery("hyelingTent", 9199 , 8965, 1/2 * Math.PI, true));
                //scenicList.push(new Scenery("hyelingSkeleton", 10071 , 8788, 0.12, true));

                change = "n2";
            }
        }
        else if (region == "n3")
        {
            if (change != "n3")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                //meant for the map

                //humans

                //balkur
                if (Math.round(Math.random()))
                {
                    ArtificialIntelligenceAccess.push(new Unit(6014, 29100, "Balkur", true, "Kalovesh"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(6014, 29100, "Balkur", false, "Kalobech"));
                }
                ArtificialIntelligenceAccess.push(new Unit(4674, 34221, "Balkur", true, "Kalobesh"));

                //waanti
                ArtificialIntelligenceAccess.push(new Unit(6268, 30642, "Waanti", "baby", "yiam"));
                ArtificialIntelligenceAccess.push(new Unit(6037, 30878, "Waanti", "baby", "yiom"));
                ArtificialIntelligenceAccess.push(new Unit(6022, 30704, "Waanti", "baby", "yiilmera"));
                ArtificialIntelligenceAccess.push(new Unit(6330, 31214, "Waanti", false, "Ilmurdara"));
                ArtificialIntelligenceAccess.push(new Unit(5665, 30990, "Waanti", false, "Genjura"));
                ArtificialIntelligenceAccess.push(new Unit(5449, 30427, "Waanti", true, "Jolhaffsmur"));
                ArtificialIntelligenceAccess.push(new Unit(6642, 32479, "Waanti", true, "Jolhaffsmuro"));
                ArtificialIntelligenceAccess.push(new Unit(2067, 32440, "Waanti", false, "Genjuraya"));
                ArtificialIntelligenceAccess.push(new Unit(1969, 32293, "Waanti", true, "Ialhoffsmurre"));
                ArtificialIntelligenceAccess.push(new Unit(253, 34639, "Waanti", "baby", "yiaam"));
                ArtificialIntelligenceAccess.push(new Unit(-16, 34447, "Waanti", "baby", "yialmera"));
                ArtificialIntelligenceAccess.push(new Unit(431, 34196, "Waanti", false, "Almurdara"));
                ArtificialIntelligenceAccess.push(new Unit(84, 34672, "Waanti", false, "Jenjura"));
                ArtificialIntelligenceAccess.push(new Unit(-207, 34260, "Waanti", true, "Golhaffsmur"));
                ArtificialIntelligenceAccess.push(new Unit(-31, 33917, "Waanti", true, "Holhaffsmuro"));
                ArtificialIntelligenceAccess.push(new Unit(545, 34903, "Waanti", false, "Lenjurara"));
                ArtificialIntelligenceAccess.push(new Unit(-40, 35098, "Waanti", true, "Falhoffsmurrek"));
                ArtificialIntelligenceAccess.push(new Unit(322, 29192, "Waanti", false, "Lenjura"));
                ArtificialIntelligenceAccess.push(new Unit(-411, 29166, "Waanti", "baby", "Lolhaffsmur"));
                ArtificialIntelligenceAccess.push(new Unit(65, 28751, "Waanti", true, "Hiolhaffsmuro"));
                ArtificialIntelligenceAccess.push(new Unit(-50, 28988, "Waanti", false, "Thenjurara"));
                ArtificialIntelligenceAccess.push(new Unit(-343, 28802, "Waanti", true, "Thalhoffsmurrek"));
                ArtificialIntelligenceAccess.push(new Unit(-1944, 28046, "Waanti", "baby", "Lalhaffsmur"));
                ArtificialIntelligenceAccess.push(new Unit(-2338, 28313, "Waanti", true, "Hialhaffsmuro"));
                ArtificialIntelligenceAccess.push(new Unit(-2464, 27845, "Waanti", false, "Thanara"));
                ArtificialIntelligenceAccess.push(new Unit(-1850, 28239, "Waanti", false, "Thihoffsmurrek"));

                if (change != "n4")
                {
                    ArtificialIntelligenceAccess.push(new Unit(1523, 37117, "Waanti", true, "Hioulhioffsmurre"));
                    ArtificialIntelligenceAccess.push(new Unit(1484, 37247, "Waanti", false, "Hioulhioffsmurre"));

                    ArtificialIntelligenceAccess.push(new Unit(2025, 37205, "Waanti", "baby", "Lalhaffsmur"));
                    ArtificialIntelligenceAccess.push(new Unit(2157, 37116, "Waanti", false, "Thanara"));
                }
                if (Math.round(Math.random() * 4) == 1)
                {
                    ArtificialIntelligenceAccess.push(new Unit(2026, 36815, "Waanti", true, "Hialhaffsmuro"));
                }

                //koobu
                ArtificialIntelligenceAccess.push(new Unit(3997, 27954, "Koobu", true, "Kapper"));
                ArtificialIntelligenceAccess.push(new Unit(4653, 28074, "Koobu", false, "Keppler"));
                if (Math.round(Math.random()))
                {
                    ArtificialIntelligenceAccess.push(new Unit(2957, 29014, "Koobu", false, "Kippler"));
                }

                if (Math.round(Math.random()))
                {
                    ArtificialIntelligenceAccess.push(new Unit(-2090, 34378, "Koobu", false, "Kouppler"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(-2090, 34378, "Koobu", true, "Kauppler"));
                }

                if (Math.round(Math.random()))
                {
                    ArtificialIntelligenceAccess.push(new Unit(-2381, 33953, "Koobu", false, "Kuppler"));
                }
                ArtificialIntelligenceAccess.push(new Unit(934, 30135, "Koobu", false, "Kilppar"));


                //winter wolves
                if (change != "n2")
                {
                    ArtificialIntelligenceAccess.push(new Unit(4605, 27278, "WinterWolf", false, "Lusgorre"));
                    if (change == "n4")
                    {
                        ArtificialIntelligenceAccess.push(new Unit(5054, 27117, "WinterWolf", false, "Lusgorria"));
                        ArtificialIntelligenceAccess.push(new Unit(4743, 27010, "WinterWolf", false, "Lusgorrial"));
                    }
                }
                if (Math.round(Math.random() * 5) == 4)
                {
                    ArtificialIntelligenceAccess.push(new Unit(4562, 29644, "WinterWolf", false, "Lusgorrai"));
                    ArtificialIntelligenceAccess.push(new Unit(4207, 29666, "WinterWolf", false, "Lusgorriel"));
                }
                ArtificialIntelligenceAccess.push(new Unit(2905, 36769, "WinterWolf", false, "Lusgorraiya"));

                if (change != "n3w1")
                {
                    ArtificialIntelligenceAccess.push(new Unit(6161, 36572, "WinterWolf", true, "Lusgorrielle"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(6228, 36216, "WinterWolf", false, "Losgorrailia"));
                    ArtificialIntelligenceAccess.push(new Unit(5691, 36371, "WinterWolf", false, "Lisgorriellia"));
                }
                ArtificialIntelligenceAccess.push(new Unit(35, 32208, "WinterWolf", false, "Luusgorrail"));
                ArtificialIntelligenceAccess.push(new Unit(-90, 31873, "WinterWolf", false, "Laasgorriellia"));
                ArtificialIntelligenceAccess.push(new Unit(145, 31910, "WinterWolf", false, "Liusgorrailia"));
                ArtificialIntelligenceAccess.push(new Unit(-387, 32016, "WinterWolf", false, "Loisgorrielle"));
                ArtificialIntelligenceAccess.push(new Unit(-535, 31680, "WinterWolf", false, "Laugorrel"));

                ArtificialIntelligenceAccess.push(new Unit(83, 27616, "WinterWolf", false, "Laurgorrelle"));
                if (Math.round(Math.random()))
                {
                    ArtificialIntelligenceAccess.push(new Unit(292, 36133, "WinterWolf", false, "Luargorrua"));
                    ArtificialIntelligenceAccess.push(new Unit(-243, 36242, "WinterWolf", false, "Luargorru"));
                    ArtificialIntelligenceAccess.push(new Unit(396, 36440, "WinterWolf", false, "Luargurana"));
                }

                //glutids
                //ArtificialIntelligenceAccess.push(new Unit(6317, 21218, "Glutid", true, "Gluptard", {patrolStops: 5, patrolLoop: true, route:[[6037, 21507], [6833, 21852], [6568, 22378], [7140, 22077], [6317, 21218]]}));
                //ArtificialIntelligenceAccess.push(new Unit(2674, 17194, "Glutid", false, "Gluptariela", {patrolStops: 1, patrolLoop: true, route:[[2674, 17194]]}));

                //Plants
                scenicList.push(new Scenery("bushkaPlant", 3207, 27390, 5, true));
                scenicList.push(new Scenery("bushkaPlant", 4497, 27682, 4.8, true));
                scenicList.push(new Scenery("bushkaPlant", 5300, 35493, -6.61, true));
                scenicList.push(new Scenery("bushkaPlant", -2366, 35548, -2.75, true));
                scenicList.push(new Scenery("bushkaPlant", -2182, 34319, 2.75, true));
                scenicList.push(new Scenery("bushkaPlant", -1849, 34052, 4.75, true));
                scenicList.push(new Scenery("bushkaPlant", -1078, 28815, -5.1, true));

                scenicList.push(new Scenery("wightbloomPlant", 4185 , 32149, 10, true));
                scenicList.push(new Scenery("wightbloomPlant", 53 , 30093, -9, true));

                if (change != "n4")
                {
                    scenicList.push(new Scenery("tyrniPlant", 3902, 36896, 6, true));
                }
                else
                {
                    scenicList.push(new Scenery("tyrniPlant", 3575, 36471, 6.5, true));
                }
                scenicList.push(new Scenery("tyrniPlant", 19, 36084, -5.4, true));

                //Scenery
                scenicList.push(new Scenery("stone", 3755 , 29352, 1.2, 2, 2));
                scenicList.push(new Scenery("stone", 4214 , 29229, -4, 1, 3));
                scenicList.push(new Scenery("stone", 4733 , 30127, -3, 1.5, 2));
                if (Math.round(Math.random() * 3) == 3)
                {
                    ArtificialIntelligenceAccess.push(new Unit(3675, 29302, "Soldier", false, "Freydic Hunter", {race: "Freynor", faction: "Freynor", con: 8, speed: 1.1, outfit: ["sealSkinClothing", 0], weapon: ["freydicSpear", [2, 3], 4, 24, 1.25], ranged: [false, "arrow", 5, 1600, 1, 4, 0, "none", 2], patrolStops: 5, patrolLoop: true, route:[[2197, 29577], [3889, 29603], [3736, 30019], [2977, 28941], [3701, 29233]]}));
                    //hunter's camp
                    scenicList.push(new Scenery("tent", 3822, 29306, 1/8 * 2 * Math.PI, true));
                    scenicList.push(new Scenery("deadWaanti", 3755 , 29352, 3.14, 1.6));
                    scenicList.push(new Scenery("campFire", 3757 , 29275, 1, "permaLit"));
                    scenicList.push(new Scenery("item", 3807, 29356, 0, "freynor", ["bucket", 1, -18]));
                    scenicList.push(new Scenery("item", 3797, 29257, 0, "freynor", ["arrow", 3, -9]));
                }
                scenicList.push(new Scenery("stone", 4201 , 28220, 3.6, 0.5, 1));
                scenicList.push(new Scenery("stone", 5626 , 31426, 8.3, 0.5, 3));
                scenicList.push(new Scenery("stone", 6055 , 31963, -2, 0.5, 3));
                scenicList.push(new Scenery("stone", 845 , 35479, 4.444, 1.5, 2));
                scenicList.push(new Scenery("stone", 256 , 35885, 2.8, 0.5, 1));
                scenicList.push(new Scenery("stone", -2069 , 32193, -1, 1, 2));

                //sign to Teshir
                scenicList.push(new Scenery("sign", 1908, 35783, Math.PI / 2, 1, "Teshir City - 109 sectors"));

                //Hyeling Camps
                //ArtificialIntelligenceAccess.push(new Unit(10041, 8746, "Hyeling", true, "White Hammer"));
                //ArtificialIntelligenceAccess.push(new Unit(9711, 8503, "HyelingSoldier", false, "Running Stone"));
                //scenicList.push(new Scenery("largeCeremonialRockCircle", 10075 , 8783, 0, true));
                //scenicList.push(new Scenery("hyelingTent", 9199 , 8965, 1/2 * Math.PI, true));
                //scenicList.push(new Scenery("hyelingSkeleton", 10071 , 8788, 0.12, true));

                change = "n3";
            }
        }
        else if (region == "n3e1")
        {
            if (change != "n3e1")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units
                scenicList.push(new Scenery("bushkaPlant", -2366, 35548,-2.75, true)); //copied n-3
                scenicList.push(new Scenery("bushkaPlant", -2182, 34319,2.75, true)); //copied n-3
                scenicList.push(new Scenery("tyrniPlant", -12270, 38406,0.4, true)); //copied n-4-e-1

                ArtificialIntelligenceAccess.push(new Unit(-6594.548123905186, 34395.87516001048, "WinterWolf", false, "magicmantrty1"));
                ArtificialIntelligenceAccess.push(new Unit(-6402.9162373760755, 34298.07859537538, "WinterWolf", false, "magicmantrty2"));
                ArtificialIntelligenceAccess.push(new Unit(-7342.786479590106, 28032.411261432484, "WinterWolf", false, "magicmantrt1"));
                ArtificialIntelligenceAccess.push(new Unit(-7161.446259501089, 28142.0415370401, "WinterWolf", false, "magicmantrt2"));
                ArtificialIntelligenceAccess.push(new Unit(-7518.7273323387635, 28132.110805093063, "WinterWolf", false, "magicmantrt3"));
                ArtificialIntelligenceAccess.push(new Unit(-7481.193771158077, 28049.037828083056, "WinterWolf", false, "magicmantrt4"));
                ArtificialIntelligenceAccess.push(new Unit(-6226.50515357677, 32289.240062358083, "WinterWolf", false, "magicmantre1"));
                ArtificialIntelligenceAccess.push(new Unit(-5992.850502575595, 32363.91489732386, "WinterWolf", false, "magicmantre2"));
                ArtificialIntelligenceAccess.push(new Unit(-6076.461293128425, 32442.971879488203, "WinterWolf", false, "magicmantrte3"));
                ArtificialIntelligenceAccess.push(new Unit(-12593.742137168469, 27905.233704785045, "WinterWolf", false, "magicmantrtr1"));
                ArtificialIntelligenceAccess.push(new Unit(-12452.756042594201, 27982.405040762547, "WinterWolf", false, "magicmantrtr2"));
                ArtificialIntelligenceAccess.push(new Unit(-12490.174766136717, 28081.417425018735, "WinterWolf", false, "magicmantrtr3"));
                ArtificialIntelligenceAccess.push(new Unit(-12376.928637991152, 28063.920791104607, "WinterWolf", false, "magicmantrtr4"));
                ArtificialIntelligenceAccess.push(new Unit(-12274.935028666405, 27982.15226392913, "WinterWolf", false, "magicmantrtr5"));
                ArtificialIntelligenceAccess.push(new Unit(-4188.712078244745, 30521.25036802544, "WinterWolf", false, "magicmantru1"));
                ArtificialIntelligenceAccess.push(new Unit(-4260.643068573382, 30628.33249476115, "WinterWolf", false, "magicmantru2"));
                ArtificialIntelligenceAccess.push(new Unit(-4458.084877726978, 30489.692432171647, "WinterWolf", false, "magicmantru3"));
                ArtificialIntelligenceAccess.push(new Unit(-6560.7591269710665, 29951.177212853796, "WinterWolf", false, "magicmantru4"));
                ArtificialIntelligenceAccess.push(new Unit(-6667.609730478248, 29868.672014598505, "WinterWolf", false, "magicmantru5"));
                ArtificialIntelligenceAccess.push(new Unit(-12259.155193158167, 34153.577892206624, "WinterWolf", false, "magicmantry1"));
                ArtificialIntelligenceAccess.push(new Unit(-12334.1895170149, 34296.79708529342, "WinterWolf", false, "magicmantry2"));
                ArtificialIntelligenceAccess.push(new Unit(-12220.541001465752, 34378.367199496606, "WinterWolf", false, "magicmantry3"));
                ArtificialIntelligenceAccess.push(new Unit(-12377.302428770507, 34357.8027508203, "WinterWolf", false, "magicmantry4"));
                ArtificialIntelligenceAccess.push(new Unit(-4314.329468875088, 33852.634934001195, "WinterWolf", false, "magicmantry5"));
                ArtificialIntelligenceAccess.push(new Unit(-4471.613106744669, 33944.30876489119, "WinterWolf", false, "magicmantry6"));
                ArtificialIntelligenceAccess.push(new Unit(-7184.269394650553, 30171.609849255543, "WinterWolf", false, "magicmantrw1"));
                ArtificialIntelligenceAccess.push(new Unit(-7067.5994171469665, 30328.008756573032, "WinterWolf", false, "magicmantrw2"));
                ArtificialIntelligenceAccess.push(new Unit(-7193.627202096532, 30309.3146614275, "WinterWolf", false, "magicmantrw3"));


                ArtificialIntelligenceAccess.push(new Unit(-8397.625202412219, 33024.76254476069, "Waanti", false, "gotetdot1"));
                ArtificialIntelligenceAccess.push(new Unit(-8308.948107922957, 32974.837155598936, "Waanti", true, "gotetdot2"));
                ArtificialIntelligenceAccess.push(new Unit(-8199.566961830593, 33065.30123440185, "Waanti", "baby", "gotetdot3"));
                ArtificialIntelligenceAccess.push(new Unit(-4858.480393969366, 27509.116219504736, "Waanti", false, "gotetdoto1"));
                ArtificialIntelligenceAccess.push(new Unit(-4747.031821693755, 27564.249543707167, "Waanti", true, "gotetdoto2"));
                ArtificialIntelligenceAccess.push(new Unit(-4703.555595557247, 27705.623028886304, "Waanti", "baby", "gotetdoto3"));
                ArtificialIntelligenceAccess.push(new Unit(-4610.047992260398, 27659.46911033468, "Waanti", false, "gotetdoto4"));
                ArtificialIntelligenceAccess.push(new Unit(-8750.443761386332, 33394.66527243566, "Waanti", false, "gotetdotoo1"));
                ArtificialIntelligenceAccess.push(new Unit(-8894.311241039855, 33453.557989100445, "Waanti", true, "gotetdotoo2"));
                ArtificialIntelligenceAccess.push(new Unit(-8935.141687680236, 33397.42474829503, "Waanti", "baby", "gotetdotoo3"));
                ArtificialIntelligenceAccess.push(new Unit(-8945.942018561283, 33579.20292161423, "Waanti", "baby", "gotetdotoo4"));
                ArtificialIntelligenceAccess.push(new Unit(-10411.19076846095, 27585.16544975032, "Waanti", "baby", "gotetdoto5"));
                ArtificialIntelligenceAccess.push(new Unit(-10321.646102323266, 27652.024031738347, "Waanti", false, "gotetdoto6"));
                ArtificialIntelligenceAccess.push(new Unit(-8765.721889882363, 32953.68094195766, "Waanti", true, "gotetdotoo2"));


                ArtificialIntelligenceAccess.push(new Unit(-11289.652797686398, 32309.008802314052, "Balkur", false, "onofangoo1"));
                ArtificialIntelligenceAccess.push(new Unit(-9958.834319219719, 30999.05514875268, "Balkur", true, "onofangoo2"));
                ArtificialIntelligenceAccess.push(new Unit(-9480.810261361903, 36394.138313717565, "Balkur", false, "onofangoo3"));


                ArtificialIntelligenceAccess.push(new Unit(-7619.233094074731, 36046.80342991437, "Glutid", false, "nontthintern1"));


                ArtificialIntelligenceAccess.push(new Unit(-11626.931345371848, 31495.13739942016, "Koobu", false, "nontthintern2"));


                scenicList.push(new Scenery("tyrniPlant", -11542.707841740761, 34651.58370915247, 5, true));
                scenicList.push(new Scenery("tyrniPlant", -8778.192150375602, 28491.313632465168, 2, true));


                scenicList.push(new Scenery("wightbloomPlant", -11643.275901334484, 28642.70650974215, 2.3, true));
                scenicList.push(new Scenery("wightbloomPlant", -9536.46853963971, 35580.79217535402, 2.7, true));


                scenicList.push(new Scenery("bushkaPlant", -6787.447368237949, 35252.422335468604, 2, true));
                scenicList.push(new Scenery("bushkaPlant", -4656.421725646723, 30725.247571784173, 2.7, true));
                scenicList.push(new Scenery("bushkaPlant", -10400.352071066496, 27904.77441159803, 3.1, true));
                scenicList.push(new Scenery("bushkaPlant", -9354.11673140219, 31121.187468650434, 4.5, true));
                scenicList.push(new Scenery("bushkaPlant", -8487.432399296966, 32673.89932783247, 7.32, true));


                scenicList.push(new Scenery("stone", -10780.86358615623, 33407.02725397667, 2.47, 1.5, 1));
                scenicList.push(new Scenery("stone", -4655.321152171745, 28949.77082195361, 4.83, 1, 2));



                change = "n3e1";
            }
        }
        else if (region == "n3e2")
        {
            if (change != "n3e2")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units
                scenicList.push(new Scenery("tyrniPlant", -12270, 38406,0.4, true, undefined)); //copied n3e1
                scenicList.push(new Scenery("tyrniPlant", -18577, 37887,12, true, undefined)); //copied n4e2
                scenicList.push(new Scenery("bushkaPlant", -24579.767035972964, 29710.62484832691,2.4, true, undefined)); //copied n3e3

                scenicList.push(new Scenery("freydicBuilding6", -16999.333841996897, 29550.19655674712, 0, true));
                scenicList.push(new Scenery("freydicBuilding2", -17403.198628943817, 29219.711923635354, 0, true));
                scenicList.push(new Scenery("freydicBuilding5", -18199.882971324358, 29682.498852227724 , 0, true));
                scenicList.push(new Scenery("hearth", -16997.59397932014, 29446.717361504663, Math.PI, "lit"));
                scenicList.push(new Scenery("bed", -17052.817148408816, 29630.54686097753, 1/2 * Math.PI, false));
                scenicList.push(new Scenery("smallTable", -16932.95947478025, 29608.009611099435, 0, true));
                scenicList.push(new Scenery("stumpStoolSml", -16897.95947478025, 29608.009611099435, 0, true));
                scenicList.push(new Scenery("stumpStoolSml", -16937.714270816454, 29639.07174475587, 0.5, true));
                scenicList.push(new Scenery("walrusHideRug", -16999.12072315639, 29505.366760894154, 0, true));

                if (uniqueChars.borjeLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Borje")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-16915.5408401604, 29483.2507404696, "Person", false, "Borje", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["northernClothing", 0], weapon: ["none", [0.5, 0.5], 0, 3, 1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-16923.114490790205, 29492.464466580546]]}));
                    }
                }
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Borje")
                    {
                        ArtificialIntelligenceAccess[i].healthMAX = 9;
                        ArtificialIntelligenceAccess[i].health = 9;
                    }
                }

                if (uniqueChars.toraanLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Toraan")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-17189.08953497796, 29438.435636632497, "Soldier", false, "Toraan", {race: "Freynor", faction: "Freynor", con: 8, speed: 1.2, outfit: ["walrusLeatherArmour", 4.5], weapon: ["freydicSword", [12, 10], 0, 27, 1.2], ranged: [false, "arrow", 10, 1700, 9, 10, 0, "none", 3], patrolStops: 0, patrolLoop: false, route:[[2197, 29577]]}));
                    }
                }

                ArtificialIntelligenceAccess.push(new Unit(-18384.652280093153, 29290.965093653027, "Person", false, "Freydic Villager", {race: "Freynor", faction: "Freynor", personality: "scared", outfit: ["sealSkinClothing", 0], weapon: ["none", [0.3, 0.5], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 4, patrolLoop: true, route:[[-18384.652280093153, 29290.965093653027],[-18162.53496075678, 29292.5353367585], [-18177.797361137065, 29581.22725435828], [-18021.250168647108, 29281.649856888424]]}));
                ArtificialIntelligenceAccess.push(new Unit(-17424.897529045953, 29205.92363122701, "Person", false, "Freydic Boy", {race: "Freynor", faction: "Freynor", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["none", [0.3, 0.5], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-17424.897529045953, 29210.92363122701]], kid: true}));
                ArtificialIntelligenceAccess.push(new Unit(-17772.9250363152, 29971.29155378809, "Person", false, "Freydic Villager", {race: "Freynor", faction: "Freynor", personality: "scared", outfit: ["sealSkinClothing", 0], weapon: ["none", [0.3, 0.5], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[ -17762.507932356035, 29987.798579446793]]}));

                scenicList.push(new Scenery("crate", -17083.386291740775, 29467.21453515712, 0.689, 1, [1.2]));
                scenicList.push(new Scenery("crate", -18240.851154442997, 29594.184108439156, 1.689, 1, [1.4]));
                scenicList.push(new Scenery("campFire", -18222.626531827413, 29688.13490756426, Math.PI, "permaLit"));
                scenicList.push(new Scenery("campFire", -17404.670538184117, 29258.48042091994, 0, "permaLit"));
                scenicList.push(new Scenery("item", -18207.732914567543, 29718.552312377895, 0, "freynor", ["waantiPelt", 1, -16]));
                scenicList.push(new Scenery("well", -17874.899358456736, 29386.097299878875, 4, true));
                scenicList.push(new Scenery("stumpStoolSml", -17502.596107243986, 29239.520895409903, 1.3, true));
                scenicList.push(new Scenery("walrusHideRug", -17390.00570656015, 29199.216000570297, 0.5, 0.8));

                scenicList.push(new Scenery("harstPlant", -17628.02503613716, 30002.25915250937, 0, true));
                scenicList.push(new Scenery("harstPlant", -17625.678590794094, 30051.046322867707, 4.2, true));
                scenicList.push(new Scenery("harstPlant", -17627.89493186588, 30103.524806157264, 7.765, true));
                scenicList.push(new Scenery("harstPlant", -17627.415345148213, 30154.818325482247, 0.954, true));
                scenicList.push(new Scenery("harstPlant", -17629.287618118728, 30204.693568548522, 2.122, true));
                scenicList.push(new Scenery("harstPlant", -17633.190124577955, 30252.532039793634, 1, true));
                scenicList.push(new Scenery("harstPlant", -17712.20807270571, 30249.701183657075, 2.6, true));
                scenicList.push(new Scenery("harstPlant", -17711.42241526334, 30206.22742625111, 6.777, true));
                scenicList.push(new Scenery("harstPlant", -17711.395948377376, 30161.44104499505, 1.231, true));
                scenicList.push(new Scenery("harstPlant", -17711.711256798528, 30101.310001628535, 2.211, true));
                scenicList.push(new Scenery("harstPlant", -17709.416137803724, 30043.217131603782, 4.445, true));
                scenicList.push(new Scenery("harstPlant", -17708.329061945788, 29997.8155779444, 1.9, true));
                scenicList.push(new Scenery("harstPlant", -18464.419543636734, 29341.89243409437, 0, true));
                scenicList.push(new Scenery("harstPlant", -18462.773636756243, 29291.24230853304, 7.4, true));
                scenicList.push(new Scenery("harstPlant", -18466.56083565042, 29240.896047624672, 1, true));
                scenicList.push(new Scenery("harstPlant", -18461.234581376517, 29190.599890673977, 3, true));
                scenicList.push(new Scenery("harstPlant", -18465.908660605317, 29138.57179689397, 2.55, true));
                scenicList.push(new Scenery("harstPlant", -18384.067326395645, 29108.920098870658, 2.244, true));
                scenicList.push(new Scenery("harstPlant", -18381.68912532967, 29169.122272558903, 9,03, true));
                scenicList.push(new Scenery("harstPlant", -18384.480567314935, 29231.642051379793, 5.05, true));
                scenicList.push(new Scenery("harstPlant", -18318.20061845351, 29232.660487131172, 1.33, true));
                scenicList.push(new Scenery("harstPlant", -18317.791102503186, 29178.306123897124, 9.5, true));
                scenicList.push(new Scenery("harstPlant", -18314.21945861911, 29114.268232902516, 0.76, true));

                scenicList.push(new Scenery("suuliPlant", -17821.6382860251, 30019.906998498067, 9.5, true));
                scenicList.push(new Scenery("suuliPlant", -17826.04588175291, 30091.773145810635, 8.788, true));
                scenicList.push(new Scenery("suuliPlant", -17823.255955263634, 30157.854162425305, 4.738, true));
                scenicList.push(new Scenery("suuliPlant", -17823.193135248093, 30238.165932009226, 7.338, true));

                scenicList.push(new Scenery("carrotPlant", -18238.74294008849, 29332.624998767486, 0, true));
                scenicList.push(new Scenery("carrotPlant", -18262.7006704118, 29330.624548291795, 1.6, true));
                scenicList.push(new Scenery("carrotPlant", -18284.095445119812, 29331.09998772974, 7.333, true));
                scenicList.push(new Scenery("carrotPlant", -18295.678064850785, 29332.54781519611, 1.621, true));
                scenicList.push(new Scenery("carrotPlant", -18313.650874913, 29330.44634371044, 2.33, true));
                scenicList.push(new Scenery("carrotPlant", -18336.800486107302, 29330.653244710273, 3.3, true));
                scenicList.push(new Scenery("carrotPlant", -18358.22648800877, 29330.381416151537, 9.5, true));
                scenicList.push(new Scenery("carrotPlant", -18381.55740351884, 29330.749187968962, 2.5, true));
                scenicList.push(new Scenery("carrotPlant", -18394.47075952721, 29330.31758623863, 6.8, true));
                scenicList.push(new Scenery("carrotPlant", -18410.646844177885, 29330.379951051185, 1.3, true));

                scenicList.push(new Scenery("potatoPlant", -18244.06934031433, 29143.75550909314, 1.99, true));
                scenicList.push(new Scenery("potatoPlant", -18243.38323484635, 29161.251198526454, 2.559, true));
                scenicList.push(new Scenery("potatoPlant", -18243.78177795084, 29123.38883763527, 1.766, true));
                scenicList.push(new Scenery("potatoPlant", -18244.60085822076, 29186.676084564187, 4.9, true));
                scenicList.push(new Scenery("potatoPlant", -18246.63455538746, 29202.161929041486, 9.99, true));
                scenicList.push(new Scenery("potatoPlant",  -18244.00044580451, 29225.308171119595, 4, true));
                scenicList.push(new Scenery("potatoPlant", -18245.83493040452, 29248.581493932415, 3.088, true));

                scenicList.push(new Scenery("bushkaPlant", -16360.882919327933, 28110.89668745125, 2.28, true));
                scenicList.push(new Scenery("bushkaPlant", -16861.05448739995, 34154.355816149146, 7.68, true));

                scenicList.push(new Scenery("tyrniPlant", -20649.520715525316, 33111.60752248434, 3.08, true));

                ArtificialIntelligenceAccess.push(new Unit(-22313.28488298986, 27918.38328116592, "WinterWolf", false, "solngsofar1"));
                ArtificialIntelligenceAccess.push(new Unit(-22434.73946077224, 28038.781732184965, "WinterWolf", false, "solngsofar2"));
                ArtificialIntelligenceAccess.push(new Unit(-22221.99344814038, 28027.83086941942, "WinterWolf", false, "solngsofar3"));
                ArtificialIntelligenceAccess.push(new Unit(-17831.169330501307, 34472.58610217072, "WinterWolf", false, "solngsofar4"));
                ArtificialIntelligenceAccess.push(new Unit(-17680.108680600177, 34272.85045837649, "WinterWolf", false, "solngsofar5"));
                ArtificialIntelligenceAccess.push(new Unit(-14094.218479237996, 32685.076346327503, "WinterWolf", false, "solngsofar6"));
                ArtificialIntelligenceAccess.push(new Unit(-14263.56774346841, 32762.75233659766, "WinterWolf", false, "solngsofar7"));
                ArtificialIntelligenceAccess.push(new Unit(-14392.101175224283, 32678.17721971114, "WinterWolf", false, "solngsofar8"));
                ArtificialIntelligenceAccess.push(new Unit(-14473.883092172104, 32855.060189854266, "WinterWolf", false, "solngsofar9"));

                ArtificialIntelligenceAccess.push(new Unit(-20367.30359751636, 30778.127382746818, "Waanti", false, "tupipn1"));
                ArtificialIntelligenceAccess.push(new Unit(-20509.67778950778, 30835.234155921553, "Waanti", false, "tupipn2"));
                ArtificialIntelligenceAccess.push(new Unit(-20563.67909886312, 31006.824077790476, "Waanti", true, "tupipn3"));
                ArtificialIntelligenceAccess.push(new Unit(-20810.994938219123, 30895.90751596053, "Waanti", false, "tupipn4"));
                ArtificialIntelligenceAccess.push(new Unit(-20619.940714965443, 30798.23747565065, "Waanti", "baby", "tupipn5"));
                ArtificialIntelligenceAccess.push(new Unit(-18678.31980563123, 32075.86910498143, "Waanti", false, "tupipn6"));
                ArtificialIntelligenceAccess.push(new Unit(-18492.492229056876, 31980.496358006716, "Waanti", false, "tupipn7"));

                ArtificialIntelligenceAccess.push(new Unit(-14826.946888724635, 35459.609090473976, "Koobu", false, "evrnonymre1"));
                ArtificialIntelligenceAccess.push(new Unit(-22698.263178172656, 32660.06591951922, "Koobu", false, "evrnonymre2"));

                ArtificialIntelligenceAccess.push(new Unit(-21545.132260316503, 35648.642978940836, "Balkur", false, "thnghtisalmstdy1"));

                change = "n3e2";
            }
        }
        else if (region == "n4e4")
        {
            if (change != "n4e4")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                ArtificialIntelligenceAccess.push(new Unit(-42340.03893392867, 37240.77787414235, "Anemone", true, "stalkerhonn1"));
                ArtificialIntelligenceAccess.push(new Unit(-42447.86015319768, 37410.40389540804, "Anemone", false, "stalkerhonn2"));


                ArtificialIntelligenceAccess.push(new Unit(-43046.19725664218, 37749.928180841576, "Walrus", false, "dordiy1"));
                ArtificialIntelligenceAccess.push(new Unit(-43462.84744082605, 38045.575833509116, "Walrus", false, "dordiy2"));


                ArtificialIntelligenceAccess.push(new Unit(-41705.39754693937, 38064.506014923776, "Cangrejo", "baby", "nonttegym"));

                ArtificialIntelligenceAccess.push(new Unit(-33660.5641054271, 33336.24611237418, "Anemone", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-33949.90688543095, 33037.498972502995, "Anemone", true, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-33705.58092424714, 31423.760184634175, "Anemone", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-33093.504291548576, 31443.382516252455, "Anemone", false, "docile"));

                scenicList.push(new Scenery("stone", -33214.71309851145, 31190.899376384637, 1.4, 2, 1));
                scenicList.push(new Scenery("stone", -33492.8574964295, 31511.247832931724, 2.8, 2.5, 2));
                scenicList.push(new Scenery("stone", -33715.23937013808, 31200.56716837959, 1, 4, 1));
                scenicList.push(new Scenery("stone", -33680.67264789111, 31296.654563613884, 8, 1, 3));
                scenicList.push(new Scenery("stone", -42421.383280122565, 34437.64008677247, 2.7, 1.5, 2));


                change = "n4e4";
            }
        }
        else if (region == "s4w14")
        {
            if (change != "s4w14")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                scenicList.push(new Scenery("thenganorCastleParts", 139673.18302162958 + 783, -33839.42356589397 + 65 + 95, 0, 2, 1)); //low 1
                scenicList.push(new Scenery("thenganorCastleParts", 141073.18302162958 + 783, -33839.42356589397 + 65 + 95, 0, 2, 1)); //low 2

                scenicList.push(new Scenery("thenganorCastleParts", 139080.28850764598 + 590, -36120.825984448726 + 1700, 1/2 * Math.PI, 2, 1)); //left wall 6
                scenicList.push(new Scenery("thenganorCastleParts", 139673.18302162958 + 75, -33839.42356589397 + 95, Math.PI, 2, 5)); //left wall inter corner

                scenicList.push(new Scenery("thenganorCastleParts", 148676.79947148258 - 30, -33935.42356589397 + 95 + 700, -1/2 * Math.PI, 2, 1)); //lefter

                scenicList.push(new Scenery("thenganorCastleParts", 142473.18302162958 + 783, -33839.42356589397 + 65 + 95, 0, 2, 1)); //low 3
                scenicList.push(new Scenery("thenganorCastleParts", 143873.18302162958 + 783, -33839.42356589397 + 65 + 95, 0, 2, 1)); //low 4
                scenicList.push(new Scenery("thenganorCastleParts", 145273.18302162958 + 783, -33839.42356589397 + 65 + 95, 0, 2, 1)); //low 5
                scenicList.push(new Scenery("thenganorCastleParts", 146673.18302162958 + 783, -33839.42356589397 + 65 + 95, 0, 2, 1)); //low 6
                scenicList.push(new Scenery("thenganorCastleParts", 146673.18302162958 + 783 + 720, -33839.42356589397 + 65 + 95, 0, 2, 3)); //low 7
                scenicList.push(new Scenery("thenganorCastleParts", 148676.79947148258, -33839.42356589397 + 95, Math.PI, 2, 5)); //lefter wall inter corner

                scenicList.push(new Scenery("thenganorCastleParts", 148676.79947148258 - 30, -32535.42356589397 + 95 + 700, -1/2 * Math.PI, 2, 1)); //lefter 2
                scenicList.push(new Scenery("thenganorCastleParts", 148676.79947148258 - 30, -31135.42356589397 + 95 + 700, -1/2 * Math.PI, 2, 1)); //lefter 3

                scenicList.push(new Scenery("thenganorCastleParts", 138280.28850764598, -43120.825984448726 - 700, Math.PI, 2, 1)); //bottom wall 5
                scenicList.push(new Scenery("thenganorCastleParts", 139080.28850764598, -43120.825984448726 - 700, Math.PI, 2, 1)); //bottom wall 6

                scenicList.push(new Scenery("thenganorCastleParts", 139080.28850764598 + 590, -43120.825984448726, 1/2 * Math.PI, 2, 1)); //left wall
                scenicList.push(new Scenery("thenganorCastleParts", 139673.18302162958, -43120.825984448726 - 700, Math.PI, 2, 5)); //bottom wall left corner

                scenicList.push(new Scenery("thenganorCastleParts", 139080.28850764598 + 590, -41720.825984448726, 1/2 * Math.PI, 2, 1)); //left wall 1
                scenicList.push(new Scenery("thenganorCastleParts", 139080.28850764598 + 590, -40320.825984448726, 1/2 * Math.PI, 2, 1)); //left wall 2
                scenicList.push(new Scenery("thenganorCastleParts", 139080.28850764598 + 590, -38920.825984448726, 1/2 * Math.PI, 2, 1)); //left wall 3
                scenicList.push(new Scenery("thenganorCastleParts", 139080.28850764598 + 590, -38920.825984448726 + 1700, 1/2 * Math.PI, 2, 1)); //left wall 4
                scenicList.push(new Scenery("thenganorCastleParts", 139080.28850764598 + 590, -37520.825984448726 + 1700, 1/2 * Math.PI, 2, 1)); //left wall 5

                scenicList.push(new Scenery("thenganorCastleParts", 139080.28850764598 + 590, -36120.825984448726 + 1700, 1/2 * Math.PI, 2, 1)); //left wall 6
                scenicList.push(new Scenery("thenganorCastleParts", 139673.18302162958 + 75, -33839.42356589397 + 95, Math.PI, 2, 5)); //left wall inter corner

                scenicList.push(new Scenery("thenganBuilding7", 139869.27866820985, -37454.18970224297, 0, 1));


                change = "s4w14";
            }
        }
        else if (region == "s8w32") //RAUKE (town)
        {
            if (change != "s8w32")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units
                scenicList.push(new Scenery("item", 332343.3578798146 + 6, -78754.46924239473, 0, "thengar", ["wood", 2, -10]));
                scenicList.push(new Scenery("item", 332343.3578798146 - 7, -78754.46924239473, 0, "thengar", ["wood", 2, -10]));

                scenicList.push(new Scenery("thenganorCastles", 325727.6495212461 + 380, -78020.72888584489, Math.PI, 1.2, 0));

                scenicList.push(new Scenery("thenganBuilding1", 332248.8179455171 - 45, -78853.82713643383 + 20, 0, true));
                scenicList.push(new Scenery("thenganBuilding1", 332420.2954388018 + 55, -78854.6321950877 + 20, 0, true));

                scenicList.push(new Scenery("thenganorCastleParts", 333276.47793273884, -79132.66954680806, Math.PI, 1.5, 5));
                scenicList.push(new Scenery("thenganorCastleParts", 333282.0822471068, -79596.4063713545, Math.PI, 1.5, 5));
                scenicList.push(new Scenery("thenganorCastleParts", 333275.9698962499, -78491.27298204975, Math.PI, 1.5, 5));
                scenicList.push(new Scenery("thenganorCastleParts", 333270.94759744126, -80186.28940149961, Math.PI, 1.5, 5));

                scenicList.push(new Scenery("thenganorCastleParts", 332340.7709146808, -78686.67478406538, Math.PI, 1.2, 3));
                scenicList.push(new Scenery("thenganorCastlePartsHigh", 332557.33092875936, -78917.75978127756, 1/2 * Math.PI, 1.5, 3));
                scenicList.push(new Scenery("thenganorCastlePartsHigh", 332117.43928714143, -78922.7304288764, 1/2 * Math.PI, 1.5, 3));
                scenicList.push(new Scenery("thenganorCastlePartsHigh", 332553.35675567127, -79157.34516197117, Math.PI, 1.3, 5));
                scenicList.push(new Scenery("thenganorCastlePartsHigh", 332116.72818188544, -79161.07686940521, Math.PI, 1.3, 5));


                change = "s8w32";
            }
        }
        else if (region == "s8w33") //vardanian refugee camp
        {
            if (change != "s8w33")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units
                scenicList.push(new Scenery("item", 332343.3578798146 + 6, -78754.46924239473, 0, "thengar", ["wood", 2, -10]));
                scenicList.push(new Scenery("item", 332343.3578798146 - 7, -78754.46924239473, 0, "thengar", ["wood", 2, -10]));

                scenicList.push(new Scenery("thenganBuilding1", 332248.8179455171 - 45, -78853.82713643383 + 20, 0, true));
                scenicList.push(new Scenery("thenganBuilding1", 332420.2954388018 + 55, -78854.6321950877 + 20, 0, true));

                scenicList.push(new Scenery("thenganorCastleParts", 333276.47793273884, -79132.66954680806, Math.PI, 1.5, 5));
                scenicList.push(new Scenery("thenganorCastleParts", 333282.0822471068, -79596.4063713545, Math.PI, 1.5, 5));
                scenicList.push(new Scenery("thenganorCastleParts", 333275.9698962499, -78491.27298204975, Math.PI, 1.5, 5));
                scenicList.push(new Scenery("thenganorCastleParts", 333270.94759744126, -80186.28940149961, Math.PI, 1.5, 5));

                scenicList.push(new Scenery("thenganorCastleParts", 332340.7709146808, -78686.67478406538, Math.PI, 1.2, 3));
                scenicList.push(new Scenery("thenganorCastlePartsHigh", 332557.33092875936, -78917.75978127756, 1/2 * Math.PI, 1.5, 3));
                scenicList.push(new Scenery("thenganorCastlePartsHigh", 332117.43928714143, -78922.7304288764, 1/2 * Math.PI, 1.5, 3));
                scenicList.push(new Scenery("thenganorCastlePartsHigh", 332553.35675567127, -79157.34516197117, Math.PI, 1.3, 5));
                scenicList.push(new Scenery("thenganorCastlePartsHigh", 332116.72818188544, -79161.07686940521, Math.PI, 1.3, 5));

                change = "s8w33";
            }
        }
        else if (region == "s10w34")
        {
            if (change != "s10w34")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                scenicList.push(new Scenery("ashaiTree", 354029.70797399245, -95544.65745363364,3.249349687321801, 2.980172077550353, undefined)); //copied s9w35
                scenicList.push(new Scenery("ashaiTree", 353886.9087263661, -95954.67331825728,0.18407668537454222, 2.8349539471254666, undefined)); //copied s9w35
                scenicList.push(new Scenery("ashaiTree", 353899.4502934423, -96159.73970299313,1.0768526543931274, 1.939245011364287, undefined)); //copied s9w35
                scenicList.push(new Scenery("ashaiTree", 353895.8559590953, -96651.28781157995,5.397722426611251, 0.7028265756441087, undefined)); //copied s9w35
                scenicList.push(new Scenery("ashaiTree", 354075.9944704969, -96998.46493171949,5.915685442897597, 0.6892723436881784, undefined)); //copied s9w35
                scenicList.push(new Scenery("ashaiTree", 353881.82940502645, -97334.30547225787,4.847901375245985, 0.7598152616014335, undefined)); //copied s9w35
                scenicList.push(new Scenery("ashaiTree", 354001.7089881939, -97653.16530728654,2.070872857361358, 0.9054467769542563, undefined)); //copied s9w35
                scenicList.push(new Scenery("ashaiTree", 353905.6468148583, -98296.87147243871,6.187484234497877, 2.019401240407918, undefined)); //copied s9w35
                scenicList.push(new Scenery("ashaiTree", 353973.03018583666, -98566.99986190959,3.1519661029634336, 0.7114851858114296, undefined)); //copied s9w35
                scenicList.push(new Scenery("ashaiTree", 354067.5883363997, -98942.94332005826,4.355098538895889, 0.914184635380447, undefined)); //copied s9w35
                scenicList.push(new Scenery("ashaiTree", 353853.5055623418, -98795.55060941327,2.382754237954184, 2.115046607910638, undefined)); //copied s9w35
                scenicList.push(new Scenery("ashaiTree", 353888.74662200775, -99212.63952189968,5.429822936482031, 1.1153633313717184, undefined)); //copied s9w35
                scenicList.push(new Scenery("ashaiTree", 354067.8196559237, -99531.66509792357,5.825296726805034, 2.77654640829014, undefined)); //copied s9w35
                scenicList.push(new Scenery("ashaiTree", 353877.17144087446, -99808.80800405181,5.581016671355493, 1.6537350951018017, undefined)); //copied s9w35
                scenicList.push(new Scenery("ashaiTree", 353854.38545273646, -100298.79276540632,2.025655067192966, 1.643060758144867, undefined)); //copied s9w35
                scenicList.push(new Scenery("ashaiTree", 353998.552105301, -100012.40896006704,4.843495040286632, 0.7256736598326947, undefined)); //copied s9w35
                scenicList.push(new Scenery("ashaiTree", 354076.4324907419, -100701.77491920487,2.215125574322667, 0.92375753965872, undefined)); //copied s9w35
                scenicList.push(new Scenery("ashaiTree", 353901.42245070625, -100947.02797599741,6.197541546152243, 0.7155907095092707, undefined)); //copied s9w35
                scenicList.push(new Scenery("ashaiTree", 353948.9869023692, -101290.15943026451,0.5651389080201554, 2.3284291896053575, undefined)); //copied s9w35
                scenicList.push(new Scenery("ashaiTree", 353954.0111449534, -101646.13376461931,1.1709887142362227, 2.660894621400508, undefined)); //copied s9w35
                scenicList.push(new Scenery("ashaiTree", 353848.12235980615, -101916.7751802226,1.4045431943010407, 2.1426714116809156, undefined)); //copied s9w35
                scenicList.push(new Scenery("ashaiTree", 354094.998066007, -102076.82743235111,2.8779655209498674, 1.6782437689566256, undefined)); //copied s9w35
                scenicList.push(new Scenery("ashaiTree", 354036.9690100393, -102809.7975252697,2.991956265867583, 2.968375754193911, undefined)); //copied s9w35
                scenicList.push(new Scenery("ashaiTree", 354035.517763756, -102537.26161429954,5.2865907838033666, 1.5350422839647084, undefined)); //copied s9w35
                scenicList.push(new Scenery("ashaiTree", 353889.0346854777, -102321.04307275324,2.2396603407582196, 2.3753472190610934, undefined)); //copied s9w35
                scenicList.push(new Scenery("ashaiTree", 353933.20892859134, -103167.58708400655,1.794638132866727, 2.3089103618350157, undefined)); //copied s9w35
                scenicList.push(new Scenery("ashaiTree", 354053.89762636565, -103450.53185971905,0.007780658494836827, 2.0798696712590417, undefined)); //copied s9w35
                scenicList.push(new Scenery("ashaiTree", 353856.3127826414, -103625.08999167192,0.4871648924452969, 1.6564493399505649, undefined)); //copied s9w35
                scenicList.push(new Scenery("ashaiTree", 353950.838930546, -103902.08291074308,0.5674259203044112, 1.7525290423445448, undefined)); //copied s9w35
                scenicList.push(new Scenery("ashaiTree", 354069.5952901576, -104238.37068532269,0.07587012304866915, 1.3468873753924724, undefined)); //copied s9w35
                scenicList.push(new Scenery("ashaiTree", 353839.25280294946, -104508.7061637062,6.273889794414558, 1.8757924540051616, undefined)); //copied s9w35
                scenicList.push(new Scenery("ashaiTree", 354110.219898489, -105022.72432655879,5.782267227180035, 2.87693630246381, undefined)); //copied s9w35
                scenicList.push(new Scenery("ashaiTree", 353949.62190758047, -104793.06024360647,2.7582334277219562, 2.814162636248448, undefined)); //copied s9w35
                scenicList.push(new Scenery("ashaiTree", 353910.7119405966, -105432.43324529403,3.5290211734279007, 1.2668760296729986, undefined)); //copied s9w35

                for (var i = 0; i < 20; i++)
                {
                    for (var j = 0; j < 20; j++)
                    {
                        scenicList.push(new Scenery("ashaiTree", 352904 - (450 * i) - 900 * seeded(2 + (i * 9.65) + 4.9), -96010 - (460 * j) - 900 * seeded(i*(j+1) * 1.49 + 2.8),seeded((j + 2) + i * 56) * 2*Math.PI, Math.max(0.6, seeded((Math.sin(j + 9) + 1) * 4.5) * 2.6)));
                    }
                }

                scenicList.push(new Scenery("ashaiTree", 352592.33672329044, -95858.01174785873, 5.255671429336086, 2.3964383053468072));
                scenicList.push(new Scenery("ashaiTree", 352244.2272280376, -95555.61727722625, 3.2529783937621053, 2.981106699529046));
                scenicList.push(new Scenery("ashaiTree", 352088.15379747463, -95727.18520209062, 1.175973267586379, 2.1986280515982597));
                scenicList.push(new Scenery("ashaiTree", 351784.62351029407, -95504.31788313841, 4.055719166262464, 2.0600226780491186));
                scenicList.push(new Scenery("ashaiTree", 351347.32823043334, -95687.95153902617, 0.9190480003499473, 2.69699589305674));
                scenicList.push(new Scenery("ashaiTree", 351016.3135776763, -95526.2525783589, 6.090724926483376, 2.2503169700947));
                scenicList.push(new Scenery("ashaiTree", 350758.02823101456, -95850.32053934963, 2.339415522352189, 1.7138478902472079));
                scenicList.push(new Scenery("ashaiTree", 350503.0925819224, -95614.47167138768, 6.274344359286527, 2.155484493446491));
                scenicList.push(new Scenery("ashaiTree", 350311.6469283929, -95923.40077114444, 3.483313672808764, 1.4461702084630734));
                scenicList.push(new Scenery("ashaiTree", 349993.97850731673, -95708.1175054528, 0.7553250102290752, 0.8666648879039436));
                scenicList.push(new Scenery("ashaiTree", 349755.9184209831, -95495.94961673663, 0.2971435593880318, 2.887896569594827));
                scenicList.push(new Scenery("ashaiTree", 349497.92990802816, -95898.78722017015, 4.112698246309461, 0.8483189989878237));
                scenicList.push(new Scenery("ashaiTree", 349162.4156995462, -95697.71644135013, 5.690353443291867, 2.893746078253777));
                scenicList.push(new Scenery("ashaiTree", 349188.7081189717, -96098.48768895044, 1.7139502565854456, 2.8419279881132544));
                scenicList.push(new Scenery("ashaiTree", 348833.7847161099, -95859.56400942322, 6.169569105421893, 1.1222533563475943));
                scenicList.push(new Scenery("ashaiTree", 348674.2765161631, -95532.93035667282, 4.737915796645207, 0.8076421064091034));
                scenicList.push(new Scenery("ashaiTree", 348475.47950467444, -95763.30007113592, 2.36837139994207, 1.9541777084562875));
                scenicList.push(new Scenery("ashaiTree", 348047.9586745591, -95565.13727957937, 0.3139687322980946, 1.9915912375179912));
                scenicList.push(new Scenery("ashaiTree", 348070.65111285064, -95948.72710208777, 1.534460527023971, 1.7497498669760891));
                scenicList.push(new Scenery("ashaiTree", 348362.9745773271, -96226.94831167605, 3.7541468154231654, 0.9415658132905997));
                scenicList.push(new Scenery("ashaiTree", 347872.3351613987, -96247.83299898947, 6.023991411560824, 0.6079332532092124));
                scenicList.push(new Scenery("ashaiTree", 347489.78249105293, -96523.52006955586, 5.873167758813977, 2.4920060238898913));
                scenicList.push(new Scenery("ashaiTree", 347575.5560049088, -96981.29419744683, 1.5540656756829165, 2.8494189149876865));
                scenicList.push(new Scenery("ashaiTree", 347626.4245267881, -95696.87635908014, 0.34416675176714673, 1.404019576274866));
                scenicList.push(new Scenery("ashaiTree", 347284.76411815063, -95594.8240000405, 5.079012376419779, 2.5343032217285697));
                scenicList.push(new Scenery("ashaiTree", 346787.48650226754, -95471.96145465, 6.060221912662661, 1.7433184728161621));
                scenicList.push(new Scenery("ashaiTree", 346522.87569603475, -95859.17769559131, 3.4476117501442007, 1.8633999832382928));
                scenicList.push(new Scenery("ashaiTree", 346629.21911881585, -96340.67748817214, 3.993537490306269, 2.742719478567902));
                scenicList.push(new Scenery("ashaiTree", 346349.47538519796, -96123.03965277848, 3.9543414560655936, 1.282821376498331));
                scenicList.push(new Scenery("ashaiTree", 346015.9945674798, -95786.05122719995, 4.856404094985635, 1.397126479572329));
                scenicList.push(new Scenery("ashaiTree", 345786.49930002145, -95929.81814159408, 3.205763676947422, 2.3214626425440668));
                scenicList.push(new Scenery("ashaiTree", 345457.06239454256, -95861.74833726742, 1.3323386740267564, 2.5998246296380727));
                scenicList.push(new Scenery("ashaiTree", 345269.1162857513, -96149.25446025893, 2.656091572981849, 0.6099302921010455));
                scenicList.push(new Scenery("ashaiTree", 345486.91667397844, -96515.37785904374, 5.0143350701946785, 2.0883582185186285));
                scenicList.push(new Scenery("ashaiTree", 345881.37905158015, -96651.92287011872, 0.1991497441046059, 0.6817141233416569));
                scenicList.push(new Scenery("ashaiTree", 345531.81715351733, -96957.6519504962, 3.917865682737824, 1.163015809699274));
                scenicList.push(new Scenery("ashaiTree", 345317.8472476989, -97234.8316975825, 0.49233013296278666, 1.02826120412678));
                scenicList.push(new Scenery("ashaiTree", 345269.0640889205, -96738.33011609377, 5.338684925221179, 0.778289879675089));
                scenicList.push(new Scenery("ashaiTree", 345124.11890440393, -95805.25274907744, 2.1403620635172342, 1.0091828080854277));
                scenicList.push(new Scenery("ashaiTree", 344754.8063547482, -95966.09427403111, 3.968278642526665, 1.7870492499858672));
                scenicList.push(new Scenery("ashaiTree", 344547.9440558797, -96194.6061040313, 4.586414900767787, 2.126097627616945));
                scenicList.push(new Scenery("ashaiTree", 344335.25574598624, -95926.9612012589, 2.618390703813669, 1.3064379267405593));
                scenicList.push(new Scenery("ashaiTree", 343716.4463078892, -95885.60658725469, 1.4680761011788135, 1.2901491338701312));
                scenicList.push(new Scenery("ashaiTree", 343851.9452633226, -96452.35754953722, 3.635599471998825, 0.9362955299640805));
                scenicList.push(new Scenery("ashaiTree", 343916.765978511, -97009.85387315389, 4.362184508686099, 1.5952109460384434));
                scenicList.push(new Scenery("ashaiTree", 343738.6242402326, -97416.24057420014, 2.0119175510537413, 0.963106400161139));
                scenicList.push(new Scenery("ashaiTree", 344032.5440714462, -97490.50430520056, 3.391366731325361, 1.528788573125106));
                scenicList.push(new Scenery("ashaiTree", 343710.97958468605, -97954.16463059516, 5.3128452916201185, 1.521628096974714));
                scenicList.push(new Scenery("ashaiTree", 343792.16721552995, -98436.39380011702, 0.7412394575491382, 1.3112388836130258));
                scenicList.push(new Scenery("ashaiTree", 344354.2131125989, -98504.88793358729, 0.9181211675710106, 1.8251170426955858));
                scenicList.push(new Scenery("ashaiTree", 344589.18026334053, -98332.47362670329, 4.869729440665952, 1.0987485894274887));
                scenicList.push(new Scenery("ashaiTree", 344533.9178612389, -98885.60335111266, 3.700109535675914, 1.5263229323627252));
                scenicList.push(new Scenery("ashaiTree", 343728.2687626318, -99005.97526391667, 5.474078313000323, 0.6129098126035503));
                scenicList.push(new Scenery("ashaiTree", 344136.53586902336, -99706.72690073495, 5.2972631037399305, 0.721038165332316));
                scenicList.push(new Scenery("ashaiTree", 343753.129343838, -99598.69084290734, 0.058620719470201754, 2.9260727185762003));
                scenicList.push(new Scenery("ashaiTree", 343844.6772634142, -100010.55367317976, 2.8873794521419716, 2.167579634485386));
                scenicList.push(new Scenery("ashaiTree", 343756.90922425507, -100298.40702403148, 4.372041001602186, 1.2800003404064282));
                scenicList.push(new Scenery("ashaiTree", 343900.3886441552, -100950.72504440819, 3.9589805951896717, 0.9772728562832069));
                scenicList.push(new Scenery("ashaiTree", 344163.5612410906, -100867.03442097269, 3.274530856237601, 1.8852918453612473));
                scenicList.push(new Scenery("ashaiTree", 344590.8979374652, -100976.64335643427, 1.4430053622799381, 2.3171697139348444));
                scenicList.push(new Scenery("ashaiTree", 344610.5514190475, -100657.36002552454, 4.965011290863384, 1.3380769367636514));
                scenicList.push(new Scenery("ashaiTree", 344684.7548820508, -100232.85899149644, 4.690476671229898, 2.667977539491498));
                scenicList.push(new Scenery("ashaiTree", 344535.4826863252, -99853.84873364185, 5.143027775215924, 2.273141239485351));
                scenicList.push(new Scenery("ashaiTree", 344614.42504308646, -99458.47210468972, 1.1144512417962285, 1.222914724045309));
                scenicList.push(new Scenery("ashaiTree", 345244.0351673578, -99162.05656176175, 0.35005372075906593, 2.1037765115128964));
                scenicList.push(new Scenery("ashaiTree", 345540.50363500044, -98802.98181533662, 0.6930613033516978, 2.8222944700590578));
                scenicList.push(new Scenery("ashaiTree", 345412.3098309217, -99596.33417015277, 4.516683151031376, 0.6044432745034527));
                scenicList.push(new Scenery("ashaiTree", 345358.4130777885, -100042.34150189802, 1.0714143950182464, 0.907436838991994));
                scenicList.push(new Scenery("ashaiTree", 345272.01896392304, -100318.08871842481, 2.4337047636193416, 2.688189200086995));
                scenicList.push(new Scenery("ashaiTree", 345560.7549636468, -100698.09336977037, 6.224614397197703, 2.275040706140015));
                scenicList.push(new Scenery("ashaiTree", 345196.2631723462, -100795.30918432907, 4.597341977046047, 2.601134476065457));
                scenicList.push(new Scenery("ashaiTree", 345480.2614748089, -101026.7856892349, 2.8241816968755113, 2.8718460270797577));
                scenicList.push(new Scenery("ashaiTree", 345261.96582970506, -101256.93510804835, 5.8091862747902745, 2.783996913894696));
                scenicList.push(new Scenery("ashaiTree", 345490.5360653241, -101629.90648938494, 0.3967727816865411, 2.9817878540114027));
                scenicList.push(new Scenery("ashaiTree", 345134.94439071976, -101587.47420583077, 4.653815373870097, 0.9228088236326961));
                scenicList.push(new Scenery("ashaiTree", 344644.6067892694, -101821.21856138614, 5.532859846052876, 0.8630009787026198));
                scenicList.push(new Scenery("ashaiTree", 344431.1720921392, -101590.3788763565, 3.1756572004347157, 2.1934368928994896));
                scenicList.push(new Scenery("ashaiTree", 344135.5720262762, -101554.98611733699, 2.235397366579453, 2.117607540652573));
                scenicList.push(new Scenery("ashaiTree", 343770.4946236407, -101463.5825217146, 4.206052880770307, 2.5865234297000486));
                scenicList.push(new Scenery("ashaiTree", 343778.0430562714, -102070.4085538443, 5.761537171463094, 1.875581965026822));
                scenicList.push(new Scenery("ashaiTree", 344361.10398241476, -102142.34299166, 5.624627274420367, 0.9500687650302341));
                scenicList.push(new Scenery("ashaiTree", 344627.59680288465, -102142.78709482824, 3.3691660589715884, 2.7604323637575776));
                scenicList.push(new Scenery("ashaiTree", 344438.9426273507, -102417.89878723692, 5.434834031871665, 2.4474596158928428));
                scenicList.push(new Scenery("ashaiTree", 344550.55266938725, -102834.3337043172, 2.7204325134100142, 2.0396460918942743));
                scenicList.push(new Scenery("ashaiTree", 344647.9702719627, -103096.92456418136, 0.26406956202301635, 2.614859113420178));
                scenicList.push(new Scenery("ashaiTree", 344472.65771902044, -103363.22635094178, 0.14905388596366403, 2.200915102223991));
                scenicList.push(new Scenery("ashaiTree", 344630.08724953915, -103555.3049539672, 4.02568479353077, 2.2275591763486338));
                scenicList.push(new Scenery("ashaiTree", 344451.2014340432, -103826.81849026124, 1.3332107800440083, 1.8965046695854615));
                scenicList.push(new Scenery("ashaiTree", 343992.02740355156, -103690.46764093835, 4.611714118200224, 1.4723825027852966));
                scenicList.push(new Scenery("ashaiTree", 343704.9832804035, -103447.14739706977, 2.267933141488698, 0.8764799947848191));
                scenicList.push(new Scenery("ashaiTree", 343755.27976605407, -103898.88299022692, 2.5292952117239507, 2.0137324143526567));
                scenicList.push(new Scenery("ashaiTree", 343764.3024975526, -104511.49992468879, 1.5529564844521255, 2.128108539939918));
                scenicList.push(new Scenery("ashaiTree", 344354.83669508854, -104603.23845700706, 1.8205377748456233, 2.6674612919710095));
                scenicList.push(new Scenery("ashaiTree", 344691.70175676444, -104428.00674970321, 4.197088815406614, 1.8010785111189902));
                scenicList.push(new Scenery("ashaiTree", 345233.36366048537, -104316.01597699756, 5.953831032031761, 1.539379305889414));
                scenicList.push(new Scenery("ashaiTree", 353457.78264826164, -95797.40153818454, 0.6059839202520773, 1.7276476994672003));
                scenicList.push(new Scenery("ashaiTree", 353130.76133482176, -95887.90973173892, 2.7942771398398483, 1.4494117942007758));
                scenicList.push(new Scenery("ashaiTree", 353210.9857195393, -95578.6622317462, 0.12545696401902282, 1.0841274501172806));
                scenicList.push(new Scenery("ashaiTree", 353565.7648218973, -95527.90228982476, 2.163236572066466, 1.642155954727738));
                scenicList.push(new Scenery("ashaiTree", 352892.1550478304, -95661.62479934593, 4.082291920547319, 2.905023503883669));
                scenicList.push(new Scenery("ashaiTree", 352686.4563432746, -95551.64330817261, 5.362376331918862, 2.5365079206498247));
                scenicList.push(new Scenery("ashaiTree", 353394.2312058213, -96108.65565142214, 2.1053765384557233, 2.9502309026387135));
                scenicList.push(new Scenery("ashaiTree", 352588.7388108032, -101643.62676297071, 0.014306885282733672, 1.9744276788326012));
                scenicList.push(new Scenery("ashaiTree", 352677.17393036454, -101126.76591424216, 0.9670133638365851, 0.9642013394985889));
                scenicList.push(new Scenery("ashaiTree", 352823.79384178575, -100782.91284369986, 4.858698901087807, 2.6523795673147084));
                scenicList.push(new Scenery("ashaiTree", 351947.3956013748, -100792.9702400531, 5.1736586694049524, 1.794812787971746));
                scenicList.push(new Scenery("ashaiTree", 351878.409483895, -100279.72991046183, 5.543268007773893, 2.629954493282616));
                scenicList.push(new Scenery("ashaiTree", 351600.6060561482, -100003.20315350898, 0.1271319475102719, 0.8670736642527629));
                scenicList.push(new Scenery("ashaiTree", 351941.63117748464, -99857.42541229758, 2.5138665680984214, 1.703136335270417));
                scenicList.push(new Scenery("ashaiTree", 351991.7042019531, -99480.8673358426, 5.78758047026534, 1.3856443491404975));
                scenicList.push(new Scenery("ashaiTree", 351723.8612870066, -99151.75442968201, 4.715297010882182, 1.1438426702083033));
                scenicList.push(new Scenery("ashaiTree", 351846.40354996716, -98887.7365675311, 5.752872780261996, 1.689648647279248));
                scenicList.push(new Scenery("ashaiTree", 352729.699745874, -98959.08762635282, 4.518330695869687, 2.0181772253629844));
                scenicList.push(new Scenery("ashaiTree", 352872.13872656605, -98683.86703312307, 3.9627833636411305, 1.8487533810496548));
                scenicList.push(new Scenery("ashaiTree", 352921.81766304915, -98051.71841200927, 4.133223054258406, 1.5980062101050017));
                scenicList.push(new Scenery("ashaiTree", 353131.4859235913, -98543.08922742616, 2.8807241278350153, 1.183230512503807));
                scenicList.push(new Scenery("ashaiTree", 353323.3140351326, -98335.73306204748, 3.5217576371622314, 1.1588497578601262));
                scenicList.push(new Scenery("ashaiTree", 353552.6223005603, -98539.69924509039, 5.441214932954165, 0.9535203405194008));
                scenicList.push(new Scenery("ashaiTree", 353574.6653909528, -98179.84117351634, 2.81368211670765, 1.8844543277159143));
                scenicList.push(new Scenery("ashaiTree", 353386.7784788319, -97948.77825835145, 3.3669325716232716, 1.3802304873012954));
                scenicList.push(new Scenery("ashaiTree", 353746.1742980181, -97952.47974592066, 0.7830490910496122, 1.7430477799541038));
                scenicList.push(new Scenery("ashaiTree", 353550.8077053285, -97588.27107192775, 2.124103133223424, 1.5830012287367792));
                scenicList.push(new Scenery("ashaiTree", 353637.4131347391, -97435.3815696381, 4.980062386247962, 2.3828604589171656));
                scenicList.push(new Scenery("ashaiTree", 353511.67608339054, -97174.7157296575, 5.8590986661888484, 1.7777887939113803));
                scenicList.push(new Scenery("ashaiTree", 353664.4258753666, -97020.79655904215, 3.9959700343893885, 2.126687820767116));
                scenicList.push(new Scenery("ashaiTree", 353481.5550256114, -96868.96796165442, 0.42199661423701174, 1.109386597057409));
                scenicList.push(new Scenery("ashaiTree", 353481.1848482507, -96583.08420213842, 3.4601543618597477, 2.716007842516496));
                scenicList.push(new Scenery("ashaiTree", 353696.64307949296, -96461.74799051647, 1.5275187755761164, 1.872641687320626));
                scenicList.push(new Scenery("ashaiTree", 353208.7630277035, -96375.74130518019, 2.429000911628739, 1.1459935024247634));
                scenicList.push(new Scenery("ashaiTree", 353114.71659133094, -96703.65594208532, 2.9943377634098685, 2.5067007229218117));
                scenicList.push(new Scenery("ashaiTree", 353054.89906218834, -96912.337569927, 4.776224344532786, 1.3646682746244023));
                scenicList.push(new Scenery("ashaiTree", 353240.452928134, -97091.99283891049, 0.3786929419501088, 1.7903339755224041));
                scenicList.push(new Scenery("ashaiTree", 353103.35289886274, -97358.40757234706, 4.862963001030892, 0.8284346623079912));
                scenicList.push(new Scenery("ashaiTree", 353137.08565198234, -97665.46792805151, 4.158000358520942, 1.349809197482547));
                scenicList.push(new Scenery("ashaiTree", 352908.5568960296, -105480.99511513454, 1.1856056117531173, 1.8719679949452073));
                scenicList.push(new Scenery("ashaiTree", 353035.74470850994, -99278.06817322873, 1.4689837648039192, 2.9678116282144686));
                scenicList.push(new Scenery("ashaiTree", 353416.7672383103, -99431.42725655071, 1.5390730157202301, 2.7827088848164507));
                scenicList.push(new Scenery("ashaiTree", 353693.87505504745, -99312.90329174745, 1.0043256080914837, 0.714354014055965));
                scenicList.push(new Scenery("ashaiTree", 353623.4770833911, -99688.51300175952, 4.260149541077939, 1.6903055583916862));
                scenicList.push(new Scenery("ashaiTree", 353243.0171073558, -99681.03567992234, 3.9303002356061896, 2.7706432319622554));
                scenicList.push(new Scenery("ashaiTree", 353448.2949713043, -99978.48998493238, 2.0362724918177317, 1.9356694183939878));
                scenicList.push(new Scenery("ashaiTree", 353649.41362973937, -100146.0768991231, 1.3273602657821053, 1.6945093263001865));
                scenicList.push(new Scenery("ashaiTree", 353497.4622656528, -100474.43155348238, 2.145149459661119, 2.34616885187574));
                scenicList.push(new Scenery("ashaiTree", 353665.5519680058, -100722.00493384732, 2.392872932971611, 1.7379907737865121));
                scenicList.push(new Scenery("ashaiTree", 353679.2910354563, -101112.72294328721, 4.977876658137577, 0.874211046397823));
                scenicList.push(new Scenery("ashaiTree", 353383.846932496, -101204.81809278761, 0.9157698555572064, 1.6326930721927608));
                scenicList.push(new Scenery("ashaiTree", 353248.200810342, -100961.6880733599, 0.2752165073438995, 0.9160455339776852));
                scenicList.push(new Scenery("ashaiTree", 353360.2813368478, -101491.95220887457, 4.259145799227098, 1.4165454137232887));
                scenicList.push(new Scenery("ashaiTree", 353521.44408579374, -101688.06451692885, 3.392353937484034, 1.317505786177274));
                scenicList.push(new Scenery("ashaiTree", 353493.0392382738, -102077.58994491218, 2.8361683423658386, 1.2433736582383212));
                scenicList.push(new Scenery("ashaiTree", 353300.712992201, -101937.80803861185, 4.752130427153261, 0.858975927632101));
                scenicList.push(new Scenery("ashaiTree", 353258.45322778967, -102224.0478951378, 3.434052477068517, 2.8037661521591923));
                scenicList.push(new Scenery("ashaiTree", 353569.0612296074, -102511.8713980205, 1.2611913692725027, 1.2530442900500423));
                scenicList.push(new Scenery("ashaiTree", 353332.0206070329, -102495.3379889018, 0.645243303738919, 2.8078118940229246));
                scenicList.push(new Scenery("ashaiTree", 353485.13866683556, -102833.4945406427, 2.919769803621925, 1.395241659791322));
                scenicList.push(new Scenery("ashaiTree", 353687.927180266, -102758.8904140058, 6.0832562721251096, 2.1862404407038993));
                scenicList.push(new Scenery("ashaiTree", 353130.005230625, -102746.08257090248, 2.2924695039190963, 1.4378484651239223));
                scenicList.push(new Scenery("ashaiTree", 353247.802571932, -103160.05364320625, 2.2401745459787876, 1.7022333067111228));
                scenicList.push(new Scenery("ashaiTree", 353584.79198555637, -103109.23353626284, 5.798848010944488, 2.1302155019991784));
                scenicList.push(new Scenery("ashaiTree", 353438.1371122132, -103495.51942715047, 4.432695432218698, 1.6200459550699522));
                scenicList.push(new Scenery("ashaiTree", 353666.3696136788, -103399.08681962374, 4.944817221510566, 1.9044269435331609));
                scenicList.push(new Scenery("ashaiTree", 353518.4505033496, -103771.87121476658, 1.8353398914107764, 2.591169939364252));
                scenicList.push(new Scenery("ashaiTree", 353249.78283760627, -103764.90014653231, 4.994441133172148, 0.8572974722326302));
                scenicList.push(new Scenery("ashaiTree", 353415.82648104016, -104062.89713915966, 5.441063267159619, 2.880619948003093));
                scenicList.push(new Scenery("ashaiTree", 353672.9704245093, -104252.23477453396, 4.453895096165047, 1.822258926985771));
                scenicList.push(new Scenery("ashaiTree", 353320.52565454046, -104521.86450495785, 0.516868631759295, 2.971286965511712));
                scenicList.push(new Scenery("ashaiTree", 353537.70002238743, -104713.19098657691, 3.782562936931535, 1.8423007176617512));
                scenicList.push(new Scenery("ashaiTree", 353208.2894705053, -104978.34679873417, 1.4272706892323526, 2.058403920345246));
                scenicList.push(new Scenery("ashaiTree", 353578.8446537109, -105184.01632153626, 3.1626751142663183, 0.6061422568478939));
                scenicList.push(new Scenery("ashaiTree", 353436.77826720435, -105481.1089495222, 1.3339922025407633, 2.4725522610810957));
                scenicList.push(new Scenery("ashaiTree", 353155.42424601724, -105241.7355944796, 2.96941476857898, 2.737638108783532));
                scenicList.push(new Scenery("ashaiTree", 353451.4959044205, -98828.59707687076, 6.006673479282337, 2.9369498006836903));
                scenicList.push(new Scenery("ashaiTree", 353579.8049394641, -99056.83772491827, 6.271236578102664, 1.0499388797285507));
                scenicList.push(new Scenery("ashaiTree", 353313.15848264477, -99030.27237396305, 4.9911637027007965, 1.910689466235851));
                scenicList.push(new Scenery("ashaiTree", 353066.5796740389, -98924.19975707142, 0.18676553630602236, 2.1586385837952538));
                scenicList.push(new Scenery("ashaiTree", 352979.25939699746, -104722.99051993327, 4.907221335137543, 2.5600078416810983));
                scenicList.push(new Scenery("ashaiTree", 352613.7799953055, -104997.37046003992, 0.1990043286075128, 1.3193851900776217));
                scenicList.push(new Scenery("ashaiTree", 352875.04048914387, -105239.82268947983, 5.622986174751121, 1.774717680684223));
                scenicList.push(new Scenery("ashaiTree", 352529.4021928209, -105337.37607945573, 2.56472126385305, 2.48978750578212));
                scenicList.push(new Scenery("ashaiTree", 351900.5026853514, -105345.21063610619, 2.037898202124747, 1.2933379253411939));
                scenicList.push(new Scenery("ashaiTree", 351438.02525993023, -105414.02330897014, 0.7101863150127617, 0.7230928682144945));
                scenicList.push(new Scenery("ashaiTree", 350996.50243948324, -105156.7257482655, 4.292595526430889, 2.7834346031491983));
                scenicList.push(new Scenery("ashaiTree", 351363.4418187564, -105158.86783147194, 6.114130125167321, 1.6292082518382447));
                scenicList.push(new Scenery("ashaiTree", 350333.33620724134, -105214.28804871671, 2.532954421819044, 1.7670308457183599));
                scenicList.push(new Scenery("ashaiTree", 350357.7731486723, -104788.06492672236, 3.7108225998719484, 1.957524050470072));
                scenicList.push(new Scenery("ashaiTree", 349575.373586994, -104782.60932200948, 2.214238535261377, 1.806236217920334));
                scenicList.push(new Scenery("ashaiTree", 349150.3466677014, -105270.66519020936, 2.0856255153255208, 2.2269959422275902));
                scenicList.push(new Scenery("ashaiTree", 350065.01774691493, -105460.66795679761, 4.570628547520142, 1.8678017060055625));
                scenicList.push(new Scenery("ashaiTree", 348695.91812814923, -105469.4239541493, 1.8725452196187131, 2.89361141468803));
                scenicList.push(new Scenery("ashaiTree", 347956.2360948415, -105066.51298822822, 3.267873201010651, 2.886869050997649));
                scenicList.push(new Scenery("ashaiTree", 348311.38891687803, -105014.70174435953, 2.762459709827147, 2.9304894447100938));
                scenicList.push(new Scenery("ashaiTree", 347624.4282301889, -105377.45539457338, 1.5321621967278953, 1.9171301114664225));
                scenicList.push(new Scenery("ashaiTree", 347200.2389883192, -105288.66473545658, 1.6543550374337066, 2.1836527387724773));
                scenicList.push(new Scenery("ashaiTree", 347514.6779894602, -104965.98063223003, 3.26772074651237, 2.257456617965238));
                scenicList.push(new Scenery("ashaiTree", 347442.5255827991, -104623.93020100794, 5.916504546804029, 1.8386829466191768));
                scenicList.push(new Scenery("ashaiTree", 347618.8672117506, -104415.37279824351, 2.0863315018959288, 2.0032939664032656));
                scenicList.push(new Scenery("ashaiTree", 346614.10608801094, -104445.23930814158, 2.473201900834857, 0.9414732661591086));
                scenicList.push(new Scenery("ashaiTree", 346639.5071775067, -104960.50510737588, 0.844983942798008, 0.6700762775458361));
                scenicList.push(new Scenery("ashaiTree", 346321.9179017315, -104917.71034687075, 0.9120980146911803, 2.9151269570697877));
                scenicList.push(new Scenery("ashaiTree", 346260.6107149951, -105301.2226935431, 4.944152925441308, 2.136203283978545));
                scenicList.push(new Scenery("ashaiTree", 346755.02443235903, -105333.23152204191, 2.579664704446628, 1.633858125714204));
                scenicList.push(new Scenery("ashaiTree", 345948.2461617475, -105231.73095043127, 2.797433364088509, 1.112811551425526));
                scenicList.push(new Scenery("ashaiTree", 345529.76992588426, -105405.28469732606, 0.9114007822886201, 2.31940184875917));
                scenicList.push(new Scenery("ashaiTree", 345249.95526475884, -105081.36588259973, 3.8005463804371318, 1.237314725773994));
                scenicList.push(new Scenery("ashaiTree", 345020.190726703, -105473.78674353694, 4.984342952164931, 2.7089625837276845));
                scenicList.push(new Scenery("ashaiTree", 344664.78148102405, -105252.47865018382, 2.69277634299081, 1.6281920522937963));
                scenicList.push(new Scenery("ashaiTree", 344346.6055273666, -105462.10382116845, 5.340349534786998, 2.3826248960127665));
                scenicList.push(new Scenery("ashaiTree", 343918.8743516521, -105378.6906275909, 5.542826929080564, 1.7633513036397508));
                scenicList.push(new Scenery("ashaiTree", 343767.20251566375, -105010.4976840278, 1.350978306820472, 1.598675755055396));
                scenicList.push(new Scenery("ashaiTree", 344050.32380354375, -105115.053546666, 1.9221336229401145, 1.1324096806519157));
                scenicList.push(new Scenery("ashaiTree", 344571.33334382914, -104982.39425474733, 5.932959685608341, 2.1439677093272813));
                scenicList.push(new Scenery("ashaiTree", 345389.15016685525, -104656.79633810927, 5.666659900202955, 1.8015757049123962));
                scenicList.push(new Scenery("ashaiTree", 345514.07832944766, -104915.83135318072, 3.344007298264512, 2.193981700729278));
                scenicList.push(new Scenery("ashaiTree", 345645.6655082031, -104119.08508747465, 0.5416176063702022, 1.4178780082696836));
                scenicList.push(new Scenery("ashaiTree", 345302.3615705321, -103872.87787068702, 2.3373229414578303, 1.537066514575457));
                scenicList.push(new Scenery("ashaiTree", 345527.3243700602, -103578.27984029152, 2.046576421591618, 2.1062611933680047));
                scenicList.push(new Scenery("ashaiTree", 345297.1525455815, -103343.71928005989, 4.5235754750989114, 2.915562626331537));
                scenicList.push(new Scenery("ashaiTree", 345475.3670220752, -103075.91161835154, 3.5510543888580344, 0.8293012272796761));
                scenicList.push(new Scenery("ashaiTree", 345331.9375115165, -102794.413000204, 5.063885370073292, 2.013690074115694));
                scenicList.push(new Scenery("ashaiTree", 345749.861772075, -102858.51929017282, 2.9832829868326227, 0.7782736586285712));
                scenicList.push(new Scenery("ashaiTree", 345985.73816375947, -102690.34264042969, 5.703633141208543, 1.065901859881876));
                scenicList.push(new Scenery("ashaiTree", 346329.36355940375, -102976.79298261726, 4.171444556982675, 1.351360017408784));
                scenicList.push(new Scenery("ashaiTree", 346723.61614290293, -102958.30985597834, 3.200046969378234, 0.8997061597673257));
                scenicList.push(new Scenery("ashaiTree", 346834.7345021353, -102720.6881117181, 2.104508957697403, 2.1877266078977082));
                scenicList.push(new Scenery("ashaiTree", 346731.2557627541, -102417.83270040591, 0.000387277595692584, 1.10723508744457));
                scenicList.push(new Scenery("ashaiTree", 346858.43072627694, -103419.37089983092, 5.942539400600942, 1.0301890433889551));
                scenicList.push(new Scenery("ashaiTree", 346527.22075698525, -103719.5194430402, 5.0863734110265355, 1.1235838818585027));
                scenicList.push(new Scenery("ashaiTree", 346844.19553592097, -103975.05455011739, 1.176480872901799, 2.3865624222364974));
                scenicList.push(new Scenery("ashaiTree", 346262.93830018514, -103488.63014119936, 0.34637068658709513, 2.516156359594952));
                scenicList.push(new Scenery("ashaiTree", 346002.3141172964, -103735.73752489199, 0.3115904850223508, 1.8611569448453085));
                scenicList.push(new Scenery("ashaiTree", 346256.7958443481, -104430.94280761575, 3.151706335824634, 0.6098938399082697));
                scenicList.push(new Scenery("ashaiTree", 347916.06749067735, -103883.70783995424, 3.8242195093465816, 1.2808444228545346));
                scenicList.push(new Scenery("ashaiTree", 352671.3865982693, -99237.59018850881, 5.704285375111032, 2.9294558109334288));
                scenicList.push(new Scenery("ashaiTree", 351375.6741339719, -98774.22572367708, 4.461539031527385, 2.869793023627362));
                scenicList.push(new Scenery("ashaiTree", 350793.9699677341, -99087.09172899793, 6.248998171916536, 2.9075852567743863));
                scenicList.push(new Scenery("ashaiTree", 350341.0064859881, -98824.26802237787, 0.130639145509467, 0.9245374104183541));
                scenicList.push(new Scenery("ashaiTree", 350320.58025612135, -99161.51571557559, 4.057340289101038, 2.686000575926685));
                scenicList.push(new Scenery("ashaiTree", 349598.7741025215, -99047.20095453455, 4.308389090363938, 2.938838180887582));
                scenicList.push(new Scenery("ashaiTree", 349348.0040676462, -99362.87729009298, 3.39030081967613, 1.1600926162187526));
                scenicList.push(new Scenery("ashaiTree", 349591.0157270343, -99323.28496302749, 5.436662089230422, 0.6750025279072808));
                scenicList.push(new Scenery("ashaiTree", 349364.40751337964, -98700.85236281433, 1.392749010566458, 2.413831725884418));
                scenicList.push(new Scenery("ashaiTree", 348713.24299858813, -98365.98775441828, 2.9072620763395887, 0.694338971707683));
                scenicList.push(new Scenery("ashaiTree", 348265.90132504795, -98264.02399662601, 5.276723852543119, 1.1161851431460421));
                scenicList.push(new Scenery("ashaiTree", 348252.22536038666, -97987.650482806, 1.3390885518300297, 2.8089754150035517));
                scenicList.push(new Scenery("ashaiTree", 347737.2393360387, -97993.68739665541, 0.7382836825229383, 1.3301300184528948));
                scenicList.push(new Scenery("ashaiTree", 347462.53859834676, -98212.94072092409, 6.1676743781238175, 1.87903920292626));
                scenicList.push(new Scenery("ashaiTree", 347553.2728734692, -98532.26240057146, 6.060119443862328, 0.67508221226483));
                scenicList.push(new Scenery("ashaiTree", 347249.0638781556, -98781.46848097842, 4.86747904077626, 1.1765215775112983));
                scenicList.push(new Scenery("ashaiTree", 347626.42467180395, -99001.35532821358, 2.01885054983069, 1.015124101163312));
                scenicList.push(new Scenery("ashaiTree", 347985.3765318044, -98817.29778409304, 2.4715307994484896, 0.8208545900325761));
                scenicList.push(new Scenery("ashaiTree", 347619.0157187078, -98769.4409796612, 1.9852642904818896, 1.815484259787696));
                scenicList.push(new Scenery("ashaiTree", 347355.19717631576, -99378.00082243473, 1.328836991571438, 1.9428465658126806));
                scenicList.push(new Scenery("ashaiTree", 347642.41232603404, -99677.06136609628, 0.5502172110352062, 2.7605423544823675));
                scenicList.push(new Scenery("ashaiTree", 348077.8810462442, -99452.1968077117, 3.0390065730709663, 2.0189718065915607));
                scenicList.push(new Scenery("ashaiTree", 347643.335204777, -99442.0280251749, 4.0721918480374315, 0.9325683763232661));
                scenicList.push(new Scenery("ashaiTree", 346833.31386412453, -99321.52613964252, 3.0997618974712573, 0.623278431354853));
                scenicList.push(new Scenery("ashaiTree", 346744.62480563065, -98804.53330119823, 0.4823650484258924, 2.401979643202803));
                scenicList.push(new Scenery("ashaiTree", 346685.05708260083, -98172.55879082296, 2.9548796276415916, 2.265094548099813));
                scenicList.push(new Scenery("ashaiTree", 346139.5937717952, -98237.16485994763, 3.0182045191622637, 0.7671955575287608));
                scenicList.push(new Scenery("ashaiTree", 346459.4805123035, -98045.88633526863, 5.490003063832775, 2.4205431742831096));
                scenicList.push(new Scenery("ashaiTree", 346679.1123886304, -97815.19280088863, 2.0869148971886586, 0.8996044085856831));
                scenicList.push(new Scenery("ashaiTree", 346725.71020999475, -97493.78643822823, 5.611748391663441, 2.964907541957591));
                scenicList.push(new Scenery("ashaiTree", 346368.6672916176, -97389.0999328916, 3.1487318737801537, 2.912969754717016));
                scenicList.push(new Scenery("ashaiTree", 346739.7420469271, -97176.00088239672, 1.382652326115187, 1.401423348108358));
                scenicList.push(new Scenery("ashaiTree", 346906.86966438114, -96579.71454316172, 4.207338645545379, 2.953502048326382));
                scenicList.push(new Scenery("ashaiTree", 347268.8678981795, -96368.86994131631, 1.9101608719968688, 2.3180249425420594));
                scenicList.push(new Scenery("ashaiTree", 347535.39304841106, -96109.90914241108, 0.01446694021346281, 1.7331827310960222));
                scenicList.push(new Scenery("ashaiTree", 347130.8120967396, -95835.60247330068, 0.8342838892544027, 1.529138013257437));
                scenicList.push(new Scenery("ashaiTree", 352717.0840289557, -99838.27647638127, 1.404477380619832, 2.8106358586440683));
                scenicList.push(new Scenery("ashaiTree", 352677.8674369584, -99466.66267829976, 3.677695773771461, 1.3869367671415929));
                scenicList.push(new Scenery("ashaiTree", 353021.3099429879, -99538.99604227846, 5.029457175297358, 1.6271663956981812));
                scenicList.push(new Scenery("ashaiTree", 352698.50984803727, -100294.10984110078, 5.575224275530171, 2.7038804602948123));
                scenicList.push(new Scenery("ashaiTree", 353088.94961999403, -100105.52698076676, 3.2135895036488047, 2.8949513065021395));
                scenicList.push(new Scenery("ashaiTree", 352699.03497820516, -103940.39047323144, 0.11451430887450656, 2.232817233404973));
                scenicList.push(new Scenery("ashaiTree", 352984.0934479358, -104300.316492954, 0.23343747466962125, 2.891722626744306));
                scenicList.push(new Scenery("ashaiTree", 352686.57300520927, -104583.69234570654, 5.458441151166748, 1.3474391409155992));
                scenicList.push(new Scenery("ashaiTree", 352462.28208688746, -104314.22791368404, 1.107012017293937, 1.1198361576160947));
                scenicList.push(new Scenery("ashaiTree", 352391.1379335927, -103950.24594426765, 5.426171219422409, 1.909729577519316));
                scenicList.push(new Scenery("ashaiTree", 351930.0745111991, -104138.40834873723, 1.807330970040021, 0.7176009831171117));
                scenicList.push(new Scenery("ashaiTree", 351764.4815000346, -104464.8853971447, 4.604278262247346, 0.7202127579651241));
                scenicList.push(new Scenery("ashaiTree", 351481.89466380724, -104367.35030916036, 2.0423778191769646, 2.5875969361190774));
                scenicList.push(new Scenery("ashaiTree", 352081.57479618024, -104372.66266173027, 5.402560668480461, 0.9770188524763728));
                scenicList.push(new Scenery("ashaiTree", 351980.3096896482, -103473.28393009173, 1.6429128313691232, 2.702192474681444));
                scenicList.push(new Scenery("ashaiTree", 351674.5809922423, -103568.70415097968, 4.524531693341536, 2.7190031047245014));
                scenicList.push(new Scenery("ashaiTree", 351304.94452493027, -103546.86321116549, 0.612170147169233, 1.2412393504929433));
                scenicList.push(new Scenery("ashaiTree", 351600.0023055602, -103303.60933858663, 1.4745599390378772, 1.9532813828768272));
                scenicList.push(new Scenery("ashaiTree", 352002.4915399604, -103049.03633964168, 4.720246895245473, 0.7251437006527897));
                scenicList.push(new Scenery("ashaiTree", 351920.6694832599, -102633.09953657696, 2.8432842660484274, 1.7839601991207736));
                scenicList.push(new Scenery("ashaiTree", 352216.0484367272, -102540.26414718952, 3.6257974138239932, 2.2691122588158485));
                scenicList.push(new Scenery("ashaiTree", 352640.99779712106, -102609.1268511725, 4.673490820065635, 1.3178903778680204));
                scenicList.push(new Scenery("ashaiTree", 352995.99814706604, -102465.54722551611, 2.2162093598329324, 2.434809107730169));
                scenicList.push(new Scenery("ashaiTree", 352991.9333720924, -101317.2217400356, 5.619971778578635, 1.1532341470944605));
                scenicList.push(new Scenery("ashaiTree", 352770.8487915542, -102963.43936093157, 2.2659324171703488, 1.1962840633448248));
                scenicList.push(new Scenery("ashaiTree", 352875.82362697955, -103415.72066191735, 1.4056910286677262, 0.6685302292171028));
                scenicList.push(new Scenery("ashaiTree", 353032.3243480582, -103636.16600863099, 3.1781526700636022, 1.0868749535682372));
                scenicList.push(new Scenery("ashaiTree", 351991.9234800908, -96503.68208811029, 5.068928612361924, 1.5151417527530557));
                scenicList.push(new Scenery("ashaiTree", 351750.98629223165, -96254.92113856481, 0.537953346825563, 2.012055033351036));
                scenicList.push(new Scenery("ashaiTree", 351822.334621608, -95979.82417054151, 2.7189418043249898, 0.8367127209539136));
                scenicList.push(new Scenery("ashaiTree", 352280.0355094619, -96179.53263015834, 2.144094661402996, 2.8051923013985745));
                scenicList.push(new Scenery("ashaiTree", 352341.2980783034, -96564.53666829757, 5.913103051763356, 1.397675563244659));
                scenicList.push(new Scenery("ashaiTree", 352645.27468628995, -96697.53200393167, 5.231583508422432, 2.242749923342345));
                scenicList.push(new Scenery("ashaiTree", 352801.8652375538, -96370.09464414396, 1.4830035684126281, 1.737926884201836));
                scenicList.push(new Scenery("ashaiTree", 352514.9945867733, -96386.34033027865, 5.66860620996528, 0.6568188436212875));
                scenicList.push(new Scenery("ashaiTree", 352907.55361311056, -96119.56295398556, 2.54847652454996, 2.521275775436465));
                scenicList.push(new Scenery("ashaiTree", 352518.3780198877, -96143.05270476949, 5.483289449712305, 2.233784952593538));

                //resources
                //plants
                //scenicList.push(new Scenery("ashaiTree", 3750, 2500, 0, 1));
                //scenicList.push(new Scenery("iodPlant", 3750, 2500, 0, true));
                //scenicList.push(new Scenery("poegroonPlant", 3800, 2500, 0, true));
                //scenicList.push(new Scenery("gribnoyPlant", 3700, 2500, 0, true));
                //scenicList.push(new Scenery("maleotPlant", 3600, 2500, 0, true));
                //scenicList.push(new Scenery("kozlyakPlant", 3600, 2500, 3.2, true));
                //scenicList.push(new Scenery("cranberryPlant", 3750, 2500, 0, true));
                //scenicList.push(new Scenery("meklePlant", 3400, 2400, 2.2, true));
                //scenicList.push(new Scenery("laicaumPlant", 3200, 2400, 1.2, true));
                //scenicList.push(new Scenery("danzigPlant", 3000, 2400, 3, true));
                //scenicList.push(new Scenery("chyoulPlant", 357882.8953537681, -99262.74397537451, -3.4, true));
                //scenicList.push(new Scenery("ameloyPlant", 356044.4330237502, -99515.98251027979, 2.3, true));
                //scenicList.push(new Scenery("thadinePlant", 3200, 2400, 1.2, true));

                //scenery stuffs
                //scenicList.push(new Scenery("ashaiCampFire", 3750, 2500, 0, true));
                //scenicList.push(new Scenery("viudaTunnel", 3500, 2500, 0, true, false));

                //units
                //ArtificialIntelligenceAccess.push(new Unit(5550, 2500, "Koivaya", false, "loner"));
                //ArtificialIntelligenceAccess.push(new Unit(4100, 2300, "BlackBeruln", true, "Hutu"));
                //ArtificialIntelligenceAccess.push(new Unit(4100, 2500, "Deer", true, "Iclom"));
                //ArtificialIntelligenceAccess.push(new Unit(4500, 2500, "Wendigo", false, "wendy"));
                //ArtificialIntelligenceAccess.push(new Unit(4500, 2500, "Crow", true, "Seven"));
                //ArtificialIntelligenceAccess.push(new Unit(62507, -13387, "BlackBear", true, "Jude"));
                //ArtificialIntelligenceAccess.push(new Unit(60687, -10171, "Lizard", true, "Lazaro"));
                //ArtificialIntelligenceAccess.push(new Unit(3908, 2500, "VecherBug", false, "Tintin"));
                //ArtificialIntelligenceAccess.push(new Unit(3908, 2500, "Varonoi", true, "Apolo"));
                //ArtificialIntelligenceAccess.push(new Unit(3000, 1500, "Bat", false, "ifi"));
                //ArtificialIntelligenceAccess.push(new Unit(3908, 2500, "Dalger", true, "Apom"));
                //ArtificialIntelligenceAccess.push(new Unit(4000, 2500, "Ghoul", true, "Slub"));
                //ArtificialIntelligenceAccess.push(new Unit(4000, 2900, "Ghoul", false, "Sluba"));
                //ArtificialIntelligenceAccess[ArtificialIntelligenceAccess.length - 1].eggs = "fecundo";
                //ArtificialIntelligenceAccess.push(new Unit(3400, 2400, "Vreck", true, "Skeever", {patrolStops: 5, patrolLoop: true, route:[[4000, 2000], [3400, 2400], [3100, 2600], [3500, 3000], [4500, 2500]]}));
                //scenicList.push(new Scenery("mimicry", 3369, 2651, 1.2, "TentMimic"));
                //ArtificialIntelligenceAccess.push(new Unit(4000, 2500, "Mornid", false, "Slewuch"));
                //ArtificialIntelligenceAccess.push(new Unit(4000, 2500, "Ribback", false, "humphump"));
                //ArtificialIntelligenceAccess.push(new Unit(5000, 2400, "Ribback", true, "humpa"));
                //ArtificialIntelligenceAccess.push(new Unit(3700, 2800, "Fegil", true, "hik"));
                //ArtificialIntelligenceAccess.push(new Unit(4100, 2300, "GreyHorse", false, "horsey"));
                //ArtificialIntelligenceAccess.push(new Unit(4200, 2500, "StovolBeetle", false, "escarabajo"));
                //ArtificialIntelligenceAccess.push(new Unit(4400, 2500, "Elk", "baby", "Nihgi"));
                //scenicList.push(new Scenery("thegolthornPlant", 3000, 1500, 0.1, true));
                //ArtificialIntelligenceAccess.push(new Unit(3000, 1500, "ThegolThorn", true, "pugil"));

                ArtificialIntelligenceAccess.push(new Unit(351972.4338762543, -96320.85484187836, "Varonoi", false, "docile", {patrolStops: 6, patrolLoop: true, route:[[352138.71743964375,-96873.23956907443], [352090.8625909347,-96591.05345209785], [351514.8682831268,-95799.06747519544], [350829.91989764344,-95338.97413994063], [351370.76673233777,-95782.55779077338] , [351972.4338762543,-96320.85484187836]]}));
                ArtificialIntelligenceAccess.push(new Unit(351254.95853119297, -96056.72755459115, "Varonoi", false, "docile", {patrolStops: 6, patrolLoop: true, route:[[350806.7890278246,-96384.8544307424], [351406.3752619561,-96586.3820655125], [350619.5852741239,-96118.6613490382], [350987.9989029323,-95477.32861039198], [350726.7865617078,-95470.36732305153] , [351254.95853119297,-96056.72755459115]]}));
                ArtificialIntelligenceAccess.push(new Unit(351048.56791771686, -97380.50753473777, "Varonoi", true, "docile", {patrolStops: 6, patrolLoop: true, route:[[351596.44709749625,-98087.37058856963], [352356.15094880946,-97478.44456202764], [352896.8911157061,-97754.33350257218], [352915.8574137668,-97500.81664356051], [352187.6435558277,-98272.77372544094] , [351048.56791771686,-97380.50753473777]]}));
                ArtificialIntelligenceAccess.push(new Unit(351296.82773241424, -98733.89912577528, "Varonoi", false, "docile", {patrolStops: 6, patrolLoop: true, route:[[351227.56739777495,-99409.105567075], [351034.1036953423,-99564.75397300447], [351492.70942546666,-98769.0526948422], [352077.49944944016,-98802.29714341268], [352432.03781826684,-98288.23844607238] , [351296.82773241424,-98733.89912577528]]}));
                ArtificialIntelligenceAccess.push(new Unit(351894.46861343377, -99892.60725460015, "Varonoi", true, "docile", {patrolStops: 6, patrolLoop: true, route:[[351468.9847356155,-99251.73186704038], [352244.6164744418,-99331.35501055192], [351959.42300508235,-98987.78762138271], [351808.8821788436,-99167.64684075264], [352319.01226636197,-99369.50899931499] , [351894.46861343377,-99892.60725460015]]}));
                ArtificialIntelligenceAccess.push(new Unit(352556.72992304224, -101068.25671744152, "Varonoi", false, "docile", {patrolStops: 6, patrolLoop: true, route:[[352692.56129280216,-100707.33498597697], [352487.860336482,-101099.53781052027], [353216.3261637042,-101233.02038661644], [353827.9803499193,-101807.90219098632], [353718.0624556812,-102043.42711937614] , [352556.72992304224,-101068.25671744152]]}));
                ArtificialIntelligenceAccess.push(new Unit(351581.72932499053, -102563.35096277157, "Varonoi", true, "docile", {patrolStops: 6, patrolLoop: true, route:[[351599.92564816464,-102442.49847169266], [351358.0601629637,-103000.08305782067], [351802.2913338218,-103554.47095612483], [351716.60514047864,-103058.50679082346], [350960.9847041357,-102273.45330679562] , [351581.72932499053,-102563.35096277157]]}));
                ArtificialIntelligenceAccess.push(new Unit(348892.15517766087, -101920.9207521046, "Varonoi", false, "docile", {patrolStops: 6, patrolLoop: true, route:[[348540.84772496,-101983.23007956825], [348815.9697220978,-101865.81936554475], [348664.2049190744,-102248.51633406457], [348702.2415779887,-102491.00317016624], [348990.5431300961,-102906.8239040754] , [348892.15517766087,-101920.9207521046]]}));
                ArtificialIntelligenceAccess.push(new Unit(346462.0604730757, -101396.37278867474, "Varonoi", false, "docile", {patrolStops: 6, patrolLoop: true, route:[[347111.27079365967,-101012.77446474673], [346360.9635893089,-101146.77661376925], [346835.32303503057,-100795.69055062562], [347542.1981706408,-101467.17065968529], [348098.6894953193,-102094.21861104846] , [346462.0604730757,-101396.37278867474]]}));
                ArtificialIntelligenceAccess.push(new Unit(345362.85896767594, -101224.50563808328, "Varonoi", false, "docile", {patrolStops: 6, patrolLoop: true, route:[[345616.67060594354,-100818.40205288472], [345486.8850707321,-100340.7572460231], [346177.5772644138,-100513.35088242618], [345391.48670628003,-100268.35047129795], [345294.1106140409,-100758.0130418063] , [345362.85896767594,-101224.50563808328]]}));
                ArtificialIntelligenceAccess.push(new Unit(344858.13349305507, -97666.2833770263, "Varonoi", false, "docile", {patrolStops: 6, patrolLoop: true, route:[[345066.0348879665,-96997.97553636144], [345815.23565855465,-97743.58728334008], [346402.9601783716,-97625.9558923443], [347134.12868105597,-98254.86204898298], [347135.02960505284,-98392.77423695358] , [344858.13349305507,-97666.2833770263]]}));
                ArtificialIntelligenceAccess.push(new Unit(346809.4380782972, -96905.17575480106, "Varonoi", true, "docile", {patrolStops: 6, patrolLoop: true, route:[[347208.86411741265,-96976.46751748287], [347403.10322450113,-97269.05141618119], [347623.52566936385,-96727.12099930794], [347657.27466606285,-96588.1487601603], [348049.0592729059,-97296.24695255858] , [346809.4380782972,-96905.17575480106]]}));

                ArtificialIntelligenceAccess.push(new Unit(344483.0532745502, -99045.25448188404, "BlackBeruln", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(344316.34024294047, -99575.14233608918, "BlackBeruln", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(344756.43533768953, -99943.46549271783, "BlackBeruln", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(344823.91257699626, -100379.54272123476, "BlackBeruln", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(344476.5660348726, -100787.1917858717, "BlackBeruln", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(345190.5983192822, -101009.95044511766, "BlackBeruln", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(344709.4972667001, -102391.92223560049, "BlackBeruln", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(345160.70438498067, -103697.60210905205, "BlackBeruln", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(346700.89763845823, -104668.97406562915, "BlackBeruln", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(347583.13207233127, -103564.19020856307, "BlackBeruln", false, "preBuilt"));

                ArtificialIntelligenceAccess.push(new Unit(346595.6002787253, -100136.79643130762, "Ghoul", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(346095.3071695548, -100082.22337742368, "Ghoul", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(346345.6703629624, -99819.44212983745, "Ghoul", false, "preBuilt"));
                ArtificialIntelligenceAccess[ArtificialIntelligenceAccess.length - 1].eggs = "fecundo";
                ArtificialIntelligenceAccess.push(new Unit(346778.79253079306, -99840.20756384709, "Ghoul", false, "preBuilt"));
                ArtificialIntelligenceAccess[ArtificialIntelligenceAccess.length - 1].eggs = "fecundo";
                ArtificialIntelligenceAccess.push(new Unit(346727.17190723587, -99570.32722471583, "Ghoul", true, "preBuilt"));

                ArtificialIntelligenceAccess.push(new Unit(347340.0331637573, -99596.099928717, "Dalger", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(347464.6825940528, -99836.5632047435, "Dalger", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(347370.4476354463, -100148.91673394648, "Dalger", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(347698.088111212, -100204.06492807694, "Dalger", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(347547.38127073867, -100758.05595841097, "Dalger", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(348163.15006504324, -100647.90129577022, "Dalger", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(348552.59008491837, -100901.90053993948, "Dalger", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(347961.5136259949, -101105.50149706917, "Dalger", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(347337.91493164934, -101088.02912868018, "Dalger", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(347550.86343225697, -101711.13028559761, "Dalger", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(348422.8192174101, -101891.08518197188, "Dalger", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(349283.8296741535, -100798.97386066754, "Elk", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(349340.69854911184, -101221.6305253585, "Elk", "baby", "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(349698.31491296896, -101078.36520787599, "Elk", "baby", "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(349775.1961985905, -100753.03176341759, "Elk", "baby", "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(350140.00384943, -100970.22862645968, "Elk", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(350243.29194741463, -100624.88684333528, "Elk", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(350472.0074313057, -100813.05723474691, "Elk", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(350797.53280879353, -101016.83016794098, "Elk", "baby", "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(350859.46109532745, -100751.99786924514, "Elk", "baby", "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(350639.5796252208, -100477.68388700606, "Elk", true, "preBuilt"));

                scenicList.push(new Scenery("meklePlant", 350653.0575496592, -100359.26479607797, 0.7007667624556918, 0));
                scenicList.push(new Scenery("meklePlant", 350106.8031729232, -100629.14613210535, 2.84664275445535, 0));
                scenicList.push(new Scenery("meklePlant", 350073.55374960485, -100698.19110904224, 4.820373779310375, 0));
                scenicList.push(new Scenery("meklePlant", 350323.71952732216, -100735.71332916549, 3.0386777036074926, 0));
                scenicList.push(new Scenery("meklePlant", 350723.75723257865, -100489.39531328478, 1.4847986872892747, 0));
                scenicList.push(new Scenery("meklePlant", 350904.91416891135, -100596.1894823344, 1.0333577317102156, 0));
                scenicList.push(new Scenery("meklePlant", 351195.8609122033, -100364.86522120757, 5.4469389005941204, 0));
                scenicList.push(new Scenery("meklePlant", 351159.4074504506, -100711.03477721808, 2.0720854111220217, 0));
                scenicList.push(new Scenery("meklePlant", 351026.91990010097, -100692.50061338818, 5.504289817673852, 0));
                scenicList.push(new Scenery("meklePlant", 350981.92202624335, -100956.91914594523, 4.321325224388527, 0));
                scenicList.push(new Scenery("meklePlant", 350721.48319048324, -101113.0167000358, 0.6023840896284505, 0));
                scenicList.push(new Scenery("meklePlant", 350444.62748055963, -101046.45204636065, 1.7786867487191305, 0));
                scenicList.push(new Scenery("meklePlant", 350270.3071850526, -101159.7244969366, 5.083205018243932, 0));
                scenicList.push(new Scenery("meklePlant", 349979.5703604446, -101068.67793225906, 2.1961289137837903, 0));
                scenicList.push(new Scenery("meklePlant", 350583.8871847691, -101492.41693392584, 6.024728713350701, 0));

                scenicList.push(new Scenery("thegolthornPlant", 347554.2939892554, -102771.88250387501, 4.220945656492257, false));
                ArtificialIntelligenceAccess.push(new Unit(347554.2939892554, -102771.88250387501, "ThegolThorn", false, "preBuilt"));
                scenicList.push(new Scenery("thegolthornPlant", 347016.86425387516, -103353.86411778153, 5.2721559817851205, true));
                ArtificialIntelligenceAccess.push(new Unit(347016.86425387516, -103353.86411778153, "ThegolThorn", true, "preBuilt"));
                scenicList.push(new Scenery("thegolthornPlant", 346488.12716869864, -102902.34867756601, 1.1734782836306719, false));
                ArtificialIntelligenceAccess.push(new Unit(346488.12716869864, -102902.34867756601, "ThegolThorn", false, "preBuilt"));
                scenicList.push(new Scenery("thegolthornPlant", 344698.51557305345, -101583.89336052642, 5.196599473250174, false));
                ArtificialIntelligenceAccess.push(new Unit(344698.51557305345, -101583.89336052642, "ThegolThorn", false, "preBuilt"));
                scenicList.push(new Scenery("thegolthornPlant", 345550.6322476444, -99366.4070541674, 5.5678809527575135, false));
                ArtificialIntelligenceAccess.push(new Unit(345550.6322476444, -99366.4070541674, "ThegolThorn", false, "preBuilt"));
                scenicList.push(new Scenery("thegolthornPlant", 346474.9524575452, -98270.44310447067, 2.6594188785796633, false));
                ArtificialIntelligenceAccess.push(new Unit(346474.9524575452, -98270.44310447067, "ThegolThorn", false, "preBuilt"));
                scenicList.push(new Scenery("thegolthornPlant", 346819.153038273, -98587.43238274673, 0.2515611992202934, false));
                ArtificialIntelligenceAccess.push(new Unit(346819.153038273, -98587.43238274673, "ThegolThorn", false, "preBuilt"));
                scenicList.push(new Scenery("thegolthornPlant", 350173.5249487396, -98490.10003995986, 1.994950168649509, true));
                ArtificialIntelligenceAccess.push(new Unit(350173.5249487396, -98490.10003995986, "ThegolThorn", true, "preBuilt"));
                scenicList.push(new Scenery("thegolthornPlant", 350891.3288631513, -97664.03840496653, 1.0618429588262792, false));
                ArtificialIntelligenceAccess.push(new Unit(350891.3288631513, -97664.03840496653, "ThegolThorn", false, "preBuilt"));
                scenicList.push(new Scenery("thegolthornPlant", 352653.34217400395, -98053.36350477503, 4.196300227158191, false));
                ArtificialIntelligenceAccess.push(new Unit(352653.34217400395, -98053.36350477503, "ThegolThorn", false, "preBuilt"));

                ArtificialIntelligenceAccess.push(new Unit(352848.4847870078, -96544.11661791152, "StovolBeetle", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(352569.4149276349, -96441.99091774254, "StovolBeetle", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(352698.20468184905, -96044.18977767868, "StovolBeetle", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(351569.8511741228, -96033.98722654153, "StovolBeetle", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(351276.2071701507, -96168.71045076668, "StovolBeetle", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(351032.3438561657, -95890.31719773545, "StovolBeetle", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(350834.5229033671, -96224.94392116155, "StovolBeetle", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(351039.6054189764, -96544.0898108002, "StovolBeetle", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(350406.7590378426, -97915.318066096, "StovolBeetle", false, "preBuilt"));

                ArtificialIntelligenceAccess.push(new Unit(352644.774818631, -102207.38800108767, "Ribback", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(352462.7559949254, -101957.63126511447, "Ribback", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(351009.81869955326, -102485.25062539963, "Ribback", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(350315.6645074966, -103288.89900564136, "Ribback", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(350447.20483216364, -103043.25928390805, "Ribback", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(349625.39875912, -97420.8162596417, "Ribback", true, "preBuilt"));

                ArtificialIntelligenceAccess.push(new Unit(349380.05132882734, -98176.82718431472, "Dalger", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(348561.33777718607, -98226.10685914429, "Dalger", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(347370.7539191599, -97849.39142604511, "Dalger", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(346080.1335554523, -98913.15174109842, "Dalger", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(345290.1840668963, -98435.39034666438, "Dalger", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(344508.86833300715, -97762.79235643629, "Dalger", false, "preBuilt"));

                ArtificialIntelligenceAccess.push(new Unit(348908.75170698593, -104657.02898636354, "Vreck", false, "preBuilt", {patrolStops: 7, patrolLoop: true, route:[[349633.59245325817,-104533.05675587777], [349561.5091859559,-104632.30591040445], [350200.33057501534,-105042.00121954175], [350130.9152296935,-104705.02173536537], [350778.56082727795,-104649.21865501799], [350599.0305018985,-104554.56697639624], [348908.75170698593,-104657.02898636354]]}));
                ArtificialIntelligenceAccess.push(new Unit(348815.4790866462, -104737.75582916103, "Vreck", false, "preBuilt", {patrolStops: 7, patrolLoop: true, route:[[349016.8176435813,-104543.08674381278], [349016.41772099293,-104807.67038705653], [349726.26533504116,-104206.05462100629], [349921.32712516,-104522.12914574979], [350573.5627717171,-104991.09456754876], [349992.168384188,-104483.40513384156], [348815.4790866462,-104737.75582916103]]}));
                ArtificialIntelligenceAccess.push(new Unit(348895.646576826, -104842.36544993361, "Vreck", false, "preBuilt", {patrolStops: 7, patrolLoop: true, route:[[349484.44105969684,-104160.05250390616], [349512.77733098104,-104510.0858479618], [349569.5171935308,-105289.23131692855], [349715.75039243844,-105388.65379251819], [349857.56451833475,-105109.73375445063], [350359.9166446047,-104519.18435494445], [348895.646576826,-104842.36544993361]]}));
                ArtificialIntelligenceAccess.push(new Unit(348797.02345041494, -104590.89839686979, "Vreck", false, "preBuilt", {patrolStops: 7, patrolLoop: true, route:[[349217.12140888366,-105293.1555618098], [349851.5008263939,-104740.13809876285], [349267.2011901131,-105295.8414780274], [349443.69151608413,-105657.10303872093], [350147.9762158121,-106224.71233419151], [349715.90547130647,-106556.90240288143], [348797.02345041494,-104590.89839686979]]}));
                ArtificialIntelligenceAccess.push(new Unit(348669.60530527186, -104697.06013226969, "Vreck", false, "preBuilt", {patrolStops: 7, patrolLoop: true, route:[[348373.46808638325,-104489.83411101205], [348457.44626014284,-105279.15788351046], [348357.1528884366,-105693.64680414964], [348491.4259936635,-105006.19233824729], [348789.0881260073,-104340.82642163053], [348899.7503631016,-104508.9134042572], [348669.60530527186,-104697.06013226969]]}));
                ArtificialIntelligenceAccess.push(new Unit(348716.7381673567, -104823.79509246525, "Vreck", false, "preBuilt", {patrolStops: 7, patrolLoop: true, route:[[348457.07232444844,-104036.28709293217], [348490.39030545874,-104028.43091905747], [347999.7926204641,-104434.74985910035], [347221.2750971139,-104639.49488750266], [346586.0828504163,-104170.70873252863], [346548.64210590237,-104013.53764395815], [348716.7381673567,-104823.79509246525]]}));
                ArtificialIntelligenceAccess.push(new Unit(348768.833013428, -104961.4885694373, "Vreck", false, "preBuilt", {patrolStops: 7, patrolLoop: true, route:[[349197.02246636344,-105262.14129753137], [349314.6452424789,-105695.79209538917], [348795.09635291336,-105030.92927478373], [348737.2500332423,-104305.94311562988], [348269.5162092924,-104170.40724105963], [347930.4206951903,-104809.01202077583], [348768.833013428,-104961.4885694373]]}));
                ArtificialIntelligenceAccess.push(new Unit(348939.58202028106, -105007.00029540752, "Vreck", true, "preBuilt", {patrolStops: 8, patrolLoop: true, route:[[351420.1124533989, -104986.69440332004], [352699.21566230163, -104389.44103875494], [353562.48654214223, -104932.35944270177], [353134.8124290142, -103909.93204975082], [351738.8943569372, -104203.03560442959], [350528.5176424709, -105045.74972595002], [349422.6785762706, -104565.6005563965], [348939.58202028106,-105007.00029540752]]}));

                ArtificialIntelligenceAccess.push(new Unit(347539.54522841267, -96749.74535778289, "Ribback", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(347219.8398621923, -96674.09523782144, "Ribback", false, "preBuilt"));

                scenicList.push(new Scenery("cranberryPlant", 351930.5752144539, -101220.2622652389, 5, true));
                scenicList.push(new Scenery("cranberryPlant", 346167.4486046988, -98510.48407771827, -6, true));
                scenicList.push(new Scenery("laicaumPlant", 347286.87087721855, -102248.01773916448, -0.9, true));
                scenicList.push(new Scenery("laicaumPlant", 348919.969405718, -100657.49967420874, 1.8, true));
                scenicList.push(new Scenery("laicaumPlant", 346744.75311086467, -96903.363614962, 1.2, true));
                scenicList.push(new Scenery("danzigPlant", 344440.834620084, -96384.74970847642, 3, true));
                scenicList.push(new Scenery("danzigPlant", 346553.1786600317, -99717.93754812129, 3, true));
                scenicList.push(new Scenery("danzigPlant", 347413.85149547, -98980.05751783472, 3, true));
                scenicList.push(new Scenery("danzigPlant", 349031.61621076596, -102344.52346190819, 4, true));
                scenicList.push(new Scenery("chyoulPlant", 345870.7784424347, -96429.39033056368, -3.4, true));
                scenicList.push(new Scenery("chyoulPlant", 344296.5558483179, -97642.29447371842, -3.4, true));
                scenicList.push(new Scenery("chyoulPlant", 344576.3542276654, -96798.96608032491, -3.4, true));
                scenicList.push(new Scenery("chyoulPlant", 347241.25264141284, -98262.29332816065, -3.4, true));
                scenicList.push(new Scenery("chyoulPlant", 348244.04274108366, -98927.65796746779, -3.4, true));
                scenicList.push(new Scenery("ameloyPlant", 352309.7549190465, -99751.22572986776, 2.3, true));
                scenicList.push(new Scenery("ameloyPlant", 345780.68469106604, -96992.11077687598, 2.3, true));
                scenicList.push(new Scenery("ameloyPlant", 345509.39520644746, -101384.91120709774, 2.3, true));
                scenicList.push(new Scenery("thadinePlant", 344450.37244645995, -100752.15546816116, 1.2, true));
                scenicList.push(new Scenery("thadinePlant", 345226.8475133398, -97787.89847655006, 1.2, true));
                scenicList.push(new Scenery("thadinePlant", 345481.72417639114, -97284.26443071196, 1.2, true));
                scenicList.push(new Scenery("thadinePlant", 346563.62258852966, -97264.27116213382, 1.2, true));
                scenicList.push(new Scenery("cranberryPlant", 348978.78542533214, -99213.49521805205, -7, true));

                ArtificialIntelligenceAccess.push(new Unit(348347.2033995518, -99023.47762267014, "BlackBear", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(352526.6662842863, -99603.77970115951, "BlackBear", false, "docile"));

                scenicList.push(new Scenery("iodPlant", 347434.37091599364, -99366.09812216483, 6, true));
                scenicList.push(new Scenery("iodPlant", 344986.66278400284, -100056.03168674895, -5.7, true));
                scenicList.push(new Scenery("iodPlant", 346279.4236263404, -103396.75999758842, 3, true));
                scenicList.push(new Scenery("iodPlant", 346932.5986843467, -103919.03081779621, 2, true));
                scenicList.push(new Scenery("poegroonPlant", 352254.45298119367, -98706.29473195349, 2, true));
                scenicList.push(new Scenery("poegroonPlant", 350926.9002774207, -99487.85346281757, 4, true));
                scenicList.push(new Scenery("poegroonPlant", 344283.4704514796, -104099.54343303022, -6, true));
                scenicList.push(new Scenery("poegroonPlant", 352916.04252224613, -100854.82244427918, -8, true));
                scenicList.push(new Scenery("maleotPlant", 351198.2164670272, -102291.24749764327, 15, true));
                scenicList.push(new Scenery("maleotPlant", 351951.60158655816, -98399.21598677558, 16, true));
                scenicList.push(new Scenery("maleotPlant", 345661.11966468365, -97531.22977835705, 14, true));
                scenicList.push(new Scenery("kozlyakPlant", 345395.870887427, -100576.18643276434, 13, true));
                scenicList.push(new Scenery("kozlyakPlant", 346458.6115209454, -99076.93927775178, 11, true));
                scenicList.push(new Scenery("kozlyakPlant", 349975.2473441624, -99433.53577912344, 12, true));
                scenicList.push(new Scenery("kozlyakPlant", 349066.2284883192, -99820.61174487902, 10, true));
                scenicList.push(new Scenery("kozlyakPlant", 351213.43847234966, -101273.99597430817, 9, true));
                scenicList.push(new Scenery("gribnoyPlant", 351967.2743177363, -96531.78122229478, Math.PI + 0.5, true));
                scenicList.push(new Scenery("gribnoyPlant", 349648.1590404848, -97797.87957316391, 0.3, true));
                scenicList.push(new Scenery("gribnoyPlant", 349102.06546728296, -97481.97455599948, 1/2 * Math.PI + 0.1, true));
                scenicList.push(new Scenery("gribnoyPlant", 348858.8949624783, -97289.26380980377, -1/2 * Math.PI - 0.16, true));
                scenicList.push(new Scenery("gribnoyPlant", 347513.43118347996, -96984.79360356764, Math.PI, true));

                ArtificialIntelligenceAccess.push(new Unit(352682.2443412375, -97011.4550242359, "Elk", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(352831.3081351242, -97237.94392414433, "Elk", "baby", "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(352611.8582436143, -97165.696626978, "Elk", true, "preBuilt"));
                scenicList.push(new Scenery("meklePlant", 352950.9522421757, -96951.76913488081, 1.1332417870276947, 0));
                scenicList.push(new Scenery("meklePlant", 352696.77991493425, -96833.42641500571, 4.265000547253923, 0));
                scenicList.push(new Scenery("meklePlant", 352386.724216049, -96998.53058219075, 5.519664359424468, 0));
                scenicList.push(new Scenery("meklePlant", 352436.61360869167, -97289.44023365121, 0.522063831777267, 0));

                scenicList.push(new Scenery("iodPlant", 351813.78553557734, -97188.95541440338, -8.8, true));

                ArtificialIntelligenceAccess.push(new Unit(346411.8021535501, -101740.03700813708, "VecherBug", true, "Tintona"));
                ArtificialIntelligenceAccess.push(new Unit(60687, -10171, "Lizard", true, "Lazara"));
                ArtificialIntelligenceAccess.push(new Unit(352070.2405258731, -97011.67621940438, "VecherBug", false, "Tintin"));
                ArtificialIntelligenceAccess.push(new Unit(351504.1132671778, -96464.10036172108, "VecherBug", false, "Tintin"));
                ArtificialIntelligenceAccess.push(new Unit(350242.9989788415, -96779.58628151858, "VecherBug", false, "Tintin"));
                ArtificialIntelligenceAccess.push(new Unit(348289.4436677791, -97389.47695894509, "VecherBug", false, "Tintin"));
                ArtificialIntelligenceAccess.push(new Unit(346441.5732607428, -98381.90245533922, "VecherBug", false, "Tintin"));
                ArtificialIntelligenceAccess.push(new Unit(345244.4738939849, -98392.57013573332, "Varonoi", false, "apola"));
                ArtificialIntelligenceAccess.push(new Unit(345335.6258227745, -97408.37082673878, "Bat", false, "ifia"));
                ArtificialIntelligenceAccess.push(new Unit(345040.0502312356, -96738.9504096632, "Bat", false, "ifia"));
                ArtificialIntelligenceAccess.push(new Unit(346523.73807748774, -96529.22240639232, "Bat", false, "ifia"));
                ArtificialIntelligenceAccess.push(new Unit(346820.49621360557, -97478.30078992626, "Bat", false, "docile"));

                scenicList.push(new Scenery("viudaTunnel", 348167.38628260005, -103064.71450175461, 8, true, true));
                scenicList.push(new Scenery("viudaTunnel", 349111.27832676185, -104109.59434984371, 16, true, false));
                scenicList.push(new Scenery("viudaTunnel", 351114.09643015487, -101461.78907566478, 32, true, true));

                change = "s10w34";
            }
        }
        else if (region == "s10w35")
        {
            if (change != "s10w35")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                scenicList.push(new Scenery("ashaiTree", 354029.70797399245, -95544.65745363364,3.249349687321801, 2.980172077550353, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353886.9087263661, -95954.67331825728,0.18407668537454222, 2.8349539471254666, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353899.4502934423, -96159.73970299313,1.0768526543931274, 1.939245011364287, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353895.8559590953, -96651.28781157995,5.397722426611251, 0.7028265756441087, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 354075.9944704969, -96998.46493171949,5.915685442897597, 0.6892723436881784, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353881.82940502645, -97334.30547225787,4.847901375245985, 0.7598152616014335, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 354001.7089881939, -97653.16530728654,2.070872857361358, 0.9054467769542563, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353905.6468148583, -98296.87147243871,6.187484234497877, 2.019401240407918, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353973.03018583666, -98566.99986190959,3.1519661029634336, 0.7114851858114296, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 354067.5883363997, -98942.94332005826,4.355098538895889, 0.914184635380447, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353853.5055623418, -98795.55060941327,2.382754237954184, 2.115046607910638, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353888.74662200775, -99212.63952189968,5.429822936482031, 1.1153633313717184, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 354067.8196559237, -99531.66509792357,5.825296726805034, 2.77654640829014, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353877.17144087446, -99808.80800405181,5.581016671355493, 1.6537350951018017, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353854.38545273646, -100298.79276540632,2.025655067192966, 1.643060758144867, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353998.552105301, -100012.40896006704,4.843495040286632, 0.7256736598326947, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 354076.4324907419, -100701.77491920487,2.215125574322667, 0.92375753965872, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353901.42245070625, -100947.02797599741,6.197541546152243, 0.7155907095092707, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353948.9869023692, -101290.15943026451,0.5651389080201554, 2.3284291896053575, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353954.0111449534, -101646.13376461931,1.1709887142362227, 2.660894621400508, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353848.12235980615, -101916.7751802226,1.4045431943010407, 2.1426714116809156, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 354094.998066007, -102076.82743235111,2.8779655209498674, 1.6782437689566256, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 354036.9690100393, -102809.7975252697,2.991956265867583, 2.968375754193911, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 354035.517763756, -102537.26161429954,5.2865907838033666, 1.5350422839647084, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353889.0346854777, -102321.04307275324,2.2396603407582196, 2.3753472190610934, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353933.20892859134, -103167.58708400655,1.794638132866727, 2.3089103618350157, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 354053.89762636565, -103450.53185971905,0.007780658494836827, 2.0798696712590417, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353856.3127826414, -103625.08999167192,0.4871648924452969, 1.6564493399505649, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353950.838930546, -103902.08291074308,0.5674259203044112, 1.7525290423445448, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 354069.5952901576, -104238.37068532269,0.07587012304866915, 1.3468873753924724, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353839.25280294946, -104508.7061637062,6.273889794414558, 1.8757924540051616, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 354110.219898489, -105022.72432655879,5.782267227180035, 2.87693630246381, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353949.62190758047, -104793.06024360647,2.7582334277219562, 2.814162636248448, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353910.7119405966, -105432.43324529403,3.5290211734279007, 1.2668760296729986, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352322.17079, -96845.76781,0.5147499562906875, 2.05791248, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352322.17079, -97305.76781,0.5250449554165013, 1.38149622, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352322.17079, -97765.76781,0.5353399545423151, 2.24048812, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352322.17079, -98225.76781,0.5456349536681289, 1.9217211, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352322.17079, -98685.76781,0.5559299527939426, 2.16018192, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352322.17079, -99145.76781,0.5662249519197564, 1.59545906, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352322.17079, -99605.76781,0.5765199510455702, 0.73060728, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352322.17079, -100065.76781,0.5868149501713839, 2.24437642, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352322.17079, -100525.76781,0.7147607092185433, 2.3638128800000002, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352322.17079, -100985.76781,1.3736406532706233, 1.17602992, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352322.17079, -101445.76781,2.0325199690041726, 2.08357552, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352322.17079, -101905.76781,2.691399913056253, 1.07901638, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352322.17079, -102365.76781,3.3502817420639253, 0.6, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352322.17079, -102825.76781,4.0091616861160055, 1.49638476, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352322.17079, -103285.76781,4.668041001849555, 2.07385776, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352322.17079, -103745.76781,5.326920945901636, 1.11505264, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352322.17079, -104205.76781,5.985802774909307, 0.6, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352322.17079, -104665.76781,0.361497411781801, 2.55084622, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352322.17079, -105125.76781,0.725055708344357, 1.1042787600000001, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352322.17079, -105585.76781,1.383935652396437, 1.05347944, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352592.33672329044, -95858.01174785873,5.255671429336086, 2.3964383053468072, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352244.2272280376, -95555.61727722625,3.2529783937621053, 2.981106699529046, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352088.15379747463, -95727.18520209062,1.175973267586379, 2.1986280515982597, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 351784.62351029407, -95504.31788313841,4.055719166262464, 2.0600226780491186, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353457.78264826164, -95797.40153818454,0.6059839202520773, 1.7276476994672003, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353130.76133482176, -95887.90973173892,2.7942771398398483, 1.4494117942007758, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353210.9857195393, -95578.6622317462,0.12545696401902282, 1.0841274501172806, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353565.7648218973, -95527.90228982476,2.163236572066466, 1.642155954727738, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352892.1550478304, -95661.62479934593,4.082291920547319, 2.905023503883669, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352686.4563432746, -95551.64330817261,5.362376331918862, 2.5365079206498247, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353394.2312058213, -96108.65565142214,2.1053765384557233, 2.9502309026387135, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352588.7388108032, -101643.62676297071,0.014306885282733672, 1.9744276788326012, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352677.17393036454, -101126.76591424216,0.9670133638365851, 0.9642013394985889, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352823.79384178575, -100782.91284369986,4.858698901087807, 2.6523795673147084, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 351947.3956013748, -100792.9702400531,5.1736586694049524, 1.794812787971746, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 351878.409483895, -100279.72991046183,5.543268007773893, 2.629954493282616, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 351941.63117748464, -99857.42541229758,2.5138665680984214, 1.703136335270417, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 351991.7042019531, -99480.8673358426,5.78758047026534, 1.3856443491404975, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 351723.8612870066, -99151.75442968201,4.715297010882182, 1.1438426702083033, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 351846.40354996716, -98887.7365675311,5.752872780261996, 1.689648647279248, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352729.699745874, -98959.08762635282,4.518330695869687, 2.0181772253629844, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352872.13872656605, -98683.86703312307,3.9627833636411305, 1.8487533810496548, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352921.81766304915, -98051.71841200927,4.133223054258406, 1.5980062101050017, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353131.4859235913, -98543.08922742616,2.8807241278350153, 1.183230512503807, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353323.3140351326, -98335.73306204748,3.5217576371622314, 1.1588497578601262, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353552.6223005603, -98539.69924509039,5.441214932954165, 0.9535203405194008, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353574.6653909528, -98179.84117351634,2.81368211670765, 1.8844543277159143, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353386.7784788319, -97948.77825835145,3.3669325716232716, 1.3802304873012954, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353746.1742980181, -97952.47974592066,0.7830490910496122, 1.7430477799541038, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353550.8077053285, -97588.27107192775,2.124103133223424, 1.5830012287367792, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353637.4131347391, -97435.3815696381,4.980062386247962, 2.3828604589171656, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353511.67608339054, -97174.7157296575,5.8590986661888484, 1.7777887939113803, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353664.4258753666, -97020.79655904215,3.9959700343893885, 2.126687820767116, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353481.5550256114, -96868.96796165442,0.42199661423701174, 1.109386597057409, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353481.1848482507, -96583.08420213842,3.4601543618597477, 2.716007842516496, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353696.64307949296, -96461.74799051647,1.5275187755761164, 1.872641687320626, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353208.7630277035, -96375.74130518019,2.429000911628739, 1.1459935024247634, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353114.71659133094, -96703.65594208532,2.9943377634098685, 2.5067007229218117, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353054.89906218834, -96912.337569927,4.776224344532786, 1.3646682746244023, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353240.452928134, -97091.99283891049,0.3786929419501088, 1.7903339755224041, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353103.35289886274, -97358.40757234706,4.862963001030892, 0.8284346623079912, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353137.08565198234, -97665.46792805151,4.158000358520942, 1.349809197482547, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352908.5568960296, -105480.99511513454,1.1856056117531173, 1.8719679949452073, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353035.74470850994, -99278.06817322873,1.4689837648039192, 2.9678116282144686, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353416.7672383103, -99431.42725655071,1.5390730157202301, 2.7827088848164507, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353693.87505504745, -99312.90329174745,1.0043256080914837, 0.714354014055965, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353623.4770833911, -99688.51300175952,4.260149541077939, 1.6903055583916862, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353243.0171073558, -99681.03567992234,3.9303002356061896, 2.7706432319622554, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353448.2949713043, -99978.48998493238,2.0362724918177317, 1.9356694183939878, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353649.41362973937, -100146.0768991231,1.3273602657821053, 1.6945093263001865, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353497.4622656528, -100474.43155348238,2.145149459661119, 2.34616885187574, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353665.5519680058, -100722.00493384732,2.392872932971611, 1.7379907737865121, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353679.2910354563, -101112.72294328721,4.977876658137577, 0.874211046397823, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353383.846932496, -101204.81809278761,0.9157698555572064, 1.6326930721927608, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353248.200810342, -100961.6880733599,0.2752165073438995, 0.9160455339776852, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353360.2813368478, -101491.95220887457,4.259145799227098, 1.4165454137232887, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353521.44408579374, -101688.06451692885,3.392353937484034, 1.317505786177274, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353493.0392382738, -102077.58994491218,2.8361683423658386, 1.2433736582383212, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353300.712992201, -101937.80803861185,4.752130427153261, 0.858975927632101, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353258.45322778967, -102224.0478951378,3.434052477068517, 2.8037661521591923, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353569.0612296074, -102511.8713980205,1.2611913692725027, 1.2530442900500423, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353332.0206070329, -102495.3379889018,0.645243303738919, 2.8078118940229246, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353485.13866683556, -102833.4945406427,2.919769803621925, 1.395241659791322, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353687.927180266, -102758.8904140058,6.0832562721251096, 2.1862404407038993, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353130.005230625, -102746.08257090248,2.2924695039190963, 1.4378484651239223, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353247.802571932, -103160.05364320625,2.2401745459787876, 1.7022333067111228, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353584.79198555637, -103109.23353626284,5.798848010944488, 2.1302155019991784, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353438.1371122132, -103495.51942715047,4.432695432218698, 1.6200459550699522, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353666.3696136788, -103399.08681962374,4.944817221510566, 1.9044269435331609, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353518.4505033496, -103771.87121476658,1.8353398914107764, 2.591169939364252, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353249.78283760627, -103764.90014653231,4.994441133172148, 0.8572974722326302, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353415.82648104016, -104062.89713915966,5.441063267159619, 2.880619948003093, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353672.9704245093, -104252.23477453396,4.453895096165047, 1.822258926985771, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353320.52565454046, -104521.86450495785,0.516868631759295, 2.971286965511712, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353537.70002238743, -104713.19098657691,3.782562936931535, 1.8423007176617512, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353208.2894705053, -104978.34679873417,1.4272706892323526, 2.058403920345246, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353578.8446537109, -105184.01632153626,3.1626751142663183, 0.6061422568478939, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353436.77826720435, -105481.1089495222,1.3339922025407633, 2.4725522610810957, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353155.42424601724, -105241.7355944796,2.96941476857898, 2.737638108783532, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353451.4959044205, -98828.59707687076,6.006673479282337, 2.9369498006836903, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353579.8049394641, -99056.83772491827,6.271236578102664, 1.0499388797285507, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353313.15848264477, -99030.27237396305,4.9911637027007965, 1.910689466235851, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353066.5796740389, -98924.19975707142,0.18676553630602236, 2.1586385837952538, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352979.25939699746, -104722.99051993327,4.907221335137543, 2.5600078416810983, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352613.7799953055, -104997.37046003992,0.1990043286075128, 1.3193851900776217, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352875.04048914387, -105239.82268947983,5.622986174751121, 1.774717680684223, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352529.4021928209, -105337.37607945573,2.56472126385305, 2.48978750578212, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 351900.5026853514, -105345.21063610619,2.037898202124747, 1.2933379253411939, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352671.3865982693, -99237.59018850881,5.704285375111032, 2.9294558109334288, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352717.0840289557, -99838.27647638127,1.404477380619832, 2.8106358586440683, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352677.8674369584, -99466.66267829976,3.677695773771461, 1.3869367671415929, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353021.3099429879, -99538.99604227846,5.029457175297358, 1.6271663956981812, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352698.50984803727, -100294.10984110078,5.575224275530171, 2.7038804602948123, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353088.94961999403, -100105.52698076676,3.2135895036488047, 2.8949513065021395, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352699.03497820516, -103940.39047323144,0.11451430887450656, 2.232817233404973, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352984.0934479358, -104300.316492954,0.23343747466962125, 2.891722626744306, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352686.57300520927, -104583.69234570654,5.458441151166748, 1.3474391409155992, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352462.28208688746, -104314.22791368404,1.107012017293937, 1.1198361576160947, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352391.1379335927, -103950.24594426765,5.426171219422409, 1.909729577519316, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 351930.0745111991, -104138.40834873723,1.807330970040021, 0.7176009831171117, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 351764.4815000346, -104464.8853971447,4.604278262247346, 0.7202127579651241, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352081.57479618024, -104372.66266173027,5.402560668480461, 0.9770188524763728, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 351980.3096896482, -103473.28393009173,1.6429128313691232, 2.702192474681444, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 351674.5809922423, -103568.70415097968,4.524531693341536, 2.7190031047245014, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352002.4915399604, -103049.03633964168,4.720246895245473, 0.7251437006527897, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 351920.6694832599, -102633.09953657696,2.8432842660484274, 1.7839601991207736, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352216.0484367272, -102540.26414718952,3.6257974138239932, 2.2691122588158485, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352640.99779712106, -102609.1268511725,4.673490820065635, 1.3178903778680204, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352995.99814706604, -102465.54722551611,2.2162093598329324, 2.434809107730169, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352991.9333720924, -101317.2217400356,5.619971778578635, 1.1532341470944605, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352770.8487915542, -102963.43936093157,2.2659324171703488, 1.1962840633448248, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352875.82362697955, -103415.72066191735,1.4056910286677262, 0.6685302292171028, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 353032.3243480582, -103636.16600863099,3.1781526700636022, 1.0868749535682372, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 351991.9234800908, -96503.68208811029,5.068928612361924, 1.5151417527530557, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 351750.98629223165, -96254.92113856481,0.537953346825563, 2.012055033351036, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 351822.334621608, -95979.82417054151,2.7189418043249898, 0.8367127209539136, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352280.0355094619, -96179.53263015834,2.144094661402996, 2.8051923013985745, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352341.2980783034, -96564.53666829757,5.913103051763356, 1.397675563244659, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352645.27468628995, -96697.53200393167,5.231583508422432, 2.242749923342345, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352801.8652375538, -96370.09464414396,1.4830035684126281, 1.737926884201836, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352514.9945867733, -96386.34033027865,5.66860620996528, 0.6568188436212875, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352907.55361311056, -96119.56295398556,2.54847652454996, 2.521275775436465, undefined)); //copied s10w34
                scenicList.push(new Scenery("ashaiTree", 352518.3780198877, -96143.05270476949,5.483289449712305, 2.233784952593538, undefined)); //copied s10w34
                scenicList.push(new Scenery("meklePlant", 352950.9522421757, -96951.76913488081, 1.1332417870276947, 0)); //copied s10w34
                scenicList.push(new Scenery("meklePlant", 352696.77991493425, -96833.42641500571, 4.265000547253923, 0)); //copied s10w34
                scenicList.push(new Scenery("meklePlant", 352386.724216049, -96998.53058219075, 5.519664359424468, 0)); //copied s10w34
                scenicList.push(new Scenery("meklePlant", 352436.61360869167, -97289.44023365121, 0.522063831777267, 0)); //copied s10w34

                scenicList.push(new Scenery("ashaiTree", 360043.8675961606, -96891.30280331835, 5.064691395101594, 0.690214279467587));
                scenicList.push(new Scenery("ashaiTree", 359994.48643701145, -96574.84163799875, 2.534547267311056, 1.258677649478313));
                scenicList.push(new Scenery("ashaiTree", 360284.25952934567, -96753.96834228224, 5.626039896399084, 2.2921285906884132));
                scenicList.push(new Scenery("ashaiTree", 360403.1610581745, -96390.78403604247, 0.4137830057301631, 1.3607519483751735));
                scenicList.push(new Scenery("ashaiTree", 360115.0020490012, -96239.8638704019, 3.009963599241486, 1.679735905316976));
                scenicList.push(new Scenery("ashaiTree", 360394.3946213669, -96013.89090300314, 0.8854278105087656, 1.0071576487184841));
                scenicList.push(new Scenery("ashaiTree", 360891.27278114733, -95975.70836241465, 5.695791804980785, 2.8931674394484257));
                scenicList.push(new Scenery("ashaiTree", 360626.9221734437, -95786.02852207788, 5.140907072756117, 1.9840520765081036));
                scenicList.push(new Scenery("ashaiTree", 360990.7174567138, -95612.28867104009, 5.487928622797893, 1.5306522498293753));
                scenicList.push(new Scenery("ashaiTree", 360701.1474559428, -95463.36226993194, 4.532565985081555, 1.6276509581483243));
                scenicList.push(new Scenery("ashaiTree", 360418.7108385724, -95591.18991959626, 0.2716593735876624, 2.5446659537934098));
                scenicList.push(new Scenery("ashaiTree", 360195.9846153248, -95524.34504743548, 5.3418873509688565, 2.297814200582732));
                scenicList.push(new Scenery("ashaiTree", 359937.47301182145, -95792.03423738857, 4.567246208257762, 0.7715613203935113));
                scenicList.push(new Scenery("ashaiTree", 360858.1328449457, -96394.76175361975, 5.974277234416469, 2.1316765998158274));
                scenicList.push(new Scenery("ashaiTree", 361428.7849362189, -96350.10087310785, 4.3278320775936745, 1.1493384527353068));
                scenicList.push(new Scenery("ashaiTree", 361668.84449863393, -96121.31525698364, 4.632475792296509, 1.4937158919733236));
                scenicList.push(new Scenery("ashaiTree", 361700.72665441537, -95768.12300741975, 5.517272813731447, 1.2554655644798571));
                scenicList.push(new Scenery("ashaiTree", 361508.55041837477, -95566.89017458154, 4.484358910849582, 2.4585345877304716));
                scenicList.push(new Scenery("ashaiTree", 361958.62757401593, -95570.67569080491, 1.0455597114372417, 1.685600740357267));
                scenicList.push(new Scenery("ashaiTree", 362487.811200942, -95735.66111751428, 0.0007948009368724911, 0.7032794417333909));
                scenicList.push(new Scenery("ashaiTree", 362923.79841767024, -95541.55131428708, 4.229500627017745, 2.5179276138288467));
                scenicList.push(new Scenery("ashaiTree", 363013.5555283041, -95990.5562993147, 3.3044803294278773, 2.2379189329021867));
                scenicList.push(new Scenery("ashaiTree", 363293.20621549676, -95679.40231939038, 3.850946480365036, 2.9263263259909844));
                scenicList.push(new Scenery("ashaiTree", 363725.2620321077, -95530.2302716857, 5.17438929493831, 1.5724969670399591));
                scenicList.push(new Scenery("ashaiTree", 363893.26162055024, -95896.56604934568, 5.26055079959324, 2.3943668729577023));
                scenicList.push(new Scenery("ashaiTree", 363594.20319395413, -96384.05360521893, 3.610287535975094, 2.841971363686947));
                scenicList.push(new Scenery("ashaiTree", 363773.4284137035, -96677.58526420264, 1.02069584556384, 1.1456123942115015));
                scenicList.push(new Scenery("ashaiTree", 363315.5423502641, -96716.87906396693, 5.405080094543833, 2.8376801248480032));
                scenicList.push(new Scenery("ashaiTree", 362757.9672574649, -96427.73184055014, 5.694332592511062, 0.9173662653622787));
                scenicList.push(new Scenery("ashaiTree", 362241.76815639436, -96159.64059969783, 3.1331842459307797, 0.7618859629584939));
                scenicList.push(new Scenery("ashaiTree", 362038.1884279757, -96539.76353490628, 6.233233359221195, 0.7166907593981757));
                scenicList.push(new Scenery("ashaiTree", 361538.35166555725, -96789.3798499546, 4.9895458558374175, 2.6603932638241328));
                scenicList.push(new Scenery("ashaiTree", 362309.146977605, -96945.82765022227, 1.7412603772839814, 1.8113050945705647));
                scenicList.push(new Scenery("ashaiTree", 362863.69004870777, -97006.52320438446, 2.6186710073534964, 0.920449191348807));
                scenicList.push(new Scenery("ashaiTree", 363718.0351216148, -96971.15903069655, 0.5345721212340357, 1.0092445293721348));
                scenicList.push(new Scenery("ashaiTree", 363514.76497665746, -97371.62134344969, 0.5213117937342858, 2.0274930819804857));
                scenicList.push(new Scenery("ashaiTree", 362897.24826067983, -97489.49838206879, 5.671673505505344, 2.7105569078003597));
                scenicList.push(new Scenery("ashaiTree", 363405.2017281319, -97702.88266542979, 0.670580992917218, 1.0384154653177695));
                scenicList.push(new Scenery("ashaiTree", 363830.43631441414, -97621.3778524659, 2.385761760429485, 1.7911674037662233));
                scenicList.push(new Scenery("ashaiTree", 363640.6670148985, -97974.40847330877, 1.726169271085794, 1.2134220027664826));
                scenicList.push(new Scenery("ashaiTree", 363843.5622695371, -98370.36830242522, 4.2712852407164865, 1.0296772974929094));
                scenicList.push(new Scenery("ashaiTree", 363432.3672051208, -98447.36956691286, 2.047887891030195, 2.9073516639927037));
                scenicList.push(new Scenery("ashaiTree", 363038.866193992, -98191.07909552888, 4.465453965631519, 2.876696994187697));
                scenicList.push(new Scenery("ashaiTree", 362473.16652058327, -97916.69116569814, 2.3334769733726115, 1.4681476966576033));
                scenicList.push(new Scenery("ashaiTree", 362290.102550142, -97483.61005460074, 3.732031457433531, 1.0302762522253832));
                scenicList.push(new Scenery("ashaiTree", 361920.8698183298, -97239.87003101553, 0.1526972336745866, 0.7344365081060855));
                scenicList.push(new Scenery("ashaiTree", 361338.3228508366, -97044.81038513129, 1.3528032568559867, 1.2431230912773488));
                scenicList.push(new Scenery("ashaiTree", 361024.69220545207, -96792.09551343427, 1.8914763358684339, 1.5915130136618814));
                scenicList.push(new Scenery("ashaiTree", 360834.8923342823, -97144.97791888837, 0.81554017225889, 1.2503360529945948));
                scenicList.push(new Scenery("ashaiTree", 360436.1716701582, -97054.22223445855, 0.1712030421881913, 1.4568887071785839));
                scenicList.push(new Scenery("ashaiTree", 360020.2914716898, -97226.92601737317, 3.5054297383312885, 1.3413487169191112));
                scenicList.push(new Scenery("ashaiTree", 360511.54983168235, -97486.8823062204, 2.6462770892215737, 2.8064690180583884));
                scenicList.push(new Scenery("ashaiTree", 361076.40336013597, -97763.64713808121, 1.553685647333138, 1.8116174980526307));
                scenicList.push(new Scenery("ashaiTree", 360576.31365541584, -98009.58807757762, 1.5778492545600584, 2.991582618656452));
                scenicList.push(new Scenery("ashaiTree", 360157.2516365692, -97826.43833114654, 2.6157566002259545, 2.9072076248577));
                scenicList.push(new Scenery("ashaiTree", 359956.1220749736, -97622.84465890967, 5.278580398585575, 2.0265761127529687));
                scenicList.push(new Scenery("ashaiTree", 360998.7349051249, -98130.14734382617, 5.700718777674873, 0.7466280584741415));
                scenicList.push(new Scenery("ashaiTree", 361421.4144816726, -98128.13932854167, 6.19614699489618, 2.472346394296052));
                scenicList.push(new Scenery("ashaiTree", 362020.0300201161, -98058.55469256692, 5.169424824063136, 0.9656361980117291));
                scenicList.push(new Scenery("ashaiTree", 361713.51873518137, -97721.15383905818, 5.575602518342241, 1.610068764060483));
                scenicList.push(new Scenery("ashaiTree", 361437.46680595324, -97434.40177078353, 3.850382465735602, 1.7719365053496974));
                scenicList.push(new Scenery("ashaiTree", 361857.96141131903, -98534.42106311159, 2.2264066117073575, 2.183706994615472));
                scenicList.push(new Scenery("ashaiTree", 361224.0596307142, -98567.9660981022, 4.885281695133053, 2.335084280256934));
                scenicList.push(new Scenery("ashaiTree", 361512.8731684431, -98425.10868502333, 4.258915944171233, 1.4003219053750358));
                scenicList.push(new Scenery("ashaiTree", 360657.704519102, -98603.39073590982, 5.571150842204608, 1.4770457033264521));
                scenicList.push(new Scenery("ashaiTree", 360280.42395560595, -98299.5945971029, 2.8092409766695567, 1.6731884334608154));
                scenicList.push(new Scenery("ashaiTree", 359920.54160656134, -98520.99362989838, 1.3042208531664865, 2.498404359245846));
                scenicList.push(new Scenery("ashaiTree", 360008.41027886193, -98093.79403387377, 0.974523022148115, 2.845174381754547));
                scenicList.push(new Scenery("ashaiTree", 360264.43861785164, -98984.44461075672, 3.8518467752567913, 0.7889172570505012));
                scenicList.push(new Scenery("ashaiTree", 360006.1837373422, -99362.89808924071, 6.188063955244804, 2.402406852329954));
                scenicList.push(new Scenery("ashaiTree", 360458.1291338732, -99638.35229020857, 5.1470621490069, 1.2749174319398353));
                scenicList.push(new Scenery("ashaiTree", 360846.6193906211, -99387.81486471625, 1.3911264187611825, 1.1154674100323994));
                scenicList.push(new Scenery("ashaiTree", 361230.7231328117, -99125.58110656038, 1.5914400333475296, 2.439261498211223));
                scenicList.push(new Scenery("ashaiTree", 360712.983785761, -98951.72269173009, 4.129093309989965, 1.157590471605861));
                scenicList.push(new Scenery("ashaiTree", 361440.2087129345, -98786.88566349848, 2.921567785504793, 2.777122992341905));
                scenicList.push(new Scenery("ashaiTree", 361808.96561899944, -99101.42204264874, 4.744673413970689, 2.764548493018195));
                scenicList.push(new Scenery("ashaiTree", 362054.1573470349, -98809.28875042635, 4.872680666187334, 2.508629562543175));
                scenicList.push(new Scenery("ashaiTree", 362454.5360180374, -98832.28354900541, 4.676860073639404, 2.332814003565149));
                scenicList.push(new Scenery("ashaiTree", 362920.52582256106, -98564.25790368096, 3.349553685679783, 0.7182361515731633));
                scenicList.push(new Scenery("ashaiTree", 363040.9572071095, -98984.92562566897, 6.177506620434743, 2.58979814400616));
                scenicList.push(new Scenery("ashaiTree", 362692.63544138905, -99186.02900359366, 2.904564660485748, 1.6564025988960926));
                scenicList.push(new Scenery("ashaiTree", 362267.91354424175, -99511.87901554056, 3.5378799598433863, 1.8736933652478824));
                scenicList.push(new Scenery("ashaiTree", 361888.8876015773, -99338.1611561331, 3.9857066159407744, 2.7197887382229577));
                scenicList.push(new Scenery("ashaiTree", 361460.5045311298, -99554.67009337775, 5.163955626176191, 1.1537567485320728));
                scenicList.push(new Scenery("ashaiTree", 361628.24921673443, -100103.34855777374, 6.200716943842036, 1.8191171960048664));
                scenicList.push(new Scenery("ashaiTree", 362212.6702900837, -100270.5577312121, 4.4709744906271665, 0.6104412646937893));
                scenicList.push(new Scenery("ashaiTree", 362780.2739845012, -100296.80964092846, 1.858634489406068, 1.2698761125894023));
                scenicList.push(new Scenery("ashaiTree", 363220.1510937001, -99994.10789397304, 6.017686586752844, 2.609077176533422));
                scenicList.push(new Scenery("ashaiTree", 363296.6712527627, -99587.08330469047, 2.5025199760310635, 0.6511613721046885));
                scenicList.push(new Scenery("ashaiTree", 363674.5261469354, -99850.64644751885, 0.5313878291152629, 2.1500441744464642));
                scenicList.push(new Scenery("ashaiTree", 363933.89447407285, -99681.69012514601, 4.979427334537831, 2.6213859338168644));
                scenicList.push(new Scenery("ashaiTree", 363766.1026195802, -99350.06687332065, 0.6531392115870186, 2.3497747178710906));
                scenicList.push(new Scenery("ashaiTree", 363625.8588245771, -98974.73546882112, 1.9021930267632718, 1.3389324278260544));
                scenicList.push(new Scenery("ashaiTree", 363826.0289534384, -98719.72762729778, 2.033958912049282, 2.5570211712547017));
                scenicList.push(new Scenery("ashaiTree", 363306.91664762865, -98732.4865380013, 4.240781958161473, 1.9863680090296763));
                scenicList.push(new Scenery("ashaiTree", 362733.2345369914, -99740.0473202185, 5.6717288878408985, 0.77615344295985));
                scenicList.push(new Scenery("ashaiTree", 362304.75032980356, -99986.48266754652, 4.291444976885746, 0.9946696036217797));
                scenicList.push(new Scenery("ashaiTree", 362417.493094177, -100722.22233059705, 3.385724772428973, 1.3917372406195505));
                scenicList.push(new Scenery("ashaiTree", 361813.58207333233, -100553.76195194472, 3.471752771519557, 1.800147097869051));
                scenicList.push(new Scenery("ashaiTree", 361250.7836046552, -100284.59910364953, 0.7134900137754596, 2.5020985046220567));
                scenicList.push(new Scenery("ashaiTree", 360999.56858099846, -99939.38856433702, 2.6429865345608823, 2.0678992624454238));
                scenicList.push(new Scenery("ashaiTree", 360505.5282547807, -100124.96407031844, 2.6806012687637066, 2.818205502998715));
                scenicList.push(new Scenery("ashaiTree", 360040.53772617306, -100062.41295884259, 4.479914695046775, 2.063183691180159));
                scenicList.push(new Scenery("ashaiTree", 360105.51410875755, -99800.79243842342, 2.0612978812182186, 2.765680849898838));
                scenicList.push(new Scenery("ashaiTree", 360239.33174669533, -100342.9740815858, 5.626635069928234, 1.9150054420808416));
                scenicList.push(new Scenery("ashaiTree", 359947.7614594441, -100672.63945865913, 2.0781860051650023, 2.809955734144501));
                scenicList.push(new Scenery("ashaiTree", 360287.88852051145, -100712.93134717224, 5.387704132471896, 2.4467288779537695));
                scenicList.push(new Scenery("ashaiTree", 360578.5224661418, -100524.6238178148, 6.188463466881069, 1.0179201895297816));
                scenicList.push(new Scenery("ashaiTree", 360839.62925420527, -100315.27780897563, 3.83391681342974, 2.2753438409423463));
                scenicList.push(new Scenery("ashaiTree", 360947.8415415589, -100703.630631564, 2.4635657920445784, 2.5813523815148907));
                scenicList.push(new Scenery("ashaiTree", 361395.82984591415, -100780.48209164815, 2.4906137759837743, 1.0760953797999608));
                scenicList.push(new Scenery("ashaiTree", 361673.17972124374, -100860.65570195486, 0.7044488511931029, 1.4392203059236315));
                scenicList.push(new Scenery("ashaiTree", 362052.9064809941, -100968.45316355446, 3.341855723060857, 1.6837433146829972));
                scenicList.push(new Scenery("ashaiTree", 362541.59820215654, -101118.54706838183, 0.27120592126367965, 0.984678337238746));
                scenicList.push(new Scenery("ashaiTree", 362962.0235125018, -100879.36869264649, 0.1513343742646197, 2.0625872064773074));
                scenicList.push(new Scenery("ashaiTree", 363429.6914900743, -100674.60687944658, 3.5145350273277294, 2.3473389436879475));
                scenicList.push(new Scenery("ashaiTree", 363415.5953791612, -100304.73314554419, 4.979627267388873, 0.9949363027488005));
                scenicList.push(new Scenery("ashaiTree", 363776.51749481744, -100629.75116304343, 1.850234978781935, 1.20796814772643));
                scenicList.push(new Scenery("ashaiTree", 363849.3710353707, -100137.70033177784, 0.08180926418382475, 2.5972870983743253));
                scenicList.push(new Scenery("ashaiTree", 363579.3621002203, -101008.7473890571, 3.1382429218207895, 2.411520064105834));
                scenicList.push(new Scenery("ashaiTree", 363807.5206850908, -101357.75720502653, 2.950389660173379, 1.8489856480547546));
                scenicList.push(new Scenery("ashaiTree", 363405.2657321549, -101360.01335701896, 5.579221207885441, 2.004485589681108));
                scenicList.push(new Scenery("ashaiTree", 362943.29287042527, -101459.96918950877, 0.9327368821827143, 2.5665329655396216));
                scenicList.push(new Scenery("ashaiTree", 362462.9145092358, -101473.6009151798, 0.5825245171961673, 2.0694739270844034));
                scenicList.push(new Scenery("ashaiTree", 362008.8080636873, -101274.84320019378, 3.4611980459738505, 2.154235958653289));
                scenicList.push(new Scenery("ashaiTree", 361515.6717441795, -101406.8202518449, 4.657325218555422, 0.9278891557396569));
                scenicList.push(new Scenery("ashaiTree", 361161.40055427054, -101123.98120745011, 4.147038287752084, 1.9946765926574122));
                scenicList.push(new Scenery("ashaiTree", 360527.34646868485, -101114.60808764427, 3.8698369951651506, 2.673915183554487));
                scenicList.push(new Scenery("ashaiTree", 360093.2659933929, -101004.97239689525, 3.7895985777874355, 1.1419688546523439));
                scenicList.push(new Scenery("ashaiTree", 360242.25121224794, -101502.734864141, 4.847692377891176, 2.1213723008988654));
                scenicList.push(new Scenery("ashaiTree", 359903.56855235575, -101774.35132510697, 2.1668135336102483, 2.912603459611258));
                scenicList.push(new Scenery("ashaiTree", 360021.48792061507, -102059.65358192334, 2.3785296021844715, 1.9966510484689985));
                scenicList.push(new Scenery("ashaiTree", 359890.46749112225, -102191.64201510313, 2.539239482687135, 0.7000277082816379));
                scenicList.push(new Scenery("ashaiTree", 360184.36212806654, -102442.63994486953, 5.659755330480552, 1.1608570838658427));
                scenicList.push(new Scenery("ashaiTree", 360592.53369569604, -102265.67597022337, 3.595666883326319, 1.0375268060380332));
                scenicList.push(new Scenery("ashaiTree", 361085.84448429284, -101869.84457897837, 2.771814398228005, 1.3796155684249107));
                scenicList.push(new Scenery("ashaiTree", 360705.55207690375, -101696.59107028843, 6.138630664231646, 2.9271327687623563));
                scenicList.push(new Scenery("ashaiTree", 361101.95612243074, -101413.82024675804, 1.8740683752167966, 1.8527830983042919));
                scenicList.push(new Scenery("ashaiTree", 361624.21531343344, -102008.14471722743, 2.328727952546334, 0.9408234595341838));
                scenicList.push(new Scenery("ashaiTree", 362236.90047692164, -101886.61467404925, 5.364542655262386, 1.6483766831246025));
                scenicList.push(new Scenery("ashaiTree", 362699.6534343218, -101802.80275849276, 2.4405324640098702, 0.6425954352166192));
                scenicList.push(new Scenery("ashaiTree", 363336.3097713755, -101684.14451643184, 5.139613127842266, 1.4372343353514068));
                scenicList.push(new Scenery("ashaiTree", 363862.8183823573, -101805.17969887327, 1.0555389890925406, 1.5128251141814313));
                scenicList.push(new Scenery("ashaiTree", 363494.65793018613, -102046.60667967044, 0.5359594409678873, 0.6238771575672236));
                scenicList.push(new Scenery("ashaiTree", 363749.77739893866, -102346.57320091262, 3.9295887489683765, 0.9974230923080174));
                scenicList.push(new Scenery("ashaiTree", 363218.5222734961, -102333.96133842837, 3.482510991076855, 2.8761558700678207));
                scenicList.push(new Scenery("ashaiTree", 362628.3153365241, -102200.46030995906, 3.6282472867241706, 2.1819577282043148));
                scenicList.push(new Scenery("ashaiTree", 362186.3588188597, -102118.29914266581, 2.3806539558545277, 1.046080140602286));
                scenicList.push(new Scenery("ashaiTree", 362108.4009218951, -102537.94432917131, 5.574184707904657, 1.760470952572351));
                scenicList.push(new Scenery("ashaiTree", 361661.4881776417, -102490.27466986708, 2.0291079333674613, 2.2062213591849282));
                scenicList.push(new Scenery("ashaiTree", 361236.5870922647, -102402.5931782811, 5.45897420148532, 1.7079640867295889));
                scenicList.push(new Scenery("ashaiTree", 360975.3749377027, -102800.84716424589, 2.8788139159880988, 1.4478976337312353));
                scenicList.push(new Scenery("ashaiTree", 360330.6886059869, -102800.89287997769, 3.144569357828186, 1.9549667526215262));
                scenicList.push(new Scenery("ashaiTree", 360217.5365373423, -103145.99781279529, 4.014425087370896, 1.438505000420815));
                scenicList.push(new Scenery("ashaiTree", 359921.98678097036, -102919.85414225694, 4.961186605915662, 1.3935696356705125));
                scenicList.push(new Scenery("ashaiTree", 360015.6233252481, -103315.79967936793, 4.431698193815998, 2.965369968091896));
                scenicList.push(new Scenery("ashaiTree", 360244.6494232472, -103609.62629587187, 3.5160412728247694, 1.4819265487797066));
                scenicList.push(new Scenery("ashaiTree", 360614.22613314196, -103462.1622542064, 1.1305264587263533, 1.5268284606900706));
                scenicList.push(new Scenery("ashaiTree", 361092.29744722584, -103259.96943868097, 4.271937059938829, 2.5112073955833543));
                scenicList.push(new Scenery("ashaiTree", 361588.08374218486, -103044.78015573438, 0.44367484612388114, 2.5273696555073397));
                scenicList.push(new Scenery("ashaiTree", 362148.1493996955, -102992.35781796116, 0.9666036613786777, 2.086053303744852));
                scenicList.push(new Scenery("ashaiTree", 362741.6863397046, -102838.73363190118, 3.082056029038877, 2.0581008323053767));
                scenicList.push(new Scenery("ashaiTree", 363405.2729731257, -103007.81548627588, 1.7932496122933397, 1.987639592663156));
                scenicList.push(new Scenery("ashaiTree", 363843.0673239724, -102711.58311254109, 1.5637743864957117, 2.8141576425787163));
                scenicList.push(new Scenery("ashaiTree", 363751.7592698959, -103227.81908801496, 1.1082705604504628, 1.1101783799823561));
                scenicList.push(new Scenery("ashaiTree", 363236.4619812104, -103540.37470668623, 5.7752546970879814, 2.681676609304522));
                scenicList.push(new Scenery("ashaiTree", 363618.499584572, -103707.55415707278, 0.8029838158257744, 1.8774902019018547));
                scenicList.push(new Scenery("ashaiTree", 363859.02769103355, -104277.81275933812, 0.05509496219050649, 2.2222647336839274));
                scenicList.push(new Scenery("ashaiTree", 363368.5425239535, -104133.04425426034, 4.2646869323108305, 1.09844698360056));
                scenicList.push(new Scenery("ashaiTree", 363191.8594485638, -104486.6213439246, 5.556437969772991, 2.2062462298857386));
                scenicList.push(new Scenery("ashaiTree", 363542.2285228193, -104819.3544371681, 3.386445295455491, 1.7700425169846477));
                scenicList.push(new Scenery("ashaiTree", 363849.0984109734, -104713.91176563285, 1.1030335863319323, 1.318138184815587));
                scenicList.push(new Scenery("ashaiTree", 363086.71107296244, -104877.81293407666, 0.49398281697689456, 2.172744022663735));
                scenicList.push(new Scenery("ashaiTree", 363339.5084149074, -105197.24947648113, 1.983965212252881, 0.645233363779047));
                scenicList.push(new Scenery("ashaiTree", 363832.61894746305, -105206.1944360778, 4.995893452637291, 0.8272145989639081));
                scenicList.push(new Scenery("ashaiTree", 363631.5336030165, -105636.77409086905, 5.1357686096115405, 1.0317553070297283));
                scenicList.push(new Scenery("ashaiTree", 363232.54275963124, -105491.34692445166, 1.0605862311511136, 2.1710677902736646));
                scenicList.push(new Scenery("ashaiTree", 362991.84888689354, -105194.45445940293, 4.21530223586409, 1.2833609352629656));
                scenicList.push(new Scenery("ashaiTree", 362748.7436583317, -104932.7812673123, 3.37551803965447, 1.7071394869773746));
                scenicList.push(new Scenery("ashaiTree", 362754.36962975666, -104581.44037012653, 4.898528229908791, 1.0985804390956058));
                scenicList.push(new Scenery("ashaiTree", 362698.7178874622, -104168.70540250943, 2.9869288797916576, 2.7180876211890577));
                scenicList.push(new Scenery("ashaiTree", 363022.39193308476, -103846.2252011048, 3.632706288120339, 1.5965230204372813));
                scenicList.push(new Scenery("ashaiTree", 362584.6050476097, -103550.05336586328, 2.4031417321819495, 0.8574628572925173));
                scenicList.push(new Scenery("ashaiTree", 362829.3359148988, -103174.24077264266, 4.3352629390908195, 2.81342518095102));
                scenicList.push(new Scenery("ashaiTree", 361964.5732690793, -103481.2364144225, 5.738410000926069, 0.646559186990485));
                scenicList.push(new Scenery("ashaiTree", 361828.41812795, -103819.36459070057, 3.667182448045989, 2.7632847629257626));
                scenicList.push(new Scenery("ashaiTree", 362186.5035254976, -104056.14694711205, 3.855191365462806, 1.382459808079205));
                scenicList.push(new Scenery("ashaiTree", 361743.7347102365, -104509.0077927174, 0.8529242337335691, 1.2662015067902481));
                scenicList.push(new Scenery("ashaiTree", 362098.09228201275, -104799.66220654904, 2.9232494785310568, 2.202750751251583));
                scenicList.push(new Scenery("ashaiTree", 362285.6869060336, -105267.49814153778, 4.133981178457125, 1.6746247430511416));
                scenicList.push(new Scenery("ashaiTree", 362670.97690575, -105509.62874791818, 4.525650400504576, 2.9982931339737897));
                scenicList.push(new Scenery("ashaiTree", 361971.9388386939, -105491.12460205179, 3.1102311404034757, 2.315171730599484));
                scenicList.push(new Scenery("ashaiTree", 361735.1978887071, -105147.2197605006, 5.982526426046827, 2.92290791373028));
                scenicList.push(new Scenery("ashaiTree", 361472.1138598087, -104814.62965294732, 3.5912446031039758, 2.601047131179784));
                scenicList.push(new Scenery("ashaiTree", 361113.7900171588, -104465.1524538601, 1.7968723833980556, 2.511596803523097));
                scenicList.push(new Scenery("ashaiTree", 361517.49242099293, -104029.7041374793, 5.759434631753921, 2.440213204337508));
                scenicList.push(new Scenery("ashaiTree", 361234.73040822346, -103704.42225114838, 1.3132309571619867, 2.6266383539076688));
                scenicList.push(new Scenery("ashaiTree", 360844.3081977273, -103905.8651118971, 1.638999755869253, 2.0544728852747105));
                scenicList.push(new Scenery("ashaiTree", 360840.6159785927, -104331.93124118955, 4.197096217159498, 2.998963218241591));
                scenicList.push(new Scenery("ashaiTree", 360690.238308019, -104636.4684538371, 5.839811632965933, 2.939745704208518));
                scenicList.push(new Scenery("ashaiTree", 360972.91697714065, -105044.18022801612, 5.852659724944393, 1.73911892562514));
                scenicList.push(new Scenery("ashaiTree", 361407.3017578065, -105318.59481745966, 5.095596289057414, 0.7068822167222611));
                scenicList.push(new Scenery("ashaiTree", 360701.88692149863, -105380.22466810567, 5.28187567820127, 0.8125006440779052));
                scenicList.push(new Scenery("ashaiTree", 360400.23801059544, -105114.11727560348, 2.188910311045208, 1.5525263925089028));
                scenicList.push(new Scenery("ashaiTree", 360042.0049947732, -105379.0931347833, 0.7657575413213126, 1.2023916693182382));
                scenicList.push(new Scenery("ashaiTree", 359912.1961922857, -105023.98883799242, 0.3248746972497858, 1.2473653918644114));
                scenicList.push(new Scenery("ashaiTree", 360117.60843107186, -104792.82704760454, 0.43508662024242917, 2.791854366775035));
                scenicList.push(new Scenery("ashaiTree", 360386.64197792404, -104427.08011472791, 4.544995281522104, 2.8286823880225813));
                scenicList.push(new Scenery("ashaiTree", 359876.8534507751, -104191.55094922376, 1.8253899906170727, 1.2591186767577518));
                scenicList.push(new Scenery("ashaiTree", 360280.8038324654, -104034.1586462444, 3.6742305729523386, 1.1054765885805447));
                scenicList.push(new Scenery("ashaiTree", 360005.97638393764, -103732.59010788398, 1.6180647273485538, 1.4631506829263035));
                scenicList.push(new Scenery("ashaiTree", 360678.92055452656, -103057.23461322396, 3.606953586031274, 2.003046032906074));
                scenicList.push(new Scenery("ashaiTree", 359355.6094570719, -102126.84733347002, 1.7186542394571571, 1.781164683987663));

                scenicList.push(new Scenery("ashaiTree", 362425.54783816554, -98361.65605503893, 4.623077517514468, 2.5464958615123394));
                scenicList.push(new Scenery("ashaiTree", 362162.04885430814, -98277.80049335687, 5.822627482697793, 2.3127212846668117));
                scenicList.push(new Scenery("ashaiTree", 362679.1987573698, -98642.11588755899, 2.7000319554593872, 2.1329875043789213));
                scenicList.push(new Scenery("ashaiTree", 362346.46473561035, -99160.50982430959, 3.918365086622539, 2.22745528927022));
                scenicList.push(new Scenery("ashaiTree", 362961.860498803, -99494.63274556705, 4.987920906197945, 2.4328284621124423));
                scenicList.push(new Scenery("ashaiTree", 363281.4369299196, -99275.4938414499, 6.2324633305036015, 2.5637307654698844));
                scenicList.push(new Scenery("ashaiTree", 363099.0459671567, -97826.90816456382, 4.194365341357551, 1.8213995353430743));
                scenicList.push(new Scenery("ashaiTree", 362511.8877959262, -97624.52680965535, 1.2921557103721932, 2.181881488636122));
                scenicList.push(new Scenery("ashaiTree", 362421.07062063686, -97233.63129524262, 4.254687620259613, 2.6726226993271585));
                scenicList.push(new Scenery("ashaiTree", 363196.7299142773, -97141.45701511891, 1.7070926353992713, 2.1389851715783883));
                scenicList.push(new Scenery("ashaiTree", 363074.22434223664, -96367.49509746433, 2.573274591162695, 0.9794173298078549));
                scenicList.push(new Scenery("ashaiTree", 362586.43537901394, -96165.34299314738, 5.565750877371324, 2.329392288745195));
                scenicList.push(new Scenery("ashaiTree", 362065.60183018306, -95926.36206426084, 3.7396425363912105, 0.8134518407008864));
                scenicList.push(new Scenery("ashaiTree", 363347.3094370204, -96108.29429297129, 5.69426352475448, 1.7657896962465864));
                scenicList.push(new Scenery("ashaiTree", 361787.1921973497, -96362.4018706566, 5.61469135555415, 2.7414212875826602));
                scenicList.push(new Scenery("ashaiTree", 361194.98804931226, -96538.57201679984, 3.5324069599769463, 0.6660256599066967));
                scenicList.push(new Scenery("ashaiTree", 361264.7488659539, -96127.24234738003, 4.288353928656352, 2.795994465959436));
                scenicList.push(new Scenery("ashaiTree", 361240.4506740832, -95798.2767905719, 3.80076740188605, 2.2202002842642607));
                scenicList.push(new Scenery("ashaiTree", 360541.95031132695, -96212.81948236361, 5.885425149081058, 1.7083214193018028));
                scenicList.push(new Scenery("ashaiTree", 360715.52542625344, -96797.97768401868, 6.154014207856271, 0.8066932020970581));
                scenicList.push(new Scenery("ashaiTree", 360232.40980686, -97231.13349306869, 5.23402890346452, 2.7202296285872567));
                scenicList.push(new Scenery("ashaiTree", 360840.9576619712, -98297.22728940086, 1.40314422196115, 1.613985526262824));
                scenicList.push(new Scenery("ashaiTree", 360895.26792096323, -98633.96856605126, 3.9163558203620696, 2.666705446203406));
                scenicList.push(new Scenery("ashaiTree", 360981.1768538481, -98849.64100921097, 0.33882581615684265, 1.082226616754239));
                scenicList.push(new Scenery("ashaiTree", 360407.7889626599, -98790.90268855543, 6.088749129910006, 2.1419966431346764));
                scenicList.push(new Scenery("ashaiTree", 360055.8038976632, -98852.8584489174, 1.1569319081565501, 2.787487305892544));
                scenicList.push(new Scenery("ashaiTree", 360542.59319030563, -99230.5519916483, 4.471634210746016, 1.0897641521341703));
                scenicList.push(new Scenery("ashaiTree", 360796.3247527078, -99670.13213127323, 5.582213984340551, 1.6030912162007493));
                scenicList.push(new Scenery("ashaiTree", 361273.1734565619, -99695.83869344844, 0.8423370228882405, 1.0737331869729374));
                scenicList.push(new Scenery("ashaiTree", 361689.12879962963, -99842.35926624043, 3.96536332159002, 0.9735768335283734));
                scenicList.push(new Scenery("ashaiTree", 361996.3607535767, -99735.88676097534, 4.312472812581987, 2.474133349491505));
                scenicList.push(new Scenery("ashaiTree", 361998.6407628486, -100157.68945393135, 0.4918730404276879, 2.5180702695667576));
                scenicList.push(new Scenery("ashaiTree", 362215.2146898146, -100548.36306411639, 5.379429053470479, 1.6360377166758808));
                scenicList.push(new Scenery("ashaiTree", 362647.5132120113, -100554.50895286653, 4.742454038325707, 1.7748297323865048));
                scenicList.push(new Scenery("ashaiTree", 363021.5363589819, -100552.16727804604, 5.365366483157957, 2.313546701162164));
                scenicList.push(new Scenery("ashaiTree", 362807.42981228355, -99967.95530779219, 2.0765350579572557, 2.6631694030439026));
                scenicList.push(new Scenery("ashaiTree", 362991.9317681891, -99756.88917529538, 1.0153733780625558, 1.8745949146149221));
                scenicList.push(new Scenery("ashaiTree", 363567.6345859291, -99606.78026519952, 5.7762336487863415, 1.5693684014186124));
                scenicList.push(new Scenery("ashaiTree", 363493.8293227751, -100089.45238623687, 4.972493299222108, 1.8429354608829502));
                scenicList.push(new Scenery("ashaiTree", 363623.32204351516, -100417.13491572306, 0.4057053544731496, 2.852478191664873));
                scenicList.push(new Scenery("ashaiTree", 363180.6086335951, -101142.67796651756, 2.678992112757292, 1.4585668742758304));
                scenicList.push(new Scenery("ashaiTree", 363065.8329354936, -101909.29446501385, 0.6801565889764015, 1.0848297792811405));
                scenicList.push(new Scenery("ashaiTree", 362925.89633020514, -102132.9374994556, 0.04255520152670281, 2.972281276721694));
                scenicList.push(new Scenery("ashaiTree", 362822.0747833572, -102521.64812810451, 4.90966158692164, 2.434102960589983));
                scenicList.push(new Scenery("ashaiTree", 362543.1172314361, -102512.7348555713, 3.756348696948621, 1.5513865187753866));
                scenicList.push(new Scenery("ashaiTree", 362233.3192450913, -102350.14481239297, 0.8369298662580626, 1.3658112089766488));
                scenicList.push(new Scenery("ashaiTree", 362327.08120842616, -102804.1521392292, 0.5279300538046292, 0.7503806003790764));
                scenicList.push(new Scenery("ashaiTree", 363168.2193718779, -102762.81443723953, 3.726110987773977, 2.847421516488055));
                scenicList.push(new Scenery("ashaiTree", 363493.7735578541, -102566.7217424785, 3.1829605011043127, 1.9050522765379765));
                scenicList.push(new Scenery("ashaiTree", 363892.83890765446, -103058.13773154696, 0.19870930175569515, 1.7798690703308795));
                scenicList.push(new Scenery("ashaiTree", 363511.80919873953, -103323.47106819534, 0.28742311288649447, 1.243940075258983));
                scenicList.push(new Scenery("ashaiTree", 363809.3361624612, -103535.70261395365, 1.6062457768533196, 0.650490672933986));
                scenicList.push(new Scenery("ashaiTree", 363807.6665002959, -103917.98888104243, 4.266238605626148, 2.892269123133956));
                scenicList.push(new Scenery("ashaiTree", 363585.543618964, -104228.15488262461, 1.085891363588292, 1.902879765856802));
                scenicList.push(new Scenery("ashaiTree", 363488.99336677557, -103959.63239663494, 3.3142060265784936, 0.9333816838026494));
                scenicList.push(new Scenery("ashaiTree", 363222.2858445927, -103912.63015659843, 1.3156076574627529, 1.0034965426975122));
                scenicList.push(new Scenery("ashaiTree", 363059.2934377543, -104190.19437410223, 0.5323508841857322, 1.569321000791715));
                scenicList.push(new Scenery("ashaiTree", 362901.71227673785, -104436.0161842052, 0.04932968500683362, 1.6654665643005266));
                scenicList.push(new Scenery("ashaiTree", 362525.62110585696, -104723.95730850069, 3.7605097779550967, 1.1307210235659335));
                scenicList.push(new Scenery("ashaiTree", 362305.2452649937, -104444.4096221535, 1.3245657005602238, 1.76716951740576));
                scenicList.push(new Scenery("ashaiTree", 361994.2351852239, -104300.63465524903, 1.1770736256861751, 0.8085593135172114));
                scenicList.push(new Scenery("ashaiTree", 361703.007868772, -104196.61130147787, 2.182874241516784, 1.9474877873170118));
                scenicList.push(new Scenery("ashaiTree", 361470.26056016627, -104409.82442733177, 6.255211156114881, 2.1064036648932323));
                scenicList.push(new Scenery("ashaiTree", 361131.47456854174, -104118.12606876933, 6.146876470171902, 1.820480457451929));
                scenicList.push(new Scenery("ashaiTree", 360557.6667083493, -104010.07519406367, 1.4147863715845523, 2.7218771946839713));
                scenicList.push(new Scenery("ashaiTree", 360440.75725125114, -103710.61066727554, 3.232893845830302, 2.5110918777435294));
                scenicList.push(new Scenery("ashaiTree", 360864.67902233044, -103579.54248060974, 3.1626557362443144, 2.7184502469565808));
                scenicList.push(new Scenery("ashaiTree", 360004.79013673775, -103946.92706705898, 4.976473659039633, 2.5220421264579134));
                scenicList.push(new Scenery("ashaiTree", 360089.8345913826, -104290.2814494314, 5.718092899188296, 2.4509408657977905));
                scenicList.push(new Scenery("ashaiTree", 359942.1045349932, -104540.46745906725, 1.7977431933834904, 2.2514286555420826));
                scenicList.push(new Scenery("ashaiTree", 360421.4689434319, -104805.94365701302, 5.791631129029464, 2.1183757582107323));
                scenicList.push(new Scenery("ashaiTree", 360665.29673683044, -105084.36774766546, 1.8265468534650133, 0.981400069699349));
                scenicList.push(new Scenery("ashaiTree", 361017.0847297712, -105382.14464439538, 4.588955651210723, 1.5524862974532017));
                scenicList.push(new Scenery("ashaiTree", 361262.53183129773, -105148.63178647417, 2.245522226910745, 0.6814193274234428));
                scenicList.push(new Scenery("ashaiTree", 360343.68675361597, -105445.71237865867, 1.2271815593766608, 2.6825873860220426));
                scenicList.push(new Scenery("ashaiTree", 362347.4936877639, -103784.31768307036, 3.1594691300556987, 1.8068160003905276));
                scenicList.push(new Scenery("ashaiTree", 362350.7869012278, -103272.88234600837, 4.850168309042151, 2.6023503363706664));
                scenicList.push(new Scenery("ashaiTree", 362390.15876625245, -96619.10062774223, 3.8405065059257124, 2.606669451254665));
                scenicList.push(new Scenery("ashaiTree", 362639.6871390127, -96810.92374142456, 3.1029539993884256, 2.5963931191659126));
                scenicList.push(new Scenery("ashaiTree", 362937.2223501736, -96676.6923597177, 2.5090241033348635, 2.1580983853679783));
                scenicList.push(new Scenery("ashaiTree", 362040.8428911054, -97009.24904492061, 0.5688385125105468, 2.264154259126379));
                scenicList.push(new Scenery("ashaiTree", 361674.1641157633, -97215.11034533808, 5.981942060121174, 1.0506121986766428));
                scenicList.push(new Scenery("ashaiTree", 362020.26358496386, -97540.39344069568, 5.16493255797957, 2.432871900220315));
                scenicList.push(new Scenery("ashaiTree", 362170.32769643475, -97821.62342813767, 3.477728911083608, 2.6711983039328357));
                scenicList.push(new Scenery("ashaiTree", 361800.6092506433, -98147.94281824806, 0.9226426804933103, 1.1775291940484247));


                scenicList.push(new Scenery("ashaiTree", 359313.3472786354, -105551.73414599308, 0.17805767752198948, 1.4431140210030415));
                scenicList.push(new Scenery("ashaiTree", 359174.16484005714, -105321.20535722183, 3.9268179997067256, 2.0342147322230852));
                scenicList.push(new Scenery("ashaiTree", 359382.4959704959, -105118.97525795437, 1.9950324420146932, 1.6417112080943848));
                scenicList.push(new Scenery("ashaiTree", 359218.9160777685, -104793.3729976262, 4.710914595039641, 1.5422085160270391));
                scenicList.push(new Scenery("ashaiTree", 359331.2897438226, -104477.81306557017, 3.4575218879976815, 1.1068518558779679));
                scenicList.push(new Scenery("ashaiTree", 359113.27551845484, -104393.46439703609, 2.241689359347043, 1.1605602451997692));
                scenicList.push(new Scenery("ashaiTree", 359282.01600445283, -104143.88156271975, 4.434175434733697, 2.149872383908146));
                scenicList.push(new Scenery("ashaiTree", 359034.1804676184, -103790.20109503617, 5.5716477430480325, 0.9310577733029358));
                scenicList.push(new Scenery("ashaiTree", 359261.29694434995, -103585.62287928227, 0.917403708666958, 1.73625963915153));
                scenicList.push(new Scenery("ashaiTree", 359361.91729126836, -103311.35400440471, 2.81092143314934, 0.6590131155858457));
                scenicList.push(new Scenery("ashaiTree", 359424.4840324985, -103143.43256096165, 4.758372419363749, 2.7252712292633854));
                scenicList.push(new Scenery("ashaiTree", 359140.725362653, -102996.6141717521, 4.337365878162119, 2.5020451269601676));
                scenicList.push(new Scenery("ashaiTree", 359334.04815154115, -102802.13871109312, 4.4263133184014585, 2.6642683702297187));
                scenicList.push(new Scenery("ashaiTree", 358924.4346906453, -102784.62134644424, 1.6670970688495341, 0.913375328893546));
                scenicList.push(new Scenery("ashaiTree", 358831.2542526092, -103205.37546498208, 3.0250200557305735, 2.3577852933368617));
                scenicList.push(new Scenery("ashaiTree", 359029.000912498, -103586.40767565096, 1.484510089380208, 1.0927891958715965));
                scenicList.push(new Scenery("ashaiTree", 358581.96372496994, -103661.22745298446, 0.9636255645755588, 1.4158381265575473));
                scenicList.push(new Scenery("ashaiTree", 358478.2374948078, -103314.4250686356, 0.5073919642825916, 1.0689455969212265));
                scenicList.push(new Scenery("ashaiTree", 358509.703397145, -102915.65687711394, 6.076073041378417, 2.436544524176912));
                scenicList.push(new Scenery("ashaiTree", 358610.49899653695, -102529.25766552806, 5.587781738554568, 1.3451370910575622));
                scenicList.push(new Scenery("ashaiTree", 359002.4010401954, -102489.49719120952, 4.480033158647663, 1.967808873775292));
                scenicList.push(new Scenery("ashaiTree", 359377.96262894763, -102453.17930547975, 4.8900940949941365, 1.90391259672379));
                scenicList.push(new Scenery("ashaiTree", 359006.49842000514, -102217.51601176687, 6.153843449047227, 1.6128079027895925));
                scenicList.push(new Scenery("ashaiTree", 358549.6063769023, -102035.50627522133, 4.300042418895512, 0.7697433754844161));
                scenicList.push(new Scenery("ashaiTree", 358962.13193178613, -101813.57139383921, 5.437307815468985, 2.3260054502659324));
                scenicList.push(new Scenery("ashaiTree", 359303.40799151117, -101792.41481204805, 2.239984342827077, 1.1997651934321014));
                scenicList.push(new Scenery("ashaiTree", 359078.7628055235, -101105.68613678077, 0.6177796979617398, 2.733825222862432));
                scenicList.push(new Scenery("ashaiTree", 359373.02429537755, -100906.34195617784, 4.410063433720381, 1.344749292093926));
                scenicList.push(new Scenery("ashaiTree", 359244.69367813074, -100451.5764626424, 5.5063453070793, 1.1547407098884));
                scenicList.push(new Scenery("ashaiTree", 359388.9915774993, -99955.46421147509, 3.449095792843385, 2.3483221362003412));
                scenicList.push(new Scenery("ashaiTree", 359037.796290611, -99747.40141994278, 3.548566603051256, 2.5986527223778593));
                scenicList.push(new Scenery("ashaiTree", 359264.2627616609, -99351.38248213026, 0.16265521666561164, 0.6426763409464762));
                scenicList.push(new Scenery("ashaiTree", 359059.92636571656, -98980.56397199097, 4.688297624444006, 1.7746341003807262));
                scenicList.push(new Scenery("ashaiTree", 359382.46305936674, -98808.90935827934, 0.6507464817675082, 1.265773145618839));
                scenicList.push(new Scenery("ashaiTree", 359067.2303580246, -98461.97084201616, 3.6655624819711865, 2.4608824562316065));
                scenicList.push(new Scenery("ashaiTree", 359298.30895113375, -97942.21132868949, 4.577708248708425, 0.9487300960875573));
                scenicList.push(new Scenery("ashaiTree", 358822.26584084536, -97829.870042832, 4.2999321616093535, 0.8671714605363094));
                scenicList.push(new Scenery("ashaiTree", 359122.7440398099, -97631.2550468694, 2.336608742064319, 2.6135871933971817));
                scenicList.push(new Scenery("ashaiTree", 359317.80931816547, -97403.28418202687, 4.611887716016638, 2.880241269407469));
                scenicList.push(new Scenery("ashaiTree", 359141.49869915395, -97251.65043364285, 2.5339640487267636, 2.37134413738));
                scenicList.push(new Scenery("ashaiTree", 359387.22159798845, -97075.84873760382, 2.4983934637071004, 2.677186100059049));
                scenicList.push(new Scenery("ashaiTree", 359344.24784264324, -96755.98950510581, 5.300444718058136, 1.0549725798648448));
                scenicList.push(new Scenery("ashaiTree", 359007.09972436127, -96873.86493416323, 1.5796515452468307, 2.7161877554943223));
                scenicList.push(new Scenery("ashaiTree", 358924.96380141575, -96555.05445494792, 5.81026286862455, 1.4981995328390139));
                scenicList.push(new Scenery("ashaiTree", 359229.16906518553, -96391.43830807896, 0.3265513477785987, 1.541417683115779));
                scenicList.push(new Scenery("ashaiTree", 359306.0547524176, -96131.89435531697, 4.2026783976451325, 2.0032936670421897));
                scenicList.push(new Scenery("ashaiTree", 359087.542940453, -95916.18940401022, 4.281012716399955, 1.1810830814537638));
                scenicList.push(new Scenery("ashaiTree", 359393.56940410763, -95815.28845290195, 5.564515463093862, 1.3635996462092987));
                scenicList.push(new Scenery("ashaiTree", 359175.8363493542, -95609.00138791896, 2.8784539973875094, 1.5987664393275263));
                scenicList.push(new Scenery("ashaiTree", 359399.55578630004, -95499.79572728621, 0.02818934445382969, 1.9143591010619714));
                scenicList.push(new Scenery("ashaiTree", 358844.8071219075, -95736.23354086433, 3.014169218463227, 2.0779314748591666));
                scenicList.push(new Scenery("ashaiTree", 358739.62311355973, -95520.22781158185, 0.8896324990692948, 2.8731279011928756));
                scenicList.push(new Scenery("ashaiTree", 358525.19756824616, -95700.8430215429, 4.397738278833391, 1.59976121010718));
                scenicList.push(new Scenery("ashaiTree", 358660.81468906073, -95951.20380555962, 0.14077613957364427, 1.9994792337335432));
                scenicList.push(new Scenery("ashaiTree", 358895.61937200103, -96281.20327489669, 0.522144569003229, 0.6154472699123931));
                scenicList.push(new Scenery("ashaiTree", 358510.7322202233, -96432.60143573646, 3.2735137829484, 2.7105634161378833));
                scenicList.push(new Scenery("ashaiTree", 358294.64030559885, -96199.24077288511, 4.6363395411654595, 2.2730397361408907));
                scenicList.push(new Scenery("ashaiTree", 358116.8478978948, -96462.36283820763, 1.9647477437508662, 2.3498779064387834));
                scenicList.push(new Scenery("ashaiTree", 358324.8620794634, -96767.80165819856, 3.9460721039013835, 2.8490068345422292));
                scenicList.push(new Scenery("ashaiTree", 358635.8493335725, -97051.16169376257, 3.79967752661522, 2.655413368545192));
                scenicList.push(new Scenery("ashaiTree", 358659.88782038185, -96779.01500426832, 0.15465493201073655, 1.6815079834876268));
                scenicList.push(new Scenery("ashaiTree", 358214.49711070367, -97123.62762048538, 5.899043110734372, 2.172567124552265));
                scenicList.push(new Scenery("ashaiTree", 358424.78711758007, -97395.45087609522, 5.038278981604523, 2.4292888810140973));
                scenicList.push(new Scenery("ashaiTree", 358774.9949473574, -97265.55816666012, 4.401381973284106, 2.0069608389172013));
                scenicList.push(new Scenery("ashaiTree", 358737.1926178583, -97582.91830329766, 3.7741622323819137, 0.6494315263203566));
                scenicList.push(new Scenery("ashaiTree", 358406.5566314865, -97817.3536949015, 3.5634158102144045, 0.8113059612804029));
                scenicList.push(new Scenery("ashaiTree", 358178.1462699383, -97592.53658444385, 1.2183918804207392, 1.3017727273073487));
                scenicList.push(new Scenery("ashaiTree", 357818.7368846526, -97256.75671503496, 5.591134890267636, 1.8946211766212824));
                scenicList.push(new Scenery("ashaiTree", 357563.1371223363, -97502.8607691435, 0.3604456452415589, 1.2632783497112912));
                scenicList.push(new Scenery("ashaiTree", 357786.52302149637, -97700.7958258141, 0.8845598157940188, 1.193244594773462));
                scenicList.push(new Scenery("ashaiTree", 357849.56522246846, -97968.58957006165, 0.32180212943933106, 1.6013529807852205));
                scenicList.push(new Scenery("ashaiTree", 358238.83967593266, -98078.56849492274, 3.0200562063336376, 2.3839779153659792));
                scenicList.push(new Scenery("ashaiTree", 358616.82118587656, -98175.771282781, 0.32946868444075805, 2.863335738929604));
                scenicList.push(new Scenery("ashaiTree", 358455.1349964064, -98371.88326385572, 4.4683839309774, 0.750780431181551));
                scenicList.push(new Scenery("ashaiTree", 358207.3353379305, -98309.19565127192, 2.258110680976768, 0.8703435577574419));
                scenicList.push(new Scenery("ashaiTree", 358060.69956930366, -98455.76573645063, 1.379367675424072, 2.290302132971648));
                scenicList.push(new Scenery("ashaiTree", 358195.11354658974, -98540.61451019366, 5.422840909812199, 1.0624856533230387));
                scenicList.push(new Scenery("ashaiTree", 358282.7573060295, -98778.91277033559, 3.9448738950317006, 0.8247245102876519));
                scenicList.push(new Scenery("ashaiTree", 358514.12461521866, -98816.24638796989, 2.396152245141427, 0.7612532729282318));
                scenicList.push(new Scenery("ashaiTree", 358629.9619576286, -98649.38867772518, 1.9369179576340105, 2.2737416439446076));
                scenicList.push(new Scenery("ashaiTree", 358877.08691001136, -98753.92098750894, 5.762508288554829, 0.7176319608658577));
                scenicList.push(new Scenery("ashaiTree", 358680.78289946413, -99103.57674719019, 2.884150385171068, 0.613969368420614));
                scenicList.push(new Scenery("ashaiTree", 358856.37818796, -99272.29481127084, 0.2549006171044577, 2.736216250637283));
                scenicList.push(new Scenery("ashaiTree", 358943.8686055131, -99522.51654242193, 3.545934560018771, 0.9631353274213976));
                scenicList.push(new Scenery("ashaiTree", 358674.84093976166, -99697.26722432439, 4.413082634931447, 1.5927988634353336));
                scenicList.push(new Scenery("ashaiTree", 358540.4458155899, -99900.233263707, 3.8157890207432463, 2.8719326459710963));
                scenicList.push(new Scenery("ashaiTree", 358698.8751343254, -100064.15898657595, 2.8780071290717473, 2.1279875813638403));
                scenicList.push(new Scenery("ashaiTree", 359017.3806982075, -100087.72119381464, 3.070448724437588, 1.5621681828269498));
                scenicList.push(new Scenery("ashaiTree", 358916.33723696385, -100360.05216938199, 4.60307268541631, 1.4319332183097981));
                scenicList.push(new Scenery("ashaiTree", 358850.82266911067, -100600.77201424964, 0.5549245389920057, 1.148419115846213));
                scenicList.push(new Scenery("ashaiTree", 359033.6314188702, -100884.59614944673, 2.6492054915139787, 2.615414299180869));
                scenicList.push(new Scenery("ashaiTree", 358718.6210696073, -100924.13750397741, 0.22963691737825181, 0.8539608883172694));
                scenicList.push(new Scenery("ashaiTree", 358674.8057449577, -101101.18266745385, 2.397161951016536, 2.424488169483408));
                scenicList.push(new Scenery("ashaiTree", 358712.12264221057, -101367.42677238629, 4.701613629511168, 2.6148024746898164));
                scenicList.push(new Scenery("ashaiTree", 358995.60328088305, -101501.59448478297, 0.302351060297724, 2.061487978408381));
                scenicList.push(new Scenery("ashaiTree", 359305.1156960321, -101354.5720201257, 2.009738995616522, 1.958813574262964));
                scenicList.push(new Scenery("ashaiTree", 358608.5014912621, -101677.33454656551, 3.4642838096547797, 0.8151140617052041));
                scenicList.push(new Scenery("ashaiTree", 358329.6873710523, -101853.54124909012, 5.049485470985358, 2.033935706070242));
                scenicList.push(new Scenery("ashaiTree", 358196.2237663295, -101681.44717111718, 5.559627246092118, 0.9398458121932561));
                scenicList.push(new Scenery("ashaiTree", 358241.3321733989, -101351.49814735573, 0.07993888612175064, 1.9200133030991449));
                scenicList.push(new Scenery("ashaiTree", 358426.5537443312, -101110.05063402801, 1.4539678989426539, 1.1662590952540621));
                scenicList.push(new Scenery("ashaiTree", 358282.60968621256, -100815.8828445689, 0.8539600518336996, 2.9073627034519753));
                scenicList.push(new Scenery("ashaiTree", 358484.95554729184, -100676.63528280851, 0.01937951993942753, 0.992129166704439));
                scenicList.push(new Scenery("ashaiTree", 358249.477334886, -100463.16823855, 0.8660614920161092, 1.6023971474103957));
                scenicList.push(new Scenery("ashaiTree", 358473.895560132, -100312.7822451768, 3.6970916713214663, 0.9563833138968167));
                scenicList.push(new Scenery("ashaiTree", 358290.12319227046, -100039.05803032557, 5.588110736625673, 1.3096025451312943));
                scenicList.push(new Scenery("ashaiTree", 358067.4743233495, -99794.0066297463, 2.314642305443482, 0.7777964851513088));
                scenicList.push(new Scenery("ashaiTree", 357881.83226961165, -99901.05998449436, 4.995343447548842, 1.6652618016329641));
                scenicList.push(new Scenery("ashaiTree", 357925.0182406963, -100135.6891943862, 3.049969269609535, 1.4319454521766115));
                scenicList.push(new Scenery("ashaiTree", 358034.5483675197, -100362.25970608366, 4.980938481999889, 0.9615804621501048));
                scenicList.push(new Scenery("ashaiTree", 357807.3716959904, -100662.27190853903, 1.9010113273984313, 2.0753437485084807));
                scenicList.push(new Scenery("ashaiTree", 358100.2938748977, -100645.78858943054, 4.532608183938003, 1.0347195091364472));
                scenicList.push(new Scenery("ashaiTree", 358037.4180492295, -101032.07307062826, 4.848874586401814, 2.6744718245617722));
                scenicList.push(new Scenery("ashaiTree", 357732.6346664065, -100967.31418049449, 3.5550936956389516, 1.2032361887247425));
                scenicList.push(new Scenery("ashaiTree", 357766.99547556404, -101256.05099363103, 5.754801204403415, 0.9944915056107098));
                scenicList.push(new Scenery("ashaiTree", 357984.14214628516, -101407.475099233, 2.773389675710186, 1.6172166954674272));
                scenicList.push(new Scenery("ashaiTree", 357873.6125691332, -101685.23513790501, 4.341128748949924, 1.0886133164400986));
                scenicList.push(new Scenery("ashaiTree", 358020.1670624328, -102060.94555151077, 2.6775631786937897, 2.269706794495439));
                scenicList.push(new Scenery("ashaiTree", 358279.7852156696, -102390.77914929195, 1.8378117688082631, 0.866355603047013));
                scenicList.push(new Scenery("ashaiTree", 358130.91583167453, -102658.5782476944, 0.3006268830981171, 1.3159943408324808));
                scenicList.push(new Scenery("ashaiTree", 358196.2270347683, -102993.48725733928, 4.334158760313516, 1.246026879596649));
                scenicList.push(new Scenery("ashaiTree", 358130.8716741098, -103352.225934324, 0.910099846835169, 1.9273119145867548));
                scenicList.push(new Scenery("ashaiTree", 357899.2899731287, -103181.31337135051, 5.133004849811952, 1.1420942768645919));
                scenicList.push(new Scenery("ashaiTree", 357891.40922596096, -103433.41226409133, 0.6255485583742714, 1.1438312584880268));
                scenicList.push(new Scenery("ashaiTree", 358116.35524107516, -103750.62826671178, 6.0910134059032455, 2.6164003118685923));
                scenicList.push(new Scenery("ashaiTree", 358400.5735790287, -103996.3223809259, 2.8900700363501626, 1.5478001268058141));
                scenicList.push(new Scenery("ashaiTree", 358767.2902610846, -103919.10922432129, 5.83225632784459, 1.913023715385664));
                scenicList.push(new Scenery("ashaiTree", 358912.539564375, -104161.04004992069, 3.4101822750097495, 1.1704425962303735));
                scenicList.push(new Scenery("ashaiTree", 358521.8552221385, -104401.52684174395, 2.4894138700666644, 2.6123730724099428));
                scenicList.push(new Scenery("ashaiTree", 358216.23644847027, -104219.20268029475, 0.28351655811145987, 2.0175826609347656));
                scenicList.push(new Scenery("ashaiTree", 358191.3994077827, -104476.094306091, 0.42187169821605713, 1.6234387646852162));
                scenicList.push(new Scenery("ashaiTree", 358394.5860779374, -104700.29172132403, 4.808553885389304, 1.3663769162898904));
                scenicList.push(new Scenery("ashaiTree", 358832.3183591993, -104671.53776590744, 0.4291660102637158, 1.3037178624875145));
                scenicList.push(new Scenery("ashaiTree", 358698.080875457, -105015.64139772122, 3.890359912192032, 1.0747942057588342));
                scenicList.push(new Scenery("ashaiTree", 358277.41873986326, -104953.07694094106, 5.572793740896377, 0.865743587156206));
                scenicList.push(new Scenery("ashaiTree", 358451.4227645443, -105189.96044981481, 0.13295322209362642, 2.6535479028403453));
                scenicList.push(new Scenery("ashaiTree", 358697.0798125834, -105320.46626141915, 0.7169214833917034, 1.3877234369347473));
                scenicList.push(new Scenery("ashaiTree", 358974.2340334029, -105129.71114397176, 1.288452956627488, 0.8476252514871955));
                scenicList.push(new Scenery("ashaiTree", 358848.0434552298, -105474.47935565806, 5.277499771744453, 1.2063235316983405));
                scenicList.push(new Scenery("ashaiTree", 358526.4763511493, -105557.93914714605, 5.033449470972249, 1.0943156364003461));
                scenicList.push(new Scenery("ashaiTree", 358349.3567248976, -105363.65905936161, 1.6522894469907095, 2.404015668350992));
                scenicList.push(new Scenery("ashaiTree", 358179.8110757724, -105500.94354549452, 2.326496893339512, 1.5990690604876299));
                scenicList.push(new Scenery("ashaiTree", 357992.2477265349, -105201.85216662765, 2.74429526690597, 2.632198649095957));
                scenicList.push(new Scenery("ashaiTree", 357894.5185749194, -104903.84386366155, 0.3917795871349612, 2.820519043480589));
                scenicList.push(new Scenery("ashaiTree", 357991.0610273629, -104634.628150068, 4.357878426627701, 1.7447303277541084));
                scenicList.push(new Scenery("ashaiTree", 357665.0525201978, -104421.36063432373, 0.3135549807589682, 1.7804899243690797));
                scenicList.push(new Scenery("ashaiTree", 357473.73804901337, -104723.57465757868, 0.8796261245746131, 2.544325604691959));
                scenicList.push(new Scenery("ashaiTree", 357591.2760211857, -105099.24065758011, 4.574031220852408, 2.651034524731718));
                scenicList.push(new Scenery("ashaiTree", 357735.8917399041, -105474.39970996122, 5.567148344487943, 2.5274557584566675));
                scenicList.push(new Scenery("ashaiTree", 357343.08442115824, -105350.6392312081, 3.2771965103647567, 2.4907321478730733));
                scenicList.push(new Scenery("ashaiTree", 357123.3950529007, -105542.79729332292, 4.040587425351645, 1.634715251150039));
                scenicList.push(new Scenery("ashaiTree", 356914.2003581453, -105284.68539437298, 1.691450207941353, 2.561855944301146));
                scenicList.push(new Scenery("ashaiTree", 357008.24116921326, -105040.50697592598, 1.0448531019251237, 2.305195171825781));
                scenicList.push(new Scenery("ashaiTree", 357017.78112304286, -104625.44527397424, 0.846344044541825, 1.7915902941679014));
                scenicList.push(new Scenery("ashaiTree", 356759.775539775, -104818.14232767005, 6.107282099780239, 0.7606592882072893));
                scenicList.push(new Scenery("ashaiTree", 356541.8595129195, -105151.665923091, 2.8575932748799877, 2.931110813146631));
                scenicList.push(new Scenery("ashaiTree", 356470.69043478183, -105458.96004612031, 0.971264016919726, 2.9679614860518155));
                scenicList.push(new Scenery("ashaiTree", 356241.3428271385, -105276.74379588262, 3.2434927871685764, 1.0424526347471126));
                scenicList.push(new Scenery("ashaiTree", 356079.2305850698, -105524.66988843092, 1.935593995518685, 1.7995423455414854));
                scenicList.push(new Scenery("ashaiTree", 355935.3082309757, -105356.8197033046, 1.0130364909607927, 2.946815598224657));
                scenicList.push(new Scenery("ashaiTree", 355515.35091949656, -105259.19299626545, 2.8735999818194684, 2.6949327178440434));
                scenicList.push(new Scenery("ashaiTree", 355475.9032929295, -105487.6862273295, 4.2402962615307676, 1.4554206186753849));
                scenicList.push(new Scenery("ashaiTree", 355131.9785288227, -105353.01005155245, 2.649292063755346, 0.6240556039270281));
                scenicList.push(new Scenery("ashaiTree", 354845.5387292843, -105544.41800420858, 3.2984287352388364, 2.6932829935052722));
                scenicList.push(new Scenery("ashaiTree", 354610.224743243, -105432.97498793119, 3.0542876150315497, 0.916286157571131));
                scenicList.push(new Scenery("ashaiTree", 354623.56817150436, -105144.88047707462, 0.32265895615058215, 2.2260683837064525));
                scenicList.push(new Scenery("ashaiTree", 354855.5220057384, -105160.57263975518, 0.5854912843269274, 0.6172312813572801));
                scenicList.push(new Scenery("ashaiTree", 355095.92043637595, -104936.4719525509, 3.8649530077430554, 1.9340362003018026));
                scenicList.push(new Scenery("ashaiTree", 354788.0854731646, -104756.19499209523, 5.77855391043894, 1.938927124425287));
                scenicList.push(new Scenery("ashaiTree", 355635.57991064613, -104978.31903866369, 3.496475816702371, 2.940718867178151));
                scenicList.push(new Scenery("ashaiTree", 356081.3081212187, -104856.69217566653, 3.374849485546787, 2.1444344699654185));
                scenicList.push(new Scenery("ashaiTree", 356167.534098214, -105069.57798097881, 0.08827289596871743, 2.0990554073094305));
                scenicList.push(new Scenery("ashaiTree", 355712.5142370097, -104616.54207629857, 4.446102531347793, 2.6346640192157165));
                scenicList.push(new Scenery("ashaiTree", 356025.7135870372, -104487.68582474475, 2.2992343218020235, 1.5336582666348755));
                scenicList.push(new Scenery("ashaiTree", 356222.702907502, -104686.09597177502, 5.329310532015133, 0.6452280329055652));
                scenicList.push(new Scenery("ashaiTree", 356313.1187352748, -104499.80707123004, 1.1583734496942435, 1.1056068049979308));
                scenicList.push(new Scenery("ashaiTree", 356474.4377472478, -104638.01481276481, 2.977176732944661, 0.6992758929559392));
                scenicList.push(new Scenery("ashaiTree", 356489.79125946126, -104359.18358103388, 1.1270567887972027, 2.5544722190470424));
                scenicList.push(new Scenery("ashaiTree", 356233.54462824046, -104247.66536518345, 3.6995140756770013, 1.4130141625183748));
                scenicList.push(new Scenery("ashaiTree", 355908.87234038097, -104347.8031325537, 1.2292401204328798, 0.7846166588925999));
                scenicList.push(new Scenery("ashaiTree", 355915.7476662829, -104103.53046507745, 2.0992695980911176, 2.8782267433009854));
                scenicList.push(new Scenery("ashaiTree", 356102.0304294633, -104000.65189137099, 4.450959734523986, 1.138492689811399));
                scenicList.push(new Scenery("ashaiTree", 356386.99950494355, -104049.49981723254, 4.544879421018911, 2.3681100505924184));
                scenicList.push(new Scenery("ashaiTree", 356318.67230082426, -103832.59151821212, 5.948305796055229, 2.7930878549684044));
                scenicList.push(new Scenery("ashaiTree", 356566.9681475381, -103947.2315679363, 3.5283882210417006, 2.664363868303171));
                scenicList.push(new Scenery("ashaiTree", 356710.28577090625, -104133.18877712333, 2.3010216499872995, 1.2925206060283951));
                scenicList.push(new Scenery("ashaiTree", 356764.91996785003, -104489.31169779203, 3.1118261578548285, 2.4588985291286787));
                scenicList.push(new Scenery("ashaiTree", 357025.7910657587, -104336.91387489162, 1.7699028979388987, 2.023299386657505));
                scenicList.push(new Scenery("ashaiTree", 356975.99287852267, -104005.05821540652, 4.223231833857462, 1.1101782175724295));
                scenicList.push(new Scenery("ashaiTree", 356848.3989800627, -103734.13058899247, 3.1921030562705703, 2.5932252525737236));
                scenicList.push(new Scenery("ashaiTree", 356569.1382375092, -103600.4718542673, 1.335523070209734, 2.9162884963218483));
                scenicList.push(new Scenery("ashaiTree", 356295.04509765416, -103442.09529981736, 3.3782859266830094, 1.594324422029822));
                scenicList.push(new Scenery("ashaiTree", 356082.29493728664, -103635.36788290193, 4.370322142792292, 1.554238733929552));
                scenicList.push(new Scenery("ashaiTree", 355980.8564183697, -103859.14041543615, 4.887968336801149, 2.3411446104228313));
                scenicList.push(new Scenery("ashaiTree", 355624.91671358794, -103826.64602412628, 2.891509664880493, 0.6687759362430714));
                scenicList.push(new Scenery("ashaiTree", 355690.56570578355, -103586.14555084382, 6.149562491993938, 1.5484035192074241));
                scenicList.push(new Scenery("ashaiTree", 355560.3858065507, -104082.34347047623, 5.840478766741548, 1.3699036592778266));
                scenicList.push(new Scenery("ashaiTree", 355389.9159428818, -104347.47045670047, 5.148656445349122, 1.0033160992158399));
                scenicList.push(new Scenery("ashaiTree", 355305.4805655889, -104657.2108381009, 2.897833592383029, 2.41974968021375));
                scenicList.push(new Scenery("ashaiTree", 354854.6184500978, -104406.0093502623, 2.9176896925408484, 2.3888516601362344));
                scenicList.push(new Scenery("ashaiTree", 355014.0394984506, -104072.17286915042, 6.120068178534479, 1.3944620706199284));
                scenicList.push(new Scenery("ashaiTree", 355105.5919382957, -103804.9531171414, 3.0514461602588168, 2.0940939045941636));
                scenicList.push(new Scenery("ashaiTree", 355347.05764160556, -103681.12957983233, 1.3478675215972478, 0.7354874222540042));
                scenicList.push(new Scenery("ashaiTree", 355456.87542160857, -103325.18460655084, 3.731387076078923, 1.4439434342548627));
                scenicList.push(new Scenery("ashaiTree", 355034.09726430074, -103401.35101558556, 2.580064531468096, 2.1649281314448827));
                scenicList.push(new Scenery("ashaiTree", 355127.35222845385, -103160.54246503093, 1.5374434902282064, 2.231191864759334));
                scenicList.push(new Scenery("ashaiTree", 355358.34603350627, -103045.63183064126, 2.3711295706469375, 2.121670637497729));
                scenicList.push(new Scenery("ashaiTree", 355902.4013522033, -102981.81673544412, 5.736608491711727, 2.772448322904509));
                scenicList.push(new Scenery("ashaiTree", 355974.71751702833, -103277.03452507853, 2.379834103136386, 1.4650660220879308));
                scenicList.push(new Scenery("ashaiTree", 356320.95574355393, -103028.46505200306, 1.241832827551008, 1.7831322968076133));
                scenicList.push(new Scenery("ashaiTree", 356678.6620303743, -103171.7334953215, 2.8170573194462336, 1.3118571555030836));
                scenicList.push(new Scenery("ashaiTree", 356992.05935944716, -103403.8326036079, 3.799987850769661, 1.6524254114577674));
                scenicList.push(new Scenery("ashaiTree", 357303.6880035388, -103673.02722785197, 4.108321086713062, 1.8322843749683262));
                scenicList.push(new Scenery("ashaiTree", 357581.37974271673, -104123.00290526667, 1.4441288072350538, 0.8632812372347661));
                scenicList.push(new Scenery("ashaiTree", 357273.35900861607, -104165.26187521327, 3.410782695911159, 1.405797919281599));
                scenicList.push(new Scenery("ashaiTree", 357784.11154071277, -103830.7897357318, 5.507108878620775, 2.548221476413333));
                scenicList.push(new Scenery("ashaiTree", 357982.7850028995, -104115.86753003365, 1.0331606965775848, 2.5219826338033533));
                scenicList.push(new Scenery("ashaiTree", 357432.3321195662, -103266.76272817065, 4.15388490877637, 2.2568340841922336));

                scenicList.push(new Scenery("ashaiTree", 355254.44361912145, -104098.5367012802, 2.1973196813089704, 2.99301844957735));
                scenicList.push(new Scenery("ashaiTree", 355272.8500735845, -103480.63426406671, 0.7186352970631671, 1.492768560649847));
                scenicList.push(new Scenery("ashaiTree", 355738.6457072776, -103319.61468384934, 1.9992220981475504, 2.2827340116162826));
                scenicList.push(new Scenery("ashaiTree", 355601.21203745436, -102804.66485307876, 1.9892085829188522, 2.7641571463736945));
                scenicList.push(new Scenery("ashaiTree", 355848.3137619104, -102577.9680545108, 5.043910396533867, 0.9164904200501947));
                scenicList.push(new Scenery("ashaiTree", 355563.8311380271, -102474.57912619511, 2.1079857350631803, 2.5429418642167585));
                scenicList.push(new Scenery("ashaiTree", 355219.9878454773, -102703.465422458, 1.3483054970949542, 1.4695195225212134));
                scenicList.push(new Scenery("ashaiTree", 354748.2438943427, -102915.96600340196, 0.2466772219442414, 2.331534993104422));
                scenicList.push(new Scenery("ashaiTree", 354665.9803021025, -102503.00142966848, 4.5173932517102555, 2.397571611064032));
                scenicList.push(new Scenery("ashaiTree", 354925.57311505586, -102674.40724847149, 0.9345939548963234, 2.374587358163021));
                scenicList.push(new Scenery("ashaiTree", 354932.7490358101, -102318.37795645099, 3.4916139483893094, 1.5727510971169458));
                scenicList.push(new Scenery("ashaiTree", 355315.7230496064, -102406.72144402348, 3.4151604869973657, 0.6164716823858908));
                scenicList.push(new Scenery("ashaiTree", 355538.89138722635, -102153.29725187883, 2.0343512196541975, 1.899369002243612));
                scenicList.push(new Scenery("ashaiTree", 355105.1246342948, -102140.92245969854, 5.960700143622711, 1.687816256524182));
                scenicList.push(new Scenery("ashaiTree", 354628.0329502868, -102159.266967724, 5.674512082060756, 2.2215837451115443));
                scenicList.push(new Scenery("ashaiTree", 354806.55191571574, -101925.58428581213, 2.017907188730166, 0.7835185627426213));
                scenicList.push(new Scenery("ashaiTree", 355116.95637053106, -101866.61978566243, 2.8016788941813346, 2.7807475564069235));
                scenicList.push(new Scenery("ashaiTree", 355407.6366127687, -101943.10138246296, 3.2354556886952217, 2.2011289069806494));
                scenicList.push(new Scenery("ashaiTree", 355820.9757274516, -101921.75509858927, 0.37315071986557136, 0.761076468239799));
                scenicList.push(new Scenery("ashaiTree", 355841.25582061755, -102307.61830128328, 0.06735906216475544, 1.854400804621298));
                scenicList.push(new Scenery("ashaiTree", 356280.2675295188, -102557.23604591185, 1.8828843416484489, 1.60747221652292));
                scenicList.push(new Scenery("ashaiTree", 356644.7207311094, -102677.33528084657, 3.7048168060392195, 2.1198927533222314));
                scenicList.push(new Scenery("ashaiTree", 356922.91138701816, -102890.86195500291, 2.311768347099373, 1.5893387228675608));
                scenicList.push(new Scenery("ashaiTree", 357144.43875105743, -103058.56490205118, 5.601508636535619, 2.341439033592041));
                scenicList.push(new Scenery("ashaiTree", 357519.08382262505, -102909.73297476505, 0.34349726284726184, 2.096331560300819));
                scenicList.push(new Scenery("ashaiTree", 357398.5011209612, -102645.34155065367, 1.8956993205828347, 2.1903797813000794));
                scenicList.push(new Scenery("ashaiTree", 356988.4436982598, -102562.1774813784, 5.983976310944219, 1.839010055158567));
                scenicList.push(new Scenery("ashaiTree", 356707.04154757253, -102340.27264543093, 2.6539727279695993, 2.5725277268532225));
                scenicList.push(new Scenery("ashaiTree", 357002.253496098, -102183.32196283177, 5.84009995089567, 2.1647020352629003));
                scenicList.push(new Scenery("ashaiTree", 357329.1867825505, -102363.70740900081, 4.3732755375161805, 1.604704330816637));
                scenicList.push(new Scenery("ashaiTree", 357765.85048205615, -102495.21682889957, 0.5849145383370091, 2.2116724084057098));
                scenicList.push(new Scenery("ashaiTree", 357767.9794974153, -102823.11830531615, 2.6861809811460398, 2.685854812766145));
                scenicList.push(new Scenery("ashaiTree", 357621.9968699468, -102201.69371776456, 2.9797682132106544, 2.4601352635601805));
                scenicList.push(new Scenery("ashaiTree", 357256.55853154167, -101934.56021243392, 3.6697923292689287, 0.9167783376124057));
                scenicList.push(new Scenery("ashaiTree", 357635.5064999783, -101933.50021429828, 5.158615639181925, 0.7192001998733426));
                scenicList.push(new Scenery("ashaiTree", 357542.5984570993, -101483.57569257847, 5.5477770756485, 2.189354998292702));
                scenicList.push(new Scenery("ashaiTree", 357303.0148313224, -101697.62245568572, 4.905317436019801, 1.5620909774230958));
                scenicList.push(new Scenery("ashaiTree", 356953.8164456575, -101755.27845416612, 2.583152508168621, 2.5051141237392));
                scenicList.push(new Scenery("ashaiTree", 356636.5672895995, -102028.84762609837, 3.0221431994361687, 1.6302042656154558));
                scenicList.push(new Scenery("ashaiTree", 356664.47263384366, -101715.10108666918, 3.5117350991759637, 1.9745393712670918));
                scenicList.push(new Scenery("ashaiTree", 356311.5904399917, -101970.8140853237, 3.568868754271136, 2.595150595118962));
                scenicList.push(new Scenery("ashaiTree", 356283.55757601466, -102370.47450052603, 5.85840013569722, 1.7501284192981807));
                scenicList.push(new Scenery("ashaiTree", 356124.42460719653, -102141.24550864028, 2.899842959204815, 2.151241140913112));
                scenicList.push(new Scenery("ashaiTree", 355926.01912486256, -101705.85314096803, 2.4214239943785185, 1.191712410685696));
                scenicList.push(new Scenery("ashaiTree", 356293.67248855066, -101547.02318716758, 1.104126091980213, 2.2501554253730927));
                scenicList.push(new Scenery("ashaiTree", 356672.3903070778, -101410.14634094917, 1.2843014874264402, 2.140511915435936));
                scenicList.push(new Scenery("ashaiTree", 356994.0493422174, -101513.71688919213, 4.002894197520218, 1.508689559453185));
                scenicList.push(new Scenery("ashaiTree", 357190.3109862739, -101388.92845312256, 0.8094310102418985, 1.6703021243296954));
                scenicList.push(new Scenery("ashaiTree", 357526.56894109433, -101196.18181139082, 2.8775032832604355, 1.384208213601112));
                scenicList.push(new Scenery("ashaiTree", 357383.4168402862, -100907.67294635344, 0.820767072891607, 1.9637490351223206));
                scenicList.push(new Scenery("ashaiTree", 357508.1619622107, -100596.28874463284, 4.961685095047777, 2.1612689940619614));
                scenicList.push(new Scenery("ashaiTree", 357774.18254183047, -100355.6243697961, 1.063624260325951, 1.3001626006318032));
                scenicList.push(new Scenery("ashaiTree", 357501.84147419623, -100081.14877048116, 2.9449772938564576, 1.850302021282817));
                scenicList.push(new Scenery("ashaiTree", 357614.01623044047, -99782.10274316215, 6.141175723715201, 2.657900681938964));
                scenicList.push(new Scenery("ashaiTree", 357862.3227762645, -99582.82039586824, 1.1783427947488114, 2.789889498895363));
                scenicList.push(new Scenery("ashaiTree", 358146.5018294431, -99518.38935981866, 5.1370955448163516, 2.911703813428433));
                scenicList.push(new Scenery("ashaiTree", 358435.63091963227, -99574.94431210592, 1.5727011014940981, 2.908309394851238));
                scenicList.push(new Scenery("ashaiTree", 358568.5808655968, -99375.14029656933, 0.41307203462469594, 1.3145127319094747));
                scenicList.push(new Scenery("ashaiTree", 358370.99235863896, -99116.60577862829, 3.0624625042598734, 2.5423616268182534));
                scenicList.push(new Scenery("ashaiTree", 358761.04966682504, -98919.40598150747, 5.51830513887538, 1.4585052770802702));
                scenicList.push(new Scenery("ashaiTree", 358069.5381542584, -98952.22425089568, 5.733266628708737, 1.7929853252428352));
                scenicList.push(new Scenery("ashaiTree", 357877.22370725375, -98716.54437425395, 1.3344555430034795, 1.318374918059669));
                scenicList.push(new Scenery("ashaiTree", 357625.97554356104, -98481.8524332972, 5.845285687219917, 1.7461218435070038));
                scenicList.push(new Scenery("ashaiTree", 357776.5952122367, -98273.34656437478, 0.5098763043165996, 2.93293907218113));
                scenicList.push(new Scenery("ashaiTree", 357466.06466726045, -98068.71995393836, 1.012360100238688, 2.234984302077332));
                scenicList.push(new Scenery("ashaiTree", 357445.9726455898, -97750.16580874482, 3.328277975122916, 2.6420664818173876));
                scenicList.push(new Scenery("ashaiTree", 357144.50832363474, -97487.72681579815, 1.8099730293787353, 2.5297182545388703));
                scenicList.push(new Scenery("ashaiTree", 357407.8015263849, -97177.55052970872, 4.227130638025162, 2.951802212754711));
                scenicList.push(new Scenery("ashaiTree", 357671.21629365906, -96895.67018870785, 1.8272309885586504, 1.3750586085892293));
                scenicList.push(new Scenery("ashaiTree", 358019.754609056, -96866.69417587202, 0.7330462713613861, 2.5011734079803087));
                scenicList.push(new Scenery("ashaiTree", 357702.3588378299, -96533.11300071866, 4.5174430269330275, 0.6466936135154194));
                scenicList.push(new Scenery("ashaiTree", 357897.89251277264, -96157.82389118153, 4.91907684222003, 1.671657447563485));
                scenicList.push(new Scenery("ashaiTree", 358230.4126613413, -95884.10946848274, 6.0279867145073345, 0.6477419307463147));
                scenicList.push(new Scenery("ashaiTree", 358306.71685978264, -95588.39528292284, 3.2251107247589257, 0.7300620932910348));
                scenicList.push(new Scenery("ashaiTree", 358008.50783978583, -95571.1082779284, 1.4833026296779765, 2.0926976120107184));
                scenicList.push(new Scenery("ashaiTree", 357647.35128655063, -95496.82297946422, 1.5471022140898918, 2.88225216872885));
                scenicList.push(new Scenery("ashaiTree", 357508.57379542186, -95663.75699800855, 1.4729595570832208, 1.9549931254897261));
                scenicList.push(new Scenery("ashaiTree", 357811.96184579417, -95913.8593041496, 4.952411894118704, 1.0330791588348593));
                scenicList.push(new Scenery("ashaiTree", 357790.9218856805, -95667.24943368774, 4.169235196392161, 1.5656372199297657));
                scenicList.push(new Scenery("ashaiTree", 357472.95904130116, -95983.76633325715, 0.7316357315998473, 2.048525433575947));
                scenicList.push(new Scenery("ashaiTree", 357604.92794254783, -96258.10728124953, 3.492014840593938, 2.161666085816286));
                scenicList.push(new Scenery("ashaiTree", 357390.1936088477, -96375.09952449215, 2.2004265745478526, 2.469621029002988));
                scenicList.push(new Scenery("ashaiTree", 357272.5029589101, -96192.68497049862, 0.7199498179949102, 2.2121995433234107));
                scenicList.push(new Scenery("ashaiTree", 356909.51714288344, -96022.71758768309, 4.667009329480166, 1.8898682644837455));
                scenicList.push(new Scenery("ashaiTree", 357152.047436163, -95768.60629135252, 5.553035373833632, 2.9227850890389426));
                scenicList.push(new Scenery("ashaiTree", 357070.85667896946, -95550.64537770265, 5.746644573078092, 0.6996543788797763));
                scenicList.push(new Scenery("ashaiTree", 356803.45447348757, -95766.8446003381, 6.258014133875634, 2.423339403167088));
                scenicList.push(new Scenery("ashaiTree", 356482.7280104414, -95522.5708019582, 3.46891485188551, 2.6543450242278346));
                scenicList.push(new Scenery("ashaiTree", 356389.9029465803, -95866.63639095469, 2.273641020187901, 1.0025651035428633));
                scenicList.push(new Scenery("ashaiTree", 356473.1703249717, -96177.87757187408, 4.560768597153844, 2.121006873202798));
                scenicList.push(new Scenery("ashaiTree", 356669.6962870444, -96435.37826388457, 5.67529609426355, 2.509039941714437));
                scenicList.push(new Scenery("ashaiTree", 357032.9771153147, -96473.19000258305, 6.119539725379698, 0.892538540510642));
                scenicList.push(new Scenery("ashaiTree", 356856.3746569909, -96323.36599224304, 3.0510344798444864, 1.824513519788685));
                scenicList.push(new Scenery("ashaiTree", 356760.62932257773, -96664.02340559807, 1.9149119220153878, 1.836064217755625));
                scenicList.push(new Scenery("ashaiTree", 357071.0174059024, -96794.35222659133, 0.7864106520774959, 0.8300692780672548));
                scenicList.push(new Scenery("ashaiTree", 357339.41017976875, -96749.82546157956, 0.4577109141537933, 1.8012474956266473));
                scenicList.push(new Scenery("ashaiTree", 357068.0387741706, -97126.62844329739, 0.3330338020289972, 2.9169747854411003));
                scenicList.push(new Scenery("ashaiTree", 356669.98237264884, -96918.6992502689, 6.140046192520742, 2.1522351892459617));
                scenicList.push(new Scenery("ashaiTree", 356514.5469322589, -97246.4623077055, 3.54889659831672, 1.3952438400540754));
                scenicList.push(new Scenery("ashaiTree", 356836.1345998331, -97407.74925932912, 2.7928260435712264, 0.9193756720674896));
                scenicList.push(new Scenery("ashaiTree", 356828.7208079578, -97176.70887084324, 1.5737750884191986, 2.2399510531740177));
                scenicList.push(new Scenery("ashaiTree", 356610.88556142384, -97570.0947326605, 1.1313230866868704, 1.857700139868566));
                scenicList.push(new Scenery("ashaiTree", 356827.8742840564, -97930.67043840796, 2.1269206586009193, 2.3750874650594422));
                scenicList.push(new Scenery("ashaiTree", 357112.83908494294, -97775.16439239656, 5.892763975432803, 1.2952231190554686));
                scenicList.push(new Scenery("ashaiTree", 357227.8851859883, -98138.65866673055, 1.1403819530201373, 2.895275483191359));
                scenicList.push(new Scenery("ashaiTree", 356908.18008099584, -98288.69487243025, 1.2959035449515057, 1.8838844037661224));
                scenicList.push(new Scenery("ashaiTree", 356482.9678476309, -98136.8507273514, 1.6251997529700672, 1.7130705426860127));
                scenicList.push(new Scenery("ashaiTree", 356389.35502124357, -97847.86380418022, 6.194719713571514, 1.7373079247355228));
                scenicList.push(new Scenery("ashaiTree", 356166.59215187014, -97590.17138584459, 0.8178128447715858, 2.0008086927532918));
                scenicList.push(new Scenery("ashaiTree", 356197.89834077307, -97284.77238872621, 3.162666751499658, 1.1821483215966748));
                scenicList.push(new Scenery("ashaiTree", 356381.86350944726, -97023.73551531602, 5.070337001639778, 2.5401521531256597));
                scenicList.push(new Scenery("ashaiTree", 356110.2911473184, -96792.58389483736, 1.7902271853297504, 2.1974373500211763));
                scenicList.push(new Scenery("ashaiTree", 356296.3641160622, -96619.26379236698, 5.961491960444693, 1.554207709547252));
                scenicList.push(new Scenery("ashaiTree", 356056.54553567496, -96366.52888487368, 3.6958938916273807, 1.8684588067407084));
                scenicList.push(new Scenery("ashaiTree", 355990.3161205174, -96020.12225335208, 1.373815230358486, 2.970784506035683));
                scenicList.push(new Scenery("ashaiTree", 355772.8259953786, -95726.93343280195, 0.3512155845774614, 0.6165319648423894));
                scenicList.push(new Scenery("ashaiTree", 356103.109551361, -95593.06596112279, 1.7257026417694616, 1.0848164256556083));
                scenicList.push(new Scenery("ashaiTree", 355589.6393969399, -95991.45855099091, 3.8519647759498916, 1.2630547055969847));
                scenicList.push(new Scenery("ashaiTree", 355374.3015522414, -95542.86458475851, 2.463689117701911, 2.166975925418643));
                scenicList.push(new Scenery("ashaiTree", 355088.1822866992, -95830.1509961451, 1.1933815164158725, 2.186903445311292));
                scenicList.push(new Scenery("ashaiTree", 354784.88606377225, -95715.11519911012, 1.167538043783223, 1.2708819684879147));
                scenicList.push(new Scenery("ashaiTree", 354552.1208029231, -95537.64745570646, 2.735000611474976, 1.0523935279990742));
                scenicList.push(new Scenery("ashaiTree", 354263.8000192186, -95746.94138019929, 4.371526116048355, 2.2324281692861363));
                scenicList.push(new Scenery("ashaiTree", 354029.70797399245, -95544.65745363364, 3.249349687321801, 2.980172077550353));
                scenicList.push(new Scenery("ashaiTree", 353886.9087263661, -95954.67331825728, 0.18407668537454222, 2.8349539471254666));
                scenicList.push(new Scenery("ashaiTree", 354253.10075797996, -96114.22019794676, 5.2558632872643685, 2.37890294594377));
                scenicList.push(new Scenery("ashaiTree", 353899.4502934423, -96159.73970299313, 1.0768526543931274, 1.939245011364287));
                scenicList.push(new Scenery("ashaiTree", 354146.8394259858, -96435.34770686468, 1.3968157256234097, 0.8661182484020706));
                scenicList.push(new Scenery("ashaiTree", 353895.8559590953, -96651.28781157995, 5.397722426611251, 0.7028265756441087));
                scenicList.push(new Scenery("ashaiTree", 354280.599278979, -96750.99031737985, 1.3687430040247965, 2.0569412953645565));
                scenicList.push(new Scenery("ashaiTree", 354075.9944704969, -96998.46493171949, 5.915685442897597, 0.6892723436881784));
                scenicList.push(new Scenery("ashaiTree", 353881.82940502645, -97334.30547225787, 4.847901375245985, 0.7598152616014335));
                scenicList.push(new Scenery("ashaiTree", 354308.4785807149, -97177.9467021875, 1.9851101995167377, 1.787740395522301));
                scenicList.push(new Scenery("ashaiTree", 354516.0557678742, -97039.70051785794, 1.9655840413397565, 2.7042606377564415));
                scenicList.push(new Scenery("ashaiTree", 354776.43046293926, -96733.70251983573, 5.7270595107731745, 2.5976008682980427));
                scenicList.push(new Scenery("ashaiTree", 354540.74850695924, -96373.78112661206, 2.3541840045055453, 2.9609272615761957));
                scenicList.push(new Scenery("ashaiTree", 354631.6841919939, -95968.35505869857, 3.69358899378949, 0.725114065829541));
                scenicList.push(new Scenery("ashaiTree", 354960.56890637294, -96195.4356944265, 1.6948568782242868, 2.4496966924382297));
                scenicList.push(new Scenery("ashaiTree", 355424.5666831377, -96317.33317655383, 4.454419552206414, 2.3536013930301825));
                scenicList.push(new Scenery("ashaiTree", 355741.7625083014, -96312.12998165075, 0.9514904224997208, 1.5039210738176418));
                scenicList.push(new Scenery("ashaiTree", 355830.305173335, -96773.5786606448, 2.8350821664607344, 1.095494035176833));
                scenicList.push(new Scenery("ashaiTree", 355450.6049610074, -96638.21855406174, 4.782099343177863, 2.049825623908305));
                scenicList.push(new Scenery("ashaiTree", 355079.04276204045, -96528.28113299966, 0.412493243036755, 1.9242880543667482));
                scenicList.push(new Scenery("ashaiTree", 355193.51676599926, -96989.94974647535, 0.2844622866424427, 2.9750011398391463));
                scenicList.push(new Scenery("ashaiTree", 355645.6460734631, -97140.82372607276, 6.020971207279694, 2.0582419821831));
                scenicList.push(new Scenery("ashaiTree", 355485.21752681676, -96895.32562436794, 2.772925998396816, 2.533953096882725));
                scenicList.push(new Scenery("ashaiTree", 355246.6797532298, -97359.21742269445, 5.482233103852175, 1.5400237607967981));
                scenicList.push(new Scenery("ashaiTree", 354808.02079656156, -97246.9265778917, 2.9273658269795777, 1.783155198035257));
                scenicList.push(new Scenery("ashaiTree", 354401.9794679898, -97485.04900576925, 4.420119190333604, 1.221086550142378));
                scenicList.push(new Scenery("ashaiTree", 354001.7089881939, -97653.16530728654, 2.070872857361358, 0.9054467769542563));
                scenicList.push(new Scenery("ashaiTree", 354372.44441477314, -97815.00302229259, 2.468479200464216, 0.684143107800099));
                scenicList.push(new Scenery("ashaiTree", 354819.8119376445, -97769.6394593847, 4.028579340412436, 1.7361914144580162));
                scenicList.push(new Scenery("ashaiTree", 355162.40906294406, -97568.38340790963, 4.022071035345651, 2.049327203150641));
                scenicList.push(new Scenery("ashaiTree", 355564.7241051723, -97596.82760208574, 4.33912238550374, 1.202254749095018));
                scenicList.push(new Scenery("ashaiTree", 355204.84940109774, -97866.90437175565, 3.9391139907098536, 0.6559518449640569));
                scenicList.push(new Scenery("ashaiTree", 354875.172339383, -98172.71520811057, 5.575929781854565, 0.6484101921398521));
                scenicList.push(new Scenery("ashaiTree", 354573.8699938562, -98049.2371639513, 2.2238058254528217, 0.795989658169411));
                scenicList.push(new Scenery("ashaiTree", 354177.0465416442, -98027.24090432629, 0.8643234139993831, 1.1882491641916766));
                scenicList.push(new Scenery("ashaiTree", 353905.6468148583, -98296.87147243871, 6.187484234497877, 2.019401240407918));
                scenicList.push(new Scenery("ashaiTree", 354270.83378724323, -98361.80867882846, 5.861475486653028, 2.842707114624898));
                scenicList.push(new Scenery("ashaiTree", 354645.0650301382, -98392.1285652839, 3.9194022735965652, 2.709152477936924));
                scenicList.push(new Scenery("ashaiTree", 354372.3319438117, -98688.9376814267, 3.68260613482766, 2.425115802091144));
                scenicList.push(new Scenery("ashaiTree", 353973.03018583666, -98566.99986190959, 3.1519661029634336, 0.7114851858114296));
                scenicList.push(new Scenery("ashaiTree", 354067.5883363997, -98942.94332005826, 4.355098538895889, 0.914184635380447));
                scenicList.push(new Scenery("ashaiTree", 353853.5055623418, -98795.55060941327, 2.382754237954184, 2.115046607910638));
                scenicList.push(new Scenery("ashaiTree", 353888.74662200775, -99212.63952189968, 5.429822936482031, 1.1153633313717184));
                scenicList.push(new Scenery("ashaiTree", 354147.0209471335, -99264.07279532283, 4.5134383084447744, 2.995084650610547));
                scenicList.push(new Scenery("ashaiTree", 354067.8196559237, -99531.66509792357, 5.825296726805034, 2.77654640829014));
                scenicList.push(new Scenery("ashaiTree", 353877.17144087446, -99808.80800405181, 5.581016671355493, 1.6537350951018017));
                scenicList.push(new Scenery("ashaiTree", 354169.4795314125, -99843.15853353572, 5.896640475929854, 1.3552037812681608));
                scenicList.push(new Scenery("ashaiTree", 354420.7447395621, -99636.0596333526, 0.7619448005511326, 2.374437742946943));
                scenicList.push(new Scenery("ashaiTree", 354556.0582465108, -99075.9736082196, 1.079876954781213, 1.0014126382993342));
                scenicList.push(new Scenery("ashaiTree", 354308.0409337638, -98947.76126888326, 3.7272261421072526, 2.0483199696680603));
                scenicList.push(new Scenery("ashaiTree", 354673.09807584895, -98807.84180384086, 1.3865903525380088, 1.3017823524896976));
                scenicList.push(new Scenery("ashaiTree", 354868.47542601964, -98533.69472467572, 1.9714430397037799, 1.5627651430709575));
                scenicList.push(new Scenery("ashaiTree", 355061.8019004134, -98300.36949984134, 4.110770753843134, 0.8776748171708227));
                scenicList.push(new Scenery("ashaiTree", 354937.2232405262, -97908.18062686487, 2.4288340760869667, 1.5280318762692455));
                scenicList.push(new Scenery("ashaiTree", 355580.1679796357, -97946.57718416011, 0.7836656065614953, 2.468509698727431));
                scenicList.push(new Scenery("ashaiTree", 355599.6288297328, -98302.68644380862, 6.196149687601267, 1.4321894764338365));
                scenicList.push(new Scenery("ashaiTree", 355303.4718685892, -98167.32042566832, 2.2929482510806865, 1.7592552456707988));
                scenicList.push(new Scenery("ashaiTree", 355377.3332939407, -98600.92391938785, 0.36300162728652163, 1.3905979466182163));
                scenicList.push(new Scenery("ashaiTree", 355097.433349072, -98733.94948278878, 5.125822091988454, 1.326618158814099));
                scenicList.push(new Scenery("ashaiTree", 355351.30795232195, -99041.04083501826, 5.7236049869931644, 2.1993789467104166));
                scenicList.push(new Scenery("ashaiTree", 354921.7459031692, -99098.52631650466, 1.6482919317827187, 1.8748899941207786));
                scenicList.push(new Scenery("ashaiTree", 354960.04621588177, -99358.16900289732, 3.0447450584174014, 2.0946948138885504));
                scenicList.push(new Scenery("ashaiTree", 355238.1519597471, -99339.81829921564, 5.839702518101051, 2.295853843930103));
                scenicList.push(new Scenery("ashaiTree", 355322.89736286725, -99556.42190767174, 5.5441435811915065, 1.7460360842292157));
                scenicList.push(new Scenery("ashaiTree", 355066.69816039817, -99617.47815866848, 1.79763853194905, 1.1978687478934882));
                scenicList.push(new Scenery("ashaiTree", 354947.60453487554, -99930.22420897486, 0.0466240030531271, 0.6639973747500342));
                scenicList.push(new Scenery("ashaiTree", 354538.08668029617, -99989.7429712774, 1.840340537039861, 2.591055453942332));
                scenicList.push(new Scenery("ashaiTree", 354656.8476097159, -100371.60724691128, 3.3495646876591687, 2.3720655805835507));
                scenicList.push(new Scenery("ashaiTree", 354198.37077486824, -100409.52983221128, 1.001965358073989, 0.8320493891344259));
                scenicList.push(new Scenery("ashaiTree", 354249.34957725066, -100179.53000763965, 1.6675225881103832, 0.7514630761632984));
                scenicList.push(new Scenery("ashaiTree", 353854.38545273646, -100298.79276540632, 2.025655067192966, 1.643060758144867));
                scenicList.push(new Scenery("ashaiTree", 353998.552105301, -100012.40896006704, 4.843495040286632, 0.7256736598326947));
                scenicList.push(new Scenery("ashaiTree", 354076.4324907419, -100701.77491920487, 2.215125574322667, 0.92375753965872));
                scenicList.push(new Scenery("ashaiTree", 353901.42245070625, -100947.02797599741, 6.197541546152243, 0.7155907095092707));
                scenicList.push(new Scenery("ashaiTree", 354332.8807877959, -100995.48065768367, 0.4677567389957971, 0.7587710896008752));
                scenicList.push(new Scenery("ashaiTree", 354502.532822826, -100738.53140794224, 2.830075227279046, 1.5368360811654411));
                scenicList.push(new Scenery("ashaiTree", 354883.5967982193, -100667.75532680414, 4.410526531551207, 1.86902649538805));
                scenicList.push(new Scenery("ashaiTree", 355041.7415614666, -100360.8835796098, 1.6512513536691287, 0.8881738441857783));
                scenicList.push(new Scenery("ashaiTree", 355299.4614814271, -100035.2367408691, 1.1281321764313919, 1.7340200755944553));
                scenicList.push(new Scenery("ashaiTree", 355608.34891159006, -99645.9036451814, 1.0330353418944478, 2.8537801216304133));
                scenicList.push(new Scenery("ashaiTree", 355877.2142567609, -99325.82251465166, 2.115962594622948, 0.7521359536743192));
                scenicList.push(new Scenery("ashaiTree", 355558.38504391175, -99175.05906869004, 5.171177729258312, 1.9823267907984512));
                scenicList.push(new Scenery("ashaiTree", 355822.2956280195, -98946.28873087652, 4.174503750327511, 2.793423593320106));
                scenicList.push(new Scenery("ashaiTree", 355795.5981822827, -98558.1276913683, 0.27756677779194117, 2.178206278521361));
                scenicList.push(new Scenery("ashaiTree", 356189.55595346406, -98483.57968729833, 3.213404775711181, 1.5560658664563736));
                scenicList.push(new Scenery("ashaiTree", 355987.01745234657, -98291.57785878777, 0.41429505600966643, 2.262659734500804));
                scenicList.push(new Scenery("ashaiTree", 355951.47832301666, -97975.2057132697, 3.4980295098602676, 1.5847181634808667));
                scenicList.push(new Scenery("ashaiTree", 357517.03443250427, -98852.67953341058, 1.2954212151271969, 2.8169510039683727));
                scenicList.push(new Scenery("ashaiTree", 357013.58794054436, -98682.26726684977, 4.582825246805764, 2.876657644026061));
                scenicList.push(new Scenery("ashaiTree", 357224.1154107247, -98466.03170731227, 1.4203506978822755, 2.71091072002074));
                scenicList.push(new Scenery("ashaiTree", 356720.46083168586, -98577.67518856777, 5.784501606513435, 2.455909177209954));
                scenicList.push(new Scenery("ashaiTree", 356272.54046436446, -98788.77961862204, 1.253135227281572, 2.742567155052834));
                scenicList.push(new Scenery("ashaiTree", 356634.94527118484, -99076.1659450695, 2.267589702565827, 1.376641684602363));
                scenicList.push(new Scenery("ashaiTree", 357025.6326893383, -99000.04450007904, 4.269524220946386, 1.8975078411268593));
                scenicList.push(new Scenery("ashaiTree", 357594.3529002006, -99246.45846112285, 1.5348678189582003, 2.8414494257449374));
                scenicList.push(new Scenery("ashaiTree", 358027.3703521905, -99160.53499803014, 0.1030471630952678, 2.37205428452195));
                scenicList.push(new Scenery("ashaiTree", 358347.7332993306, -99451.67658138307, 3.5858612404031764, 1.271098309186078));
                scenicList.push(new Scenery("ashaiTree", 357772.72985543654, -99405.25569618086, 0.8767062693977065, 0.6252762166137726));
                scenicList.push(new Scenery("ashaiTree", 357440.7203442097, -99535.37864587407, 1.9562502914881212, 2.2892316534610297));
                scenicList.push(new Scenery("ashaiTree", 357249.703645443, -99853.90970632277, 5.265395771078738, 1.9943440823343925));
                scenicList.push(new Scenery("ashaiTree", 356998.15813263896, -99500.04733596032, 2.7820808720573837, 0.6166309906217152));
                scenicList.push(new Scenery("ashaiTree", 356722.68390441005, -99761.95969201552, 2.266663470197861, 0.9275823953999531));
                scenicList.push(new Scenery("ashaiTree", 356819.2603459777, -100168.39655646596, 0.7185079155056346, 2.0486946283693412));
                scenicList.push(new Scenery("ashaiTree", 357266.32559958205, -100345.00669635629, 0.597082157598317, 1.2041643692631305));
                scenicList.push(new Scenery("ashaiTree", 356936.4718109991, -100626.84861470033, 2.5293455113025534, 2.8988695636952944));
                scenicList.push(new Scenery("ashaiTree", 357035.1663922437, -101061.88556210566, 2.540590066885673, 1.8198803136577917));
                scenicList.push(new Scenery("ashaiTree", 356642.5965525843, -100917.83201018372, 3.5412321922652716, 1.825438909267255));
                scenicList.push(new Scenery("ashaiTree", 356276.03776169044, -100752.87252149066, 3.7445513513686186, 1.3488223187748978));
                scenicList.push(new Scenery("ashaiTree", 356588.09123334987, -100599.52836474359, 5.998474304062327, 1.3902695783496957));
                scenicList.push(new Scenery("ashaiTree", 356211.77602324565, -100383.38803836098, 2.6780708133652134, 2.895780153786818));
                scenicList.push(new Scenery("ashaiTree", 356486.0840213281, -100169.49023945809, 1.750610233213235, 1.0304435039604314));
                scenicList.push(new Scenery("ashaiTree", 356558.22923217516, -99949.84375747772, 3.8594578972966307, 2.677048074148474));
                scenicList.push(new Scenery("ashaiTree", 356188.67854395404, -99753.12218322202, 2.543362681907349, 1.2989123622990335));
                scenicList.push(new Scenery("ashaiTree", 356379.8593546346, -99510.53600104885, 3.578506385121996, 0.6426789598988261));
                scenicList.push(new Scenery("ashaiTree", 356183.0432589231, -99203.77251270787, 0.8120742953128008, 0.675178809714532));
                scenicList.push(new Scenery("ashaiTree", 356725.7721924097, -98809.5441445434, 3.8542999269909477, 2.971319540497623));
                scenicList.push(new Scenery("ashaiTree", 355734.06641452084, -99898.6495312559, 2.5956585316882057, 2.1773543009744416));
                scenicList.push(new Scenery("ashaiTree", 356065.46746101114, -100230.89804078665, 5.952754969747784, 1.7932143001898329));
                scenicList.push(new Scenery("ashaiTree", 356162.55001329974, -100005.58529752925, 3.535998112454554, 2.091862155868416));
                scenicList.push(new Scenery("ashaiTree", 355670.4916840183, -100232.75473125151, 0.8617746012826861, 1.3738626879790634));
                scenicList.push(new Scenery("ashaiTree", 355586.9742781049, -100656.17998307504, 3.2169037023793647, 1.9962804712871831));
                scenicList.push(new Scenery("ashaiTree", 355927.1092084214, -100630.42300279287, 6.115197229228898, 2.867374635649475));
                scenicList.push(new Scenery("ashaiTree", 355722.28414391755, -101034.50623581624, 3.636264079609088, 1.0989553647499557));
                scenicList.push(new Scenery("ashaiTree", 356198.9369940851, -101037.25025212046, 5.2807687055362, 2.0206666984993276));
                scenicList.push(new Scenery("ashaiTree", 356332.9219581809, -101414.91789907875, 0.67974828145113, 0.7632511844861605));
                scenicList.push(new Scenery("ashaiTree", 355877.57031224034, -101361.57475258152, 4.907666542641624, 1.2600823945251667));
                scenicList.push(new Scenery("ashaiTree", 355454.2537379762, -101633.1183586433, 2.1731125194238334, 2.022448405327571));
                scenicList.push(new Scenery("ashaiTree", 355287.7887419765, -101308.56680583472, 3.414223734471582, 2.958213181390871));
                scenicList.push(new Scenery("ashaiTree", 355153.73664508696, -100858.4762919579, 0.6291862873650844, 1.0474260032527745));
                scenicList.push(new Scenery("ashaiTree", 354866.6657845334, -101159.19909442068, 5.892754534454306, 1.7856814086961283));
                scenicList.push(new Scenery("ashaiTree", 354649.0669568765, -101010.71349242647, 0.02005656279957399, 2.29507659557367));
                scenicList.push(new Scenery("ashaiTree", 354443.3051820605, -101319.39037401936, 6.2486761757509734, 2.4456025249588342));
                scenicList.push(new Scenery("ashaiTree", 354159.2043564469, -101131.11333013976, 5.235957095762754, 2.0565382224557056));
                scenicList.push(new Scenery("ashaiTree", 353948.9869023692, -101290.15943026451, 0.5651389080201554, 2.3284291896053575));
                scenicList.push(new Scenery("ashaiTree", 354183.0592676521, -101515.69461465644, 0.9862828081960429, 0.8271448817714453));
                scenicList.push(new Scenery("ashaiTree", 353954.0111449534, -101646.13376461931, 1.1709887142362227, 2.660894621400508));
                scenicList.push(new Scenery("ashaiTree", 353848.12235980615, -101916.7751802226, 1.4045431943010407, 2.1426714116809156));
                scenicList.push(new Scenery("ashaiTree", 354094.998066007, -102076.82743235111, 2.8779655209498674, 1.6782437689566256));
                scenicList.push(new Scenery("ashaiTree", 354284.9067845038, -101944.26104090578, 2.2261879691762028, 2.151764688793904));
                scenicList.push(new Scenery("ashaiTree", 354500.57324045675, -101743.60558397522, 2.8717840052166563, 1.00793757049466));
                scenicList.push(new Scenery("ashaiTree", 354789.1148655451, -101562.4033352632, 1.009112354489565, 1.83944204937402));
                scenicList.push(new Scenery("ashaiTree", 355109.6853798334, -101562.86943375696, 5.799098398788858, 2.3981533203714553));
                scenicList.push(new Scenery("ashaiTree", 354236.5946835318, -102327.94590402131, 3.4010907660449234, 2.608614914222984));
                scenicList.push(new Scenery("ashaiTree", 354338.334871491, -102634.83076987683, 5.779146639840318, 0.9779735185934566));
                scenicList.push(new Scenery("ashaiTree", 354362.1886509071, -102929.55872688301, 1.7315556211596943, 0.7744914513538683));
                scenicList.push(new Scenery("ashaiTree", 354036.9690100393, -102809.7975252697, 2.991956265867583, 2.968375754193911));
                scenicList.push(new Scenery("ashaiTree", 354035.517763756, -102537.26161429954, 5.2865907838033666, 1.5350422839647084));
                scenicList.push(new Scenery("ashaiTree", 353889.0346854777, -102321.04307275324, 2.2396603407582196, 2.3753472190610934));
                scenicList.push(new Scenery("ashaiTree", 353933.20892859134, -103167.58708400655, 1.794638132866727, 2.3089103618350157));
                scenicList.push(new Scenery("ashaiTree", 354374.96323696314, -103220.1438479904, 4.618578052784578, 2.457611863338438));
                scenicList.push(new Scenery("ashaiTree", 354713.61667585373, -103179.39032614362, 1.3584186062918704, 1.5071184809525338));
                scenicList.push(new Scenery("ashaiTree", 354517.3509084552, -103495.34519573502, 3.267772749567698, 2.3704082533266013));
                scenicList.push(new Scenery("ashaiTree", 354760.2272306087, -103632.79079518955, 0.5577575918683987, 1.2765165297590273));
                scenicList.push(new Scenery("ashaiTree", 354696.28497238597, -103403.1283350073, 3.219166060626646, 0.7259190415267328));
                scenicList.push(new Scenery("ashaiTree", 354544.87766875565, -103807.19069929855, 2.343729162640723, 2.1809290432567816));
                scenicList.push(new Scenery("ashaiTree", 354765.0801185285, -104045.42632940764, 5.914547651233432, 1.4337389416199309));
                scenicList.push(new Scenery("ashaiTree", 354423.3215297554, -104192.7078541431, 2.0461659174002675, 2.8064158678071185));
                scenicList.push(new Scenery("ashaiTree", 354271.0745770483, -103961.02284204763, 5.678551734994757, 0.6033907621267601));
                scenicList.push(new Scenery("ashaiTree", 354174.6818425779, -103682.97834735436, 4.433048296563206, 2.9463886319253985));
                scenicList.push(new Scenery("ashaiTree", 354053.89762636565, -103450.53185971905, 0.007780658494836827, 2.0798696712590417));
                scenicList.push(new Scenery("ashaiTree", 353856.3127826414, -103625.08999167192, 0.4871648924452969, 1.6564493399505649));
                scenicList.push(new Scenery("ashaiTree", 353950.838930546, -103902.08291074308, 0.5674259203044112, 1.7525290423445448));
                scenicList.push(new Scenery("ashaiTree", 354069.5952901576, -104238.37068532269, 0.07587012304866915, 1.3468873753924724));
                scenicList.push(new Scenery("ashaiTree", 353839.25280294946, -104508.7061637062, 6.273889794414558, 1.8757924540051616));
                scenicList.push(new Scenery("ashaiTree", 354289.22290077223, -104509.50224966691, 2.085318757890413, 1.2924234929263894));
                scenicList.push(new Scenery("ashaiTree", 354367.3830833874, -104819.55188494985, 0.43977386683335207, 1.0906105777479516));
                scenicList.push(new Scenery("ashaiTree", 354110.219898489, -105022.72432655879, 5.782267227180035, 2.87693630246381));
                scenicList.push(new Scenery("ashaiTree", 353949.62190758047, -104793.06024360647, 2.7582334277219562, 2.814162636248448));
                scenicList.push(new Scenery("ashaiTree", 353910.7119405966, -105432.43324529403, 3.5290211734279007, 1.2668760296729986));
                scenicList.push(new Scenery("ashaiTree", 354212.23792967235, -105312.7091586778, 3.966623679510884, 2.216499637768534));
                scenicList.push(new Scenery("ashaiTree", 354269.48194964207, -105521.80078852623, 1.2893249935166735, 0.8074240949453283));

                //resources
                //plants
                //scenicList.push(new Scenery("ashaiTree", 3750, 2500, 0, 1));
                //scenicList.push(new Scenery("iodPlant", 3750, 2500, 0, true));
                //scenicList.push(new Scenery("poegroonPlant", 3800, 2500, 0, true));
                //scenicList.push(new Scenery("gribnoyPlant", 3700, 2500, 0, true));
                //scenicList.push(new Scenery("maleotPlant", 3600, 2500, 0, true));
                //scenicList.push(new Scenery("kozlyakPlant", 3600, 2500, 3.2, true));
                //scenicList.push(new Scenery("cranberryPlant", 3750, 2500, 0, true));
                //scenicList.push(new Scenery("meklePlant", 3400, 2400, 2.2, true));
                //scenicList.push(new Scenery("laicaumPlant", 3200, 2400, 1.2, true));
                //scenicList.push(new Scenery("danzigPlant", 3000, 2400, 3, true));
                //scenicList.push(new Scenery("chyoulPlant", 357882.8953537681, -99262.74397537451, -3.4, true));
                //scenicList.push(new Scenery("ameloyPlant", 356044.4330237502, -99515.98251027979, 2.3, true));
                //scenicList.push(new Scenery("thadinePlant", 3200, 2400, 1.2, true));

                //scenery stuffs
                //scenicList.push(new Scenery("ashaiCampFire", 3750, 2500, 0, true));
                //scenicList.push(new Scenery("viudaTunnel", 3500, 2500, 0, true, false));

                //units
                //ArtificialIntelligenceAccess.push(new Unit(5550, 2500, "Koivaya", false, "loner"));
                //ArtificialIntelligenceAccess.push(new Unit(4100, 2300, "BlackBeruln", true, "Hutu"));
                //ArtificialIntelligenceAccess.push(new Unit(4100, 2500, "Deer", true, "Iclom"));
                //ArtificialIntelligenceAccess.push(new Unit(4500, 2500, "Wendigo", false, "wendy"));
                //ArtificialIntelligenceAccess.push(new Unit(4500, 2500, "Crow", true, "Seven"));
                //ArtificialIntelligenceAccess.push(new Unit(62507, -13387, "BlackBear", true, "Jude"));
                //ArtificialIntelligenceAccess.push(new Unit(60687, -10171, "Lizard", true, "Lazaro"));
                //ArtificialIntelligenceAccess.push(new Unit(3908, 2500, "VecherBug", false, "Tintin"));
                //ArtificialIntelligenceAccess.push(new Unit(3908, 2500, "Varonoi", true, "Apolo"));
                //ArtificialIntelligenceAccess.push(new Unit(3000, 1500, "Bat", false, "ifi"));
                //ArtificialIntelligenceAccess.push(new Unit(3908, 2500, "Dalger", true, "Apom"));
                //ArtificialIntelligenceAccess.push(new Unit(4000, 2500, "Ghoul", true, "Slub"));
                //ArtificialIntelligenceAccess.push(new Unit(4000, 2900, "Ghoul", false, "Sluba"));
                //ArtificialIntelligenceAccess[ArtificialIntelligenceAccess.length - 1].eggs = "fecundo";
                //ArtificialIntelligenceAccess.push(new Unit(3400, 2400, "Vreck", true, "Skeever", {patrolStops: 5, patrolLoop: true, route:[[4000, 2000], [3400, 2400], [3100, 2600], [3500, 3000], [4500, 2500]]}));
                //scenicList.push(new Scenery("mimicry", 3369, 2651, 1.2, "TentMimic"));
                //ArtificialIntelligenceAccess.push(new Unit(4000, 2500, "Mornid", false, "Slewuch"));
                //ArtificialIntelligenceAccess.push(new Unit(4000, 2500, "Ribback", false, "humphump"));
                //ArtificialIntelligenceAccess.push(new Unit(5000, 2400, "Ribback", true, "humpa"));
                //ArtificialIntelligenceAccess.push(new Unit(3700, 2800, "Fegil", true, "hik"));
                //ArtificialIntelligenceAccess.push(new Unit(4100, 2300, "GreyHorse", false, "horsey"));
                //ArtificialIntelligenceAccess.push(new Unit(4200, 2500, "StovolBeetle", false, "escarabajo"));
                //ArtificialIntelligenceAccess.push(new Unit(4400, 2500, "Elk", "baby", "Nihgi"));
                //scenicList.push(new Scenery("thegolthornPlant", 3000, 1500, 0.1, true));
                //ArtificialIntelligenceAccess.push(new Unit(3000, 1500, "ThegolThorn", true, "pugil"));

                ArtificialIntelligenceAccess.push(new Unit(360181.5958233239, -100510.88868616831, "StovolBeetle", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(360403.78602109326, -100391.04614110755, "StovolBeetle", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(360512.5478348538, -100656.74750340158, "StovolBeetle", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(360840.20776318165, -100519.45512275421, "StovolBeetle", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(360936.5106762828, -100821.2225338701, "StovolBeetle", false, "preBuilt"));
                scenicList.push(new Scenery("viudaTunnel", 361761.30874232156, -100325.87712719376, 6, true, false));
                scenicList.push(new Scenery("viudaTunnel", 362418.89657679247, -102350.3780528704, 0, true, false));
                scenicList.push(new Scenery("viudaTunnel", 362225.659986849, -96789.01352395336, 2.2, true, false));

                ArtificialIntelligenceAccess.push(new Unit(363129.44286224066, -98517.95510113699, "Elk", false, "Nihgi"));
                ArtificialIntelligenceAccess.push(new Unit(363081.82922714454, -98620.4269458848, "Elk", "baby", "Nihgi"));
                ArtificialIntelligenceAccess.push(new Unit(362953.89822497376, -98720.1261101135, "Elk", "baby", "Nihgi"));

                scenicList.push(new Scenery("meklePlant", 362739.5921508562, -98490.99849904692, 7, true));
                scenicList.push(new Scenery("meklePlant", 362926.46216650173, -98298.18504964025, 6, true));

                ArtificialIntelligenceAccess.push(new Unit(360624.09643408965, -98409.43588129451, "Varonoi", false, "docile", {patrolStops: 6, patrolLoop: true, route:[[360632.7516513479,-98615.54091336028], [361283.0925350929,-98874.81522804106], [361909.9825944813,-98579.01804869578], [362637.8696999831,-98179.62441512136], [362074.4840094526,-97577.04120172326] , [360624.09643408965,-98409.43588129451]]}));
                ArtificialIntelligenceAccess.push(new Unit(361336.8565869634, -98831.22809822693, "Varonoi", false, "docile", {patrolStops: 6, patrolLoop: true, route:[[361258.2760281167,-98097.01392288183], [361266.7843343258,-97447.67299248461], [361533.7431045256,-97425.73508662412], [361508.9951287917,-98168.09024950258], [361417.48493157694,-97562.24296787425] , [361336.8565869634,-98831.22809822693]]}));
                ArtificialIntelligenceAccess.push(new Unit(362861.5944473201, -100297.77443407185, "Varonoi", false, "docile", {patrolStops: 6, patrolLoop: true, route:[[362949.656298666,-100849.41648754326], [362237.05971853563,-100179.67223333666], [362336.181272012,-99613.26317124141], [362624.2887591197,-100268.68511699338], [362269.3191608051,-100973.36186481091] , [362861.5944473201,-100297.77443407185]]}));
                ArtificialIntelligenceAccess.push(new Unit(362082.85090529034, -102015.40687294074, "Varonoi", false, "docile", {patrolStops: 6, patrolLoop: true, route:[[361304.8441802016,-101990.63071929893], [361040.14287773444,-102640.05893323378], [360494.74729262566,-103419.7780567884], [359702.52053308446,-103649.80461691729], [359161.7296797767,-104035.76554120478] , [362082.85090529034,-102015.40687294074]]}));
                ArtificialIntelligenceAccess.push(new Unit(361116.1036088847, -103776.97968851586, "Varonoi", false, "docile", {patrolStops: 6, patrolLoop: true, route:[[361724.4182074548,-104212.1527064853], [360984.2085941645,-104939.95398750398], [361744.60821865365,-104355.01971734864], [361653.79216585757,-103593.26485508325], [361205.8833238897,-103278.07044808584] , [361116.1036088847,-103776.97968851586]]}));
                ArtificialIntelligenceAccess.push(new Unit(360546.04681096075, -104574.15735400195, "Varonoi", false, "docile", {patrolStops: 6, patrolLoop: true, route:[[359936.69618302933,-104488.05868632584], [359463.00036204973,-105130.64870777214], [360133.9302277859,-104375.41226491702], [359982.6512464192,-103663.81187873291], [359418.97817028954,-104326.71056080509] , [360546.04681096075,-104574.15735400195]]}));
                ArtificialIntelligenceAccess.push(new Unit(363062.45766989153, -104493.49616423056, "Varonoi", false, "docile", {patrolStops: 6, patrolLoop: true, route:[[362613.88293589436,-104282.60304856536], [362864.88623828685,-103749.32842423783], [362098.4137020735,-103007.33887817773], [361314.5408961601,-102544.13540162245], [361236.07576521806,-103020.91580812] , [363062.45766989153,-104493.49616423056]]}));
                ArtificialIntelligenceAccess.push(new Unit(361195.5081344129, -99462.69773509078, "Varonoi", true, "docile", {patrolStops: 6, patrolLoop: true, route:[[360669.13643672946,-98840.03482321065], [360340.1929004663,-99191.283576879], [360547.600599799,-99080.23841363877], [360159.89354601235,-98481.72651516618], [360665.38161896524,-98401.18804877649] , [361195.5081344129,-99462.69773509078]]}));

                ArtificialIntelligenceAccess.push(new Unit(359940.21516085934, -95991.89220221328, "Crow", true, "Seven"));
                ArtificialIntelligenceAccess.push(new Unit(359874.18901355535, -95853.22141209818, "Crow", false, "Seven"));
                ArtificialIntelligenceAccess.push(new Unit(360055.69214051304, -95893.80034281495, "Crow", false, "Seven"));
                ArtificialIntelligenceAccess.push(new Unit(360143.5150297328, -96057.02455258524, "Crow", false, "Seven"));
                ArtificialIntelligenceAccess.push(new Unit(360254.00460158515, -95956.19703399074, "Crow", true, "Seven"));
                ArtificialIntelligenceAccess.push(new Unit(360130.30147215776, -95723.6129816434, "Crow", false, "Seven"));
                ArtificialIntelligenceAccess.push(new Unit(359902.83096037706, -96181.85911617182, "Crow", true, "Seven"));
                ArtificialIntelligenceAccess.push(new Unit(359831.99102764024, -96089.92935703356, "Crow", false, "Seven"));

                ArtificialIntelligenceAccess.push(new Unit(361086.621084064, -105249.87230045105, "Crow", false, "Seven"));
                ArtificialIntelligenceAccess.push(new Unit(361060.3434421984, -105063.24565743416, "Crow", false, "Seven"));
                ArtificialIntelligenceAccess.push(new Unit(361336.4108746014, -105086.09350173417, "Crow", true, "Seven"));
                ArtificialIntelligenceAccess.push(new Unit(361246.443491739, -105230.88486355469, "Crow", false, "Seven"));

                ArtificialIntelligenceAccess.push(new Unit(362341.6220864065, -104095.64918113586, "Dalger", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(363171.96859975345, -103142.34368886985, "Dalger", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(361256.9571413513, -102763.5001782056, "Dalger", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(363026.02170740685, -100271.6681046982, "Dalger", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(363303.4007645087, -98978.26235303706, "Dalger", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(360578.45151343325, -101445.05962643951, "Vreck", false, "preBuilt", {patrolStops: 7, patrolLoop: true, route:[[360409.5367762612,-101771.50596386357], [360830.88762220915,-101199.35509930289], [360587.8563603383,-101047.16468015677], [360617.4018150149,-101388.79269094476], [359876.38519201934,-101440.25405975239], [359670.56875749235,-101957.82245288091], [360578.45151343325,-101445.05962643951]]}));
                ArtificialIntelligenceAccess.push(new Unit(360397.0245605832, -101615.6560810223, "Vreck", false, "preBuilt", {patrolStops: 7, patrolLoop: true, route:[[360528.1921923818,-101774.55141092236], [361098.0425725488,-102457.11448973075], [361333.69996374473,-102448.7793358456], [360662.26769546245,-103098.22571760892], [361415.40336768836,-102371.06868153672], [361673.7679777325,-102769.85406013683], [360397.0245605832,-101615.6560810223]]}));
                ArtificialIntelligenceAccess.push(new Unit(360373.2686205823, -101376.67444394992, "Vreck", true, "preBuilt", {patrolStops: 7, patrolLoop: true, route:[[360724.5356013932,-100944.1247029498], [360028.3644946988,-100863.41651419908], [359848.22552479093,-100971.76125876974], [359556.5486911804,-100564.95374157905], [359932.23174576904,-100644.43409288467], [359504.88779668754,-101051.69108504188], [360373.2686205823,-101376.67444394992]]}));
                ArtificialIntelligenceAccess.push(new Unit(360290.09593370283, -101280.49929750516, "Vreck", false, "preBuilt", {patrolStops: 7, patrolLoop: true, route:[[360129.96322730085,-101226.0740225994], [359647.1041614859,-101850.71341001126], [360155.67673986923,-102307.10264968677], [359970.9362008464,-102827.06811336176], [359455.9680513159,-102629.02671698706], [359967.19592427963,-102559.33453052712], [360290.09593370283,-101280.49929750516]]}));
                ArtificialIntelligenceAccess.push(new Unit(360126.42438609514, -101326.30627138009, "Vreck", false, "preBuilt", {patrolStops: 7, patrolLoop: true, route:[[359983.5930762636,-101530.60560692608], [359621.76416528836,-101576.31838640283], [358929.41037991794,-102265.05978995402], [358229.7819440836,-101702.65919245145], [357944.28477611725,-102081.62747229272], [358494.1800201763,-101362.85374394426], [360126.42438609514,-101326.30627138009]]}));
                ArtificialIntelligenceAccess.push(new Unit(360011.95126422774, -101474.74253439318, "Vreck", false, "preBuilt", {patrolStops: 7, patrolLoop: true, route:[[359333.50543956965,-102060.04987689678], [358897.01882210135,-101927.79269150643], [358200.00568198884,-101267.92627745186], [357410.0930710779,-100949.5109493506], [357910.4069039795,-100957.51454461666], [358175.4623732984,-100260.09209139536], [360011.95126422774,-101474.74253439318]]}));
                ArtificialIntelligenceAccess.push(new Unit(360131.51175506104, -101596.24572121618, "Vreck", false, "preBuilt", {patrolStops: 7, patrolLoop: true, route:[[359664.93619832076,-101699.064034293], [359070.3073829961,-102357.25221501097], [358731.35484138876,-103108.85985302032], [358520.19800844253,-102946.55807385754], [358619.59438636014,-102975.53958269522], [358690.17553637095,-102786.47261358162], [360131.51175506104,-101596.24572121618]]}));
                ArtificialIntelligenceAccess.push(new Unit(360265.16812940943, -101757.25752204911, "Vreck", false, "preBuilt", {patrolStops: 7, patrolLoop: true, route:[[360697.7781521913,-102110.27722116173], [360560.3147559242,-102746.11282720459], [360284.119256281,-103319.49168980408], [360759.08945131477,-103074.3647207957], [360181.1626839259,-102686.58162649913], [360596.4488195582,-102646.9711495682], [360265.16812940943,-101757.25752204911]]}));

                ArtificialIntelligenceAccess.push(new Unit(361139.9999091278, -96427.0345818898, "Ghoul", "baby", "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(362905.5412894205, -97202.03567286041, "Ghoul", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(362753.81393362937, -97921.80070512852, "Ghoul", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(362499.2807296984, -99736.29467319438, "Ghoul", false, "preBuilt"));

                ArtificialIntelligenceAccess.push(new Unit(363015.79150881036, -102545.76776774405, "Dalger", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(362371.9115986849, -104957.0268403704, "Dalger", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(360558.77041198075, -102500.42762171174, "Dalger", false, "preBuilt"));

                ArtificialIntelligenceAccess.push(new Unit(361317.98623722116, -104247.40016345783, "Ribback", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(361221.18814132916, -104323.31998084947, "Ribback", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(360610.63779678947, -104258.98670990464, "Ribback", true, "preBuilt"));

                ArtificialIntelligenceAccess.push(new Unit(362583.9498079244, -99404.55444191178, "Elk", true, "Nihgi"));
                ArtificialIntelligenceAccess.push(new Unit(362761.1670587028, -99599.32568596727, "Elk", false, "Nihgi"));

                scenicList.push(new Scenery("meklePlant", 362674.1488438636, -99822.57318598601, 8, true));
                scenicList.push(new Scenery("meklePlant", 362286.94579629303, -99617.07714110274, 19, true));
                scenicList.push(new Scenery("meklePlant", 362058.2190847966, -99882.12472599553, 10, true));

                ArtificialIntelligenceAccess.push(new Unit(362965.0856216252, -104677.55314608956, "Elk", false, "Nihgi"));
                ArtificialIntelligenceAccess.push(new Unit(362685.89968255255, -104741.08647495223, "Elk", "baby", "Nihgi"));

                scenicList.push(new Scenery("meklePlant", 362767.7775562511, -104660.63559068835, 1, true));
                scenicList.push(new Scenery("meklePlant", 362931.6349856877, -104558.3272013202, 0, true));
                scenicList.push(new Scenery("meklePlant", 362946.425695204, -104785.375770497, -5, true));

                scenicList.push(new Scenery("thegolthornPlant", 360122.8946265499, -105213.87312396932, 4.83973613099063, false));
                ArtificialIntelligenceAccess.push(new Unit(360122.8946265499, -105213.87312396932, "ThegolThorn", false, "preBuilt"));

                scenicList.push(new Scenery("thegolthornPlant", 360954.1294755245, -102162.47545489063, 4.83973613099063, true));
                ArtificialIntelligenceAccess.push(new Unit(360954.1294755245, -102162.47545489063, "ThegolThorn", true, "preBuilt"));

                ArtificialIntelligenceAccess.push(new Unit(358841.55658060324, -95999.2043102446, "Varonoi", false, "docile", {patrolStops: 6, patrolLoop: true, route:[[358936.27519436774,-96407.32049418344], [359558.5921881593,-96061.9993318543], [359615.61463887745,-95356.12950317882], [359906.36263262824,-94992.62568618625], [359397.85056040756,-95720.4265091681] , [358841.55658060324,-95999.2043102446]]}));
                ArtificialIntelligenceAccess.push(new Unit(358518.3618510058, -96856.93953392217, "Varonoi", true, "docile", {patrolStops: 6, patrolLoop: true, route:[[358941.79384060344,-96639.25108292185], [359045.1595374847,-97337.50926674237], [358864.91373560805,-97929.71844918524], [358215.8436352616,-97773.08590650889], [357711.2752837739,-97878.2144142703] , [358518.3618510058,-96856.93953392217]]}));
                ArtificialIntelligenceAccess.push(new Unit(357353.77627540217, -97438.22113661104, "Varonoi", true, "docile", {patrolStops: 6, patrolLoop: true, route:[[357613.25806102104,-97660.87187762515], [357573.69708462805,-97997.62411363938], [357579.5964567794,-98055.18718299354], [357189.30709628016,-97943.33994427706], [356507.5382516373,-97211.43563571674] , [357353.77627540217,-97438.22113661104]]}));
                ArtificialIntelligenceAccess.push(new Unit(356548.5984972409, -97087.72816869234, "Varonoi", true, "docile", {patrolStops: 6, patrolLoop: true, route:[[356082.7879151875,-96386.89659889891], [356313.9445278587,-96927.87074078986], [356674.89427385805,-97686.06784124668], [357181.1819309126,-97024.06752013197], [357858.53556674597,-96324.01755539209] , [356548.5984972409,-97087.72816869234]]}));
                ArtificialIntelligenceAccess.push(new Unit(355515.2263784378, -96432.11055554835, "Varonoi", false, "docile", {patrolStops: 6, patrolLoop: true, route:[[355584.79107831867,-96911.19713143187], [355967.25701700785,-97657.76609220511], [355335.6767948409,-97869.15271594103], [355558.4449879381,-98487.19568520956], [355143.0865422926,-98881.52125113354] , [355515.2263784378,-96432.11055554835]]}));
                ArtificialIntelligenceAccess.push(new Unit(354661.565065472, -97801.77783242881, "Varonoi", false, "docile", {patrolStops: 6, patrolLoop: true, route:[[354653.20199309144,-98462.69257212878], [354410.1833077763,-99107.05228612463], [355112.44383900025,-99357.1761212904], [355679.0882192882,-99517.97363748057], [356080.06983385247,-99426.22269921056] , [354661.565065472,-97801.77783242881]]}));
                ArtificialIntelligenceAccess.push(new Unit(354487.19362672727, -96042.36326743239, "Varonoi", false, "docile", {patrolStops: 6, patrolLoop: true, route:[[354830.6969152551,-95573.10833145505], [354475.01859157,-96155.22623552597], [354863.1584800778,-96431.52555788521], [354231.58422420424,-95667.59624818088], [354789.3427894208,-95443.11895638167] , [354487.19362672727,-96042.36326743239]]}));
                ArtificialIntelligenceAccess.push(new Unit(355224.05379016104, -99279.52810514522, "Varonoi", false, "docile", {patrolStops: 6, patrolLoop: true, route:[[355731.7735544282,-99981.06309569973], [355536.3780357806,-100043.71852485712], [355310.6759993467,-100082.99648992717], [355305.9214302716,-99353.3517248151], [354593.54436300683,-98580.36798224539] , [355224.05379016104,-99279.52810514522]]}));
                ArtificialIntelligenceAccess.push(new Unit(356605.5970774431, -99588.4014376319, "Varonoi", false, "docile", {patrolStops: 6, patrolLoop: true, route:[[356468.11146714585,-99278.66588417784], [356914.28515660635,-99821.92924802087], [357354.5117413708,-100483.24631539223], [357244.73119001975,-100287.50773229229], [357613.6523344935,-100661.75254123182] , [356605.5970774431,-99588.4014376319]]}));
                ArtificialIntelligenceAccess.push(new Unit(357560.0660088535, -100879.13567546163, "Varonoi", false, "docile", {patrolStops: 6, patrolLoop: true, route:[[358357.75279939413,-100829.25467772933], [357675.8137538494,-100463.99070350046], [357908.1248221204,-101012.22464837047], [357297.94674731075,-100349.98559759231], [357325.67357917305,-99684.30308574412] , [357560.0660088535,-100879.13567546163]]}));
                ArtificialIntelligenceAccess.push(new Unit(358029.00578539685, -101893.09726526545, "Varonoi", true, "docile", {patrolStops: 6, patrolLoop: true, route:[[358277.7672001869,-102359.45495865756], [357563.4738388088,-102112.98305315853], [357635.5622959438,-102901.31805669327], [357295.3654508359,-103599.2120874266], [357342.7662817619,-103559.71012121213] , [358029.00578539685,-101893.09726526545]]}));
                ArtificialIntelligenceAccess.push(new Unit(357697.03379615734, -102114.19162695493, "Varonoi", false, "docile", {patrolStops: 6, patrolLoop: true, route:[[356972.79341109283,-101956.34280211267], [356554.8226883705,-101872.25921431172], [356906.5375916195,-101778.4167599116], [357418.95250503864,-101851.2846938279], [358130.07717883924,-101345.62419161286] , [357697.03379615734,-102114.19162695493]]}));
                ArtificialIntelligenceAccess.push(new Unit(358379.1606692826, -103901.10897083303, "Varonoi", false, "docile", {patrolStops: 6, patrolLoop: true, route:[[357754.1774006718,-104297.98011046175], [357812.59087481775,-103935.4977652423], [357705.1395062551,-103621.20096722864], [358246.6235836348,-103539.69692487227], [358147.3259019678,-103960.66731583106] , [358379.1606692826,-103901.10897083303]]}));
                ArtificialIntelligenceAccess.push(new Unit(356633.8711484881, -104404.319363102, "Varonoi", false, "docile", {patrolStops: 6, patrolLoop: true, route:[[356839.38881361234,-104346.40372791268], [357217.6955043129,-105046.03176676715], [357096.99938898307,-105733.90228316351], [356981.6799587491,-106145.76212749073], [356949.9588745396,-106206.0486116488] , [356633.8711484881,-104404.319363102]]}));
                ArtificialIntelligenceAccess.push(new Unit(355357.60786471603, -104705.03134424574, "Varonoi", false, "docile", {patrolStops: 6, patrolLoop: true, route:[[355805.21848967695,-104259.54539857659], [356013.8068287131,-104081.37901313524], [356350.0721125915,-103606.94246579541], [355671.2742813966,-103675.71579769604], [356182.1087295309,-103377.66414616178] , [355357.60786471603,-104705.03134424574]]}));

                ArtificialIntelligenceAccess.push(new Unit(356837.2472008505, -100988.25866597152, "Deer", true, "Iclom"));
                ArtificialIntelligenceAccess.push(new Unit(356809.6794836223, -101209.78496763905, "Deer", false, "Iclom"));
                ArtificialIntelligenceAccess.push(new Unit(356570.79158043547, -101098.36359149439, "Deer", "baby", "Iclom"));
                ArtificialIntelligenceAccess.push(new Unit(356509.518312038, -101256.18268255895, "Deer", "baby", "Iclom"));
                ArtificialIntelligenceAccess.push(new Unit(356704.7675259952, -101132.57314443304, "Deer", "baby", "Iclom"));

                ArtificialIntelligenceAccess.push(new Unit(355395.52733871114, -100875.28307428847, "Ribback", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(355270.1167512173, -100685.73719053448, "Ribback", false, "preBuilt"));

                var rnd = Math.random();
                if (rnd >= 0.9)
                {
                    scenicList.push(new Scenery("vardanianTent", 356818.4551752609, -99201.94789574506, 2.4 + Math.PI, true));
                    if (Math.random() > 0.55) //vardanian refugee family
                    {
                        scenicList.push(new Scenery("ashaiCampFire", 356768.96438465704, -99280.72915425744, 11.5, "permaLit"));
                        ArtificialIntelligenceAccess.push(new Unit(356830.023527623, -99285.78041964835, "Person", false, "Vardanian Refugee Man", {race: "Vardan", faction: "Vardan", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.2, 0.5], 0, 0, 1.5], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: false, route:[]}));
                        ArtificialIntelligenceAccess[ArtificialIntelligenceAccess.length -1].baseTeam = "herdia";
                        ArtificialIntelligenceAccess.push(new Unit(356807.91817015776, -99358.39604819859, "Person", false, "Vardanian Refugee Woman", {race: "Vardan", faction: "Vardan", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.2, 0.5], 0, 0, 1.6], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: true, route:[[356787.27520948695, -99319.44774432122]]}));
                        ArtificialIntelligenceAccess[ArtificialIntelligenceAccess.length -1].baseTeam = "herdia";
                        ArtificialIntelligenceAccess.push(new Unit(356656.98921511095, -99245.99985105917, "Person", false, "Vardanian Refugee Girl", {race: "Vardan", faction: "Vardan", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.1, 0.1], 0, 0, 2], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: true, route:[[356733.4141071318, -99261.26073475686]], kid: true, kidSize: 0.8}));
                        ArtificialIntelligenceAccess[ArtificialIntelligenceAccess.length -1].baseTeam = "herdia";
                        ArtificialIntelligenceAccess.push(new Unit(356644.3190652773, -99301.67973574203, "Person", false, "Vardanian Refugee Girl", {race: "Vardan", faction: "Vardan", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.1, 0.1], 0, 0, 2], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: true, route:[[356724.9270791089, -99285.02585088578]], kid: true}));
                        ArtificialIntelligenceAccess[ArtificialIntelligenceAccess.length -1].baseTeam = "herdia";
                    }
                    else //vardanian family was eaten
                    {
                        scenicList.push(new Scenery("ashaiCampFire", 356768.96438465704, -99280.72915425744, 11.5, true));
                    }

                }
                else if (rnd >= 0.8)
                {
                    if (Math.random() > 0.8) ////vardanian family will be eaten by their tent...
                    {
                        ArtificialIntelligenceAccess.push(new Unit(356818.4551752609, -99201.94789574506, "TentMimic", false, "Clohaps"));
                        ArtificialIntelligenceAccess[ArtificialIntelligenceAccess.length -1].rotation = (2.4 + Math.PI);
                        scenicList.push(new Scenery("ashaiCampFire", 356768.96438465704, -99280.72915425744, 11.5, "permaLit"));
                        ArtificialIntelligenceAccess.push(new Unit(356830.023527623, -99285.78041964835, "Person", false, "Vardanian Refugee Man", {race: "Vardan", faction: "Vardan", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.2, 0.5], 0, 0, 1.5], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: false, route:[]}));
                        ArtificialIntelligenceAccess[ArtificialIntelligenceAccess.length -1].baseTeam = "herdia";
                        ArtificialIntelligenceAccess.push(new Unit(356807.91817015776, -99358.39604819859, "Person", false, "Vardanian Refugee Woman", {race: "Vardan", faction: "Vardan", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.2, 0.5], 0, 0, 1.6], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: true, route:[[356787.27520948695, -99319.44774432122]]}));
                        ArtificialIntelligenceAccess[ArtificialIntelligenceAccess.length -1].baseTeam = "herdia";
                        ArtificialIntelligenceAccess.push(new Unit(356656.98921511095, -99245.99985105917, "Person", false, "Vardanian Refugee Girl", {race: "Vardan", faction: "Vardan", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.1, 0.1], 0, 0, 2], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: true, route:[[356733.4141071318, -99261.26073475686]], kid: true, kidSize: 0.8}));
                        ArtificialIntelligenceAccess[ArtificialIntelligenceAccess.length -1].baseTeam = "herdia";
                        ArtificialIntelligenceAccess.push(new Unit(356644.3190652773, -99301.67973574203, "Person", false, "Vardanian Refugee Girl", {race: "Vardan", faction: "Vardan", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.1, 0.1], 0, 0, 2], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: true, route:[[356724.9270791089, -99285.02585088578]], kid: true}));
                        ArtificialIntelligenceAccess[ArtificialIntelligenceAccess.length -1].baseTeam = "herdia";
                    }
                    else //vardanian family was eaten by their tent...
                    {
                        ArtificialIntelligenceAccess.push(new Unit(356671.52935037424, -99108.27599887416, "Mimic", false, "Clohaps"));
                        scenicList.push(new Scenery("mimicry", 356818.4551752609, -99201.94789574506, (2.4 + 1/2 * Math.PI + Math.PI), "TentMimic"));

                        scenicList.push(new Scenery("blood", 356725.99377149355, -99184.49613137914 + 70, 1.7, 10, 2.2));
                        scenicList.push(new Scenery("ashaiCampFire", 356768.96438465704, -99280.72915425744, 11.5, true));
                        scenicList.push(new Scenery("skeleton", 356700.0072538748, -98904.78418398232, 2, 1.5));
                        scenicList.push(new Scenery("skeleton", 356660.5427068825, -98845.56234485711, 0, 1.4));
                        scenicList.push(new Scenery("skeleton", 356605.3531976758, -98823.25996297179, 1.35, 1.25));
                        scenicList.push(new Scenery("skeleton", 356628.92925711186, -98770.72579425995, 9.8, 1));
                        scenicList.push(new Scenery("blood", 356653.73929771106, -98891.05330431004, 0.1, 9, 2.3));
                    }
                }

                ArtificialIntelligenceAccess.push(new Unit(357173.351751351, -99647.50964719927, "Crow", true, "Seven"));
                ArtificialIntelligenceAccess.push(new Unit(356764.35233420326, -99578.62620938284, "Crow", false, "Seven"));
                ArtificialIntelligenceAccess.push(new Unit(357195.5206009249, -99340.3865884766, "Crow", false, "Seven"));
                ArtificialIntelligenceAccess.push(new Unit(357339.8983158492, -99204.82285821087, "Crow", false, "Seven"));
                ArtificialIntelligenceAccess.push(new Unit(357185.77618912124, -99129.64577137759, "Crow", true, "Seven"));
                ArtificialIntelligenceAccess.push(new Unit(357030.75996143953, -99385.2623136082, "Crow", false, "Seven"));
                ArtificialIntelligenceAccess.push(new Unit(356942.66677339445, -99746.747867164, "Crow", true, "Seven"));
                ArtificialIntelligenceAccess.push(new Unit(356510.9775333649, -99684.4471506832, "Crow", false, "Seven"));
                ArtificialIntelligenceAccess.push(new Unit(356592.1022374081, -99615.85078345716, "Crow", true, "Seven"));
                ArtificialIntelligenceAccess.push(new Unit(356862.27477663057, -99833.31971942264, "Crow", false, "Seven"));
                ArtificialIntelligenceAccess.push(new Unit(356578.37053140276, -99456.95184205257, "Crow", false, "Seven"));
                ArtificialIntelligenceAccess.push(new Unit(356455.1602705535, -99553.96962951636, "Crow", false, "Seven"));
                ArtificialIntelligenceAccess.push(new Unit(356403.4026581438, -99406.32749738169, "Crow", false, "Seven"));

                ArtificialIntelligenceAccess.push(new Unit(354755.6448777511, -95920.96605910128, "Vreck", false, "preBuilt", {patrolStops: 7, patrolLoop: true, route:[[354279.48966230504,-95691.60320821777], [353711.6343416407,-96151.25120353707], [353995.8254241752,-95458.61729613724], [354750.38317310775,-95263.06665685834], [354433.6191362682,-94991.54156487381], [354259.2419826203,-95222.30946724498], [354755.6448777511,-95920.96605910128]]}));
                ArtificialIntelligenceAccess.push(new Unit(354685.07739479194, -95842.9560914424, "Vreck", false, "preBuilt", {patrolStops: 7, patrolLoop: true, route:[[354212.6984502564,-96262.76458438502], [354073.7020171544,-96073.10951042443], [354158.347379404,-96548.18291936631], [353769.69343322224,-97247.83170336802], [353738.8234089717,-97966.22705121685], [353500.3457377056,-97692.48933522576], [354685.07739479194,-95842.9560914424]]}));
                ArtificialIntelligenceAccess.push(new Unit(354689.26407209464, -95733.33265947987, "Vreck", false, "preBuilt", {patrolStops: 7, patrolLoop: true, route:[[354998.5368704987,-95504.54610930743], [354576.6575146071,-95993.53047271796], [354670.8499261219,-96656.81884319484], [355279.49679256766,-97434.04453494662], [355769.95684025146,-97866.47862362824], [355110.55511560343,-98618.51888233631], [354689.26407209464,-95733.33265947987]]}));
                ArtificialIntelligenceAccess.push(new Unit(354579.009778445, -95782.69720903003, "Vreck", false, "preBuilt", {patrolStops: 7, patrolLoop: true, route:[[354090.34412617085,-95011.61008863892], [354522.7078386849,-95410.77629244103], [354247.92009159125,-95023.08047171075], [354103.5516359578,-94361.26687950676], [353387.6526545986,-93664.69990745116], [352852.28903431277,-94392.94453518512], [354579.009778445,-95782.69720903003]]}));
                ArtificialIntelligenceAccess.push(new Unit(354558.51203882415, -95869.61119643268, "Vreck", false, "preBuilt", {patrolStops: 7, patrolLoop: true, route:[[355287.7258189853,-95799.14476668456], [355910.8346085673,-95669.16601734486], [356207.5148384735,-96206.24333574848], [356812.8621661347,-96989.48865458414], [357172.5738816933,-96466.28796936285], [356891.159129062,-96249.72891398205], [354558.51203882415,-95869.61119643268]]}));
                ArtificialIntelligenceAccess.push(new Unit(354448.72176097817, -95869.84486294663, "Vreck", false, "preBuilt", {patrolStops: 7, patrolLoop: true, route:[[354660.12563930656,-95580.77311052811], [354541.5872377392,-95460.07736456249], [354708.3422262537,-95553.06128320354], [354814.44430785347,-95148.32283230055], [354748.30034609465,-94697.5876464728], [355225.11012285197,-94538.49882243396], [354448.72176097817,-95869.84486294663]]}));
                ArtificialIntelligenceAccess.push(new Unit(354458.8294426255, -95953.75726061195, "Vreck", false, "preBuilt", {patrolStops: 7, patrolLoop: true, route:[[353903.3657304265,-96144.13896202265], [353407.9915203076,-96497.31429942184], [353761.7636474534,-97045.21014244197], [353994.7509004831,-97727.52546835036], [354451.6996565828,-98017.33001457917], [354915.7400928127,-98297.05818236087], [354458.8294426255,-95953.75726061195]]}));
                ArtificialIntelligenceAccess.push(new Unit(354507.61840489594, -96055.6430349536, "Vreck", false, "preBuilt", {patrolStops: 7, patrolLoop: true, route:[[354786.4478203872,-96244.54388944242], [354083.75803174515,-95899.92531159203], [353338.50440954056,-96461.28517471762], [353150.76604989945,-96248.09950242814], [352606.7093326663,-96631.80659032143], [351973.3535130512,-96554.80600483424], [354507.61840489594,-96055.6430349536]]}));
                ArtificialIntelligenceAccess.push(new Unit(354640.55147971405, -96103.83050909678, "Vreck", false, "preBuilt", {patrolStops: 7, patrolLoop: true, route:[[354560.8694704801,-95545.6263720598], [355286.6736788405,-95073.40310882973], [355878.6101487425,-95124.41373916368], [356475.1052928671,-95344.61009028596], [356259.6240817649,-95083.36080393661], [355708.79473349225,-95456.79109600394], [354640.55147971405,-96103.83050909678]]}));
                ArtificialIntelligenceAccess.push(new Unit(354739.60506074416, -96071.18156793903, "Vreck", false, "preBuilt", {patrolStops: 7, patrolLoop: true, route:[[354531.9623632872,-96074.00286159526], [353904.16890427214,-96334.6914151249], [353480.94091576,-96378.56690453121], [353971.9509217116,-97037.59140464728], [354428.111288985,-96752.89893540984], [354263.73998980667,-96619.58606826383], [354739.60506074416,-96071.18156793903]]}));
                ArtificialIntelligenceAccess.push(new Unit(354862.636229414, -95846.6815444482, "Vreck", true, "preBuilt", {patrolStops: 7, patrolLoop: true, route:[[355162.68647831003,-96235.27565783999], [354654.48332909174,-95551.70546200091], [354541.77422261,-95760.32136241639], [354847.83091548167,-95141.78306875446], [354439.47680942144,-94410.50271108492], [353665.9194918491,-93909.57800378859], [354862.636229414,-95846.6815444482]]}));

                ArtificialIntelligenceAccess.push(new Unit(354869.37718607, -98804.99206240206, "BlackBeruln", false, "Nineteen"));

                scenicList.push(new Scenery("thegolthornPlant", 354965.43579224596, -100164.7977595551, 0.9800511519581262, false));
                ArtificialIntelligenceAccess.push(new Unit(354965.43579224596, -100164.7977595551, "ThegolThorn", false, "preBuilt"));
                scenicList.push(new Scenery("thegolthornPlant", 355111.38744098984, -100116.26939647442, 2.5452954732272532, false));
                ArtificialIntelligenceAccess.push(new Unit(355111.38744098984, -100116.26939647442, "ThegolThorn", false, "preBuilt"));
                scenicList.push(new Scenery("thegolthornPlant", 355351.4317628648, -100382.70618790918, 5.131778524483296, true));
                ArtificialIntelligenceAccess.push(new Unit(355351.4317628648, -100382.70618790918, "ThegolThorn", true, "preBuilt"));
                scenicList.push(new Scenery("thegolthornPlant", 355735.834089743, -100876.27639880839, 0.061060521334664976, false));
                ArtificialIntelligenceAccess.push(new Unit(355735.834089743, -100876.27639880839, "ThegolThorn", false, "preBuilt"));
                scenicList.push(new Scenery("thegolthornPlant", 355788.31977077376, -100767.33870585171, 4.916397525526533, true));
                ArtificialIntelligenceAccess.push(new Unit(355788.31977077376, -100767.33870585171, "ThegolThorn", true, "preBuilt"));
                scenicList.push(new Scenery("thegolthornPlant", 356406.17007185763, -100890.8084180473, 0.325214583489153, true));
                ArtificialIntelligenceAccess.push(new Unit(356406.17007185763, -100890.8084180473, "ThegolThorn", true, "preBuilt"));

                ArtificialIntelligenceAccess.push(new Unit(356108.37787079625, -101310.24895266195, "StovolBeetle", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(355750.71521404805, -101564.04811295442, "StovolBeetle", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(355186.08195650874, -101743.05703224627, "StovolBeetle", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(355045.2381223539, -101627.97599220586, "StovolBeetle", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(354616.84602512815, -101872.72991698637, "StovolBeetle", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(354446.97335091885, -101409.03821909396, "StovolBeetle", false, "preBuilt"));

                ArtificialIntelligenceAccess.push(new Unit(355494.34696108947, -103510.33675410568, "Ribback", true, "preBuilt"));

                ArtificialIntelligenceAccess.push(new Unit(355706.81695209164, -104221.96599709612, "Elk", true, "Nihgi"));
                ArtificialIntelligenceAccess.push(new Unit(355479.1356254731, -104429.95061873895, "Elk", false, "Nihgi"));
                ArtificialIntelligenceAccess.push(new Unit(355308.8384928331, -104458.84237368008, "Elk", "baby", "Nihgi"));
                ArtificialIntelligenceAccess.push(new Unit(355119.7178365377, -104398.42255269417, "Elk", "baby", "Nihgi"));

                scenicList.push(new Scenery("meklePlant", 355617.0089295018, -104389.19014243498, 2.5, true));
                scenicList.push(new Scenery("meklePlant", 355466.7498889161, -104315.95712890202, -1, true));
                scenicList.push(new Scenery("meklePlant", 355512.7729606072, -104180.45890925662, -2, true));
                scenicList.push(new Scenery("meklePlant", 355408.2498848015, -104225.10601884652, -3, true));
                scenicList.push(new Scenery("meklePlant", 355276.8996949615, -104258.44903923591, 10.5, true));
                scenicList.push(new Scenery("meklePlant", 355837.08973690093, -104416.9455421249, -4.5, true));
                scenicList.push(new Scenery("meklePlant", 355795.128752376, -104267.6456618615, -7, true));

                ArtificialIntelligenceAccess.push(new Unit(355090.2219051324, -105209.19002291185, "Crow", false, "Eight"));
                ArtificialIntelligenceAccess.push(new Unit(354895.6260964053, -105081.03251049617, "Crow", false, "Eight"));
                ArtificialIntelligenceAccess.push(new Unit(354970.29642991786, -105283.28925634065, "Crow", false, "Eight"));

                ArtificialIntelligenceAccess.push(new Unit(355893.081286228, -104941.4690737819, "Dalger", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(356424.28777291183, -104788.83726501833, "Dalger", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(357258.48465323885, -104894.42470434576, "Dalger", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(357348.92764473613, -104423.42769561194, "Dalger", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(357946.75069684134, -104378.24475635866, "Dalger", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(358593.64259953465, -104813.64989611703, "Dalger", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(358584.08704839624, -104114.66747942066, "Dalger", true, "preBuilt"));

                ArtificialIntelligenceAccess.push(new Unit(358554.88580931205, -103154.23485273006, "BlackBear", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(357279.33552379924, -100731.82805123318, "BlackBear", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(357899.3677826812, -99348.83882501369, "BlackBear", true, "preBuilt"));

                scenicList.push(new Scenery("chyoulPlant", 357882.8953537681, -99262.74397537451, -3.4, true));
                scenicList.push(new Scenery("ameloyPlant", 356044.4330237502, -99515.98251027979, 2.3, true));
                scenicList.push(new Scenery("laicaumPlant", 357922.72824559384, -96327.66860819136, 1.2, true));

                ArtificialIntelligenceAccess.push(new Unit(357863.80948034907, -96604.05088998257, "StovolBeetle", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(356472.8500456227, -96722.35082546857, "Ghoul", false, "preBuilt"));

                ArtificialIntelligenceAccess.push(new Unit(356847.85128654144, -96961.04083861967, "Elk", "baby", "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(356889.98878212715, -96823.13630761084, "Elk", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(357164.77381800173, -96880.10178717911, "Elk", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(357091.08700118714, -96621.58137478215, "Elk", "baby", "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(357108.6991555534, -96347.76209658093, "Elk", "baby", "preBuilt"));

                scenicList.push(new Scenery("meklePlant", 357090.9891869483, -96203.11084843801, -6, true));
                scenicList.push(new Scenery("meklePlant", 356976.9999531543, -96298.66969140718, 14.5, true));
                scenicList.push(new Scenery("meklePlant", 356863.650940665, -96542.40662732074, -5.5, true));
                scenicList.push(new Scenery("meklePlant", 356889.75677179924, -96450.00938431683, -17, true));
                scenicList.push(new Scenery("meklePlant", 356992.1440341447, -96797.03840897363, 18.1, true));

                ArtificialIntelligenceAccess.push(new Unit(358865.4869073805, -98056.71347495804, "Ghoul", "baby", "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(358692.90833179915, -97905.06366638657, "Ghoul", "baby", "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(358809.4268541782, -97686.18046661296, "Ghoul", "baby", "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(358496.9046324317, -97655.54094516922, "Ghoul", "baby", "preBuilt"));

                scenicList.push(new Scenery("viudaTunnel", 358442.92856531515, -97971.5245678373, 20, true, false));
                scenicList.push(new Scenery("viudaTunnel", 357224.57798042515, -98644.470175277, -25, true, true));

                scenicList.push(new Scenery("thadinePlant", 357263.9304147041, -98779.6126383688, -3, true));

                scenicList.push(new Scenery("chyoulPlant", 358155.2934950788, -98656.64088480573, -5.4, true));
                scenicList.push(new Scenery("chyoulPlant", 358541.63786417607, -98408.04075507514, -31.4, true));
                scenicList.push(new Scenery("chyoulPlant", 358296.50521772134, -99789.78135610427, 3.5, true));

                ArtificialIntelligenceAccess.push(new Unit(358117.2038704934, -99916.16056975833, "Varonoi", true, "Apolo"));

                scenicList.push(new Scenery("thadinePlant", 358248.5666111276, -100260.94607067578, 0.2, true));

                ArtificialIntelligenceAccess.push(new Unit(362669.9037096462, -100705.9181075154, "Bat", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(358248.5666111276, -100260.94607067578, "Lizard", false, "Lazarus"));
                ArtificialIntelligenceAccess.push(new Unit(361571.775785716, -101194.96967877772, "VecherBug", false, "Tentempora"));
                ArtificialIntelligenceAccess.push(new Unit(359040.42733859696, -100551.51107700028, "VecherBug", false, "Tintincito"));
                ArtificialIntelligenceAccess.push(new Unit(359634.34628660383, -100122.1905572439, "VecherBug", true, "Apolito"));
                ArtificialIntelligenceAccess.push(new Unit(358783.1509771162, -100204.4290556547, "Bat", true, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(361685.6468642735, -101686.998707569, "VecherBug", true, "Apolikho"));

                scenicList.push(new Scenery("iodPlant", 357658.3403526804, -100851.3632838497, 13, true));

                scenicList.push(new Scenery("gribnoyPlant", 362533.74796370696, -102563.98778758806 + 20, 1.5, true));
                scenicList.push(new Scenery("gribnoyPlant", 362263.7296134944 - 2, -102372.14465427138 + 1, 6, true));
                scenicList.push(new Scenery("gribnoyPlant", 362396.8220229393 + 9, -98834.00555597257, 0, true));
                scenicList.push(new Scenery("gribnoyPlant", 360585.58160058624 - 12, -97474.63645200706, Math.PI, true));
                scenicList.push(new Scenery("gribnoyPlant", 358485.0836427136 - 2, -97399.60426918694, -0.5, true));
                scenicList.push(new Scenery("gribnoyPlant", 358419.98214369133, -97341.25605887824, 1/2 * Math.PI, true));
                scenicList.push(new Scenery("gribnoyPlant", 357441.27985513577, -97684.32406066389 - 9, -1/2 * Math.PI, true));

                scenicList.push(new Scenery("cranberryPlant", 361603.99899914436, -103439.8510752537, -12.55, true));

                scenicList.push(new Scenery("maleotPlant", 355063.240024186, -99679.86801657289, 0, true));
                scenicList.push(new Scenery("maleotPlant", 356904.0886218872, -101621.95501916246, 3, true));
                scenicList.push(new Scenery("maleotPlant", 361238.9224206626, -102443.71340514573, 9, true));
                scenicList.push(new Scenery("maleotPlant", 362693.1712350011, -101647.57738564188, 15, true));
                scenicList.push(new Scenery("maleotPlant", 360902.15127290436, -99967.3149009322, 21, true));
                scenicList.push(new Scenery("maleotPlant", 357543.429054805, -104487.20168647167, 11.4, true));

                scenicList.push(new Scenery("poegroonPlant", 355380.0396070104, -101184.39416877639, 16.1, true));
                scenicList.push(new Scenery("poegroonPlant", 355380.0396070104, -101184.39416877639, 16, true));
                scenicList.push(new Scenery("poegroonPlant", 357429.3671943015, -102485.02743914534, -16, true));
                scenicList.push(new Scenery("poegroonPlant", 358762.9532115502, -102073.76320858323, 32, true));
                scenicList.push(new Scenery("poegroonPlant", 362835.87759418593, -102022.14124546788, -14, true));
                scenicList.push(new Scenery("poegroonPlant", 362066.1882289916, -102553.83284673962, 14, true));
                scenicList.push(new Scenery("poegroonPlant", 362291.5742549567, -103269.3272258714, -2, true));
                scenicList.push(new Scenery("poegroonPlant", 361582.2070681713, -102977.73049592871, -19.2, true));

                scenicList.push(new Scenery("kozlyakPlant", 354592.08696576813, -99874.71490221284, 3.3, true));
                scenicList.push(new Scenery("kozlyakPlant", 356284.72381557047, -101656.3307652792, 3.2, true));
                scenicList.push(new Scenery("kozlyakPlant", 356723.00190864597, -103242.22776974754, 4, true));
                scenicList.push(new Scenery("kozlyakPlant", 361999.03176475683, -101013.12715475756, 5.2, true));
                scenicList.push(new Scenery("kozlyakPlant", 358397.5237599773, -102793.75470887066, 6.2, true));

                scenicList.push(new Scenery("iodPlant", 356762.15009968745, -103551.45364806619, 0, true));
                scenicList.push(new Scenery("iodPlant", 362209.1146836342, -101959.73423078707, -9, true));

                scenicList.push(new Scenery("chyoulPlant", 356805.92129850824, -105049.15030187709, -3.4, true));
                scenicList.push(new Scenery("laicaumPlant", 360582.35642265074, -104305.21164122381, 1.2, true));

                scenicList.push(new Scenery("chyoulPlant", 355819.9982822072, -100161.51787158269, -3.4, true));
                scenicList.push(new Scenery("chyoulPlant", 362520.64930957963, -102729.26913478074, -3.4, true));
                scenicList.push(new Scenery("ameloyPlant", 362607.832315803, -100883.60655564594, 2.3, true));
                scenicList.push(new Scenery("laicaumPlant", 361032.57964292035, -96274.19679878684, 1.2, true));
                scenicList.push(new Scenery("cranberryPlant", 362828.4800255434, -103528.40250957441, -12.55, true));
                scenicList.push(new Scenery("thadinePlant", 362486.0015634427, -101928.4758608772, 2.4, true));
                scenicList.push(new Scenery("thadinePlant", 361174.61380814126, -98815.89025407743, -0.17, true));
                scenicList.push(new Scenery("danzigPlant", 355775.8899815333, -97518.89792479516, 0.5, true));
                scenicList.push(new Scenery("danzigPlant", 362465.7623559319, -100114.68025924753, 0.2, true));
                scenicList.push(new Scenery("thadinePlant", 361466.46634183713, -97694.5801917736, 2.2, true));
                scenicList.push(new Scenery("danzigPlant", 356158.31136756367, -96957.06483241245, 9.2, true));

                change = "s10w35";
            }
        }
        else if (region == "s4w16")
        {
            if (change != "s4w16")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                scenicList.push(new Scenery("pineTree", 165615.97001776734, -42089.354288151066, 4.4937110014235815, true));
                scenicList.push(new Scenery("pineTree", 165171.37469578692, -41953.80792446196, 3.1112355867136228, true));
                scenicList.push(new Scenery("pineTree", 165676.66760439696, -42392.23507332459, 4.511367473707111, true));
                scenicList.push(new Scenery("pineTree", 166048.4403095352, -42392.77210796134, 1.7794352445492558, true));
                scenicList.push(new Scenery("pineTree", 165874.56298400467, -42604.858150646614, 1.7121520494638445, true));
                scenicList.push(new Scenery("pineTree", 165544.79260917765, -42750.82279251939, 3.101895334389208, true));
                scenicList.push(new Scenery("pineTree", 165602.45520560484, -43097.54387806882, 0.6175287834018586, true));
                scenicList.push(new Scenery("pineTree", 165861.25515481347, -42943.84054915345, 3.125259295484181, true));
                scenicList.push(new Scenery("pineTree", 166195.2574926961, -42917.53586476073, 1.031176183911013, true));
                scenicList.push(new Scenery("pineTree", 166464.39361155056, -42325.41194525325, 2.2747431476041116, true));
                scenicList.push(new Scenery("pineTree", 166511.21565890784, -42046.34165502111, 2.604232181335867, true));
                scenicList.push(new Scenery("pineTree", 166552.1756759365, -41793.29749683537, 3.3201992923728625, true));
                scenicList.push(new Scenery("pineTree", 165981.0227409314, -41630.65541928874, 2.9954436128232786, true));
                scenicList.push(new Scenery("pineTree", 166064.33037926033, -41201.24939231387, 2.9209381104998786, true));
                scenicList.push(new Scenery("pineTree", 165708.0036254726, -41360.08867418337, 5.2920937205780465, true));
                scenicList.push(new Scenery("pineTree", 165589.08323938434, -41093.819251955974, 3.5530886939716106, true));
                scenicList.push(new Scenery("pineTree", 165239.32442438742, -41278.38288248021, 0.3534631626107768, true));
                scenicList.push(new Scenery("pineTree", 165247.06838523335, -41606.20280159862, 3.0777419066916027, true));
                scenicList.push(new Scenery("pineTree", 164853.3831345433, -41524.5329770272, 0.5169446619772534, true));
                scenicList.push(new Scenery("pineTree", 164345.71974343, -41654.94767622138, 0.2997073365894337, true));
                scenicList.push(new Scenery("pineTree", 164827.82090296276, -41231.31893845536, 5.864622355976218, true));
                scenicList.push(new Scenery("pineTree", 165103.64668177496, -40892.09162778029, 5.19030269999241, true));
                scenicList.push(new Scenery("pineTree", 165396.4122822844, -40781.809411739225, 4.111215920701642, true));
                scenicList.push(new Scenery("pineTree", 165635.89875565137, -40576.65700342889, 3.6751589877492052, true));
                scenicList.push(new Scenery("pineTree", 165402.36467009888, -40453.655846065376, 5.832277815580239, true));
                scenicList.push(new Scenery("pineTree", 165988.56661872496, -40415.56539867387, 3.8312048158761303, true));
                scenicList.push(new Scenery("pineTree", 166333.32042214036, -40680.878020316646, 4.637942984625051, true));
                scenicList.push(new Scenery("pineTree", 166573.94230068938, -40397.12583679618, 2.701199597981399, true));
                scenicList.push(new Scenery("pineTree", 166713.05320692618, -40699.10169546116, 3.7632985817200706, true));
                scenicList.push(new Scenery("pineTree", 166571.08555069333, -40919.31673216085, 4.142637250237612, true));
                scenicList.push(new Scenery("pineTree", 166804.91304370924, -41302.715785396365, 5.450320930101291, true));
                scenicList.push(new Scenery("pineTree", 166901.32755154316, -41734.718903271845, 2.9920478401048007, true));
                scenicList.push(new Scenery("pineTree", 167294.83583999312, -41576.35799041808, 2.391508286317698, true));
                scenicList.push(new Scenery("pineTree", 167423.3441883716, -41276.04111268705, 0.26351647845542797, true));
                scenicList.push(new Scenery("pineTree", 167107.15078366565, -40902.31299924715, 4.987377241795938, true));
                scenicList.push(new Scenery("pineTree", 167076.69810120945, -40421.888319476784, 0.48054142257859894, true));
                scenicList.push(new Scenery("pineTree", 167462.48054750593, -40680.378433561404, 3.7443002272571695, true));
                scenicList.push(new Scenery("pineTree", 167758.29867327222, -41034.31138557467, 5.0764630301624765, true));
                scenicList.push(new Scenery("pineTree", 168001.98481433748, -41439.80322534012, 3.617070072593832, true));
                scenicList.push(new Scenery("pineTree", 168267.95602742175, -41225.8091337139, 5.443514171562678, true));
                scenicList.push(new Scenery("pineTree", 168155.78376126854, -40933.891356751294, 1.54604670918323, true));
                scenicList.push(new Scenery("pineTree", 167876.28784636204, -40693.76274094781, 5.6775335354923975, true));
                scenicList.push(new Scenery("pineTree", 168268.82096178865, -40565.966477035, 0.7230358675815486, true));
                scenicList.push(new Scenery("pineTree", 167874.19006767526, -40401.0798544131, 2.7745537973900887, true));
                scenicList.push(new Scenery("pineTree", 167405.87157371378, -40376.82703468838, 0.32186034296888755, true));

                scenicList.push(new Scenery("pineTree", 166163.82775927524, -34653.79215923958, 1.4167238751806932, true));
                scenicList.push(new Scenery("pineTree", 166103.4379045498, -34330.02296717011, 4.794117851398895, true));
                scenicList.push(new Scenery("pineTree", 167072.03159123234, -34384.74557555879, 1.6307510532589689, true));
                scenicList.push(new Scenery("pineTree", 167456.5680714954, -34283.35300567631, 0.8207645218478555, true));
                scenicList.push(new Scenery("pineTree", 167285.9650031651, -34613.472715783224, 2.0293913749933217, true));
                scenicList.push(new Scenery("pineTree", 167656.71266889005, -34838.04537418075, 0.6544695878998186, true));
                scenicList.push(new Scenery("pineTree", 167411.37684199374, -35099.604619749654, 1.7672380718063592, true));
                scenicList.push(new Scenery("pineTree", 167358.68009313478, -35404.5055752524, 3.1467019182250278, true));
                scenicList.push(new Scenery("pineTree", 167288.42194568538, -35675.49064116245, 4.0342004833374165, true));
                scenicList.push(new Scenery("pineTree", 168638.10149635904, -34891.97461106531, 0.6119757964163334, true));
                scenicList.push(new Scenery("pineTree", 168397.3072744086, -34652.333866995716, 2.794894795785118, true));
                scenicList.push(new Scenery("pineTree", 168580.30073761672, -34368.96038067095, 5.346614007514808, true));
                scenicList.push(new Scenery("pineTree", 168150.50221667837, -34428.20679857027, 2.089393622170817, true));
                scenicList.push(new Scenery("pineTree", 168037.33296985773, -34748.58906367675, 1.2763955218896974, true));
                scenicList.push(new Scenery("pineTree", 167997.46525843113, -34980.39722222474, 3.3310013495970354, true));
                scenicList.push(new Scenery("pineTree", 166900.41183146363, -34746.78824292106, 1.7785165825006937, true));
                scenicList.push(new Scenery("pineTree", 165649.38076883933, -35171.32677492784, 2.9704286802196904, true));
                scenicList.push(new Scenery("pineTree", 165361.8858875618, -34954.79197636184, 4.915061817204546, true));
                scenicList.push(new Scenery("pineTree", 165003.98020151924, -34772.58465436555, 5.987191250749126, true));
                scenicList.push(new Scenery("pineTree", 165161.81874651063, -34454.416784646775, 3.2664626283466367, true));
                scenicList.push(new Scenery("pineTree", 164661.21873395523, -34742.07265500928, 1.713915294364574, true));
                scenicList.push(new Scenery("pineTree", 164669.8968214241, -35050.02276294011, 3.006811754287862, true));
                scenicList.push(new Scenery("pineTree", 164332.51172965378, -34953.69240250748, 5.056871521139978, true));
                scenicList.push(new Scenery("pineTree", 164338.74421913206, -34419.64943542923, 0.6910706554215875, true));
                scenicList.push(new Scenery("pineTree", 163591.09512850863, -34386.99897300059, 2.4430331039208637, true));
                scenicList.push(new Scenery("pineTree", 163150.01824952543, -34709.212892794676, 1.9828475498116869, true));
                scenicList.push(new Scenery("pineTree", 162861.8941014563, -34617.74818274868, 2.173982774464918, true));
                scenicList.push(new Scenery("pineTree", 162886.07607681016, -34896.12810331416, 2.8057918355553744, true));
                scenicList.push(new Scenery("pineTree", 163792.63953836565, -34834.38720203974, 0.665245483671377, true));
                scenicList.push(new Scenery("pineTree", 163407.0758695976, -34651.86721058657, 5.28104095251357, true));
                scenicList.push(new Scenery("pineTree", 162559.95615141594, -34620.577050921755, 1.3663950480061764, true));
                scenicList.push(new Scenery("pineTree", 162525.77168971434, -34943.75392202217, 2.739282257248512, true));
                scenicList.push(new Scenery("pineTree", 163208.67834637882, -35268.70320779522, 3.0891573414116245, true));
                scenicList.push(new Scenery("pineTree", 163368.47287526377, -35443.77377035719, 2.445409658867516, true));
                scenicList.push(new Scenery("pineTree", 163685.80778444608, -35281.47749336104, 6.1883977855508, true));
                scenicList.push(new Scenery("pineTree", 162512.36094547267, -35624.737636492064, 4.026176590713276, true));
                scenicList.push(new Scenery("pineTree", 162606.32764189222, -35994.74272769565, 5.347337323067995, true));
                scenicList.push(new Scenery("pineTree", 162226.25027930006, -35819.190997686324, 5.177152979999567, true));
                scenicList.push(new Scenery("pineTree", 162238.6506528799, -35494.20338321098, 1.5213942427969986, true));
                scenicList.push(new Scenery("pineTree", 162246.29424194587, -35168.8181071522, 3.9584300884683437, true));
                scenicList.push(new Scenery("pineTree", 161978.04373501096, -34965.55132321345, 5.249638905032451, true));
                scenicList.push(new Scenery("pineTree", 161623.07896903163, -34706.998209491976, 3.720828637093093, true));
                scenicList.push(new Scenery("pineTree", 161285.27118040298, -34737.339914570366, 3.7648379378810586, true));
                scenicList.push(new Scenery("pineTree", 161042.1775737683, -34994.45211857678, 2.7549475866029183, true));
                scenicList.push(new Scenery("pineTree", 160669.79866565036, -34835.515642831975, 3.9021991072637845, true));
                scenicList.push(new Scenery("pineTree", 160989.49938306634, -35329.03888622921, 3.42341384654852, true));
                scenicList.push(new Scenery("pineTree", 161360.64565776978, -35353.540000406516, 5.585323147215101, true));
                scenicList.push(new Scenery("pineTree", 161802.88824005154, -35225.8606928666, 2.8103452282527766, true));
                scenicList.push(new Scenery("pineTree", 161563.6246484056, -35657.32210085958, 0.2919377964363281, true));
                scenicList.push(new Scenery("pineTree", 161915.27087011602, -36006.981905520195, 1.4864514171096253, true));
                scenicList.push(new Scenery("pineTree", 161470.21603154024, -36043.76834033641, 2.326300440918059, true));
                scenicList.push(new Scenery("pineTree", 160867.69261621046, -36275.97863601294, 2.979088676318195, true));
                scenicList.push(new Scenery("pineTree", 160924.63581905817, -35947.83247044224, 3.980761808611519, true));
                scenicList.push(new Scenery("pineTree", 160418.44333636426, -36272.506784307465, 3.62062503818865, true));
                scenicList.push(new Scenery("pineTree", 160144.2180281017, -36021.96487902348, 2.566625352299501, true));
                scenicList.push(new Scenery("pineTree", 160258.54295555447, -35478.04323901117, 1.0216535665048432, true));
                scenicList.push(new Scenery("pineTree", 160315.3464663059, -35086.25970191523, 2.334669651270144, true));
                scenicList.push(new Scenery("pineTree", 161255.975764254, -37228.90207800091, 4.508254468090599, true));
                scenicList.push(new Scenery("pineTree", 161490.77099163423, -37006.76758501601, 1.807152360635186, true));
                scenicList.push(new Scenery("pineTree", 161756.9780821016, -36748.14876132789, 5.2213439282565295, true));
                scenicList.push(new Scenery("pineTree", 162121.59800071514, -37070.5280739921, 6.168050001156897, true));
                scenicList.push(new Scenery("pineTree", 162647.41287890944, -36813.752954699965, 0.9200348621915576, true));
                scenicList.push(new Scenery("pineTree", 163135.63211142746, -37082.901392052256, 3.2432022327123975, true));
                scenicList.push(new Scenery("pineTree", 162813.20780129533, -37494.824392243114, 4.366893687683472, true));
                scenicList.push(new Scenery("pineTree", 163297.67473481945, -37659.64499710512, 2.3512043245308325, true));
                scenicList.push(new Scenery("pineTree", 163498.08330350622, -37848.71603192421, 2.775851186070445, true));
                scenicList.push(new Scenery("pineTree", 163969.21754016393, -37582.22205673708, 2.8685282981185787, true));
                scenicList.push(new Scenery("pineTree", 164367.78713474606, -37374.83438629449, 2.6645813271777503, true));
                scenicList.push(new Scenery("pineTree", 164199.42791751807, -36977.10068752087, 4.331648156764162, true));
                scenicList.push(new Scenery("pineTree", 163747.2131014233, -36773.787340206654, 0.8760217054654519, true));
                scenicList.push(new Scenery("pineTree", 163264.92085537862, -36189.87537196043, 2.928221949133952, true));
                scenicList.push(new Scenery("pineTree", 163350.54193936507, -35941.80312429336, 1.621941639801467, true));
                scenicList.push(new Scenery("pineTree", 163959.40313165123, -36099.11172162963, 0.10756788730376017, true));
                scenicList.push(new Scenery("pineTree", 164131.975601006, -35842.195052592346, 1.4347800398285817, true));
                scenicList.push(new Scenery("pineTree", 164528.77361785626, -36052.616353370504, 6.173352652018765, true));
                scenicList.push(new Scenery("pineTree", 164804.84574411126, -36502.08221487862, 4.553232459683892, true));
                scenicList.push(new Scenery("pineTree", 165197.70631011247, -36805.016966991796, 0.852364624148973, true));
                scenicList.push(new Scenery("pineTree", 164986.5360253373, -37163.108552104786, 6.277139427121129, true));
                scenicList.push(new Scenery("pineTree", 164760.1830382147, -37444.707867249075, 0.015071203645430074, true));
                scenicList.push(new Scenery("pineTree", 165022.84149430512, -37951.659048324094, 4.658417644179273, true));
                scenicList.push(new Scenery("pineTree", 164071.40230857208, -38350.52677359104, 3.9853433225729398, true));
                scenicList.push(new Scenery("pineTree", 163728.53047459183, -38715.04024939993, 3.5956573588587104, true));
                scenicList.push(new Scenery("pineTree", 163480.4703954221, -38990.73156632969, 5.253866831710399, true));
                scenicList.push(new Scenery("pineTree", 162914.45768103588, -38885.80231328802, 1.2669028544147372, true));
                scenicList.push(new Scenery("pineTree", 163182.42616999667, -38679.39400155737, 0.06578548795241874, true));
                scenicList.push(new Scenery("pineTree", 165374.82096929112, -38521.14836679693, 2.2390366796233967, true));
                scenicList.push(new Scenery("pineTree", 164942.098887369, -38281.71272464654, 5.662235751832592, true));
                scenicList.push(new Scenery("pineTree", 165587.54730782082, -38083.40364773202, 5.122866147374299, true));
                scenicList.push(new Scenery("pineTree", 166420.16758944045, -38056.29324582264, 3.2972189624035617, true));
                scenicList.push(new Scenery("pineTree", 165849.81236558605, -37803.94398019947, 2.607149378091011, true));
                scenicList.push(new Scenery("pineTree", 165187.53897589623, -37508.14362326958, 2.133784083211151, true));
                scenicList.push(new Scenery("pineTree", 165281.80349407814, -37197.18574250159, 5.378752314685455, true));
                scenicList.push(new Scenery("pineTree", 165701.1850069281, -37420.89371612992, 0.21990531213811224, true));
                scenicList.push(new Scenery("pineTree", 165813.15775968487, -37070.99841412793, 5.018422739968399, true));
                scenicList.push(new Scenery("pineTree", 165654.0889373702, -36751.80081096227, 0.3698341087820729, true));
                scenicList.push(new Scenery("pineTree", 165076.11453720226, -36243.33281739567, 1.2272003749058815, true));
                scenicList.push(new Scenery("pineTree", 166299.48242461096, -37675.26980702119, 1.6727661487540293, true));
                scenicList.push(new Scenery("pineTree", 166784.80764155617, -37442.165350597366, 5.925001519033972, true));
                scenicList.push(new Scenery("pineTree", 166779.25803898514, -37880.62310046554, 1.1464867089263409, true));
                scenicList.push(new Scenery("pineTree", 167091.56029473222, -38190.32232891154, 5.170770775922025, true));
                scenicList.push(new Scenery("pineTree", 166757.37002944018, -38357.81073872973, 1.3109719370130573, true));
                scenicList.push(new Scenery("pineTree", 166332.36657679695, -38433.48467638025, 5.860432030448308, true));
                scenicList.push(new Scenery("pineTree", 166796.81656297858, -38737.80341759304, 5.3820341934171365, true));
                scenicList.push(new Scenery("pineTree", 167268.58230312727, -38822.938401603715, 4.697458608383476, true));
                scenicList.push(new Scenery("pineTree", 166678.77006933355, -38973.09654206205, 4.064757194533133, true));
                scenicList.push(new Scenery("pineTree", 167130.48850130403, -39116.96126353244, 2.521585478595128, true));
                scenicList.push(new Scenery("pineTree", 166753.0867903551, -39274.5123031965, 5.0804845762999795, true));
                scenicList.push(new Scenery("pineTree", 166320.14510784112, -39170.592351072184, 1.0701378074004215, true));
                scenicList.push(new Scenery("pineTree", 166108.46295009757, -39535.70587691127, 3.812441696840458, true));
                scenicList.push(new Scenery("pineTree", 166295.6482730613, -39802.08823870437, 4.2540350288263875, true));
                scenicList.push(new Scenery("pineTree", 165783.86221176045, -39793.23152582517, 3.8413167378147586, true));
                scenicList.push(new Scenery("pineTree", 165252.58232540564, -39372.148483867546, 4.449137093117448, true));
                scenicList.push(new Scenery("pineTree", 165415.31803171043, -38923.60961676141, 5.820068676264104, true));
                scenicList.push(new Scenery("pineTree", 165836.61283106095, -38746.140154803994, 6.105692992479506, true));
                scenicList.push(new Scenery("pineTree", 164993.73321935305, -38626.14836297092, 5.531404931043587, true));
                scenicList.push(new Scenery("pineTree", 164515.15242835743, -38944.084692537195, 0.8246987733768933, true));
                scenicList.push(new Scenery("pineTree", 164818.66808398682, -39291.125019898165, 5.043694833960848, true));
                scenicList.push(new Scenery("pineTree", 164449.30966418362, -39336.59354493519, 4.59432822271901, true));
                scenicList.push(new Scenery("pineTree", 164255.5515549145, -39136.678229931546, 0.08486649275562322, true));
                scenicList.push(new Scenery("pineTree", 164424.06259443078, -39773.67930092386, 3.0953611610345084, true));
                scenicList.push(new Scenery("pineTree", 163241.21854869695, -39248.670869468304, 0.22655580722207036, true));
                scenicList.push(new Scenery("pineTree", 163656.90035488587, -39202.093846602496, 2.000678690074445, true));
                scenicList.push(new Scenery("pineTree", 163418.57317841888, -38464.38945523667, 2.6310021680653435, true));
                scenicList.push(new Scenery("pineTree", 167738.1744685397, -38858.94247554011, 2.431893146056187, true));
                scenicList.push(new Scenery("pineTree", 168482.40029901458, -38489.73176866077, 0.8506768168116465, true));
                scenicList.push(new Scenery("pineTree", 169058.55174950208, -38706.64245118669, 5.691921917628475, true));
                scenicList.push(new Scenery("pineTree", 168854.97235847462, -38235.785186876026, 0.05289030536794887, true));
                scenicList.push(new Scenery("pineTree", 169338.8506561681, -38262.798385470305, 1.5714455860292418, true));
                scenicList.push(new Scenery("pineTree", 169249.72141236786, -37911.427720627646, 0.961839818084445, true));
                scenicList.push(new Scenery("pineTree", 169719.79273640382, -37560.92083339676, 4.585503009676942, true));
                scenicList.push(new Scenery("pineTree", 170029.2115329103, -37654.32253297042, 3.685391955694834, true));
                scenicList.push(new Scenery("pineTree", 170021.312724564, -37221.81623430588, 3.1020211956557344, true));
                scenicList.push(new Scenery("pineTree", 169968.7126642427, -38784.74552294857, 1.2618521578507313, true));
                scenicList.push(new Scenery("pineTree", 170004.86854016889, -39244.07794680573, 2.5202320891320915, true));
                scenicList.push(new Scenery("pineTree", 169041.01371906907, -39034.24067220258, 4.215817251064228, true));
                scenicList.push(new Scenery("pineTree", 169354.8984662451, -39273.611309993845, 4.739197419498083, true));
                scenicList.push(new Scenery("pineTree", 169244.93998247734, -39683.927161091386, 0.41481417928694414, true));
                scenicList.push(new Scenery("pineTree", 168453.36252603517, -39701.2042327013, 6.032070845612459, true));
                scenicList.push(new Scenery("pineTree", 168220.16857207989, -39380.57570428263, 4.982214283442255, true));
                scenicList.push(new Scenery("pineTree", 167981.28234300253, -39645.06573540261, 0.8358774762251711, true));
                scenicList.push(new Scenery("pineTree", 167651.6055506791, -39811.08099627466, 5.30410110649191, true));
                scenicList.push(new Scenery("pineTree", 167304.026330172, -39735.12739333076, 3.8978507576534605, true));
                scenicList.push(new Scenery("pineTree", 167152.14708444933, -39436.07252947104, 2.030325196151208, true));
                scenicList.push(new Scenery("pineTree", 167880.93563027633, -39151.98899159097, 4.227804401425852, true));
                scenicList.push(new Scenery("pineTree", 168672.1207224554, -39067.12874342851, 5.958295529752447, true));

                scenicList.push(new Scenery("pineTree", 169450.13212154628, -35824.41726631991, 3.827135538554371, true));
                scenicList.push(new Scenery("pineTree", 168669.45605849125, -35829.88643901846, 3.1743977429189383, true));
                scenicList.push(new Scenery("pineTree", 168963.07584570404, -35594.516825671315, 2.6782681507188757, true));
                scenicList.push(new Scenery("pineTree", 169241.20560400983, -35489.20344182827, 1.43196975490787, true));
                scenicList.push(new Scenery("pineTree", 168857.6256376398, -35321.18220720216, 5.135855301912619, true));
                scenicList.push(new Scenery("pineTree", 169512.12699879752, -35128.82857577576, 3.7316345368350414, true));
                scenicList.push(new Scenery("pineTree", 169993.74556649927, -35296.67516800034, 4.921793333531037, true));
                scenicList.push(new Scenery("pineTree", 169348.10288521938, -36905.032006723784, 1.6539394623667885, true));
                scenicList.push(new Scenery("pineTree", 168600.63122712597, -37223.02258208192, 4.8068968976225275, true));
                scenicList.push(new Scenery("pineTree", 168201.65063178446, -36928.402120300736, 0.5230333128215324, true));
                scenicList.push(new Scenery("pineTree", 167958.3037930963, -37319.70989989832, 1.343469794399145, true));
                scenicList.push(new Scenery("pineTree", 168356.70423031293, -37549.67230733723, 5.169997790958277, true));
                scenicList.push(new Scenery("pineTree", 167928.74784707994, -37820.87478129793, 5.885035609455648, true));
                scenicList.push(new Scenery("pineTree", 167430.85699289822, -37398.93551650175, 3.420687531473983, true));
                scenicList.push(new Scenery("pineTree", 167108.25941726446, -37139.26956585282, 1.4345445726355759, true));
                scenicList.push(new Scenery("pineTree", 167092.50492483654, -36654.96666886461, 2.612540339141598, true));
                scenicList.push(new Scenery("pineTree", 167381.08321954196, -36510.2105356395, 3.559314095841586, true));
                scenicList.push(new Scenery("pineTree", 167777.8459811665, -36254.3308172443, 2.4471320948653577, true));
                scenicList.push(new Scenery("pineTree", 166905.57088796055, -36385.90043652255, 3.747772744612841, true));
                scenicList.push(new Scenery("pineTree", 166806.06926100497, -36088.67917774954, 5.309502153170456, true));
                scenicList.push(new Scenery("pineTree", 166122.90454695714, -36230.57404423889, 5.005303361047631, true));
                scenicList.push(new Scenery("pineTree", 165864.7610950304, -35904.1608618196, 4.732599219768454, true));
                scenicList.push(new Scenery("pineTree", 166282.72704459357, -35601.79704842661, 3.1691750520533915, true));
                scenicList.push(new Scenery("pineTree", 166419.75858853548, -35253.34287641201, 5.05170947990129, true));
                scenicList.push(new Scenery("pineTree", 166523.82089145572, -34839.734651251674, 1.6402570085947503, true));
                scenicList.push(new Scenery("pineTree", 165979.6261499433, -35061.96427924174, 5.939469374309936, true));

                scenicList.push(new Scenery("pineTree", 168844.45027100603, -42378.19893524022, 4.538789345226248, true));
                scenicList.push(new Scenery("pineTree", 168640.32912257416, -42100.755134420724, 1.572900397014012, true));
                scenicList.push(new Scenery("pineTree", 168659.35930866245, -41798.25071512593, 0.2516050635620901, true));
                scenicList.push(new Scenery("pineTree", 169114.0232217671, -42085.229301285086, 6.039488459366362, true));
                scenicList.push(new Scenery("pineTree", 169419.20902019198, -42007.73253915804, 4.754077167765279, true));
                scenicList.push(new Scenery("pineTree", 169728.34479901264, -42127.068487999706, 0.8566140289114459, true));
                scenicList.push(new Scenery("pineTree", 169979.76706896114, -42261.74347234474, 3.2254593480833114, true));
                scenicList.push(new Scenery("pineTree", 169633.55659035197, -42521.1440985869, 5.138404084970625, true));
                scenicList.push(new Scenery("pineTree", 169939.99231967056, -42958.88338933894, 2.6497743917145105, true));
                scenicList.push(new Scenery("pineTree", 169906.21980299574, -43251.55886457202, 4.226409076283598, true));
                scenicList.push(new Scenery("pineTree", 169570.3519351504, -43481.15438785555, 5.21241461357354, true));
                scenicList.push(new Scenery("pineTree", 169708.73561840324, -43756.62145186313, 0.8757901820981214, true));
                scenicList.push(new Scenery("pineTree", 169751.477951521, -44073.525102532934, 4.70203871736361, true));
                scenicList.push(new Scenery("pineTree", 169985.52712315094, -43895.18914020069, 4.133653593611627, true));
                scenicList.push(new Scenery("pineTree", 169761.34992132446, -44310.887103258945, 2.1206855894264023, true));
                scenicList.push(new Scenery("pineTree", 169174.46846774218, -44247.060648018625, 0.6190061311231967, true));
                scenicList.push(new Scenery("pineTree", 168666.60927735752, -43782.21052111251, 3.2682960136856143, true));
                scenicList.push(new Scenery("pineTree", 168362.1857462973, -43626.27874292013, 3.9505225839492035, true));
                scenicList.push(new Scenery("pineTree", 168330.00723746515, -43322.43340392697, 2.8310675821007654, true));
                scenicList.push(new Scenery("pineTree", 168657.7868306541, -43081.665551612175, 5.134214780254497, true));
                scenicList.push(new Scenery("pineTree", 168989.6945423606, -42981.37434191675, 0.14559708339935537, true));
                scenicList.push(new Scenery("pineTree", 169217.92045901614, -42779.75465929865, 0.28907646940043386, true));
                scenicList.push(new Scenery("pineTree", 169289.26490969196, -42543.49384634165, 1.7129650219708068, true));
                scenicList.push(new Scenery("pineTree", 169103.9955591877, -42344.886177039385, 1.622364976496885, true));
                scenicList.push(new Scenery("pineTree", 168446.0139052061, -42642.9430896456, 2.299538074890079, true));
                scenicList.push(new Scenery("pineTree", 168142.21852959253, -42527.2162625297, 5.677012117474283, true));
                scenicList.push(new Scenery("pineTree", 167947.9447522885, -42301.46178638205, 4.446303996457446, true));
                scenicList.push(new Scenery("pineTree", 167856.59961660052, -41976.74221856279, 2.688114399738426, true));
                scenicList.push(new Scenery("pineTree", 167825.77140039927, -41694.295744705865, 5.603606201151475, true));
                scenicList.push(new Scenery("pineTree", 167593.09191159945, -41540.21330626478, 5.463010782190808, true));
                scenicList.push(new Scenery("pineTree", 167126.35842708076, -41959.53928262533, 0.8708963716828717, true));
                scenicList.push(new Scenery("pineTree", 166773.0530241192, -41944.8300282009, 3.9032433562802207, true));
                scenicList.push(new Scenery("pineTree", 166385.77391563996, -41154.64624766708, 2.0578250554278257, true));

                scenicList.push(new Scenery("greatPineTree", 160354.00014452985, -41092.27839836931, 0.8143564593365844, 6.481258143012048));
                scenicList.push(new Scenery("greatPineTree", 160656.29054402767, -40585.096470096825, 2.6578456302869906, 8.80458296243292));
                scenicList.push(new Scenery("greatPineTree", 160320.69017379367, -40402.14432639751, 2.257310911656263, 7.748698978604578));
                scenicList.push(new Scenery("greatPineTree", 161106.71125134252, -40364.14242626422, 4.162553173269899, 5.282419341269083));
                scenicList.push(new Scenery("greatPineTree", 161301.63403453177, -40903.307888489726, 5.2018456701833395, 7.569875796575858));
                scenicList.push(new Scenery("greatPineTree", 161180.70501399031, -41444.136433838095, 3.8764646974973584, 8.68559625350533));
                scenicList.push(new Scenery("greatPineTree", 160673.19240968247, -41902.00932617981, 3.34033020506987, 6.304565059252457));
                scenicList.push(new Scenery("greatPineTree", 160261.92717135604, -42339.04630232605, 5.7122586697757525, 8.217610994989165));
                scenicList.push(new Scenery("greatPineTree", 160803.45394585535, -42523.46156445659, 5.19345584579419, 6.097064556741085));
                scenicList.push(new Scenery("greatPineTree", 161292.75638640014, -42283.99898371797, 2.3361582381916, 7.1148157369656));
                scenicList.push(new Scenery("greatPineTree", 161733.74711432573, -42056.54060826169, 1.0212239073996752, 7.398821344061915));
                scenicList.push(new Scenery("greatPineTree", 161669.52245156578, -41607.76004835158, 1.4128189801912743, 7.747639150179834));
                scenicList.push(new Scenery("greatPineTree", 161975.01355196344, -41243.00032454046, 0.6358275966855453, 8.922866868728228));
                scenicList.push(new Scenery("greatPineTree", 161722.8216678686, -40841.337610316994, 2.8732964815730635, 6.6854731511930865));
                scenicList.push(new Scenery("greatPineTree", 161475.47867348485, -40503.010083426074, 5.2874673341549165, 5.4514237114478945));
                scenicList.push(new Scenery("greatPineTree", 162075.9240674362, -40364.659196827735, 2.0469750315964585, 8.85468238039614));
                scenicList.push(new Scenery("greatPineTree", 162281.3112537231, -40801.05878533681, 5.474223445154389, 5.258322549379506));
                scenicList.push(new Scenery("greatPineTree", 162567.38817669867, -41238.76941787334, 4.212440375141062, 6.424022961611314));
                scenicList.push(new Scenery("greatPineTree", 162642.656723609, -41697.8230879719, 2.129651304222309, 6.2648576035137085));
                scenicList.push(new Scenery("greatPineTree", 162138.8796796275, -42125.96927077602, 0.9288944259373157, 5.586122100911844));
                scenicList.push(new Scenery("greatPineTree", 162849.4042280763, -42232.54591417555, 1.8730940996051437, 5.934743363294904));
                scenicList.push(new Scenery("greatPineTree", 163581.2712356936, -42008.142571487224, 0.15320035911873117, 7.529025241037443));
                scenicList.push(new Scenery("greatPineTree", 163929.8555439597, -41642.92868862375, 3.831249806022366, 6.097156830399561));
                scenicList.push(new Scenery("greatPineTree", 163481.2916576019, -41207.0950322231, 5.458879941457462, 5.587802134160693));
                scenicList.push(new Scenery("greatPineTree", 164313.36421301332, -41306.169215245216, 6.199715232204636, 5.461457232040008));
                scenicList.push(new Scenery("greatPineTree", 164728.137333873, -41843.23080269316, 2.1833471494050505, 5.980542466969286));
                scenicList.push(new Scenery("greatPineTree", 164233.151085556, -42105.94425595276, 3.527189221563779, 8.533462798764925));
                scenicList.push(new Scenery("greatPineTree", 163813.56751559486, -42338.87490091463, 5.404663598311708, 7.313526724963573));
                scenicList.push(new Scenery("greatPineTree", 163154.82491013783, -42705.5316982811, 6.243267678791772, 5.040880511984934));
                scenicList.push(new Scenery("greatPineTree", 162426.7782907295, -42843.779473856244, 1.9746415463924591, 6.963157579763088));
                scenicList.push(new Scenery("greatPineTree", 161830.82703698124, -42577.19674425807, 2.7893070025135462, 7.252083651503272));
                scenicList.push(new Scenery("greatPineTree", 161169.55061353082, -42765.457665018, 6.161464373246361, 7.026444941682924));
                scenicList.push(new Scenery("greatPineTree", 161727.9218920061, -43181.95005291081, 2.220968400694612, 7.693886383387437));
                scenicList.push(new Scenery("greatPineTree", 161117.39219499537, -43091.73570671508, 2.054294605684964, 7.489214563054716));
                scenicList.push(new Scenery("greatPineTree", 160470.47353099514, -42823.3209521348, 3.8251612747129933, 5.574597316996677));
                scenicList.push(new Scenery("greatPineTree", 160597.43809633405, -43255.9230904234, 5.923698940588109, 7.156430815655448));
                scenicList.push(new Scenery("greatPineTree", 160270.63765953487, -43563.21129116492, 2.149807093510176, 6.136470586852003));
                scenicList.push(new Scenery("greatPineTree", 160800.32890260543, -43649.90351791505, 3.2206255690751986, 7.718335605188402));
                scenicList.push(new Scenery("greatPineTree", 161340.75984826122, -43492.37866283946, 4.95616532484938, 6.073071616235996));
                scenicList.push(new Scenery("greatPineTree", 162130.2424331471, -43684.6524340582, 6.196638148661238, 7.819291722976706));
                scenicList.push(new Scenery("greatPineTree", 163003.7530278194, -43559.82523294391, 2.8793688670927815, 7.383867657882084));
                scenicList.push(new Scenery("greatPineTree", 163673.62544362957, -43535.90702581273, 5.981030071081152, 6.213755163988109));
                scenicList.push(new Scenery("greatPineTree", 163440.73794726603, -44008.983178236405, 3.5222578674304414, 8.41617414735223));
                scenicList.push(new Scenery("greatPineTree", 162956.42660274822, -44282.44133441102, 1.6699129028581634, 5.632878282273645));
                scenicList.push(new Scenery("greatPineTree", 162260.58327994286, -44114.9880235649, 0.8615306324847326, 7.1098922018026744));
                scenicList.push(new Scenery("greatPineTree", 161651.5244337296, -44225.95637634865, 4.57314260664373, 5.245575249170408));
                scenicList.push(new Scenery("greatPineTree", 160942.01592039413, -44080.65919177155, 4.977633029968391, 5.055690060382202));
                scenicList.push(new Scenery("greatPineTree", 160412.3316407352, -44378.14234950315, 0.537077013588133, 7.691373726461681));
                scenicList.push(new Scenery("greatPineTree", 160270.9297052289, -44020.54955387039, 4.426128430062299, 6.072856163209878));
                scenicList.push(new Scenery("greatPineTree", 164078.97051728496, -44247.96296107657, 3.781649773188248, 8.472817337628507));
                scenicList.push(new Scenery("greatPineTree", 164255.84535890474, -43818.07306803362, 2.0300671343204044, 5.585563182298062));
                scenicList.push(new Scenery("greatPineTree", 164353.49206706995, -43339.09627663816, 5.492458756433858, 8.338620676154408));
                scenicList.push(new Scenery("greatPineTree", 163761.71471958907, -43054.43573403871, 4.023794300242457, 6.773529544285792));
                scenicList.push(new Scenery("greatPineTree", 162466.56149989527, -43074.41627016234, 4.741114871541784, 8.795037589747857));
                scenicList.push(new Scenery("greatPineTree", 164443.57756129603, -42747.57345203919, 5.216400261895624, 6.5559134079099906));
                scenicList.push(new Scenery("greatPineTree", 164954.3106415211, -43126.247658975415, 1.298606433089744, 8.412277366572049));
                scenicList.push(new Scenery("greatPineTree", 165940.71012523645, -43768.92697182617, 3.2866019304263143, 6.482350504157671));
                scenicList.push(new Scenery("greatPineTree", 166138.89222186006, -44209.91839956384, 1.0482678205831666, 5.947117707472547));
                scenicList.push(new Scenery("greatPineTree", 166629.00053263758, -44066.004035889564, 5.995333382988805, 8.247093786613483));
                scenicList.push(new Scenery("greatPineTree", 167190.4292968115, -44179.374978385174, 3.387695705957017, 6.38936312396347));
                scenicList.push(new Scenery("greatPineTree", 167129.25549876346, -43757.12164341419, 2.181105097483602, 6.614628610166384));
                scenicList.push(new Scenery("greatPineTree", 166525.46835244098, -43223.68703337186, 3.7963668314018006, 8.533217153702509));
                scenicList.push(new Scenery("greatPineTree", 167151.65105650848, -43008.14812087048, 5.995435643308199, 5.9756345782162095));
                scenicList.push(new Scenery("greatPineTree", 166571.20040030323, -42681.64061640991, 1.3441576246506077, 6.53048526721031));
                scenicList.push(new Scenery("greatPineTree", 166077.7961315856, -42009.83229805389, 0.6180423676942887, 7.945310370348111));
                scenicList.push(new Scenery("greatPineTree", 165200.95556420082, -42413.494620466736, 2.5329472630051377, 7.233149824355185));
                scenicList.push(new Scenery("greatPineTree", 166437.07956636642, -41504.796081480294, 4.3366524279739025, 6.139284146178968));
                scenicList.push(new Scenery("greatPineTree", 165842.80641422677, -40788.69074082415, 1.8282855635160058, 6.767053069244843));
                scenicList.push(new Scenery("greatPineTree", 164985.73725306446, -40430.05249007641, 0.9239651644110922, 7.314439626332079));
                scenicList.push(new Scenery("greatPineTree", 163487.4170949594, -40581.39658399875, 0.4652916085360144, 7.637710730725726));
                scenicList.push(new Scenery("greatPineTree", 160433.2057478625, -39667.983538152395, 4.317703484321553, 8.474481971275349));
                scenicList.push(new Scenery("greatPineTree", 161089.2229430355, -39535.77452393122, 3.480307608881468, 7.535102890766831));
                scenicList.push(new Scenery("greatPineTree", 161753.2831853623, -39755.937526263224, 2.2451740832024227, 7.709092215021392));
                scenicList.push(new Scenery("greatPineTree", 162908.2156756553, -39213.59789657759, 0.37693160247446905, 6.308972539536538));
                scenicList.push(new Scenery("greatPineTree", 163355.47757746608, -39708.205247231395, 2.864366393063066, 8.417504294480164));
                scenicList.push(new Scenery("greatPineTree", 164015.37823222682, -39515.69292197216, 2.6492180277900013, 8.621347182766605));
                scenicList.push(new Scenery("greatPineTree", 164809.35566634499, -39727.53958853786, 3.963900020310448, 5.2968813816035984));
                scenicList.push(new Scenery("greatPineTree", 165062.5819180349, -39010.9775928848, 5.71446908475895, 7.653880314846945));
                scenicList.push(new Scenery("greatPineTree", 165676.66073214865, -39340.21243177964, 2.7681580535680745, 7.9656238862897215));
                scenicList.push(new Scenery("greatPineTree", 166314.31237550196, -38813.61592274242, 1.3409960634569003, 7.948600643687192));
                scenicList.push(new Scenery("greatPineTree", 165943.42010693823, -38385.21917519232, 2.831187577202485, 6.025180447740626));
                scenicList.push(new Scenery("greatPineTree", 163055.63204983782, -38261.146983244806, 0.768408656923794, 8.739805248554958));
                scenicList.push(new Scenery("greatPineTree", 162305.50986742068, -38837.926736907575, 3.293119339072708, 6.951070610232347));
                scenicList.push(new Scenery("greatPineTree", 161357.60172267715, -38593.873363747756, 4.694752619383891, 7.923135617934786));
                scenicList.push(new Scenery("greatPineTree", 160673.71750465911, -39000.993513244335, 4.65589055041714, 8.807775002849077));
                scenicList.push(new Scenery("greatPineTree", 160206.8960312522, -38578.40586436591, 0.6855630956658223, 8.502266588887318));
                scenicList.push(new Scenery("greatPineTree", 160508.13969371456, -38003.7998512097, 3.336805793413696, 8.801149961411648));
                scenicList.push(new Scenery("greatPineTree", 160907.85616729682, -37586.00388229369, 2.550420528386043, 8.44011321780618));
                scenicList.push(new Scenery("greatPineTree", 161706.9790554398, -37297.52138302592, 4.0032690942411, 6.391496224444305));
                scenicList.push(new Scenery("greatPineTree", 162567.5862025574, -37194.69392215969, 0.777029717686734, 6.156271012934132));
                scenicList.push(new Scenery("greatPineTree", 162124.1013801035, -36658.96771324342, 1.7346730655164435, 6.5397661891490815));
                scenicList.push(new Scenery("greatPineTree", 161328.75426387164, -36494.88484078854, 2.6107724950317452, 7.823754974480853));
                scenicList.push(new Scenery("greatPineTree", 160808.1842290432, -36885.40811926114, 5.5081730081355005, 5.929204125609097));
                scenicList.push(new Scenery("greatPineTree", 160321.54966094677, -36609.45030541637, 2.7687341497032785, 7.060847074573883));
                scenicList.push(new Scenery("greatPineTree", 160565.7915457732, -35788.73489291166, 2.1996561406075634, 8.699217669589116));
                scenicList.push(new Scenery("greatPineTree", 160650.000174127, -35237.21519762497, 5.164090442252168, 6.287522494801585));
                scenicList.push(new Scenery("greatPineTree", 160209.39075708998, -34713.67085376597, 6.073450923513057, 7.914698087432664));
                scenicList.push(new Scenery("greatPineTree", 160933.37405818087, -34403.18319264687, 0.08703771973951921, 8.827733391983514));
                scenicList.push(new Scenery("greatPineTree", 161457.6330152512, -34989.660054277585, 5.8149191415662616, 5.515523389497488));
                scenicList.push(new Scenery("greatPineTree", 162220.0885314657, -34700.821023022254, 2.5311683041324375, 7.443197039676239));
                scenicList.push(new Scenery("greatPineTree", 163239.876989491, -34397.207085974784, 0.01654450540201539, 5.570628326302934));
                scenicList.push(new Scenery("greatPineTree", 163443.80557223747, -34992.56375169109, 1.6064651520385218, 7.619766013431969));
                scenicList.push(new Scenery("greatPineTree", 163051.92488637252, -35753.953741186, 3.743274232557501, 8.391204221429042));
                scenicList.push(new Scenery("greatPineTree", 164295.14060507086, -35548.2493993827, 2.2557279351413926, 8.60325727045661));
                scenicList.push(new Scenery("greatPineTree", 165061.55494512664, -35144.144013531404, 3.7319087737065244, 5.210361923290921));
                scenicList.push(new Scenery("greatPineTree", 165676.48044108538, -34553.215610097504, 1.129240393946861, 8.815186617186878));
                scenicList.push(new Scenery("greatPineTree", 166599.89998858626, -34439.18043372293, 2.7986689322929577, 7.516395973046169));
                scenicList.push(new Scenery("greatPineTree", 166943.17401751547, -35134.35084641883, 2.4758574744771464, 5.627054406437332));
                scenicList.push(new Scenery("greatPineTree", 166443.13238353902, -35939.99219621549, 0.5072391505737702, 5.620728357137558));
                scenicList.push(new Scenery("greatPineTree", 165510.72855088202, -36268.17845303023, 1.3925934692774777, 5.409734251785539));
                scenicList.push(new Scenery("greatPineTree", 164637.37094991558, -36946.36903485486, 2.233460807922558, 7.676797655588426));
                scenicList.push(new Scenery("greatPineTree", 163751.1843606693, -36416.10839601602, 3.0956365908120755, 6.504169133592988));
                scenicList.push(new Scenery("greatPineTree", 163110.44165081793, -36650.126667848395, 5.339317693719843, 8.347240191212496));
                scenicList.push(new Scenery("greatPineTree", 163541.41154714307, -37348.1103981878, 3.21453288338739, 7.816077486979864));
                scenicList.push(new Scenery("greatPineTree", 164335.47709759275, -37908.05155706734, 2.01392963330126, 8.325867640819018));
                scenicList.push(new Scenery("greatPineTree", 163590.24151967978, -38240.09299314678, 3.0620212730763856, 5.180643569904303));
                scenicList.push(new Scenery("greatPineTree", 164627.27782384085, -38608.43651621456, 5.034954108061401, 5.414161814789904));
                scenicList.push(new Scenery("greatPineTree", 164006.56995311374, -39046.159635381766, 1.4224681100162384, 7.325254941163442));
                scenicList.push(new Scenery("greatPineTree", 165466.64564495892, -39756.07639642568, 2.200121326775517, 7.922917672859735));
                scenicList.push(new Scenery("greatPineTree", 166742.5352332633, -39700.45371247344, 5.331857236856287, 7.457889888576769));
                scenicList.push(new Scenery("greatPineTree", 167572.95890970822, -39349.77070042723, 6.219407507540002, 6.4753898868298005));
                scenicList.push(new Scenery("greatPineTree", 167461.9708225042, -38586.130144032446, 0.23762838953078014, 5.886176532416876));
                scenicList.push(new Scenery("greatPineTree", 168164.17270355384, -38182.38121549207, 4.239147031120692, 7.7058292595094935));
                scenicList.push(new Scenery("greatPineTree", 168670.99760430746, -37766.928389867615, 4.90764346418729, 6.184552330490073));
                scenicList.push(new Scenery("greatPineTree", 169169.55271206796, -37466.14642010395, 4.793099674904905, 8.65332669371196));
                scenicList.push(new Scenery("greatPineTree", 169670.59939587364, -37170.4568271063, 1.9422246621663826, 6.20517826435232));
                scenicList.push(new Scenery("greatPineTree", 169965.50657116392, -36798.690143685424, 4.500238606931384, 7.401833613568786));
                scenicList.push(new Scenery("greatPineTree", 169515.10485669327, -36365.47799201502, 1.2526928648687556, 6.710429272691841));
                scenicList.push(new Scenery("greatPineTree", 169847.5464255397, -36108.30404191523, 2.2488411847577936, 6.34714702217782));
                scenicList.push(new Scenery("greatPineTree", 169711.11496885703, -35465.4371435182, 5.530288904169334, 5.029056343916446));
                scenicList.push(new Scenery("greatPineTree", 169973.20292404562, -34922.95697533655, 5.761287142399532, 5.550144577059697));
                scenicList.push(new Scenery("greatPineTree", 169609.69680027734, -34404.01305240752, 3.34949803331114, 5.256752575426419));
                scenicList.push(new Scenery("greatPineTree", 168895.13472126977, -34541.19131520228, 0.4375938958578537, 7.530806953346081));
                scenicList.push(new Scenery("greatPineTree", 167843.8568081173, -34409.212430628155, 5.092267429109505, 7.210355644078191));
                scenicList.push(new Scenery("greatPineTree", 167834.29661146045, -35281.91990794637, 6.279697512321999, 6.423565237756625));
                scenicList.push(new Scenery("greatPineTree", 168262.7869647539, -36017.34233252049, 5.99597249374885, 7.406787883542714));
                scenicList.push(new Scenery("greatPineTree", 168834.04468539843, -36758.18950391146, 0.5594483409164819, 8.769623429347549));
                scenicList.push(new Scenery("greatPineTree", 169038.9793552902, -35926.67612870065, 6.262352970805135, 5.112400708323228));
                scenicList.push(new Scenery("greatPineTree", 167723.30204701656, -35798.22677530312, 2.2420440080381656, 8.693279042997165));
                scenicList.push(new Scenery("greatPineTree", 165878.1716538432, -35462.55427936855, 0.2753169700337063, 5.317085137046339));
                scenicList.push(new Scenery("greatPineTree", 163956.01524601626, -34584.59262880989, 1.6845255745542713, 6.527557487041694));
                scenicList.push(new Scenery("greatPineTree", 169735.9297116679, -39551.50895373419, 4.073484291795145, 6.7882610151701375));
                scenicList.push(new Scenery("greatPineTree", 168891.80964548452, -39450.141734291145, 4.7335453687558395, 8.675741756713649));
                scenicList.push(new Scenery("greatPineTree", 169582.0352352452, -38964.21560515436, 2.90786015866843, 8.021905474897594));
                scenicList.push(new Scenery("greatPineTree", 169700.59901196617, -37984.6817214766, 1.9616541761389654, 7.174021791347676));
                scenicList.push(new Scenery("greatPineTree", 169051.28994608522, -34874.59304262111, 5.335191875878538, 7.80311775557516));
                scenicList.push(new Scenery("greatPineTree", 168307.11975264014, -35467.58325633701, 4.199830796746554, 8.594890061364422));
                scenicList.push(new Scenery("greatPineTree", 168648.35828539895, -36325.456932606365, 4.417102060603587, 8.278444617649015));
                scenicList.push(new Scenery("greatPineTree", 166559.20578267283, -36377.589325967616, 5.832412622895731, 5.161722659635552));
                scenicList.push(new Scenery("greatPineTree", 167278.61103871305, -36072.20775176434, 4.714054991858884, 8.541169600642025));
                scenicList.push(new Scenery("greatPineTree", 167381.77849587228, -37848.80109136605, 3.1827914315397763, 5.836384731579163));
                scenicList.push(new Scenery("greatPineTree", 167946.03107771563, -36601.28365413767, 5.7815227300327985, 6.509239437682864));
                scenicList.push(new Scenery("greatPineTree", 164241.2835636269, -36549.899192171855, 5.166112077701868, 6.3472038257330246));
                scenicList.push(new Scenery("greatPineTree", 163711.1104463021, -35682.42314992868, 5.035935577947537, 8.88631440860284));
                scenicList.push(new Scenery("greatPineTree", 162709.81318681972, -35272.77374607088, 2.367101677134733, 7.165838592331676));
                scenicList.push(new Scenery("greatPineTree", 161147.93816822462, -35710.609922091004, 1.8436192644255884, 6.736186277217316));
                scenicList.push(new Scenery("greatPineTree", 162631.57579630287, -34293.3868620464, 0.4375870739222851, 6.713027843751412));
                scenicList.push(new Scenery("greatPineTree", 164743.1479821574, -34366.08570453178, 1.438897878615282, 6.530354527579188));
                scenicList.push(new Scenery("greatPineTree", 168375.2103131854, -35033.19788144479, 2.9994554822033326, 5.229706609630108));
                scenicList.push(new Scenery("greatPineTree", 168379.18368980312, -38959.96692344362, 4.029929452110738, 8.031274740239986));
                scenicList.push(new Scenery("greatPineTree", 169841.1334881423, -38367.5796241951, 2.3857834269287355, 8.021001263128237));
                scenicList.push(new Scenery("greatPineTree", 167628.81592120137, -36886.113483347464, 1.7454791731935906, 7.449946315487629));
                scenicList.push(new Scenery("greatPineTree", 166892.00970549998, -35582.52493830878, 3.916362775953762, 8.423238988371667));
                scenicList.push(new Scenery("greatPineTree", 164005.12002446258, -35113.72991028459, 4.727820651676503, 6.540649314199871));

                scenicList.push(new Scenery("greatPineTree", 168650.52244902268, -40881.69463660231, 5.945094452256368, 8.36362400556832));
                scenicList.push(new Scenery("greatPineTree", 168902.66102930313, -40523.82818448133, 5.911607228987742, 5.298032829575025));
                scenicList.push(new Scenery("greatPineTree", 169548.49327166934, -40408.85334082473, 0.3789409651896846, 7.617906338597383));
                scenicList.push(new Scenery("greatPineTree", 169937.3064731585, -40638.175026058336, 0.8054856292305551, 6.575010688825312));
                scenicList.push(new Scenery("greatPineTree", 169498.9476777465, -40934.241550526465, 1.728378141248588, 8.127463267087172));
                scenicList.push(new Scenery("greatPineTree", 169099.26465684283, -41413.29312915288, 5.948590455009477, 7.3766600114641525));
                scenicList.push(new Scenery("greatPineTree", 169855.47480029485, -41344.7967636367, 4.892275617491367, 6.78277395537397));
                scenicList.push(new Scenery("greatPineTree", 169555.85201319633, -41699.33276541993, 0.5364161864558222, 7.813885530406017));
                scenicList.push(new Scenery("greatPineTree", 170042.15819560198, -41978.165884581955, 4.608214708335242, 5.059666742926135));
                scenicList.push(new Scenery("greatPineTree", 169020.47333064242, -41809.75357839925, 2.576127978709913, 6.219759677594126));
                scenicList.push(new Scenery("greatPineTree", 169470.1854433404, -42298.776290854636, 2.130606349885234, 5.191936387705851));
                scenicList.push(new Scenery("greatPineTree", 169927.97895954293, -42602.38408468578, 3.8824488081815454, 5.73002544778805));
                scenicList.push(new Scenery("greatPineTree", 169521.21965596778, -43058.388403106, 5.015491776174606, 7.71411345109911));
                scenicList.push(new Scenery("greatPineTree", 169893.7229097246, -43561.36365295007, 2.468952004370057, 5.880069505288903));
                scenicList.push(new Scenery("greatPineTree", 169411.6027720102, -44160.11468351922, 1.404869041744697, 6.924121493620623));
                scenicList.push(new Scenery("greatPineTree", 170087.3759630746, -44226.33332719314, 5.904751712970305, 7.784624327866614));
                scenicList.push(new Scenery("greatPineTree", 169261.68110095186, -43669.2894284348, 4.0406159520695875, 6.74762028387098));
                scenicList.push(new Scenery("greatPineTree", 168793.5909836501, -44297.076755185495, 1.5033288354076466, 8.946517868628401));
                scenicList.push(new Scenery("greatPineTree", 168918.36976035737, -43932.00676287632, 5.97127749699335, 7.1377580652094155));
                scenicList.push(new Scenery("greatPineTree", 168732.19119215256, -43413.75551861249, 5.5523852327553405, 7.7569077780803966));
                scenicList.push(new Scenery("greatPineTree", 168839.17116013612, -42713.27274938798, 3.5811509651010556, 7.884825540488067));
                scenicList.push(new Scenery("greatPineTree", 168397.24650927572, -42287.37638864897, 2.5310124259087443, 7.126323902122785));
                scenicList.push(new Scenery("greatPineTree", 168198.47901857668, -41844.819101848065, 3.8610509451626136, 7.316794323116585));
                scenicList.push(new Scenery("greatPineTree", 167494.33125584867, -42059.10959923385, 0.8409371618505131, 7.151146458180013));
                scenicList.push(new Scenery("greatPineTree", 167722.004806509, -42560.38578425832, 1.6508019919053234, 6.3742550622788485));
                scenicList.push(new Scenery("greatPineTree", 168096.58218478598, -43118.98268949337, 0.10306595898394397, 5.123131520368663));
                scenicList.push(new Scenery("greatPineTree", 168051.93258427057, -43755.505845748005, 2.924559628047344, 7.592134926702227));
                scenicList.push(new Scenery("greatPineTree", 168315.1829029513, -44083.32775822098, 5.0863027139498564, 7.922485870571813));
                scenicList.push(new Scenery("greatPineTree", 167740.5189195348, -44266.81642294912, 1.9397024549333126, 8.188777543120164));
                scenicList.push(new Scenery("greatPineTree", 167723.00173455186, -43984.1948537195, 3.748419662777848, 5.59217491660429));
                scenicList.push(new Scenery("greatPineTree", 167732.77484439648, -43392.16716341353, 0.7006361689150873, 8.105404592947306));
                scenicList.push(new Scenery("greatPineTree", 167086.63335398096, -42282.110032819786, 5.737421043313134, 5.21557984885124));

                //resources
                //plants
                //scenicList.push(new Scenery("eyewortPlant", 3400, 2400, 2.2, true));
                //scenicList.push(new Scenery("sciltPlant", 3400, 2400, 1.6, true, 1));
                //scenicList.push(new Scenery("korceidaPlant", 3400, 2400, 2, true));
                //scenicList.push(new Scenery("lauminPlant", 3600, 2400, 2, true));
                //scenicList.push(new Scenery("jollePlant", 3400, 2400, 0.2, true));
                //scenicList.push(new Scenery("porstolPlant", 3750, 2500, 0, true));
                //scenicList.push(new Scenery("falloryPlant", 3750, 2500, 0, true));
                //scenicList.push(new Scenery("palggaPlant", 3750, 2500, 0, true));
                //scenicList.push(new Scenery("aberdomPlant", 3750, 2500, 0, true));
                //scenicList.push(new Scenery("beunumPlant", 3750, 2500, 0, true));
                //scenicList.push(new Scenery("ciprinPlant", 3750, 2500, 0, true));
                //scenicList.push(new Scenery("bleedingHeartPlant", 3750, 2500, 0, true));
                //scenicList.push(new Scenery("marigoldPlant", 3750, 2500, 0, true));
                //scenicList.push(new Scenery("hoilPlant", 3750, 2500, 0, true));
                //scenicList.push(new Scenery("callopPlant", 3750, 2500, 0, true));
                //scenicList.push(new Scenery("darbPlant", 3750, 2500, 0, true));
                //scenicList.push(new Scenery("kofkePlant", 3750, 2500, 0, true));
                //scenicList.push(new Scenery("cranberryPlant", 3750, 2500, 0, true));

                //units
                //ArtificialIntelligenceAccess.push(new Unit(3000, 1500, "Cheshire", true, "Faxic"));
                //ArtificialIntelligenceAccess.push(new Unit(5550, 2500, "Koivaya", false, "loner"));
                //ArtificialIntelligenceAccess.push(new Unit(3900, 2900, "Silter", false, "Screpa"));
                //ArtificialIntelligenceAccess.push(new Unit(3900, 2900, "KorskBeetle", true, "Scraupp"));
                //ArtificialIntelligenceAccess.push(new Unit(4000, 2500, "Borgal", false, "Sluch"));
                //ArtificialIntelligenceAccess.push(new Unit(4100, 2300, "BlackBeruln", true, "Hutu"));
                //ArtificialIntelligenceAccess.push(new Unit(4100, 2500, "Fox", false, "Berney"));
                //ArtificialIntelligenceAccess.push(new Unit(4100, 2500, "Deer", true, "Iclom"));
                //ArtificialIntelligenceAccess.push(new Unit(3900, 2600, "Badger", false, "Malta"));
                //ArtificialIntelligenceAccess.push(new Unit(4500, 2500, "Wendigo", false, "wendy"));
                //ArtificialIntelligenceAccess.push(new Unit(4500, 2500, "Crow", true, "Seven"));
                //ArtificialIntelligenceAccess.push(new Unit(4200, 2500, "GrizzlyBear", "kag", "Kag the scarred devourer"));
                //ArtificialIntelligenceAccess.push(new Unit(4200, 2500, "GrizzlyBear", true, "Kaaguf"));
                //ArtificialIntelligenceAccess.push(new Unit(62507, -13387, "BlackBear", true, "Jude"));
                //ArtificialIntelligenceAccess.push(new Unit(59966, -13347, "Skol", false, "Joe"));
                //ArtificialIntelligenceAccess.push(new Unit(60687, -10171, "Lizard", true, "Lazaro"));
                //ArtificialIntelligenceAccess.push(new Unit(66351, -7422, "Hoffalgre", true, "Humfrez"));

                //map creation

                scenicList.push(new Scenery("marigoldPlant", 161110.40530197026, -35997.23764048618, 7, true));
                scenicList.push(new Scenery("marigoldPlant", 160590.4751231086, -36275.12323784711, 2, true));

                ArtificialIntelligenceAccess.push(new Unit(161772.55925450983, -36402.3952787571, "Silter", false, "Screpa"));
                scenicList.push(new Scenery("sciltPlant", 161606.6944616884, -36256.503443868496, 1.6, true, 1));
                scenicList.push(new Scenery("sciltPlant", 162747.6307268725, -36289.89954083043, 1.5, true, 1));
                scenicList.push(new Scenery("sciltPlant", 162556.35682635664, -36352.35634922126, 2, true, 1));
                ArtificialIntelligenceAccess.push(new Unit(162450.5836003762, -36199.349740646176, "Silter", true, "Screpa"));
                scenicList.push(new Scenery("sciltPlant", 162412.8770008719, -36317.36936686831, 1, true, 1.2));
                scenicList.push(new Scenery("sciltPlant", 162589.99786183363, -36490.49579243047, 0, true, 1));
                scenicList.push(new Scenery("sciltPlant", 162212.95006504198, -36366.09898123915, 1.45, true, 1.1));
                ArtificialIntelligenceAccess.push(new Unit(162099.76792694334, -36182.83903913271, "Silter", false, "Screpa"));
                scenicList.push(new Scenery("sciltPlant", 162203.25666855267, -36092.48226831789, 3.9, true, 1));
                scenicList.push(new Scenery("sciltPlant", 161946.6426993336, -36370.54482034089, 5, true, 1.3));
                scenicList.push(new Scenery("sciltPlant", 161827.07430088217, -36272.035276785486, 6.6, true, 1));
                scenicList.push(new Scenery("sciltPlant", 162254.68312885443, -36906.5435953987, 8, true, 1.2));

                ArtificialIntelligenceAccess.push(new Unit(163390.11518185673, -36405.20890696829, "Crow", false, "birdfinger"));
                ArtificialIntelligenceAccess.push(new Unit(163515.52665660216, -36482.84148297594, "Crow", false, "poopoobird"));

                scenicList.push(new Scenery("kofkePlant", 165059.2944724321, -34578.95820385862, 9, true));
                scenicList.push(new Scenery("cranberryPlant", 165679.55091026545, -36908.28608441458, 0, true));
                scenicList.push(new Scenery("hoilPlant", 166131.65067525307, -35282.14400232576, 1, true));
                scenicList.push(new Scenery("beunumPlant", 164848.76436801787, -37319.54792371421, 0, true));
                scenicList.push(new Scenery("ciprinPlant", 164141.14230031334, -36752.05981471026, 0, true));
                scenicList.push(new Scenery("aberdomPlant", 164648.947897947, -37055.30090519293, 2, true));
                scenicList.push(new Scenery("ciprinPlant", 166581.16115243835, -35227.99370437628, 8, true));
                scenicList.push(new Scenery("beunumPlant", 167592.71971738932, -34796.97328768172, 7, true));
                scenicList.push(new Scenery("jollePlant", 167917.9584664681, -35534.74007464713, 0.92, true));

                scenicList.push(new Scenery("sciltPlant", 164811.05362290723, -35771.72303917973, 1.6, true, 1));
                scenicList.push(new Scenery("sciltPlant", 165126.418558665, -35916.124270551176, 2.1, true, 1));
                ArtificialIntelligenceAccess.push(new Unit(165099.92081736025, -35716.14034226131, "Silter", true, "Screpa"));
                scenicList.push(new Scenery("sciltPlant", 165411.53444613577, -35754.52781503578, 1, true, 1.2));
                scenicList.push(new Scenery("sciltPlant", 165306.96290354445, -35590.989725461644, 0.14, true, 1));
                scenicList.push(new Scenery("sciltPlant", 165508.72524103394, -35610.24683564394, 1.35, true, 1.25));
                ArtificialIntelligenceAccess.push(new Unit(165322.3453283027, -35423.85192770335, "Silter", false, "Screpa"));
                scenicList.push(new Scenery("sciltPlant", 164850.7155929463, -35589.239315641105, 1.9, true, 1.45));
                scenicList.push(new Scenery("sciltPlant", 164667.3492148215, -35642.23976028682, 0.8, true, 1));
                scenicList.push(new Scenery("sciltPlant", 164759.1936235674, -35363.16035544518, 7.7, true, 1.32));

                scenicList.push(new Scenery("porstolPlant", 162020.20678305803, -35324.85499888478, 10.2, true));
                scenicList.push(new Scenery("darbPlant", 161738.49283552603, -35826.42931818892, -1, true));
                scenicList.push(new Scenery("marigoldPlant", 165491.97220365706, -37784.29462984805, 0, true));
                scenicList.push(new Scenery("beunumPlant", 166621.5242621085, -38784.24284108674, 1.5, true));
                scenicList.push(new Scenery("callopPlant", 168577.47615196178, -39257.45570849097, 0, true));
                scenicList.push(new Scenery("cranberryPlant", 166143.41620210992, -35859.09855517576, 12, true));

                scenicList.push(new Scenery("cranberryPlant", 165968.2781385661, -37112.65623017743, 15, true));
                scenicList.push(new Scenery("cranberryPlant", 166658.71173021413, -36998.557273031984, 9, true));
                scenicList.push(new Scenery("cranberryPlant", 166431.35595143226, -36531.77150687305, 3, true));

                if (Math.round(Math.random()))
                {
                    if (Math.round(Math.random()))
                    {
                        ArtificialIntelligenceAccess.push(new Unit(166627.89638848943, -37059.5467931165, "BlackBear", true, "Jude"));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(165905.73673414695, -36854.363457587504, "BlackBear", false, "Jude"));
                    }
                }

                ArtificialIntelligenceAccess.push(new Unit(165879.88181328797, -36154.147924279714, "Hoffalgre", true, "Humfrez"));
                ArtificialIntelligenceAccess.push(new Unit(166219.36140170708, -36011.28050458155, "Hoffalgre", false, "Humfrez"));
                ArtificialIntelligenceAccess.push(new Unit(167123.33596707767, -35793.356931054885, "Hoffalgre", true, "Humfrez"));

                scenicList.push(new Scenery("palggaPlant", 166958.25842180513, -35930.48080538246, 0, true));

                ArtificialIntelligenceAccess.push(new Unit(167565.51226888958, -36361.52492355368, "Crow", false, "Seven"));
                ArtificialIntelligenceAccess.push(new Unit(167774.41515038014, -36326.48756855138, "Crow", true, "Nine"));
                ArtificialIntelligenceAccess.push(new Unit(167658.22274973808, -36285.45812448452, "Crow", false, "Seven"));
                ArtificialIntelligenceAccess.push(new Unit(167400.67565698046, -36245.59495434143, "Crow", false, "Seven"));
                ArtificialIntelligenceAccess.push(new Unit(167461.4640403455, -36438.34729924384, "Crow", false, "Seven"));
                ArtificialIntelligenceAccess.push(new Unit(167486.19387935745, -36564.14387568253, "Crow", true, "Eight"));

                ArtificialIntelligenceAccess.push(new Unit(168875.95596676125, -36935.92406386342, "Skol", false, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(168670.2837296362, -37183.75792509402, "Skol", false, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(169192.50657267697, -37339.08387529792, "Skol", false, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(169688.7437009863, -37280.875389025976, "Skol", false, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(169650.73889230393, -37638.851389288415, "Skol", false, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(169300.64334323915, -37874.056301841214, "Skol", false, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(168856.80088888155, -38167.995939296925, "Skol", false, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(168578.08530585183, -37811.1971324169, "Skol", false, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(168742.98485196565, -37646.25303544815, "Skol", false, "Joe"));

                ArtificialIntelligenceAccess.push(new Unit(166545.5841802355, -39145.76610985885, "Koivaya", false, "loner"));
                ArtificialIntelligenceAccess.push(new Unit(161906.18464993115, -35582.30546860842, "Koivaya", false, "loner"));

                ArtificialIntelligenceAccess.push(new Unit(162517.34447038764, -37912.08455980862, "KorskBeetle", true, "Scraupp"));
                ArtificialIntelligenceAccess.push(new Unit(161942.53135035187, -37838.12827627642, "KorskBeetle", false, "Scraupp"));

                scenicList.push(new Scenery("callopPlant", 160954.63624497224, -38717.307852121005, 9.15, true));
                ArtificialIntelligenceAccess.push(new Unit(161895.80035162863, -38490.30494317763, "Crow", false, "Seven"));

                scenicList.push(new Scenery("marigoldPlant", 163580.3290540862, -39415.947143072786, 1.45, true));

                ArtificialIntelligenceAccess.push(new Unit(163115.57330759778, -39368.33728012395, "Lizard", true, "Lazaro"));
                ArtificialIntelligenceAccess.push(new Unit(164236.54489581956, -40026.530027176, "Lizard", false, "Lazaro"));
                ArtificialIntelligenceAccess.push(new Unit(165209.86553147528, -40417.33270054979, "Lizard", false, "Lazaro"));

                ArtificialIntelligenceAccess.push(new Unit(161652.73081561248, -39088.64757909141, "BlackBear", true, "Jude"));
                ArtificialIntelligenceAccess.push(new Unit(162448.0579239199, -39438.472753757356, "BlackBear", false, "Jude"));

                ArtificialIntelligenceAccess.push(new Unit(162956.31887497517, -40914.87743141622, "Koivaya", true, "loner"));

                scenicList.push(new Scenery("porstolPlant", 164146.2803142017, -40821.7954439629, 12.2, true));
                scenicList.push(new Scenery("marigoldPlant", 164635.3586514538, -40561.07233874605, 1.45, true));
                ArtificialIntelligenceAccess.push(new Unit(164606.57720838874, -40799.459372841106, "Skol", false, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(165385.8751308262, -40972.22420275415, "Skol", false, "Joe"));

                scenicList.push(new Scenery("aberdomPlant", 169132.85589856052, -42264.13993199374, 3, true));
                scenicList.push(new Scenery("ciprinPlant", 168809.72207890978, -42224.35502288766, 6, true));
                scenicList.push(new Scenery("beunumPlant", 168849.0224817882, -41932.885307345394, -7.5, true));
                scenicList.push(new Scenery("aberdomPlant", 168179.2123870884, -42188.69640080683, 10, true));
                scenicList.push(new Scenery("ciprinPlant", 167381.61341214695, -42182.20328452576, 3.4, true));
                scenicList.push(new Scenery("beunumPlant", 166575.69510029, -42191.337811569545, 14, true));
                scenicList.push(new Scenery("ciprinPlant", 165903.44542360585, -42258.60566155886, 8, true));
                scenicList.push(new Scenery("beunumPlant", 167233.0943471548, -43113.04949587767, 7, true));

                ArtificialIntelligenceAccess.push(new Unit(169413.4922991735, -43185.054191706855, "Skol", true, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(169679.14761467732, -44091.60381073816, "Skol", false, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(169738.28866938187, -44200.61080017689, "Skol", false, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(169964.90544743545, -44238.57020189751, "Skol", true, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(169034.06054209732, -43996.423773040326, "Skol", false, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(168816.16930193876, -44194.283037664085, "Skol", false, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(168102.84249692853, -43872.101085456365, "Skol", true, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(167893.28053366364, -43370.21104698515, "Skol", false, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(167718.02679022335, -43233.64627268257, "Skol", false, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(167603.86080975868, -43495.50024086619, "Skol", true, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(168623.78746325726, -43003.3206299192, "Skol", false, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(168708.47753602755, -42837.65241059188, "Skol", false, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(168959.00403566795, -42790.01626185324, "Skol", true, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(168850.66113495603, -42574.85294534334, "Skol", false, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(168850.66113495603, -42574.85294534334, "Skol", false, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(168290.21471941913, -42209.87470806222, "Skol", true, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(168352.12983558787, -41851.84505375637, "Skol", false, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(167838.08833824957, -41615.44855196261, "Skol", false, "Joe"));

                scenicList.push(new Scenery("marigoldPlant", 168502.28705957608, -41361.15178114911, 2.55, true));
                scenicList.push(new Scenery("callopPlant", 167364.07155637306, -40865.66185890616, 3.9, true));
                scenicList.push(new Scenery("cranberryPlant", 166092.4258773257, -42606.76635846777, 15, true));
                scenicList.push(new Scenery("cranberryPlant", 165935.15245184366, -41064.97387511913, 15, true));
                scenicList.push(new Scenery("cranberryPlant", 165897.24767160017, -43360.64221040354, 15, true));

                ArtificialIntelligenceAccess.push(new Unit(165999.26247658653, -43238.882199600455, "BlackBear", false, "Jude"));

                scenicList.push(new Scenery("sciltPlant", 165173.55655896387, -43681.512953114594, 1.8, true, 1.8));
                scenicList.push(new Scenery("sciltPlant", 165442.36157055505, -43801.951559465175, 2.9, true, 1));
                ArtificialIntelligenceAccess.push(new Unit(165476.25869883288, -43641.9797958347, "Silter", true, "Screpa"));
                scenicList.push(new Scenery("sciltPlant", 165179.19968480588, -43890.06715276973, 3, true, 1.2));
                ArtificialIntelligenceAccess.push(new Unit(165064.47888617933, -44146.410294566456, "Silter", false, "Screpa"));
                scenicList.push(new Scenery("sciltPlant", 164780.7606738057, -44070.268539635865, 0.84, true, 1.4));
                scenicList.push(new Scenery("sciltPlant", 164707.08803044594, -43886.78405381638, 1.55, true, 1.9));
                ArtificialIntelligenceAccess.push(new Unit(164678.9456332489, -43639.60186783466, "Silter", false, "Screpa"));
                scenicList.push(new Scenery("sciltPlant", 164780.7606738057, -44070.268539635865, 2, true, 1.45));
                scenicList.push(new Scenery("sciltPlant", 164401.34230761696, -43933.39212299415, 0.12, true, 1));
                scenicList.push(new Scenery("sciltPlant", 165270.26466667466, -43454.00789190268, 10.7, true, 1.22));

                ArtificialIntelligenceAccess.push(new Unit(164673.5958393281, -42394.9774807902, "Deer", true, "Iclom"));
                ArtificialIntelligenceAccess.push(new Unit(165540.82811213893, -41748.52919973754, "Deer", false, "Iclom"));
                ArtificialIntelligenceAccess.push(new Unit(163852.9490558958, -43869.31746083299, "Deer", false, "Iclom"));
                scenicList.push(new Scenery("kofkePlant", 162510.3422864044, -43491.22959326058, 20, true));
                scenicList.push(new Scenery("kofkePlant", 161299.28094162914, -43961.13181834707, 3, true));
                ArtificialIntelligenceAccess.push(new Unit(162387.1316721635, -43859.44337314184, "Hoffalgre", true, "Humfrez"));
                ArtificialIntelligenceAccess.push(new Unit(161182.98056635333, -43742.07614006412, "Hoffalgre", false, "Humfrez"));

                scenicList.push(new Scenery("darbPlant", 162287.53957648424, -42404.88241594707, -4, true));
                ArtificialIntelligenceAccess.push(new Unit(162083.99318921982, -41720.8712706845, "Badger", false, "Malta"));
                ArtificialIntelligenceAccess.push(new Unit(161492.249342709, -41210.82304417501, "Badger", true, "Malta"));

                ArtificialIntelligenceAccess.push(new Unit(160796.85404902583, -36555.545848744005, "Lizard", false, "Lazaro"));

                ArtificialIntelligenceAccess.push(new Unit(167658.84191653688, -35064.68397221898, "Deer", false, "Iclom"));
                ArtificialIntelligenceAccess.push(new Unit(167592.35429232835, -35140.25656331725, "Deer", "baby", "Iclom"));
                ArtificialIntelligenceAccess.push(new Unit(167370.56951650605, -34884.9999074071, "Deer", "baby", "Iclom"));

                ArtificialIntelligenceAccess.push(new Unit(166628.36473132425, -35110.548296194786, "Deer", false, "Iclom"));

                ArtificialIntelligenceAccess.push(new Unit(165705.42794887585, -34787.30383898495, "Crow", false, "Seven"));
                ArtificialIntelligenceAccess.push(new Unit(165582.20939623786, -34772.98017335916, "Crow", false, "Seven"));
                ArtificialIntelligenceAccess.push(new Unit(165638.48055641958, -34847.070534265105, "Crow", true, "Eight"));
                ArtificialIntelligenceAccess.push(new Unit(165864.5794429816, -34799.69195501252, "Crow", true, "Eight"));
                ArtificialIntelligenceAccess.push(new Unit(165388.3959270294, -34886.25239873473, "Crow", false, "Seven"));

                ArtificialIntelligenceAccess.push(new Unit(169109.87354843653, -35279.219147300944, "Badger", false, "Malta"));

                ArtificialIntelligenceAccess.push(new Unit(160883.9429809905, -38465.585979850184, "KorskBeetle", false, "Scraupp"));

                scenicList.push(new Scenery("fog", 168507.9865746114, -42475.382648838575, 12, 1, 0.74));
                scenicList.push(new Scenery("fog", 168613.66613506962, -42926.76766499184, -12, 2, 0.33));
                scenicList.push(new Scenery("fog", 167554.01763108344, -42897.15161098989, 45, 3, 0.22));
                scenicList.push(new Scenery("fog", 166721.92888120355, -42398.02291837995, 3, 1, 0.615));
                scenicList.push(new Scenery("fog", 167116.4634414042, -38578.148506595404, -8, 2, 0.39));
                scenicList.push(new Scenery("fog", 165980.87095721194, -37567.61665203147, -9, 3, 0.52));
                scenicList.push(new Scenery("fog", 166311.39134193677, -36907.36355694566, 12, 2, 0.19));
                scenicList.push(new Scenery("fog", 166791.3694158258, -36728.7121164975, 13, 1, 0.25));
                scenicList.push(new Scenery("fog", 167100.48150428638, -36906.91692267648, -20, 0, 0.72));
                scenicList.push(new Scenery("fog", 167556.78823135502, -40898.26693767417, 20, 0, 0.35));
                scenicList.push(new Scenery("fog", 168505.81320279086, -41621.89358956999, -3, 3, 0.55));
                scenicList.push(new Scenery("fog", 169012.60178193563, -42520.38304259214, 89, 2, 0.50));

                change = "s4w16";
            }
        }
        else if (region == "s4w17")
        {
            if (change != "s4w17")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                scenicList.push(new Scenery("pineTree", 179587.76016318405, -34275.884249411116, 4.455346623568941, true));
                scenicList.push(new Scenery("pineTree", 179681.17879747922, -34629.4050054046, 1.0136739259721932, true));
                scenicList.push(new Scenery("pineTree", 179402.2795526189, -34640.19722494913, 0.5007042305666426, true));
                scenicList.push(new Scenery("pineTree", 179525.70753495066, -34955.78450353319, 4.3549210618758964, true));
                scenicList.push(new Scenery("pineTree", 179958.2524432749, -35207.034473599044, 3.4424317668357816, true));
                scenicList.push(new Scenery("pineTree", 180231.8291488479, -35103.5450374945, 5.564071592776328, true));
                scenicList.push(new Scenery("pineTree", 180261.56727334048, -34526.878281918966, 0.9238148966911383, true));
                scenicList.push(new Scenery("pineTree", 180256.08404201033, -34291.55258967514, 4.382569056387007, true));
                scenicList.push(new Scenery("pineTree", 180067.60004854266, -35445.197544839575, 3.2730140788291027, true));
                scenicList.push(new Scenery("pineTree", 179642.9632765024, -35587.820590396965, 4.719728155173365, true));
                scenicList.push(new Scenery("pineTree", 179693.54813298138, -35868.67397080376, 0.7968295562863823, true));
                scenicList.push(new Scenery("pineTree", 180155.60401986784, -35972.22125758545, 4.337776982226597, true));
                scenicList.push(new Scenery("pineTree", 179997.5216040576, -36239.02760806372, 5.655134717267414, true));
                scenicList.push(new Scenery("pineTree", 180183.12985182452, -36506.601019080284, 0.8615468147026151, true));
                scenicList.push(new Scenery("pineTree", 179772.6687155117, -36742.56993304242, 1.6514002800265535, true));
                scenicList.push(new Scenery("pineTree", 180266.1468137261, -36756.41332895055, 4.971855627169083, true));
                scenicList.push(new Scenery("pineTree", 179597.49731992697, -37000.73356267992, 3.8599010953709967, true));
                scenicList.push(new Scenery("pineTree", 179376.29485350478, -36837.92288822752, 0.9637520024461922, true));
                scenicList.push(new Scenery("pineTree", 179438.5747036698, -36522.30377160226, 0.22693179275813993, true));
                scenicList.push(new Scenery("pineTree", 179492.92240698045, -36196.60188519598, 1.30919075777877, true));
                scenicList.push(new Scenery("pineTree", 179154.63538279064, -35678.00367597945, 5.835296656982794, true));
                scenicList.push(new Scenery("pineTree", 179176.01870829, -35322.217787814625, 2.2065766002990337, true));
                scenicList.push(new Scenery("pineTree", 178883.74975526347, -35120.26153208601, 5.790882626426363, true));
                scenicList.push(new Scenery("pineTree", 178507.83643913319, -34905.65672378343, 1.1682867219521726, true));
                scenicList.push(new Scenery("pineTree", 178221.24066183856, -34680.550282400756, 2.284276481979102, true));
                scenicList.push(new Scenery("pineTree", 178447.4487211258, -34341.17601600976, 5.332608048564106, true));
                scenicList.push(new Scenery("pineTree", 178846.285490374, -34282.89462335399, 4.080317698995738, true));
                scenicList.push(new Scenery("pineTree", 178975.3840461089, -34556.25377196606, 0.03362786534339848, true));
                scenicList.push(new Scenery("pineTree", 179173.6331833933, -34255.95537837829, 5.449212287623872, true));
                scenicList.push(new Scenery("pineTree", 178051.02051421677, -35281.89221844769, 2.1741059267754776, true));
                scenicList.push(new Scenery("pineTree", 178487.27995860303, -35518.418739378205, 4.031075702913303, true));
                scenicList.push(new Scenery("pineTree", 177939.42156300764, -35567.84251463327, 2.654407130480332, true));
                scenicList.push(new Scenery("pineTree", 178259.7988511827, -35740.391263117475, 3.1973248846656928, true));
                scenicList.push(new Scenery("pineTree", 177915.7231035908, -35951.62095104322, 1.8766819209359893, true));
                scenicList.push(new Scenery("pineTree", 177445.19278087773, -35871.35794733504, 0.6946813734545612, true));
                scenicList.push(new Scenery("pineTree", 177405.59763585177, -35579.48379665724, 1.1195113330779585, true));
                scenicList.push(new Scenery("pineTree", 177649.3750481871, -35234.42022804911, 4.873692823124488, true));
                scenicList.push(new Scenery("pineTree", 177686.01517830216, -35020.57658195026, 0.18390556591828136, true));
                scenicList.push(new Scenery("pineTree", 177314.63076854995, -34912.464006880335, 0.9657651189692379, true));
                scenicList.push(new Scenery("pineTree", 177471.5165124334, -34720.547849418384, 4.879111472963945, true));
                scenicList.push(new Scenery("pineTree", 177671.64520344924, -34653.83326037429, 0.9804674978067334, true));
                scenicList.push(new Scenery("pineTree", 177659.65153156643, -34327.70429381685, 3.0287289602363696, true));
                scenicList.push(new Scenery("pineTree", 176838.0439766801, -34906.33806873867, 2.3733087206414067, true));
                scenicList.push(new Scenery("pineTree", 176844.78857009995, -34528.19921068902, 4.398642508851147, true));
                scenicList.push(new Scenery("pineTree", 176308.47807447877, -34597.191457697285, 3.792817031670321, true));
                scenicList.push(new Scenery("pineTree", 176120.307239883, -34311.54581520396, 4.882891180113005, true));
                scenicList.push(new Scenery("pineTree", 175778.27319143602, -34458.18445580791, 4.982251543686122, true));
                scenicList.push(new Scenery("pineTree", 175647.41063426845, -34838.5419641032, 2.05120010351727, true));
                scenicList.push(new Scenery("pineTree", 175439.18572108308, -35104.989675742894, 3.221847881945186, true));
                scenicList.push(new Scenery("pineTree", 175814.39692452017, -35173.00105252732, 5.702071774665743, true));
                scenicList.push(new Scenery("pineTree", 175466.99418352966, -35406.58244092984, 2.428728918415097, true));
                scenicList.push(new Scenery("pineTree", 175567.41743481712, -35788.69429920868, 1.8342480447997827, true));
                scenicList.push(new Scenery("pineTree", 175026.9673932375, -35744.83315720918, 6.066506947434379, true));
                scenicList.push(new Scenery("pineTree", 174949.52487560955, -35246.27989081711, 1.4297625680140014, true));
                scenicList.push(new Scenery("pineTree", 174618.10339889204, -35475.724651644894, 1.6467187687708793, true));
                scenicList.push(new Scenery("pineTree", 174227.41958165265, -35630.856618998085, 6.129448484628465, true));
                scenicList.push(new Scenery("pineTree", 173797.0523999599, -35576.44032441343, 3.659023170056223, true));
                scenicList.push(new Scenery("pineTree", 173692.4765112789, -35236.00020151442, 1.4850940932885666, true));
                scenicList.push(new Scenery("pineTree", 173929.31852651533, -35013.20977651505, 0.827916156902894, true));
                scenicList.push(new Scenery("pineTree", 174381.92486508674, -34907.45588065376, 1.8394666604478207, true));
                scenicList.push(new Scenery("pineTree", 174628.5040823332, -35184.05068552086, 5.172713577061884, true));
                scenicList.push(new Scenery("pineTree", 174716.5765654849, -34679.53741872412, 4.672618503868568, true));
                scenicList.push(new Scenery("pineTree", 175021.35899591862, -34453.087970636196, 1.272973907828581, true));
                scenicList.push(new Scenery("pineTree", 173720.45143876015, -34548.71175610644, 5.768502506366259, true));
                scenicList.push(new Scenery("pineTree", 174002.74033654862, -34269.37166795068, 3.0575629371364546, true));
                scenicList.push(new Scenery("pineTree", 173134.10257408125, -34776.02810762372, 0.4981635139803488, true));
                scenicList.push(new Scenery("pineTree", 172968.1666823226, -34358.274931728716, 4.299669110041315, true));
                scenicList.push(new Scenery("pineTree", 172541.1362161838, -34542.77589967725, 5.155902298903855, true));
                scenicList.push(new Scenery("pineTree", 172157.79757513845, -34317.740749897064, 4.824324257198668, true));
                scenicList.push(new Scenery("pineTree", 172199.47983993514, -34842.77845409051, 4.495150975671243, true));
                scenicList.push(new Scenery("pineTree", 172869.72360994562, -35004.98327961296, 3.9300064647131006, true));
                scenicList.push(new Scenery("pineTree", 171946.49365890215, -35113.05435629874, 0.11997925171700786, true));
                scenicList.push(new Scenery("pineTree", 171526.53283094455, -35186.57919117282, 1.9348015625834807, true));
                scenicList.push(new Scenery("pineTree", 171889.48624894643, -35414.66453944389, 5.525103482613635, true));
                scenicList.push(new Scenery("pineTree", 172260.92493576967, -35265.00095686947, 3.550925339730572, true));
                scenicList.push(new Scenery("pineTree", 172486.7027747429, -35606.523862250964, 2.649336238089684, true));
                scenicList.push(new Scenery("pineTree", 172215.57354142354, -35757.066206406096, 5.650564049121428, true));
                scenicList.push(new Scenery("pineTree", 172472.8683052169, -35989.24826259778, 3.596881326374267, true));
                scenicList.push(new Scenery("pineTree", 172011.9716227023, -36155.61938152988, 2.3707335916082815, true));
                scenicList.push(new Scenery("pineTree", 172240.78191118073, -36480.86286243764, 1.230800843686641, true));
                scenicList.push(new Scenery("pineTree", 172564.33837152502, -36270.006692151415, 1.095187024810964, true));
                scenicList.push(new Scenery("pineTree", 171769.9353835627, -36407.21010360578, 4.1635577444485765, true));
                scenicList.push(new Scenery("pineTree", 171433.26269408138, -36186.00355824805, 5.447367699237309, true));
                scenicList.push(new Scenery("pineTree", 171005.3174909637, -35800.34634436531, 1.93825461197719, true));
                scenicList.push(new Scenery("pineTree", 171064.12875008996, -35405.67263339519, 2.5372508086928143, true));
                scenicList.push(new Scenery("pineTree", 170820.69387106597, -35608.46796359614, 6.2554921204016045, true));
                scenicList.push(new Scenery("pineTree", 170441.90080885743, -35471.49447315762, 4.8535408587498425, true));
                scenicList.push(new Scenery("pineTree", 170500.37801264794, -35806.687065778184, 2.9897300853138287, true));
                scenicList.push(new Scenery("pineTree", 170274.6102060593, -35638.206123225566, 3.9829819047647637, true));
                scenicList.push(new Scenery("pineTree", 170256.61541037422, -36321.30052325115, 3.1912805782247107, true));
                scenicList.push(new Scenery("pineTree", 170677.19427397262, -34700.880167175936, 0.9362972933147083, true));
                scenicList.push(new Scenery("pineTree", 170391.47608259792, -34913.401224642235, 1.82547377094369, true));
                scenicList.push(new Scenery("pineTree", 171052.20542235597, -34606.41203564703, 4.422742732616861, true));
                scenicList.push(new Scenery("pineTree", 171353.6388886118, -34390.470909137584, 3.596573212668716, true));
                scenicList.push(new Scenery("pineTree", 171269.88497903605, -34841.39025593163, 6.270229312814733, true));

                scenicList.push(new Scenery("pineTree", 178895.56633253908, -36035.31008623733, 0.13476943179088438, true));
                scenicList.push(new Scenery("pineTree", 178442.59033810487, -35611.28127549832, 3.1817402856187207, true));
                scenicList.push(new Scenery("pineTree", 178789.71542077794, -35253.97825020435, 2.0857430890403332, true));
                scenicList.push(new Scenery("pineTree", 178711.55916146003, -34971.60055061648, 4.693192924590278, true));
                scenicList.push(new Scenery("pineTree", 178365.7867307236, -34876.21970859876, 4.526733618885957, true));
                scenicList.push(new Scenery("pineTree", 178282.49069848715, -34550.171960534986, 5.068569004819165, true));
                scenicList.push(new Scenery("pineTree", 178428.3182202172, -34339.32594341253, 4.5832194853317745, true));
                scenicList.push(new Scenery("pineTree", 178955.17453880733, -34350.64695992175, 1.2194655472033136, true));
                scenicList.push(new Scenery("pineTree", 179416.96914716778, -34701.675048245444, 5.963813616333794, true));
                scenicList.push(new Scenery("pineTree", 179558.7940338449, -34399.03495605915, 6.264950023034939, true));
                scenicList.push(new Scenery("pineTree", 179751.7432300382, -34616.56059083369, 3.972578348232227, true));
                scenicList.push(new Scenery("pineTree", 180262.59665133187, -34498.40350161751, 2.2191080996858394, true));
                scenicList.push(new Scenery("pineTree", 179623.87904376799, -34936.96634675579, 3.6903797600662243, true));
                scenicList.push(new Scenery("pineTree", 179325.1301180149, -35132.229555474456, 4.729442998872992, true));
                scenicList.push(new Scenery("pineTree", 179069.41363449016, -35334.719540222635, 0.13632063420232093, true));
                scenicList.push(new Scenery("pineTree", 179357.9724910834, -35519.10631739978, 3.496862925407817, true));
                scenicList.push(new Scenery("pineTree", 179535.52123138207, -35773.05276721801, 0.15488317591449985, true));
                scenicList.push(new Scenery("pineTree", 179863.16275197532, -35545.660550431596, 1.7011517393524436, true));
                scenicList.push(new Scenery("pineTree", 180359.1886791447, -36187.56166755799, 0.42107460476600533, true));
                scenicList.push(new Scenery("pineTree", 179664.20739006952, -37306.32234754649, 2.965423409739384, true));
                scenicList.push(new Scenery("pineTree", 179396.3673681067, -37133.52134764091, 4.14994121033957, true));
                scenicList.push(new Scenery("pineTree", 179331.16644403528, -37418.59312480118, 3.144423302511865, true));
                scenicList.push(new Scenery("pineTree", 178934.20864104998, -37304.90093683769, 2.3341733760218437, true));
                scenicList.push(new Scenery("pineTree", 178729.52587505165, -37111.17659911442, 0.07022955207223777, true));
                scenicList.push(new Scenery("pineTree", 178862.93667994786, -36720.546023599374, 1.1289990042352276, true));
                scenicList.push(new Scenery("pineTree", 178522.50482318277, -36847.812552984644, 1.6014095401834532, true));
                scenicList.push(new Scenery("pineTree", 178229.79655003813, -36939.140133220826, 4.375729125283094, true));
                scenicList.push(new Scenery("pineTree", 178142.49457061183, -36630.34593144554, 5.668344078584333, true));
                scenicList.push(new Scenery("pineTree", 178544.72361222355, -36555.29020004585, 2.142416759025264, true));
                scenicList.push(new Scenery("pineTree", 178748.30323992, -36302.1107922235, 2.386421799545117, true));
                scenicList.push(new Scenery("pineTree", 178274.59706822134, -36332.156480869664, 2.38872138677596, true));
                scenicList.push(new Scenery("pineTree", 177867.30351914192, -36260.49868058838, 6.1588066946511795, true));
                scenicList.push(new Scenery("pineTree", 177658.9316078846, -36557.6959972697, 2.833859978062216, true));
                scenicList.push(new Scenery("pineTree", 177376.13197685467, -36278.679784381915, 4.7584323461297195, true));
                scenicList.push(new Scenery("pineTree", 177698.62458594205, -35725.781593973166, 1.4366445607415357, true));
                scenicList.push(new Scenery("pineTree", 177112.29477577208, -35503.423667790965, 5.722319997686351, true));
                scenicList.push(new Scenery("pineTree", 177077.60640146272, -35796.9177794243, 5.313748379688892, true));
                scenicList.push(new Scenery("pineTree", 177133.03697210178, -36026.70014197239, 4.390968155664418, true));
                scenicList.push(new Scenery("pineTree", 176920.47458994185, -36388.303034340526, 2.206685829955479, true));
                scenicList.push(new Scenery("pineTree", 176753.72395075578, -36005.69966543332, 6.206991136912271, true));
                scenicList.push(new Scenery("pineTree", 176746.59422488633, -35616.71814526355, 4.841016209691755, true));
                scenicList.push(new Scenery("pineTree", 176839.41177161277, -35276.149003138686, 2.268219743615379, true));
                scenicList.push(new Scenery("pineTree", 176994.2757716317, -35095.9571789601, 0.15449517901363188, true));
                scenicList.push(new Scenery("pineTree", 176611.56410015156, -35158.34996643072, 6.207363536159484, true));
                scenicList.push(new Scenery("pineTree", 176358.6663738008, -35417.30289287268, 0.37903606644723353, true));
                scenicList.push(new Scenery("pineTree", 176240.89463756225, -35718.30227391536, 0.08091104878737598, true));
                scenicList.push(new Scenery("pineTree", 175988.16405894174, -35967.82804571437, 1.7985742725354776, true));
                scenicList.push(new Scenery("pineTree", 175641.01597937944, -36063.57955575181, 1.3297790361539628, true));
                scenicList.push(new Scenery("pineTree", 175867.12989288807, -36278.896097771976, 1.482440194880943, true));
                scenicList.push(new Scenery("pineTree", 176183.96508539873, -36465.08490804128, 3.7603197887302184, true));
                scenicList.push(new Scenery("pineTree", 175843.18648268474, -36596.9693019428, 3.7324869262456577, true));
                scenicList.push(new Scenery("pineTree", 175490.88188114396, -36494.697919927115, 0.981944702839586, true));
                scenicList.push(new Scenery("pineTree", 175403.03819624192, -36200.815750747046, 1.7446820612325138, true));
                scenicList.push(new Scenery("pineTree", 175153.06986497695, -36317.01915722862, 0.6745706405775271, true));
                scenicList.push(new Scenery("pineTree", 175074.16982174487, -36046.0629680281, 3.808316425068586, true));
                scenicList.push(new Scenery("pineTree", 175291.47613079406, -35888.679687117256, 1.3002481648814244, true));
                scenicList.push(new Scenery("pineTree", 175266.41367524222, -35602.04547025138, 1.557276485475731, true));
                scenicList.push(new Scenery("pineTree", 174703.11582364707, -36081.47119291185, 3.284165210206193, true));
                scenicList.push(new Scenery("pineTree", 174260.82340722642, -36302.12228827449, 4.435638218576563, true));
                scenicList.push(new Scenery("pineTree", 174135.8204942953, -35944.617660156895, 3.8523640946280837, true));
                scenicList.push(new Scenery("pineTree", 173951.34580217797, -36237.670589033405, 2.0717414001271086, true));
                scenicList.push(new Scenery("pineTree", 174023.55212409515, -36571.71473036152, 5.447223907840681, true));
                scenicList.push(new Scenery("pineTree", 174458.9546092909, -36697.46817223967, 4.278533889957689, true));
                scenicList.push(new Scenery("pineTree", 174113.6910990449, -36869.34651079022, 4.96313548956565, true));
                scenicList.push(new Scenery("pineTree", 173661.04498594647, -36758.40601507953, 5.735628280391482, true));
                scenicList.push(new Scenery("pineTree", 173519.05902964904, -36383.221514079116, 3.4512706267860938, true));
                scenicList.push(new Scenery("pineTree", 173283.58687653232, -36624.521724560065, 3.415301476289014, true));
                scenicList.push(new Scenery("pineTree", 173157.57258057484, -36255.79623781896, 5.332573840356476, true));
                scenicList.push(new Scenery("pineTree", 173294.06328908523, -35880.39904469141, 4.293136253077981, true));
                scenicList.push(new Scenery("pineTree", 172959.74318517596, -35636.57631226057, 0.29252963007637617, true));
                scenicList.push(new Scenery("pineTree", 173028.54721350694, -35253.14765153072, 4.455482964231292, true));
                scenicList.push(new Scenery("pineTree", 173227.88579438743, -35036.83798640508, 2.2841000512214844, true));
                scenicList.push(new Scenery("pineTree", 172883.2593154357, -36366.66420652402, 2.6308508658949092, true));
                scenicList.push(new Scenery("pineTree", 172372.9436780697, -36771.56963608902, 2.13430414371538, true));
                scenicList.push(new Scenery("pineTree", 172087.50097274798, -36888.220985873595, 4.708036214368669, true));
                scenicList.push(new Scenery("pineTree", 172614.28257336526, -36996.66657941363, 0.17670059208778577, true));
                scenicList.push(new Scenery("pineTree", 173083.48854816746, -37011.70134165388, 2.218963267570434, true));
                scenicList.push(new Scenery("pineTree", 173565.5540862528, -37123.604528688484, 4.789966474552752, true));
                scenicList.push(new Scenery("pineTree", 174304.6379384429, -37256.272955351764, 1.618094136424616, true));
                scenicList.push(new Scenery("pineTree", 174142.24471514602, -37599.131183512785, 5.932718798418124, true));
                scenicList.push(new Scenery("pineTree", 174923.424575476, -37173.065967200324, 4.02826336623394, true));
                scenicList.push(new Scenery("pineTree", 175489.94910259885, -37034.72385234314, 5.945393628136794, true));
                scenicList.push(new Scenery("pineTree", 176071.0174380389, -36906.58670368641, 4.569439842662011, true));
                scenicList.push(new Scenery("pineTree", 176693.7426561685, -36736.80494435692, 2.4547010626918997, true));
                scenicList.push(new Scenery("pineTree", 177275.98243669493, -36803.94337578522, 5.7068303890451135, true));
                scenicList.push(new Scenery("pineTree", 177319.62570678385, -37421.96221109792, 4.898188538484105, true));
                scenicList.push(new Scenery("pineTree", 177637.890554729, -37251.748991514454, 2.1276091439508655, true));
                scenicList.push(new Scenery("pineTree", 177628.53198127888, -37614.43263676343, 0.6821014228799649, true));
                scenicList.push(new Scenery("pineTree", 177979.6892890971, -37500.266513260205, 1.303500266991053, true));
                scenicList.push(new Scenery("pineTree", 177988.60691809765, -37213.68816905448, 0.4028119282123729, true));
                scenicList.push(new Scenery("pineTree", 178221.61353331187, -37840.266482350875, 1.6373489745475975, true));
                scenicList.push(new Scenery("pineTree", 178610.8627518406, -37651.24239984951, 0.5519691384777199, true));
                scenicList.push(new Scenery("pineTree", 178996.95961427485, -37648.94415029236, 0.32211355489277516, true));
                scenicList.push(new Scenery("pineTree", 179315.91433092827, -37760.33357230541, 4.628453336406014, true));
                scenicList.push(new Scenery("pineTree", 179247.5657472666, -38079.557459382915, 1.6726087507455718, true));
                scenicList.push(new Scenery("pineTree", 179697.0247038846, -37984.67538742152, 4.976932772537678, true));
                scenicList.push(new Scenery("pineTree", 179588.37347324603, -38206.054812648996, 5.681798827751475, true));
                scenicList.push(new Scenery("pineTree", 179192.43031657595, -38391.88226644002, 1.144325043602162, true));
                scenicList.push(new Scenery("pineTree", 178883.77736003342, -38372.614454880146, 5.2963162960863395, true));
                scenicList.push(new Scenery("pineTree", 178784.8414800938, -38942.430299932144, 0.2734687692716153, true));
                scenicList.push(new Scenery("pineTree", 178435.5091230268, -38435.29458402778, 2.4100694568256373, true));
                scenicList.push(new Scenery("pineTree", 178269.6518534958, -38123.25827802587, 3.0999682961881123, true));
                scenicList.push(new Scenery("pineTree", 178062.86856001255, -38405.05754943205, 2.166917698034172, true));
                scenicList.push(new Scenery("pineTree", 177701.13680092295, -38234.57785666785, 1.8042685036999033, true));
                scenicList.push(new Scenery("pineTree", 178126.0498512914, -38871.83181073557, 5.360728098646753, true));
                scenicList.push(new Scenery("pineTree", 177620.53802852522, -39018.84945813913, 1.4384134748139878, true));
                scenicList.push(new Scenery("pineTree", 177418.41670480403, -38629.165540699236, 4.859153576138824, true));
                scenicList.push(new Scenery("pineTree", 177346.30521453734, -38171.04346413916, 5.106364033126746, true));
                scenicList.push(new Scenery("pineTree", 176987.07351859089, -38124.197211887615, 1.6084031060787631, true));
                scenicList.push(new Scenery("pineTree", 176935.89814596996, -37796.34584538426, 1.6098661623446262, true));
                scenicList.push(new Scenery("pineTree", 176446.38090218802, -37522.860025330105, 3.4377474758130635, true));
                scenicList.push(new Scenery("pineTree", 176615.66882928112, -37221.692881015566, 4.8488476097766995, true));
                scenicList.push(new Scenery("pineTree", 176844.13180411627, -37508.10553272806, 5.1060300255175175, true));
                scenicList.push(new Scenery("pineTree", 177341.2766885256, -37087.62629363055, 2.0755530308484698, true));
                scenicList.push(new Scenery("pineTree", 177591.91423627673, -36811.17576732053, 3.747855903366701, true));
                scenicList.push(new Scenery("pineTree", 174999.0808396993, -36830.551428257495, 1.450328355550573, true));
                scenicList.push(new Scenery("pineTree", 174525.28888472708, -36980.33187051065, 0.16185696164358193, true));
                scenicList.push(new Scenery("pineTree", 174835.60501310605, -38083.9269484948, 2.7887925554619923, true));
                scenicList.push(new Scenery("pineTree", 174553.2812139631, -38364.89341037706, 6.245874365893024, true));
                scenicList.push(new Scenery("pineTree", 174105.1240905877, -38334.94204322682, 5.941593918714055, true));
                scenicList.push(new Scenery("pineTree", 173732.14480955654, -38091.17346012434, 3.5486583325221974, true));
                scenicList.push(new Scenery("pineTree", 173393.96207326493, -37847.32301799806, 2.2299413123330427, true));
                scenicList.push(new Scenery("pineTree", 173860.54207584632, -37814.921615408195, 1.9659818451848332, true));
                scenicList.push(new Scenery("pineTree", 173397.34002509492, -37374.06130682398, 4.696408044685141, true));
                scenicList.push(new Scenery("pineTree", 173021.06940331534, -37290.23640588012, 1.9545678132854896, true));
                scenicList.push(new Scenery("pineTree", 172603.70189215642, -37409.37555338206, 2.392398500930348, true));
                scenicList.push(new Scenery("pineTree", 172259.17437767182, -37635.14794658286, 2.1592164424177698, true));
                scenicList.push(new Scenery("pineTree", 172603.76030973604, -37750.755662343145, 4.692614223669123, true));
                scenicList.push(new Scenery("pineTree", 172763.81891862093, -38074.68131159842, 2.415495304172189, true));
                scenicList.push(new Scenery("pineTree", 172926.8897147952, -38320.5552179704, 1.611162024796073, true));
                scenicList.push(new Scenery("pineTree", 172608.4019856646, -38447.71429360745, 2.00564331471576, true));
                scenicList.push(new Scenery("pineTree", 172876.79481163085, -38615.74894574407, 0.035251777932199975, true));
                scenicList.push(new Scenery("pineTree", 173157.98661017604, -38539.104377336946, 5.812116113310299, true));
                scenicList.push(new Scenery("pineTree", 173148.97342052028, -38851.89427415007, 1.985350116072608, true));
                scenicList.push(new Scenery("pineTree", 172963.58358765178, -39166.710446227, 5.509530767604731, true));
                scenicList.push(new Scenery("pineTree", 173516.8116215788, -38976.86107715354, 4.995967560616957, true));
                scenicList.push(new Scenery("pineTree", 173870.60683757853, -38754.20573329831, 0.6368668557675766, true));
                scenicList.push(new Scenery("pineTree", 174195.50826521945, -38668.485003139496, 1.5049130297619446, true));
                scenicList.push(new Scenery("pineTree", 174104.1743509156, -39025.09105570084, 0.2880000854202926, true));
                scenicList.push(new Scenery("pineTree", 173725.42095697735, -39212.94510558228, 4.520103685134913, true));
                scenicList.push(new Scenery("pineTree", 173912.2443058961, -39389.240272777104, 2.992489621691742, true));
                scenicList.push(new Scenery("pineTree", 173724.72403000074, -39680.9142940858, 3.128465707654436, true));
                scenicList.push(new Scenery("pineTree", 173576.33969532422, -39507.31486698807, 5.007847268937193, true));
                scenicList.push(new Scenery("pineTree", 173568.62211629303, -39807.824794763066, 4.985063720476974, true));
                scenicList.push(new Scenery("pineTree", 173172.28960832165, -39324.96998248984, 3.5451028529585273, true));
                scenicList.push(new Scenery("pineTree", 172856.89584057793, -39456.69663143479, 4.585815621965147, true));
                scenicList.push(new Scenery("pineTree", 172599.03359372474, -39325.768588717576, 0.4509363158293154, true));
                scenicList.push(new Scenery("pineTree", 172579.32865637715, -39548.282759703754, 1.7552060483899847, true));
                scenicList.push(new Scenery("pineTree", 172696.53745053877, -39794.29223737619, 2.101136618455307, true));
                scenicList.push(new Scenery("pineTree", 172258.73256580436, -39281.68176700163, 5.851562902831392, true));
                scenicList.push(new Scenery("pineTree", 172096.2111348413, -38898.608383702776, 3.3309861550083792, true));
                scenicList.push(new Scenery("pineTree", 172302.64248382652, -38626.02044359282, 1.7439829482837808, true));
                scenicList.push(new Scenery("pineTree", 172088.47679961304, -38397.7000212829, 4.552592045295954, true));
                scenicList.push(new Scenery("pineTree", 171944.1778821583, -38087.79099300334, 6.060756623147036, true));
                scenicList.push(new Scenery("pineTree", 172157.0230148753, -37914.1081052144, 5.530218629322396, true));
                scenicList.push(new Scenery("pineTree", 171855.66915159172, -37738.034061572806, 5.957593306127716, true));
                scenicList.push(new Scenery("pineTree", 171852.27083757415, -37410.41797231061, 4.259250507276472, true));
                scenicList.push(new Scenery("pineTree", 171880.333273763, -37092.945856315855, 3.654019914528822, true));
                scenicList.push(new Scenery("pineTree", 171474.81319751256, -37159.00496884157, 1.6581442468736522, true));
                scenicList.push(new Scenery("pineTree", 171270.5867093017, -36864.257790324344, 3.5373885778894265, true));
                scenicList.push(new Scenery("pineTree", 170984.99118462455, -37038.5805093777, 1.8579060164379397, true));
                scenicList.push(new Scenery("pineTree", 170760.8057466552, -36801.57980361978, 4.854010640437992, true));
                scenicList.push(new Scenery("pineTree", 171065.44331690576, -36592.02096870273, 2.7438541787693267, true));
                scenicList.push(new Scenery("pineTree", 171438.19881003632, -36513.51645489391, 0.6723451803423707, true));

                scenicList.push(new Scenery("pineTree", 170743.31235793617, -42022.44128231259, 4.0900463413705825, true));
                scenicList.push(new Scenery("pineTree", 171009.3076946633, -41761.0488170375, 6.040975859539323, true));
                scenicList.push(new Scenery("pineTree", 171322.1967227062, -41872.39020210585, 0.2497320295898024, true));
                scenicList.push(new Scenery("pineTree", 171874.42350260782, -42030.24168641203, 5.105516008043482, true));
                scenicList.push(new Scenery("pineTree", 172124.1161276894, -42451.093139487566, 4.4728325907734785, true));
                scenicList.push(new Scenery("pineTree", 172052.9741019945, -42710.826915875485, 5.84296404180099, true));
                scenicList.push(new Scenery("pineTree", 171650.3049180308, -42657.252525370575, 0.2703983965489201, true));
                scenicList.push(new Scenery("pineTree", 171380.661945634, -42841.043274953736, 2.3003510080301477, true));
                scenicList.push(new Scenery("pineTree", 171007.08960894533, -42794.325154419384, 4.419285207705888, true));
                scenicList.push(new Scenery("pineTree", 170724.78342702545, -42973.64990865262, 2.024835752141228, true));
                scenicList.push(new Scenery("pineTree", 170451.04774855482, -42749.832747243556, 3.254152205644744, true));
                scenicList.push(new Scenery("pineTree", 170822.18271168694, -42553.96040146886, 5.081219386307996, true));
                scenicList.push(new Scenery("pineTree", 170770.57745385537, -42253.13399917243, 4.278134347918887, true));
                scenicList.push(new Scenery("pineTree", 170413.5285234641, -42074.856965503255, 1.913220801245437, true));
                scenicList.push(new Scenery("pineTree", 171944.20915968405, -41503.28204570933, 2.965344690250725, true));
                scenicList.push(new Scenery("pineTree", 172100.93975013768, -41244.62546433381, 5.1683261213002085, true));
                scenicList.push(new Scenery("pineTree", 172349.90136985417, -41619.92516209046, 2.0375468926320375, true));
                scenicList.push(new Scenery("pineTree", 172747.08267353853, -41438.08545978246, 0.2593929494817854, true));
                scenicList.push(new Scenery("pineTree", 172861.4366910236, -41816.46608278567, 1.605651507553527, true));
                scenicList.push(new Scenery("pineTree", 172596.1865310397, -42309.98237100219, 3.6423417855263462, true));
                scenicList.push(new Scenery("pineTree", 172811.86978352518, -42630.112704934734, 3.0423638255905145, true));
                scenicList.push(new Scenery("pineTree", 172654.50587362575, -42961.54751622856, 2.622672510366733, true));
                scenicList.push(new Scenery("pineTree", 173125.3436101297, -42856.409658874225, 4.102070015064837, true));
                scenicList.push(new Scenery("pineTree", 173442.38777993066, -42976.67679345886, 0.4193833340794249, true));
                scenicList.push(new Scenery("pineTree", 173403.60153894234, -42533.98577021345, 2.87554089686992, true));
                scenicList.push(new Scenery("pineTree", 173602.38479766168, -42137.54806685201, 2.449404652853727, true));
                scenicList.push(new Scenery("pineTree", 173846.77592845412, -41794.969022085534, 1.5809969647224065, true));
                scenicList.push(new Scenery("pineTree", 174067.49293655023, -41964.97191897408, 2.4086915793360895, true));
                scenicList.push(new Scenery("pineTree", 174054.3516414847, -41688.58741375173, 5.260687536734444, true));
                scenicList.push(new Scenery("pineTree", 174441.06624592756, -41443.208688822764, 5.388482909601573, true));
                scenicList.push(new Scenery("pineTree", 174603.11665537299, -41115.938814649686, 4.988463962419447, true));
                scenicList.push(new Scenery("pineTree", 174882.82923294968, -40908.694590501975, 3.5782437217498404, true));
                scenicList.push(new Scenery("pineTree", 175159.89580041106, -40997.742676366484, 2.636333398377845, true));
                scenicList.push(new Scenery("pineTree", 175357.3370348301, -41297.85128248586, 2.7491190645622052, true));
                scenicList.push(new Scenery("pineTree", 175067.78354759706, -41410.4901181316, 2.697684127935598, true));
                scenicList.push(new Scenery("pineTree", 175318.80672689853, -41579.11227360688, 2.6376468312211565, true));
                scenicList.push(new Scenery("pineTree", 174870.79173924658, -41757.6473666579, 2.4968198185290498, true));
                scenicList.push(new Scenery("pineTree", 174723.18621399527, -41417.49795963596, 2.684019727080603, true));
                scenicList.push(new Scenery("pineTree", 174563.7645546422, -42002.83158097481, 4.020201064995423, true));
                scenicList.push(new Scenery("pineTree", 174285.60925410528, -42328.226336416265, 4.813136979126355, true));
                scenicList.push(new Scenery("pineTree", 174960.71857878723, -42141.206140285314, 1.3213355330094334, true));
                scenicList.push(new Scenery("pineTree", 175194.26085095038, -42456.69612687295, 5.208742263368691, true));
                scenicList.push(new Scenery("pineTree", 175724.78853585487, -42138.80874402774, 1.685039788769966, true));
                scenicList.push(new Scenery("pineTree", 176464.62176968445, -40934.49411939468, 3.6421656608193618, true));
                scenicList.push(new Scenery("pineTree", 176379.74240113562, -41285.818867621354, 6.180405001327944, true));
                scenicList.push(new Scenery("pineTree", 176615.0175765714, -41659.00802653292, 5.203558177135459, true));
                scenicList.push(new Scenery("pineTree", 177097.06986935827, -41707.50548143129, 5.890737064088051, true));
                scenicList.push(new Scenery("pineTree", 177278.0815240924, -41340.551231955455, 3.376507875915931, true));
                scenicList.push(new Scenery("pineTree", 177369.63571977863, -40887.446201917825, 5.339353472376706, true));
                scenicList.push(new Scenery("pineTree", 178274.65541025158, -40600.811546696736, 2.5020761455307867, true));
                scenicList.push(new Scenery("pineTree", 178135.01346235405, -40325.08226117576, 4.31584179893369, true));
                scenicList.push(new Scenery("pineTree", 178713.35905292863, -40885.77357562065, 6.250715780642538, true));
                scenicList.push(new Scenery("pineTree", 179082.9120027399, -41095.84264327211, 0.38214436928423406, true));
                scenicList.push(new Scenery("pineTree", 178641.18229325739, -41305.19520195043, 4.480906719270065, true));
                scenicList.push(new Scenery("pineTree", 178855.40886673483, -41691.81791999964, 2.065675151829843, true));
                scenicList.push(new Scenery("pineTree", 179330.13371961933, -41829.2032161705, 0.2587379918782414, true));
                scenicList.push(new Scenery("pineTree", 179612.68166229044, -41567.8048891546, 1.8873569580523955, true));
                scenicList.push(new Scenery("pineTree", 180277.17312696553, -40934.54384685299, 5.768729200385868, true));
                scenicList.push(new Scenery("pineTree", 179915.65434418072, -40826.434203229815, 2.25159914886302, true));
                scenicList.push(new Scenery("pineTree", 180068.91920805915, -42066.434652921525, 0.4873727286160415, true));
                scenicList.push(new Scenery("pineTree", 180251.44628858138, -42242.69240203592, 1.9705183756459883, true));
                scenicList.push(new Scenery("pineTree", 179725.19902011062, -42604.73494305257, 5.492024284488477, true));
                scenicList.push(new Scenery("pineTree", 179937.01776229704, -42902.11632391781, 2.7632836986212936, true));
                scenicList.push(new Scenery("pineTree", 180283.9221763952, -42883.806924632576, 1.720508178695543, true));
                scenicList.push(new Scenery("pineTree", 180137.4866335542, -43217.23917696139, 2.0387642685056138, true));
                scenicList.push(new Scenery("pineTree", 180238.97828322215, -43527.8142928543, 0.2344658711160426, true));
                scenicList.push(new Scenery("pineTree", 179911.08335109465, -43365.011026939435, 4.046824997827288, true));
                scenicList.push(new Scenery("pineTree", 179637.36009632752, -43495.37487328289, 0.9533451994400483, true));
                scenicList.push(new Scenery("pineTree", 179333.12266443265, -43358.00781226441, 1.941749613662849, true));
                scenicList.push(new Scenery("pineTree", 179158.9611268208, -43086.92115314707, 6.260878413395338, true));
                scenicList.push(new Scenery("pineTree", 178981.8154571391, -42708.67791436267, 4.361688273537916, true));
                scenicList.push(new Scenery("pineTree", 179405.17161736081, -42777.51898319546, 1.385895599829682, true));
                scenicList.push(new Scenery("pineTree", 179082.68943473639, -42374.18673467271, 5.601328211384309, true));
                scenicList.push(new Scenery("pineTree", 179130.16918128738, -42027.478188933346, 2.4533308292473546, true));
                scenicList.push(new Scenery("pineTree", 178774.3782009785, -42151.77038922922, 5.846991611286455, true));
                scenicList.push(new Scenery("pineTree", 178586.7794768314, -41946.792212288405, 0.9093275740847788, true));
                scenicList.push(new Scenery("pineTree", 178305.84466414465, -42117.67828057694, 2.410576616563969, true));
                scenicList.push(new Scenery("pineTree", 178446.5329236263, -42374.23280895302, 0.723283984010401, true));
                scenicList.push(new Scenery("pineTree", 178404.65958976632, -42823.70784905765, 0.6096201180787443, true));
                scenicList.push(new Scenery("pineTree", 178170.8541805037, -43137.70858450218, 1.9242839781862038, true));
                scenicList.push(new Scenery("pineTree", 177941.55093904803, -42615.09672279747, 0.5029045082682403, true));
                scenicList.push(new Scenery("pineTree", 177533.68118187765, -42744.93232535189, 1.0156397057062214, true));
                scenicList.push(new Scenery("pineTree", 177296.2567195485, -42456.45457964467, 2.2357706654953593, true));
                scenicList.push(new Scenery("pineTree", 176739.33216053204, -42283.65569080997, 0.5210597265011442, true));
                scenicList.push(new Scenery("pineTree", 176012.94245772343, -41874.568116586684, 2.055122563230208, true));
                scenicList.push(new Scenery("pineTree", 175593.7727591413, -41775.989175447, 5.785813484385935, true));
                scenicList.push(new Scenery("pineTree", 175155.259632021, -44270.01601554067, 4.103689211833113, true));
                scenicList.push(new Scenery("pineTree", 175040.95004824077, -43739.64865685161, 0.6107068407950725, true));
                scenicList.push(new Scenery("pineTree", 174807.85376665962, -44380.69589155406, 4.496254947570305, true));
                scenicList.push(new Scenery("pineTree", 174464.64325805006, -44277.20592929736, 4.7941598851702505, true));
                scenicList.push(new Scenery("pineTree", 174061.67035636437, -44348.20721946435, 5.868566219618376, true));
                scenicList.push(new Scenery("pineTree", 174120.59565593148, -44074.51530783503, 4.776690774757093, true));
                scenicList.push(new Scenery("pineTree", 174303.41084697322, -43672.78388592932, 3.650341928689707, true));
                scenicList.push(new Scenery("pineTree", 175479.9898136661, -43435.85680649971, 3.7466243122060745, true));
                scenicList.push(new Scenery("pineTree", 176148.68033083828, -43862.85184746049, 6.256611125346925, true));
                scenicList.push(new Scenery("pineTree", 176613.83897953568, -43531.90610805973, 2.628448731331338, true));
                scenicList.push(new Scenery("pineTree", 176635.7937934804, -43905.492834936034, 3.0724258052939897, true));
                scenicList.push(new Scenery("pineTree", 176958.74466479046, -44206.11054832756, 1.562349986772818, true));
                scenicList.push(new Scenery("pineTree", 177196.3134924723, -44359.890340917234, 1.2427961727351953, true));
                scenicList.push(new Scenery("pineTree", 177361.74741259712, -43862.05714778634, 6.255532153153672, true));
                scenicList.push(new Scenery("pineTree", 177845.05282848908, -43989.461051294325, 3.3928538332985343, true));
                scenicList.push(new Scenery("pineTree", 178198.15567935203, -43788.40290501689, 1.757668816403795, true));
                scenicList.push(new Scenery("pineTree", 178544.06162195766, -43672.939205441646, 3.270930548481582, true));
                scenicList.push(new Scenery("pineTree", 178813.78512792313, -43394.109577723095, 4.0593523777369835, true));
                scenicList.push(new Scenery("pineTree", 179079.82931201858, -43553.97698011309, 4.651604384420612, true));
                scenicList.push(new Scenery("pineTree", 179304.9203255501, -43849.8980673808, 2.0203653788731692, true));
                scenicList.push(new Scenery("pineTree", 179670.95285664167, -43923.892394579874, 5.616783492356396, true));
                scenicList.push(new Scenery("pineTree", 180081.43449962742, -44146.28723616186, 3.3379239842373862, true));
                scenicList.push(new Scenery("pineTree", 180318.85227465956, -43829.05255903597, 0.526043911842086, true));
                scenicList.push(new Scenery("pineTree", 180266.00778440703, -44366.823884502526, 4.654504664562954, true));
                scenicList.push(new Scenery("pineTree", 178661.92090884302, -44248.74612863858, 3.5999076355453195, true));
                scenicList.push(new Scenery("pineTree", 178478.76482874216, -43986.666115117536, 0.7654090596461026, true));
                scenicList.push(new Scenery("pineTree", 178437.28721444623, -44351.45140842113, 5.524701229680614, true));
                scenicList.push(new Scenery("pineTree", 177909.1355853181, -44338.45422517612, 5.151330355724853, true));
                scenicList.push(new Scenery("pineTree", 179038.34569868888, -44326.22007656598, 0.6456322893706996, true));
                scenicList.push(new Scenery("pineTree", 179317.73109189796, -44127.901121485345, 1.7534665655250117, true));
                scenicList.push(new Scenery("pineTree", 179881.16240474713, -44328.81709566744, 4.76147254089656, true));
                scenicList.push(new Scenery("pineTree", 176140.88850665156, -44119.77781290352, 2.4441069196850678, true));
                scenicList.push(new Scenery("pineTree", 175790.2927769896, -43956.885409697614, 0.6928039157697673, true));
                scenicList.push(new Scenery("pineTree", 175862.4418938713, -44245.92423372526, 2.287845730496864, true));
                scenicList.push(new Scenery("pineTree", 175424.14413088877, -44356.087845284674, 3.611674704652889, true));
                scenicList.push(new Scenery("pineTree", 173152.42999640983, -44345.076091261755, 5.193274619166263, true));
                scenicList.push(new Scenery("pineTree", 172466.28597051863, -44335.20234917108, 0.009652845630520867, true));
                scenicList.push(new Scenery("pineTree", 172462.5784635647, -44034.57447027395, 3.2276439428320294, true));
                scenicList.push(new Scenery("pineTree", 172701.1381466386, -43824.589765689394, 0.7594395547916423, true));
                scenicList.push(new Scenery("pineTree", 172261.00221599973, -43739.58693492568, 3.6622246707432917, true));
                scenicList.push(new Scenery("pineTree", 172045.29690419504, -43502.00003581181, 0.9107337226045195, true));
                scenicList.push(new Scenery("pineTree", 171833.8104706892, -43714.080104029825, 5.395023698960767, true));
                scenicList.push(new Scenery("pineTree", 171692.55955117955, -43510.66720468421, 1.3254546451789155, true));
                scenicList.push(new Scenery("pineTree", 171458.52283968698, -43247.15685416591, 2.381560752047285, true));
                scenicList.push(new Scenery("pineTree", 171346.73062579453, -43604.71270032391, 4.0579428267607, true));
                scenicList.push(new Scenery("pineTree", 171551.58809281667, -43893.50421451958, 0.24749482934154793, true));
                scenicList.push(new Scenery("pineTree", 171531.90541468948, -44237.16492896223, 6.060895918463323, true));
                scenicList.push(new Scenery("pineTree", 171954.7569830413, -44284.27730983597, 6.260345843719648, true));
                scenicList.push(new Scenery("pineTree", 170850.94341550706, -43877.98756221549, 2.8966196604734127, true));
                scenicList.push(new Scenery("pineTree", 170299.59087583938, -43861.22568244131, 3.68873845271094, true));
                scenicList.push(new Scenery("pineTree", 170217.2869412234, -43320.697026418944, 1.482868170976293, true));
                scenicList.push(new Scenery("pineTree", 170656.37945398295, -43275.01101857754, 0.042974067311937016, true));
                scenicList.push(new Scenery("pineTree", 170889.79066904812, -43610.84044219799, 1.7765459896209903, true));

                scenicList.push(new Scenery("greatPineTree", 171719.73075736169, -39352.52232682456, 4.937713783105528, 5.355292918770177));
                scenicList.push(new Scenery("greatPineTree", 171512.77844834203, -38974.17642638822, 2.993361856608681, 8.656788987683044));
                scenicList.push(new Scenery("greatPineTree", 171127.55138754006, -38639.09163609902, 4.152841038014553, 6.723354084049788));
                scenicList.push(new Scenery("greatPineTree", 171436.02429414907, -38017.79763064328, 5.777530954568898, 5.916275020598479));
                scenicList.push(new Scenery("greatPineTree", 170744.24376369274, -38322.173328866884, 3.590806655822692, 5.398167997294482));
                scenicList.push(new Scenery("greatPineTree", 170356.8632898687, -38206.945119932694, 2.723033232915959, 7.876228401050251));
                scenicList.push(new Scenery("greatPineTree", 170406.65718996496, -38736.69074119127, 6.257111142470793, 8.64112032069151));
                scenicList.push(new Scenery("greatPineTree", 170828.97835780363, -39082.45003967003, 1.75499658710925, 8.781217584404295));
                scenicList.push(new Scenery("greatPineTree", 170352.22959032934, -39556.22614902191, 1.70516098527108, 8.549953530861181));
                scenicList.push(new Scenery("greatPineTree", 171051.8788416015, -39720.53803099827, 5.872132437637784, 7.4227521867915724));
                scenicList.push(new Scenery("greatPineTree", 171504.73694239472, -39703.31166292441, 6.183146534643377, 5.3620950160643375));
                scenicList.push(new Scenery("greatPineTree", 171248.4779133059, -39280.31858634177, 4.945836425002539, 8.877525963938886));
                scenicList.push(new Scenery("greatPineTree", 171740.3620467533, -40386.18078227149, 0.19389853923195283, 8.67241649123989));
                scenicList.push(new Scenery("greatPineTree", 172655.5727218343, -40715.73714172033, 1.7311160846645206, 5.1503116848620545));
                scenicList.push(new Scenery("greatPineTree", 171893.56577731183, -40921.16559376341, 5.775258498000785, 7.14628979363567));
                scenicList.push(new Scenery("greatPineTree", 171325.11409597812, -41392.83569747423, 2.300214229064785, 5.284535043952336));

                scenicList.push(new Scenery("greatPineTree", 170868.47569623846, -41461.545443887124, 5.254288137778336, 5.255873603774983));
                scenicList.push(new Scenery("greatPineTree", 170455.60319649236, -41016.243933302176, 0.8165840224705266, 5.4478719021468045));
                scenicList.push(new Scenery("greatPineTree", 170876.50457457747, -40417.493868794954, 3.191316135317765, 6.11221583797248));
                scenicList.push(new Scenery("greatPineTree", 171417.8006321181, -40784.43530729608, 2.4180559044954455, 6.3753235133089206));
                scenicList.push(new Scenery("greatPineTree", 172270.4254461122, -40439.95963618942, 5.066051718892989, 6.826295717470328));
                scenicList.push(new Scenery("greatPineTree", 172339.3174740068, -41157.562921549565, 6.1184292552560775, 5.438266594090611));
                scenicList.push(new Scenery("greatPineTree", 172295.0894959255, -42066.35306552251, 2.633645905333006, 8.545209486940859));
                scenicList.push(new Scenery("greatPineTree", 173154.97480936884, -42055.51625418303, 0.609253171637077, 8.768134173861435));
                scenicList.push(new Scenery("greatPineTree", 173634.908702957, -41483.032076407515, 1.839332943743755, 8.891642814310831));
                scenicList.push(new Scenery("greatPineTree", 173695.88049051087, -40919.96916190125, 4.069233484066154, 7.774102907290809));
                scenicList.push(new Scenery("greatPineTree", 173090.52791739564, -40423.837723283614, 5.738674867586093, 5.821644031107322));
                scenicList.push(new Scenery("greatPineTree", 173647.18559187558, -40591.486457218074, 6.057699974862709, 5.777424491975439));
                scenicList.push(new Scenery("greatPineTree", 173105.42780930264, -40872.62438076299, 4.150998688155084, 5.081374016230767));
                scenicList.push(new Scenery("greatPineTree", 174145.90927608396, -41278.25965058848, 2.63713080985089, 6.7807770059715216));
                scenicList.push(new Scenery("greatPineTree", 174381.06315021505, -41704.73131595614, 5.618036462572869, 5.4646953102740765));
                scenicList.push(new Scenery("greatPineTree", 174864.54304277519, -41209.41496673047, 4.610391374688825, 5.795399357595847));
                scenicList.push(new Scenery("greatPineTree", 174514.74241538893, -40796.268278168165, 5.7662212332746, 8.234229107429691));
                scenicList.push(new Scenery("greatPineTree", 174411.02761187745, -40427.1672916608, 0.4713099344017431, 8.872764327281555));
                scenicList.push(new Scenery("greatPineTree", 175081.374703114, -40625.27316169167, 6.1821777777032905, 6.2978548741750355));
                scenicList.push(new Scenery("greatPineTree", 175530.62607761592, -40982.08116912236, 3.7906522362105113, 7.318479605856749));
                scenicList.push(new Scenery("greatPineTree", 175710.0510644062, -41485.55035628051, 0.06255199387356879, 6.981946820616022));
                scenicList.push(new Scenery("greatPineTree", 175275.39433634054, -41946.235649770235, 4.979872400319654, 7.040722087225711));
                scenicList.push(new Scenery("greatPineTree", 174762.481104916, -42388.747609667545, 5.707264542097484, 7.979670672127288));
                scenicList.push(new Scenery("greatPineTree", 173896.6734104921, -42270.32234967155, 0.6680581398239975, 7.1051519231635645));
                scenicList.push(new Scenery("greatPineTree", 173654.6211175845, -42760.11749571878, 1.6514897081836042, 5.970658867828658));
                scenicList.push(new Scenery("greatPineTree", 173062.17028093192, -42310.49221953698, 3.900480617930224, 7.08133300625256));
                scenicList.push(new Scenery("greatPineTree", 172471.15424241027, -42736.47203898638, 5.15955029999241, 5.50611300897241));
                scenicList.push(new Scenery("greatPineTree", 171814.540785776, -43019.73875318108, 5.41512224663372, 7.782398651741795));
                scenicList.push(new Scenery("greatPineTree", 171195.00276880251, -42514.118310883816, 1.6297861849482291, 6.182612967455707));
                scenicList.push(new Scenery("greatPineTree", 171670.17545178614, -41785.68881746355, 4.62341988036248, 6.617938356989682));
                scenicList.push(new Scenery("greatPineTree", 170396.31457663156, -41753.688702420965, 1.8008870492243654, 7.263698422016576));
                scenicList.push(new Scenery("greatPineTree", 170405.3744332074, -42362.588320224204, 0.9537612733132055, 7.0957551887865264));
                scenicList.push(new Scenery("greatPineTree", 171153.0594426989, -42106.653321564205, 5.568665261436887, 6.144064116938358));
                scenicList.push(new Scenery("greatPineTree", 171686.0547047686, -42342.593809847654, 3.428640507481674, 8.357662473880067));
                scenicList.push(new Scenery("greatPineTree", 171085.2870265497, -43190.9264739258, 4.208370760682561, 8.602150719419441));
                scenicList.push(new Scenery("greatPineTree", 170420.96561449277, -43032.560144050025, 1.5940377795388274, 5.903149861576464));
                scenicList.push(new Scenery("greatPineTree", 170502.1806597819, -43591.70108331677, 4.094765684650773, 6.422669092980577));
                scenicList.push(new Scenery("greatPineTree", 170576.43362118708, -44041.515892003015, 4.704329330431105, 5.759383269318556));
                scenicList.push(new Scenery("greatPineTree", 171186.447409402, -44217.41245328067, 4.706692095207437, 7.300322543575444));
                scenicList.push(new Scenery("greatPineTree", 172071.37708501157, -44040.807093381954, 6.092178858684531, 7.063322841139221));
                scenicList.push(new Scenery("greatPineTree", 172851.67387294344, -44224.58738970367, 5.074470807579766, 5.36012086525139));
                scenicList.push(new Scenery("greatPineTree", 172514.86692537216, -43474.52325482938, 3.261682208655155, 8.646963695952632));
                scenicList.push(new Scenery("greatPineTree", 172944.01579704392, -43105.62452630165, 1.7689772908141403, 5.738347018885034));
                scenicList.push(new Scenery("greatPineTree", 173578.68573180385, -43226.4919190194, 3.1758436239914922, 5.463759981664558));
                scenicList.push(new Scenery("greatPineTree", 173180.7455620023, -43843.95093124764, 5.705920642335052, 8.321921042151544));
                scenicList.push(new Scenery("greatPineTree", 174294.67970752058, -43137.491107050555, 4.133714672033113, 5.198210563082292));
                scenicList.push(new Scenery("greatPineTree", 173972.42849855026, -43782.43409254041, 4.526073362277945, 7.121398007287231));
                scenicList.push(new Scenery("greatPineTree", 173566.31535164686, -44188.797882033985, 3.7378546951877776, 7.322684270616635));
                scenicList.push(new Scenery("greatPineTree", 174708.93945095688, -43953.197730864835, 2.3954988987953065, 8.687329209229826));
                scenicList.push(new Scenery("greatPineTree", 175028.14456862042, -43371.1366996349, 1.6193955564495472, 8.279406972974128));
                scenicList.push(new Scenery("greatPineTree", 174949.86635844945, -42729.07698386177, 0.3647661520650778, 6.769269003398671));
                scenicList.push(new Scenery("greatPineTree", 175533.43442633183, -42459.96913570456, 4.4116650642961455, 5.382657680635288));
                scenicList.push(new Scenery("greatPineTree", 176110.04944635372, -41068.092467974835, 5.223016564211623, 6.476460051089849));
                scenicList.push(new Scenery("greatPineTree", 175844.809803942, -40384.697285691414, 3.770210695638455, 6.268784665847036));
                scenicList.push(new Scenery("greatPineTree", 175266.39375288357, -39652.05955183343, 0.6879517088590261, 6.285794015724606));
                scenicList.push(new Scenery("greatPineTree", 176019.90570147458, -39599.11917233077, 4.869803367672452, 7.942404220376634));
                scenicList.push(new Scenery("greatPineTree", 176565.18037019, -39224.79028612949, 1.6586914586198644, 8.725426156727));
                scenicList.push(new Scenery("greatPineTree", 176987.81141846065, -39626.123881093255, 1.296095705677501, 7.786235378486006));
                scenicList.push(new Scenery("greatPineTree", 177637.92918592924, -39676.291668560734, 3.0785338750184184, 6.316437889319227));
                scenicList.push(new Scenery("greatPineTree", 177343.55660172115, -38985.37291300669, 1.5919506120497857, 5.725993123446562));
                scenicList.push(new Scenery("greatPineTree", 178429.84492843942, -39231.16849954604, 4.827555642116574, 7.431418010281335));
                scenicList.push(new Scenery("greatPineTree", 179080.91327015345, -39595.635805608596, 4.6458811477713, 5.013281042722692));
                scenicList.push(new Scenery("greatPineTree", 179703.10119256703, -39591.79381706083, 2.832646000386179, 6.53886817059361));
                scenicList.push(new Scenery("greatPineTree", 179444.2775162725, -39080.751192736025, 4.357809859171052, 5.547278086584211));
                scenicList.push(new Scenery("greatPineTree", 180099.85551465323, -39262.94068934937, 1.6649864349000947, 5.715850446141549));

                scenicList.push(new Scenery("greatPineTree", 177858.03425487172, -43638.61308593498, 1.1286537322625554, 8.006443550998208));
                scenicList.push(new Scenery("greatPineTree", 177501.1669934191, -44197.9960684367, 0.976682885874721, 8.787120604666889));
                scenicList.push(new Scenery("greatPineTree", 176449.44982378616, -44240.24339287907, 5.8506218506541, 7.455576015378336));
                scenicList.push(new Scenery("greatPineTree", 175560.12232362758, -43904.996566367285, 5.648744174421955, 8.966947039278232));
                scenicList.push(new Scenery("greatPineTree", 176091.69666008098, -43277.00790686553, 5.264174218981179, 8.460867558676888));
                scenicList.push(new Scenery("greatPineTree", 176919.79539685804, -43143.89397206064, 1.1884265079233802, 6.399485818949287));
                scenicList.push(new Scenery("greatPineTree", 175534.5390930758, -42918.54971269378, 5.688482018233357, 5.503931756077766));
                scenicList.push(new Scenery("greatPineTree", 176228.27150134544, -42849.29860778996, 5.352594705834169, 7.368242286504029));
                scenicList.push(new Scenery("greatPineTree", 176890.68211364083, -42621.153728588324, 4.141703671706149, 5.65103808627788));
                scenicList.push(new Scenery("greatPineTree", 177326.82312442752, -42994.26917137867, 1.4676585039408432, 5.4698147347243795));
                scenicList.push(new Scenery("greatPineTree", 177743.22613439985, -42393.23446100383, 2.3337381785131956, 8.738182171165988));
                scenicList.push(new Scenery("greatPineTree", 177189.04019074727, -42076.864151575086, 2.7807995476143645, 7.896502176840262));
                scenicList.push(new Scenery("greatPineTree", 176462.31344291192, -42044.06261507577, 3.0764569820394048, 5.419394026421582));
                scenicList.push(new Scenery("greatPineTree", 175997.2345985236, -42435.00384442636, 1.8864885890467817, 6.715744939389755));
                scenicList.push(new Scenery("greatPineTree", 176224.9034165398, -41522.34090910057, 4.642512049384962, 8.217373357310692));

                scenicList.push(new Scenery("greatPineTree", 179922.35410082183, -38802.50635660859, 2.5551960037442387, 5.493999398812298));
                scenicList.push(new Scenery("greatPineTree", 180177.5812194248, -38492.29850031801, 5.781606104548895, 6.3059299278214285));
                scenicList.push(new Scenery("greatPineTree", 179564.9998638973, -38503.86344915444, 3.5547511443883795, 6.744237951085992));
                scenicList.push(new Scenery("greatPineTree", 179079.07971887718, -38733.44339123765, 3.726063239589831, 8.203659646845118));
                scenicList.push(new Scenery("greatPineTree", 178380.42751474408, -38751.565097974584, 1.4366253051860436, 5.346808087743619));
                scenicList.push(new Scenery("greatPineTree", 177914.37720400214, -39263.340077356705, 1.7555324688603124, 8.218789596643195));
                scenicList.push(new Scenery("greatPineTree", 177743.2804934957, -38709.30889586032, 6.208551403742845, 6.724943678058004));
                scenicList.push(new Scenery("greatPineTree", 177109.8224387708, -38524.6936966419, 3.82148798509905, 7.5703489262545745));
                scenicList.push(new Scenery("greatPineTree", 176785.8613763066, -38725.81362959986, 1.0076731705917887, 8.967014272956401));
                scenicList.push(new Scenery("greatPineTree", 176180.62355461117, -38795.81513366833, 6.166373694567361, 6.907506728119065));
                scenicList.push(new Scenery("greatPineTree", 175978.32954243553, -39087.0868450923, 4.4606785729413785, 5.0785532381524945));
                scenicList.push(new Scenery("greatPineTree", 175549.07631119897, -39324.53285112606, 0.4508663845873332, 5.460872533673229));
                scenicList.push(new Scenery("greatPineTree", 175118.92389721668, -39113.58079489598, 3.665804520368717, 5.965247338576842));
                scenicList.push(new Scenery("greatPineTree", 174838.713085072, -39413.41445391958, 4.408873146338454, 6.200862442719869));
                scenicList.push(new Scenery("greatPineTree", 174612.70858816543, -39577.466300524546, 5.291710738227556, 8.507659936300696));
                scenicList.push(new Scenery("greatPineTree", 174185.5196788259, -39678.638498695895, 3.16624494869299, 7.49048668911395));
                scenicList.push(new Scenery("greatPineTree", 174305.1749235288, -39313.19377520361, 3.401706932282873, 5.271230009935281));
                scenicList.push(new Scenery("greatPineTree", 174536.1304390449, -38892.78218883531, 6.146416172910951, 7.703103045294964));
                scenicList.push(new Scenery("greatPineTree", 174803.4495789359, -38560.702117119254, 0.23312663505004097, 7.311762398000206));
                scenicList.push(new Scenery("greatPineTree", 175247.51941481073, -38492.49597560532, 0.343497961289117, 8.779066382052786));
                scenicList.push(new Scenery("greatPineTree", 175897.03074591127, -38284.09104702059, 3.8878279965248943, 8.590888920775035));
                scenicList.push(new Scenery("greatPineTree", 176621.81297164276, -38013.74672902516, 2.579751927776945, 8.462889169083915));
                scenicList.push(new Scenery("greatPineTree", 177211.74279823934, -37730.68620857769, 5.262515311467138, 5.4517605831725));
                scenicList.push(new Scenery("greatPineTree", 177877.207608978, -37975.78535968427, 5.629205156884256, 5.351442773847349));
                scenicList.push(new Scenery("greatPineTree", 178742.78939121388, -38048.91359889775, 0.4951556627739793, 8.389909653185157));
                scenicList.push(new Scenery("greatPineTree", 179717.82242534574, -37637.41868697858, 6.062448002903121, 6.250062517113584));
                scenicList.push(new Scenery("greatPineTree", 180009.24806869743, -37050.478776745105, 1.2528501957339335, 8.46537566083437));
                scenicList.push(new Scenery("greatPineTree", 179093.52141075276, -37016.43136762691, 2.753262981827087, 5.309221918231933));
                scenicList.push(new Scenery("greatPineTree", 179142.00897483435, -36440.79859594701, 5.678776042366503, 8.278920857515));
                scenicList.push(new Scenery("greatPineTree", 179729.82029351685, -36400.19320448811, 0.5678729215562253, 7.1363856073513094));
                scenicList.push(new Scenery("greatPineTree", 180158.81420330604, -35685.32637991439, 4.15122361146874, 5.889486328895472));
                scenicList.push(new Scenery("greatPineTree", 179559.084274462, -35252.01838974697, 0.6189892267750421, 5.326828412759924));
                scenicList.push(new Scenery("greatPineTree", 180041.166289399, -34847.628583406666, 1.5312601301201283, 8.913391815767923));
                scenicList.push(new Scenery("greatPineTree", 179951.57352752404, -34331.93263245779, 1.1092989245230076, 8.529818639358766));
                scenicList.push(new Scenery("greatPineTree", 179275.67895662494, -34423.79233758042, 4.196068968281407, 5.325663717519814));
                scenicList.push(new Scenery("greatPineTree", 179155.21467886952, -34891.19393032386, 3.7823615873362137, 7.28644727024685));
                scenicList.push(new Scenery("greatPineTree", 178707.1826016911, -34606.367850880204, 4.87298029253165, 7.814194401171082));
                scenicList.push(new Scenery("greatPineTree", 178075.15462726197, -34374.391742776126, 1.2523396926737234, 5.489671682672995));
                scenicList.push(new Scenery("greatPineTree", 178026.04913901608, -34867.59589595123, 3.8508878168779592, 6.479216160676136));
                scenicList.push(new Scenery("greatPineTree", 177203.47217301617, -34620.863473241094, 2.4438857411029415, 7.4144974020855745));
                scenicList.push(new Scenery("greatPineTree", 176519.66552917744, -34351.34920770529, 0.07557438838922254, 6.830968047078416));
                scenicList.push(new Scenery("greatPineTree", 176132.6660254071, -34890.48714323703, 5.6978715389350505, 6.741637026850367));
                scenicList.push(new Scenery("greatPineTree", 175470.65808180222, -34394.699276776155, 4.686192856809989, 7.595013003294957));
                scenicList.push(new Scenery("greatPineTree", 175042.6242223042, -34925.98838501877, 1.7661218524577855, 6.7878299324336195));
                scenicList.push(new Scenery("greatPineTree", 174078.52851450452, -34577.741927780495, 4.6883193975171515, 8.10633479501489));
                scenicList.push(new Scenery("greatPineTree", 173406.48829721144, -34406.92048334036, 1.2640042089036156, 7.572992751270724));
                scenicList.push(new Scenery("greatPineTree", 173563.0653014862, -34887.64730062003, 2.9372813955605492, 6.308290633989832));
                scenicList.push(new Scenery("greatPineTree", 174055.12520656353, -35343.93736777423, 0.19055631647808616, 6.029998040694894));
                scenicList.push(new Scenery("greatPineTree", 173352.461174681, -35448.884977395464, 2.6423263702304864, 7.432235426476245));
                scenicList.push(new Scenery("greatPineTree", 172495.47691096118, -35055.619185396936, 5.150326893063052, 6.8919985573987415));
                scenicList.push(new Scenery("greatPineTree", 171832.80023165402, -34499.32238877403, 1.2660241869659876, 7.393531804572172));
                scenicList.push(new Scenery("greatPineTree", 170757.72390744262, -34340.18407845659, 1.895389365772334, 7.404156812612005));
                scenicList.push(new Scenery("greatPineTree", 170331.2571810343, -34538.48539238044, 5.84730826536993, 6.8418529584455285));
                scenicList.push(new Scenery("greatPineTree", 170847.35968239667, -35097.2494529663, 1.4323690132023321, 8.97530875875581));
                scenicList.push(new Scenery("greatPineTree", 171567.31840240554, -34858.77721423855, 2.6425426692465117, 5.4538992534705875));
                scenicList.push(new Scenery("greatPineTree", 171469.99853721415, -35627.425346174256, 4.494390417753397, 8.920087851025924));
                scenicList.push(new Scenery("greatPineTree", 171085.59760544758, -36205.80946402439, 4.404528876664261, 8.661573566330823));
                scenicList.push(new Scenery("greatPineTree", 170513.8964784917, -36585.57023874091, 2.4530945820692334, 6.014491103872485));
                scenicList.push(new Scenery("greatPineTree", 170540.33693717918, -37099.72419142685, 3.355765518213765, 5.34673348812218));
                scenicList.push(new Scenery("greatPineTree", 170345.842035686, -37681.433747016876, 1.2959643874731597, 7.867064230330499));
                scenicList.push(new Scenery("greatPineTree", 170930.56900522456, -37833.07109777267, 4.854570139877659, 5.1790112067615235));
                scenicList.push(new Scenery("greatPineTree", 171494.57572160117, -37494.12734909862, 6.228640435208356, 6.883750776181966));
                scenicList.push(new Scenery("greatPineTree", 172201.1859002371, -37219.23976451025, 5.419565332165554, 7.082177952606682));
                scenicList.push(new Scenery("greatPineTree", 172764.6383080225, -36700.62092103351, 2.5528158479150127, 6.4615087718983855));
                scenicList.push(new Scenery("greatPineTree", 172857.60043156042, -35968.071740111576, 2.6456386934548384, 7.54906208138194));
                scenicList.push(new Scenery("greatPineTree", 173669.07287383487, -35956.33767664632, 2.0664334648865377, 8.736412940045753));
                scenicList.push(new Scenery("greatPineTree", 174546.39395885347, -35784.907440623916, 1.1386679596136144, 5.432942706779681));
                scenicList.push(new Scenery("greatPineTree", 174759.0086696401, -36451.70124734181, 3.92463292347094, 8.299497707024255));
                scenicList.push(new Scenery("greatPineTree", 176402.6591388589, -36078.505519719256, 0.025354431388773465, 8.457566882285047));
                scenicList.push(new Scenery("greatPineTree", 176183.54596368675, -37271.31317863925, 1.9382977952462743, 5.046160272195651));
                scenicList.push(new Scenery("greatPineTree", 178377.0863254836, -37326.65895392435, 2.7335309397643455, 7.775860186266235));
                scenicList.push(new Scenery("greatPineTree", 179999.84869322524, -40521.612594036065, 3.2741091002688334, 5.1946683231537385));
                scenicList.push(new Scenery("greatPineTree", 179395.08381506221, -40869.67532564486, 1.5401783988961755, 7.832319416872659));
                scenicList.push(new Scenery("greatPineTree", 178788.79432134243, -40475.424563249624, 3.7441428976580866, 7.550728743353189));
                scenicList.push(new Scenery("greatPineTree", 178308.61364218994, -40971.89806416173, 0.14654730363127766, 7.805320884916831));
                scenicList.push(new Scenery("greatPineTree", 177711.9671512853, -40594.14991301935, 1.3740661055908474, 8.285814334050265));
                scenicList.push(new Scenery("greatPineTree", 176883.64878114878, -40472.51617010932, 4.293932559906584, 6.6918526531741485));
                scenicList.push(new Scenery("greatPineTree", 176849.85508481722, -41437.0618808714, 5.154892111271813, 5.152649437352176));
                scenicList.push(new Scenery("greatPineTree", 177628.41650908047, -41706.228959598564, 2.0746449382633405, 7.450206270107013));
                scenicList.push(new Scenery("greatPineTree", 179144.3735092939, -41410.21506596972, 2.0085386720623104, 5.790560639932271));
                scenicList.push(new Scenery("greatPineTree", 180012.81061127433, -41544.18894931518, 0.9200624527966486, 8.897590667461333));
                scenicList.push(new Scenery("greatPineTree", 179623.77633203956, -42214.654774377566, 1.8374338668840884, 8.08276359260348));
                scenicList.push(new Scenery("greatPineTree", 180072.61105100132, -42571.388299298145, 4.448469887196169, 6.550904099437816));
                scenicList.push(new Scenery("greatPineTree", 179517.75185269865, -43112.82910951642, 0.01222822281630849, 6.7973125479238705));
                scenicList.push(new Scenery("greatPineTree", 179956.57660763097, -43760.424766788106, 0.30153850447590563, 7.070269542460372));
                scenicList.push(new Scenery("greatPineTree", 178923.6515509024, -43965.894201541465, 0.23551261803416176, 6.482972627193277));
                scenicList.push(new Scenery("greatPineTree", 179627.8225935485, -44244.966847735326, 1.0033050017705107, 7.149552526104942));
                scenicList.push(new Scenery("greatPineTree", 178403.06077852004, -43413.368057137115, 0.3755854258708966, 7.000814450125288));
                scenicList.push(new Scenery("greatPineTree", 178756.2759883966, -43011.959421522915, 0.4345804528295501, 5.496860772986679));
                scenicList.push(new Scenery("greatPineTree", 177811.27254546035, -42911.41491277619, 5.3417124253867225, 6.70994095693998));
                scenicList.push(new Scenery("greatPineTree", 178129.16856444502, -42301.653579953556, 2.664247598730421, 5.022581615167886));
                scenicList.push(new Scenery("greatPineTree", 178351.36903484995, -41758.012648223594, 0.7221744048526686, 7.2537504228425975));
                scenicList.push(new Scenery("greatPineTree", 177797.08913192162, -41199.66054363584, 0.021188474494384834, 8.417712978780685));
                scenicList.push(new Scenery("greatPineTree", 176854.90558579398, -41006.47026976155, 4.214974951255122, 5.802795428546554));
                scenicList.push(new Scenery("greatPineTree", 176315.73062355517, -40540.783648069184, 3.248310924475617, 8.543061207509574));
                scenicList.push(new Scenery("greatPineTree", 174304.58607108466, -37945.81552423671, 3.4216905841031395, 8.343491515480503));
                scenicList.push(new Scenery("greatPineTree", 173234.94291082385, -38260.174893370604, 2.834423845097545, 7.786540953665171));
                scenicList.push(new Scenery("greatPineTree", 172588.2863233181, -38959.08346215821, 4.546655267810437, 7.220425955238448));
                scenicList.push(new Scenery("greatPineTree", 172210.66163777118, -39680.561263184645, 0.3833124795932673, 7.386701598906804));
                scenicList.push(new Scenery("greatPineTree", 173224.01753697515, -39795.14354657443, 3.611333990635797, 8.437918660176393));
                scenicList.push(new Scenery("greatPineTree", 172422.62589496098, -38126.129671089504, 4.125703266061271, 8.430188620668666));
                scenicList.push(new Scenery("greatPineTree", 172962.2772523925, -37722.253586388564, 5.377940261569573, 8.3192945110129));
                scenicList.push(new Scenery("greatPineTree", 173741.5889514417, -37518.24590468149, 0.601229718958821, 7.463443041373858));
                scenicList.push(new Scenery("greatPineTree", 174736.62577050235, -37623.1649149489, 2.4559511963834053, 6.83174871823138));
                scenicList.push(new Scenery("greatPineTree", 176068.544622667, -37675.55807234684, 1.9537801122588838, 7.941542338751177));
                scenicList.push(new Scenery("greatPineTree", 176915.20628035686, -37167.979650889414, 1.868922007687245, 6.146837965564504));
                scenicList.push(new Scenery("greatPineTree", 177874.90693819607, -36873.90665393192, 4.179159535337303, 6.229631853733735));
                scenicList.push(new Scenery("greatPineTree", 178352.83499806843, -36061.28223381746, 0.580816347879349, 8.352843386651404));
                scenicList.push(new Scenery("greatPineTree", 178463.85129192934, -35169.12983474308, 1.0578910579740237, 5.16991456497461));
                scenicList.push(new Scenery("greatPineTree", 177295.96884857793, -35239.86211203528, 2.4471066722373576, 6.116119696982917));
                scenicList.push(new Scenery("greatPineTree", 175918.90430069077, -35610.4755413048, 4.573330643652072, 7.007271647436375));
                scenicList.push(new Scenery("greatPineTree", 174582.68712242306, -34341.879677416066, 3.5030015547704116, 5.117271919757792));
                scenicList.push(new Scenery("greatPineTree", 178868.43097165207, -35610.36184033439, 2.4106272957859947, 5.463805414393963));
                scenicList.push(new Scenery("greatPineTree", 176955.12242667115, -43871.246616601224, 1.7547937253611232, 5.992584169847941));
                scenicList.push(new Scenery("greatPineTree", 178151.31069423407, -44138.59963232043, 0.3639883776905117, 6.660308534500285));
                scenicList.push(new Scenery("greatPineTree", 173471.17625600554, -38582.19740348349, 3.392318179593832, 6.624320717464783));
                scenicList.push(new Scenery("greatPineTree", 171750.44326934003, -38454.13952255422, 2.6988132417560675, 7.428787536058382));
                scenicList.push(new Scenery("greatPineTree", 171794.73062532698, -36777.943612644405, 2.6086279111031625, 6.021799657360728));
                scenicList.push(new Scenery("greatPineTree", 171807.6007916212, -35885.087254989136, 4.769698147257885, 7.930039218587367));
                scenicList.push(new Scenery("greatPineTree", 172730.4505773393, -35340.37731883938, 0.9501227173852141, 5.509900795060888));
                scenicList.push(new Scenery("greatPineTree", 179288.15517837077, -36023.37843157489, 5.1203932848615965, 6.293886862412821));

                scenicList.push(new Scenery("pineTree", 169058.55174950208, -38706.64245118669,5.691921917628475, true, undefined)); //copied s4w16
                scenicList.push(new Scenery("pineTree", 168854.97235847462, -38235.785186876026,0.05289030536794887, true, undefined)); //copied s4w16
                scenicList.push(new Scenery("pineTree", 169338.8506561681, -38262.798385470305,1.5714455860292418, true, undefined)); //copied s4w16
                scenicList.push(new Scenery("pineTree", 169249.72141236786, -37911.427720627646,0.961839818084445, true, undefined)); //copied s4w16
                scenicList.push(new Scenery("pineTree", 169719.79273640382, -37560.92083339676,4.585503009676942, true, undefined)); //copied s4w16
                scenicList.push(new Scenery("pineTree", 170029.2115329103, -37654.32253297042,3.685391955694834, true, undefined)); //copied s4w16
                scenicList.push(new Scenery("pineTree", 170021.312724564, -37221.81623430588,3.1020211956557344, true, undefined)); //copied s4w16
                scenicList.push(new Scenery("pineTree", 169968.7126642427, -38784.74552294857,1.2618521578507313, true, undefined)); //copied s4w16
                scenicList.push(new Scenery("pineTree", 170004.86854016889, -39244.07794680573,2.5202320891320915, true, undefined)); //copied s4w16
                scenicList.push(new Scenery("pineTree", 169041.01371906907, -39034.24067220258,4.215817251064228, true, undefined)); //copied s4w16
                scenicList.push(new Scenery("pineTree", 169354.8984662451, -39273.611309993845,4.739197419498083, true, undefined)); //copied s4w16
                scenicList.push(new Scenery("pineTree", 169244.93998247734, -39683.927161091386,0.41481417928694414, true, undefined)); //copied s4w16
                scenicList.push(new Scenery("pineTree", 169450.13212154628, -35824.41726631991,3.827135538554371, true, undefined)); //copied s4w16
                scenicList.push(new Scenery("pineTree", 168963.07584570404, -35594.516825671315,2.6782681507188757, true, undefined)); //copied s4w16
                scenicList.push(new Scenery("pineTree", 169241.20560400983, -35489.20344182827,1.43196975490787, true, undefined)); //copied s4w16
                scenicList.push(new Scenery("pineTree", 168857.6256376398, -35321.18220720216,5.135855301912619, true, undefined)); //copied s4w16
                scenicList.push(new Scenery("pineTree", 169512.12699879752, -35128.82857577576,3.7316345368350414, true, undefined)); //copied s4w16
                scenicList.push(new Scenery("pineTree", 169993.74556649927, -35296.67516800034,4.921793333531037, true, undefined)); //copied s4w16
                scenicList.push(new Scenery("pineTree", 169348.10288521938, -36905.032006723784,1.6539394623667885, true, undefined)); //copied s4w16
                scenicList.push(new Scenery("pineTree", 168844.45027100603, -42378.19893524022,4.538789345226248, true, undefined)); //copied s4w16
                scenicList.push(new Scenery("pineTree", 169114.0232217671, -42085.229301285086,6.039488459366362, true, undefined)); //copied s4w16
                scenicList.push(new Scenery("pineTree", 169419.20902019198, -42007.73253915804,4.754077167765279, true, undefined)); //copied s4w16
                scenicList.push(new Scenery("pineTree", 169728.34479901264, -42127.068487999706,0.8566140289114459, true, undefined)); //copied s4w16
                scenicList.push(new Scenery("pineTree", 169979.76706896114, -42261.74347234474,3.2254593480833114, true, undefined)); //copied s4w16
                scenicList.push(new Scenery("pineTree", 169633.55659035197, -42521.1440985869,5.138404084970625, true, undefined)); //copied s4w16
                scenicList.push(new Scenery("pineTree", 169939.99231967056, -42958.88338933894,2.6497743917145105, true, undefined)); //copied s4w16
                scenicList.push(new Scenery("pineTree", 169906.21980299574, -43251.55886457202,4.226409076283598, true, undefined)); //copied s4w16
                scenicList.push(new Scenery("pineTree", 169570.3519351504, -43481.15438785555,5.21241461357354, true, undefined)); //copied s4w16
                scenicList.push(new Scenery("pineTree", 169708.73561840324, -43756.62145186313,0.8757901820981214, true, undefined)); //copied s4w16
                scenicList.push(new Scenery("pineTree", 169751.477951521, -44073.525102532934,4.70203871736361, true, undefined)); //copied s4w16
                scenicList.push(new Scenery("pineTree", 169985.52712315094, -43895.18914020069,4.133653593611627, true, undefined)); //copied s4w16
                scenicList.push(new Scenery("pineTree", 169761.34992132446, -44310.887103258945,2.1206855894264023, true, undefined)); //copied s4w16
                scenicList.push(new Scenery("pineTree", 169174.46846774218, -44247.060648018625,0.6190061311231967, true, undefined)); //copied s4w16
                scenicList.push(new Scenery("pineTree", 168989.6945423606, -42981.37434191675,0.14559708339935537, true, undefined)); //copied s4w16
                scenicList.push(new Scenery("pineTree", 169217.92045901614, -42779.75465929865,0.28907646940043386, true, undefined)); //copied s4w16
                scenicList.push(new Scenery("pineTree", 169289.26490969196, -42543.49384634165,1.7129650219708068, true, undefined)); //copied s4w16
                scenicList.push(new Scenery("pineTree", 169103.9955591877, -42344.886177039385,1.622364976496885, true, undefined)); //copied s4w16
                scenicList.push(new Scenery("greatPineTree", 169169.55271206796, -37466.14642010395,4.793099674904905, 8.65332669371196, undefined)); //copied s4w16
                scenicList.push(new Scenery("greatPineTree", 169670.59939587364, -37170.4568271063,1.9422246621663826, 6.20517826435232, undefined)); //copied s4w16
                scenicList.push(new Scenery("greatPineTree", 169965.50657116392, -36798.690143685424,4.500238606931384, 7.401833613568786, undefined)); //copied s4w16
                scenicList.push(new Scenery("greatPineTree", 169515.10485669327, -36365.47799201502,1.2526928648687556, 6.710429272691841, undefined)); //copied s4w16
                scenicList.push(new Scenery("greatPineTree", 169847.5464255397, -36108.30404191523,2.2488411847577936, 6.34714702217782, undefined)); //copied s4w16
                scenicList.push(new Scenery("greatPineTree", 169711.11496885703, -35465.4371435182,5.530288904169334, 5.029056343916446, undefined)); //copied s4w16
                scenicList.push(new Scenery("greatPineTree", 169973.20292404562, -34922.95697533655,5.761287142399532, 5.550144577059697, undefined)); //copied s4w16
                scenicList.push(new Scenery("greatPineTree", 169609.69680027734, -34404.01305240752,3.34949803331114, 5.256752575426419, undefined)); //copied s4w16
                scenicList.push(new Scenery("greatPineTree", 168895.13472126977, -34541.19131520228,0.4375938958578537, 7.530806953346081, undefined)); //copied s4w16
                scenicList.push(new Scenery("greatPineTree", 168834.04468539843, -36758.18950391146,0.5594483409164819, 8.769623429347549, undefined)); //copied s4w16
                scenicList.push(new Scenery("greatPineTree", 169038.9793552902, -35926.67612870065,6.262352970805135, 5.112400708323228, undefined)); //copied s4w16
                scenicList.push(new Scenery("greatPineTree", 169735.9297116679, -39551.50895373419,4.073484291795145, 6.7882610151701375, undefined)); //copied s4w16
                scenicList.push(new Scenery("greatPineTree", 168891.80964548452, -39450.141734291145,4.7335453687558395, 8.675741756713649, undefined)); //copied s4w16
                scenicList.push(new Scenery("greatPineTree", 169582.0352352452, -38964.21560515436,2.90786015866843, 8.021905474897594, undefined)); //copied s4w16
                scenicList.push(new Scenery("greatPineTree", 169700.59901196617, -37984.6817214766,1.9616541761389654, 7.174021791347676, undefined)); //copied s4w16
                scenicList.push(new Scenery("greatPineTree", 169051.28994608522, -34874.59304262111,5.335191875878538, 7.80311775557516, undefined)); //copied s4w16
                scenicList.push(new Scenery("greatPineTree", 169841.1334881423, -38367.5796241951,2.3857834269287355, 8.021001263128237, undefined)); //copied s4w16
                scenicList.push(new Scenery("greatPineTree", 168902.66102930313, -40523.82818448133,5.911607228987742, 5.298032829575025, undefined)); //copied s4w16
                scenicList.push(new Scenery("greatPineTree", 169548.49327166934, -40408.85334082473,0.3789409651896846, 7.617906338597383, undefined)); //copied s4w16
                scenicList.push(new Scenery("greatPineTree", 169937.3064731585, -40638.175026058336,0.8054856292305551, 6.575010688825312, undefined)); //copied s4w16
                scenicList.push(new Scenery("greatPineTree", 169498.9476777465, -40934.241550526465,1.728378141248588, 8.127463267087172, undefined)); //copied s4w16
                scenicList.push(new Scenery("greatPineTree", 169099.26465684283, -41413.29312915288,5.948590455009477, 7.3766600114641525, undefined)); //copied s4w16
                scenicList.push(new Scenery("greatPineTree", 169855.47480029485, -41344.7967636367,4.892275617491367, 6.78277395537397, undefined)); //copied s4w16
                scenicList.push(new Scenery("greatPineTree", 169555.85201319633, -41699.33276541993,0.5364161864558222, 7.813885530406017, undefined)); //copied s4w16
                scenicList.push(new Scenery("greatPineTree", 170042.15819560198, -41978.165884581955,4.608214708335242, 5.059666742926135, undefined)); //copied s4w16
                scenicList.push(new Scenery("greatPineTree", 169020.47333064242, -41809.75357839925,2.576127978709913, 6.219759677594126, undefined)); //copied s4w16
                scenicList.push(new Scenery("greatPineTree", 169470.1854433404, -42298.776290854636,2.130606349885234, 5.191936387705851, undefined)); //copied s4w16
                scenicList.push(new Scenery("greatPineTree", 169927.97895954293, -42602.38408468578,3.8824488081815454, 5.73002544778805, undefined)); //copied s4w16
                scenicList.push(new Scenery("greatPineTree", 169521.21965596778, -43058.388403106,5.015491776174606, 7.71411345109911, undefined)); //copied s4w16
                scenicList.push(new Scenery("greatPineTree", 169893.7229097246, -43561.36365295007,2.468952004370057, 5.880069505288903, undefined)); //copied s4w16
                scenicList.push(new Scenery("greatPineTree", 169411.6027720102, -44160.11468351922,1.404869041744697, 6.924121493620623, undefined)); //copied s4w16
                scenicList.push(new Scenery("greatPineTree", 170087.3759630746, -44226.33332719314,5.904751712970305, 7.784624327866614, undefined)); //copied s4w16
                scenicList.push(new Scenery("greatPineTree", 169261.68110095186, -43669.2894284348,4.0406159520695875, 6.74762028387098, undefined)); //copied s4w16
                scenicList.push(new Scenery("greatPineTree", 168793.5909836501, -44297.076755185495,1.5033288354076466, 8.946517868628401, undefined)); //copied s4w16
                scenicList.push(new Scenery("greatPineTree", 168918.36976035737, -43932.00676287632,5.97127749699335, 7.1377580652094155, undefined)); //copied s4w16
                scenicList.push(new Scenery("greatPineTree", 168839.17116013612, -42713.27274938798,3.5811509651010556, 7.884825540488067, undefined)); //copied s4w16
                scenicList.push(new Scenery("aberdomPlant", 169132.85589856052, -42264.13993199374,3, true, undefined)); //copied s4w16
                scenicList.push(new Scenery("ciprinPlant", 168809.72207890978, -42224.35502288766,6, true, undefined)); //copied s4w16
                scenicList.push(new Scenery("beunumPlant", 168849.0224817882, -41932.885307345394,-7.5, true, undefined)); //copied s4w16


                //resources
                //plants
                //scenicList.push(new Scenery("eyewortPlant", 3400, 2400, 2.2, true));
                //scenicList.push(new Scenery("sciltPlant", 3400, 2400, 1.6, true, 1));
                //scenicList.push(new Scenery("korceidaPlant", 3400, 2400, 2, true));
                //scenicList.push(new Scenery("lauminPlant", 3600, 2400, 2, true));
                //scenicList.push(new Scenery("jollePlant", 3400, 2400, 0.2, true));
                //scenicList.push(new Scenery("porstolPlant", 3750, 2500, 0, true));
                //scenicList.push(new Scenery("falloryPlant", 3750, 2500, 0, true));
                //scenicList.push(new Scenery("palggaPlant", 3750, 2500, 0, true));
                //scenicList.push(new Scenery("aberdomPlant", 3750, 2500, 0, true));
                //scenicList.push(new Scenery("beunumPlant", 3750, 2500, 0, true));
                //scenicList.push(new Scenery("ciprinPlant", 3750, 2500, 0, true));
                //scenicList.push(new Scenery("bleedingHeartPlant", 3750, 2500, 0, true));
                //scenicList.push(new Scenery("marigoldPlant", 3750, 2500, 0, true));
                //scenicList.push(new Scenery("hoilPlant", 3750, 2500, 0, true));
                //scenicList.push(new Scenery("callopPlant", 3750, 2500, 0, true));
                //scenicList.push(new Scenery("darbPlant", 3750, 2500, 0, true));
                //scenicList.push(new Scenery("kofkePlant", 3750, 2500, 0, true));
                //scenicList.push(new Scenery("cranberryPlant", 3750, 2500, 0, true));

                //units
                //ArtificialIntelligenceAccess.push(new Unit(3000, 1500, "Cheshire", true, "Faxic"));
                //ArtificialIntelligenceAccess.push(new Unit(5550, 2500, "Koivaya", false, "loner"));
                //ArtificialIntelligenceAccess.push(new Unit(3900, 2900, "Silter", false, "Screpa"));
                //ArtificialIntelligenceAccess.push(new Unit(3900, 2900, "KorskBeetle", true, "Scraupp"));
                //ArtificialIntelligenceAccess.push(new Unit(4000, 2500, "Borgal", false, "Sluch"));
                //ArtificialIntelligenceAccess.push(new Unit(4100, 2300, "BlackBeruln", true, "Hutu"));
                //ArtificialIntelligenceAccess.push(new Unit(4100, 2500, "Fox", false, "Berney"));
                //ArtificialIntelligenceAccess.push(new Unit(4100, 2500, "Deer", true, "Iclom"));
                //ArtificialIntelligenceAccess.push(new Unit(3900, 2600, "Badger", false, "Malta"));
                //ArtificialIntelligenceAccess.push(new Unit(4500, 2500, "Wendigo", false, "wendy"));
                //ArtificialIntelligenceAccess.push(new Unit(4500, 2500, "Crow", true, "Seven"));
                //ArtificialIntelligenceAccess.push(new Unit(4200, 2500, "GrizzlyBear", "kag", "Kag the scarred devourer"));
                //ArtificialIntelligenceAccess.push(new Unit(4200, 2500, "GrizzlyBear", true, "Kaaguf"));
                //ArtificialIntelligenceAccess.push(new Unit(62507, -13387, "BlackBear", true, "Jude"));
                //ArtificialIntelligenceAccess.push(new Unit(59966, -13347, "Skol", false, "Joe"));
                //ArtificialIntelligenceAccess.push(new Unit(60687, -10171, "Lizard", true, "Lazaro"));
                //ArtificialIntelligenceAccess.push(new Unit(66351, -7422, "Hoffalgre", true, "Humfrez"));

                scenicList.push(new Scenery("eyewortPlant", 174725.26292884265, -38305.56595444609, 1.1, true));
                scenicList.push(new Scenery("korceidaPlant", 174667.39209018217, -36818.70851383722, 5.51, true));
                scenicList.push(new Scenery("lauminPlant", 171911.75539888005, -42557.27395733711, 6, true));
                scenicList.push(new Scenery("falloryPlant", 172904.34773646345, -38900.56209679329, 3, true));

                scenicList.push(new Scenery("bleedingHeartPlant", 172730.99579093358, -44091.85328358206, 0, true));

                scenicList.push(new Scenery("cranberryPlant", 173960.5623081213, -37377.91228159761, 3.5, true));
                scenicList.push(new Scenery("cranberryPlant", 174203.6143564471, -37161.47374841342, 7, true));
                scenicList.push(new Scenery("cranberryPlant", 174019.37593235206, -36998.75406976237, 10.5, true));
                scenicList.push(new Scenery("cranberryPlant", 173300.8035707867, -36865.135926139796, 11.2, true));
                scenicList.push(new Scenery("cranberryPlant", 173387.2029894428, -36717.43649617881, 13.1, true));
                scenicList.push(new Scenery("cranberryPlant", 172918.73815136953, -36741.50892291022, 19.4, true));

                scenicList.push(new Scenery("hoilPlant", 174126.1021256334, -43584.299872299875, 4.5, true));
                scenicList.push(new Scenery("callopPlant", 173547.09510872653, -43673.138321744, 8, true));
                scenicList.push(new Scenery("darbPlant", 174450.4555369374, -42200.43451069055, 5.6, true));
                scenicList.push(new Scenery("kofkePlant", 173890.90475699026, -42911.17890493607, 6.15, true));
                scenicList.push(new Scenery("cranberryPlant", 174159.4109536635, -41818.322430087625, 3.88, true));
                scenicList.push(new Scenery("callopPlant", 174095.0310147142, -40709.779443827494, 4, true));
                scenicList.push(new Scenery("kofkePlant", 170977.2092723911, -37402.70145885244, 6.15, true));
                scenicList.push(new Scenery("callopPlant", 172699.12948385198, -34763.03780273922, 5.45, true));

                scenicList.push(new Scenery("callopPlant", 175302.87123524852, -34839.483244534385, 6, true));
                scenicList.push(new Scenery("cranberryPlant", 175865.8017489492, -34925.1456247054, 20, true));
                scenicList.push(new Scenery("marigoldPlant", 176326.11377800204, -35186.006362557426, 5, true));

                scenicList.push(new Scenery("kofkePlant", 175260.40582131664, -36032.76136068316, 7.8, true));
                ArtificialIntelligenceAccess.push(new Unit(174833.87905654003, -35896.536989108274, "Hoffalgre", true, "Humfrez"));
                ArtificialIntelligenceAccess.push(new Unit(175201.978472297, -35274.05485887305, "Hoffalgre", true, "Humfrez"));

                ArtificialIntelligenceAccess.push(new Unit(171350.69514584207, -35972.699065694374, "Crow", true, "Seven"));
                ArtificialIntelligenceAccess.push(new Unit(171383.5387932894, -36092.42367184914, "Crow", true, "Seven"));
                ArtificialIntelligenceAccess.push(new Unit(171209.34765719608, -36045.53864269219, "Crow", false, "Seven"));
                ArtificialIntelligenceAccess.push(new Unit(171196.38563128136, -35930.2895089759, "Crow", false, "Seven"));
                ArtificialIntelligenceAccess.push(new Unit(171307.1121782053, -35845.47064567854, "Crow", false, "Seven"));
                ArtificialIntelligenceAccess.push(new Unit(171456.34403524105, -35882.61182048294, "Crow", false, "Seven"));
                ArtificialIntelligenceAccess.push(new Unit(171516.30252023618, -35959.40270855043, "Crow", false, "Seven"));

                ArtificialIntelligenceAccess.push(new Unit(172315.53032728657, -43918.9644521177, "Hoffalgre", true, "Humfrez"));
                ArtificialIntelligenceAccess.push(new Unit(172205.9563836349, -43544.49054784292, "Hoffalgre", true, "Humfrez"));
                ArtificialIntelligenceAccess.push(new Unit(171600.7460378394, -43722.31682165882, "Hoffalgre", false, "Humfrez"));
                ArtificialIntelligenceAccess.push(new Unit(170947.39088447177, -43651.436335276616, "Hoffalgre", true, "Humfrez"));

                ArtificialIntelligenceAccess.push(new Unit(173088.6837392587, -44150.154694707, "BlackBear", false, "docile"));

                ArtificialIntelligenceAccess.push(new Unit(179112.56083152618, -41700.10204457895, "Badger", false, "Malta"));
                ArtificialIntelligenceAccess.push(new Unit(172830.3016900242, -34580.05963173872, "Badger", true, "Malta"));

                ArtificialIntelligenceAccess.push(new Unit(179637.82789715586, -41250.26738103723, "KorskBeetle", true, "Scraupp"));
                ArtificialIntelligenceAccess.push(new Unit(179388.451213363, -41013.60507267829, "KorskBeetle", false, "Scraupp"));
                ArtificialIntelligenceAccess.push(new Unit(179184.36839343992, -41320.273796553476, "KorskBeetle", false, "Scraupp"));

                if (Math.random() > 0.75)
                {
                    ArtificialIntelligenceAccess.push(new Unit(175801.55330223107, -42682.130706279815, "Fox", false, "Sanders"));
                }

                ArtificialIntelligenceAccess.push(new Unit(174763.85842205724, -41017.67730597843, "Cheshire", true, "Faxic"));

                //map creation
                ArtificialIntelligenceAccess.push(new Unit(175382.49411915638, -37617.30437316336, "GrizzlyBear", false, "Kaaguf"));

                ArtificialIntelligenceAccess.push(new Unit(179169.95483908878, -36792.496695628935, "Borgal", false, "Sluch"));

                ArtificialIntelligenceAccess.push(new Unit(173640.51278435663, -37793.69517811722, "Deer", true, "Iclom"));
                ArtificialIntelligenceAccess.push(new Unit(173474.65600800398, -37557.12148480941, "Deer", false, "Iclom"));
                ArtificialIntelligenceAccess.push(new Unit(173300.38916801175, -37621.32788847064, "Deer", "baby", "Iclom"));

                ArtificialIntelligenceAccess.push(new Unit(179480.28405372455, -44015.58223320624, "Koivaya", false, "loner"));
                ArtificialIntelligenceAccess.push(new Unit(176089.38549549898, -36208.68496970693, "Koivaya", true, "loner"));

                ArtificialIntelligenceAccess.push(new Unit(177158.6281483328, -43516.59976231639, "Lizard", true, "Lazaro"));

                scenicList.push(new Scenery("marigoldPlant", 178714.64478458386, -43580.32568481059, 10, true));

                ArtificialIntelligenceAccess.push(new Unit(177512.9377059429, -43305.98162418579, "Deer", false, "Iclom"));
                ArtificialIntelligenceAccess.push(new Unit(177512.9377059429 + 20, -43305.98162418579 + 40, "Deer", "baby", "Iclom"));
                ArtificialIntelligenceAccess.push(new Unit(177512.9377059429 - 10, -43305.98162418579 + 20, "Deer", "baby", "Iclom"));

                scenicList.push(new Scenery("beunumPlant", 178616.3125624474, -34672.44668193428, 1, true));
                scenicList.push(new Scenery("ciprinPlant", 178927.45375422086, -34548.474456413496, 2, true));
                scenicList.push(new Scenery("aberdomPlant", 179535.8037176819, -34436.145284255945, 3, true));
                scenicList.push(new Scenery("beunumPlant", 179588.25366878553, -34907.654478236225, 4, true));
                scenicList.push(new Scenery("ciprinPlant", 177216.87103845703, -36753.447933621006, 5, true));
                scenicList.push(new Scenery("aberdomPlant", 176916.47637917544, -37088.75841889851, 6, true));
                scenicList.push(new Scenery("beunumPlant", 175248.06214809415, -38394.66378355317, 8, true));
                scenicList.push(new Scenery("ciprinPlant", 175225.5927412052, -39735.66452450788, 7, true));
                scenicList.push(new Scenery("beunumPlant", 175523.8121800235, -40881.355109747186, 10, true));
                scenicList.push(new Scenery("ciprinPlant", 175179.44551167803, -40931.30485367233, 9, true));
                scenicList.push(new Scenery("beunumPlant", 175140.0063631673, -41407.555320470834, 8.5, true));
                scenicList.push(new Scenery("beunumPlant", 174927.20948021134, -42088.60674247947, 11.5, true));
                scenicList.push(new Scenery("ciprinPlant", 178117.6548077111, -42237.519499907765, 11, true));
                scenicList.push(new Scenery("aberdomPlant", 178589.93796599997, -42163.601735191594, 12.25, true));

                ArtificialIntelligenceAccess.push(new Unit(178101.2290425209, -42845.759701687995, "Deer", true, "Iclom"));
                ArtificialIntelligenceAccess.push(new Unit(177158.70482274328, -41055.68060466867, "Cheshire", false, "Faxic"));
                ArtificialIntelligenceAccess.push(new Unit(179374.5915121854, -42510.201923393346, "Hoffalgre", false, "Humfrez"));

                scenicList.push(new Scenery("kofkePlant", 177942.5818220575, -40756.83882828578, 11, true));
                scenicList.push(new Scenery("darbPlant", 179400.3361098456, -39388.13161805569, 8.2, true));

                ArtificialIntelligenceAccess.push(new Unit(175458.64752384796, -43542.376986614996, "Skol", true, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(175089.14701570565, -44210.800663523274, "Skol", false, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(173552.3448744557, -42763.670980121344, "Skol", false, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(173510.3608213242, -42944.30438708899, "Skol", false, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(171842.11985490963, -40793.72202144089, "Skol", false, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(171994.66314176875, -41052.9632407855, "Skol", false, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(171290.40562400187, -40730.07585764016, "Skol", false, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(171909.84329365692, -36714.306337426155, "Skol", false, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(172221.01152762494, -36380.65123370034, "Skol", false, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(172647.9755872316, -36633.60690152987, "Skol", false, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(178057.23789163743, -35192.590510167945, "Skol", false, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(180044.33678430837, -34665.84711063789, "Skol", false, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(179872.04832312674, -34435.20709138035, "Skol", false, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(179464.24511924767, -34797.16685249619, "Skol", false, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(179635.97969879583, -34650.509023648716, "Skol", false, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(179451.40457799652, -34673.82495469083, "Skol", false, "Joe"));


                scenicList.push(new Scenery("fog", 179713.56902845742, -35113.49102773016, 4.6, 0, 0.6));
                scenicList.push(new Scenery("fog", 178611.44643876405, -35873.03985861474, 2, 1, 0.4));
                scenicList.push(new Scenery("fog", 177576.66377422473, -37007.237381305116, 1, 2, 0.7));
                scenicList.push(new Scenery("fog", 175539.31537241707, -37326.23011194482, 8, 0, 0.45));
                scenicList.push(new Scenery("fog", 173854.3544988978, -37087.37388661448, 3.9, 1, 0.55));
                scenicList.push(new Scenery("fog", 173077.13503543718, -36808.51359036883, 3.4, 0, 0.65));
                scenicList.push(new Scenery("fog", 172191.57162511093, -36154.33448802659, 6.6, 3, 0.7));
                scenicList.push(new Scenery("fog", 171634.97732852874, -35279.39621956617, 1.8, 2, 0.35));
                scenicList.push(new Scenery("fog", 170897.38443509495, -34646.972420408725, -2.6, 0, 0.5));
                scenicList.push(new Scenery("fog", 170275.19342684347, -36008.50459651816, 1.6, 1, 0.43));

                scenicList.push(new Scenery("fog", 171167.48413524686, -37653.80367770307, 4.6, 0, 0.6));
                scenicList.push(new Scenery("fog", 171877.8048465198, -39134.17821534402, 2, 1, 0.4));
                scenicList.push(new Scenery("fog", 171559.96308291893, -40125.85599396705, 1, 2, 0.7));
                scenicList.push(new Scenery("fog", 170930.87241726974, -41106.51579514373, 10, 0, 0.75));
                scenicList.push(new Scenery("fog", 173854.3544988978, -37087.37388661448, 3.9, 1, 0.55));
                scenicList.push(new Scenery("fog", 172759.62162297568, -42119.837666192725, 9.9, 0, 0.85));
                scenicList.push(new Scenery("fog", 173283.6943764459, -43375.07861843828, 14.4, 2, 0.67));
                scenicList.push(new Scenery("fog", 174526.10211427358, -43530.13560750747, 19, 1, 0.85));
                scenicList.push(new Scenery("fog", 171448.82944870778, -42537.94680628731, -2.6, 2, 0.5));
                scenicList.push(new Scenery("fog", 172919.99131865983, -41204.26300497652, 4.444, 3, 0.92));
                scenicList.push(new Scenery("fog", 174137.94217733032, -40629.91158381214, 66, 1, 0.75));
                scenicList.push(new Scenery("fog", 175468.78195527397, -40442.462486084674, 32, 1, 0.5));
                scenicList.push(new Scenery("fog", 176845.3810576004, -41904.44951454881, 23, 3, 0.39));
                scenicList.push(new Scenery("fog", 178019.78995534364, -43861.56779891825, 56, 0, 0.69));
                scenicList.push(new Scenery("fog", 178889.43021732962, -41438.48204419921, 3.6, 0, 0.58));
                scenicList.push(new Scenery("fog", 178398.2969520549, -39695.34339389907, 8.6, 0, 0.46));
                scenicList.push(new Scenery("fog", 178608.0194303284, -38533.42313467065, 90, 2, 0.62));
                scenicList.push(new Scenery("fog", 177903.97748512114, -34631.702194164434, 10, 1, 0.84));
                scenicList.push(new Scenery("fog", 176623.1739527658, -35384.94008904456, -1.6, 2, 0.53));
                scenicList.push(new Scenery("fog", 176100.38529662022, -35406.116288216996, 3.442, 3, 0.88));
                scenicList.push(new Scenery("fog", 175666.95504494628, -35427.63698783217, 2.2, 1, 0.815));
                scenicList.push(new Scenery("fog", 175619.13435911253, -36738.755530496695, -2.9, 2, 0.49));
                scenicList.push(new Scenery("fog", 175313.4797427108, -36844.99273950621, -54.444, 3, 0.91));
                scenicList.push(new Scenery("fog", 174380.99974328242, -36037.320343561914, 3.6, 2, 0.28));
                scenicList.push(new Scenery("fog", 174353.12965925422, -35297.49941255777, 8.6, 1, 0.56));
                scenicList.push(new Scenery("fog", 174070.81786109006, -34901.005044309946, 90, 0, 0.83));
                scenicList.push(new Scenery("fog", 173250.11937161745, -35202.39938236898, 10, 0, 0.95));
                scenicList.push(new Scenery("fog", 172389.57751921, -37810.30247340068, -1.6, 3, 0.24));
                scenicList.push(new Scenery("fog", 173110.88996189312, -40678.91590420494, 3.442, 2, 0.25));
                scenicList.push(new Scenery("fog", 173334.89240466306, -40924.1253296375, 2.2, 0, 0.49));
                scenicList.push(new Scenery("fog", 168507.9865746114, -42475.382648838575, 12, 1, 0.74));
                scenicList.push(new Scenery("fog", 168613.66613506962, -42926.76766499184, -12, 2, 0.33));
                scenicList.push(new Scenery("fog", 167554.01763108344, -42897.15161098989, 45, 3, 0.22));
                scenicList.push(new Scenery("fog", 166721.92888120355, -42398.02291837995, 3, 1, 0.615));
                scenicList.push(new Scenery("fog", 167116.4634414042, -38578.148506595404, -8, 2, 0.39));
                scenicList.push(new Scenery("fog", 165980.87095721194, -37567.61665203147, -9, 3, 0.52));
                scenicList.push(new Scenery("fog", 166311.39134193677, -36907.36355694566, 12, 2, 0.19));
                scenicList.push(new Scenery("fog", 166791.3694158258, -36728.7121164975, 13, 1, 0.25));
                scenicList.push(new Scenery("fog", 167100.48150428638, -36906.91692267648, -20, 0, 0.72));
                scenicList.push(new Scenery("fog", 167556.78823135502, -40898.26693767417, 20, 0, 0.35));
                scenicList.push(new Scenery("fog", 168505.81320279086, -41621.89358956999, -3, 3, 0.55));
                scenicList.push(new Scenery("fog", 169012.60178193563, -42520.38304259214, 89, 2, 0.50));
                scenicList.push(new Scenery("fog", 171210.8536412499, -40334.18865455845, -6, 3, 0.57));

                change = "s4w17";
            }
        }
        else if (region == "s3w14") //CRANHEIM
        {
            if (change != "s3w14")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units


                scenicList.push(new Scenery("thenganorCastleParts", 139680.28850764598, -23950.825984448726, Math.PI, 2, 1)); //top wall - 5

                scenicList.push(new Scenery("thenganorCastleParts", 139673.18302162958 + 783, -33839.42356589397 + 65 + 95, 0, 2, 1)); //low 1
                scenicList.push(new Scenery("thenganorCastleParts", 141073.18302162958 + 783, -33839.42356589397 + 65 + 95, 0, 2, 1)); //low 2

                scenicList.push(new Scenery("thenganorCastleParts", 139080.28850764598 + 590, -36120.825984448726 + 1700, 1/2 * Math.PI, 2, 1)); //left wall 6
                scenicList.push(new Scenery("thenganorCastleParts", 139673.18302162958 + 75, -33839.42356589397 + 95, Math.PI, 2, 5)); //left wall inter corner

                scenicList.push(new Scenery("thenganorCastleParts", 148676.79947148258 - 30, -33935.42356589397 + 95 + 700, -1/2 * Math.PI, 2, 1)); //lefter

                scenicList.push(new Scenery("thenganorCastleParts", 142473.18302162958 + 783, -33839.42356589397 + 65 + 95, 0, 2, 1)); //low 3
                scenicList.push(new Scenery("thenganorCastleParts", 143873.18302162958 + 783, -33839.42356589397 + 65 + 95, 0, 2, 1)); //low 4
                scenicList.push(new Scenery("thenganorCastleParts", 145273.18302162958 + 783, -33839.42356589397 + 65 + 95, 0, 2, 1)); //low 5
                scenicList.push(new Scenery("thenganorCastleParts", 146673.18302162958 + 783, -33839.42356589397 + 65 + 95, 0, 2, 1)); //low 6
                scenicList.push(new Scenery("thenganorCastleParts", 146673.18302162958 + 783 + 720, -33839.42356589397 + 65 + 95, 0, 2, 3)); //low 7
                scenicList.push(new Scenery("thenganorCastleParts", 148676.79947148258, -33839.42356589397 + 95, Math.PI, 2, 5)); //lefter wall inter corner

                scenicList.push(new Scenery("thenganorCastleParts", 148676.79947148258 - 30, -32535.42356589397 + 95 + 700, -1/2 * Math.PI, 2, 1)); //lefter 2
                scenicList.push(new Scenery("thenganorCastleParts", 148676.79947148258 - 30, -31135.42356589397 + 95 + 700, -1/2 * Math.PI, 2, 1)); //lefter 3
                scenicList.push(new Scenery("thenganorCastleParts", 148676.79947148258 - 30, -29735.42356589397 + 95 + 700, -1/2 * Math.PI, 2, 1)); //lefter 4
                scenicList.push(new Scenery("thenganorCastleParts", 148676.79947148258 - 30, -28335.42356589397 + 95 + 700, -1/2 * Math.PI, 2, 1)); //lefter 5
                scenicList.push(new Scenery("thenganorCastleParts", 148676.79947148258 - 30, -26935.42356589397 + 95 + 700, -1/2 * Math.PI, 2, 1)); //lefter 6
                scenicList.push(new Scenery("thenganorCastleParts", 148676.79947148258 - 30, -25535.42356589397 + 95 + 700, -1/2 * Math.PI, 2, 1)); //lefter 7
                scenicList.push(new Scenery("thenganorCastleParts", 148676.79947148258 + 25, -23950.26322963163 + 50, Math.PI, 2, 5)); //lefter wall inter corner

                scenicList.push(new Scenery("thenganorCastleParts", 139680.28850764598 + 1400, -23950.825984448726, Math.PI, 2, 1)); //top wall - 6
                scenicList.push(new Scenery("thenganorCastleParts", 139680.28850764598 + 2800, -23950.825984448726, Math.PI, 2, 1)); //top wall - 7
                scenicList.push(new Scenery("thenganorCastleParts", 139680.28850764598 + 4200, -23950.825984448726, Math.PI, 2, 1)); //top wall - 8
                scenicList.push(new Scenery("thenganorCastleParts", 139680.28850764598 + 5600, -23950.825984448726, Math.PI, 2, 1)); //top wall - 9
                scenicList.push(new Scenery("thenganorCastleParts", 139680.28850764598 + 7000, -23950.825984448726, Math.PI, 2, 1)); //top wall - 10
                scenicList.push(new Scenery("thenganorCastleParts", 139680.28850764598 + 8400, -23950.825984448726, Math.PI, 2, 1)); //top wall - 11
                scenicList.push(new Scenery("thenganorCastleParts", 148676.79947148258 + 25, -23950.26322963163 + 50, Math.PI, 2, 5)); //lefter wall inter corner

                change = "s3w14";
            }
        }
        else if (region == "s3w13") //CRANHEIM
        {
            if (change != "s3w13")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                scenicList.push(new Scenery("thenganorCastleParts", 132052.28850764598, -26020.825984448726, 1/2 * Math.PI, 2, 1)); //north wall of the east entrance
                scenicList.push(new Scenery("thenganorCastleParts", 132052.28850764598, -27720.825984448726, 1/2 * Math.PI, 2, 1)); //south wall of the east entrance

                scenicList.push(new Scenery("thenganorCastleParts", 132052.28850764598, -24620.825984448726, 1/2 * Math.PI, 2, 1)); //+1 north of north wall of the east entrance (1400px long)

                scenicList.push(new Scenery("thenganorCastleParts", 132052.28850764598, -29120.825984448726, 1/2 * Math.PI, 2, 1)); //+1 south of south wall of the east entrance
                scenicList.push(new Scenery("thenganorCastleParts", 132052.28850764598, -30520.825984448726, 1/2 * Math.PI, 2, 1)); //+2 south of south wall of the east entrance
                scenicList.push(new Scenery("thenganorCastleParts", 132052.28850764598, -31920.825984448726, 1/2 * Math.PI, 2, 1)); //+3 south of south wall of the east entrance
                scenicList.push(new Scenery("thenganorCastleParts", 132052.28850764598, -33320.825984448726, 1/2 * Math.PI, 2, 1)); //+4 south of south wall of the east entrance
                scenicList.push(new Scenery("thenganorCastleParts", 132052.28850764598, -34720.825984448726, 1/2 * Math.PI, 2, 1)); //+5 south of south wall of the east entrance


                scenicList.push(new Scenery("thenganorCastles", 136078.35722387285, -27075.849757241544, 0, 2, 1));

                scenicList.push(new Scenery("thenganorCastleParts", 132680.28850764598, -23950.825984448726, Math.PI, 2, 1)); //top wall
                scenicList.push(new Scenery("thenganorCastleParts", 131980.28850764598, -23950.825984448726, Math.PI, 2, 5)); //top wall right corner
                scenicList.push(new Scenery("thenganorCastleParts", 134080.28850764598, -23950.825984448726, Math.PI, 2, 1)); //top wall - 1
                scenicList.push(new Scenery("thenganorCastleParts", 135480.28850764598, -23950.825984448726, Math.PI, 2, 1)); //top wall - 2
                scenicList.push(new Scenery("thenganorCastleParts", 136880.28850764598, -23950.825984448726, Math.PI, 2, 1)); //top wall - 3
                scenicList.push(new Scenery("thenganorCastleParts", 138280.28850764598, -23950.825984448726, Math.PI, 2, 1)); //top wall - 4
                scenicList.push(new Scenery("thenganorCastleParts", 139680.28850764598, -23950.825984448726, Math.PI, 2, 1)); //top wall - 5

                scenicList.push(new Scenery("thenganorCastleParts", 139673.18302162958 + 783, -33839.42356589397 + 65 + 95, 0, 2, 1));
                scenicList.push(new Scenery("thenganorCastleParts", 141073.18302162958 + 783, -33839.42356589397 + 65 + 95, 0, 2, 1));

                scenicList.push(new Scenery("thenganorCastleParts", 139080.28850764598 + 590, -36120.825984448726 + 1700, 1/2 * Math.PI, 2, 1)); //left wall 6
                scenicList.push(new Scenery("thenganorCastleParts", 139673.18302162958 + 75, -33839.42356589397 + 95, Math.PI, 2, 5)); //left wall inter corner

                scenicList.push(new Scenery("thenganorCastleParts", 139680.28850764598 + 1400, -23950.825984448726, Math.PI, 2, 1)); //top wall - 6
                scenicList.push(new Scenery("thenganorCastleParts", 139680.28850764598 + 2800, -23950.825984448726, Math.PI, 2, 1)); //top wall - 7

                scenicList.push(new Scenery("thenganBuilding7", 131848.47805507728, -26360.088494718646, 0, 1));
                scenicList.push(new Scenery("thenganBuilding7", 131852.47805507728, -27396.088494718646, Math.PI, 1));

                scenicList.push(new Scenery("thenganBuilding2", 134988.12995276236 - 34, -26555.869049930345 + 300, 0, 1)); //up
                scenicList.push(new Scenery("thenganBuilding2", 134685.7642367716 - 34, -26557.087054943695 + 300, 0, 1));
                scenicList.push(new Scenery("thenganBuilding2", 134375.59001075898 - 34, -26556.667702643714 + 300, 0, 1));

                scenicList.push(new Scenery("thenganBuilding1", 134988.12995276236 -34, -26555.869049930345 - 50, 0, 1)); //down
                scenicList.push(new Scenery("thenganBuilding1", 134685.7642367716 - 34, -26557.087054943695 - 50, 0, 1));
                scenicList.push(new Scenery("thenganBuilding1", 134375.59001075898 - 34, -26556.667702643714 - 50, 0, 1));

                scenicList.push(new Scenery("thenganBuilding3", 134311.54443839227 + 124, -27255.288187350474, 0, 1));
                scenicList.push(new Scenery("thenganBuilding3", 134312.4946195333 + 124, -27594.357131221903, 0, 1)); //left

                scenicList.push(new Scenery("thenganBuilding5", 134958.7097393508, -27596.808973580413, 0, 1));
                scenicList.push(new Scenery("thenganBuilding5", 134951.98966528493, -27250.718363698907, 0, 1)); //right

                scenicList.push(new Scenery("thenganBuilding8", 134654.03202491582, -27330.101099856653, 1/2 * Math.PI, 1.4)); //up
                scenicList.push(new Scenery("thenganBuilding8", 134648.23084330212, -27625.729480875652, -1/2 * Math.PI, 1.4)); //down

                //The Silver Keep
                scenicList.push(new Scenery("thenganBuilding3", 132554.11896028087 + 134, -29730.74502539167 - 85, 0, 1)); //right
                scenicList.push(new Scenery("countertop", 132585.11944908192, -29723.873984628597, 0, true)); //banking counter
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Silver Keep Banker")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "skBanker2")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(132582.65499268982, -29677.969586437295, "Person", false, "Silver Keep Banker", {race: "Aldrek", faction: "Thengar", personality: "calculated", outfit: ["aldrekiiHijab", 0], weapon: ["none", [0.4, 0.3], 0, 0, 1.25], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[132581.5937671835, -29697.426426710987]], altID: "skBanker2"}));
                }
                scenicList.push(new Scenery("crate", 132643.372086918, -29896.743090059346, 9.4/4 * Math.PI, 0, [1.8]));
                scenicList.push(new Scenery("crate", 132533.22879782753, -29934.07655149653, -9/4 * Math.PI, 2, [1]));
                scenicList.push(new Scenery("crate", 132526.45239414592, -29861.489477653402, -5.7/4 * Math.PI, 1, [1.2]));
                scenicList.push(new Scenery("crate", 132651.516214765, -29801.85849147281, -2.1/4 * Math.PI, 1, [1.3]));
                scenicList.push(new Scenery("crate", 132594.791351544, -29865.68046094056, -3/4 * Math.PI, 2, [1]));
                scenicList.push(new Scenery("sign", 132462.09661782943 + 12, -29869.902160517056, -1/2 * Math.PI, 3, "Silver Keep Banking"));

                //The Golden Glove
                scenicList.push(new Scenery("thenganBuilding5", 132832.9493056103 - 20, -29735.957857288548 - 78, 0, 1)); //left
                scenicList.push(new Scenery("countertop", 132813.61082864078, -29771.936744285304, 0, true)); //banking counter
                scenicList.push(new Scenery("sign", 132937.3421718879 - 12, -29881.233492804153, 1/2 * Math.PI, 3, "Golden Glove Banking"));
                if (uniqueChars.emonLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Emon the Banker")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(132813.30050898754, -29700.853151062813, "Person", false, "Emon the Banker", {race: "Orgell", faction: "Thengar", personality: "scared", outfit: ["hoffalgreFurCloak", 0], weapon: ["none", [0.2, 0.2], 0, 0, 1.15], ranged: [false, "arrow", 8, 2000, 1, 6, 0, "none", 0.95], patrolStops: 1, patrolLoop: false, route:[[132814.48543015198, -29747.356286638988]], banker: true}));
                    }
                }
                scenicList.push(new Scenery("crate", 132881.01085775718, -29894.82014059851, 11.11/4 * Math.PI, 0, [2]));
                scenicList.push(new Scenery("crate", 132824.3919456712, -29928.278881654936, 8.888/4 * Math.PI, 2, [1.1]));
                scenicList.push(new Scenery("crate", 132762.30165024064, -29933.994621533046, -3.6/4 * Math.PI, 1, [1.5]));
                scenicList.push(new Scenery("crate", 132750.55078640682, -29871.888630504116, -13.5/4 * Math.PI, 2, [1.35]));
                scenicList.push(new Scenery("crate", 132747.16245959204, -29803.237995567564, -7.89/4 * Math.PI, 2, [1.15]));
                scenicList.push(new Scenery("crate", 132809.23987858865, -29873.200078164828, 0.666/4 * Math.PI, 0, [1.6]));
                scenicList.push(new Scenery("crate", 132763.08728886707, -29726.668872531136, 8.2/4 * Math.PI, 2, [0.8]));

                scenicList.push(new Scenery("thenganBuilding2", 132856.3585073128, -29543.82958239683, 0, 1));
                scenicList.push(new Scenery("thenganBuilding2", 132564.06581836723 - 20, -29544.83058475615, 0, 1));


                scenicList.push(new Scenery("thenganBuilding5", 133749.79608080516 + 30 , -27237.085748290756, 0, 1)); //right
                scenicList.push(new Scenery("thenganBuilding3", 133480.30087706572 + 40, -27237.923552195487, 0, 1)); //left

                scenicList.push(new Scenery("thenganBuilding5", 133751.7138231356 + 30, -27587.96591690594, 0, 1)); //right
                scenicList.push(new Scenery("thenganBuilding3", 133478.62544261254 + 40, -27590.875846819807, 0, 1)); //left

                scenicList.push(new Scenery("thenganBuilding5", 133746.24682359034 + 30, -27914.954910637065, 0, 1)); //right
                scenicList.push(new Scenery("thenganBuilding3", 133478.9827470825 + 40, -27913.5320795301, 0, 1)); //left

                scenicList.push(new Scenery("thenganBuilding3", 133485.18585748333 + 30, -28234.572923526397 - 10, 0, 1)); //right
                scenicList.push(new Scenery("thenganBuilding5", 133743.08299565356 + 40, -28245.806410337376 - 10, 0, 1)); //left

                scenicList.push(new Scenery("thenganBuilding5", 133743.08299565356 + 40, -28566.76929114056 - 40, 0, 1)); //right
                scenicList.push(new Scenery("thenganBuilding3", 133485.18585748333 + 30, -28569.55540880055 - 40, 0, 1)); //left

                scenicList.push(new Scenery("thenganBuilding3", 133485.18585748333 + 30, -28877.487028874188 - 70, 0, 1)); //right
                scenicList.push(new Scenery("thenganBuilding5", 133743.08299565356 + 40, -28873.989123098014 - 70, 0, 1)); //left

                scenicList.push(new Scenery("thenganBuilding1", 133447.93717412077, -26577.413572510428, 0, 1));
                scenicList.push(new Scenery("thenganBuilding1", 133772.8418601606, -26582.551870874522, 0, 1));

                //master blacksmith
                scenicList.push(new Scenery("thenganBuilding5", 133433.5146852063, -26276.257354569447, 0, 1)); //left
                scenicList.push(new Scenery("forge", 133658.1657238357, -26160.792848873683, 0, true));
                scenicList.push(new Scenery("forge", 133805.9192150547, -26157.09168182166, 0, true)); //top
                scenicList.push(new Scenery("forge", 133648.98474329436, -26402.598794223584, Math.PI, true)); //bottom
                scenicList.push(new Scenery("forge", 133807.965112106, -26405.42754350206, Math.PI, true)); //bottom
                scenicList.push(new Scenery("anvil", 133577.44651511358, -26208.815775718627, Math.PI, true)); //top
                scenicList.push(new Scenery("anvil", 133576.4123807281, -26348.31616371836, Math.PI, true)); //bottom
                scenicList.push(new Scenery("anvil", 133731.9901163269, -26160.30212112398, 1/2 * Math.PI, true)); //mid top
                scenicList.push(new Scenery("anvil", 133731.7029410401, -26403.089416552084, -1/2 * Math.PI, true)); //mid bottom
                scenicList.push(new Scenery("countertop", 133516.0424252623, -26197.20802020841 + 15, 1/2 * Math.PI, true)); //top left
                scenicList.push(new Scenery("countertop", 133516.0424252623 - 19, -26197.20802020841 + 15, 1/2 * Math.PI, true)); //top left +
                scenicList.push(new Scenery("countertop", 133516.97368657155, -26382.3947562553 + 3, 1/2 * Math.PI, true)); //bottom left
                scenicList.push(new Scenery("countertop", 133516.97368657155 - 19, -26382.3947562553 + 3, 1/2 * Math.PI, true)); //bottom left +
                scenicList.push(new Scenery("countertop", 133348.79471473038, -26198.58400993545 + 10, 1/2 * Math.PI, true)); //top right
                scenicList.push(new Scenery("countertop", 133349.25468482616, -26389.966416023643 + 14, 1/2 * Math.PI, true)); //bottom right
                scenicList.push(new Scenery("countertop", 133349.25468482616, -26389.966416023643 + 104, 1/2 * Math.PI, true)); //mid right
                scenicList.push(new Scenery("item", 133509.60620471064, -26178.922746971482, 0, "thengar", ["greatPlateArmour", 1, -250]));
                scenicList.push(new Scenery("item", 133510.048799902, -26382.754272980717, 0, "thengar", ["thenganBascinetArmour", 1, -250]));
                scenicList.push(new Scenery("item", 133348.3902573207, -26147.42610635784, 0, "thengar", ["silverDagger", 1, -100]));
                scenicList.push(new Scenery("item", 133349.16304697923, -26209.65664059996, 0, "thengar", ["thenganDagger", 2, -44]));
                scenicList.push(new Scenery("item", 133348.37918782164, -26271.363271763126, 0, "thengar", ["mace", 2, -44]));
                scenicList.push(new Scenery("item", 133350.32181353128, -26397.484802650197, 0, "thengar", ["thenganSwordAndShield", 2, -80]));
                scenicList.push(new Scenery("item", 133347.90924965165, -26179.904772628317, 0, "thengar", ["flail", 2, -140]));
                scenicList.push(new Scenery("item", 133349.83475168634, -26315.59169324012, 0, "thengar", ["longsword", 2, -66]));
                scenicList.push(new Scenery("item", 133348.01618393787, -26362.321012035438, 0, "thengar", ["longHammer", 2, -180]));
                scenicList.push(new Scenery("item", 133348.1925410247, -26248.092592246037, 0, "thengar", ["pickaxe", 2, -38]));
                scenicList.push(new Scenery("item", 133348.92060539193, -26413.170141140043 - 11, 0, "thengar", ["steel", 3, -45]));
                scenicList.push(new Scenery("sign", 133514.37522155754 + 32, -26227.03137433062, 1/2 * Math.PI, 3, "The Cranheim Smithy"));
                if (uniqueChars.heinrichLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Master Blacksmith Heinrich")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(133422.71489011045, -26138.90690081261, "Person", false, "Master Blacksmith Heinrich", {race: "Thengar", faction: "Thengar", personality: "violent", outfit: ["thenganWorkmansApron", 0], weapon: ["silverDagger", [7, 3], 2.5, 11, 1.1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[133420.12247218148, -26177.79316974901]], merchant: true, merchandise: [[new Item("coins", false, false), 1240], [new Item("silver", false, false), 2], [new Item("steel", false, false), 12], [new Item("iron", false, false), 14], [new Item("mace", false, false), 6], [new Item("thenganDagger", false, false), 5], [new Item("silverDagger", false, false), 1], [new Item("silverStake", false, false), 2], [new Item("longsword", false, false), 6], [new Item("thenganSwordAndShield", false, false), 4], [new Item("longSpikedMorningStar", false, false), 5], [new Item("thenganWarhammer", false, false), 2], [new Item("flail", false, false), 3], [new Item("smashStick", false, false), 2], [new Item("longHammer", false, false), 3], [new Item("thenganBascinetArmour", false, false), 2], [new Item("greatPlateArmour", false, false), 2], [new Item("timberAxe", false, false), 3], [new Item("pitchfork", false, false), 2], [new Item("spade", false, false), 3], [new Item("pickaxe", false, false), 3]]}));
                        ArtificialIntelligenceAccess[i].health = 58;
                        ArtificialIntelligenceAccess[i].healthMAX = 58;
                    }
                    ArtificialIntelligenceAccess.push(new Unit(133628.4177672649, -26349.913722998026, "Person", false, "Blacksmith's Apprentice", {race: "Thengar", faction: "Thengar", personality: "violent", outfit: ["hoffalgreFurCloak", 0], weapon: ["hammer", [3, 2.5], 3, 12, 1.25], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: false, route:[[1793, 314]]}));
                    ArtificialIntelligenceAccess.push(new Unit(133631.66756111223, -26203.064489889723, "Person", false, "Blacksmith's Apprentice", {race: "Thengar", faction: "Thengar", personality: "violent", outfit: ["hoffalgreFurCloak", 0], weapon: ["hammer", [3, 2.5], 3, 12, 1.25], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: false, route:[[1793, 314]]}));
                    ArtificialIntelligenceAccess.push(new Unit(133729.53969584178, -26252.18953134094, "Person", false, "Blacksmith's Apprentice", {race: "Thengar", faction: "Thengar", personality: "violent", outfit: ["hoffalgreFurCloak", 0], weapon: ["hammer", [3, 2.5], 3, 12, 1.25], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[133731.88131399866, -26209.385124402692]]}));
                    ArtificialIntelligenceAccess.push(new Unit(133729.89674166025, -26322.113847017954, "Person", false, "Blacksmith's Apprentice", {race: "Thengar", faction: "Thengar", personality: "violent", outfit: ["hoffalgreFurCloak", 0], weapon: ["hammer", [3, 2.5], 3, 12, 1.25], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[133732.2480212703, -26364.920216625498]]}));
                }

                //trap shop
                scenicList.push(new Scenery("countertop", 133532.58449835525, -26579.531371475332 - 18, 1/2 * Math.PI, true)); //left
                scenicList.push(new Scenery("countertop", 133513.23257709757, -26580.717487638904 - 18, 1/2 * Math.PI, true)); //left +
                scenicList.push(new Scenery("countertop", 133446.65828189734 + 40, -26496.11834015103 - 6, Math.PI, true)); //top
                scenicList.push(new Scenery("countertop", 133450.66840461493 + 37, -26524.645203520995 - 6 + 3, Math.PI, true)); //top -
                scenicList.push(new Scenery("item", 133388.79842387422, -26518.97178598479, 0, "thengar", ["spindletrap", 1, -59]));
                scenicList.push(new Scenery("item", 133535.9222796106, -26654.16120577278, 0, "thengar", ["clawtrap", 2, -42]));
                scenicList.push(new Scenery("item", 133509.52132271868 + 12, -26654.333403928424 + 3, 0, "thengar", ["clawtrap", 2, -42]));
                scenicList.push(new Scenery("item", 133534.77988404722, -26627.831915169547 - 3, 0, "thengar", ["jacks", 12, -44]));
                scenicList.push(new Scenery("item", 133512.3171957825, -26628.13627443332 - 3, 0, "thengar", ["jacks", 12, -44]));
                scenicList.push(new Scenery("item", 133516.0862154947, -26557.644377225475, 0, "thengar", ["beartrap", 1, -15]));
                scenicList.push(new Scenery("item", 133516.0862154947, -26575.182041404576, 0, "thengar", ["beartrap", 1, -15]));
                scenicList.push(new Scenery("item", 133516.0862154947, -26598.565593643376, 0, "thengar", ["beartrap", 1, -15]));
                scenicList.push(new Scenery("item", 133516.0862154947, -26618.05188717571, 0, "thengar", ["beartrap", 1, -15]));
                scenicList.push(new Scenery("item", 133535.55079861658, -26617.13230057153, 0, "thengar", ["beartrap", 1, -15]));
                scenicList.push(new Scenery("item", 133535.91082495125, -26598.311242678083, 0, "thengar", ["beartrap", 1, -15]));
                scenicList.push(new Scenery("item", 133534.91026688498, -26576.830473675338, 0, "thengar", ["beartrap", 1, -15]));
                scenicList.push(new Scenery("item", 133534.53225152957, -26553.75690763596, 0, "thengar", ["beartrap", 1, -15]));
                scenicList.push(new Scenery("item", 133473.7243903292 + 3, -26513.457985373163, 0, "thengar", ["floortrap", 1, -50]));
                scenicList.push(new Scenery("item", 133443.86589690007 + 3, -26512.439141756695, 0, "thengar", ["floortrap", 1, -50]));
                scenicList.push(new Scenery("item", 133535.06391122352, -26496.643416959785, 0, "thengar", ["firetrap", 3, -78]));
                scenicList.push(new Scenery("item", 133535.54418825175, -26528.194939301906, 0, "thengar", ["firetrap", 3, -78]));
                scenicList.push(new Scenery("item", 133508.6520575036, -26497.258154335184, 0, "thengar", ["jarOfOil", 3, -100]));
                scenicList.push(new Scenery("item", 133507.3655131746, -26529.689685958558, 0, "thengar", ["jarOfOil", 3, -100]));
                if (uniqueChars.helmutLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Helmut the Trapper")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(133369.9420053438, -26644.377856184135, "Person", false, "Helmut the Trapper", {race: "Thengar", faction: "Thengar", personality: "violent", outfit: ["blackBearLeatherArmour", 3.5], weapon: ["thenganDagger", [3, 2], 2.5, 10, 1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[133388.4492571905, -26630.08598823566]], merchant: true, merchandise: [[new Item("coins", false, false), 190], [new Item("jacks", false, false), 14], [new Item("beartrap", false, false), 12], [new Item("clawtrap", false, false), 10], [new Item("firetrap", false, false), 8], [new Item("jarOfOil", false, false), 6], [new Item("spindletrap", false, false), 3], [new Item("floortrap", false, false), 2]]}));
                        ArtificialIntelligenceAccess[i].health = 26;
                        ArtificialIntelligenceAccess[i].healthMAX = 26;
                    }
                }
                scenicList.push(new Scenery("sign", 133513.51211520543, -26698.06253239544 + 18, 0, 3, "The Trapper's Dream"));

                //Provisions Shop
                scenicList.push(new Scenery("countertop", 133773.1791539414 - 40, -26500.732273304482 - 8, Math.PI, true)); //top
                scenicList.push(new Scenery("countertop", 133772.48468732633 - 40, -26528.00620049073 - 8, Math.PI, true)); //top -
                scenicList.push(new Scenery("countertop", 133686.32284751732, -26586.828978121543 - 19, 1/2 * Math.PI, true)); //right
                scenicList.push(new Scenery("countertop", 133711.16402892748, -26587.79720949967- 19, 1/2 * Math.PI, true)); //right +
                scenicList.push(new Scenery("sign", 133695.79364397496, -26701.92465447341 + 18, 0, 3, "Cranheim Provisions"));
                scenicList.push(new Scenery("item", 133771.18777070983, -26519.715413259863, 0, "thengar", ["tent", 1, -25]));
                scenicList.push(new Scenery("item", 133733.66984883405, -26503.769583082416, 0, "thengar", ["hammer", 3, -27]));
                scenicList.push(new Scenery("item", 133732.23048106994, -26531.01239282951, 0, "thengar", ["pickaxe", 3, -24]));
                scenicList.push(new Scenery("item", 133690.6229715642, -26523.90397961313, 0, "thengar", ["spade", 3, -46]));
                scenicList.push(new Scenery("item", 133704.85249296008, -26572.528805521382, 0, "thengar", ["timberAxe", 3, -30]));
                scenicList.push(new Scenery("item", 133691.2917264958, -26607.272456986826, 0, "thengar", ["bucketOfWater", 2, -16]));
                scenicList.push(new Scenery("item", 133687.33269717518, -26638.18631013004, 0, "thengar", ["bucketOfWater", 2, -16]));
                scenicList.push(new Scenery("item", 133686.17200371652, -26585.67714162208, 0, "thengar", ["glassBottle", 3, -9]));
                scenicList.push(new Scenery("item", 133685.3894967178, -26558.258114999877, 0, "thengar", ["glassBottle", 3, -9]));
                scenicList.push(new Scenery("item", 133715.63684567812, -26662.45064219387, 0, "thengar", ["wood", 5, -10]));
                scenicList.push(new Scenery("item", 133688.4985174168, -26660.40465294369, 0, "thengar", ["wood", 5, -10]));
                scenicList.push(new Scenery("item", 133717.8520973201, -26625.947830448393, 0, "thengar", ["fireStarter", 2, -28]));
                if (uniqueChars.franklinLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Franklin the Merchant")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(133846.67278987367, -26647.219679602607, "Person", false, "Franklin the Merchant", {race: "Thengar", faction: "Thengar", personality: "violent", outfit: ["hoffalgreFurCloak", 0], weapon: ["none", [0.3, 0.3], 0, 0, 1.1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[133826.46713202563, -26628.618033760547]], merchant: true, merchandise: [[new Item("coins", false, false), 73], [new Item("tent", false, false), 3], [new Item("pickaxe", false, false), 2], [new Item("hammer", false, false), 2], [new Item("spade", false, false), 2], [new Item("timberAxe", false, false), 2], [new Item("bucketOfWater", false, false), 6], [new Item("wood", false, false), 20], [new Item("fireStarter", false, false), 3], [new Item("glassBottle", false, false), 6]]}));
                        ArtificialIntelligenceAccess[i].health = 6;
                        ArtificialIntelligenceAccess[i].healthMAX = 6;
                    }
                }

                //Ersula's Artisanal Tailoring
                if (uniqueChars.ersulaLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Ersula the Tailor")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(134663.21325387908, -27225.047125454385, "Person", false, "Ersula the Tailor", {race: "Thengar", faction: "Thengar", personality: "scared", outfit: ["foxFurDress", 0], weapon: ["none", [0.1, 0.1], 0, 0, 1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[134705.65069474035, -27221.652165392523]], merchant: true, merchandise: [[new Item("coins", false, false), 25], [new Item("foxClothingF", false, false), 2], [new Item("foxClothingM", false, false), 2], [new Item("thenganHunterOutfit", false, false), 2], [new Item("foxFurDress", false, false), 3], [new Item("thenganCommonwear", false, false), 2]]}));
                        ArtificialIntelligenceAccess[i].speed = 0.9;
                        ArtificialIntelligenceAccess[i].health = 3;
                        ArtificialIntelligenceAccess[i].healthMAX = 3;
                    }
                }
                scenicList.push(new Scenery("mediumTable", 134732.82395254908, -27166.282339323752, 1/2 * Math.PI, true));
                scenicList.push(new Scenery("mediumTable", 134577.6615917334, -27164.812468944634, 1/2 * Math.PI, true));
                scenicList.push(new Scenery("mediumTable", 134732.82395254908, -27166.282339323752 + 60, 1/2 * Math.PI, true));
                scenicList.push(new Scenery("mediumTable", 134577.6615917334, -27164.812468944634 - 60, 1/2 * Math.PI, true));
                scenicList.push(new Scenery("mediumTable", 134713.51267289423, -27290.279137443067 - 10, Math.PI, true));
                scenicList.push(new Scenery("mediumTable", 134618.0194606723, -27292.42517462789 - 10, Math.PI, true));
                scenicList.push(new Scenery("item", 134735.59571152544, -27118.855976254905, 0, "thengar", ["foxFurDress", 2, -45]));
                scenicList.push(new Scenery("item", 134558.31527889372, -27179.705754946775, 0, "thengar", ["thenganHunterOutfit", 3, -30]));
                scenicList.push(new Scenery("item", 134591.89687003242, -27181.18692149492, 0, "thengar", ["foxClothingF", 5, -30]));
                scenicList.push(new Scenery("item", 134696.2633568502 - 7, -27287.434644083336, 0, "thengar", ["foxPelt", 2, -50]));
                scenicList.push(new Scenery("item", 134695.6290908792 - 7, -27314.70808083982, 0, "thengar", ["foxPelt", 2, -50]));
                scenicList.push(new Scenery("item", 134598.5462029957 - 7, -27288.11083151629, 0, "thengar", ["foxPelt", 2, -50]));
                scenicList.push(new Scenery("item", 134599.47466437262 - 7, -27316.14087716852, 0, "thengar", ["foxPelt", 2, -50]));
                scenicList.push(new Scenery("item", 134749.75338416928, -27314.525564194897, 0, "thengar", ["bucketOfWater", 1, -15]));
                scenicList.push(new Scenery("loom", 134745.90125797002 + 6, -27227.262811658227, -1/2 * Math.PI, true));
                scenicList.push(new Scenery("sign", 134561.36071056846, -27019.68782047706 - 10, Math.PI, 3, "Ersula's Artisanal Tailoring"));

                change = "s3w13";
            }
        }
        else if (region == "s4w13") //CRANHEIM
        {
            if (change != "s4w13")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                scenicList.push(new Scenery("thenganorCastleParts", 132052.28850764598, -34720.825984448726, 1/2 * Math.PI, 2, 1)); //+5 south of south wall of the east entrance
                scenicList.push(new Scenery("thenganorCastleParts", 132052.28850764598, -36120.825984448726, 1/2 * Math.PI, 2, 1)); //+6 south of south wall of the east entrance
                scenicList.push(new Scenery("thenganorCastleParts", 132052.28850764598, -37520.825984448726, 1/2 * Math.PI, 2, 1)); //+7 south of south wall of the east entrance
                scenicList.push(new Scenery("thenganorCastleParts", 132052.28850764598, -38920.825984448726, 1/2 * Math.PI, 2, 1)); //+8 south of south wall of the east entrance
                scenicList.push(new Scenery("thenganorCastleParts", 132052.28850764598, -40320.825984448726, 1/2 * Math.PI, 2, 1)); //+9 south of south wall of the east entrance
                scenicList.push(new Scenery("thenganorCastleParts", 132052.28850764598, -41720.825984448726, 1/2 * Math.PI, 2, 1)); //+10 south of south wall of the east entrance
                scenicList.push(new Scenery("thenganorCastleParts", 132052.28850764598, -43120.825984448726, 1/2 * Math.PI, 2, 1)); //+11 south of south wall of the east entrance

                scenicList.push(new Scenery("thenganorCastleParts", 132680.28850764598, -43120.825984448726 - 700, Math.PI, 2, 1)); //bottom wall
                scenicList.push(new Scenery("thenganorCastleParts", 131980.28850764598, -43120.825984448726 - 700, Math.PI, 2, 5)); //bottom wall right corner
                scenicList.push(new Scenery("thenganorCastleParts", 134080.28850764598, -43120.825984448726 - 700, Math.PI, 2, 1)); //bottom wall 2
                scenicList.push(new Scenery("thenganorCastleParts", 135480.28850764598, -43120.825984448726 - 700, Math.PI, 2, 1)); //bottom wall 3
                scenicList.push(new Scenery("thenganorCastleParts", 136880.28850764598, -43120.825984448726 - 700, Math.PI, 2, 1)); //bottom wall 4
                scenicList.push(new Scenery("thenganorCastleParts", 138280.28850764598, -43120.825984448726 - 700, Math.PI, 2, 1)); //bottom wall 5
                scenicList.push(new Scenery("thenganorCastleParts", 139080.28850764598, -43120.825984448726 - 700, Math.PI, 2, 1)); //bottom wall 6

                scenicList.push(new Scenery("thenganorCastleParts", 139080.28850764598 + 590, -43120.825984448726, 1/2 * Math.PI, 2, 1)); //left wall
                scenicList.push(new Scenery("thenganorCastleParts", 139673.18302162958, -43120.825984448726 - 700, Math.PI, 2, 5)); //bottom wall left corner

                scenicList.push(new Scenery("thenganorCastleParts", 139080.28850764598 + 590, -41720.825984448726, 1/2 * Math.PI, 2, 1)); //left wall 1
                scenicList.push(new Scenery("thenganorCastleParts", 139080.28850764598 + 590, -40320.825984448726, 1/2 * Math.PI, 2, 1)); //left wall 2
                scenicList.push(new Scenery("thenganorCastleParts", 139080.28850764598 + 590, -38920.825984448726, 1/2 * Math.PI, 2, 1)); //left wall 3
                scenicList.push(new Scenery("thenganorCastleParts", 139080.28850764598 + 590, -38920.825984448726 + 1700, 1/2 * Math.PI, 2, 1)); //left wall 4
                scenicList.push(new Scenery("thenganorCastleParts", 139080.28850764598 + 590, -37520.825984448726 + 1700, 1/2 * Math.PI, 2, 1)); //left wall 5

                scenicList.push(new Scenery("thenganorCastleParts", 139080.28850764598 + 590, -36120.825984448726 + 1700, 1/2 * Math.PI, 2, 1)); //left wall 6
                scenicList.push(new Scenery("thenganorCastleParts", 139673.18302162958 + 75, -33839.42356589397 + 95, Math.PI, 2, 5)); //left wall inter corner

                change = "s4w13";
            }
        }
        else if (region == "s6w25") //CERGADET
        {
            if (change != "s6w25")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                scenicList.push(new Scenery("thenganorCastles", 255243.88583527954, -58665.60492560198 + 140, Math.PI, 1.55, 1));

                change = "s6w25";
            }
        }
        else if (region == "n3e4")
        {
            if (change != "n3e4")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION

                ArtificialIntelligenceAccess.push(new Unit(-42111.759180935485, 36114.91901192816, "Walrus", false, "smprfy1"));

                ArtificialIntelligenceAccess.push(new Unit(-42522.75012881963, 35490.253514282536, "Walrus", false, "smprfy2"));
                ArtificialIntelligenceAccess.push(new Unit(-41993.47000144826, 35703.797511478464, "Walrus", true, "smprfy3"));
                ArtificialIntelligenceAccess.push(new Unit(-43028.606830714605, 35741.72381453059, "Walrus", false, "smprfy4"));
                ArtificialIntelligenceAccess.push(new Unit(-42201.860954271935, 34250.4194343319, "Walrus", false, "smprfy5"));


                ArtificialIntelligenceAccess.push(new Unit(-33745.3909239559, 32259.710532259825, "Seal", false, "tututuna1"));
                ArtificialIntelligenceAccess.push(new Unit(-33595.53253569636, 32023.695549282544, "Seal", true, "tututuna2"));
                ArtificialIntelligenceAccess.push(new Unit(-33689.94035592042, 29728.515889251707, "Seal", false, "tututuna3"));
                ArtificialIntelligenceAccess.push(new Unit(-33755.575616853406, 30160.594551753507, "Seal", false, "tututuna4"));
                ArtificialIntelligenceAccess.push(new Unit(-41441.42012652418, 29328.31009889604, "Seal", false, "tututune1"));
                ArtificialIntelligenceAccess.push(new Unit(-41742.8647434569, 29617.325015934715, "Seal", true, "tututune2"));
                ArtificialIntelligenceAccess.push(new Unit(-42163.45159170879, 30058.662401196405, "Seal", false, "tututune3"));
                ArtificialIntelligenceAccess.push(new Unit(-41743.08143147891, 30457.565825181286, "Seal", "baby", "tututune4"));
                ArtificialIntelligenceAccess.push(new Unit(-41802.209475225616, 29053.088050702063, "Seal", false, "tututunae5"));
                ArtificialIntelligenceAccess.push(new Unit(-41648.01443241861, 29979.378116739186, "Seal", "baby", "tututunae6"));


                ArtificialIntelligenceAccess.push(new Unit(-33660.5641054271, 33336.24611237418, "Anemone", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-33949.90688543095, 33037.498972502995, "Anemone", true, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-33705.58092424714, 31423.760184634175, "Anemone", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-33093.504291548576, 31443.382516252455, "Anemone", false, "docile"));


                ArtificialIntelligenceAccess.push(new Unit(-33370.25901137692, 31353.55269010998, "Cangrejo", false, "vanchezee1"));
                ArtificialIntelligenceAccess.push(new Unit(-43396.44436703687, 34113.25860501157, "Cangrejo", "baby", "vanchezee2"));
                ArtificialIntelligenceAccess.push(new Unit(-43364.98142658613, 32262.526149031666, "Cangrejo", "baby", "vanchezee3"));


                scenicList.push(new Scenery("stone", -33214.71309851145, 31190.899376384637, 1.4, 2, 1));
                scenicList.push(new Scenery("stone", -33492.8574964295, 31511.247832931724, 2.8, 2.5, 2));
                scenicList.push(new Scenery("stone", -33715.23937013808, 31200.56716837959, 1, 4, 1));
                scenicList.push(new Scenery("stone", -33680.67264789111, 31296.654563613884, 8, 1, 3));
                scenicList.push(new Scenery("stone", -42421.383280122565, 34437.64008677247, 2.7, 1.5, 2));


                change = "n3e4";
            }
        }
        else if (region == "n3e3")
        {
            if (change != "n3e3")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                ArtificialIntelligenceAccess.push(new Unit(-24967.95942467394, 34904.07320386577, "Balkur", false, "cmpstlker1"));
                ArtificialIntelligenceAccess.push(new Unit(-29185.656933914248, 28455.918205698195, "Balkur", false, "cmpstlker2"));
                ArtificialIntelligenceAccess.push(new Unit(-25456.654951844466, 29518.7138493818, "Balkur", true, "cmpstlker3"));
                ArtificialIntelligenceAccess.push(new Unit(-24893.162323898978, 27667.89608869298, "Balkur", false, "cmpstlker4"));


                ArtificialIntelligenceAccess.push(new Unit(-27765.800400812022, 36517.97476152174, "Waanti", false, "tngr1"));
                ArtificialIntelligenceAccess.push(new Unit(-27630.639007442165, 36645.15265099273, "Waanti", true, "tngr2"));
                ArtificialIntelligenceAccess.push(new Unit(-27377.056417070977, 36411.324002670655, "Waanti", "baby", "tngr3"));
                ArtificialIntelligenceAccess.push(new Unit(-27931.343447492814, 36615.14376255685, "Waanti", "baby", "tngr4"));
                ArtificialIntelligenceAccess.push(new Unit(-27816.011968942392, 36432.869667153696, "Waanti", false, "tngr5"));
                ArtificialIntelligenceAccess.push(new Unit(-25498.24922768541, 29448.766416831444, "Waanti", "baby", "sacfice1"));
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "cmpstlker3")
                    {
                        ArtificialIntelligenceAccess[i].speed += 0.8;
                        ArtificialIntelligenceAccess[i].tamable = false;
                    }
                    if (ArtificialIntelligenceAccess[i].ID == "sacfice1")
                    {
                        ArtificialIntelligenceAccess[i].health = 0;
                        ArtificialIntelligenceAccess[i].killNotByPlayer = true;
                    }
                }
                ArtificialIntelligenceAccess.push(new Unit(-27367.712572900316, 32228.10959239897, "Waanti", false, "tngy1"));
                ArtificialIntelligenceAccess.push(new Unit(-27162.159994063044, 31961.29165783033, "Waanti", true, "tngy2"));
                ArtificialIntelligenceAccess.push(new Unit(-27461.759247391838, 32058.609165561244, "Waanti", false, "tngy3"));


                ArtificialIntelligenceAccess.push(new Unit(-31395.048765221312, 36285.86053319131, "Walrus", false, "scrutiny1"));
                ArtificialIntelligenceAccess.push(new Unit(-31902.35312359663, 35456.25224430066, "Walrus", false, "scrutiny2"));
                ArtificialIntelligenceAccess.push(new Unit(-30764.04257803273, 34900.038215475746, "Walrus", false, "scrutiny3"));


                ArtificialIntelligenceAccess.push(new Unit(-29235.896462266453, 36482.181020806696, "Cangrejo", "baby", "vouintir1"));
                ArtificialIntelligenceAccess.push(new Unit(-30668.893172050703, 33721.43176966589, "Cangrejo", "baby", "vouintir2"));


                ArtificialIntelligenceAccess.push(new Unit(-32691.237637196624, 33921.65347196153, "Anemone", false, "stalkerhool1"));


                ArtificialIntelligenceAccess.push(new Unit(-32706.960467719055, 33359.562733959836, "Seal", false, "wblytmywmy1"));


                ArtificialIntelligenceAccess.push(new Unit(-25350.323530124344, 32972.761036110816, "Koobu", false, "itsntcmplcated1"));
                ArtificialIntelligenceAccess.push(new Unit(-30287.36841990456, 28811.98734587055, "Koobu", true, "itsntcmplcated2"));
                ArtificialIntelligenceAccess.push(new Unit(-31084.24376777069, 32060.871485880547, "Koobu", false, "itsntcmplcated3"));

                ArtificialIntelligenceAccess.push(new Unit(-32392.372884032484, 30347.110838287772, "WinterWolf", false, "Hzurbo1"));
                ArtificialIntelligenceAccess.push(new Unit(-32171.775122566265, 30417.753388949455, "WinterWolf", false, "Hzurbo2"));
                ArtificialIntelligenceAccess.push(new Unit(-26223.312452045066, 30343.25882804846, "WinterWolf", false, "huzurz1"));
                ArtificialIntelligenceAccess.push(new Unit(-26404.44958262146, 30515.755681089504, "WinterWolf", false, "huzurz2"));
                ArtificialIntelligenceAccess.push(new Unit(-26536.08880915773, 30448.928101451518, "WinterWolf", false, "huzurz3"));
                ArtificialIntelligenceAccess.push(new Unit(-26494.945352246457, 30588.555075710472, "WinterWolf", false, "huzurz4"));
                ArtificialIntelligenceAccess.push(new Unit(-29828.254154540125, 30486.444002092612, "WinterWolf", false, "huzurg1"));
                ArtificialIntelligenceAccess.push(new Unit(-29941.466619892566, 30380.038747189898, "WinterWolf", false, "huzurg2"));
                ArtificialIntelligenceAccess.push(new Unit(-30143.3062248042, 30595.62956301059, "WinterWolf", false, "huzurg3"));
                ArtificialIntelligenceAccess.push(new Unit(-30233.102929329176, 30404.811138338813, "WinterWolf", false, "huzurg4"));
                ArtificialIntelligenceAccess.push(new Unit(-30318.99846467842, 30282.930647321762, "WinterWolf", false, "huzurg5"));
                ArtificialIntelligenceAccess.push(new Unit(-32064.438845216286, 27984.982013473324, "WinterWolf", false, "huzurg2"));
                ArtificialIntelligenceAccess.push(new Unit(-31872.419673779503, 27882.49325325861, "WinterWolf", false, "huzurg3"));
                ArtificialIntelligenceAccess.push(new Unit(-32075.802163638626, 27691.04517131147, "WinterWolf", false, "huzurg4"));
                ArtificialIntelligenceAccess.push(new Unit(-31914.295994060154, 27782.3887139283, "WinterWolf", false, "huzurg5"));


                ArtificialIntelligenceAccess.push(new Unit(-28462.101959652846, 34818.071087664954, "Glutid", false, "sngpanoman1"));
                ArtificialIntelligenceAccess.push(new Unit(-28343.54698307122, 33560.04813433556, "Glutid", false, "sngpanoman2"));


                scenicList.push(new Scenery("stone", -32447.763967050763, 35175.28294914136, 2.9, 2.5, 2));
                scenicList.push(new Scenery("stone", -25112.64827629818, 31198.186311487774, 1.8, 1.5, 1));
                scenicList.push(new Scenery("stone", -29235.39772742259, 29741.92860948029, 8, 1, 2));
                scenicList.push(new Scenery("stone", -31092.521753799338, 33573.939427528676, 5.8, 2, 3));
                scenicList.push(new Scenery("stone", -25890.42711273434, 29317.137409856678, 3, 3.5, 1));
                scenicList.push(new Scenery("stone", -25481.42755807914, 28996.078605749128, 4, 1, 2));


                scenicList.push(new Scenery("bushkaPlant", -24856.498904779022, 33587.887711522686, 4.1, true));
                scenicList.push(new Scenery("bushkaPlant", -29544.362278867964, 27887.011265302477, 1.74, true));
                scenicList.push(new Scenery("bushkaPlant", -24579.767035972964, 29710.62484832691, 2.4, true));
                scenicList.push(new Scenery("bushkaPlant", -26096.715330318548, 33985.61101417645, 7.7, true));


                scenicList.push(new Scenery("tyrniPlant", -32005.599820848212, 30348.763155454504, 6.5, true));
                scenicList.push(new Scenery("tyrniPlant", -30582.881968957674, 28936.546094378376, 2.2, true));


                scenicList.push(new Scenery("wightbloomPlant", -29493.573989007087, 31708.7908913202, 1.3, true));

                ArtificialIntelligenceAccess.push(new Unit(-33660.5641054271, 33336.24611237418, "Anemone", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-33949.90688543095, 33037.498972502995, "Anemone", true, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-33705.58092424714, 31423.760184634175, "Anemone", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-33093.504291548576, 31443.382516252455, "Anemone", false, "docile"));


                ArtificialIntelligenceAccess.push(new Unit(-33370.25901137692, 31353.55269010998, "Cangrejo", "baby", "vanchezee1"));
                ArtificialIntelligenceAccess.push(new Unit(-43396.44436703687, 34113.25860501157, "Cangrejo", "baby", "vanchezee2"));
                ArtificialIntelligenceAccess.push(new Unit(-43364.98142658613, 32262.526149031666, "Cangrejo", "baby", "vanchezee3"));

                scenicList.push(new Scenery("stone", -33214.71309851145, 31190.899376384637, 1.4, 2, 1));
                scenicList.push(new Scenery("stone", -33492.8574964295, 31511.247832931724, 2.8, 2.5, 2));
                scenicList.push(new Scenery("stone", -33715.23937013808, 31200.56716837959, 1, 4, 1));
                scenicList.push(new Scenery("stone", -33680.67264789111, 31296.654563613884, 8, 1, 3));
                scenicList.push(new Scenery("stone", -42421.383280122565, 34437.64008677247, 2.7, 1.5, 2));

                change = "n3e3";
            }
        }
        else if (region == "n2e3")
        {
            if (change != "n2e3")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                ArtificialIntelligenceAccess.push(new Unit(-24394.873863380508, 26263.458181243084, "Waanti", false, "tnty1"));
                ArtificialIntelligenceAccess.push(new Unit(-24556.92669607412, 26325.707141135532, "Waanti", "baby", "tnty2"));
                ArtificialIntelligenceAccess.push(new Unit(-24729.821260953184, 26182.997014516153, "Waanti", "baby", "tnty3"));
                ArtificialIntelligenceAccess.push(new Unit(-24545.30077183146, 26003.21316323584, "Waanti", false, "tnty4"));
                ArtificialIntelligenceAccess.push(new Unit(-25135.568984843852, 26198.336459452876, "Waanti", true, "tnty5"));
                ArtificialIntelligenceAccess.push(new Unit(-24783.54010627586, 26122.70002406026, "Waanti", false, "tnty6"));
                ArtificialIntelligenceAccess.push(new Unit(-32668.659491720045, 23722.032962053865, "Waanti", false, "tniy7"));
                ArtificialIntelligenceAccess.push(new Unit(-32470.802903084674, 23585.62282032213, "Waanti", false, "tniy8"));
                ArtificialIntelligenceAccess.push(new Unit(-32391.077828056506, 23646.830526770038, "Waanti", false, "tniy9"));
                ArtificialIntelligenceAccess.push(new Unit(-32334.582997982583, 23843.768424589423, "Waanti", false, "tniy10"));
                ArtificialIntelligenceAccess.push(new Unit(-32157.29417216764, 23600.182005255738, "Waanti", false, "tniy11"));
                ArtificialIntelligenceAccess.push(new Unit(-28932.19589410725, 18933.272698348446, "Waanti", false, "tniy12"));
                ArtificialIntelligenceAccess.push(new Unit(-28764.723287994788, 19006.982312127937, "Waanti", "baby", "tniy13"));
                ArtificialIntelligenceAccess.push(new Unit(-28724.11997462559, 18920.266936199292, "Waanti", "baby", "tniy14"));
                ArtificialIntelligenceAccess.push(new Unit(-29033.3938954674, 19129.090214874843, "Waanti", true, "tniy15"));
                ArtificialIntelligenceAccess.push(new Unit(-31741.103528914744, 22261.891981188135, "Waanti", true, "tniy16"));
                ArtificialIntelligenceAccess.push(new Unit(-31504.30713662937, 22171.32199300939, "Waanti", false, "tniy17"));
                ArtificialIntelligenceAccess.push(new Unit(-31564.242690983898, 22069.146063028234, "Waanti", false, "tniy18"));
                ArtificialIntelligenceAccess.push(new Unit(-31412.546078374744, 22219.46654405548, "Waanti", false, "tniy19"));
                ArtificialIntelligenceAccess.push(new Unit(-33067.70965035682, 21945.572445948106, "Waanti", false, "tniy20"));
                ArtificialIntelligenceAccess.push(new Unit(-32954.21054056608, 22064.854008471146, "Waanti", false, "tniy21"));


                ArtificialIntelligenceAccess.push(new Unit(-29289.45480711395, 26414.59020870034, "WinterWolf", false, "Hzubo1"));
                ArtificialIntelligenceAccess.push(new Unit(-29445.859696893767, 26341.686031302117, "WinterWolf", false, "Hzubo2"));
                ArtificialIntelligenceAccess.push(new Unit(-29548.04168984535, 26470.41339566191, "WinterWolf", false, "Hzubo3"));
                ArtificialIntelligenceAccess.push(new Unit(-32924.25223983715, 25554.585481024813, "WinterWolf", false, "Hzubo4"));
                ArtificialIntelligenceAccess.push(new Unit(-32769.834272759465, 25615.69605417635, "WinterWolf", false, "Hzubo5"));
                ArtificialIntelligenceAccess.push(new Unit(-32926.3126602709, 25442.55756406224, "WinterWolf", false, "Hzubo6"));
                ArtificialIntelligenceAccess.push(new Unit(-33060.74684061924, 25502.90636489994, "WinterWolf", false, "Hzubo7"));
                ArtificialIntelligenceAccess.push(new Unit(-26573.424610597325, 20927.594754735277, "WinterWolf", false, "Hzubo8"));
                ArtificialIntelligenceAccess.push(new Unit(-26607.831259603536, 20803.848417534275, "WinterWolf", false, "Hzubo9"));
                ArtificialIntelligenceAccess.push(new Unit(-26669.086201327274, 21034.58953969123, "WinterWolf", false, "Hzubo11"));
                ArtificialIntelligenceAccess.push(new Unit(-28610.912412843325, 23663.285200944156, "WinterWolf", false, "Hzubo12"));
                ArtificialIntelligenceAccess.push(new Unit(-28789.026492502828, 23609.460613553343, "WinterWolf", false, "Hzubo13"));
                ArtificialIntelligenceAccess.push(new Unit(-28952.618215435697, 23730.853118405837, "WinterWolf", false, "Hzubo14"));
                ArtificialIntelligenceAccess.push(new Unit(-28727.576188102146, 23303.124270510543, "WinterWolf", false, "Hzubo15"));
                ArtificialIntelligenceAccess.push(new Unit(-28365.056648295216, 23385.364952609816, "WinterWolf", false, "Hzubo16"));
                ArtificialIntelligenceAccess.push(new Unit(-28411.117738601915, 23587.08023635718, "WinterWolf", false, "Hzubo17"));
                ArtificialIntelligenceAccess.push(new Unit(-28461.92988986958, 23442.1077420702, "WinterWolf", true, "Hzubo18"));
                ArtificialIntelligenceAccess.push(new Unit(-24465.182165151044, 22593.429802619765, "WinterWolf", false, "Hzubo19"));
                ArtificialIntelligenceAccess.push(new Unit(-24584.615643652756, 22501.566214192142, "WinterWolf", false, "Hzubo20"));


                ArtificialIntelligenceAccess.push(new Unit(-30726.45319272623, 25061.062426296052, "Koobu", false, "itcarenono1"));


                ArtificialIntelligenceAccess.push(new Unit(-31560.98926858056, 18959.310001778125, "Balkur", true, "crmpsinmibck1"));
                ArtificialIntelligenceAccess.push(new Unit(-30333.896456414106, 21084.181520593902, "Balkur", true, "crmpsinmibck2"));


                scenicList.push(new Scenery("bushkaPlant", -31618.878109125275, 22395.717538808563, 1.7, true));
                scenicList.push(new Scenery("bushkaPlant", -27090.03605111447, 18608.78509760645, 1.3, true));
                scenicList.push(new Scenery("bushkaPlant", -25565.95726347849, 23237.58390571455, 4.9, true));


                scenicList.push(new Scenery("wightbloomPlant", -28854.710505786046, 24339.73083299406, 1.3, true));
                scenicList.push(new Scenery("wightbloomPlant", -31576.62936184594, 19867.944981955723, 8.1, true));


                scenicList.push(new Scenery("stone", -29131.932890356777, 18604.82658462505, 3.69, 1.5, 2));
                scenicList.push(new Scenery("stone", -29176.675163637476, 24275.852516896208, 7.59, 2, 1));
                scenicList.push(new Scenery("stone", -29072.773987733963, 24163.835112436973, 3.21, 1, 1));


                ArtificialIntelligenceAccess.push(new Unit(-24898.17018574119, 18265.605674861054, "Glutid", true, "idntwnja1", {patrolStops: 3, patrolLoop: true, route:[[-25059.60864539978, 18152.15040859906],[-24581.247073860417, 17443.8952333381],[-24289.567315336546, 18362.951400317117]]}));
                ArtificialIntelligenceAccess.push(new Unit(-24636.39109868669, 17888.938536115613, "Glutid", false, "idntwnja2", {patrolStops: 3, patrolLoop: true, route:[[-24802.823186399695, 17814.22611192361],[-25487.430681586964, 17766.065139931878],[-25990.307583110935, 17418.963998206244]]}));
                ArtificialIntelligenceAccess.push(new Unit(-26495.673907745586, 25189.75023394599, "Glutid", false, "idntwnja3", {patrolStops: 3, patrolLoop: true, route:[[-26264.998781461793, 24920.973223177218],[-26821.138786631887, 24861.554783505497],[-27470.673902695988, 25373.661417930907]]}));
                ArtificialIntelligenceAccess.push(new Unit(-26442.356883331893, 24908.6064531166, "Glutid", false, "idntwnja4", {patrolStops: 3, patrolLoop: true, route:[[-26482.9470021397, 24522.720911514105],[-25480.4984705612, 24817.976509546166],[-27498.828241206007, 24918.193322836312]]}));
                ArtificialIntelligenceAccess.push(new Unit(-32512.408514735576, 17427.14388751892, "Glutid", false, "idntwnja5", {patrolStops: 3, patrolLoop: true, route:[[-31952.92971121277, 17173.38663560203],[-33093.19964476192, 17201.544250355513],[-33174.803278232226, 18012.76812964399]]}));

                change = "n2e3";
            }
        }
        else if (region == "n2e4")
        {
            if (change != "n2e4")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION

                ArtificialIntelligenceAccess.push(new Unit(-42385.22403954498, 26350.63303092983, "Seal", false, "tannban1"));


                ArtificialIntelligenceAccess.push(new Unit(-41294.64712565839, 25017.284098555483, "WinterWolf", false, "horponoodle1"));
                ArtificialIntelligenceAccess.push(new Unit(-41456.65574082972, 24843.244286716956, "WinterWolf", false, "horponoodle2"));
                ArtificialIntelligenceAccess.push(new Unit(-41659.660920375536, 24915.380274234943, "WinterWolf", false, "horponoodle3"));
                ArtificialIntelligenceAccess.push(new Unit(-42425.188574745225, 20029.906670258468, "WinterWolf", false, "hyrponoodle1"));
                ArtificialIntelligenceAccess.push(new Unit(-42588.2849968137, 20123.011917271502, "WinterWolf", false, "hyrponoodle2"));
                ArtificialIntelligenceAccess.push(new Unit(-42690.659723232704, 19872.931013618836, "WinterWolf", false, "hyrponoodle3"));
                ArtificialIntelligenceAccess.push(new Unit(-42555.70673152464, 20231.299117753544, "WinterWolf", false, "hyrponoodle4"));
                ArtificialIntelligenceAccess.push(new Unit(-42829.47253791309, 20094.793357523333, "WinterWolf", false, "hyrponoodle5"));
                ArtificialIntelligenceAccess.push(new Unit(-42590.95889973786, 19969.966818944256, "WinterWolf", true, "hyrponoodle6"));
                ArtificialIntelligenceAccess.push(new Unit(-34983.191801807436, 20195.833411108517, "WinterWolf", false, "hupupy1"));
                ArtificialIntelligenceAccess.push(new Unit(-34934.46054563522, 20007.92664872743, "WinterWolf", false, "hupupy2"));
                ArtificialIntelligenceAccess.push(new Unit(-34803.817327115314, 20120.655827132112, "WinterWolf", false, "hupupy3"));


                ArtificialIntelligenceAccess.push(new Unit(-43402.78237227514, 23422.013190550308, "Waanti", false, "tnguu1"));
                ArtificialIntelligenceAccess.push(new Unit(-43026.34066899121, 23443.0056315027 , "Waanti", true, "tnguu2"));
                ArtificialIntelligenceAccess.push(new Unit(-43331.75665099093, 23577.22596962192, "Waanti", "baby", "tnguu3"));
                ArtificialIntelligenceAccess.push(new Unit(-42657.84674774035, 22666.61716467939, "Waanti", false, "tnguu4"));
                ArtificialIntelligenceAccess.push(new Unit(-42871.258437328004, 22497.818471987463, "Waanti", false, "tnguu5"));
                ArtificialIntelligenceAccess.push(new Unit(-41194.97666637915, 18758.84193507348, "Waanti", false, "tnguu4"));
                ArtificialIntelligenceAccess.push(new Unit(-41068.79784516783, 18914.676475811466, "Waanti", false, "tnguu5"));


                scenicList.push(new Scenery("bushkaPlant", -42329.73856150902, 25132.679061400213, 3.7, true));
                scenicList.push(new Scenery("bushkaPlant", -41424.78866313792, 21415.844668066857, 2, true));
                scenicList.push(new Scenery("bushkaPlant", -42350.6775887099, 17924.70656695527, 2.87, true));


                ArtificialIntelligenceAccess.push(new Unit(-40574.82001502175, 23439.388805878618, "Cangrejo", "baby", "hidnbtlshp1"));


                ArtificialIntelligenceAccess.push(new Unit(-43615.2866734504, 18133.822488451544, "Glutid", false, "idntwnna1"));
                ArtificialIntelligenceAccess.push(new Unit(-42981.554246904096, 17447.890261400073, "Glutid", false, "idntwnna2", {patrolStops: 2, patrolLoop: true, route:[[-43020.97907953195, 17439.815875368033],[-41912.751353404725, 17676.683132880364]]}));


                ArtificialIntelligenceAccess.push(new Unit(-34759.27983289633, 17774.442251530327, "Balkur", true, "meahmor1"));


                ArtificialIntelligenceAccess.push(new Unit(-34545.129363006614, 23522.319400106324, "Anemone", false, "nonayermoreno1"));


                change = "n2e4";
            }
        }
        else if (region == "n4w1")
        {
            if (change != "n4w1")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                //meant for the map

                //humans

                //balkur
                ArtificialIntelligenceAccess.push(new Unit(11823, 39177, "Balkur", true, "Kalsh"));

                //waanti
                ArtificialIntelligenceAccess.push(new Unit(15521, 37831, "Waanti", "baby", "yami"));
                ArtificialIntelligenceAccess.push(new Unit(15263, 37565, "Waanti", false, "yamia"));
                ArtificialIntelligenceAccess.push(new Unit(13536, 38015, "Waanti", false, "yamiana"));
                ArtificialIntelligenceAccess.push(new Unit(13719, 37676, "Waanti", true, "yamonn"));

                //koobu
                ArtificialIntelligenceAccess.push(new Unit(9793, 43009, "Koobu", false, "Koplepaka"));
                ArtificialIntelligenceAccess.push(new Unit(9130, 42067, "Koobu", true, "Koplipaca"));


                //winter wolves
                ArtificialIntelligenceAccess.push(new Unit(15879, 40932, "WinterWolf", false, "Laleg"));
                ArtificialIntelligenceAccess.push(new Unit(15676, 40621, "WinterWolf", false, "Laleug"));
                ArtificialIntelligenceAccess.push(new Unit(8826, 41225, "WinterWolf", false, "Laleugwe"));

                //glutids
                //ArtificialIntelligenceAccess.push(new Unit(-5986, 42096, "Glutid", true, "Gluupto", {patrolStops: 6, patrolLoop: true, route:[[-6169, 41490], [-7261, 41806], [-7605, 41527], [-7190, 42889], [-5876, 43183], [-5986, 42096]]}));
                //ArtificialIntelligenceAccess.push(new Unit(-7659, 42050, "Glutid", false, "Gluho", {patrolStops: 1, patrolLoop: true, route:[[-7659, 42050]]}));



                //beach creatures
                ArtificialIntelligenceAccess.push(new Unit(12368, 47128, "Cangrejo", false, "Cangrev"));
                ArtificialIntelligenceAccess.push(new Unit(16155, 46846, "Cangrejo", "baby", "Cangrevi"));
                ArtificialIntelligenceAccess.push(new Unit(16277, 45472, "Cangrejo", "baby", "Cangrevol"));
                ArtificialIntelligenceAccess.push(new Unit(11034, 43918, "Cangrejo", true, "Crange"));
                ArtificialIntelligenceAccess.push(new Unit(11958, 45773, "Cangrejo", "baby", "Cangreve"));

                //anemones
                ArtificialIntelligenceAccess.push(new Unit(15545, 46314, "Anemone", false, "slime"));
                ArtificialIntelligenceAccess.push(new Unit(14983, 45268, "Anemone", true, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(8572, 46630, "Anemone", false, "slimolm"));
                ArtificialIntelligenceAccess.push(new Unit(9164, 46506, "Anemone", true, "sally slimer"));
                ArtificialIntelligenceAccess.push(new Unit(12708, 45190, "Anemone", "baby", "docile"));
                ArtificialIntelligenceAccess.push(new Unit(10061, 46557, "Anemone", "baby", "slikim"));

                //seals
                //ArtificialIntelligenceAccess.push(new Unit(-4505, 45575, "Seal", false, "arf"));

                //mites
                ArtificialIntelligenceAccess.push(new Unit(14550, 44842, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(14570, 44822, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(14560, 44852, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(14540, 44837, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(14530, 44832, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(14550, 44825, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(16165, 44171, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(16165, 44191, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(16180, 44175, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(9984, 44944, "BeachMite", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(10004, 44950, "BeachMite", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(9994, 44934, "BeachMite", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(9998, 44944, "BeachMite", false, "docile"));



                //cloimids
                ArtificialIntelligenceAccess.push(new Unit(12076, 45331, "Cloimid", true, "moistClambyGrope", {rotation: 120/360 * 2 * Math.PI}));
                ArtificialIntelligenceAccess.push(new Unit(12105, 45345, "Cloimid", false, "moistClambySwaddle", {rotation: 180/360 * 2 * Math.PI}));
                ArtificialIntelligenceAccess.push(new Unit(15841, 45594, "Cloimid", false, "moistClambyEngulfment", {rotation: 0/360 * 2 * Math.PI}));
                ArtificialIntelligenceAccess.push(new Unit(15861, 45583, "Cloimid", false, "moistClambyCapture", {rotation: 90/360 * 2 * Math.PI}));

                //Plants
                scenicList.push(new Scenery("bushkaPlant", 14638, 37697, 23, true));
                scenicList.push(new Scenery("tyrniPlant", 9530, 42815, 5.5555, true));
                scenicList.push(new Scenery("tyrniPlant", 12266, 39549, 0.4, true));
                scenicList.push(new Scenery("tyrniPlant", 13358, 40837, -2.8, true));
                scenicList.push(new Scenery("wightbloomPlant", 9434, 40978, 9.9, true));


                //beached kelp
                var rnd = Math.random();
                if (rnd <= 0.3)
                {
                    scenicList.push(new Scenery("beachedKelp", 10980, 44193, 14, 1));
                }
                else if (rnd <= 0.65)
                {
                    scenicList.push(new Scenery("beachedKelp", 12848, 43088, -6.9, 1));
                }
                else
                {
                    scenicList.push(new Scenery("beachedKelp", 14871, 44704, 2, 2));
                }

                //Scenery
                scenicList.push(new Scenery("stone", 12553, 45953, -3, 2, 3));
                scenicList.push(new Scenery("stone", 11666, 45702, -1.2, 1, 1));
                scenicList.push(new Scenery("stone", 12093, 45368, 5.7, 1.5, 1));
                scenicList.push(new Scenery("stone", 12060, 45342, -7.7, 1, 2));
                scenicList.push(new Scenery("stone", 12008, 45870, -9.25, 0.5, 2));
                scenicList.push(new Scenery("stone", 13454, 45674, -6, 1.5, 3));
                scenicList.push(new Scenery("stone", 13059, 44992, -6, 1, 2));
                scenicList.push(new Scenery("stone", 12704, 45575, 4, 0.5, 1));
                scenicList.push(new Scenery("stone", 15860, 45602, 8.111, 1, 3));


                if (uniqueChars.jalmariLDS && uniqueChars.rannukLDS) //pirates land 1/4 times the map loads to hand over the jarl's cut of stolen goods and currency
                {
                    if (Math.random() >= 0.75)
                    {
                        scenicList.push(new Scenery("floatingBoat", 14654, 46479, Math.PI - 0.2, true));
                        scenicList.push(new Scenery("floatingBoat", 14035, 46372, Math.PI - 0.05, true));
                        scenicList.push(new Scenery("floatingBoat", 14330, 46673, 1/2 * Math.PI + 0.3, true));
                        scenicList.push(new Scenery("crate", 14325, 45966, -1.6/4 * Math.PI, 2, [0.9]));
                        scenicList.push(new Scenery("crate", 14033, 46363, 2.9/4 * Math.PI, 2, [0.65]));
                        ArtificialIntelligenceAccess.push(new Unit(14357, 45823, "Soldier", false, "Stambjord Conspirator", {race: "Freynor", faction: "hostile", con: 8, speed: 1.45, outfit: ["chainArmour", 7.5], weapon: ["freydicSword", [8, 8], 0, 16, 1.1], ranged: [false, "arrow", 7, 2000, 1, 6, 0, "none", 1.50], patrolStops: 1, patrolLoop: false, route:[[14345, 45927]]}));
                        ArtificialIntelligenceAccess.push(new Unit(14596, 46211, "Soldier", false, "Salt-Blood Conspirator", {race: "Freynor", faction: "hostile", con: 5, speed: 1.4, outfit: ["sealSkinClothing", 0], weapon: ["freydicSpear", [4, 4], 4, 16, 2.5], ranged: [false, "arrow", 4, 1000, 1, 3, 0, "none", 2.25], patrolStops: 1, patrolLoop: false, route:[[14551, 46087]]}));
                        ArtificialIntelligenceAccess.push(new Unit(14338, 46674, "Soldier", false, "Salt-Blood Conspirator", {race: "Freynor", faction: "hostile", con: 7, speed: 0, outfit: ["sealSkinClothing", 0], weapon: ["longbow", [4, 4], 4, 16, 2.5], ranged: [true, "oiledArrow", 6, 2000, 1, 6, 0, "fire", 1.38], patrolStops: 0, patrolLoop: false, route:[[14551, 46087]]}));
                        ArtificialIntelligenceAccess.push(new Unit(14123, 46202, "Soldier", false, "Salt-Blood Conspirator", {race: "Freynor", faction: "hostile", con: 10, speed: 1.3, outfit: ["walrusLeatherArmour", 6], weapon: ["freydicSword", [7, 6], 0, 16, 1.15], ranged: [false, "arrow", 4, 1000, 1, 3, 0, "none", 2.25], patrolStops: 1, patrolLoop: false, route:[[14295, 45996]]}));
                    }
                }

                //algae
                scenicList.push(new Scenery("algae", 12110, 45387, 4.4, 3));
                scenicList.push(new Scenery("algae", 12077, 45370, 3, 2));
                scenicList.push(new Scenery("algae", 11680, 45700, 3, 0));
                scenicList.push(new Scenery("algae", 12539, 45944, 3, 1));
                scenicList.push(new Scenery("algae", 13440, 45674, 9, 3));
                scenicList.push(new Scenery("algae", 13458, 45663, -11, 1));
                scenicList.push(new Scenery("algae", 16395, 45745, -1, 3));

                //Hyeling Camps
                //ArtificialIntelligenceAccess.push(new Unit(10041, 8746, "Hyeling", true, "White Hammer"));
                //ArtificialIntelligenceAccess.push(new Unit(9711, 8503, "HyelingSoldier", false, "Running Stone"));
                //scenicList.push(new Scenery("largeCeremonialRockCircle", 10075 , 8783, 0, true));
                //scenicList.push(new Scenery("hyelingTent", 9199 , 8965, 1/2 * Math.PI, true));
                //scenicList.push(new Scenery("hyelingSkeleton", 10071 , 8788, 0.12, true));

                change = "n4w1";
            }
        }
        else if (region == "n4")
        {
            if (change != "n4")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                //meant for the map

                //humans

                //balkur
                //ArtificialIntelligenceAccess.push(new Unit(4674, 34221, "Balkur", true, "Kalobesh"));

                //waanti
                ArtificialIntelligenceAccess.push(new Unit(4592, 40636, "Waanti", "baby", "yiam"));
                ArtificialIntelligenceAccess.push(new Unit(4922, 40968, "Waanti", true, "yiam"));
                ArtificialIntelligenceAccess.push(new Unit(4480, 40755, "Waanti", false, "yiam"));

                //koobu
                ArtificialIntelligenceAccess.push(new Unit(6077, 39074, "Koobu", true, "Kooper"));
                ArtificialIntelligenceAccess.push(new Unit(-256, 39271, "Koobu", false, "Kouperr"));


                //winter wolves
                ArtificialIntelligenceAccess.push(new Unit(-1750, 37746, "WinterWolf", false, "Laugorrela"));
                ArtificialIntelligenceAccess.push(new Unit(-1952, 37576, "WinterWolf", false, "Laugorreli"));
                ArtificialIntelligenceAccess.push(new Unit(-2507, 37794, "WinterWolf", false, "Laugorrele"));
                ArtificialIntelligenceAccess.push(new Unit(-2462, 37602, "WinterWolf", false, "Laugorrelo"));

                //glutids
                ArtificialIntelligenceAccess.push(new Unit(3105, 39083, "Glutid", true, "Gluuptarg", {patrolStops: 5, patrolLoop: true, route:[[2547, 38775], [2060, 39066], [1805, 38576], [3082, 38393], [3105, 39083]]}));
                ArtificialIntelligenceAccess.push(new Unit(4084, 38917, "Glutid", false, "Gluho", {patrolStops: 1, patrolLoop: true, route:[[4084, 38917]]}));
                ArtificialIntelligenceAccess.push(new Unit(5167, 37697, "Glutid", false, "Gluho", {patrolStops: 3, patrolLoop: true, route:[[4186, 38091], [4854, 38220], [5167, 37697]]}));

                //beach creatures
                ArtificialIntelligenceAccess.push(new Unit(3918, 46085, "Cangrejo", "baby", "pincher"));
                ArtificialIntelligenceAccess.push(new Unit(3940, 45556, "Cangrejo", "baby", "pinchy"));
                if (Math.round(Math.random() * 3) == 2)
                {
                    ArtificialIntelligenceAccess.push(new Unit(1899, 45526, "Cangrejo", false, "pincharette"));
                }
                else
                {
                    if (Math.round(Math.random()))
                    {
                        ArtificialIntelligenceAccess.push(new Unit(1899, 45526, "Anemone", false, "slimer"));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(1899, 45526, "Anemone", "baby", "slimal"));
                    }
                }
                //anemones
                ArtificialIntelligenceAccess.push(new Unit(4505, 46018, "Anemone", true, "slimar"));
                if (change != "n4w1")
                {
                    ArtificialIntelligenceAccess.push(new Unit(6237, 46128, "Anemone", false, "slimic"));
                    ArtificialIntelligenceAccess.push(new Unit(6748, 45976, "Anemone", "baby", "slimy"));
                    ArtificialIntelligenceAccess.push(new Unit(6691, 45447, "Seal", false, "uf"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(6237, 46128, "Seal", true, "oof"));
                }
                //seals
                ArtificialIntelligenceAccess.push(new Unit(6282, 45115, "Seal", false, "uf"));
                ArtificialIntelligenceAccess.push(new Unit(881, 43637, "Seal", true, "arf"));
                ArtificialIntelligenceAccess.push(new Unit(301, 44174, "Seal", true, "urf"));
                ArtificialIntelligenceAccess.push(new Unit(675, 45843, "Seal", false, "ouf"));
                ArtificialIntelligenceAccess.push(new Unit(622, 46092, "Seal", "baby", "auf"));
                ArtificialIntelligenceAccess.push(new Unit(6, 45851, "Seal", true, "ourf"));
                ArtificialIntelligenceAccess.push(new Unit(-368, 46245, "Seal", false, "aurf"));
                ArtificialIntelligenceAccess.push(new Unit(-609, 45823, "Seal", false, "ouourf"));
                ArtificialIntelligenceAccess.push(new Unit(-210, 46421, "Seal", "baby", "oof"));
                ArtificialIntelligenceAccess.push(new Unit(-2542, 46364, "Seal", true, "aaurf"));
                ArtificialIntelligenceAccess.push(new Unit(-2256, 45723, "Seal", false, "auurf"));
                ArtificialIntelligenceAccess.push(new Unit(-1686, 46378, "Seal", false, "ouuoourf"));
                ArtificialIntelligenceAccess.push(new Unit(-2456, 46135, "Seal", "baby", "oaouf"));
                ArtificialIntelligenceAccess.push(new Unit(-2080, 43806, "Seal", false, "oaourf"));


                //mites
                ArtificialIntelligenceAccess.push(new Unit(3402, 45274, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(4121, 44340, "BeachMite", true, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(5415, 45022, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(5419, 45032, "BeachMite", true, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(5410, 45020, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(-2305, 44720, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(-2315, 44710, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(6088, 44272, "BeachMite", true, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(6080, 44270, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(6075, 44277, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(6095, 44275, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(4156, 44677, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(4150, 44670, "BeachMite", false, "bit"));

                //cloimids
                ArtificialIntelligenceAccess.push(new Unit(4721, 45874, "Cloimid", true, "moistClambyTickle", {rotation: -110/360 * 2 * Math.PI}));
                ArtificialIntelligenceAccess.push(new Unit(4707, 45837, "Cloimid", false, "moistClambyFondle", {rotation: -155/360 * 2 * Math.PI}));
                ArtificialIntelligenceAccess.push(new Unit(4679, 45836, "Cloimid", false, "moistClambyLick", {rotation: -235/360 * 2 * Math.PI}));
                ArtificialIntelligenceAccess.push(new Unit(4476, 44980, "Cloimid", true, "moistClambyTickles", {rotation: -90/360 * 2 * Math.PI}));
                ArtificialIntelligenceAccess.push(new Unit(4435, 44970, "Cloimid", false, "moistClambyLicks", {rotation: -45/360 * 2 * Math.PI}));
                ArtificialIntelligenceAccess.push(new Unit(4503, 44950, "Cloimid", true, "moistClambyKiss", {rotation: -180/360 * 2 * Math.PI}));
                ArtificialIntelligenceAccess.push(new Unit(4424, 44919, "Cloimid", true, "moistClambyKisses", {rotation: 35/360 * 2 * Math.PI}));
                ArtificialIntelligenceAccess.push(new Unit(4440, 44885, "Cloimid", false, "moistClambyHicky", {rotation: 72/360 * 2 * Math.PI}));


                //Plants
                scenicList.push(new Scenery("bushkaPlant", 3504, 42017, 1, true));
                scenicList.push(new Scenery("bushkaPlant", -1493, 38240, 1.55, true));
                scenicList.push(new Scenery("tyrniPlant", 5472, 38523, -7, true));
                scenicList.push(new Scenery("tyrniPlant", -1070, 41492, -3.77, true));
                scenicList.push(new Scenery("tyrniPlant", 3130, 42388, 4.6, true));
                //beached kelp
                if (Math.round(Math.random()))
                {
                    scenicList.push(new Scenery("beachedKelp", 471, 44505, 0, 2));
                }
                else
                {
                    scenicList.push(new Scenery("beachedKelp", 1311, 45052, 0, 2));
                }
                if (Math.round(Math.random()))
                {
                    scenicList.push(new Scenery("beachedKelp", 5025, 44670, 0, 0));
                }
                else
                {
                    scenicList.push(new Scenery("beachedKelp", 5533, 45224, 0, 0));
                }
                //Scenery
                scenicList.push(new Scenery("stone", 4265 , 41412, 2.4, 2, 3));
                scenicList.push(new Scenery("stone", 4897 , 41696, 2.2, 0.5, 2));
                scenicList.push(new Scenery("stone", 3914 , 45416, 6.2, 1.5, 2));
                scenicList.push(new Scenery("stone", 3548 , 45487, 6.9, 1, 1));
                scenicList.push(new Scenery("stone", 3797 , 45784, 1.3, 1, 2));
                scenicList.push(new Scenery("stone", 3329 , 45948, -5.58, 0.5, 3));
                scenicList.push(new Scenery("stone", 2423 , 45781, -8.1, 1.5, 1));
                scenicList.push(new Scenery("stone", 2172 , 45197, 0, 0.5, 2));
                scenicList.push(new Scenery("stone", 5252 , 46088, -2, 2.5, 2));
                scenicList.push(new Scenery("stone", 4750 , 46484, 4.3, 2, 3));
                scenicList.push(new Scenery("stone", 4684 , 45879, 3, 2, 1));
                scenicList.push(new Scenery("stone", 4461 , 44964, 0.5, 1.5, 2));
                scenicList.push(new Scenery("stone", 4467 , 44916, 4, 2, 1));
                scenicList.push(new Scenery("stone", 4417 , 44955, 2.9, 1, 3));

                //fishing spots
                scenicList.push(new Scenery("northernFishingSpot", 5425, 46857, 7, true));

                //algae
                scenicList.push(new Scenery("algae", 4656, 45859, 0, 1));
                scenicList.push(new Scenery("algae", 3889, 45421, 0, 0));
                scenicList.push(new Scenery("algae", 4687, 45890, 0, 2));
                scenicList.push(new Scenery("algae", 3811, 45788, 0, 3));

                //Hyeling Camps
                //ArtificialIntelligenceAccess.push(new Unit(10041, 8746, "Hyeling", true, "White Hammer"));
                //ArtificialIntelligenceAccess.push(new Unit(9711, 8503, "HyelingSoldier", false, "Running Stone"));
                //scenicList.push(new Scenery("largeCeremonialRockCircle", 10075 , 8783, 0, true));
                //scenicList.push(new Scenery("hyelingTent", 9199 , 8965, 1/2 * Math.PI, true));
                //scenicList.push(new Scenery("hyelingSkeleton", 10071 , 8788, 0.12, true));

                change = "n4";
            }
        }
        else if (region == "n4e1")
        {
            if (change != "n4e1")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                //meant for the map

                //humans

                //balkur
                ArtificialIntelligenceAccess.push(new Unit(-11656, 38003, "Balkur", false, "Kalosh"));

                //waanti
                //ArtificialIntelligenceAccess.push(new Unit(4592, 40636, "Waanti", "baby", "yiam"));

                //koobu
                ArtificialIntelligenceAccess.push(new Unit(-7200, 37835, "Koobu", false, "Kooplep"));
                ArtificialIntelligenceAccess.push(new Unit(-8193, 40071, "Koobu", false, "Koplepa"));


                //winter wolves
                ArtificialIntelligenceAccess.push(new Unit(-3927, 41789, "WinterWolf", false, "Laugge"));
                ArtificialIntelligenceAccess.push(new Unit(-4608, 39835, "WinterWolf", false, "Lauggen"));
                ArtificialIntelligenceAccess.push(new Unit(-4970, 39636, "WinterWolf", false, "Laugger"));
                ArtificialIntelligenceAccess.push(new Unit(-4759, 39284, "WinterWolf", false, "Lauggemora"));
                ArtificialIntelligenceAccess.push(new Unit(-4639, 39473, "WinterWolf", false, "Lauggerla"));
                ArtificialIntelligenceAccess.push(new Unit(-4253, 37623, "WinterWolf", true, "Lauggre"));
                ArtificialIntelligenceAccess.push(new Unit(-4113, 38109, "WinterWolf", false, "Lauggema"));
                ArtificialIntelligenceAccess.push(new Unit(-4603, 37889, "WinterWolf", false, "Lauggel"));

                //glutids
                ArtificialIntelligenceAccess.push(new Unit(-5986, 42096, "Glutid", true, "Gluupto", {patrolStops: 6, patrolLoop: true, route:[[-6169, 41490], [-7261, 41806], [-7605, 41527], [-7190, 42889], [-5876, 43183], [-5986, 42096]]}));
                ArtificialIntelligenceAccess.push(new Unit(-7659, 42050, "Glutid", false, "Gluho", {patrolStops: 1, patrolLoop: true, route:[[-7659, 42050]]}));



                //beach creatures
                ArtificialIntelligenceAccess.push(new Unit(-9336, 45440, "Cangrejo", false, "pinche-cangre"));
                ArtificialIntelligenceAccess.push(new Unit(-11160, 45962, "Cangrejo", "baby", "pinchita"));
                ArtificialIntelligenceAccess.push(new Unit(-7705, 46597, "Cangrejo", "baby", "pinchito"));
                ArtificialIntelligenceAccess.push(new Unit(-6043, 46094, "Cangrejo", "baby", "pinche-cabrito"));
                ArtificialIntelligenceAccess.push(new Unit(-4758, 46385, "Cangrejo", "baby", "pinche-cabrita"));
                ArtificialIntelligenceAccess.push(new Unit(-9923, 43166, "Cangrejo", "baby", "orilla"));

                //anemones
                ArtificialIntelligenceAccess.push(new Unit(-12446, 46075, "Anemone", false, "slimar"));
                ArtificialIntelligenceAccess.push(new Unit(-10256, 46819, "Anemone", true, "slimer"));
                ArtificialIntelligenceAccess.push(new Unit(-9720, 46665, "Anemone", false, "slimor"));
                ArtificialIntelligenceAccess.push(new Unit(-9477, 47249, "Anemone", "baby", "slimi"));
                ArtificialIntelligenceAccess.push(new Unit(-7678, 45765, "Anemone", false, "slime"));
                ArtificialIntelligenceAccess.push(new Unit(-12200, 46805, "Anemone", "baby", "slimua"));
                ArtificialIntelligenceAccess.push(new Unit(-11746, 46706, "Anemone", false, "slima"));

                //seals
                ArtificialIntelligenceAccess.push(new Unit(-4157, 45415, "Seal", "baby", "arf"));
                ArtificialIntelligenceAccess.push(new Unit(-4179, 45415, "Seal", "baby", "arf"));
                ArtificialIntelligenceAccess.push(new Unit(-4002, 45734, "Seal", "baby", "arf"));
                ArtificialIntelligenceAccess.push(new Unit(-4820, 45484, "Seal", "baby", "arf"));
                ArtificialIntelligenceAccess.push(new Unit(-4707, 45735, "Seal", false, "arf"));
                ArtificialIntelligenceAccess.push(new Unit(-4505, 45575, "Seal", false, "arf"));
                ArtificialIntelligenceAccess.push(new Unit(-4717, 45118, "Seal", false, "arf"));
                ArtificialIntelligenceAccess.push(new Unit(-4203, 44591, "Seal", false, "arf"));
                ArtificialIntelligenceAccess.push(new Unit(-3991, 54804, "Seal", true, "arf"));
                ArtificialIntelligenceAccess.push(new Unit(-4589, 45271, "Seal", true, "arf"));

                //mites
                ArtificialIntelligenceAccess.push(new Unit(-7904, 45301, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(-7922, 45309, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(-7908, 45316, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(-7918, 45306, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(-5449, 45135, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(-5495, 45144, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(-5493, 45131, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(-7032, 44586, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(-7040, 44590, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(-11788, 44206, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(-11789, 44205, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(-11787, 44207, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(-11788, 44207, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(-11789, 44206, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(-11788, 44205, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(-10390, 43557, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(-9503, 44326, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(-9500, 44328, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(-9501, 44324, "BeachMite", false, "bit"));
                ArtificialIntelligenceAccess.push(new Unit(-9505, 44328, "BeachMite", false, "bit"));

                //cloimids
                ArtificialIntelligenceAccess.push(new Unit(-10732, 46289, "Cloimid", true, "moistClambyRub", {rotation: 0/360 * 2 * Math.PI}));
                ArtificialIntelligenceAccess.push(new Unit(-10731, 46251, "Cloimid", false, "moistClambyLather", {rotation: 60/360 * 2 * Math.PI}));
                ArtificialIntelligenceAccess.push(new Unit(-8909, 45992, "Cloimid", false, "moistClambyGrope", {rotation: -120/360 * 2 * Math.PI}));
                ArtificialIntelligenceAccess.push(new Unit(-8870, 45962, "Cloimid", false, "moistClambySwallow", {rotation: -180/360 * 2 * Math.PI}));
                ArtificialIntelligenceAccess.push(new Unit(-8927, 45937, "Cloimid", false, "moistClambySlurp", {rotation: 90/360 * 2 * Math.PI}));
                ArtificialIntelligenceAccess.push(new Unit(-8951, 45960, "Cloimid", false, "moistClambyIntrusion", {rotation: 15/360 * 2 * Math.PI}));
                ArtificialIntelligenceAccess.push(new Unit(-8942, 45994, "Cloimid", false, "moistClambyMouthfull", {rotation: -75/360 * 2 * Math.PI}));
                ArtificialIntelligenceAccess.push(new Unit(-10533, 45730, "Cloimid", false, "moistClambyEmbrace", {rotation: -90/360 * 2 * Math.PI}));
                ArtificialIntelligenceAccess.push(new Unit(-7049, 45212, "Cloimid", false, "moistClambyTongueTickle", {rotation: -135/360 * 2 * Math.PI}));
                ArtificialIntelligenceAccess.push(new Unit(-7041, 45180, "Cloimid", false, "moistClambyTongueSuckle", {rotation: -200/360 * 2 * Math.PI}));

                //Plants
                scenicList.push(new Scenery("bushkaPlant", -9423, 38704, 20, true));
                scenicList.push(new Scenery("tyrniPlant", -8704, 39293, -4.444, true));
                scenicList.push(new Scenery("tyrniPlant", -12270, 38406, 0.4, true));
                scenicList.push(new Scenery("tyrniPlant", -9849, 41627, -2.4, true));
                scenicList.push(new Scenery("wightbloomPlant", -9294, 38575, 10, true));

                //beached kelp
                if (Math.round(Math.random()))
                {
                    scenicList.push(new Scenery("beachedKelp", -11296, 46004, 5, 1));
                }
                else
                {
                    scenicList.push(new Scenery("beachedKelp", -9629, 45946, 3.5, 1));
                }
                if (Math.round(Math.random()))
                {
                    scenicList.push(new Scenery("beachedKelp", -5522, 45521, 9, 2));
                }
                else
                {
                    scenicList.push(new Scenery("beachedKelp", -4846, 44813, 1, 0));
                }

                //Scenery
                scenicList.push(new Scenery("stone", -8132 , 46141, 4.1, 1.5, 3));
                scenicList.push(new Scenery("stone", -8902 , 45963, 1.82, 2, 1));
                scenicList.push(new Scenery("stone", -10701 , 46286, 2.13, 2, 2));
                scenicList.push(new Scenery("stone", -11038 , 46151, 1.82, 1, 1));
                scenicList.push(new Scenery("stone", -10795 , 45864, 5.77, 0.5, 2));
                scenicList.push(new Scenery("stone", -10527 , 45710, 9.5, 1, 3));
                scenicList.push(new Scenery("stone", -10249 , 45913, 11, 0.5, 3));
                scenicList.push(new Scenery("stone", -9949 , 45785, 1.3, 0.5, 1));

                scenicList.push(new Scenery("stone", -6405, 46194, 5.3, 1.5, 1));
                scenicList.push(new Scenery("stone", -5962, 46343, 8, 1, 1));
                scenicList.push(new Scenery("stone", -5636, 46125, 6.4444, 0.5, 1));
                scenicList.push(new Scenery("stone", -5893, 45380, -1, 2, 2));

                scenicList.push(new Scenery("stone", -7063, 45192, -1, 1.5, 2));

                //algae
                scenicList.push(new Scenery("algae", -8894, 45943, 3.4, 2));
                scenicList.push(new Scenery("algae", -8885, 45955, 3.4, 0));
                scenicList.push(new Scenery("algae", -8920, 45974, 5.5, 1));
                scenicList.push(new Scenery("algae", -6405, 46186, 1, 3));
                scenicList.push(new Scenery("algae", -5890, 45376, -5.678910, 0));
                scenicList.push(new Scenery("algae", -7066, 45190, -2.2, 1));
                scenicList.push(new Scenery("algae", -7059, 45167, -2.45, 3));
                scenicList.push(new Scenery("algae", -7071, 45216, 1.45, 2));

                //Hyeling Camps
                //ArtificialIntelligenceAccess.push(new Unit(10041, 8746, "Hyeling", true, "White Hammer"));
                //ArtificialIntelligenceAccess.push(new Unit(9711, 8503, "HyelingSoldier", false, "Running Stone"));
                //scenicList.push(new Scenery("largeCeremonialRockCircle", 10075 , 8783, 0, true));
                //scenicList.push(new Scenery("hyelingTent", 9199 , 8965, 1/2 * Math.PI, true));
                //scenicList.push(new Scenery("hyelingSkeleton", 10071 , 8788, 0.12, true));

                //sign to Venning
                scenicList.push(new Scenery("sign", -4811, 41074, 0 * Math.PI, 1, "Venning City - 41 sectors"));

                change = "n4e1";
            }
        }
        else if (region == "n4e2")
        {
            if (change != "n4e2")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //if the player is in a certain part of the quest Matrimony: Tor/Stambjord the quest is failed in a particular way if the player leaves the map too early.
                if (quests.matrimonyTorStambjordQuest == "coldfeet")
                {
                    quests.matrimonyTorStambjordQuest = "complete";
                    quests.matrimonyTorStambjordCompletionStyle = "coldfeet";
                    quests.completeQuests.push({name: "Matrimony: Tor/Stambjord", description: "You got cold feet and ran away from the wedding. An action which ended the planned marriage-alliance your father had arranged between your house and Stambjord."});
                    player.freynorFaction -= 150;
                }

                //REGION CREATION
                //Build AI Units

                //meant for the map

                //balkur
                //ArtificialIntelligenceAccess.push(new Unit(4674, 34221, "Balkur", true, "Kalobesh"));

                //waanti
                ArtificialIntelligenceAccess.push(new Unit(-18375, 38736, "Waanti", "baby", "yiamila"));
                ArtificialIntelligenceAccess.push(new Unit(-18094, 38942, "Waanti", false, "yiama"));
                ArtificialIntelligenceAccess.push(new Unit(-17783, 38573, "Waanti", true, "yiammen"));

                //koobu
                ArtificialIntelligenceAccess.push(new Unit(-16773, 38409, "Koobu", true, "Kooblev"));


                //winter wolves
                ArtificialIntelligenceAccess.push(new Unit(-22410, 37769, "WinterWolf", false, "Rrela"));
                ArtificialIntelligenceAccess.push(new Unit(-22643, 37479, "WinterWolf", false, "Rrel"));

                //glutids
                //ArtificialIntelligenceAccess.push(new Unit(3105, 39083, "Glutid", true, "Gluuptarg", {patrolStops: 5, patrolLoop: true, route:[[2547, 38775], [2060, 39066], [1805, 38576], [3082, 38393], [3105, 39083]]}));
                //ArtificialIntelligenceAccess.push(new Unit(4084, 38917, "Glutid", false, "Gluho", {patrolStops: 1, patrolLoop: true, route:[[4084, 38917]]}));

                //beach creatures
                //ArtificialIntelligenceAccess.push(new Unit(3918, 46085, "Cangrejo", "baby", "pincher"));

                //anemones
                //ArtificialIntelligenceAccess.push(new Unit(4505, 46018, "Anemone", true, "slimar"));

                //seals
                //ArtificialIntelligenceAccess.push(new Unit(-2080, 43806, "Seal", false, "oaourf"));

                //mites
                //ArtificialIntelligenceAccess.push(new Unit(3402, 45274, "BeachMite", false, "bit"));

                //cloimids
                //ArtificialIntelligenceAccess.push(new Unit(4721, 45874, "Cloimid", true, "moistClambyTickle", {rotation: -110/360 * 2 * Math.PI}));

                //Plants
                //scenicList.push(new Scenery("bushkaPlant", 3504, 42017, 1, true));
                scenicList.push(new Scenery("tyrniPlant", -18577, 37887, 12, true));
                //scenicList.push(new Scenery("wightbloomPlant", 3130, 42388, 4.6, true));
                for (var i = 0; i < 12; i++)
                {
                    for (var j = 0; j < 7; j++)
                    {
                        scenicList.push(new Scenery("harstPlant", -22144 - j * 35, 39907 + i * 50, Math.random() * 2, "freynor"));
                    }
                }
                for (var i = 0; i < 6; i++)
                {
                    for (var j = 0; j < 5; j++)
                    {
                        scenicList.push(new Scenery("potatoPlant", -22426 - j * 35, 39907 + i * 50, Math.random() * 2, "freynor"));
                    }
                }
                for (var i = 0; i < 6; i++)
                {
                    for (var j = 0; j < 3; j++)
                    {
                        scenicList.push(new Scenery("carrotPlant", -22610 - j * 35, 39907 + i * 50, Math.random() * 2, "freynor"));
                    }
                }
                for (var i = 0; i < 4; i++)
                {
                    for (var j = 0; j < 6; j++)
                    {
                        scenicList.push(new Scenery("suuliPlant", -22426 - j * 50, 40225 + i * 65, Math.random() * 2, "freynor"));
                    }
                }

                //algae
                //scenicList.push(new Scenery("algae", 4656, 45859, 0, 1));

                //Scenery
                //scenicList.push(new Scenery("stone", 4265 , 41412, 2.4, 2, 3));

                //HUMANS

                //unique humans

                if (uniqueChars.siggiLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Siggi the Harborman")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-14540, 44796, "Person", false, "Siggi the Harborman", {race: "Freynor", faction: "Freynor", personality: "violent", outfit: ["northernClothing", 0], weapon: ["none", [0.4, 0.8], 0, 0, 0.75], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[-14542, 44796]], merchant: true, merchandise: [[new Item("coins", false, false), 90], [new Item("boat", false, false), 2], [new Item("fishingpole", false, false), 6]]}));
                    }
                }
                if (uniqueChars.rannukLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Jarl Rannuk Stambjord")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-18930, 44712, "Soldier", false, "Jarl Rannuk Stambjord", {race: "Freynor", faction: "Freynor", con: 16, speed: 0, outfit: ["fineFreydicOutfitM", 0], weapon: ["none", [0.5, 0.5], 0, 0, 1.15], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "none", 2.65], rot: -1/2*Math.PI, patrolStops: 0, patrolLoop: false, route:[[-18930, 44712]]}));
                    }
                }
                if (uniqueChars.rannukChildLDS == true && quests.rannukChild)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "[ " + quests.rannukChildName + " ]")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-18990, 44770, "Person", false, "[ " + quests.rannukChildName + " ]", {race: player.raceName, faction: "player", personality: "violent", outfit: ["fineFreydicOutfitM", 0], weapon: ["none", [0.3, 0.3], 0, 0, 1.1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[2164, 1656]], kid: true}));
                    }
                }
                if (uniqueChars.seethLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Seeth the Innkeeper")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-15043, 44824, "Person", false, "Seeth the Innkeeper", {race: "Freynor", faction: "Freynor", personality: "violent", outfit: ["northernClothing", 0], weapon: ["none", [0.45, 0.6], 0, 0, 1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[-14542, 44796]], merchant: true, merchandise: [[new Item("coins", false, false), 61], [new Item("mead", false, false), 82], [new Item("harstAle", false, false), 53], [new Item("walrusMeat", false, false), 2], [new Item("sealMeat", false, false), 4], [new Item("redCrombal", false, false), 6], [new Item("waantiMeat", false, false), 4], [new Item("harstBread", false, false), 3], [new Item("butteredHarstBread", false, false), 3], [new Item("tyrniBerries", false, false), 4]]}));
                    }
                }
                if (uniqueChars.neculaiLDS == true && quests.medliaCompetitionControlQuest == "complete" && quests.medliaCompetitionControlCompletionStyle == "friendly")
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Neculai the Merchant")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-17508, 44883, "Person", false, "Neculai the Merchant", {race: "Vardan", faction: "Freynor", personality: "calculated", outfit: ["northernClothing", 0], weapon: ["none", [0.2, 0.5], 0, 0, 0.55], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[], merchant: true, merchandise: [[new Item("coins", false, false), 87], [new Item("varnFiber", false, false), 10], [new Item("walrusLeatherWaterskin", false, false), 2], [new Item("frichFurClothing", false, false), 4], [new Item("sealSkinClothing", false, false), 1], [new Item("mace", false, false), 1], [new Item("vardanianAxe", false, false), 3], [new Item("vardanianAxeDual", false, false), 2], [new Item("vardanianCleaver", false, false), 1], [new Item("vardanianClub", false, false), 1], [new Item("smashStick", false, false), 1], [new Item("rawWolfLiver", false, false), 6], [new Item("blackChainArmour", false, false), 2], [new Item("trollFlesh", false, false), 2], [new Item("wood", false, false), 18], [new Item("freydicSword", false, false), 1], [new Item("frichPelt", false, false), 9], [new Item("rawWalrusFlesh", false, false), 8], [new Item("fireStarter", false, false), 1], [new Item("swampWalkerArmour", false, false), 1]]}));
                    }
                }
                else //generic shopkeeper
                {
                    ArtificialIntelligenceAccess.push(new Unit(-17501, 44860, "Person", false, "Freydic Shopkeeper", {race: "Freynor", faction: "Freynor", personality: "violent", outfit: ["northernClothing", 0], weapon: ["none", [0.45, 0.6], 0, 0, 1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[-14542, 44796]], merchant: true, merchandise: [[new Item("coins", false, false), 25], [new Item("naapridFiber", false, false), 3], [new Item("walrusLeatherWaterskin", false, false), 3], [new Item("rawSealFlesh", false, false), 5], [new Item("sealSkin", false, false), 2], [new Item("walrusHide", false, false), 3], [new Item("rawWalrusFlesh", false, false), 1], [new Item("ironRing", false, false), 1], [new Item("rawWaantiFlesh", false, false), 2], [new Item("wood", false, false), 4], [new Item("fireStarter", false, false), 1]]}));
                }
                if (uniqueChars.aariLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Aari the Blacksmith")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-16343, 44866, "Person", false, "Aari the Blacksmith", {race: "Freynor", faction: "Freynor", personality: "violent", outfit: ["sealSkinClothing", 0], weapon: ["hammer", [7, 3], 2, 14, 1.4], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[-14542, 44796]], merchant: true, merchandise: [[new Item("coins", false, false), 99], [new Item("steel", false, false), 2], [new Item("iron", false, false), 3], [new Item("freydicWarAxe", false, false), 2], [new Item("freydicGreatSword", false, false), 1], [new Item("freydicSword", false, false), 4], [new Item("freydicSpear", false, false), 6], [new Item("longbow", false, false), 3], [new Item("steelArrow", false, false), 29], [new Item("arrow", false, false), 40], [new Item("shehidToxinArrow", false, false), 7], [new Item("hammer", false, false), 3], [new Item("timberAxe", false, false), 2], [new Item("pickaxe", false, false), 1], [new Item("beartrap", false, false), 3], [new Item("clawtrap", false, false), 2]]}));
                    }
                }
                if (uniqueChars.ukkoLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Ukko, Sage of Gemesh")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-20325, 41962, "Soldier", false, "Ukko, Sage of Gemesh", {race: "Freynor", faction: "Freynor", con: 5, speed: 0.6, outfit: ["whiteMageRobe", 0], weapon: ["iceSpikes", [0, 0], 0, 0, 1.2], ranged: [true, "none", 0, 140, 0, 0, 0, "none", 0], rot: -1/2*Math.PI, CNX: 50, MR: 25, patrolStops: 0, patrolLoop: false, route:[[-18930, 44712]]}));
                    }
                }
                if (uniqueChars.katjaLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Katja the Tailor")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-16006, 44730, "Person", false, "Katja the Tailor", {race: "Freynor", faction: "Freynor", personality: "scared", outfit: ["northernClothing", 0], weapon: ["none", [0.5, 0.3], 0, 0, 1.55], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[-14542, 44796]], merchant: true, merchandise: [[new Item("coins", false, false), 63], [new Item("northernClothing", false, false), 2], [new Item("walrusLeatherArmour", false, false), 3], [new Item("sealSkinClothing", false, false), 5]]}));
                    }
                }
                if (uniqueChars.saanaLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Saana the Produce Vender")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-22034, 43621, "Person", false, "Saana the Produce Vender", {race: "Freynor", faction: "Freynor", personality: "scared", outfit: ["sealSkinClothing", 0], weapon: ["none", [0.4, 0.2], 0, 0, 1.75], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-21989, 43598]], merchant: true, merchandise: [[new Item("coins", false, false), 20], [new Item("potato", false, false), 11], [new Item("carrot", false, false), 6], [new Item("harstGrain", false, false), 20], [new Item("harstFlour", false, false), 5], [new Item("kelp", false, false), 3], [new Item("suuliMelon", false, false), 4], [new Item("pluttBerries", false, false), 2], [new Item("akerBerries", false, false), 3], [new Item("bushkaBerries", false, false), 4], [new Item("tyrniBerries", false, false), 3], [new Item("bucketOfWaantiMilk", false, false), 3], [new Item("waantiButter", false, false), 2]]}));
                    }
                }
                if (uniqueChars.fuyumiLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Fuyumi the Banker")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-17029, 44556, "Person", false, "Fuyumi the Banker", {race: "Orgell", faction: "Freynor", personality: "scared", outfit: ["northernClothing", 0], weapon: ["none", [0.2, 0.1], 0, 0, 1.2], ranged: [false, "arrow", 8, 2000, 1, 6, 0, "none", 0.95], patrolStops: 0, patrolLoop: false, route:[[2200, 1460]], banker: true}));
                    }
                }
                var togginBeer = false;
                if (quests.teshirNorthRoadQuest == "complete")
                {
                    if (uniqueChars.togginLDS == true)
                    {
                        var hits = 0;
                        for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                        {
                            if (ArtificialIntelligenceAccess[i].ID == "Toggin")
                            {
                                hits += 1;
                            }
                        }
                        if (hits == 0)
                        {
                            if (Math.round(Math.random()))
                            {
                                ArtificialIntelligenceAccess.push(new Unit(-20134, 43313, "Person", false, "Toggin", {race: "Freynor", faction: "Freynor", personality: "violent", outfit: ["blackBearFurClothing", 0], weapon: ["none", [0.8, 0.8], 0, 2, 1.2], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-20134, 43283]]}));
                            }
                            else
                            {
                                togginBeer = true;
                                ArtificialIntelligenceAccess.push(new Unit(-14983, 44729, "Person", false, "Toggin", {race: "Freynor", faction: "arena2", personality: "violent", outfit: ["blackBearFurClothing", 0], weapon: ["none", [0.8, 0.8], 0, 2, 1.2], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-14983, 44760]]}));
                            }
                            for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                            {
                                if (ArtificialIntelligenceAccess[i].ID == "Toggin")
                                {
                                    ArtificialIntelligenceAccess[i].healthMAX = 16;
                                    ArtificialIntelligenceAccess[i].health = 16;
                                }
                            }
                        }
                    }
                }
                if (uniqueChars.maaiLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Maai the Herbalist")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-15004, 43243, "Person", false, "Maai the Herbalist", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["northernClothing", 0], weapon: ["none", [0.4, 0.2], 0, 0, 1.75], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: false, route:[[-21989, 43598]], merchant: true, merchandise: [[new Item("coins", false, false), 69], [new Item("culprisBandage", false, false), 9], [new Item("healingSalve", false, false), 4], [new Item("kelp", false, false), 2], [new Item("stomwikLeaf", false, false), 1], [new Item("tylunFlower", false, false), 1], [new Item("culprisLeaf", false, false), 7], [new Item("wyrLeaf", false, false), 5], [new Item("ogard", false, false), 1], [new Item("bushkaLeaves", false, false), 10], [new Item("wightbloomBerries", false, false), 2], [new Item("blubber", false, false), 2], [new Item("haeflowerPollen", false, false), 1], [new Item("cyrinthilimMushroom", false, false), 1], [new Item("glinMushrooms", false, false), 1], [new Item("neprilneBerries", false, false), 3], [new Item("lizardTail", false, false), 5], [new Item("shehidOozeSml", false, false), 1], [new Item("naapridButter", false, false), 1], [new Item("waantiButter", false, false), 1]]}));
                    }
                }
                if (uniqueChars.gamdenLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Gamden the Alchemist")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-14968, 43979, "Person", false, "Gamden the Alchemist", {race: "Freynor", faction: "Freynor", personality: "scared", outfit: ["sealSkinClothing", 0], weapon: ["none", [0.25, 0.25], 0, 0, 1.6], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: false, route:[[-21989, 43598]], merchant: true, merchandise: [[new Item("coins", false, false), 9], [new Item("mightPotionII", false, false), 2], [new Item("energyPotionI", false, false), 5], [new Item("energyPotionII", false, false), 2], [new Item("waterwalkingPotion", false, false), 1], [new Item("tunskBloodPotion", false, false), 1], [new Item("wyrExtract", false, false), 2], [new Item("trollsBlood", false, false), 1], [new Item("rawTrollsBlood", false, false), 2], [new Item("pouchOfPimberDust", false, false), 4], [new Item("pouchOfShomeDust", false, false), 2], [new Item("pouchOfIrilDust", false, false), 1], [new Item("ogardPerfume", false, false), 3], [new Item("rawWolfLiver", false, false), 2], [new Item("salt", false, false), 11], [new Item("glassJar", false, false), 8], [new Item("potionGlass", false, false), 12]]}));
                    }
                }
                if (uniqueChars.bjornLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Bjorn")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-16013, 43363, "Person", false, "Bjorn", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["sealSkinClothing", 0], weapon: ["none", [0.6, 0.4], 0, 0, 1.3], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-16006, 43367]]}));

                        for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                        {
                            if (ArtificialIntelligenceAccess[i].ID == "Bjorn")
                            {
                                ArtificialIntelligenceAccess[i].healthMAX = 12;
                                ArtificialIntelligenceAccess[i].health = 12;
                            }
                        }
                    }
                }

                //respawnable humans
                //Guards
                if (change != "makemy6yearoldherealready!")
                {
                    ArtificialIntelligenceAccess.push(new Unit(-19038, 44781, "Soldier", false, "Stambjord Huskarl", {race: "Freynor", faction: "Freynor", con: 20, speed: 1.45, outfit: ["chainArmour", 12], weapon: ["freydicSword", [12, 10], 0, 17, 1.1], ranged: [true, "arrow", 9, 2500, 1, 6, 0, "none", 1.5], rot: Math.PI, patrolStops: 0, patrolLoop: true, route:[[-95, 645], [-95, 645]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-19100, 44781, "Soldier", false, "Stambjord Huskarl", {race: "Freynor", faction: "Freynor", con: 22, speed: 1.4, outfit: ["chainArmour", 13], weapon: ["freydicSword", [11, 11], 0, 17, 1.15], ranged: [true, "arrow", 5, 2000, 1, 6, 0, "none", 1.75], rot: Math.PI, patrolStops: 0, patrolLoop: true, route:[[-95, 645], [-95, 645]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-19165, 44778, "Soldier", false, "Stambjord Huskarl", {race: "Freynor", faction: "Freynor", con: 19, speed: 1.55, outfit: ["chainArmour", 11], weapon: ["freydicSword", [12, 11], 0, 17, 1.2], ranged: [true, "arrow", 8, 2200, 1, 6, 0, "none", 1.5], rot: Math.PI, patrolStops: 0, patrolLoop: true, route:[[-95, 645], [-95, 645]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-19224, 44776, "Soldier", false, "Stambjord Huskarl", {race: "Freynor", faction: "Freynor", con: 21, speed: 1.45, outfit: ["chainArmour", 12], weapon: ["freydicSword", [10, 11], 0, 17, 1.1], ranged: [true, "arrow", 6, 2100, 1, 6, 0, "none", 1.5], rot: Math.PI, patrolStops: 0, patrolLoop: true, route:[[-95, 645], [-95, 645]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-19048, 44649, "Soldier", false, "Stambjord Huskarl", {race: "Freynor", faction: "Freynor", con: 20, speed: 1.35, outfit: ["chainArmour", 11], weapon: ["freydicSword", [10, 10], 0, 17, 1], ranged: [true, "arrow", 5, 2000, 1, 5, 0, "none", 1.5], rot: Math.PI, patrolStops: 0, patrolLoop: true, route:[[-95, 645], [-95, 645]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-19102, 44647, "Soldier", false, "Stambjord Huskarl", {race: "Freynor", faction: "Freynor", con: 23, speed: 1.5, outfit: ["chainArmour", 12.5], weapon: ["freydicSword", [12, 12], 0, 17, 1.3], ranged: [true, "arrow", 4, 1700, 1, 4, 0, "none", 2], rot: Math.PI, patrolStops: 0, patrolLoop: true, route:[[-95, 645], [-95, 645]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-19180, 44645, "Soldier", false, "Stambjord Huskarl", {race: "Freynor", faction: "Freynor", con: 20, speed: 1.45, outfit: ["chainArmour", 12], weapon: ["freydicSword", [12, 10], 0, 17, 1.1], ranged: [true, "arrow", 9, 2600, 1, 7, 0, "none", 1.5], rot: Math.PI, patrolStops: 0, patrolLoop: true, route:[[-95, 645], [-95, 645]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-19260, 44645, "Soldier", false, "Stambjord Huskarl", {race: "Freynor", faction: "Freynor", con: 22, speed: 1.4, outfit: ["chainArmour", 11.5], weapon: ["freydicSword", [11, 11], 0, 17, 1.1], ranged: [true, "arrow", 8, 2200, 1, 6, 0, "none", 1.4], rot: Math.PI, patrolStops: 0, patrolLoop: true, route:[[-95, 645], [-95, 645]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-19557, 45010, "Soldier", false, "Stambjord Huskarl", {race: "Freynor", faction: "Freynor", con: 20, speed: 1.55, outfit: ["chainArmour", 12], weapon: ["freydicSword", [12, 10], 0, 17, 1.1], ranged: [true, "arrow", 9, 2600, 1, 7, 0, "none", 1.5], rot: Math.PI, patrolStops: 2, patrolLoop: true, route:[[-19557, 45010], [-19557, 45010]]}));
                }
                ArtificialIntelligenceAccess.push(new Unit(-15545, 44929, "Soldier", false, "Stambjord Captain", {race: "Freynor", faction: "Freynor", con: 28, speed: 1, outfit: ["northernPlateArmour", 22], weapon: ["freydicGreatSword", [24, 16], 0, 36, 2.65], ranged: [true, "arrow", 9.5, 2700, 1, 7, 0, "stunI", 1.35], patrolStops: 7, patrolLoop: true, route:[[-15545, 44315], [-14935, 44315], [-14935, 44108], [-15263, 44108], [-15263, 43818], [-15545, 43818], [-15545, 44929]]}));
                ArtificialIntelligenceAccess.push(new Unit(-19028, 45212, "Soldier", false, "Stambjord Soldier", {race: "Freynor", faction: "Freynor", con: 6, speed: 1.50, outfit: ["chainArmour", 7], weapon: ["freydicSword", [9, 8], 0, 16, 1], ranged: [true, "arrow", 7, 2000, 1, 6, 0, "none", 1.50], patrolStops: 4, patrolLoop: true, route:[[-14379, 45212], [-14379, 45024], [-19028, 45024],[-19028, 45212]]}));
                ArtificialIntelligenceAccess.push(new Unit(-15544, 43728, "Soldier", false, "Stambjord Soldier", {race: "Freynor", faction: "Freynor", con: 6, speed: 1.50, outfit: ["chainArmour", 7], weapon: ["freydicSword", [9, 8], 0, 16, 1], ranged: [true, "arrow", 7, 2000, 1, 6, 0, "none", 1.50], patrolStops: 4, patrolLoop: true, route:[[-15544, 42905], [-15770, 42905], [-15770, 43728],[-15544, 43728]]}));
                ArtificialIntelligenceAccess.push(new Unit(-18410, 44468, "Soldier", false, "Stambjord Soldier", {race: "Freynor", faction: "Freynor", con: 7, speed: 1.40, outfit: ["chainArmour", 8], weapon: ["freydicSword", [8, 9], 0, 16, 1], ranged: [true, "arrow", 6, 2000, 1, 5, 0, "none", 1.50], patrolStops: 0, patrolLoop: true, route:[[-18410, 44468]]}));
                ArtificialIntelligenceAccess.push(new Unit(-18266, 44656, "Soldier", false, "Stambjord Soldier", {race: "Freynor", faction: "Freynor", con: 8, speed: 1.30, outfit: ["chainArmour", 8.5], weapon: ["freydicSword", [9, 9], 0, 16, 1.25], ranged: [true, "arrow", 5, 1800, 1, 4, 0, "none", 2], patrolStops: 0, patrolLoop: true, route:[[-18266, 44656]]}));
                ArtificialIntelligenceAccess.push(new Unit(-21770, 43517, "Soldier", false, "Stambjord Soldier", {race: "Freynor", faction: "Freynor", con: 7, speed: 1.51, outfit: ["chainArmour", 7.5], weapon: ["freydicSword", [8, 8], 0, 16, 1], ranged: [true, "arrow", 6, 2000, 1, 6, 0, "none", 1.6], patrolStops: 8, patrolLoop: true, route:[[-21767, 43731], [-18941, 43735], [-19076, 43508], [-20357, 43508], [-20357, 42324], [-20564, 42324], [-20564, 43517], [-21770, 43517]]}));
                //fishshopGuy
                ArtificialIntelligenceAccess.push(new Unit(-17931, 44852, "Person", false, "Freydic Fishseller", {race: "Freynor", faction: "Freynor", personality: "scared", outfit: ["northernClothing", 0], weapon: ["none", [0.45, 0.5], 0, 0, 1.2], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[-14542, 44796]], merchant: true, merchandise: [[new Item("coins", false, false), 18], [new Item("rawRedCrombal", false, false), 9], [new Item("rawJuurgo", false, false), 2], [new Item("crabFlesh", false, false), 3]]}));
                //People
                ArtificialIntelligenceAccess.push(new Unit(-15836, 44770, "Person", false, "Freynor Villager", {race: "Freynor", faction: "Freynor", personality: "scared", outfit: ["sealSkinClothing", 0], weapon: ["none", [0.3, 0.5], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 4, patrolLoop: true, route:[[-15837, 44485], [-17876, 44405], [-15837, 44485], [-15836, 44770]]}));
                ArtificialIntelligenceAccess.push(new Unit(-21759, 43739, "Person", false, "Freynor Villager", {race: "Freynor", faction: "Freynor", personality: "scared", outfit: ["sealSkinClothing", 0], weapon: ["none", [0.3, 0.5], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 8, patrolLoop: true, route:[[-15750, 43726], [-15776, 45098], [-17877, 44999], [-17874, 44873], [-17877, 44999], [-15776, 45098], [-15750, 43726], [-21759, 43739]]}));
                //temple-goers
                ArtificialIntelligenceAccess.push(new Unit(-20419, 42113, "Person", false, "Freynor Villager", {race: "Freynor", faction: "Freynor", personality: "scared", outfit: ["sealSkinClothing", 0], weapon: ["none", [0.3, 0.5], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-20419, 42070]]}));
                ArtificialIntelligenceAccess.push(new Unit(-20605, 41927, "Person", false, "Freynor Villager", {race: "Freynor", faction: "Freynor", personality: "scared", outfit: ["sealSkinClothing", 0], weapon: ["none", [0.3, 0.5], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-20566, 41927]]}));
                ArtificialIntelligenceAccess.push(new Unit(-20607, 41983, "Person", false, "Freynor Villager", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["northernClothing", 0], weapon: ["none", [0.3, 0.5], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-20566, 41983]]}));
                //farmers
                ArtificialIntelligenceAccess.push(new Unit(-22389, 40228, "Person", false, "Freynor Farmer", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["sealSkinClothing", 0], weapon: ["none", [0.3, 0.5], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: false, route:[[-20566, 41983]]}));
                //that farmer's security v. the wild and player theivery exploits
                ArtificialIntelligenceAccess.push(new Unit(-22521, 39743, "Soldier", false, "Stambjord Soldier", {race: "Freynor", faction: "Freynor", con: 6, speed: 1.35, outfit: ["chainArmour", 8], weapon: ["freydicSword", [9, 8], 0, 16, 1.3], ranged: [true, "arrow", 6, 1900, 1, 5, 0, "none", 2], patrolStops: 0, patrolLoop: true, route:[[-18266, 44656]]}));
                //wealthy zoners
                ArtificialIntelligenceAccess.push(new Unit(-20208, 42655, "Person", false, "Freynor Villager", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["northernClothing", 0], weapon: ["none", [0.3, 0.5], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: false, route:[[-20566, 41983]]}));
                ArtificialIntelligenceAccess.push(new Unit(-20739, 42515, "Person", false, "Freynor Villager", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["northernClothing", 0], weapon: ["none", [0.3, 0.5], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-20704, 42518]]}));
                //dmitri pleasers
                var extraBeerCup = false;
                if (Math.round(Math.random()))
                {
                    extraBeerCup = true; //empty cup on the bottom left small table
                    if (Math.random() > 0.25)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-15058, 44428, "Person", false, "Freynor Villager", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["sealSkinClothing", 0], weapon: ["none", [0.3, 0.5], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-15024, 44424]]}));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-15058, 44428, "Person", false, "Freynor Villager", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["northernClothing", 0], weapon: ["none", [0.3, 0.5], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-15024, 44424]]}));
                    }
                }

                ArtificialIntelligenceAccess.push(new Unit(-15137, 44647, "Person", false, "Freynor Villager", {race: "Freynor", faction: "Freynor", personality: "violent", outfit: ["sealSkinClothing", 0], weapon: ["none", [0.35, 0.55], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[-15837, 44485]]}));
                var travelerFoodz;
                if (Math.random() <= 0.15)
                {
                    travelerFoodz = 1; //fish with berries -15141, 44611
                    ArtificialIntelligenceAccess.push(new Unit(-15195, 44639, "Person", false, "Traveler", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["varnFurClothing", 0], weapon: ["none", [0.35, 0.55], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: false, route:[[-15137, 44647]]}));
                }
                else if (Math.random() <= 0.39)
                {
                    if (Math.round(Math.random()))
                    {
                        travelerFoodz = 2; //mead -15141, 44611
                        if (Math.round(Math.random()))
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-15127, 44534, "Person", false, "Traveler", {race: "Thengar", faction: "Thengar", personality: "violent", outfit: ["skolLeatherArmour", 3.5], weapon: ["none", [0.35, 0.55], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-15132, 44561]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-15127, 44534, "Person", false, "Traveler", {race: "Thengar", faction: "Thengar", personality: "violent", outfit: ["boulchomLeatherArmour", 2], weapon: ["none", [0.35, 0.55], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-15132, 44561]]}));
                        }
                    }
                    else
                    {
                        travelerFoodz = 3; //fish with berries -15318, 44565
                        if (Math.round(Math.random()))
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-15387, 44572, "Person", false, "Traveler", {race: "Thengar", faction: "Thengar", personality: "violent", outfit: ["boulchomLeatherArmour", 2], weapon: ["none", [0.35, 0.55], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-15361, 44573]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-15387, 44572, "Person", false, "Traveler", {race: "Thengar", faction: "Thengar", personality: "violent", outfit: ["skolLeatherArmour", 3.5], weapon: ["none", [0.35, 0.55], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-15361, 44573]]}));
                        }
                    }
                }
                else
                {
                    if (Math.round(Math.random()))
                    {
                        travelerFoodz = 0; //sealMeat and harst ale -15141, 44611
                        if (Math.round(Math.random()))
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-15197, 44640, "Person", false, "Traveler", {race: "Freynor", faction: "Freynor", personality: "violent", outfit: ["sealSkinClothing", 0], weapon: ["none", [0.35, 0.55], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: false, route:[[-15137, 44647]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-15197, 44640, "Person", false, "Traveler", {race: "Freynor", faction: "Freynor", personality: "violent", outfit: ["northernClothing", 0], weapon: ["none", [0.35, 0.55], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: false, route:[[-15137, 44647]]}));
                        }

                    }
                    else
                    {
                        travelerFoodz = 4; //mead -15318, 44565
                        if (Math.round(Math.random()))
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-15198, 44642, "Person", false, "Traveler", {race: "Freynor", faction: "Freynor", personality: "violent", outfit: ["northernClothing", 0], weapon: ["none", [0.3, 0.6], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[-15837, 44485]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-15198, 44642, "Person", false, "Traveler", {race: "Freynor", faction: "Freynor", personality: "violent", outfit: ["sealSkinClothing", 0], weapon: ["none", [0.3, 0.6], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[-15837, 44485]]}));
                        }
                    }
                }
                var randoDrinkYes = false;
                if (Math.round(Math.random()))
                {
                    ArtificialIntelligenceAccess.push(new Unit(-20471, 41791, "Person", false, "Freynor Villager", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["northernClothing", 0], weapon: ["none", [0.3, 0.5], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-20472, 41830]]}));
                }
                else
                {
                    if (Math.round(Math.random()))
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-14987, 44507, "Person", false, "Freynor Villager", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["northernClothing", 0], weapon: ["none", [0.3, 0.5], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-14988, 44462]]}));
                        randoDrinkYes = true;
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-20802, 42711, "Person", false, "Freynor Villager", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["northernClothing", 0], weapon: ["none", [0.3, 0.5], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-20809, 42697]]}));
                    }
                }
                if (Math.round(Math.random()))
                {
                    ArtificialIntelligenceAccess.push(new Unit(-20116, 43053, "Person", false, "Freynor Villager", {race: "Freynor", faction: "Freynor", personality: "scared", outfit: ["northernClothing", 0], weapon: ["none", [0.3, 0.5], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: false, route:[[-20704, 42518]]}));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(-20116, 43053, "Person", false, "Freynor Villager", {race: "Freynor", faction: "Freynor", personality: "scared", outfit: ["northernClothing", 0], weapon: ["none", [0.3, 0.5], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 14, patrolLoop: true, route:[[-20553, 43053], [-20553, 43666], [-15713, 43666], [-15713, 43116], [-15102, 43143], [-15098, 43295], [-15149, 43292], [-15100, 43243], [-15100, 42917], [-15734, 42934], [-15750, 43548], [-20379, 43545], [-20379, 43053], [-20116, 43053]]}));
                }

                //Abandoned Mineshaft south of Venning City
                scenicList.push(new Scenery("cave", -17526, 39304, 2, [854, 307], "venningMineshaft"));

                //Venning City
                //docks
                scenicList.push(new Scenery("floatingBoat", -14825, 46962, 3.5, true));
                scenicList.push(new Scenery("floatingBoat", -15142, 47107, 1/2*Math.PI, true));
                scenicList.push(new Scenery("floatingBoat", -15246, 46661, 0, true));
                scenicList.push(new Scenery("floatingBoat", -14814, 46569, -45/360 * Math.PI, true));
                scenicList.push(new Scenery("floatingBoat", -14831, 46154, -100/360 * Math.PI, true));
                scenicList.push(new Scenery("boat", -18900, 45797, -150/360 * Math.PI, true));
                scenicList.push(new Scenery("floatingBoat", -18445, 46237, -0.02 * Math.PI, true));
                scenicList.push(new Scenery("floatingBoat", -18834, 46704, 0 * Math.PI, true));
                scenicList.push(new Scenery("floatingBoat", -18877, 46893, 60/100 * Math.PI, true));

                scenicList.push(new Scenery("northernFishingSpot", -14720, 46388, 0, true));
                scenicList.push(new Scenery("northernFishingSpot", -14974, 47237, -2, true));
                scenicList.push(new Scenery("northernFishingSpot", -15336, 46820, 1, true));
                scenicList.push(new Scenery("northernFishingSpot", -18328, 46505, 5.5, true));
                scenicList.push(new Scenery("northernFishingSpot", -18986, 47092, -6.25, true));
                scenicList.push(new Scenery("northernFishingSpot", -18289, 47205, 3.6, true));
                //shops at the docks district
                //Harborshop
                scenicList.push(new Scenery("freydicBuilding8", -14591, 44814, 0, true));
                scenicList.push(new Scenery("sign", -14525, 44884, Math.PI - 0.15, 3, "The Harbor Shop"));
                scenicList.push(new Scenery("boat", -14757, 44792, 1.2, true));
                scenicList.push(new Scenery("boat", -14731, 44863, -0.05, true));
                scenicList.push(new Scenery("crate", -14640, 44782, 2.8/4 * Math.PI, 2, [1.3]));
                //Fish Shop
                scenicList.push(new Scenery("freydicBuilding8", -17883, 44873, 0, true));
                scenicList.push(new Scenery("sign", -17820, 44945, Math.PI - 0.15, 3, "Fish Shop"));
                scenicList.push(new Scenery("crate", -17840, 44838, 1.4/4 * Math.PI, 2, [1]));
                //tailor shop
                scenicList.push(new Scenery("freydicBuilding3", -16007, 44781, 0, true));
                scenicList.push(new Scenery("woodenBench", -16094, 44770, 1/2 * Math.PI, 0));
                scenicList.push(new Scenery("woodenBench", -16108, 44770, 1/2 * Math.PI, 0));
                scenicList.push(new Scenery("woodenBench", -15975, 44880, 0, 0));
                scenicList.push(new Scenery("woodenBench", -15975, 44870, 0, 0));
                scenicList.push(new Scenery("loom", -16002, 44694, 0, true));
                scenicList.push(new Scenery("item", -16087, 44862, 0, "freynor", ["bucketOfWater", 1, -12]));
                scenicList.push(new Scenery("item", -15975, 44873, 0, "freynor", ["waantiPelt", 1, -16]));
                scenicList.push(new Scenery("item", -16006, 44872, 0, "freynor", ["waantiPelt", 1, -16]));
                scenicList.push(new Scenery("item", -16100, 44807, 0, "freynor", ["koobuPelt", 1, -20]));
                scenicList.push(new Scenery("item", -16100, 44793, 0, "freynor", ["koobuPelt", 1, -20]));
                scenicList.push(new Scenery("item", -16100, 44781, 0, "freynor", ["koobuPelt", 1, -20]));
                scenicList.push(new Scenery("item", -16098, 44743, 0, "freynor", ["cloth", 2, -23]));
                scenicList.push(new Scenery("item", -15937, 44874, 0, "freynor", ["wool", 1, -15]));
                scenicList.push(new Scenery("sign", -15874, 44717, 1/2 * Math.PI, 3, "Venning City Outfitters"));
                //blacksmith shop
                scenicList.push(new Scenery("freydicBuilding8", -16342, 44856, 0, true));
                scenicList.push(new Scenery("forge", -16274, 44865, -1/2 * Math.PI -0.20, true));
                scenicList.push(new Scenery("anvil", -16403, 44886, -1/2 * Math.PI -0.7, true));
                scenicList.push(new Scenery("woodenBench", -16337, 44806, 0, 0));
                scenicList.push(new Scenery("woodenBench", -16337, 44819, 0, 0));
                scenicList.push(new Scenery("item", -16404, 44815, 0, "freynor", ["bucketOfWater", 1, -14]));
                scenicList.push(new Scenery("item", -16324, 44807, 0, "freynor", ["freydicWarAxe", 1, -70]));
                scenicList.push(new Scenery("sign", -16281, 44930, Math.PI - 0.16, 3, "Fruits of the Forge - Metalwork Shop"));

                //Necolai's shop / generic merchandise shop
                scenicList.push(new Scenery("freydicBuilding8", -17513, 44880, 0, true));
                if (uniqueChars.neculaiLDS == true && quests.medliaCompetitionControlQuest == "complete" && quests.medliaCompetitionControlCompletionStyle == "friendly")
                {
                    scenicList.push(new Scenery("sign", -17453, 44951, Math.PI - 0.15, 3, "Necolai's Everything Store"));
                    scenicList.push(new Scenery("crate", -17449, 44898, 1.11/4 * Math.PI, 1, [1.45]));
                }
                else
                {
                    scenicList.push(new Scenery("sign", -17453, 44951, Math.PI - 0.15, 3, "Beachfront General Store"));
                    scenicList.push(new Scenery("crate", -17571, 44901, 1.4/4 * Math.PI, 2, [1.15]));
                }
                //jarls longhouse
                scenicList.push(new Scenery("freydicBuildingHalveR", -19380, 44722, 10, true));
                scenicList.push(new Scenery("freydicBuildingHalveL", -19000, 44722, 0, true));
                scenicList.push(new Scenery("sign", -19413, 44967, Math.PI, 3, "Stambjord Longhouse"));
                scenicList.push(new Scenery("hearth", -18803, 44515, 4, "lit"));
                scenicList.push(new Scenery("hearth", -18807, 44917, 4 + 1/2 * Math.PI, "lit"));
                scenicList.push(new Scenery("item", -18873, 44921, 0, "freynor", ["wood", 3, -17]));
                scenicList.push(new Scenery("item", -18796, 44566, 0, "freynor", ["wood", 4, -23]));
                scenicList.push(new Scenery("longTable", -19170, 44716, 0, false));
                scenicList.push(new Scenery("stumpStool", -18934, 44715, 5, 2));

                if (quests.matrimonyTorStambjordQuest == "complete" && quests.matrimonyTorStambjordCompletionStyle == "marriage")
                {
                    scenicList.push(new Scenery("stumpStool", -18976, 44644, -2.5, 2));
                    if (quests.rannukChild)
                    {
                        scenicList.push(new Scenery("stumpStoolSml", -18990, 44773, 16, 2));
                    }
                }
                //the jarl feasts
                if (player.raceName == "Freynor" && player.title == "Royalty" || player.raceName == "Freynor" && player.title == "Nobility" && player.gender == "Female" && quests.matrimonyTorStambjordQuest == "complete" && quests.matrimonyTorStambjordCompletionStyle == "marriage")
                {
                    if (player.title != "Royalty")
                    {
                        //the jarl's wife's table
                        scenicList.push(new Scenery("woodenBench", -19476, 44510, 0, 2));
                        scenicList.push(new Scenery("item", -19438, 44519, 0, false, ["ogardPerfume", 1, 0]));
                        scenicList.push(new Scenery("item", -19453, 44518, 0, false, ["ogardPerfume", 1, 0]));
                        scenicList.push(new Scenery("item", -19447, 44508, 0, false, ["ogardPerfume", 1, 0]));
                        scenicList.push(new Scenery("item", -19506, 44511, 0, false, ["rilthasiaFlower", 1, 0]));
                        //her storage area and hobby
                        scenicList.push(new Scenery("crate", -19560, 44531, 2/4 * Math.PI - 0 * Math.PI, 3, [2.25, "venningJarlsWifeCrate1", 18, [], false, 0]));
                        scenicList.push(new Scenery("loom", -19384, 44517, Math.PI, true));
                    }

                    scenicList.push(new Scenery("item", -19032, 44710, 0, false, ["cloimidMeat", 1, 0]));
                    scenicList.push(new Scenery("item", -18967, 44731, 0, false, ["crabChowder", 1, 0]));
                    scenicList.push(new Scenery("item", -18964, 44702, 0, false, ["butteredHarstBread", 1, 0]));
                    scenicList.push(new Scenery("item", -18959, 44720, 0, false, ["butteredCrab", 1, 0]));
                    scenicList.push(new Scenery("item", -19016, 44739, 0, false, ["pintGlass", 1, 0]));
                    scenicList.push(new Scenery("item", -18978, 44675, 0, false, ["crabChowder", 1, 0]));
                    scenicList.push(new Scenery("item", -18983, 44718, 0, false, ["mead", 1, 0]));

                    if (player.title != "Royalty")
                    {
                        scenicList.push(new Scenery("item", -18991, 44689, 0, false, ["pluttMoffling", 1, 0]));
                        scenicList.push(new Scenery("item", -18997, 44671, 0, false, ["akerMoffling", 1, 0]));
                        scenicList.push(new Scenery("item", -18969, 44690, 0, false, ["pluttWine", 1, 0]));
                        scenicList.push(new Scenery("item", -19007, 44687, 0, false, ["pluttWine", 1, 0]));
                        scenicList.push(new Scenery("item", -19363, 44688, 0, false, ["naapridMeat", 1, 0]));
                        scenicList.push(new Scenery("item", -19360, 44692, 0, false, ["akerBerries", 2, 0]));
                        scenicList.push(new Scenery("item", -19372, 44685, 0, false, ["akerBerries", 2, 0]));
                        scenicList.push(new Scenery("item", -19369, 44729, 0, false, ["bearMeat", 1, 0]));
                        scenicList.push(new Scenery("item", -19372, 44733, 0, false, ["pluttBerries", 1, 0]));
                        scenicList.push(new Scenery("item", -19372, 44718, 0, false, ["pluttBerries", 1, 0]));
                        scenicList.push(new Scenery("item", -19359, 44726, 0, false, ["pluttBerries", 1, 0]));
                        scenicList.push(new Scenery("item", -19382, 44722, 0, false, ["pluttBerries", 1, 0]));
                        scenicList.push(new Scenery("item", -19363, 44688, 0, false, ["groundOgard", 1, 0]));
                        scenicList.push(new Scenery("item", -18956, 44676, 0, "freynor", ["mead", 1, -25]));
                        if (!quests.rannukChild)
                        {
                            scenicList.push(new Scenery("item", -18975, 44753, 0, false, ["mead", 1, 0]));
                        }
                        else
                        {
                            scenicList.push(new Scenery("item", -18995, 44753, 0, false, ["butteredCrab", 1, 0]));
                            scenicList.push(new Scenery("item", -19011, 44756, 0, false, ["pluttCiderPintGlass", 1, 0]));
                        }
                    }
                    else
                    {
                        scenicList.push(new Scenery("item", -18978, 44677, 0, "freynor", ["pintGlass", 1, -5]));
                        scenicList.push(new Scenery("item", -18975, 44753, 0, false, ["mead", 1, 0]));
                    }
                    scenicList.push(new Scenery("item", -18960, 44748, 0, false, ["mead", 1, 0]));
                    scenicList.push(new Scenery("item", -19034, 44675, 0, false, ["woodenBowl", 1, 0]));
                    scenicList.push(new Scenery("item", -19037, 44754, 0, false, ["butteredCrab", 1, 0]));
                    scenicList.push(new Scenery("item", -19091, 44714, 0, false, ["walrusMeat", 1, 0]));
                    scenicList.push(new Scenery("item", -19107, 44704, 0, false, ["walrusMeat", 1, 0]));
                    scenicList.push(new Scenery("item", -19238, 44711, 0, false, ["dryKelp", 2, 0]));
                    scenicList.push(new Scenery("item", -19248, 44720, 0, false, ["crabClaw", 1, 0]));
                    scenicList.push(new Scenery("item", -19256, 44704, 0, false, ["crabClaw", 1, 0]));
                    scenicList.push(new Scenery("item", -19160, 44713, 0, false, ["waantiMeat", 1, 0]));
                    scenicList.push(new Scenery("item", -19179, 44706, 0, false, ["waantiMeat", 1, 0]));
                    scenicList.push(new Scenery("item", -19057, 44679, 0, false, ["mead", 1, 0]));
                    scenicList.push(new Scenery("item", -19329, 44695, 0, false, ["tyrniBerries", 2, 0]));
                    scenicList.push(new Scenery("item", -19305, 44723, 0, false, ["tyrniBerries", 2, 0]));
                    scenicList.push(new Scenery("item", -19338, 44713, 0, false, ["tyrniBerries", 2, 0]));
                    scenicList.push(new Scenery("item", -19323, 44715, 0, false, ["thab", 1, 0]));
                    scenicList.push(new Scenery("item", -19209, 44714, 0, false, ["bushkaBerries", 2, 0]));
                    scenicList.push(new Scenery("item", -19207, 44714, 0, false, ["bushkaBerries", 2, 0]));
                    scenicList.push(new Scenery("item", -19212, 44715, 0, false, ["bushkaBerries", 2, 0]));
                    scenicList.push(new Scenery("item", -19213, 44704, 0, false, ["crabMeat", 3, 0]));
                    scenicList.push(new Scenery("item", -19213, 44704, 0, false, ["waantiButter", 1, 0]));
                    scenicList.push(new Scenery("item", -19100, 44678, 0, false, ["crabChowder", 1, 0]));
                    scenicList.push(new Scenery("item", -19099, 44749, 0, false, ["crabChowder", 1, 0]));
                    scenicList.push(new Scenery("item", -19081, 44744, 0, false, ["pintGlass", 1, 0]));
                    scenicList.push(new Scenery("item", -19131, 44685, 0, false, ["pintGlass", 1, 0]));
                    scenicList.push(new Scenery("item", -19170, 44746, 0, false, ["butteredCrab", 1, 0]));
                    scenicList.push(new Scenery("item", -19157, 44736, 0, false, ["mead", 1, 0]));
                    scenicList.push(new Scenery("item", -19191, 44685, 0, false, ["mead", 1, 0]));
                    scenicList.push(new Scenery("item", -19172, 44674, 0, false, ["crabChowder", 1, 0]));
                    scenicList.push(new Scenery("item", -19246, 44677, 0, false, ["butteredCrab", 1, 0]));
                    scenicList.push(new Scenery("item", -19230, 44747, 0, false, ["butteredCrab", 1, 0]));
                    scenicList.push(new Scenery("item", -19192, 44726, 0, false, ["pintGlass", 1, 0]));
                    scenicList.push(new Scenery("item", -19202, 44741, 0, false, ["mead", 1, 0]));
                    scenicList.push(new Scenery("item", -19276, 44689, 0, false, ["mead", 1, 0]));
                    scenicList.push(new Scenery("item", -19264, 44676, 0, false, ["mead", 1, 0]));
                }
                else
                {
                    scenicList.push(new Scenery("item", -19032, 44710, 0, "freynor", ["cloimidMeat", 1, -75]));
                    scenicList.push(new Scenery("item", -18967, 44731, 0, "freynor", ["crabChowder", 1, -40]));
                    scenicList.push(new Scenery("item", -18964, 44702, 0, "freynor", ["butteredHarstBread", 1, -30]));
                    scenicList.push(new Scenery("item", -18959, 44720, 0, "freynor", ["butteredCrab", 1, -40]));
                    scenicList.push(new Scenery("item", -18978, 44677, 0, "freynor", ["pintGlass", 1, -5]));
                    scenicList.push(new Scenery("item", -19016, 44739, 0, "freynor", ["pintGlass", 1, -5]));
                    scenicList.push(new Scenery("item", -18963, 44676, 0, "freynor", ["mead", 1, -25]));
                    scenicList.push(new Scenery("item", -18975, 44753, 0, "freynor", ["mead", 1, -25])); //
                    scenicList.push(new Scenery("item", -18960, 44748, 0, "freynor", ["mead", 1, -25])); //
                    scenicList.push(new Scenery("item", -19034, 44675, 0, "freynor", ["woodenBowl", 1, -5]));
                    scenicList.push(new Scenery("item", -19037, 44754, 0, "freynor", ["butteredCrab", 1, -30]));
                    scenicList.push(new Scenery("item", -19091, 44714, 0, "freynor", ["walrusMeat", 1, -70]));
                    scenicList.push(new Scenery("item", -19107, 44704, 0, "freynor", ["walrusMeat", 1, -70]));
                    scenicList.push(new Scenery("item", -19238, 44711, 0, "freynor", ["dryKelp", 2, -10]));
                    scenicList.push(new Scenery("item", -19248, 44720, 0, "freynor", ["crabClaw", 1, -80]));
                    scenicList.push(new Scenery("item", -19256, 44704, 0, "freynor", ["crabClaw", 1, -80]));
                    scenicList.push(new Scenery("item", -19160, 44713, 0, "freynor", ["waantiMeat", 1, -80]));
                    scenicList.push(new Scenery("item", -19179, 44706, 0, "freynor", ["waantiMeat", 1, -80]));
                    scenicList.push(new Scenery("item", -19057, 44679, 0, "freynor", ["mead", 1, -20]));
                    scenicList.push(new Scenery("item", -19329, 44695, 0, "freynor", ["tyrniBerries", 2, -14]));
                    scenicList.push(new Scenery("item", -19305, 44723, 0, "freynor", ["tyrniBerries", 2, -14]));
                    scenicList.push(new Scenery("item", -19338, 44713, 0, "freynor", ["tyrniBerries", 2, -14]));
                    scenicList.push(new Scenery("item", -19323, 44715, 0, "freynor", ["thab", 1, -90]));
                    scenicList.push(new Scenery("item", -19209, 44714, 0, "freynor", ["bushkaBerries", 2, -12]));
                    scenicList.push(new Scenery("item", -19207, 44714, 0, "freynor", ["bushkaBerries", 2, -12]));
                    scenicList.push(new Scenery("item", -19212, 44715, 0, "freynor", ["bushkaBerries", 2, -12]));
                    scenicList.push(new Scenery("item", -19213, 44704, 0, "freynor", ["crabMeat", 3, -45]));
                    scenicList.push(new Scenery("item", -19213, 44704, 0, "freynor", ["waantiButter", 1, -31]));
                    scenicList.push(new Scenery("item", -19100, 44678, 0, "freynor", ["crabChowder", 1, -35]));
                    scenicList.push(new Scenery("item", -19099, 44749, 0, "freynor", ["crabChowder", 1, -35]));
                    scenicList.push(new Scenery("item", -19081, 44744, 0, "freynor", ["pintGlass", 1, -5]));
                    scenicList.push(new Scenery("item", -19131, 44685, 0, "freynor", ["pintGlass", 1, -5]));
                    scenicList.push(new Scenery("item", -19170, 44746, 0, "freynor", ["butteredCrab", 1, -30]));
                    scenicList.push(new Scenery("item", -19157, 44736, 0, "freynor", ["mead", 1, -20]));
                    scenicList.push(new Scenery("item", -19191, 44685, 0, "freynor", ["mead", 1, -20]));
                    scenicList.push(new Scenery("item", -19172, 44674, 0, "freynor", ["crabChowder", 1, -35]));
                    scenicList.push(new Scenery("item", -19246, 44677, 0, "freynor", ["butteredCrab", 1, -30]));
                    scenicList.push(new Scenery("item", -19230, 44747, 0, "freynor", ["butteredCrab", 1, -30]));
                    scenicList.push(new Scenery("item", -19192, 44726, 0, "freynor", ["pintGlass", 1, -5]));
                    scenicList.push(new Scenery("item", -19202, 44741, 0, "freynor", ["mead", 1, -20]));
                    scenicList.push(new Scenery("item", -19276, 44689, 0, "freynor", ["mead", 1, -20]));
                    scenicList.push(new Scenery("item", -19264, 44676, 0, "freynor", ["mead", 1, -20]));
                }
                scenicList.push(new Scenery("woodenBench", -19063, 44781, -0.025, 2));
                scenicList.push(new Scenery("woodenBench", -19073, 44646, 0.05, 2));
                scenicList.push(new Scenery("woodenBench", -19217, 44645, -0.03, 2));
                scenicList.push(new Scenery("woodenBench", -19205, 44780, -0.015, 2));
                //to block the doorway that should not be there...
                scenicList.push(new Scenery("woodenBench", -18899, 44505, -0.015, 2));
                scenicList.push(new Scenery("woodenBench", -18899, 44494, -0.015, 2));
                scenicList.push(new Scenery("item", -18894, 44509, 0, "freynor", ["freydicSpear", 1, -50]));
                scenicList.push(new Scenery("item", -18928, 44508, 0, "freynor", ["walrusTusks", 1, -50]));
                scenicList.push(new Scenery("item", -18870, 44505, 0, "freynor", ["coins", 200, -150]));
                scenicList.push(new Scenery("item", -18870, 44505, 0, "freynor", ["dustPouch", 1, -50]));
                scenicList.push(new Scenery("barrel", -18794, 44740, 0, 1));
                scenicList.push(new Scenery("barrel", -18794, 44777, 0.02, 1));
                //barracks
                var venningBarracksXMas = 60;
                scenicList.push(new Scenery("freydicBuilding7", -18340 + venningBarracksXMas, 44623, 0, true));
                scenicList.push(new Scenery("sign", -18383 + venningBarracksXMas, 44868, 1 * Math.PI, 3, "Venning City Barracks"));
                scenicList.push(new Scenery("bed", -18155 + venningBarracksXMas, 44478, 1 * Math.PI, false));
                scenicList.push(new Scenery("bed", -18155 + venningBarracksXMas, 44578, 1 * Math.PI, false));
                scenicList.push(new Scenery("bed", -18155 + venningBarracksXMas, 44678, 0 * Math.PI, false));
                scenicList.push(new Scenery("bed", -18155 + venningBarracksXMas, 44778, 0 * Math.PI, false));
                scenicList.push(new Scenery("woodenBench", -18533 + venningBarracksXMas, 44744, 1/2 * Math.PI, 0));
                scenicList.push(new Scenery("woodenBench", -18514 + venningBarracksXMas, 44744, 1/2 * Math.PI, 0));
                scenicList.push(new Scenery("woodenBench", -18495 + venningBarracksXMas, 44744, 1/2 * Math.PI, 0));
                scenicList.push(new Scenery("item", -18504 + venningBarracksXMas, 44786, 0, "freynor", ["pintGlass", 1, -2]));
                scenicList.push(new Scenery("item", -18492 + venningBarracksXMas, 44744, 0, "freynor", ["mead", 1, -8]));
                scenicList.push(new Scenery("item", -18509 + venningBarracksXMas, 44706, 0, "freynor", ["mead", 1, -8]));
                scenicList.push(new Scenery("item", -18494 + venningBarracksXMas, 44721, 0, "freynor", ["sealMeat", 1, -9]));
                scenicList.push(new Scenery("item", -18494 + venningBarracksXMas, 44769, 0, "freynor", ["sealMeat", 1, -9]));
                scenicList.push(new Scenery("stumpStoolSml", -18467 + venningBarracksXMas, 44702, 8.1, 0));
                scenicList.push(new Scenery("stumpStoolSml", -18471 + venningBarracksXMas, 44760, 1.3, 0));
                scenicList.push(new Scenery("stumpStoolSml", -18510 + venningBarracksXMas, 44823, 7.4, 0));
                //bank
                scenicList.push(new Scenery("freydicBuilding7", -17025, 44720, 0, true));
                scenicList.push(new Scenery("sign", -17055, 44957, 1 * Math.PI, 3, "Venning City Bank"));
                scenicList.push(new Scenery("woodenBench", -17031, 44591, 0, 0));
                scenicList.push(new Scenery("stumpStoolSml", -17023, 44628, 8, 0));
                scenicList.push(new Scenery("stumpStoolSml", -17029, 44556, 0, 0)); //banker's stool
                scenicList.push(new Scenery("crate", -17179, 44543, 1/4 * Math.PI, 2, [1.5]));
                scenicList.push(new Scenery("crate", -17165, 44637, 3.25/4 * Math.PI, 2, [1.4]));
                scenicList.push(new Scenery("crate", -16849, 44553, 3.9/4 * Math.PI, 2, [1.45]));
                scenicList.push(new Scenery("crate", -17202, 44771, 2.25/4 * Math.PI, 2, [1.55]));
                scenicList.push(new Scenery("crate", -16893, 44736, 3/4 * Math.PI, 2, [1.43]));

                if (player.raceName != "Freynor" || player.title != "Royalty")
                {
                    if (player.raceName == "Freynor" && player.title == "Nobility" && player.gender == "Female" && quests.matrimonyTorStambjordQuest == "complete" && quests.matrimonyTorStambjordCompletionStyle != "rejection") //the jarls wife has the right to plunder his stores without being murdered by his soldiers but the act of doing so is counter-traditional so some small amount of faction relation is lost
                    {
                        scenicList.push(new Scenery("item", -18528, 44749, 0, "freynor", ["freydicSword", 1, -15]));
                        scenicList.push(new Scenery("crate", -18288, 44448, 1.8/4 * Math.PI, 3, [1.2, "venningBarracksCrate1", 3, [[new Item("freydicSword", false, false), 8], [new Item("northernPlateArmour", false, false), 1], [new Item("chainArmour", false, false), 2]], "freynor", -25]));
                    }
                    else
                    {
                        scenicList.push(new Scenery("item", -18528, 44749, 0, "freynor", ["freydicSword", 1, -55, "Stambjord Soldier"]));
                        scenicList.push(new Scenery("crate", -18288, 44448, 1.8/4 * Math.PI, 3, [1.2, "venningBarracksCrate1", 3, [[new Item("freydicSword", false, false), 8], [new Item("northernPlateArmour", false, false), 1], [new Item("chainArmour", false, false), 2]], "freynor", -110, "Stambjord Soldier"]));
                    }
                }
                else
                {
                    scenicList.push(new Scenery("item", -18528, 44749, 0, "freynor", ["freydicSword", 1, 0]));
                    scenicList.push(new Scenery("crate", -18288, 44448, 1.8/4 * Math.PI, 3, [1.2, "venningBarracksCrate1", 3, [[new Item("freydicSword", false, false), 8], [new Item("northernPlateArmour", false, false), 1], [new Item("chainArmour", false, false), 2]], "freynor", 0]));
                }
                //city prison
                scenicList.push(new Scenery("trapdoor", -18509 + venningBarracksXMas, 44450, 0 * Math.PI, [483, 45], "venningCityPrison"));
                //center
                //inn
                scenicList.push(new Scenery("freydicBuilding1", -15192, 44627, 0, true));
                scenicList.push(new Scenery("sign", -15022, 44379, 0 * Math.PI, 3, "The Salty Gullet - Inn"));
                scenicList.push(new Scenery("barrel", -14990, 44825, -5, 1));
                scenicList.push(new Scenery("bartop", -15033, 44777, 0, true));
                scenicList.push(new Scenery("bed", -15219, 44426, 1/2 * Math.PI, false));
                scenicList.push(new Scenery("smallTable", -15308, 44570, 0 * Math.PI, false));
                scenicList.push(new Scenery("stumpStoolSml", -15370, 44576, -2.214, 2));
                scenicList.push(new Scenery("smallTable", -15239, 44645, 0.035 * Math.PI, false));
                scenicList.push(new Scenery("stumpStoolSml", -15185, 44639, 4.1, 2));
                scenicList.push(new Scenery("bed", -15378, 44787, 0 * Math.PI, false));
                scenicList.push(new Scenery("hearth", -14983, 44596, 3.14159 / -2, "lit"));
                scenicList.push(new Scenery("smallTable", -15142, 44606, -0.01 * Math.PI, false));
                scenicList.push(new Scenery("stumpStoolSml", -15131, 44556, 6, 2));
                scenicList.push(new Scenery("stumpStoolSml", -15133, 44657, 6.5, 2));
                scenicList.push(new Scenery("smallTable", -14989, 44422, 0.0125 * Math.PI, false));
                scenicList.push(new Scenery("stumpStoolSml", -14987, 44471, 3.7, 2));
                scenicList.push(new Scenery("stumpStoolSml", -15033, 44426, 7.2, 2));
                //well
                scenicList.push(new Scenery("well", -14640, 44562, 7, true));
                //Apothecary
                scenicList.push(new Scenery("freydicBuilding4", -15198, 43312, 0, true));
                scenicList.push(new Scenery("sign", -15168, 43185, 0 * Math.PI, 3, "Harborline Apothecary"));
                scenicList.push(new Scenery("lab", -15042, 43244, 1/2 * Math.PI, true));
                scenicList.push(new Scenery("woodenBench", -15059, 43335, 0, 0));
                scenicList.push(new Scenery("woodenBench", -15059, 43402, 0, 0));
                scenicList.push(new Scenery("woodenBench", -15259, 43335, 0, 0));
                scenicList.push(new Scenery("woodenBench", -15259, 43402, 0, 0));
                scenicList.push(new Scenery("crate", -15247, 43239, 3.2/4 * Math.PI, 1, [1]));
                scenicList.push(new Scenery("crate", -15379, 43242, 2.9/4 * Math.PI, 1, [1.2]));
                scenicList.push(new Scenery("crate", -15370, 43370, 1.75/4 * Math.PI, 1, [1.5]));
                scenicList.push(new Scenery("item", -15023, 43335, 0, "freynor", ["culprisLeaf", 1, -11]));
                scenicList.push(new Scenery("item", -15039, 43335, 0, "freynor", ["culprisLeaf", 1, -11]));
                scenicList.push(new Scenery("item", -15059, 43335, 0, "freynor", ["kelp", 1, -9]));
                scenicList.push(new Scenery("item", -15070, 43335, 0, "freynor", ["kelp", 1, -9]));
                scenicList.push(new Scenery("item", -15101, 43333, 0, "freynor", ["stomwikLeaf", 1, -7]));
                scenicList.push(new Scenery("item", -15015, 43403, 0, "freynor", ["tylunFlower", 1, -26]));
                scenicList.push(new Scenery("item", -15035, 43403, 0, "freynor", ["bushkaLeaves", 1, -10]));
                scenicList.push(new Scenery("item", -15056, 43403, 0, "freynor", ["ogard", 1, -40]));
                scenicList.push(new Scenery("item", -15074, 43403, 0, "freynor", ["wyrLeaf", 1, -19]));
                scenicList.push(new Scenery("item", -15097, 43403, 0, "freynor", ["wyrLeaf", 1, -19]));
                scenicList.push(new Scenery("item", -15221, 43403, 0, "freynor", ["wightbloomBerries", 1, -10]));
                scenicList.push(new Scenery("item", -15238, 43403, 0, "freynor", ["wightbloomBerries", 1, -10]));
                scenicList.push(new Scenery("item", -15266, 43403, 0, "freynor", ["glinMushrooms", 1, -6]));
                scenicList.push(new Scenery("item", -15291, 43403, 0, "freynor", ["cyrinthilimMushroom", 1, -40]));
                scenicList.push(new Scenery("item", -15219, 43332, 0, "freynor", ["haeflowerPollen", 1, -50]));
                scenicList.push(new Scenery("item", -15242, 43333, 0, "freynor", ["haeflowerPollen", 1, -50]));
                scenicList.push(new Scenery("item", -15265, 43334, 0, "freynor", ["neprilneBerries", 1, -7]));
                scenicList.push(new Scenery("item", -15286, 43335, 0, "freynor", ["neprilneBerries", 1, -7]));
                scenicList.push(new Scenery("item", -15304, 43332, 0, "freynor", ["lizardTail", 1, -3]));

                if (travelerFoodz == 1)
                {
                    //fish with berries -15236, 44643
                    scenicList.push(new Scenery("item", -15241, 44642, 0, "freynor", ["tyrniBerries", 1, 0, "Traveler"]));
                    scenicList.push(new Scenery("item", -15235, 44644, 0, "freynor", ["redCrombal", 1, 0, "Traveler"]));
                }
                else if (travelerFoodz == 0)
                {
                    //sealMeat and harst ale -15236, 44643
                    scenicList.push(new Scenery("item", -15236, 44643, 0, "freynor", ["sealMeat", 1, 0, "Traveler"]));
                    scenicList.push(new Scenery("item", -15240, 44633, 0, "freynor", ["harstAle", 1, 0, "Traveler"]));
                }
                else if (travelerFoodz == 2)
                {
                    //mead -15141, 44611
                    scenicList.push(new Scenery("item", -15136, 44605, 0, "freynor", ["mead", 1, 0, "Traveler"]));
                }
                else if (travelerFoodz == 3)
                {
                    //fish with berries -15318, 44565
                    scenicList.push(new Scenery("item", -15312, 44565, 0, "freynor", ["tyrniBerries", 1, 0, "Traveler"]));
                    scenicList.push(new Scenery("item", -15319, 44565, 0, "freynor", ["redCrombal", 1, 0, "Traveler"]));
                }
                else
                {
                    //mead -15318, 44565
                    scenicList.push(new Scenery("item", -15230, 44643, 0, "freynor", ["mead", 1, 0, "Traveler"]));
                }

                if (extraBeerCup)
                {
                    scenicList.push(new Scenery("item", -15000, 44414, 0, "freynor", ["pintGlass", 1, -1]));
                }

                //Alchemy Shop
                scenicList.push(new Scenery("freydicBuilding6", -15030, 43940, 0, true));
                scenicList.push(new Scenery("lab", -15031, 44037, 0, true));
                scenicList.push(new Scenery("forge", -15107, 44013, 1/4 * Math.PI, true));
                scenicList.push(new Scenery("hearth", -14960, 44037, 0, "lit"));
                scenicList.push(new Scenery("crate", -14964, 43900, 0/4 * Math.PI, 1, [1.41]));
                scenicList.push(new Scenery("crate", -15093, 43872, 3.6/4 * Math.PI, 1, [1.43]));
                scenicList.push(new Scenery("sign", -15161, 43890, -1/2 * Math.PI, 3, "Spectacular Formulations - Alchemy Shop"));
                //jewelery shop //todo finish jeweler's shop
                scenicList.push(new Scenery("freydicBuilding4", -21790, 43928, 0, true));
                scenicList.push(new Scenery("sign", -21612, 43796, 0 * Math.PI, 3, "North Sea Jeweler's"));
                //wealthyish home
                scenicList.push(new Scenery("freydicBuilding6", -20149, 43330, 0, true));
                scenicList.push(new Scenery("walrusHideRug", -20137, 43322, Math.PI, 1.4));
                scenicList.push(new Scenery("woodenBench", -20186, 43418, 0, 0));
                scenicList.push(new Scenery("bed", -20246, 43257, 0, false));
                if (togginBeer || quests.teshirNorthRoadQuest != "complete")
                {
                    scenicList.push(new Scenery("hearth", -20131, 43235, Math.PI, false));
                }
                else
                {
                    scenicList.push(new Scenery("hearth", -20131, 43235, Math.PI, "lit"));
                }
                scenicList.push(new Scenery("crate", -20058, 43409, 2/4 * Math.PI, 2, [1.3]));
                //homes
                scenicList.push(new Scenery("freydicBuilding5", -17873, 44619, 0, true));
                scenicList.push(new Scenery("freydicBuilding5", -17530, 44619, 0, true));
                scenicList.push(new Scenery("freydicBuilding5", -16622, 44810, 0, true));
                scenicList.push(new Scenery("freydicBuilding5", -16619, 44605, 0, true));
                scenicList.push(new Scenery("freydicBuilding5", -16339, 44650, 0, true));
                scenicList.push(new Scenery("freydicBuilding2", -15290, 43540, 0, true));
                scenicList.push(new Scenery("freydicBuilding2", -15052, 43640, 0, true));
                scenicList.push(new Scenery("freydicBuilding5", -15962, 44277, 0, true));
                scenicList.push(new Scenery("freydicBuilding5", -15964, 44047, 0, true));
                scenicList.push(new Scenery("freydicBuilding5", -16144, 43906, 0, true));
                scenicList.push(new Scenery("freydicBuilding2", -14427, 44478, 0, true));
                scenicList.push(new Scenery("freydicBuilding5", -15963, 43155, 0, true));
                scenicList.push(new Scenery("freydicBuilding5", -15931, 42980, 0, true));
                scenicList.push(new Scenery("freydicBuilding5", -15914, 43858, 0, true));
                for (var i = 0; i < 14; i++)
                {
                    scenicList.push(new Scenery("freydicBuilding2", -16236 - 270 * i, 43341, 0, true));
                }
                for (var i = 0; i < 19; i++)
                {
                    if (i != 8 && i != 9 && i != 10)
                    {
                        scenicList.push(new Scenery("freydicBuilding5", -16388 - 270 * i, 43915, 0, true));
                    }
                    else if (i == 9)
                    {
                        scenicList.push(new Scenery("freydicBuilding5", -16388 - 150 - 270 * i, 43915, 0, true));
                    }
                }
                for (var i = 0; i < 4; i++)
                {
                    scenicList.push(new Scenery("freydicBuilding2", -21042 - 270 * i, 43331, 0, true));
                }

                for (var i = 0; i < 3; i++)
                {
                    scenicList.push(new Scenery("freydicBuilding3", -20748, 43048 - 300 * i, 0, true));
                    scenicList.push(new Scenery("hearth", -20649, 43115 - 300 * i, -1/2 * Math.PI, "lit"));
                    scenicList.push(new Scenery("walrusHideRug", -20748, 43053 - 300 * i, 0 * Math.PI, 1.25));
                    scenicList.push(new Scenery("woodenBench", -20854, 43079 - 300 * i, -1/2 * Math.PI, 0));
                    scenicList.push(new Scenery("bed", -20820, 42962 - 300 * i, -1/2 * Math.PI, false));
                    scenicList.push(new Scenery("smallTable", -20651, 42962 - 300 * i, 1/2 * Math.PI, 0));

                }
                for (var i = 0; i < 3; i++)
                {
                    scenicList.push(new Scenery("freydicBuilding6", -20149, 43048 - 300 * i, 0, true));
                    scenicList.push(new Scenery("hearth", -20248, 43115 - 300 * i, 1/2 * Math.PI, "lit"));
                    scenicList.push(new Scenery("walrusHideRug", -20137, 43042 - 300 * i, Math.PI, 1.25));
                    scenicList.push(new Scenery("woodenBench", -20046, 43079 - 300 * i, 1/2 * Math.PI, 0));
                    scenicList.push(new Scenery("bed", -20076, 42958 - 300 * i, 1/2 * Math.PI, false));
                    scenicList.push(new Scenery("smallTable", -20242, 42957 - 300 * i, 1/2 * Math.PI, 0));
                }
                //the hint of uniqueness in the genericly spawned homes
                scenicList.push(new Scenery("item", -20237, 42654, 0, "freynor", ["tyrniBerries", 1, -8]));
                scenicList.push(new Scenery("item", -20243, 42654, 0, "freynor", ["tyrniBerries", 1, -8]));
                scenicList.push(new Scenery("item", -20240, 42654, 0, "freynor", ["redCrombal", 1, -4]));

                //player purchasable home
                scenicList.push(new Scenery("freydicBuilding3", -20748, 43333, 0, true));
                scenicList.push(new Scenery("walrusHideRug", -20748, 43333, 0 * Math.PI, 1.5));
                scenicList.push(new Scenery("woodenBench", -20708, 43429, 0, 0));
                if (quests.venningHomeOwned != true)
                {
                    scenicList.push(new Scenery("sign", -20616, 43385, 1/2 * Math.PI, 3, "For Sale - 7100 coins"));
                    scenicList.push(new Scenery("bed", -20814, 43243, 1/2 * Math.PI, false));
                    scenicList.push(new Scenery("hearth", -20851, 43330, 1/2 * Math.PI, false));
                    scenicList.push(new Scenery("crate", -20660, 43259, 2.426/4 * Math.PI - Math.PI, 2, [1.4]));
                }
                else
                {
                    scenicList.push(new Scenery("sign", -20616, 43385, 1/2 * Math.PI, 3, "Seasalt Lodge"));
                    scenicList.push(new Scenery("bed", -20814, 43243, 1/2 * Math.PI, true));
                    scenicList.push(new Scenery("hearth", -20851, 43330, 1/2 * Math.PI, true));
                    scenicList.push(new Scenery("crate", -20660, 43259, 2.426/4 * Math.PI - Math.PI, 4, [1.4, "venningHomeCrate1", 7, [[new Item("woodenBowl", false, false), 5]], false, 0]));
                }
                //well
                scenicList.push(new Scenery("well", -21420, 43890, 9, true));
                //general store #2
                scenicList.push(new Scenery("freydicBuilding3", -21960, 43622, 0, true));
                scenicList.push(new Scenery("sign", -21827, 43687, 1/2 * Math.PI, 3, "Venning City Produce Store"));
                scenicList.push(new Scenery("woodenBench", -21908, 43718, 0, 0));
                scenicList.push(new Scenery("woodenBench", -21908, 43660, 0, 0));
                scenicList.push(new Scenery("woodenBench", -21908, 43527, 0, 0));
                scenicList.push(new Scenery("item", -21868, 43717, 0, "freynor", ["potato", 1, -2]));
                scenicList.push(new Scenery("item", -21859, 43713, 0, "freynor", ["potato", 1, -2]));
                scenicList.push(new Scenery("item", -21882, 43717, 0, "freynor", ["carrot", 1, -2]));
                scenicList.push(new Scenery("item", -21890, 43720, 0, "freynor", ["carrot", 1, -2]));
                scenicList.push(new Scenery("item", -21882, 43717, 0, "freynor", ["harstGrain", 1, -2]));
                scenicList.push(new Scenery("item", -21919, 43716, 0, "freynor", ["harstGrain", 1, -2]));
                scenicList.push(new Scenery("item", -21949, 43717, 0, "freynor", ["harstFlour", 1, -4]));
                scenicList.push(new Scenery("item", -21932, 43719, 0, "freynor", ["kelp", 1, -3]));

                scenicList.push(new Scenery("item", -21862, 43659, 0, "freynor", ["suuliMelon", 1, -4]));
                scenicList.push(new Scenery("item", -21885, 43661, 0, "freynor", ["suuliMelon", 1, -4]));
                scenicList.push(new Scenery("item", -21899, 43660, 0, "freynor", ["pluttBerries", 1, -5]));
                scenicList.push(new Scenery("item", -21911, 43660, 0, "freynor", ["akerBerries", 1, -5]));
                scenicList.push(new Scenery("item", -21922, 43662, 0, "freynor", ["bushkaBerries", 1, -3]));
                scenicList.push(new Scenery("item", -21952, 43656, 0, "freynor", ["tyrniBerries", 1, -4]));

                scenicList.push(new Scenery("item", -21869, 43528, 0, "freynor", ["bucketOfWaantiMilk", 1, -20]));
                scenicList.push(new Scenery("item", -21892, 43529, 0, "freynor", ["bucketOfWaantiMilk", 1, -20]));
                scenicList.push(new Scenery("item", -21923, 43527, 0, "freynor", ["bucketOfWaantiMilk", 1, -20]));
                scenicList.push(new Scenery("item", -21946, 43527, 0, "freynor", ["waantiButter", 1, -19]));
                //Storage Vender
                scenicList.push(new Scenery("freydicBuilding8", -15944, 43348, 0, true));
                scenicList.push(new Scenery("sign", -16010, 43425, Math.PI + 0.15, 3, "Venning Storage Company"));
                scenicList.push(new Scenery("crate", -15884, 43364, 3.88/4 * Math.PI - Math.PI, 2, [1.15]));
                scenicList.push(new Scenery("crate", -15973, 43323, 3.2/4 * Math.PI - Math.PI, 1, [1.31]));
                if (quests.venningStoragePurchased) //costs 800 coins
                {
                    scenicList.push(new Scenery("crate", -15896, 43311, 2.626/4 * Math.PI - Math.PI, 4, [1.26, "venningStorageCrate1", 3, [], false, 0]));
                }
                else
                {
                    scenicList.push(new Scenery("crate", -15896, 43311, 2.626/4 * Math.PI - Math.PI, 2, [1.26]));
                }
                //Farmhouse
                scenicList.push(new Scenery("freydicBuilding6", -21919, 40227, 0, true));
                scenicList.push(new Scenery("bed", -21855, 40317, -1/2 * Math.PI, false));
                scenicList.push(new Scenery("hearth", -21816, 40186, -1/2 * Math.PI, "lit"));
                scenicList.push(new Scenery("crate", -21959, 40150, 0/4 * Math.PI, 4, [1.5, "venningFarmhouseCrate1", 4, [[new Item("harstGrain", false, false), 8], [new Item("potato", false, false), 6], [new Item("carrot", false, false), 2], [new Item("suuliMelon", false, false), 1]], "freynor", -25]));
                //Venning City Temple
                scenicList.push(new Scenery("freydicBuilding7", -20441, 41964, 0, true));
                scenicList.push(new Scenery("sign", -20451, 42209, -1 * Math.PI, 3, "Temple of Gemesh"));
                scenicList.push(new Scenery("smallRockCircle", -20439, 41956, 0, true));
                scenicList.push(new Scenery("woodenBench", -20324, 41958, 1/2 * Math.PI, 0));
                scenicList.push(new Scenery("woodenBench", -20438, 42070, 0, 0));
                scenicList.push(new Scenery("woodenBench", -20566, 41958, 1/2 * Math.PI, 0));
                scenicList.push(new Scenery("woodenBench", -20442, 41835, 0, 0));
                scenicList.push(new Scenery("hearth", -20445, 41758, Math.PI, "lit"));
                scenicList.push(new Scenery("hearth", -20443, 42167, 0, "lit"));
                scenicList.push(new Scenery("hearth", -20230, 41959, -1/2 * Math.PI, "lit"));
                scenicList.push(new Scenery("hearth", -20641, 41956, 1/2 * Math.PI, "lit"));
                scenicList.push(new Scenery("item", -20453, 41953, 0, "freynor", ["culprisLeaf", 1, -10]));
                scenicList.push(new Scenery("item", -20443, 41975, 0, "freynor", ["culprisLeaf", 1, -10]));
                scenicList.push(new Scenery("item", -20422, 41951, 0, "freynor", ["culprisLeaf", 1, -10]));
                scenicList.push(new Scenery("item", -20439, 41956, 0, "freynor", ["tylunFlower", 1, -60]));
                scenicList.push(new Scenery("smallTable", -20635, 41764, 0, false));
                scenicList.push(new Scenery("smallTable", -20249, 41764, 0, false));
                scenicList.push(new Scenery("smallTable", -20239, 42166, 0, false));
                scenicList.push(new Scenery("smallTable", -20640, 42170, 0, false));


                if (togginBeer)
                {
                    scenicList.push(new Scenery("item", -14982, 44780, 0, "freynor", ["harstAle", 1, 0, "Toggin"]));
                }
                if (randoDrinkYes)
                {
                    scenicList.push(new Scenery("item", -14982, 44426, 0, "freynor", ["pintGlass", 1, -1]));
                }
                if (quests.venningMapItems)
                {
                    quests.venningMapItems = false;
                    worldItems.push([new Item("tablet", -20635, 41764), 1]);
                    worldItems.push([new Item("iceClaymore", -20249, 41764), 1]);
                    worldItems.push([new Item("tablet", -20239, 42166), 1]);
                    worldItems.push([new Item("tablet", -20640, 42170), 1]);
                }

                if (quests.killedStambjordHeir || quests.rannukThreatened && player.title != "Nobility" && player.title != "Royalty")
                {
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Stambjord Soldier" || ArtificialIntelligenceAccess[i].ID == "Stambjord Huskarl" || ArtificialIntelligenceAccess[i].ID == "Stambjord Captain")
                        {
                            ArtificialIntelligenceAccess[i].disturbedTime = new Date().getTime() + 10000000;
                        }
                    }
                }

                if (uniqueChars.rannukLDS == false && uniqueChars.jalmariLDS == false && quests.aNobleConspiracyQuest == true)
                {
                    quests.aNobleConspiracyQuest = "complete";
                    quests.aNobleConspiracyCompletionStyle = "eradicate";
                    quests.completeQuests.push({name: "A Noble Conspiracy", description: "You fixed the corruption problem yourself by killing both Captain Jalmari Salt-Blood and the Jarl of Venning who was supporting the piratry by permitting it to continue in exchange for a cut of the contraband."});
                    if (player.class == "mage")
                    {
                        player.magicalExperience += 200;
                    }
                    else
                    {
                        player.experience += 555;
                    }
                    player.fame += 1;
                }

                change = "n4e2";
            }
        }
        else if (region == "n4e3")
        {
            if (change != "n4e3")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                //meant for the map

                //humans

                //balkur
                //ArtificialIntelligenceAccess.push(new Unit(-11656, 38003, "Balkur", false, "Kalosh"));

                //waanti
                ArtificialIntelligenceAccess.push(new Unit(-26829, 40246, "Waanti", true, "yamo"));
                ArtificialIntelligenceAccess.push(new Unit(-26555, 40365, "Waanti", false, "yama"));

                //koobu
                //ArtificialIntelligenceAccess.push(new Unit(-8193, 40071, "Koobu", false, "Koplepa"));


                //winter wolves
                ArtificialIntelligenceAccess.push(new Unit(-25462, 38599, "WinterWolf", false, "Lauggeli"));
                ArtificialIntelligenceAccess.push(new Unit(-25866, 38378, "WinterWolf", false, "Lauggela"));
                ArtificialIntelligenceAccess.push(new Unit(-25532, 38236, "WinterWolf", false, "Lauggelo"));
                ArtificialIntelligenceAccess.push(new Unit(-24470, 39288, "WinterWolf", false, "Lauggelu"));

                //beach creatures

                //elder walruses
                ArtificialIntelligenceAccess.push(new Unit(-31664, 37726, "Walrus", true, "Ice Toby"));
                ArtificialIntelligenceAccess.push(new Unit(-30896, 38289, "Walrus", true, "Ice Tammy"));
                ArtificialIntelligenceAccess.push(new Unit(-31103, 40629, "Walrus", true, "Big Remmy"));

                //walruses
                ArtificialIntelligenceAccess.push(new Unit(-32003, 38599, "Walrus", false, "Santa Claws"));
                ArtificialIntelligenceAccess.push(new Unit(-31309, 38865, "Walrus", false, "Mary Claws"));
                ArtificialIntelligenceAccess.push(new Unit(-31828, 39263, "Walrus", false, "Ringo Floppykin I"));
                ArtificialIntelligenceAccess.push(new Unit(-31382, 39616, "Walrus", false, "Bagey"));
                ArtificialIntelligenceAccess.push(new Unit(-30474, 38728, "Walrus", false, "Baje"));
                ArtificialIntelligenceAccess.push(new Unit(-30797, 40026, "Walrus", false, "Baige"));
                ArtificialIntelligenceAccess.push(new Unit(-29844, 41418, "Walrus", false, "Bazshe"));
                ArtificialIntelligenceAccess.push(new Unit(-28707, 41352, "Walrus", false, "Bazshel"));
                ArtificialIntelligenceAccess.push(new Unit(-29298, 41875, "Walrus", false, "Beige"));

                ArtificialIntelligenceAccess.push(new Unit(-29365, 39350, "Cangrejo", "baby", "Cangrejito"));
                ArtificialIntelligenceAccess.push(new Unit(-29941, 37759, "Cangrejo", "baby", "Cangrejico"));
                ArtificialIntelligenceAccess.push(new Unit(-28489, 40127, "Cangrejo", "baby", "Cangrejillo"));

                if (Math.round(Math.random()))
                {
                    ArtificialIntelligenceAccess.push(new Unit(-25407, 43001, "Cangrejo", false, "Cangrejona"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(-25407, 43001, "Cangrejo", "baby", "Cangrebebe"));
                }
                ArtificialIntelligenceAccess.push(new Unit(-25464, 45289, "Cangrejo", false, "Cangrejon"));

                //anemones
                ArtificialIntelligenceAccess.push(new Unit(-30091, 40871, "Anemone", false, "slime"));
                ArtificialIntelligenceAccess.push(new Unit(-30008, 40973, "Anemone", "baby", "slimial"));
                ArtificialIntelligenceAccess.push(new Unit(-29699, 39944, "Anemone", "baby", "slimielle"));
                ArtificialIntelligenceAccess.push(new Unit(-29946, 40055, "Anemone", "baby", "slimiella"));
                ArtificialIntelligenceAccess.push(new Unit(-30695, 39416, "Anemone", true, "slyme"));

                ArtificialIntelligenceAccess.push(new Unit(-29061, 38556, "Anemone", false, "slimo"));
                ArtificialIntelligenceAccess.push(new Unit(-29217, 38452, "Anemone", false, "slimea"));
                ArtificialIntelligenceAccess.push(new Unit(-26737, 43343, "Anemone", true, "slymifyze"));
                ArtificialIntelligenceAccess.push(new Unit(-26626, 43700, "Anemone", "baby", "slimiellia"));

                ArtificialIntelligenceAccess.push(new Unit(-24971, 44618, "Anemone", false, "slimerre"));

                //seals
                ArtificialIntelligenceAccess.push(new Unit(-28840, 42306, "Seal", true, "aurf"));
                ArtificialIntelligenceAccess.push(new Unit(-28179, 42042, "Seal", true, "aurf"));
                ArtificialIntelligenceAccess.push(new Unit(-28612, 42760, "Seal", "baby", "aurf"));
                ArtificialIntelligenceAccess.push(new Unit(-28055, 42510, "Seal", false, "aurf"));
                ArtificialIntelligenceAccess.push(new Unit(-28349, 42777, "Seal", false, "aurf"));
                ArtificialIntelligenceAccess.push(new Unit(-28975, 42329, "Seal", false, "aurf"));
                ArtificialIntelligenceAccess.push(new Unit(-29398, 42486, "Seal", false, "aurf"));

                //mites
                ArtificialIntelligenceAccess.push(new Unit(-25058, 42410, "BeachMite", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-25063, 42340, "BeachMite", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-25014, 42355, "BeachMite", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-26272, 42351, "BeachMite", false, "docile"));

                //Plants
                scenicList.push(new Scenery("bushkaPlant", -25747, 38997, -7.9, true));
                scenicList.push(new Scenery("tyrniPlant", -26280, 40146, -9, true));
                scenicList.push(new Scenery("tyrniPlant", -26666, 38336, 8, true));
                //scenicList.push(new Scenery("wightbloomPlant", -9294, 38575, 10, true));

                //beached kelp
                scenicList.push(new Scenery("beachedKelp", -25566, 43009, 1.5, 2));

                //Scenery
                //scenicList.push(new Scenery("stone", -8132 , 46141, 4.1, 1.5, 3));

                //algae
                //scenicList.push(new Scenery("algae", -8894, 45943, 3.4, 2));

                for (var i = 0; i < 12; i++)
                {
                    for (var j = 0; j < 7; j++)
                    {
                        scenicList.push(new Scenery("harstPlant", -22144 - j * 35, 39907 + i * 50, Math.random() * 2, "freynor"));
                    }
                }
                for (var i = 0; i < 6; i++)
                {
                    for (var j = 0; j < 5; j++)
                    {
                        scenicList.push(new Scenery("potatoPlant", -22426 - j * 35, 39907 + i * 50, Math.random() * 2, "freynor"));
                    }
                }
                for (var i = 0; i < 6; i++)
                {
                    for (var j = 0; j < 3; j++)
                    {
                        scenicList.push(new Scenery("carrotPlant", -22610 - j * 35, 39907 + i * 50, Math.random() * 2, "freynor"));
                    }
                }
                for (var i = 0; i < 4; i++)
                {
                    for (var j = 0; j < 6; j++)
                    {
                        scenicList.push(new Scenery("suuliPlant", -22426 - j * 50, 40225 + i * 65, Math.random() * 2, "freynor"));
                    }
                }

                change = "n4e3";
            }
        }
        else if (region == "n5w1")
        {
            if (change != "n5w1")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i =  ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                //meant for the map

                //humans
                //Captain Jalmari Salt-Blood
                if (uniqueChars.jalmariLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Captain Jalmari Salt-Blood")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(13605, 54013, "Soldier", false, "Captain Jalmari Salt-Blood", {race: "Freynor", faction: "hostile", con: 25, speed: 1.25, outfit: ["saltBloodArmour", 15], weapon: ["burningSmashStick", [20, 15], 18, 20, 2.2], ranged: [false, "arrow", 9, 2100, 1, 7, 0, "none", 1.2], patrolStops: 1, patrolLoop: true, route:[[13605, 54013]]}));
                    }
                }
                if (uniqueChars.jalmariLDS)
                {
                    ArtificialIntelligenceAccess.push(new Unit(13867, 54715, "Soldier", false, "Salt-Blood Pirate", {race: "Freynor", faction: "hostile", con: 6, speed: 1.4, outfit: ["sealSkinClothing", 0], weapon: ["freydicSpear", [4, 4], 4, 16, 2.5], ranged: [false, "arrow", 4, 1000, 1, 3, 0, "none", 2.25], patrolStops: 0, patrolLoop: false, route:[[14551, 46087]]}));
                    ArtificialIntelligenceAccess.push(new Unit(14007, 54484, "Soldier", false, "Salt-Blood Pirate", {race: "Freynor", faction: "hostile", con: 8, speed: 1, outfit: ["sealSkinClothing", 0], weapon: ["longbow", [4, 4], 4, 16, 2.5], ranged: [true, "oiledArrow", 6, 2000, 1, 6, 0, "fire", 1.38], patrolStops: 0, patrolLoop: false, route:[[14551, 46087]]}));

                    ArtificialIntelligenceAccess.push(new Unit(14564, 54097, "Soldier", false, "Salt-Blood Pirate", {race: "Freynor", faction: "hostile", con: 11, speed: 1.3, outfit: ["walrusLeatherArmour", 6], weapon: ["freydicSword", [7, 6], 0, 16, 1.15], ranged: [false, "arrow", 4, 1000, 1, 3, 0, "none", 2.25], patrolStops: 0, patrolLoop: false, route:[[14295, 45996]]}));
                    ArtificialIntelligenceAccess.push(new Unit(14315, 53975, "Soldier", false, "Salt-Blood Pirate", {race: "Freynor", faction: "hostile", con: 7, speed: 1.2, outfit: ["sealSkinClothing", 0], weapon: ["mace", [5, 3], 9, 16, 2.5], ranged: [false, "arrow", 4, 1000, 1, 3, 0, "none", 2.25], patrolStops: 0, patrolLoop: false, route:[[14551, 46087]]}));
                    ArtificialIntelligenceAccess.push(new Unit(14376, 53824, "Soldier", false, "Salt-Blood Pirate", {race: "Freynor", faction: "hostile", con: 9, speed: 1.25, outfit: ["walrusLeatherArmour", 5.5], weapon: ["longbow", [4, 4], 4, 16, 2.5], ranged: [true, "oiledArrow", 7, 2200, 1, 7, 0, "fire", 1.46], patrolStops: 0, patrolLoop: false, route:[[14551, 46087]]}));
                    ArtificialIntelligenceAccess.push(new Unit(14509, 53852, "Soldier", false, "Salt-Blood Pirate", {race: "Freynor", faction: "hostile", con: 7, speed: 1.1, outfit: ["walrusLeatherArmour", 7], weapon: ["freydicSword", [7, 6], 0, 16, 1.26], ranged: [false, "arrow", 4, 1000, 1, 3, 0, "none", 2.25], patrolStops: 0, patrolLoop: false, route:[[14295, 45996]]}));

                    ArtificialIntelligenceAccess.push(new Unit(13788, 53177, "Soldier", false, "Salt-Blood Pirate", {race: "Freynor", faction: "hostile", con: 5, speed: 1.4, outfit: ["sealSkinClothing", 0], weapon: ["freydicSpear", [4, 4], 4, 16, 2.5], ranged: [false, "arrow", 4, 1000, 1, 3, 0, "none", 2.25], patrolStops: 0, patrolLoop: false, route:[[14551, 46087]]}));
                    ArtificialIntelligenceAccess.push(new Unit(14007, 54484, "Soldier", false, "Salt-Blood Pirate", {race: "Freynor", faction: "hostile", con: 10, speed: 1.35, outfit: ["sealSkinClothing", 0], weapon: ["longbow", [4, 4], 4, 16, 2.5], ranged: [true, "oiledArrow", 8, 2000, 1, 5, 0, "fire", 1.5], patrolStops: 0, patrolLoop: false, route:[[14551, 46087]]}));
                    ArtificialIntelligenceAccess.push(new Unit(13228, 53182, "Soldier", false, "Salt-Blood Pirate", {race: "Freynor", faction: "hostile", con: 12, speed: 0.95, outfit: ["walrusLeatherArmour", 6], weapon: ["freydicSword", [7, 7], 0, 16, 1.15], ranged: [false, "arrow", 4, 1000, 1, 3, 0, "none", 2.25], patrolStops: 0, patrolLoop: false, route:[[14295, 45996]]}));

                    ArtificialIntelligenceAccess.push(new Unit(13029, 53766, "Soldier", false, "Salt-Blood Pirate", {race: "Freynor", faction: "hostile", con: 5.5, speed: 1.4, outfit: ["walrusLeatherArmour", 6], weapon: ["longbow", [4, 4], 4, 16, 2.5], ranged: [true, "oiledArrow", 9, 2300, 1, 8, 0, "fire", 1.65], patrolStops: 0, patrolLoop: false, route:[[14551, 46087]]}));
                    ArtificialIntelligenceAccess.push(new Unit(13145, 53718, "Soldier", false, "Salt-Blood Pirate", {race: "Freynor", faction: "hostile", con: 8, speed: 1.25, outfit: ["walrusLeatherArmour", 5], weapon: ["mace", [9, 4], 8, 16, 3], ranged: [false, "arrow", 4, 1000, 1, 3, 0, "none", 2.25], patrolStops: 0, patrolLoop: false, route:[[14551, 46087]]}));
                    ArtificialIntelligenceAccess.push(new Unit(13072, 53636, "Soldier", false, "Salt-Blood Pirate", {race: "Freynor", faction: "hostile", con: 9, speed: 1.35, outfit: ["sealSkinClothing", 0], weapon: ["freydicSpear", [4, 5], 5, 16, 2.5], ranged: [false, "arrow", 4, 1000, 1, 3, 0, "none", 2.25], patrolStops: 0, patrolLoop: false, route:[[14551, 46087]]}));
                }

                //balkur
                //ArtificialIntelligenceAccess.push(new Unit(-11656, 38003, "Balkur", false, "Kalosh"));

                //waanti
                //ArtificialIntelligenceAccess.push(new Unit(4592, 40636, "Waanti", "baby", "yiam"));

                //koobu
                //ArtificialIntelligenceAccess.push(new Unit(-8193, 40071, "Koobu", false, "Koplepa"));


                //winter wolves
                //ArtificialIntelligenceAccess.push(new Unit(-4603, 37889, "WinterWolf", false, "Lauggel"));

                //glutids
                //ArtificialIntelligenceAccess.push(new Unit(-5986, 42096, "Glutid", true, "Gluupto", {patrolStops: 6, patrolLoop: true, route:[[-6169, 41490], [-7261, 41806], [-7605, 41527], [-7190, 42889], [-5876, 43183], [-5986, 42096]]}));
                //ArtificialIntelligenceAccess.push(new Unit(-7659, 42050, "Glutid", false, "Gluho", {patrolStops: 1, patrolLoop: true, route:[[-7659, 42050]]}));



                //beach creatures
                ArtificialIntelligenceAccess.push(new Unit(15988, 53128, "Cangrejo", false, "tip"));
                ArtificialIntelligenceAccess.push(new Unit(16712, 53786, "Cangrejo", false, "tip"));
                ArtificialIntelligenceAccess.push(new Unit(13774, 51737, "Cangrejo", "baby", "tip"));
                ArtificialIntelligenceAccess.push(new Unit(12228, 55188, "Cangrejo", "baby", "tip"));
                ArtificialIntelligenceAccess.push(new Unit(14576, 55379, "Cangrejo", "baby", "tip"));
                ArtificialIntelligenceAccess.push(new Unit(11969, 54284, "Cangrejo", "baby", "tip"));

                //anemones
                ArtificialIntelligenceAccess.push(new Unit(10998, 52903, "Anemone", false, "tip"));
                ArtificialIntelligenceAccess.push(new Unit(10990, 54179, "Anemone", "baby", "tip"));
                ArtificialIntelligenceAccess.push(new Unit(15625, 55912, "Anemone", true, "tip"));
                ArtificialIntelligenceAccess.push(new Unit(16541, 53765, "Anemone", false, "tip"));
                ArtificialIntelligenceAccess.push(new Unit(16332, 54036, "Anemone", "baby", "tip"));

                //seals
                ArtificialIntelligenceAccess.push(new Unit(12229, 50714, "Seal", false, "tip"));
                ArtificialIntelligenceAccess.push(new Unit(11633, 50925, "Seal", true, "tip"));
                ArtificialIntelligenceAccess.push(new Unit(11633, 50925, "Seal", "baby", "tip"));

                //mites
                ArtificialIntelligenceAccess.push(new Unit(12800, 50960, "BeachMite", false, "tip"));
                ArtificialIntelligenceAccess.push(new Unit(12835, 50950, "BeachMite", false, "tip"));
                ArtificialIntelligenceAccess.push(new Unit(12771, 50955, "BeachMite", false, "tip"));
                ArtificialIntelligenceAccess.push(new Unit(11089, 51212, "BeachMite", false, "tip"));
                ArtificialIntelligenceAccess.push(new Unit(11111, 51248, "BeachMite", false, "tip"));
                ArtificialIntelligenceAccess.push(new Unit(13139, 55538, "BeachMite", false, "tip"));
                ArtificialIntelligenceAccess.push(new Unit(15493, 54007, "BeachMite", false, "tip"));
                ArtificialIntelligenceAccess.push(new Unit(15490, 54000, "BeachMite", false, "tip"));
                ArtificialIntelligenceAccess.push(new Unit(15500, 54000, "BeachMite", false, "tip"));

                //set all Ai to nuetral2 (a team that does not attack any AI but the player and their team)
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "tip")
                    {
                        ArtificialIntelligenceAccess[i].baseTeam = "neutral2";
                    }
                }

                //cloimids
                //ArtificialIntelligenceAccess.push(new Unit(-8909, 45992, "Cloimid", false, "moistClambyGrope", {rotation: -120/360 * 2 * Math.PI}));

                //Plants
                //scenicList.push(new Scenery("bushkaPlant", -9423, 38704, 20, true));
                scenicList.push(new Scenery("tyrniPlant", 12122, 52402, 5, true));
                //scenicList.push(new Scenery("tyrniPlant", -12270, 38406, 0.4, true));
                //scenicList.push(new Scenery("tyrniPlant", -9849, 41627, -2.4, true));
                //scenicList.push(new Scenery("wightbloomPlant", -9294, 38575, 10, true));

                //beached kelp
                if (Math.round(Math.random()))
                {
                    scenicList.push(new Scenery("beachedKelp", 12198, 51016, 2.5, 2));
                    scenicList.push(new Scenery("beachedKelp", 11178, 52899, 9, 0));
                    scenicList.push(new Scenery("beachedKelp", 13698, 55394, 5.5, 0));
                }
                else
                {
                    scenicList.push(new Scenery("beachedKelp", 12198, 51016, 3.7, 1));
                    scenicList.push(new Scenery("beachedKelp", 15266, 55051, -8, 2));
                    scenicList.push(new Scenery("beachedKelp", 15539, 53157, -6.6, 0));
                }

                //Scenery
                //scenicList.push(new Scenery("stone", -8132 , 46141, 4.1, 1.5, 3));

                //algae
                //scenicList.push(new Scenery("algae", -8894, 45943, 3.4, 2));

                //buildings
                //Jalmari's Cabin
                scenicList.push(new Scenery("freydicBuilding9", 13606, 54212, 0, true));
                scenicList.push(new Scenery("smallTable", 13643, 54172, 1/2 * Math.PI, 0));
                scenicList.push(new Scenery("stumpStoolSml", 13676, 54178, 1/2 * Math.PI, 0));
                scenicList.push(new Scenery("crate", 13658, 54245, 1/4 * Math.PI, 4, [1.36, "jalmariPirateCrate1", 5, [[new Item("salt", false, false), 19], [new Item("sealMeat", false, false), 9], [new Item("crabClaw", false, false), 3], [new Item("bucketOfWaantiMilk", false, false), 2], [new Item("harstAle", false, false), 36]], false, 0]));
                scenicList.push(new Scenery("crate", 13716, 54098, -1.5/4 * Math.PI, 4, [1.36, "jalmariPirateCrate2", 5, [[new Item("jarOfOil", false, false), 8], [new Item("oilLantern", false, false), 2], [new Item("beesWax", false, false), 20], [new Item("candle", false, false), 20], [new Item("oilLamp", false, false), 3]], false, 0]));
                scenicList.push(new Scenery("crate", 13414, 54207, 0.15/4 * Math.PI, 3, [1.45, "jalmariPirateCrate3", 6, [[new Item("yaihefBerries", false, false), 9], [new Item("bequonFruit", false, false), 6], [new Item("callopBerries", false, false), 14], [new Item("pluttBerries", false, false), 25], [new Item("akerBerries", false, false), 17], [new Item("suuliMelon", false, false), 8]], false, 0]));
                scenicList.push(new Scenery("crate", 13636, 54164, 0.5/4 * Math.PI, 4, [0.4, "jalmariPirateCrate4", 1, [[new Item("coins", false, false), 337]], false, 0]));
                scenicList.push(new Scenery("barrel", 13600, 54251, -3/2 * Math.PI, 0));
                scenicList.push(new Scenery("barrel", 13733, 54189, 2.55/2 * Math.PI, 0));
                scenicList.push(new Scenery("barrel", 13707, 53157, 1/4 * Math.PI, 1));
                //Pirate Campout 1
                scenicList.push(new Scenery("barrel", 13025, 53825, 1.19/2 * Math.PI, 0));
                scenicList.push(new Scenery("tent", 12911, 53822, 135/360 * Math.PI, true));
                scenicList.push(new Scenery("tent", 12911, 53637, 189/360 * Math.PI, true));
                scenicList.push(new Scenery("tent", 13257, 53691, 250/360 * 2 * Math.PI, true));
                //Pirate Campout 2
                scenicList.push(new Scenery("tent", 14246, 54042, 45/360 * 2 * Math.PI, true));
                scenicList.push(new Scenery("tent", 14637, 53993, -60/360 * 2 * Math.PI, true));
                scenicList.push(new Scenery("tent", 14637, 53753, 235/360 * 2 * Math.PI, true));
                scenicList.push(new Scenery("tent", 14250, 53699, 144/360 * 2 * Math.PI, true));
                //Pirate Campout 3
                scenicList.push(new Scenery("tent", 13916, 53238, 275/360 * 2 * Math.PI, true));
                scenicList.push(new Scenery("tent", 13740, 53407, 0/360 * 2 * Math.PI, true));
                scenicList.push(new Scenery("tent", 13266, 53089, 166/360 * 2 * Math.PI, true));
                //Pirate Campout 4
                scenicList.push(new Scenery("tent", 14134, 54540, 243/360 * 2 * Math.PI, true));
                scenicList.push(new Scenery("tent", 13757, 54581, 109/360 * 2 * Math.PI, true));

                //landing
                scenicList.push(new Scenery("boat", 10896, 53452, 92/360 * 2 * Math.PI, true));
                scenicList.push(new Scenery("boat", 10719, 53725, 131/360 * 2 * Math.PI, true));
                scenicList.push(new Scenery("boat", 11334, 53785, 84/360 * 2 * Math.PI, true));
                scenicList.push(new Scenery("boat", 10729, 52922, 75/360 * 2 * Math.PI, true));
                scenicList.push(new Scenery("boat", 10381, 52669, 97/360 * 2 * Math.PI, true));
                scenicList.push(new Scenery("boat", 10646, 52472, 111/360 * 2 * Math.PI, true));

                if (uniqueChars.jalmariLDS)
                {
                    if (Math.random() > 0.35)
                    {
                        scenicList.push(new Scenery("item", 13637, 54179, 0, false, ["harstAle", 1, 0]));
                        scenicList.push(new Scenery("item", 13653, 54171, 0, false, ["crabMeat", 1, 0]));
                    }
                    else
                    {
                        scenicList.push(new Scenery("item", 13647, 54174, 0, false, ["pintGlass", 1, 0]));
                    }
                    scenicList.push(new Scenery("campFire", 13081, 53739, 260/360 * 2 * Math.PI, "permaLit"));
                    scenicList.push(new Scenery("campFire", 14408, 53873, 11/360 * 2 * Math.PI, "permaLit"));
                    scenicList.push(new Scenery("campFire", 13623, 53254, -200/360 * 2 * Math.PI, "permaLit"));
                    scenicList.push(new Scenery("campFire", 13969, 54630, -120/360 * 2 * Math.PI, "permaLit"));
                    scenicList.push(new Scenery("bed", 13537, 54225, -0.18, false));
                }
                else
                {
                    scenicList.push(new Scenery("bed", 13537, 54225, -0.18, true));
                }

                //Hyeling Camps
                //ArtificialIntelligenceAccess.push(new Unit(10041, 8746, "Hyeling", true, "White Hammer"));
                //ArtificialIntelligenceAccess.push(new Unit(9711, 8503, "HyelingSoldier", false, "Running Stone"));
                //scenicList.push(new Scenery("largeCeremonialRockCircle", 10075 , 8783, 0, true));
                //scenicList.push(new Scenery("hyelingTent", 9199 , 8965, 1/2 * Math.PI, true));
                //scenicList.push(new Scenery("hyelingSkeleton", 10071 , 8788, 0.12, true));

                change = "n5w1";
            }
        }
        else if (region == "s1w1")
        {
            if (change != "s1w1")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                scenicList.push(new Scenery("grushweedPlant", 5669, -4701,0, 1, undefined)); //copied s1
                scenicList.push(new Scenery("grushweedPlant", 5612, -4955,0, 1, undefined)); //copied s1
                scenicList.push(new Scenery("grushweedPlant", 5885, -5133,0, 0.6, undefined)); //copied s1
                scenicList.push(new Scenery("grushweedPlant", 5798, -4989,2, 1.6, undefined)); //copied s1
                scenicList.push(new Scenery("grushweedPlant", 5593, -4493,0, 1.5, undefined)); //copied s1
                scenicList.push(new Scenery("anterHill", 5691, -13164,-5.7, true, undefined)); //copied s1
                scenicList.push(new Scenery("grushweedPlant", 5462, -4553,0, 1.5, undefined)); //copied s1
                scenicList.push(new Scenery("grushweedPlant", 5785, -4826,0, 1.1, undefined)); //copied s1
                scenicList.push(new Scenery("grushweedPlant", 5632, -4801,0, 0.8, undefined)); //copied s1
                scenicList.push(new Scenery("grushweedPlant", 5547, -5043,0, 1, undefined)); //copied s1
                scenicList.push(new Scenery("grushweedPlant", 5842, -5190,0, 0.6, undefined)); //copied s1
                scenicList.push(new Scenery("grushweedPlant", 5568, -5328,-1, 1, undefined)); //copied s1
                scenicList.push(new Scenery("techiPlant", 5419, -6449,2.146, true, undefined)); //copied s1
                scenicList.push(new Scenery("techiPlant", 6059, -6527,1, true, undefined)); //copied s1
                scenicList.push(new Scenery("techiPlant", 5391, -5262,-0.1, true, undefined)); //copied s1
                scenicList.push(new Scenery("techiPlant", 6269, -4950,-3, true, undefined)); //copied s1
                scenicList.push(new Scenery("techiPlant", 6317, -4979,3, true, undefined)); //copied s1
                scenicList.push(new Scenery("techiPlant", 6013, -5986,0, true, undefined)); //copied s1
                scenicList.push(new Scenery("techiPlant", 6212, -7094,-0.5, true, undefined)); //copied s1
                scenicList.push(new Scenery("techiPlant", 5112, -10337,-3.75, true, undefined)); //copied s1
                scenicList.push(new Scenery("techiPlant", 6302, -4235,-3.55, true, undefined)); //copied s1
                scenicList.push(new Scenery("techiPlant", 4921, -10739,0.45, true, undefined)); //copied s1
                scenicList.push(new Scenery("luufPlant", 6164, -5617,1.111, true, undefined)); //copied s1
                scenicList.push(new Scenery("luufPlant", 6011, -8981,2.5, true, undefined)); //copied s1
                scenicList.push(new Scenery("luufPlant", 6263, -12475,-3, true, undefined)); //copied s1
                scenicList.push(new Scenery("luufPlant", 5130, -11435,0, true, undefined)); //copied s1
                scenicList.push(new Scenery("luufPlant", 4990, -13386,-5.4321, true, undefined)); //copied s1
                scenicList.push(new Scenery("itlinPlant", 5067, -9141,3.25, true, undefined)); //copied s1
                scenicList.push(new Scenery("itlinPlant", 5033, -4823,-6.4, true, undefined)); //copied s1
                scenicList.push(new Scenery("itlinPlant", 6229, -3987,1.5, true, undefined)); //copied s1
                scenicList.push(new Scenery("itlinPlant", 6441, -9318,2.5, true, undefined)); //copied s1
                scenicList.push(new Scenery("palntPlant", 5412, -6751,0, true, undefined)); //copied s1
                scenicList.push(new Scenery("palntPlant", 5326, -8149,-1.9, true, undefined)); //copied s1
                scenicList.push(new Scenery("palntPlant", 5586, -12299,6.2, true, undefined)); //copied s1

                ArtificialIntelligenceAccess.push(new Unit(8403.379542434988, -4468.3444593283, "MountainFrich", false,"steveymagic1"));
                ArtificialIntelligenceAccess.push(new Unit(8706.620698886007, -5319.917682250088, "MountainFrich", "baby","steveymagic2"));
                ArtificialIntelligenceAccess.push(new Unit(11467.033498524352, -4738.312534001844, "MountainFrich", "baby","steveymagic3"));
                ArtificialIntelligenceAccess.push(new Unit(16301.184309152452, -5340.80168440006, "MountainFrich", false,"steveymagic4"));
                ArtificialIntelligenceAccess.push(new Unit(16409.542544046562, -4262.60413436338, "MountainFrich", false,"steveymagic5"));
                ArtificialIntelligenceAccess.push(new Unit(8515.716005349124, -6806.85353205067, "MountainFrich", true,"steveymagic6"));
                ArtificialIntelligenceAccess.push(new Unit(12751.597353354002, -9952.82943314438, "MountainFrich", false,"steveymagic7"));
                ArtificialIntelligenceAccess.push(new Unit(13280.949670818602, -10347.920898562636, "MountainFrich", false,"steveymagic8"));
                ArtificialIntelligenceAccess.push(new Unit(7842.804980825808, -10785.677197838162, "MountainFrich", false,"steveymagic9"));
                ArtificialIntelligenceAccess.push(new Unit(12132.800704299507, -13412.196961967844, "MountainFrich", true,"steveymagic10"));
                ArtificialIntelligenceAccess.push(new Unit(9389.38733026072, -13056.186561105802, "MountainFrich", "baby","steveymagic11"));
                ArtificialIntelligenceAccess.push(new Unit(14606.697309473955, -11292.253197725116, "MountainFrich", false,"steveymagic12"));
                ArtificialIntelligenceAccess.push(new Unit(15377.716074486729, -11517.815920574385, "MountainFrich", "baby","steveymagic13"));
                ArtificialIntelligenceAccess.push(new Unit(9974.554288285006, -9255.626252502023, "MountainFrich", false,"steveymagic14"));


                ArtificialIntelligenceAccess.push(new Unit(10202.910962698854, -6437.420652893215, "GreyWolf", false, "copacatack1"));
                ArtificialIntelligenceAccess.push(new Unit(10517.494795667952, -6284.330179159941, "GreyWolf", false, "copacatack2"));
                ArtificialIntelligenceAccess.push(new Unit(10248.64624787282, -6174.501460450944, "GreyWolf", false, "copacatack3"));
                ArtificialIntelligenceAccess.push(new Unit(10689.841635072924, -8115.146668024366, "GreyWolf", false, "copacatacklow1"));
                ArtificialIntelligenceAccess.push(new Unit(10811.028791084535, -8259.749226918813, "GreyWolf", false, "copacatacklow2"));
                ArtificialIntelligenceAccess.push(new Unit(10570.511976346894, -8225.700751448892, "GreyWolf", false, "copacatacklow3"));
                ArtificialIntelligenceAccess.push(new Unit(10459.096447526597, -8329.041192333218, "GreyWolf", false, "copacatacklow4"));
                ArtificialIntelligenceAccess.push(new Unit(10490.385522480095, -8162.609444652485, "GreyWolf", false, "copacatacklow4"));
                ArtificialIntelligenceAccess.push(new Unit(8295.382409893627, -12951.304274218173, "GreyWolf", false, "copacatacklest1"));
                ArtificialIntelligenceAccess.push(new Unit(8145.583787403022, -12734.146392819304, "GreyWolf", false, "copacatacklest2"));
                ArtificialIntelligenceAccess.push(new Unit(10906.550465254602, -11621.51657346302, "GreyWolf", false, "copacatackeyt1"));
                ArtificialIntelligenceAccess.push(new Unit(11369, -11801.524729322651, "GreyWolf", true, "copacatackeytmo"));
                ArtificialIntelligenceAccess.push(new Unit(11324.016946222091, -11900.981171087575, "GreyWolf", false, "copacatackey2"));
                ArtificialIntelligenceAccess.push(new Unit(11482.012651885969, -11702.045313782319, "GreyWolf", false, "copacatackey3"));
                ArtificialIntelligenceAccess.push(new Unit(10750.985428396545, -11715.14202016111, "GreyWolf", false, "copacatackey4"));
                ArtificialIntelligenceAccess.push(new Unit(11190.363011474281, -11592.923304218559, "GreyWolf", false, "copacatackey5"));
                ArtificialIntelligenceAccess.push(new Unit(16309.210827071865, -10072.611024974703, "GreyWolf", false, "copacatacwee1"));
                ArtificialIntelligenceAccess.push(new Unit(15966.97685272381, -10136.599450878944, "GreyWolf", false, "copacatacwee2"));
                ArtificialIntelligenceAccess.push(new Unit(15742.09712938967, -10014.087140627282, "GreyWolf", false, "copacatacwee3"));
                ArtificialIntelligenceAccess.push(new Unit(8345.205410791259, -9701.77884349528, "GreyWolf", false, "copacatacmlo1"));
                ArtificialIntelligenceAccess.push(new Unit(9581.474457335948, -10183.924311364237, "GreyWolf", false, "copacatacmie1"));
                ArtificialIntelligenceAccess.push(new Unit(9825.891678098713, -10254.302939831477, "GreyWolf", false, "copacatacmie2"));
                ArtificialIntelligenceAccess.push(new Unit(9640.814164171392, -10311.554019260877, "GreyWolf", false, "copacatacmie3"));

                ArtificialIntelligenceAccess.push(new Unit(13162.685760877579, -6839.325802839179, "Beruln", false, "bigtuthedne1"));

                ArtificialIntelligenceAccess.push(new Unit(13939.632060718412, -7912.642519402722, "StoneGolem", false, "olescoret1"));
                ArtificialIntelligenceAccess.push(new Unit(13129.865835949533, -11930.55597954709, "StoneGolem", true, "olescoret2"));
                ArtificialIntelligenceAccess.push(new Unit(11793.354881609746, -9559.34178345488, "StoneGolem", false, "olescoret3"));
                ArtificialIntelligenceAccess.push(new Unit(9122.697677366397, -9702.31763572621, "StoneGolem", "baby", "olescoret4"));
                ArtificialIntelligenceAccess.push(new Unit(8309.71768538278, -9428.674231328338, "StoneGolem", "baby", "olescoret5"));

                scenicList.push(new Scenery("haeflowerPlant", 11701.107275316735, -7293.06588478844, 4, true));

                scenicList.push(new Scenery("blood", 12844.523623278195, -7051.787356371328, 4.15, 3, 1.5));

                scenicList.push(new Scenery("stone", 8711.72651252597, -11186.373040883807, 2.19, 2, 1));
                scenicList.push(new Scenery("stone", 8853.840227542465, -11088.45238847473, 4.69, 0.5, 2));
                scenicList.push(new Scenery("darkStone", 11976.625041283112, -12368.450429060826, -2, 3, 3));
                scenicList.push(new Scenery("stone", 15080.457183180371, -10301.053130754102, 9, 2, 3));
                scenicList.push(new Scenery("darkStone",11181.805378118102, -9980.44817317513, 3, 1, 1));
                scenicList.push(new Scenery("stone", 8753.39347811624, -9871.782740864754, 1, 2.5, 3));

                scenicList.push(new Scenery("stone", 11765.252842403006, -10970.03599044308, 2.9, 4, 2));
                scenicList.push(new Scenery("stone", 9405.741595938374, -6936.056384186396, 6.9, 2, 1));
                scenicList.push(new Scenery("stone", 13568.430422088017, -8874.436932893263, 2, 1.5, 3));
                scenicList.push(new Scenery("stone", 15581.783302907124, -8466.604787251705, 7, 3, 2));
                scenicList.push(new Scenery("stone", 10253.383839505055, -5945.084985537034, 1, 2, 3));
                scenicList.push(new Scenery("stone", 8842.509377895602, -4424.552127760045, 8, 1.5, 3));
                scenicList.push(new Scenery("stone", 13954.530411828877, -7191.466585003203, 2, 2, 2));
                scenicList.push(new Scenery("stone", 14433.631923677889, -5785.981878196792, 3, 3, 1));
                scenicList.push(new Scenery("stone", 12974.68055095301, -5752.742146028582, 5, 1, 2));
                scenicList.push(new Scenery("stone", 15246.127110985819, -12232.689195885585, 2.5, 2.5, 1));
                scenicList.push(new Scenery("darkStone", 8853.893496155912, -7767.374625849909, 2, 2.5, 1));
                scenicList.push(new Scenery("darkStone", 10461.359646622834, -8626.129965392556, 3.6, 2, 2));
                scenicList.push(new Scenery("darkStone", 12288.35150984644, -6552.250095746234, 3, 3.5, 3));
                scenicList.push(new Scenery("darkStone", 11632.960517228892, -8540.697809441466, 2.87, 1, 1));
                scenicList.push(new Scenery("darkStone", 13314.204073676263, -12110.461592126432, 1.2, 2.5, 2));
                scenicList.push(new Scenery("darkStone", 13718.30005663254, -11714.264813029444, 1.8, 2, 3));
                scenicList.push(new Scenery("darkStone", 13903.0352132752, -10802.436550902603, 1, 1, 1));


                scenicList.push(new Scenery("haeFlowerPlant", 13235.047522284882, -9991.817958450421, 4, true));


                scenicList.push(new Scenery("blood",13140.515151518863, -6899.973456929476, 2.6, 4, 2.5));


                change = "s1w1";
            }
        }
        else if (region == "s1w2")
        {
            if (change != "s1w2")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                scenicList.push(new Scenery("stone", 15581.783302907124, -8466.604787251705,7, 3, 2)); //copied s-1-w-1

                ArtificialIntelligenceAccess.push(new Unit(18074.298222875015, -4220.837450451144, "GreyWolf", false ,"pinkyur1" ));
                ArtificialIntelligenceAccess.push(new Unit(18409.120334690117, -4184.414080460234, "GreyWolf", false ,"pinkyur2" ));
                ArtificialIntelligenceAccess.push(new Unit(22950.587571046195, -6324.466699282466, "GreyWolf", false ,"pinkyuru1" ));
                ArtificialIntelligenceAccess.push(new Unit(23332.6497385427, -6152.1607738458615, "GreyWolf", false ,"pinkyuru2" ));
                ArtificialIntelligenceAccess.push(new Unit(23126.793941697277, -6393.686180066117, "GreyWolf", false ,"pinkyuru3" ));
                ArtificialIntelligenceAccess.push(new Unit(19548.104157009057, -6599.932978698763, "GreyWolf", false ,"pinkyurg1" ));
                ArtificialIntelligenceAccess.push(new Unit(19763.425144257577, -6688.171440388522, "GreyWolf", false ,"pinkyurg2" ));
                ArtificialIntelligenceAccess.push(new Unit(19980.89725740351, -6515.06948244012, "GreyWolf", false ,"pinkyurg3" ));
                ArtificialIntelligenceAccess.push(new Unit(19812.36165131242, -6584.896734721646, "GreyWolf", true ,"pinkyurg4" ));
                ArtificialIntelligenceAccess.push(new Unit(26290.24463086286, -4681.913776164111, "GreyWolf", false ,"pinkyurh1" ));
                ArtificialIntelligenceAccess.push(new Unit(26105.647856356944, -4573.783616160428, "GreyWolf", false ,"pinkyurh2" ));
                ArtificialIntelligenceAccess.push(new Unit(26161.483772615535, -4399.29845896852, "GreyWolf", false ,"pinkyurh3" ));
                ArtificialIntelligenceAccess.push(new Unit(23321.503360309176, -13507.861046515007, "GreyWolf", false ,"pinkyurk1" ));
                ArtificialIntelligenceAccess.push(new Unit(23082.840459371128, -13341.076479162399, "GreyWolf", false ,"pinkyurk2" ));
                ArtificialIntelligenceAccess.push(new Unit(23824.872149842227, -10716.492237486329, "GreyWolf", false ,"pinkyurt1" ));
                ArtificialIntelligenceAccess.push(new Unit(23723.431721997324, -10828.57566136228, "GreyWolf", false ,"pinkyurt2" ));
                ArtificialIntelligenceAccess.push(new Unit(23963.415935613863, -10927.588939564781, "GreyWolf", false ,"pinkyurt3" ));


                ArtificialIntelligenceAccess.push(new Unit(23132.960055000272, -5081.850320770147, "StoneGolem", false ,"dsoftwne1" ));
                ArtificialIntelligenceAccess.push(new Unit(21411.85857251847, -6293.4959494184895, "StoneGolem", true ,"dsoftwne2" ));
                ArtificialIntelligenceAccess.push(new Unit(20370.865344154863, -7081.28745305883, "StoneGolem", "baby" ,"dsoftwne3" ));
                ArtificialIntelligenceAccess.push(new Unit(18599.717130899295, -9344.585231179442, "StoneGolem", false ,"dsoftwne4" ));
                ArtificialIntelligenceAccess.push(new Unit(23682.010887651966, -11485.704383904002, "StoneGolem", false ,"dsoftwne5" ));


                ArtificialIntelligenceAccess.push(new Unit(25597.63966771881, -9230.566640861609, "Beruln", false ,"kainstien1" ));
                ArtificialIntelligenceAccess.push(new Unit(21137.74976639098, -12085.484369403091, "Beruln", true ,"kainstien2" ));


                ArtificialIntelligenceAccess.push(new Unit(21091.181399887602, -7922.457475544878, "MountainFrich", true, "runrunfarm1"));
                ArtificialIntelligenceAccess.push(new Unit(19381.40192835468, -7483.468157282767, "MountainFrich", false, "runrunfarm2"));
                ArtificialIntelligenceAccess.push(new Unit(17759.82373631438, -5571.593343650006, "MountainFrich", false, "runrunfarm3"));
                ArtificialIntelligenceAccess.push(new Unit(26508.075605854072, -6523.373617560634, "MountainFrich", false, "runrunfarm4"));
                ArtificialIntelligenceAccess.push(new Unit(24601.22563038774, -8049.422640657682, "MountainFrich", false, "runrunfarm5"));
                ArtificialIntelligenceAccess.push(new Unit(18401.47093009515, -13312.069748147673, "MountainFrich", "baby", "runrunfarm6"));
                ArtificialIntelligenceAccess.push(new Unit(23456.289198224906, -4060.3982833234054, "MountainFrich", false, "runrunfarm7"));
                ArtificialIntelligenceAccess.push(new Unit(19836.27676170634, -10105.943371067755, "MountainFrich", false, "runrunfarm8"));
                ArtificialIntelligenceAccess.push(new Unit(20018.39907436036, -9626.454835616358, "MountainFrich", true, "runrunfarm9"));


                ArtificialIntelligenceAccess.push(new Unit(23096.483163670157, -9067.90230357754, "Nog", false ,"hegatin1" ));
                ArtificialIntelligenceAccess.push(new Unit(25497.85543527431, -12862.153939754944, "Nog", true ,"hegatin2" ));
                ArtificialIntelligenceAccess.push(new Unit(25767.88175545148, -12780.942406767508, "Nog", false ,"hegatin3" ));
                ArtificialIntelligenceAccess.push(new Unit(25751.68905053711, -12832.011706882051, "Nog", true ,"hegatin4" ));
                ArtificialIntelligenceAccess.push(new Unit(25836.331136147837, -12973.826399412681, "Nog", false ,"hegatin5" ));
                ArtificialIntelligenceAccess.push(new Unit(21157.927268179476, -9348.999282991244, "Nog", true ,"hegatin6" ));


                scenicList.push(new Scenery("haeflowerPlant", 22342.615016701082, -6509.42349964253, 5, true));
                scenicList.push(new Scenery("haeflowerPlant", 22843.397179644384, -11220.735959975116, 2, true));


                scenicList.push(new Scenery("ashStone", 21395.252132045855, -7724.760403136383, 2, 4.5, 3));
                scenicList.push(new Scenery("ashStone", 19594.541638782583, -7666.897055094933, 1, 1.5, 2));

                scenicList.push(new Scenery("darkStone", 19748.58070443285, -9466.65584216338, 1, 0.5, 2));
                scenicList.push(new Scenery("darkStone", 24968.20681216339, -9369.457139694605, -4, 2, 2));
                scenicList.push(new Scenery("darkStone", 25362.580066785882, -8524.768052938854, -2, 2.5, 1));
                scenicList.push(new Scenery("darkStone", 25146.77113970494, -8661.469333527531, 1, 1.5, 3));
                scenicList.push(new Scenery("darkStone", 19900.10695616608, -9862.31103173586, 9, 3, 1));
                scenicList.push(new Scenery("darkStone", 21620.824752549917, -6607.6400337590985, -1, 2.5, 2));
                scenicList.push(new Scenery("darkStone", 26138.962788150013, -5305.3864939601945, 3, 2, 1));

                scenicList.push(new Scenery("Stone", 26499.792573056682, -9196.264916320315, 2, 2, 3));
                scenicList.push(new Scenery("Stone", 18969.450502411833, -5951.7179284594695, 8, 1.5, 2));
                scenicList.push(new Scenery("Stone", 24258.977758016936, -12128.792403672722, 3, 2, 1));
                scenicList.push(new Scenery("Stone", 26082.680601300726, -12649.786936172404, 6, 1.5, 3));
                scenicList.push(new Scenery("Stone", 24447.914933263906, -6619.120935027706, 4, 2.5, 1));
                scenicList.push(new Scenery("Stone", 21815.34499658098, -12243.839455072994, 1, 3, 1));
                scenicList.push(new Scenery("Stone", 19025.371348644767, -10091.830356988197, -5, 1, 1));
                scenicList.push(new Scenery("Stone", 18339.4665164278, -7542.4181545669135, -3, 1.5, 2));

                change = "s1w2";
            }
        }
        else if (region == "s1w3")
        {
            if (change != "s1w3")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                scenicList.push(new Scenery("stone", 35121, -3247,3, 1, 1)); //copied w-3
                scenicList.push(new Scenery("stone", 36318, -3039,2, 2, 1)); //copied w-3
                scenicList.push(new Scenery("darkStone", 38453, -13492,49, 0.5, 3)); //copied s1w4
                scenicList.push(new Scenery("darkStone", 38342, -8908,-49, 1, 3)); //copied s-1-w-4
                scenicList.push(new Scenery("ashStone", 38457, -3905,-4.45, 1, 2)); //copied s-1-w-4
                scenicList.push(new Scenery("ashStone", 38828, -5130,4.45, 2, 3)); //copied s-1-w-4
                scenicList.push(new Scenery("stone", 38418, -5354,35, 0.5, 1)); //copied s-1-w-4
                scenicList.push(new Scenery("stone", 38928, -8059,25, 1, 3)); //copied s-1-w-4
                scenicList.push(new Scenery("stone", 38507, -12978,-28, 2.5, 2)); //copied s-1-w-4

                ArtificialIntelligenceAccess.push(new Unit(33443.99874806966, -4329.908461053988, "Beruln", false ,"lzefurecon1"));
                ArtificialIntelligenceAccess.push(new Unit(29464.009994560187, -6323.814025334209, "Beruln", true ,"lzefurecon2"));
                ArtificialIntelligenceAccess.push(new Unit(30487.77582924173, -12139.53327954826, "Beruln", false ,"lzefurecon3"));
                ArtificialIntelligenceAccess.push(new Unit(34508.88956814979, -11776.809334985592, "Beruln", false ,"lzefurecon4"));
                ArtificialIntelligenceAccess.push(new Unit(31651.778034291063, -10385.545455549694, "Beruln", true ,"lzefurecon5"));
                ArtificialIntelligenceAccess.push(new Unit(31754.994368712545, -7043.08834404736, "Beruln", false ,"lzefurecon6"));
                ArtificialIntelligenceAccess.push(new Unit(32550.570603463286, -9213.079176774309, "Beruln", true ,"lzefurecon7"));
                ArtificialIntelligenceAccess.push(new Unit(28610.756771413842, -10524.31293566551, "Beruln", false ,"lzefurecon8"));
                ArtificialIntelligenceAccess.push(new Unit(30145.53658709277, -8150.856800313581, "Beruln", true ,"lzefurecon9"));


                ArtificialIntelligenceAccess.push(new Unit(29422.70681958786, -10918.417474509653, "StoneGolem", false ,"idhrtbtdot1"));
                ArtificialIntelligenceAccess.push(new Unit(29885.763734618416, -10441.053429139198, "StoneGolem", true ,"idhrtbtdot2"));
                ArtificialIntelligenceAccess.push(new Unit(31016.294851415285, -5715.243948836595, "StoneGolem", "baby" ,"idhrtbtdot3"));
                ArtificialIntelligenceAccess.push(new Unit(34237.39329016012, -6899.58585156638, "StoneGolem", false ,"idhrtbtdot4"));


                ArtificialIntelligenceAccess.push(new Unit(35845.75064552452, -5594.641126701124, "MountainFrich", true, "shesalittlernawy1"));
                ArtificialIntelligenceAccess.push(new Unit(29672.5811182259, -8958.470913967683, "MountainFrich", false, "shesalittlernawy2"));
                ArtificialIntelligenceAccess.push(new Unit(35594.45555836797, -5858.825348653329, "MountainFrich", false, "shesalittlernawy3"));
                ArtificialIntelligenceAccess.push(new Unit(30417.79004051657, -4328.913609758368, "MountainFrich", false, "shesalittlernawy3"));


                ArtificialIntelligenceAccess.push(new Unit(32139.303070871538, -5832.157095416019, "GreyWolf", false ,"bsktplug1"));
                ArtificialIntelligenceAccess.push(new Unit(32272.658734047163, -5939.101500108321, "GreyWolf", false ,"bsktplug2"));
                ArtificialIntelligenceAccess.push(new Unit(32459.121317435056, -5850.232766805705, "GreyWolf", false ,"bsktplug3"));
                ArtificialIntelligenceAccess.push(new Unit(36491.92250801385, -13251.542265475337, "GreyWolf", false ,"bsktplug3"));
                ArtificialIntelligenceAccess.push(new Unit(36592.0642246696, -13192.17331313752, "GreyWolf", false ,"bsktplug3"));
                ArtificialIntelligenceAccess.push(new Unit(36332.54225557709, -13174.579063531372, "GreyWolf", false ,"bsktplug3"));


                ArtificialIntelligenceAccess.push(new Unit(33341.99011926019, -13256.157828203312, "Nog", true ,"deeeby1"));
                ArtificialIntelligenceAccess.push(new Unit(33554.83281536385, -13194.210792410877, "Nog", true ,"deeeby2"));
                ArtificialIntelligenceAccess.push(new Unit(32883.20569311604, -13019.621311163342, "Nog", false ,"deeeby3"));
                ArtificialIntelligenceAccess.push(new Unit(35776.20248216203, -10029.628270189685, "Nog", true ,"deeezby1"));
                ArtificialIntelligenceAccess.push(new Unit(35912.152759252815, -10140.062083769373, "Nog", false ,"deeezby2"));
                ArtificialIntelligenceAccess.push(new Unit(35899.88100739941, -10191.157751922712, "Nog", true ,"deeezby3"));
                ArtificialIntelligenceAccess.push(new Unit(36113.60914222368, -10084.479597143863, "Nog", true ,"deeezby4"));
                ArtificialIntelligenceAccess.push(new Unit(35990.397882440215, -10018.228972855108, "Nog", false ,"deeezby5"));

                scenicList.push(new Scenery("blood", 29460.23261923192, -6510.047672551112, 4, 1, 2));
                scenicList.push(new Scenery("blood", 30040.649121284867, -8397.399257398487, 1.5, 2, 3));

                scenicList.push(new Scenery("ashStone", 30595.151021132584, -10196.284846308965, -7.775, 2, 1));
                scenicList.push(new Scenery("ashStone", 32662.470054519898, -11625.257614707987, -5.2, 1.5, 3));
                scenicList.push(new Scenery("ashStone", 34170.64116524535, -7892.121602545835, -1.2, 1, 1));
                scenicList.push(new Scenery("ashStone", 32690.56879613539, -8709.552689094433, 8.2, 3, 2));
                scenicList.push(new Scenery("ashStone", 33645.70580110074, -12781.399589158453, 1.27, 2, 1));
                scenicList.push(new Scenery("ashStone", 30361.86453120979, -13182.813371414188, 5.98, 1.5, 2));
                scenicList.push(new Scenery("ashStone", 33638.236129350764, -4828.311673232744, 2.38, 1, 1));

                scenicList.push(new Scenery("darkStone", 29220.12125778782, -10716.583633603199, -1, 4.5, 1));
                scenicList.push(new Scenery("darkStone", 29549.26417417856, -10838.821813297303, -6, 1.5, 2));
                scenicList.push(new Scenery("darkStone", 29663.639509956407, -8177.201496845512, -1, 4, 1));
                scenicList.push(new Scenery("darkStone", 30413.564335977757, -8329.818101900031, -3.4, 2, 3));
                scenicList.push(new Scenery("darkStone", 28647.627357401107, -9190.314686419812, 1.4, 1.5, 2));
                scenicList.push(new Scenery("darkStone", 29530.700547533357, -8378.584793454256, -4.4, 1.5, 2));
                scenicList.push(new Scenery("darkStone", 36518.40969074776, -9080.444250851524, -2.82, 1.5, 1));

                scenicList.push(new Scenery("stone", 32171.829584707117, -5316.653312021226, -8.4, 2.5, 2));
                scenicList.push(new Scenery("stone", 28213.06652223242, -7262.856175551138, 2.74, 1.5, 1));
                scenicList.push(new Scenery("stone", 29376.004084556494, -6554.701954962197, 6.74, 2, 2));
                scenicList.push(new Scenery("stone", 34907.181901520824, -9655.275947962777, 8.14, 1.5, 3));
                scenicList.push(new Scenery("stone", 33547.69233008615, -10321.320004160285, -5.14, 2.5, 1));
                scenicList.push(new Scenery("stone", 30830.047186264863, -6850.2971161714995, -4.93, 3.5, 2));

                scenicList.push(new Scenery("skeleton", 30078.15616180353, -8405.53820770738, 1, 1.5));
                scenicList.push(new Scenery("skeleton", 29974.675044607324, -8439.584471480513, 5, 1));


                scenicList.push(new Scenery("haeflowerPlant", 31781.14644276998, -9020.726642155629, 7.3, true));
                scenicList.push(new Scenery("haeflowerPlant", 31993.875023944827, -10927.822997819754, 2.34, true));
                scenicList.push(new Scenery("haeflowerPlant", 34825.3280675003, -6373.809924982022, 1.324, true));

                scenicList.push(new Scenery("cave", 31085, -8887, 0.8, [932, 36], "olkrinCave"));


                change = "s1w3";
            }
        }
        else if (region == "w1") //Y > 6290 && Y < 32370
        {
            if (change != "w1")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                //Un Frich Periférico
                ArtificialIntelligenceAccess.push(new Unit(7716, 3482, "Frich", false, "Alfer"));
                ArtificialIntelligenceAccess.push(new Unit(7530, -685, "Frich", true, "Endle"));

                //High-Hill Howlers
                ArtificialIntelligenceAccess.push(new Unit(15517, 5728, "GreyWolf", false, "Clawder"));
                ArtificialIntelligenceAccess.push(new Unit(15296, 5951, "GreyWolf", false, "Claudia"));
                ArtificialIntelligenceAccess.push(new Unit(15404, 6273, "GreyWolf", false, "Caidlin"));
                ArtificialIntelligenceAccess.push(new Unit(12764, 5055, "GreyWolf", false, "Cal"));
                ArtificialIntelligenceAccess.push(new Unit(9742, -2615, "GreyWolf", false, "Claw"));
                ArtificialIntelligenceAccess.push(new Unit(9990, -2765, "GreyWolf", false, "Walca"));
                ArtificialIntelligenceAccess.push(new Unit(14650, 5353, "GreyWolf", false, "Calca"));
                ArtificialIntelligenceAccess.push(new Unit(12346, -3157, "GreyWolf", false, "Calcor"));
                ArtificialIntelligenceAccess.push(new Unit(10988, -2291, "GreyWolf", false, "Cor"));

                //The friches of the rocky west
                ArtificialIntelligenceAccess.push(new Unit(8307, 4918, "MountainFrich", "massive", "Fruyuk"));
                ArtificialIntelligenceAccess.push(new Unit(11253, -790, "MountainFrich", true, "Farayiu"));
                ArtificialIntelligenceAccess.push(new Unit(7504, 1592, "MountainFrich", false, "Fama"));
                ArtificialIntelligenceAccess.push(new Unit(16403, 4633, "MountainFrich", false, "Famo"));
                ArtificialIntelligenceAccess.push(new Unit(9508, 4287, "MountainFrich", false, "Fameh"));
                ArtificialIntelligenceAccess.push(new Unit(9261, 871, "MountainFrich", false, "Fomih"));
                ArtificialIntelligenceAccess.push(new Unit(9126, -3115, "MountainFrich", true, "Fara"));
                ArtificialIntelligenceAccess.push(new Unit(14655, 2529, "MountainFrich", false, "Famal"));
                ArtificialIntelligenceAccess.push(new Unit(14332, 2614, "MountainFrich", false, "Fomal"));
                ArtificialIntelligenceAccess.push(new Unit(8958, -1322, "MountainFrich", false, "Fomol"));
                ArtificialIntelligenceAccess.push(new Unit(12865, 3133, "MountainFrich", "massive", "Kruff"));
                ArtificialIntelligenceAccess.push(new Unit(10288, 1640, "MountainFrich", true, "Kuy"));
                ArtificialIntelligenceAccess.push(new Unit(11150, 796, "MountainFrich", false, "Kolmuyka"));

                //berulns in the west
                ArtificialIntelligenceAccess.push(new Unit(15918, -1709, "Beruln", false, "Kagim"));
                ArtificialIntelligenceAccess.push(new Unit(14705, -228, "Beruln", true, "Korgg"));
                ArtificialIntelligenceAccess.push(new Unit(14996, -2974, "Beruln", false, "Kormok"));

                //olkrin of the rocklands
                //ArtificialIntelligenceAccess.push(new Unit(8199, 2310, "Olkrin", false, "Efaldor"));

                //Rocky Rock Monsters of the Rocky Rock West
                ArtificialIntelligenceAccess.push(new Unit(10752, 4668, "StoneGolem", false, "Orefal"));
                ArtificialIntelligenceAccess.push(new Unit(16174, -1500, "StoneGolem", false, "Orefaw"));
                ArtificialIntelligenceAccess.push(new Unit(12473, 2171, "StoneGolem", "baby", "Foge"));
                ArtificialIntelligenceAccess.push(new Unit(15833, 2190, "StoneGolem", true, "stoner"));
                ArtificialIntelligenceAccess.push(new Unit(8980, 1303, "StoneGolem", "baby", "Folg"));
                ArtificialIntelligenceAccess.push(new Unit(13738, -466, "StoneGolem", false, "Fawm"));
                ArtificialIntelligenceAccess.push(new Unit(10132, -1992, "StoneGolem", "baby", "Folgem"));
                ArtificialIntelligenceAccess.push(new Unit(15272, 2811, "StoneGolem", true, "Gilgum"));



                //Ores
                scenicList.push(new Scenery("stone", 14572 , -1949, 0, 3, 1));
                scenicList.push(new Scenery("stone", 16197 , -1257, -1, 2, 3));
                scenicList.push(new Scenery("darkStone", 11323 , 676, 1.37, 2.5, 2));
                scenicList.push(new Scenery("stone", 13570 , -752, 5.213, 1.5, 2));
                scenicList.push(new Scenery("ashStone", 16223 , -3079, 2.345678910, 1, 1));
                scenicList.push(new Scenery("stone", 13693 , 346, -1.5, 4, 3));
                scenicList.push(new Scenery("jvostran", 11944 , 4617, 7, 1, 1));
                scenicList.push(new Scenery("darkStone", 14892 , 4138, -3.4, 1.5, 3));
                scenicList.push(new Scenery("jvostran", 14074 , 5728, 5.6, 2, 2));
                scenicList.push(new Scenery("ashStone", 16010 , 5129, 3, 3.5, 2));
                scenicList.push(new Scenery("stone", 10582 , 4635, 1, 1, 1));
                scenicList.push(new Scenery("stone", 10722 , 4370, -8, 1.5, 2));
                scenicList.push(new Scenery("stone", 9031 , 1374, -2, 0.5, 3));
                scenicList.push(new Scenery("darkStone", 8458 , 1980, 4.47, 4, 1));
                scenicList.push(new Scenery("darkStone", 13894 , 970, 2.3, 1.5, 1));
                scenicList.push(new Scenery("stone", 15468 , 223, 5, 2, 3));
                scenicList.push(new Scenery("stone", 15614 , 322, 6, 1, 2));
                scenicList.push(new Scenery("stone", 16151 , 130, -2.5, 3.5, 1));
                scenicList.push(new Scenery("stone", 8300 , 941, 4.444, 2.5, 1));
                scenicList.push(new Scenery("darkStone", 16208 , 4062, 12.12, 1, 3));
                scenicList.push(new Scenery("ashStone", 10587 , 5548, -3.14159, 2, 2));
                scenicList.push(new Scenery("darkStone", 10852 , 4617, -14, 0.5, 1));
                scenicList.push(new Scenery("darkStone", 12229 , 2802, -16.88, 1.5, 1));
                scenicList.push(new Scenery("jvostran", 11408 , -2348, 14.64, 1, 3));
                scenicList.push(new Scenery("stone", 13718 , -2521, 6.969, 4, 1));
                scenicList.push(new Scenery("darkStone", 13060 , -1400, -11, 2.5, 2));
                scenicList.push(new Scenery("stone", 13409 , 1943, 2.969, 1.5, 3));
                scenicList.push(new Scenery("ashStone", 11234 , 1726, -4.45, 0.5, 1));
                scenicList.push(new Scenery("stone", 9380 , 312, 3.757, 1, 2));
                scenicList.push(new Scenery("stone", 10199 , -2776, 0, 2, 1));
                scenicList.push(new Scenery("stone", 13224 , 2702, 0.12, 1, 2));

                //Plants
                scenicList.push(new Scenery("haeflowerPlant", 15185, 4442, 4, true));
                scenicList.push(new Scenery("haeflowerPlant", 11706, -656, 2.333, true));
                scenicList.push(new Scenery("haeflowerPlant", 14185, 2966, -6.51245, true));
                scenicList.push(new Scenery("haeflowerPlant", 9214, 1615, -8.9, true));
                scenicList.push(new Scenery("haeflowerPlant", 14638, 1229, 9, true));

                //scenes
                //"Don't wander alone..." Gayden
                scenicList.push(new Scenery("skeleton", 14053, -1661, 3.45, 1.55));
                scenicList.push(new Scenery("campFire", 13349, -1891, 1.2/4 * Math.PI, true));
                if (quests.lonerGuyStash)
                {
                    quests.lonerGuyStash = false;

                    worldItems.push([new Item("lonersJournal", 14023, -1673), 1]);
                    worldItems.push([new Item("freydicSword", 13903, -1976), 1]);
                    worldItems.push([new Item("frichPelt", 13458, -1787), 4]);
                    worldItems.push([new Item("tent", 13220, -1963), 1]);
                    worldItems.push([new Item("wizardGown", 14542, 3836), 1]);
                    worldItems.push([new Item("frostWind", 14574, 3832), 1]);
                }
                //epic duel between mage and rock golem... golem won.
                scenicList.push(new Scenery("skeleton", 14542, 3815, -1 + 1/2 * Math.PI, 1.6));
                scenicList.push(new Scenery("darkStoneOver", 14542, 3815, 15.4, 1.5, 3));

                change = "w1";
            }
        }
        else if (region == "w2")
        {
            if (change != "w2")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                //High-Hill Howlers
                ArtificialIntelligenceAccess.push(new Unit(18276, -2764, "GreyWolf", false, "Claumous"));
                ArtificialIntelligenceAccess.push(new Unit(19236, -1866, "GreyWolf", false, "Claudior"));
                ArtificialIntelligenceAccess.push(new Unit(19230, -1900, "GreyWolf", false, "Clondala"));
                ArtificialIntelligenceAccess.push(new Unit(19705, -1755, "GreyWolf", false, "Clorala"));
                ArtificialIntelligenceAccess.push(new Unit(19486, -1458, "GreyWolf", false, "Rufus"));
                ArtificialIntelligenceAccess.push(new Unit(19406, -2449, "GreyWolf", false, "Rulfor"));
                ArtificialIntelligenceAccess.push(new Unit(25105, -2221, "GreyWolf", false, "Cala"));
                ArtificialIntelligenceAccess.push(new Unit(25110, -1962, "GreyWolf", false, "Dolorian"));
                ArtificialIntelligenceAccess.push(new Unit(24684, -2325, "GreyWolf", false, "Rulthoul"));

                //Nogs (a dumb variety of goblins)
                ArtificialIntelligenceAccess.push(new Unit(23944, 2486, "Nog", true, "Buckle-Snorp"));
                ArtificialIntelligenceAccess.push(new Unit(23833, 2378, "Nog", true, "Bark-Gropp"));
                ArtificialIntelligenceAccess.push(new Unit(25689, 3165, "Nog", false, "Hemethelmesh"));
                ArtificialIntelligenceAccess.push(new Unit(21939, 4206, "Nog", true, "Biggle-Gromber"));
                ArtificialIntelligenceAccess.push(new Unit(20856, 2738, "Nog", false, "Hegladesh"));
                ArtificialIntelligenceAccess.push(new Unit(26502, -2251, "Nog", false, "Heg-Lagersh"));
                ArtificialIntelligenceAccess.push(new Unit(19869, 3730, "Nog", true, "Kadder-Spitsack"));
                ArtificialIntelligenceAccess.push(new Unit(19540, 3567, "Nog", false, "Dek-Batterbash"));
                ArtificialIntelligenceAccess.push(new Unit(18981, 4974, "Nog", false, "Cof-bloodbrane"));
                ArtificialIntelligenceAccess.push(new Unit(26691, -3269, "Nog", false, "Cottlecroch-bloodhumper"));
                ArtificialIntelligenceAccess.push(new Unit(25743, 1232, "Nog", false, "Cutlove-Fleshbang"));
                ArtificialIntelligenceAccess.push(new Unit(27253, -1968, "Nog", true, "Shindig-Toestomper"));
                ArtificialIntelligenceAccess.push(new Unit(27038, -1573, "Nog", false, "Scarbrane-Fleshbane"));

                //The friches of the rocky west
                ArtificialIntelligenceAccess.push(new Unit(17949, 5536, "MountainFrich", false, "Froikel"));
                ArtificialIntelligenceAccess.push(new Unit(18201, 5407, "MountainFrich", false, "Fralker"));
                ArtificialIntelligenceAccess.push(new Unit(26230, 6004, "MountainFrich", true, "Frolk"));
                ArtificialIntelligenceAccess.push(new Unit(22803, -262, "MountainFrich", true, "Froikon"));
                ArtificialIntelligenceAccess.push(new Unit(22331, -409, "MountainFrich", false, "Fralkir"));
                ArtificialIntelligenceAccess.push(new Unit(23243, -784, "MountainFrich", false, "Fralkon"));
                ArtificialIntelligenceAccess.push(new Unit(26759, 2664, "MountainFrich", false, "Froikek"));
                ArtificialIntelligenceAccess.push(new Unit(26977, 2871, "MountainFrich", false, "Fralkek"));
                ArtificialIntelligenceAccess.push(new Unit(26924, 2110, "MountainFrich", false, "Fralkirk"));
                ArtificialIntelligenceAccess.push(new Unit(26551, 2175, "MountainFrich", false, "Fralkonk"));
                ArtificialIntelligenceAccess.push(new Unit(21828, -3113, "MountainFrich", "massive", "Frakalholff"));
                ArtificialIntelligenceAccess.push(new Unit(24716, 1667, "MountainFrich", false, "Froiked"));
                ArtificialIntelligenceAccess.push(new Unit(17476, 453, "MountainFrich", false, "Froket"));

                //berulns in the west
                ArtificialIntelligenceAccess.push(new Unit(20729, 5514, "Beruln", true, "Migm"));
                ArtificialIntelligenceAccess.push(new Unit(21509, 6131, "Beruln", true, "Mavrim"));
                ArtificialIntelligenceAccess.push(new Unit(25688, -677, "Beruln", false, "Bajgerr"));

                //olkrin of the rocklands
                var rndNum = Math.random();
                if (rndNum < 0.15 && change == "s1w2" || rndNum < 0.15 && change == "w1")
                {
                    ArtificialIntelligenceAccess.push(new Unit(25342, 4764, "Olkrin", false, "Efaldor"));
                    ArtificialIntelligenceAccess.push(new Unit(26545, 3822, "Olkrin", "baby", "Athalkrond"));
                    ArtificialIntelligenceAccess.push(new Unit(23552, -1702, "Olkrin", "baby", "Ilidrith"));
                }
                else if (rndNum < 0.4)
                {
                    ArtificialIntelligenceAccess.push(new Unit(25342, 4764, "Beruln", true, "Ojoscarr"));
                    ArtificialIntelligenceAccess.push(new Unit(26545, 3822, "Beruln", false, "Ilmane"));
                }
                else if (rndNum < 0.7)
                {
                    ArtificialIntelligenceAccess.push(new Unit(25345, 4765, "GreyWolf", true, "Calrorus"));
                    ArtificialIntelligenceAccess.push(new Unit(25042, 4750, "GreyWolf", false, "Rork"));
                    ArtificialIntelligenceAccess.push(new Unit(25242, 4864, "GreyWolf", false, "Ril"));
                    ArtificialIntelligenceAccess.push(new Unit(25125, 4664, "GreyWolf", false, "Calila"));
                    ArtificialIntelligenceAccess.push(new Unit(25442, 4514, "GreyWolf", false, "Dorla"));
                    ArtificialIntelligenceAccess.push(new Unit(25242, 4680, "GreyWolf", false, "Rulthil"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(25345, 4765, "Nog", true, "Ips"));
                    ArtificialIntelligenceAccess.push(new Unit(25042, 4750, "Nog", true, "Squeak"));
                    ArtificialIntelligenceAccess.push(new Unit(25242, 4864, "Nog", false, "Chillar"));
                    ArtificialIntelligenceAccess.push(new Unit(25125, 4664, "Nog", false, "Grito"));
                    ArtificialIntelligenceAccess.push(new Unit(25442, 4514, "Nog", false, "Cron"));
                    ArtificialIntelligenceAccess.push(new Unit(25242, 4680, "Nog", true, "Buth"));
                }

                //Rocky Rock Monsters of the Rocky Rock West
                ArtificialIntelligenceAccess.push(new Unit(21240, -1705, "StoneGolem", "giant", "Gorundarumn the Trembler"));
                ArtificialIntelligenceAccess.push(new Unit(24850, 156, "StoneGolem", true, "Tormukk the Rock"));
                ArtificialIntelligenceAccess.push(new Unit(24153, 1123, "StoneGolem", false, "Ilif the Tremor"));
                ArtificialIntelligenceAccess.push(new Unit(25750, 960, "StoneGolem", "baby", "Tilf the Pebble-Tosser"));
                ArtificialIntelligenceAccess.push(new Unit(24600, 1656, "StoneGolem", "baby", "Galt the Shale-Pincher"));

                //Ores
                scenicList.push(new Scenery("jvostran", 20116 , -740, -1, 0.5, 1));
                scenicList.push(new Scenery("darkStone", 23174 , 4056, -1, 1, 1));
                scenicList.push(new Scenery("darkStone", 21245 , 944, 2, 1.5, 2));
                scenicList.push(new Scenery("darkStone", 25711 , 2496, 3, 2.5, 1));
                scenicList.push(new Scenery("darkStone", 23795 , 1029, 0, 1.5, 3));
                scenicList.push(new Scenery("darkStone", 23902 , 5830, 5.5555, 1, 2));
                scenicList.push(new Scenery("ashStone", 19759 , 1744, -9.5, 2, 2));
                scenicList.push(new Scenery("ashStone", 21270 , 4218, -0.6, 1, 3));
                scenicList.push(new Scenery("ashStone", 19616 , 2958, 0.5, 1, 2));
                scenicList.push(new Scenery("ashStone", 21847 , -2560, 10, 1.5, 2));
                scenicList.push(new Scenery("ashStone", 26080 ,5164, 11, 1, 1));
                scenicList.push(new Scenery("ashStone", 26363 ,3601, -13, 0.5, 1));
                scenicList.push(new Scenery("stone", 18302 , 5943, 19, 0.5, 1));
                scenicList.push(new Scenery("stone", 25388 , 584, 0, 1, 3));
                scenicList.push(new Scenery("stone", 22281 , 2813, 2.2, 1.5, 1));
                scenicList.push(new Scenery("stone", 20875 , 2548, -5, 2, 2));
                scenicList.push(new Scenery("stone", 20971 , 5504, -6.8, 3, 3));
                scenicList.push(new Scenery("stone", 25986 , 2148, 8, 0.5, 1));
                scenicList.push(new Scenery("stone", 23351 , -186, 0, 1, 1));
                scenicList.push(new Scenery("stone", 25089 , 2613, 0.1, 1, 2));
                scenicList.push(new Scenery("stone", 21803 , 5103, -4, 1, 1));
                scenicList.push(new Scenery("stone", 24354 , 3504, -2.45, 2, 1));
                scenicList.push(new Scenery("stone", 25850, 960, 2.45, 1.5, 3));
                scenicList.push(new Scenery("stone", 18215, 3084, 3.5, 3.5, 3));
                scenicList.push(new Scenery("stone", 18826 , -1000, 0, 2, 2));

                //Plants
                scenicList.push(new Scenery("haeflowerPlant", 18910, -1741, -3, true));
                scenicList.push(new Scenery("haeflowerPlant", 23376, 2139, -1.5, true));
                scenicList.push(new Scenery("haeflowerPlant", 23197, -1731, 0.7, true));

                change = "w2";
            }
        }
        else if (region == "w3")
        {
            if (change != "w3")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                //High-Hill Howlers
                ArtificialIntelligenceAccess.push(new Unit(32553, 15, "GreyWolf", false, "Clowder"));
                ArtificialIntelligenceAccess.push(new Unit(33567, 622, "GreyWolf", true, "Chauwder"));
                ArtificialIntelligenceAccess.push(new Unit(32909, 678, "GreyWolf", false, "Choudah"));
                ArtificialIntelligenceAccess.push(new Unit(33142, 71, "GreyWolf", false, "Choular"));
                ArtificialIntelligenceAccess.push(new Unit(33060, -334, "GreyWolf", false, "Chorg"));
                ArtificialIntelligenceAccess.push(new Unit(33754, 5, "GreyWolf", false, "Chalgra"));
                ArtificialIntelligenceAccess.push(new Unit(34112, 351, "GreyWolf", false, "Choumol"));
                ArtificialIntelligenceAccess.push(new Unit(34191, 887, "GreyWolf", false, "Choukama"));
                ArtificialIntelligenceAccess.push(new Unit(33368, 1060, "GreyWolf", false, "Chowck"));

                //Nogs (a dumb variety of goblins)
                ArtificialIntelligenceAccess.push(new Unit(28495, 6199, "Nog", false, "Backle-Snarp"));
                ArtificialIntelligenceAccess.push(new Unit(29622, 2479, "Nog", true, "Boogle-Snirp"));
                ArtificialIntelligenceAccess.push(new Unit(29654, 2389, "Nog", false, "Boggle-Snurp"));
                ArtificialIntelligenceAccess.push(new Unit(28493, 2492, "Nog", false, "Boggle-Snarp"));
                ArtificialIntelligenceAccess.push(new Unit(33450, -2347, "Nog", false, "Baggle-Snirp"));
                ArtificialIntelligenceAccess.push(new Unit(33274, -2475, "Nog", false, "Biggle-Snorp"));
                ArtificialIntelligenceAccess.push(new Unit(33471, -2485, "Nog", false, "Beggle-Snerp"));
                ArtificialIntelligenceAccess.push(new Unit(33862, -3122, "Nog", true, "Buggle-Snirk"));
                ArtificialIntelligenceAccess.push(new Unit(33025, -2855, "Nog", false, "Boggle-Snark"));
                ArtificialIntelligenceAccess.push(new Unit(34923, -1777, "Nog", false, "Biggle-Snork"));
                ArtificialIntelligenceAccess.push(new Unit(36146, -2395, "Nog", true, "Riggle-Prok"));
                ArtificialIntelligenceAccess.push(new Unit(36817, -2763, "Nog", true, "Roggle-Prak"));
                ArtificialIntelligenceAccess.push(new Unit(36802, -2608, "Nog", false, "Raggle-Prik"));
                ArtificialIntelligenceAccess.push(new Unit(35716, 469, "Nog", false, "Riggly-Palk"));
                ArtificialIntelligenceAccess.push(new Unit(35472, 464, "Nog", true, "Roggly-Pilk"));
                ArtificialIntelligenceAccess.push(new Unit(27848, 1582, "Nog", true, "Reggly-Polk"));
                ArtificialIntelligenceAccess.push(new Unit(27959, -2856, "Nog", false, "Ralgy-Pik"));

                if (change != "sagesCache")
                {
                    ArtificialIntelligenceAccess.push(new Unit(36177, 1615, "Nog", false, "Shaggle-Snelk"));
                    ArtificialIntelligenceAccess.push(new Unit(35998, 1434, "Nog", false, "Chiggler-Parnik"));
                    ArtificialIntelligenceAccess.push(new Unit(36018, 1208, "Nog", true, "Rigry-Pook"));
                    ArtificialIntelligenceAccess.push(new Unit(35793, 1254, "Nog", true, "Rogly-Preik"));
                    ArtificialIntelligenceAccess.push(new Unit(35783, 1093, "Nog", false, "Raggly-Prolk"));
                    ArtificialIntelligenceAccess.push(new Unit(35964, 573, "Nog", false, "Riggly-Palk"));
                }

                //The friches of the rocky west
                ArtificialIntelligenceAccess.push(new Unit(29626, 5521, "MountainFrich", false, "Frayuk"));
                ArtificialIntelligenceAccess.push(new Unit(29760, 5431, "MountainFrich", false, "Frayak"));
                ArtificialIntelligenceAccess.push(new Unit(29427, 3797, "MountainFrich", true, "Rayak"));
                ArtificialIntelligenceAccess.push(new Unit(30527, 4339, "MountainFrich", false, "Frahak"));
                ArtificialIntelligenceAccess.push(new Unit(30725, 3323, "MountainFrich", false, "Frohak"));
                ArtificialIntelligenceAccess.push(new Unit(30823, 3246, "MountainFrich", false, "Frahok"));
                ArtificialIntelligenceAccess.push(new Unit(30707, 3061, "MountainFrich", false, "Frohok"));
                ArtificialIntelligenceAccess.push(new Unit(31458, 2838, "MountainFrich", false, "Frahook"));
                ArtificialIntelligenceAccess.push(new Unit(31555, -2489, "MountainFrich", false, "Frihaak"));
                ArtificialIntelligenceAccess.push(new Unit(29425, -2555, "MountainFrich", false, "Freehaawk"));
                ArtificialIntelligenceAccess.push(new Unit(36020, -51, "MountainFrich", false, "Freehok"));
                ArtificialIntelligenceAccess.push(new Unit(36201, -197, "MountainFrich", false, "Frilhork"));
                ArtificialIntelligenceAccess.push(new Unit(28075, 4399, "MountainFrich", true, "Harak"));
                ArtificialIntelligenceAccess.push(new Unit(27781, 3768, "MountainFrich", false, "Frilkuh"));

                //berulns in the west
                ArtificialIntelligenceAccess.push(new Unit(33469, 5517, "Beruln", true, "Galima"));

                //olkrin of the rocklands
                //ArtificialIntelligenceAccess.push(new Unit(8199, 2310, "Olkrin", false, "Efaldor"));

                //Rocky Rock Monsters of the Rocky Rock West
                ArtificialIntelligenceAccess.push(new Unit(34641, -676, "StoneGolem", "baby", "Oree"));
                ArtificialIntelligenceAccess.push(new Unit(33690, 3385, "StoneGolem", true, "Oreface"));

                //Ores
                scenicList.push(new Scenery("stone", 28299 , -2272, 4, 2, 2));
                scenicList.push(new Scenery("stone", 29689 , -1418, -2.5, 3, 3));
                scenicList.push(new Scenery("stone", 30883 , 4805, 8, 1.5, 3));
                scenicList.push(new Scenery("stone", 32429 , 5619, -11, 1.5, 3));
                scenicList.push(new Scenery("stone", 34271 , 3975, 6, 1, 1));
                scenicList.push(new Scenery("stone", 34271 , 3975, 9, 2.5, 1));
                scenicList.push(new Scenery("stone", 34000 , -2770, 5, 3, 2));
                scenicList.push(new Scenery("stone", 35121 , -3247, 3, 1, 1));
                scenicList.push(new Scenery("stone", 36696 , -2366, 0, 1.5, 3));
                scenicList.push(new Scenery("stone", 36055 , -354, 16, 3.5, 3));
                scenicList.push(new Scenery("stone", 34675 , 65, 10.5, 2.5, 2));
                scenicList.push(new Scenery("stone", 36487 , -57, -9, 1, 2));
                scenicList.push(new Scenery("stone", 36318 , -3039, 2, 2, 1));
                scenicList.push(new Scenery("darkStone", 31968 , 455, 6.5, 2.5, 2));
                scenicList.push(new Scenery("darkStone", 32435 , -1586, -1, 3, 1));
                scenicList.push(new Scenery("darkStone", 35402 , -1873, 0, 1, 3));
                scenicList.push(new Scenery("darkStone", 36397 , 5826, -5.5, 1.5, 3));
                scenicList.push(new Scenery("darkStone", 33707 , 4850, 6, 2, 2));
                scenicList.push(new Scenery("darkStone", 29058 , 40, 0, 1.5, 3));
                scenicList.push(new Scenery("darkStone", 30873 , 2846, -2.4, 1.5, 1));
                scenicList.push(new Scenery("ashStone", 35160 , 4938, -8.85, 1, 1));
                scenicList.push(new Scenery("ashStone", 29330 , 5128, 7, 2, 2));
                scenicList.push(new Scenery("ashStone", 33659 , 1792, -1, 1, 3));
                scenicList.push(new Scenery("ashStone", 32954 , -2545, -3, 1.5, 2));

                //Dungeon "Sage's Cache"
                scenicList.push(new Scenery("cave", 35742, 1359, 0, [932, 36], "sagesCache"));

                //Plants
                scenicList.push(new Scenery("haeflowerPlant", 32791, 5076, 4.444, true));

                change = "w3";
            }
        }
        else if (region == "w4")
        {
            if (change != "w4")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                //runaway wife and slave
                if (quests.spouseTrackerQuest != "complete")
                {
                    scenicList.push(new Scenery("tent", 45199.7397712692, 3197.711262295074, (0.25 * Math.PI), false));
                    if (change == "bellaEscort")
                    {
                        if (uniqueChars.bellaLDS == true)
                        {
                            var hits = 0;
                            for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                            {
                                if (ArtificialIntelligenceAccess[i].ID == "Madam Bella")
                                {
                                    hits += 1;
                                }
                            }
                            if (hits == 0)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(45286.25527856664, 3179.0236167482553, "Person", false, "Madam Bella", {race: "Thengar", faction: "loner", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.1, 0.1], 0, 0, 1.5], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 2, patrolLoop: false, route:[[45528.82632754614, 3362.0350167485813], [16132.540241610046, 2214.628209223153], [15914.23473243726, 1886.2043063687495], [12263.955191303412, 1823.9268809259627], [11649.991900788626, 2450.626211964874], [2947.9988373871365, 2424.285780812395]]}));
                            }
                        }
                        if (uniqueChars.mesekLDS == true)
                        {
                            var hits = 0;
                            for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                            {
                                if (ArtificialIntelligenceAccess[i].ID == "Mesek the Runaway")
                                {
                                    hits += 1;
                                }
                            }
                            if (hits == 0)
                            {
                                if (player.gamemode == "protagonist")
                                {
                                    ArtificialIntelligenceAccess.push(new Unit(45238.64377328323, 3101.0912884143677, "Person", false, "Bouncy Ball Salesman", {race: "Kel", faction: "loner", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 2, 1.12], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 2, patrolLoop: false, route:[[45459.54105475488, 3372.782541353318], [16079.79650130994, 2145.1599545880536], [15862.457760143232, 1906.6027086021259], [12267.554408995364, 1901.909930918241], [11618.28459583104, 2406.2367399540312], [3038.350152319535, 2446.4773318484226]]}));
                                }
                                else
                                {
                                    ArtificialIntelligenceAccess.push(new Unit(45238.64377328323, 3101.0912884143677, "Person", false, "Mesek the Runaway", {race: "Kel", faction: "loner", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 2, 1.12], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 2, patrolLoop: false, route:[[45459.54105475488, 3372.782541353318], [16079.79650130994, 2145.1599545880536], [15862.457760143232, 1906.6027086021259], [12267.554408995364, 1901.909930918241], [11618.28459583104, 2406.2367399540312], [3038.350152319535, 2446.4773318484226]]}));
                                }
                            }
                        }
                    }
                    else
                    {
                        if (uniqueChars.bellaLDS == true)
                        {
                            var hits = 0;
                            for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                            {
                                if (ArtificialIntelligenceAccess[i].ID == "Madam Bella")
                                {
                                    hits += 1;
                                }
                            }
                            if (hits == 0)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(45286.25527856664, 3179.0236167482553, "Person", false, "Madam Bella", {race: "Thengar", faction: "loner", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.1, 0.1], 0, 0, 1.5], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[45290.74559387053, 3161.9140878198677]]}));
                            }
                        }
                        if (uniqueChars.mesekLDS == true)
                        {
                            var hits = 0;
                            for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                            {
                                if (ArtificialIntelligenceAccess[i].ID == "Mesek the Runaway")
                                {
                                    hits += 1;
                                }
                            }
                            if (hits == 0)
                            {
                                if (player.gamemode == "protagonist")
                                {
                                    ArtificialIntelligenceAccess.push(new Unit(45238.64377328323, 3101.0912884143677, "Person", false, "Bouncy Ball Salesman", {race: "Kel", faction: "loner", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 2, 1.12], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[45258.58413918966, 3133.96905700862]]}));
                                }
                                else
                                {
                                    ArtificialIntelligenceAccess.push(new Unit(45238.64377328323, 3101.0912884143677, "Person", false, "Mesek the Runaway", {race: "Kel", faction: "loner", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 2, 1.12], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[45258.58413918966, 3133.96905700862]]}));
                                }
                            }
                        }
                    }
                }

                //High-Hill Howlers
                ArtificialIntelligenceAccess.push(new Unit(45825, 1195, "GreyWolf", false, "Shod"));
                ArtificialIntelligenceAccess.push(new Unit(46096, 1568, "GreyWolf", false, "Shad"));
                ArtificialIntelligenceAccess.push(new Unit(45369, 1393, "GreyWolf", false, "Sheid"));
                ArtificialIntelligenceAccess.push(new Unit(42240, -3220, "GreyWolf", false, "Shiad"));
                ArtificialIntelligenceAccess.push(new Unit(42737, -3112, "GreyWolf", false, "Shoad"));

                //Nogs (a dumb variety of goblins)
                ArtificialIntelligenceAccess.push(new Unit(45598, -3206, "Nog", true, "Snack-Pack"));
                ArtificialIntelligenceAccess.push(new Unit(45280, -3064, "Nog", true, "Meat-Sack"));
                ArtificialIntelligenceAccess.push(new Unit(45405, -3279, "Nog", false, "Fish-Purse"));
                ArtificialIntelligenceAccess.push(new Unit(47070, -2106, "Nog", true, "Slush-Guts"));
                ArtificialIntelligenceAccess.push(new Unit(46921, -2280, "Nog", false, "Garlic-Lips"));
                ArtificialIntelligenceAccess.push(new Unit(46960, -234, "Nog", false, "Tooth-Tooth"));
                ArtificialIntelligenceAccess.push(new Unit(46694, -30, "Nog", true, "Fang-Face"));
                ArtificialIntelligenceAccess.push(new Unit(46716, 6072, "Nog", false, "Fish-Feet"));
                ArtificialIntelligenceAccess.push(new Unit(46846, 5820, "Nog", true, "Fire-Back"));
                ArtificialIntelligenceAccess.push(new Unit(46508, 5872, "Nog", true, "Striker"));
                ArtificialIntelligenceAccess.push(new Unit(46695, 5496, "Nog", false, "Chub"));
                ArtificialIntelligenceAccess.push(new Unit(46027, 5536, "Nog", false, "Stub-Claw"));
                ArtificialIntelligenceAccess.push(new Unit(39693, 452, "Nog", true, "Straiuka"));
                ArtificialIntelligenceAccess.push(new Unit(38481, 308, "Nog", false, "Chulab"));
                ArtificialIntelligenceAccess.push(new Unit(38421, 474, "Nog", true, "Sudor-Iktil"));
                ArtificialIntelligenceAccess.push(new Unit(39252, 1805, "Nog", true, "Irmott"));
                ArtificialIntelligenceAccess.push(new Unit(38974, 2052, "Nog", true, "Irmaht"));
                ArtificialIntelligenceAccess.push(new Unit(38519, 2257, "Nog", false, "Irmol"));
                ArtificialIntelligenceAccess.push(new Unit(38339, 1713, "Nog", false, "Irmoc"));
                ArtificialIntelligenceAccess.push(new Unit(40478, 4228, "Nog", true, "Sudol-Iktol"));
                ArtificialIntelligenceAccess.push(new Unit(40603, 4444, "Nog", true, "Irmotol"));
                ArtificialIntelligenceAccess.push(new Unit(40732, 4107, "Nog", false, "Irmahtol"));
                ArtificialIntelligenceAccess.push(new Unit(40462, 4073, "Nog", false, "Irmolk"));
                ArtificialIntelligenceAccess.push(new Unit(40240, 4266, "Nog", false, "Irmocol"));
                ArtificialIntelligenceAccess.push(new Unit(42544, -1440, "Nog", true, "Ermotol"));
                ArtificialIntelligenceAccess.push(new Unit(42661, -1638, "Nog", false, "Ermahtol"));
                ArtificialIntelligenceAccess.push(new Unit(43303, 4189, "Nog", true, "Snock-Pusk"));
                ArtificialIntelligenceAccess.push(new Unit(40132, 3214, "Nog", false, "Erma"));

                //The friches of the rocky west
                ArtificialIntelligenceAccess.push(new Unit(44115, -1707, "MountainFrich", "massive", "Tarf"));
                ArtificialIntelligenceAccess.push(new Unit(43603, -2466, "MountainFrich", true, "Torf"));
                ArtificialIntelligenceAccess.push(new Unit(44030, -2599, "MountainFrich", true, "Tolf"));
                ArtificialIntelligenceAccess.push(new Unit(45168, -1332, "MountainFrich", false, "Rifre"));
                ArtificialIntelligenceAccess.push(new Unit(46422, -1618, "MountainFrich", false, "Rifral"));
                ArtificialIntelligenceAccess.push(new Unit(46713, -2907, "MountainFrich", false, "Rifalt"));
                ArtificialIntelligenceAccess.push(new Unit(46876, -3073, "MountainFrich", false, "Riferel"));
                ArtificialIntelligenceAccess.push(new Unit(46466, -3154, "MountainFrich", true, "Tulfre"));
                ArtificialIntelligenceAccess.push(new Unit(45047, 2478, "MountainFrich", false, "Refolkot"));
                ArtificialIntelligenceAccess.push(new Unit(38464, 5368, "MountainFrich", false, "Refalt"));
                ArtificialIntelligenceAccess.push(new Unit(39219, 5891, "MountainFrich", true, "Refolt"));
                ArtificialIntelligenceAccess.push(new Unit(40131, 5537, "MountainFrich", false, "Hefolyot"));
                ArtificialIntelligenceAccess.push(new Unit(40433, 5385, "MountainFrich", false, "Hefalt"));
                ArtificialIntelligenceAccess.push(new Unit(42448, 2658, "MountainFrich", true, "Talforch"));
                ArtificialIntelligenceAccess.push(new Unit(42050, 740, "MountainFrich", true, "Hefolt"));
                ArtificialIntelligenceAccess.push(new Unit(41658, 524, "MountainFrich", false, "Tefolyot"));
                ArtificialIntelligenceAccess.push(new Unit(41889, 340, "MountainFrich", false, "Tefalt"));
                ArtificialIntelligenceAccess.push(new Unit(41470, -161, "MountainFrich", "massive", "Halforch"));
                ArtificialIntelligenceAccess.push(new Unit(42677, -2294, "MountainFrich", true, "Fesh"));

                //berulns in the west
                ArtificialIntelligenceAccess.push(new Unit(39983, -1944, "Beruln", false, "Jolrovitar"));

                //olkrin of the rocklands
                if (Math.random() >= 0.75)
                {
                    ArtificialIntelligenceAccess.push(new Unit(44406, 4212, "Olkrin", "baby", "Vekomdor"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(44748, 3976, "MountainFrich", true, "Tolfet"));
                    ArtificialIntelligenceAccess.push(new Unit(44406, 4212, "MountainFrich", false, "Rifelt"));
                    ArtificialIntelligenceAccess.push(new Unit(45392, 4439, "MountainFrich", false, "Refalsha"));
                }

                //Rocky Rock Monsters of the Rocky Rock West
                ArtificialIntelligenceAccess.push(new Unit(46754, 674, "StoneGolem", false, "Stonorone"));
                ArtificialIntelligenceAccess.push(new Unit(38982, 5303, "StoneGolem", false, "Stonoral"));
                ArtificialIntelligenceAccess.push(new Unit(43421, 1623, "StoneGolem", "baby", "Rockabye"));
                ArtificialIntelligenceAccess.push(new Unit(41326, -694, "StoneGolem", "baby", "Daymorning"));

                //Ores
                scenicList.push(new Scenery("darkStone", 38321 , 547, -6, 4, 2));
                scenicList.push(new Scenery("darkStone", 39063 , 1828, -2.3, 1, 2));
                scenicList.push(new Scenery("darkStone", 38337 , 4002, 3, 0.5, 3));
                scenicList.push(new Scenery("ashStone", 39388 , 5656, 4.444, 2.5, 2));
                scenicList.push(new Scenery("ashStone", 41856 , -1828, 256, 4.5, 3));
                scenicList.push(new Scenery("ashStone", 46942 , 1687, 81, 2, 1));
                scenicList.push(new Scenery("stone", 45819 , -202, 0.12, 3.5, 2));
                scenicList.push(new Scenery("stone", 46845 , 109, 6.94, 1, 2));
                scenicList.push(new Scenery("darkStone", 44399 , 6080, -4, 1.5, 1));
                scenicList.push(new Scenery("stone", 45066 , 4470, -9, 2, 3));
                scenicList.push(new Scenery("darkStone", 45931 , 3824, 1, 1, 2));
                scenicList.push(new Scenery("ashStone", 45004 , 2121, -64, 1, 1));
                scenicList.push(new Scenery("ashStone", 43858 , -246, -1, 3.5, 2));
                scenicList.push(new Scenery("darkStone", 45508 , -931, 6.4, 0.5, 1));
                scenicList.push(new Scenery("stone", 45964 , -3051, -2.58, 1, 3));
                scenicList.push(new Scenery("stone", 45001 , -3283, 3.4, 0.5, 1));
                scenicList.push(new Scenery("darkStone", 44707 , -1258, 5, 2.5, 1));
                scenicList.push(new Scenery("ashStone", 43109 , -2053, -1, 1.5, 3));
                scenicList.push(new Scenery("stone", 41280 , -12, 7.1, 5, 2));
                scenicList.push(new Scenery("stone", 39228 , -1406, -5.678, 2.5, 1));
                scenicList.push(new Scenery("ashStone", 40293 , -2519, -12, 1, 2));
                scenicList.push(new Scenery("darkStone", 42681 , -3009, 5.5, 2, 1));
                scenicList.push(new Scenery("stone", 39056 , -2866, 6.8765, 1.5, 3));
                scenicList.push(new Scenery("stone", 42287 , 158, 6.3, 1, 2));
                scenicList.push(new Scenery("stone", 43160 , 4543, -3.9, 3, 3));
                scenicList.push(new Scenery("darkStone", 44331 , 3410, 4.5, 1.5, 2));
                scenicList.push(new Scenery("ashStone", 40807 , 1118, -2.4, 3.5, 1));
                scenicList.push(new Scenery("stone", 40277 , 4435, 3.82, 2, 3));

                //Plants
                scenicList.push(new Scenery("haeflowerPlant", 44702, 4124, 6.9, true));
                scenicList.push(new Scenery("haeflowerPlant", 42415, -2151, -9.6, true));

                change = "w4";
            }
        }
        else if (region == "s1w4")
        {
            if (change != "s1w4")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                //High-Hill Howlers
                ArtificialIntelligenceAccess.push(new Unit(38399, -3875, "GreyWolf", false, "Clemont"));
                ArtificialIntelligenceAccess.push(new Unit(37876, -4052, "GreyWolf", false, "Ceymorr"));
                ArtificialIntelligenceAccess.push(new Unit(38204, -4154, "GreyWolf", false, "Claya"));
                ArtificialIntelligenceAccess.push(new Unit(38683, -4113, "GreyWolf", false, "Trebol"));
                ArtificialIntelligenceAccess.push(new Unit(37971, -3727, "GreyWolf", false, "Clover"));

                //Nogs (a dumb variety of goblins)
                ArtificialIntelligenceAccess.push(new Unit(46843, -12924, "Nog", false, "Chum-Bucket"));
                ArtificialIntelligenceAccess.push(new Unit(47085, -12290, "Nog", true, "Romp-Cleener"));
                ArtificialIntelligenceAccess.push(new Unit(46884, -12438, "Nog", false, "Twat-Sizzler"));
                ArtificialIntelligenceAccess.push(new Unit(44569, -10942, "Nog", false, "Cully-Licker"));
                ArtificialIntelligenceAccess.push(new Unit(45575, -8040, "Nog", true, "Cereal-Muncher"));
                ArtificialIntelligenceAccess.push(new Unit(45756, -8168, "Nog", false, "Grain-Cruncher"));
                ArtificialIntelligenceAccess.push(new Unit(46395, -8029, "Nog", false, "Wheat-Licker"));
                ArtificialIntelligenceAccess.push(new Unit(46765, -8589, "Nog", true, "Grass-Cleaner"));
                ArtificialIntelligenceAccess.push(new Unit(44707, -7086, "Nog", true, "Tunc-Rekcuf"));
                ArtificialIntelligenceAccess.push(new Unit(44230, -7312, "Nog", true, "Rimp-Dipper"));
                ArtificialIntelligenceAccess.push(new Unit(44329, -7133, "Nog", false, "Tweet-Salter"));
                ArtificialIntelligenceAccess.push(new Unit(46795, -4773, "Nog", false, "Twat-Warmer"));
                ArtificialIntelligenceAccess.push(new Unit(46490, -5219, "Nog", false, "Romp-Filler"));
                ArtificialIntelligenceAccess.push(new Unit(46681, -5350, "Nog", true, "Twat-Stuffer"));
                ArtificialIntelligenceAccess.push(new Unit(44447, -4859, "Nog", true, "Tweed-Bearer"));
                ArtificialIntelligenceAccess.push(new Unit(41668, -7617, "Nog", false, "Tweed-Warmer"));
                ArtificialIntelligenceAccess.push(new Unit(42516, -7522, "Nog", false, "Romp-Brimmer"));
                ArtificialIntelligenceAccess.push(new Unit(42278, -7694, "Nog", true, "Twat-Packer"));
                ArtificialIntelligenceAccess.push(new Unit(42244, -7451, "Nog", true, "Tweed-Swallower"));
                ArtificialIntelligenceAccess.push(new Unit(45986, -6971, "Nog", false, "Tweet-Moistener"));
                ArtificialIntelligenceAccess.push(new Unit(45666, -7115, "Nog", false, "Rimp-Lancer"));
                ArtificialIntelligenceAccess.push(new Unit(46158, -7492, "Nog", false, "Barely-Grinder"));
                ArtificialIntelligenceAccess.push(new Unit(42316, -8535, "Nog", true, "Twat-Pricker"));
                ArtificialIntelligenceAccess.push(new Unit(42181, -8574, "Nog", false, "Tweed-Spinner"));
                ArtificialIntelligenceAccess.push(new Unit(41777, -8107, "Nog", false, "Tweed-Moistener"));
                ArtificialIntelligenceAccess.push(new Unit(41590, -8155, "Nog", false, "Rimp-Stabber"));
                ArtificialIntelligenceAccess.push(new Unit(41959, -8359, "Nog", true, "Corn-Sucker"));
                ArtificialIntelligenceAccess.push(new Unit(41185, -8796, "Nog", false, "Penny-Pincher"));
                ArtificialIntelligenceAccess.push(new Unit(45425, -9448, "Nog", true, "Dime-Harvester"));
                ArtificialIntelligenceAccess.push(new Unit(45587, -9617, "Nog", false, "Nickel-Grabber"));
                ArtificialIntelligenceAccess.push(new Unit(46685, -9490, "Nog", false, "Dollar-Spitter"));
                ArtificialIntelligenceAccess.push(new Unit(46008, -8984, "Nog", true, "Quarter-Biter"));

                //The friches of the rocky west
                ArtificialIntelligenceAccess.push(new Unit(43718, -12504, "MountainFrich", true, "Fruku"));
                ArtificialIntelligenceAccess.push(new Unit(43948, -12407, "MountainFrich", false, "Frokol"));
                ArtificialIntelligenceAccess.push(new Unit(42732, -4699, "MountainFrich", false, "Frakol"));
                ArtificialIntelligenceAccess.push(new Unit(42950, -4429, "MountainFrich", false, "Frakal"));
                ArtificialIntelligenceAccess.push(new Unit(43024, -4554, "MountainFrich", false, "Frukal"));
                ArtificialIntelligenceAccess.push(new Unit(38809, -6798, "MountainFrich", true, "Frakil"));
                ArtificialIntelligenceAccess.push(new Unit(40031, -6850, "MountainFrich", false, "Frikil"));
                ArtificialIntelligenceAccess.push(new Unit(39591, -7371, "MountainFrich", "massive", "Frikol"));
                ArtificialIntelligenceAccess.push(new Unit(42444, -9932, "MountainFrich", false, "Frykol"));
                ArtificialIntelligenceAccess.push(new Unit(42832, -9729, "MountainFrich", false, "Frakyl"));
                ArtificialIntelligenceAccess.push(new Unit(43023, -9993, "MountainFrich", false, "Frykal"));
                ArtificialIntelligenceAccess.push(new Unit(44047, -9779, "MountainFrich", false, "Frukyl"));
                ArtificialIntelligenceAccess.push(new Unit(40584, -10222, "MountainFrich", true, "Frykil"));
                ArtificialIntelligenceAccess.push(new Unit(45810, -10448, "MountainFrich", false, "Frouhyl"));

                //berulns in the west
                var rnd = Math.random();
                if (rnd >= 0.7)
                {
                    ArtificialIntelligenceAccess.push(new Unit(38628, -12634, "Beruln", false, "Hulet"));
                    ArtificialIntelligenceAccess.push(new Unit(39478, -13120, "Beruln", true, "Thadolge"));
                }
                else if (rnd >= 0.4)
                {
                    ArtificialIntelligenceAccess.push(new Unit(39478, -13120, "Beruln", true, "Thadolge"));
                }
                else if (rnd >= 0.1)
                {
                    ArtificialIntelligenceAccess.push(new Unit(38628, -12634, "Beruln", false, "Hulet"));
                }
                else
                {
                    //olkrin of the rocklands
                    if (change == "s1w5")
                    {
                        ArtificialIntelligenceAccess.push(new Unit(38628, -12634, "Olkrin", false, "Vanaandunm Bringer of Wickedness"));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(38628, -12634, "Olkrin", "baby", "The Wicked Offspring"));
                        ArtificialIntelligenceAccess.push(new Unit(39478, -13120, "Olkrin", "baby", "The Wicked Offspring"));
                    }
                }

                //Rocky Rock Monsters of the Rocky Rock West
                ArtificialIntelligenceAccess.push(new Unit(41972, -11595, "StoneGolem", true, "Oregol"));
                ArtificialIntelligenceAccess.push(new Unit(38660, -8546, "StoneGolem", false, "Leregol"));
                ArtificialIntelligenceAccess.push(new Unit(41570, -8290, "StoneGolem", "baby", "Regol"));
                ArtificialIntelligenceAccess.push(new Unit(43411, -9501, "StoneGolem", true, "Oregun"));
                ArtificialIntelligenceAccess.push(new Unit(45576, -10997, "StoneGolem", false, "Leregun"));
                ArtificialIntelligenceAccess.push(new Unit(38628, -13302, "StoneGolem", "baby", "Lere"));
                ArtificialIntelligenceAccess.push(new Unit(44488, -10113, "StoneGolem", "baby", "Regun"));

                //Ores
                scenicList.push(new Scenery("darkStone", 39548 , -6850, -13, 1.5, 2));
                scenicList.push(new Scenery("darkStone", 41692 , -8319, 10, 3.5, 1));
                scenicList.push(new Scenery("darkStone", 41514 , -12957, -19, 2, 2));
                scenicList.push(new Scenery("darkStone", 38453 , -13492, 49, 0.5, 3));
                scenicList.push(new Scenery("darkStone", 38342 , -8908, -49, 1, 3));
                scenicList.push(new Scenery("darkStone", 42437 , -11004, 14, 1.5, 3));
                scenicList.push(new Scenery("darkStone", 44035 , -6652, -22.7, 2.5, 3));
                scenicList.push(new Scenery("darkStone", 46249 , -6350, 22.1, 1, 1));
                scenicList.push(new Scenery("darkStone", 46183 , -10802, -0.5, 1.5, 2));
                scenicList.push(new Scenery("ashStone", 38457 , -3905, -4.45, 1, 2));
                scenicList.push(new Scenery("ashStone", 38828 , -5130, 4.45, 2, 3));
                scenicList.push(new Scenery("ashStone", 40664 , -7623, 3, 0.5, 2));
                scenicList.push(new Scenery("ashStone", 40762 , -7868, 15, 1.5, 3));
                scenicList.push(new Scenery("ashStone", 40935 , -7673, 5, 1, 1));
                scenicList.push(new Scenery("ashStone", 40474 , -13042, -6, 1.5, 1));
                scenicList.push(new Scenery("ashStone", 40557 , -9488, -666, 3.5, 1));
                scenicList.push(new Scenery("ashStone", 41646 , -4739, 67.4, 2, 2));
                scenicList.push(new Scenery("ashStone", 44982 , -7118, 444.4, 3, 2));
                scenicList.push(new Scenery("ashStone", 45249 , -9199, 44.44, 4, 2));
                scenicList.push(new Scenery("ashStone", 43598 , -11824, 4444, 1, 3));
                scenicList.push(new Scenery("ashStone", 46726 , -10033, 0.4444, 1, 1));
                scenicList.push(new Scenery("ashStone", 42801 , -11081, -1.4444, 1, 2));
                scenicList.push(new Scenery("ashStone", 46639 , -4702, 2.4446, 0.5, 1));
                scenicList.push(new Scenery("stone", 38418 , -5354, 35, 0.5, 1));
                scenicList.push(new Scenery("stone", 38928 , -8059, 25, 1, 3));
                scenicList.push(new Scenery("stone", 40774 , -8938, 15, 2, 3));
                scenicList.push(new Scenery("stone", 44313 , -10834, 5, 4, 3));
                scenicList.push(new Scenery("stone", 42456 , -12014, -5, 0.5, 3));
                scenicList.push(new Scenery("stone", 38507 , -12978, -28, 2.5, 2));
                scenicList.push(new Scenery("stone", 39250 , -10382, -36.2, 1, 1));
                scenicList.push(new Scenery("stone", 43210 , -3914, 45.45454545, 1.5, 1));
                scenicList.push(new Scenery("stone", 44989 , -5485, 0, 1, 1));
                scenicList.push(new Scenery("stone", 47044 , -4392, 0, 0.5, 3));
                scenicList.push(new Scenery("stone", 41317 , -11133, 36.363636, 1.5, 3));

                //Plants
                scenicList.push(new Scenery("haeflowerPlant", 39374, -12147, Math.PI, true));

                change = "s1w4";
            }
        }
        else if (region == "s1w5")
        {
            if (change != "s1w5")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee || ArtificialIntelligenceAccess[i].team == "arena1" || ArtificialIntelligenceAccess[i].team == "arena2" || ArtificialIntelligenceAccess[i].team == "arena3")
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //characters
                //unique AND non-unique only by necessity
                if (uniqueChars.bameyLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Bamey the Huntsman")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(51563, -9805, "Person", false, "Bamey the Huntsman", {race: "Thengar", faction: "Thengar", personality: "violent", outfit: ["boulchomLeatherArmour", 1.5], weapon: ["longbow", [0.2, 0.25], 0, 1, 1.1], ranged: [true, "arrow", 8, 2200, 5, 7, 0, "none", 2], patrolStops: 0, patrolLoop: true, route:[[2049, 1021], [1943, 1127], [1690, 1021]], merchant: true, merchandise: [[new Item("coins", false, false), 36], [new Item("longbow", false, false), 3], [new Item("arrow", false, false), 160], [new Item("steelArrow", false, false), 80], [new Item("beartrap", false, false), 4], [new Item("clawtrap", false, false), 3], [new Item("jacks", false, false), 39], [new Item("spindletrap", false, false), 1]]}));
                        ArtificialIntelligenceAccess[i].health = 37;
                    }
                }

                if (uniqueChars.bruneldaLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Brunelda the Merchant")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(50986, -9534, "Person", false, "Brunelda the Merchant", {race: "Thengar", faction: "Thengar", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 1.3], ranged: [false, "arrow", 8, 2200, 5, 7, 0, "none", 2], patrolStops: 0, patrolLoop: true, route:[[2049, 1021], [1943, 1127], [1690, 1021]], merchant: true, merchandise: [[new Item("coins", false, false), 65], [new Item("skolPelt", false, false), 3], [new Item("mountainFrichPelt", false, false), 1], [new Item("boulchomPelt", false, false), 2], [new Item("wood", false, false), 5], [new Item("fireStarter", false, false), 2], [new Item("jarOfOil", false, false), 2], [new Item("oilLampEmpty", false, false), 2], [new Item("bucket", false, false), 3], [new Item("tent", false, false), 1], [new Item("hammer", false, false), 2], [new Item("pickaxe", false, false), 4], [new Item("timberAxe", false, false), 1], [new Item("harstGrain", false, false), 18]]}));
                        ArtificialIntelligenceAccess[i].health = 4;
                    }
                }

                if (uniqueChars.gerlachLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Gerlach the Butcher")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(51564, -9414, "Person", false, "Gerlach the Butcher", {race: "Thengar", faction: "Thengar", personality: "violent", outfit: ["none", 0], weapon: ["meatCleaver", [1, 2], 1, 11, 1.7], ranged: [false, "arrow", 8, 2200, 5, 7, 0, "none", 2], patrolStops: 0, patrolLoop: true, route:[[2049, 1021], [1943, 1127], [1690, 1021]], merchant: true, merchandise: [[new Item("coins", false, false), 43], [new Item("rawBearFlesh", false, false), 4], [new Item("rawBearTongue", false, false), 1], [new Item("rawRabbitFlesh", false, false), 7], [new Item("rawBoulchomFlesh", false, false), 3], [new Item("rawHoffalgreFlesh", false, false), 6]]}));
                        ArtificialIntelligenceAccess[i].health = 8;
                    }
                }

                if (uniqueChars.johannaLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Johanna the Herbalist")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(51560, -8907, "Person", false, "Johanna the Herbalist", {race: "Thengar", faction: "Thengar", personality: "scared", outfit: ["hoffalgreFurCloak", 0], weapon: ["none", [0.3, 0.25], 0, 0, 1.4], ranged: [false, "arrow", 8, 2200, 5, 7, 0, "none", 2], patrolStops: 0, patrolLoop: true, route:[[2049, 1021], [1943, 1127], [1690, 1021]], merchant: true, merchandise: [[new Item("coins", false, false), 50], [new Item("hydroraSalve", false, false), 2], [new Item("culprisBandage", false, false), 4], [new Item("kofkeLeaves", false, false), 6], [new Item("steugiurneFlower", false, false), 2], [new Item("thalisLeaf", false, false), 4], [new Item("viperSnakeSkin", false, false), 2], [new Item("lizardTail", false, false), 7], [new Item("glassJar", false, false), 6], [new Item("potionGlass", false, false), 5]]}));
                        ArtificialIntelligenceAccess[i].health = 3;
                    }
                }

                if (uniqueChars.lenaLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Lena")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(51485, -8809, "Person", false, "Lena", {race: "Thengar", faction: "Thengar", personality: "scared", outfit: ["hoffalgreFurCloak", 0], weapon: ["none", [0.03, 0.025], 0, 0, 1], ranged: [false, "arrow", 8, 2200, 5, 7, 0, "none", 2], patrolStops: 0, patrolLoop: true, route:[[2049, 1021], [1943, 1127], [1690, 1021]], kid: true}));
                        ArtificialIntelligenceAccess[i].health = 1;
                    }
                }

                if (uniqueChars.axelLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Axel")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(52794, -6236, "Person", false, "Axel", {race: "Thengar", faction: "Thengar", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.03, 0.025], 0, 0, 1], ranged: [false, "arrow", 8, 2200, 5, 7, 0, "none", 2], patrolStops: 0, patrolLoop: true, route:[[2049, 1021], [1943, 1127], [1690, 1021]]}));
                        ArtificialIntelligenceAccess[i].health = 7;
                    }
                }

                if (uniqueChars.lambertLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Lambert")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(52735, -6741, "Person", false, "Lambert", {race: "Thengar", faction: "Thengar", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.025, 0.025], 0, 0, 1], ranged: [false, "arrow", 8, 2200, 5, 7, 0, "none", 2], patrolStops: 1, patrolLoop: false, route:[[52742, -6717]]}));
                        ArtificialIntelligenceAccess[i].health = 4;
                    }
                }

                if (quests.lethikHanzRestored == false)
                {
                    if (uniqueChars.hanzLDS == true)
                    {
                        var hits = 0;
                        for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                        {
                            if (ArtificialIntelligenceAccess[i].ID == "Hanz")
                            {
                                hits += 1;
                            }
                        }
                        if (hits == 0)
                        {
                            if (player.gamemode == "protagonist")
                            {
                                ArtificialIntelligenceAccess.push(new Unit(50667, -10366, "Person", false, "Hanzelopsinopolis the III", {race: "Thengar", faction: "Thengar", personality: "calculated", outfit: ["none", 0], weapon: ["none", [100, 100], 100, 0, 0.3], ranged: [false, "arrow", 8, 2200, 5, 7, 0, "none", 2], patrolStops: 1, patrolLoop: false, route:[[50686, -10368]]}));
                                ArtificialIntelligenceAccess[i].health = 80;
                                ArtificialIntelligenceAccess[i].healthMAX = 80;
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(50667, -10366, "Person", false, "Hanz", {race: "Thengar", faction: "Thengar", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.03, 0.03], 0, 0, 1], ranged: [false, "arrow", 8, 2200, 5, 7, 0, "none", 2], patrolStops: 1, patrolLoop: false, route:[[50686, -10368]]}));
                                ArtificialIntelligenceAccess[i].health = 8;
                                ArtificialIntelligenceAccess[i].healthMAX = 8;
                            }
                        }
                    }
                }

                if (uniqueChars.conradLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Conrad")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(52152, -7228, "Person", false, "Conrad", {race: "Thengar", faction: "Thengar", personality: "calculated", outfit: ["hoffalgreFurCloak", 0], weapon: ["none", [0.04, 0.04], 0, 2, 1.3], ranged: [false, "arrow", 8, 2200, 5, 7, 0, "none", 2], patrolStops: 1, patrolLoop: false, route:[[52154, -7203]]}));
                        ArtificialIntelligenceAccess[i].health = 16;
                        ArtificialIntelligenceAccess[i].speed = 0.5;
                    }
                }

                if (uniqueChars.lenardLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Lenard")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(52765, -7202, "Person", false, "Lenard", {race: "Thengar", faction: "Thengar", personality: "violent", outfit: ["none", 0], weapon: ["none", [0.045, 0.035], 0, 3, 1.1], ranged: [false, "arrow", 8, 2200, 5, 7, 0, "none", 2], patrolStops: 1, patrolLoop: false, route:[[52764, -7190]]}));
                        ArtificialIntelligenceAccess[i].health = 12;
                    }
                }

                if (uniqueChars.vsevolodLDS == true && quests.theSecretOfTheSagesCacheQuest == false)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Vsevolod")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(50419, -10510, "Soldier", false, "Vsevolod", {race: "Vardan", faction: "loner", con: 7, speed: 1.2, outfit: ["blackMageRobe", 0], weapon: ["drainingI", [9, 4], 0, 200, 3], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, CNX: 200, MR: 19, patrolStops: 1, patrolLoop: false, route:[[50405, -10488]]}));
                    }
                }

                if (uniqueChars.hildegardLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Hildegard")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(51616, -7327, "Person", false, "Hildegard", {race: "Thengar", faction: "Thengar", personality: "scared", outfit: ["hoffalgreFurCloak", 0], weapon: ["none", [0.03, 0.025], 0, 0, 1], ranged: [false, "arrow", 8, 2200, 5, 7, 0, "none", 2], patrolStops: 0, patrolLoop: true, route:[[2049, 1021], [1943, 1127], [1690, 1021]]}));
                        ArtificialIntelligenceAccess[i].health = 1;
                    }
                }

                if (uniqueChars.cherylLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Cheryl the Tailor")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(51263, -9776, "Person", false, "Cheryl the Tailor", {race: "Thengar", faction: "Thengar", personality: "calculated", outfit: ["hoffalgreFurCloak", 0], weapon: ["none", [0.25, 0.25], 0, 1, 1.25], ranged: [false, "arrow", 8, 2200, 5, 7, 0, "none", 2], patrolStops: 0, patrolLoop: true, route:[[2049, 1021], [1943, 1127], [1690, 1021]], merchant: true, merchandise: [[new Item("coins", false, false), 29], [new Item("boulchomLeatherArmour", false, false), 2], [new Item("boulchomLeatherBoots", false, false), 2], [new Item("boulchomLeatherGloves", false, false), 3], [new Item("blackBearFurClothing", false, false), 2], [new Item("blackBearLeatherArmour", false, false), 1], [new Item("hoffalgreFurCloak", false, false), 8]]}));
                        ArtificialIntelligenceAccess[i].health = 3;
                    }
                }

                if (uniqueChars.cherylChildLDS == true && quests.cherylChild)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "[ " + quests.cherylChildName + " ]")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(51325, -9860, "Person", false, "[ " + quests.cherylChildName + " ]", {race: player.raceName, faction: "Thengar", personality: "violent", outfit: ["hoffalgreFurCloak", 0], weapon: ["none", [0.25, 0.25], 0, 0, 1.3], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[51325, -9860]], kid: true}));
                        ArtificialIntelligenceAccess[i].health = 1;
                    }
                }

                if (uniqueChars.adolfLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Adolf the Pit Fighter")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        if (quests.swordDeliveryQuest == "complete")
                        {
                            if (quests.swordDeliveryFight)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51493, -8252, "Soldier", false, "Adolf the Pit Fighter", {race: "Thengar", faction: "arena1", con: 10, speed: 1.45, outfit: ["skolLeatherArmour", 3], weapon: ["longsword", [9, 4], 0, 16, 1.4], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, patrolStops: 0, patrolLoop: true, route:[[-514, 277], [-514, 277]]}));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51645, -8388, "Soldier", false, "Adolf the Pit Fighter", {race: "Thengar", faction: "Thengar", con: 10, speed: 1.45, outfit: ["skolLeatherArmour", 3], weapon: ["longsword", [9, 4], 0, 16, 1.4], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, patrolStops: 0, patrolLoop: true, route:[[-514, 277], [-514, 277]]}));
                            }
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51645, -8388, "Soldier", false, "Adolf the Pit Fighter", {race: "Thengar", faction: "Thengar", con: 10, speed: 1.45, outfit: ["skolLeatherArmour", 3], weapon: ["none", [0.5, 0.6], 0, 1, 0.9], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, patrolStops: 0, patrolLoop: true, route:[[-514, 277], [-514, 277]]}));
                        }
                    }
                }

                if (uniqueChars.markosLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Markos the Pit Master")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(50858, -8123, "Soldier", false, "Markos the Pit Master", {race: "Thengar", faction: "Thengar", con: 22, speed: 0.85, outfit: ["thenganPlateArmour", 19], weapon: ["flail", [26, 10], 14, 63, 3.6], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, patrolStops: 0, patrolLoop: true, route:[[-514, 277], [-514, 277]]}));
                    }
                }

                if (uniqueChars.rutgarLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Rutgar the Warden")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(53108, -6704, "Soldier", false, "Rutgar the Warden", {race: "Thengar", faction: "Thengar", con: 19, speed: 0.74, outfit: ["thenganPlateArmour", 14], weapon: ["longsword", [12, 8], 0, 16, 1.25], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, patrolStops: 0, patrolLoop: true, route:[[-514, 277], [-514, 277]]}));
                    }
                }

                if (uniqueChars.friedrichLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Beulingerr Commander Friedrich")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(51236, -7402, "Soldier", false, "Beulingerr Commander Friedrich", {race: "Thengar", faction: "Thengar", con: 26, speed: 0.88, outfit: ["thenganPlateArmour", 22], weapon: ["thenganWarhammer", [30, 20], 20, 48, 5.75], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, patrolStops: 0, patrolLoop: true, route:[[-514, 277], [-514, 277]]}));
                    }
                }

                if (uniqueChars.ederhalLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Ederhal the Innkeeper")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(50569, -10420, "Person", false, "Ederhal the Innkeeper", {race: "Thengar", faction: "Thengar", personality: "calculated", outfit: ["hoffalgreFurCloak", 0], weapon: ["none", [0.3, 0.4], 0, 1, 1.15], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[50569, -10418]], merchant: true, merchandise: [[new Item("coins", false, false), 69], [new Item("bearMeat", false, false), 3], [new Item("hoffalgreMeat", false, false), 3], [new Item("rabbitMeat", false, false), 5], [new Item("harstAle", false, false), 39], [new Item("harstBread", false, false), 1], [new Item("vel", false, false), 4]]}));
                        ArtificialIntelligenceAccess[i].health = 13;
                    }
                }

                if (uniqueChars.naokoLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Naoko the Banker")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(50957, -9176, "Person", false, "Naoko the Banker", {race: "Orgell", faction: "Thengar", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.2, 0.1], 0, 0, 1.2], ranged: [false, "arrow", 8, 2000, 1, 6, 0, "none", 0.95], patrolStops: 1, patrolLoop: false, route:[[50956, -9146]], banker: true}));
                    }
                }

                if (uniqueChars.dagmarLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Dagmar the Smith")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(51270, -9539, "Person", false, "Dagmar the Smith", {race: "Thengar", faction: "Thengar", personality: "violent", outfit: ["none", 0], weapon: ["longsword", [8, 5], 0, 16, 1.45], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[2049, 1021], [1943, 1127], [1690, 1021]], merchant: true, merchandise: [[new Item("coins", false, false), 240], [new Item("steel", false, false), 6], [new Item("iron", false, false), 4], [new Item("mace", false, false), 4], [new Item("thenganDagger", false, false), 3], [new Item("longsword", false, false), 4], [new Item("thenganSwordAndShield", false, false), 1], [new Item("longSpikedMorningStar", false, false), 2], [new Item("thenganWarhammer", false, false), 1], [new Item("flail", false, false), 1], [new Item("smashStick", false, false), 1], [new Item("thenganPlateArmour", false, false), 1], [new Item("timberAxe", false, false), 1], [new Item("pickaxe", false, false), 2]]}));
                        ArtificialIntelligenceAccess[i].health = 46;
                    }
                    ArtificialIntelligenceAccess.push(new Unit(51352, -9394, "Person", false, "Blacksmith's Apprentice", {race: "Thengar", faction: "Thengar", personality: "violent", outfit: ["none", 0], weapon: ["hammer", [2, 1.5], 3, 12, 1.35], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[1793, 314]]}));
                }
                else if (uniqueChars.lennardLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Lennard the Smith")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(51270, -9539, "Person", false, "Lennard the Smith", {race: "Thengar", faction: "Thengar", personality: "violent", outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 1, 1.1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[2049, 1021], [1943, 1127], [1690, 1021]], merchant: true, merchandise: [[new Item("coins", false, false), 60], [new Item("steel", false, false), 2], [new Item("iron", false, false), 1], [new Item("mace", false, false), 1], [new Item("thenganDagger", false, false), 1], [new Item("longsword", false, false), 1], [new Item("longSpikedMorningStar", false, false), 1], [new Item("timberAxe", false, false), 1], [new Item("pickaxe", false, false), 3]]}));
                        ArtificialIntelligenceAccess[i].health = 9;
                    }
                    ArtificialIntelligenceAccess.push(new Unit(51352, -9394, "Person", false, "Blacksmith's Apprentice", {race: "Thengar", faction: "Thengar", personality: "violent", outfit: ["none", 0], weapon: ["hammer", [2, 1.5], 3, 12, 1.35], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[1793, 314]]}));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(51270, -9539, "Person", false, "Journeyman Blacksmith", {race: "Thengar", faction: "Thengar", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.1, 0.1], 0, 1, 1.2], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[2049, 1021], [1943, 1127], [1690, 1021]], merchant: true, merchandise: [[new Item("coins", false, false), 20], [new Item("steel", false, false), 1], [new Item("iron", false, false), 1], [new Item("mace", false, false), 1], [new Item("thenganDagger", false, false), 1], [new Item("timberAxe", false, false), 1], [new Item("pickaxe", false, false), 1]]}));
                }

                //a well known thengan mercenary crew's captain.
                if (uniqueChars.kronheimeLDS == true && quests.theBalgurMercenariesQuest == false || uniqueChars.kronheimeLDS == true && quests.theBalgurMercenariesQuest == "complete")
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Mercenary Captain Kronheime")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(51243, -7210, "Soldier", false, "Mercenary Captain Kronheime", {race: "Thengar", faction: "TheBalgurMercenaries", con: 20, speed: 1.3, outfit: ["balgurCaptainArmour", 7], weapon: ["flail", [25, 7], 11, 63, 3.1], ranged: [false, "arrow", 7, 1800, 1, 6, 0, "none", 2.4], patrolStops: 0, patrolLoop: false, route:[[1654, 1507], [1661, 2311], [1864, 2315], [1852, 1499]]}));
                    }
                }
                else if (uniqueChars.kronheimeLDS == false)
                {
                    if (uniqueChars.barretLDS == true)
                    {
                        var hits = 0;
                        for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                        {
                            if (ArtificialIntelligenceAccess[i].ID == "Mercenary Captain Barret")
                            {
                                hits += 1;
                            }
                        }
                        if (hits == 0)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51243, -7210, "Soldier", false, "Mercenary Captain Barret", {race: "Thengar", faction: "TheBalgurMercenaries", con: 24, speed: 1.25, outfit: ["balgurCaptainArmour", 7], weapon: ["thenganWarhammer", [26, 26], 20, 47, 5], ranged: [false, "arrow", 7, 1800, 1, 6, 0, "none", 2.4], patrolStops: 0, patrolLoop: false, route:[[1654, 1507], [1661, 2311], [1864, 2315], [1852, 1499]]}));
                        }
                    }
                }

                //non-unique
                //balgur mercs
                if (uniqueChars.kronheimeLDS == true || uniqueChars.barretLDS == true)
                {
                    ArtificialIntelligenceAccess.push(new Unit(51435, -6729, "Soldier", false, "Balgur Mercenary", {race: "Thengar", faction: "TheBalgurMercenaries", con: 12, speed: 1.2, outfit: ["balgurMercArmour", 5], weapon: ["longSpikedMorningStar", [13, 5], 14, 20, 2.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(51334, -6700, "Soldier", false, "Balgur Mercenary", {race: "Thengar", faction: "TheBalgurMercenaries", con: 9, speed: 1.25, outfit: ["balgurMercArmour", 4], weapon: ["longSpikedMorningStar", [11, 4], 14, 20, 2.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(51020, -6731, "Soldier", false, "Balgur Mercenary", {race: "Thengar", faction: "TheBalgurMercenaries", con: 11, speed: 1.3, outfit: ["balgurMercArmour", 4], weapon: ["longSpikedMorningStar", [12, 4], 14, 20, 2.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(51141, -6698, "Soldier", false, "Balgur Mercenary", {race: "Thengar", faction: "TheBalgurMercenaries", con: 13, speed: 1.225, outfit: ["balgurMercArmour", 4.5], weapon: ["longSpikedMorningStar", [14, 6], 14, 20, 2.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(51398, -6934, "Soldier", false, "Balgur Mercenary", {race: "Thengar", faction: "TheBalgurMercenaries", con: 8, speed: 1.175, outfit: ["balgurMercArmour", 3.5], weapon: ["longSpikedMorningStar", [10, 3], 14, 20, 2.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(51083, -7027, "Soldier", false, "Balgur Mercenary", {race: "Thengar", faction: "TheBalgurMercenaries", con: 14, speed: 1.3, outfit: ["balgurMercArmour", 5], weapon: ["longSpikedMorningStar", [14, 7], 14, 20, 2.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(50894, -6932, "Soldier", false, "Balgur Mercenary", {race: "Thengar", faction: "TheBalgurMercenaries", con: 15, speed: 1.4, outfit: ["balgurMercArmour", 5], weapon: ["longSpikedMorningStar", [16, 6.5], 14, 20, 2.3], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(51567, -6939, "Soldier", false, "Balgur Mercenary", {race: "Thengar", faction: "TheBalgurMercenaries", con: 12, speed: 1.2, outfit: ["balgurMercArmour", 5], weapon: ["longSpikedMorningStar", [13, 5], 14, 20, 2.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                }
                //adolf arena fight v skols
                if (quests.swordDeliveryFight && uniqueChars.adolfLDS == true && quests.swordDeliveryQuest == "complete")
                {
                    quests.swordDeliveryFight = false;
                    ArtificialIntelligenceAccess.push(new Unit(51308, -8021, "Skol", false, "arena2"));
                    ArtificialIntelligenceAccess.push(new Unit(51038, -8134, "Skol", false, "arena2"));
                }

                if (quests.kellExecution == "beasts")
                {
                    var rnd = Math.random();
                    if (rnd > 0.64)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(51509, -7990, "Skol", false, "arena1"));
                        ArtificialIntelligenceAccess.push(new Unit(51508, -8245, "Skol", false, "arena1"));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(51309, -8098, "Nog", false, "arena1"));
                        ArtificialIntelligenceAccess.push(new Unit(51392, -8021, "Nog", false, "arena1"));
                        ArtificialIntelligenceAccess.push(new Unit(51526, -8100, "Nog", true, "arena1"));
                        ArtificialIntelligenceAccess.push(new Unit(51438, -8223, "Nog", false, "arena1"));
                    }

                    rnd = Math.random();
                    if (rnd > 0.3333)
                    {
                        //kell soldier (prisoner)
                        ArtificialIntelligenceAccess.push(new Unit(51178, -8128, "Soldier", false, "War Prisoner", {race: "Kel", faction: "arena2", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.3, 0.35], 0, 0, 1.1], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    }
                    else
                    {
                        //kell family
                        if (Math.round(Math.random()))
                        {
                            if (Math.round(Math.random()))
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51178, -8145, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena2", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                ArtificialIntelligenceAccess.push(new Unit(51101, -8198, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                ArtificialIntelligenceAccess.push(new Unit(51056, -8124, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51048, -8191, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena2", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                ArtificialIntelligenceAccess.push(new Unit(51077, -8171, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                ArtificialIntelligenceAccess.push(new Unit(51079, -8218, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                        }
                        else
                        {
                            if (Math.round(Math.random()))
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51048, -8146, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena2", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                ArtificialIntelligenceAccess.push(new Unit(51077, -8126, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                ArtificialIntelligenceAccess.push(new Unit(51079, -8173, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51154, -8213, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena2", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                ArtificialIntelligenceAccess.push(new Unit(51107, -8264, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                ArtificialIntelligenceAccess.push(new Unit(51239, -8035, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                ArtificialIntelligenceAccess.push(new Unit(51182, -8089, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                        }
                    }
                    quests.kellExecution = false;
                }
                else if (quests.kellExecution == "champion")
                {
                    var rnd = Math.random();
                    if (rnd > 0.7)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(51491, -8120, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 14, speed: 1.38, outfit: ["blackBearLeatherArmour", 6], weapon: ["smashStick", [12, 11], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    }
                    else if (rnd > 0.4)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(51491, -8120, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 13, speed: 1.45, outfit: ["skolLeatherArmour", 3], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    }
                    else if (rnd > 0.1)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(51491, -8120, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 9, speed: 1.55, outfit: ["boulchomLeatherArmour", 2], weapon: ["longsword", [8, 5], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(51491, -8120, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 6, speed: 0.73, outfit: ["thenganPlateArmour", 14], weapon: ["thenganWarhammer", [20, 14], 16, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    }

                    rnd = Math.random();
                    if (rnd > 0.3333)
                    {
                        //kell soldier (prisoner)
                        ArtificialIntelligenceAccess.push(new Unit(51178, -8128, "Soldier", false, "War Prisoner", {race: "Kel", faction: "arena2", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.3, 0.35], 0, 0, 1.1], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    }
                    else
                    {
                        //kell family
                        if (Math.round(Math.random()))
                        {
                            if (Math.round(Math.random()))
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51178, -8145, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena2", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                ArtificialIntelligenceAccess.push(new Unit(51101, -8198, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                ArtificialIntelligenceAccess.push(new Unit(51056, -8124, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51048, -8191, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena2", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                ArtificialIntelligenceAccess.push(new Unit(51077, -8171, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                ArtificialIntelligenceAccess.push(new Unit(51079, -8218, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                        }
                        else
                        {
                            if (Math.round(Math.random()))
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51048, -8146, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena2", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                ArtificialIntelligenceAccess.push(new Unit(51077, -8126, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                ArtificialIntelligenceAccess.push(new Unit(51079, -8173, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51154, -8213, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena2", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                ArtificialIntelligenceAccess.push(new Unit(51107, -8264, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                ArtificialIntelligenceAccess.push(new Unit(51239, -8035, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                ArtificialIntelligenceAccess.push(new Unit(51182, -8089, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                        }
                    }
                    quests.kellExecution = false;
                }
                else if (quests.pitFight == "spectacle")
                {
                    quests.pitFight = "none";
                    var rndm = Math.random();
                    if (rndm > 0.9)
                    {
                        var rnd = Math.random();
                        if (rnd > 0.7)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51491, -8120, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 13, speed: 1.41, outfit: ["blackBearLeatherArmour", 6], weapon: ["longSpikedMorningStar", [15, 5], 14, 20, 2.35], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51491, -8120, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 14, speed: 0.9, outfit: ["skolLeatherArmour", 3], weapon: ["thenganWarhammer", [20, 14], 16, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.1)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51491, -8120, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 8, speed: 1.3, outfit: ["boulchomLeatherArmour", 2], weapon: ["smashStick", [12, 11], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51491, -8120, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 10, speed: 0.79, outfit: ["thenganPlateArmour", 14], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }

                        rnd = Math.random();
                        if (rnd > 0.65)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51061, -8126, "Soldier", false, "Alzkwaya Tribal", {race: "Kel", faction: "arena2", con: 13, speed: 1.5, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [8, 4], 3, 12, 0.9], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            ArtificialIntelligenceAccess.push(new Unit(50987, -8126, "Soldier", false, "Alzkwaya Slave Man", {race: "Kel", faction: "arena2", con: 1, speed: 0, outfit: ["mofuTribalWear", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            ArtificialIntelligenceAccess.push(new Unit(50950, -8085, "Soldier", false, "Alzkwaya Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["mofuTribalWear", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            ArtificialIntelligenceAccess.push(new Unit(50960, -8178, "Soldier", false, "Alzkwaya Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["mofuTribalWear", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.32)
                        {
                            if (Math.random() > 0.65)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51061, -8126, "Soldier", false, "Echlin Tribal", {race: "Kel", faction: "arena2", con: 17, speed: 1.37, outfit: ["naapridLeatherArmour", 4], weapon: ["warHammer", [16, 1], 8, 16, 1.25], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                ArtificialIntelligenceAccess.push(new Unit(50987, -8126, "Soldier", false, "Echlin Slave Woman", {race: "Kel", faction: "arena2", con: 1, speed: 0, outfit: ["naapridLeatherArmour", 4], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                ArtificialIntelligenceAccess.push(new Unit(50960, -8178, "Soldier", false, "Echlin Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["naapridLeatherArmour", 1.5], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                ArtificialIntelligenceAccess.push(new Unit(50950, -8085, "Soldier", false, "Echlin Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["naapridLeatherArmour", 1.5], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51099, -8071, "Soldier", false, "Alzkwaya Slave Girl", {race: "Kel", faction: "arena2", con: 0.5, speed: 0.9, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [4, 0], 1, 4, 1], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            ArtificialIntelligenceAccess.push(new Unit(51083, -8156, "Soldier", false, "Alzkwaya Slave Girl", {race: "Kel", faction: "arena2", con: 0.5, speed: 0.9, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [2, 1], 0.5, 4, 0.85], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            ArtificialIntelligenceAccess.push(new Unit(50992, -8109, "Soldier", false, "Echlin Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0.82, outfit: ["naapridLeatherArmour", 1.5], weapon: ["hammer", [1, 0.8], 0.35, 0, 0.9], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                    }
                    else if (rndm > 0.849)
                    {
                        var rnd = Math.random();
                        if (rnd > 0.7)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51491, -8120, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 14, speed: 1.38, outfit: ["blackBearLeatherArmour", 6], weapon: ["smashStick", [12, 11], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51491, -8120, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 13, speed: 1.45, outfit: ["skolLeatherArmour", 3], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.1)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51491, -8120, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 9, speed: 1.55, outfit: ["boulchomLeatherArmour", 2], weapon: ["longsword", [8, 5], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51491, -8120, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 6, speed: 0.73, outfit: ["thenganPlateArmour", 14], weapon: ["thenganWarhammer", [20, 14], 16, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }

                        rnd = Math.random();
                        if (rnd > 0.3333)
                        {
                            //kell soldier (prisoner)
                            ArtificialIntelligenceAccess.push(new Unit(51178, -8128, "Soldier", false, "War Prisoner", {race: "Kel", faction: "arena2", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.3, 0.35], 0, 0, 1.1], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            //kell family
                            if (Math.round(Math.random()))
                            {
                                if (Math.round(Math.random()))
                                {
                                    ArtificialIntelligenceAccess.push(new Unit(51178, -8145, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena2", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51101, -8198, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51056, -8124, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                }
                                else
                                {
                                    ArtificialIntelligenceAccess.push(new Unit(51048, -8191, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena2", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51077, -8171, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51079, -8218, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                }
                            }
                            else
                            {
                                if (Math.round(Math.random()))
                                {
                                    ArtificialIntelligenceAccess.push(new Unit(51048, -8146, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena2", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51077, -8126, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51079, -8173, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                }
                                else
                                {
                                    ArtificialIntelligenceAccess.push(new Unit(51154, -8213, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena2", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51107, -8264, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51239, -8035, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51182, -8089, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                }
                            }
                        }
                    }
                    else if (rndm > 0.8)
                    {
                        var rnd = Math.random();
                        if (rnd > 0.64)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51509, -7990, "Skol", false, "arena1"));
                            ArtificialIntelligenceAccess.push(new Unit(51508, -8245, "Skol", false, "arena1"));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51309, -8098, "Nog", false, "arena1"));
                            ArtificialIntelligenceAccess.push(new Unit(51392, -8021, "Nog", false, "arena1"));
                            ArtificialIntelligenceAccess.push(new Unit(51526, -8100, "Nog", true, "arena1"));
                            ArtificialIntelligenceAccess.push(new Unit(51438, -8223, "Nog", false, "arena1"));
                        }

                        rnd = Math.random();
                        if (rnd > 0.3333)
                        {
                            //kell soldier (prisoner)
                            ArtificialIntelligenceAccess.push(new Unit(51178, -8128, "Soldier", false, "War Prisoner", {race: "Kel", faction: "arena2", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.3, 0.35], 0, 0, 1.1], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            //kell family
                            if (Math.round(Math.random()))
                            {
                                if (Math.round(Math.random()))
                                {
                                    ArtificialIntelligenceAccess.push(new Unit(51178, -8145, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena2", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51101, -8198, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51056, -8124, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                }
                                else
                                {
                                    ArtificialIntelligenceAccess.push(new Unit(51048, -8191, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena2", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51077, -8171, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51079, -8218, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                }
                            }
                            else
                            {
                                if (Math.round(Math.random()))
                                {
                                    ArtificialIntelligenceAccess.push(new Unit(51048, -8146, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena2", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51077, -8126, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51079, -8173, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                }
                                else
                                {
                                    ArtificialIntelligenceAccess.push(new Unit(51154, -8213, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena2", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51107, -8264, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51239, -8035, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51182, -8089, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                }
                            }
                        }
                    }
                    else if (rndm > 0.749)
                    {
                        var rnd = Math.random();
                        if (rnd > 0.7)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51486, -8114, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 15, speed: 1.42, outfit: ["blackBearLeatherArmour", 6], weapon: ["longsword", [9, 6], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51486, -8114, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 16, speed: 1, outfit: ["skolLeatherArmour", 3], weapon: ["thenganWarhammer", [20, 14], 16, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.1)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51486, -8114, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 11, speed: 1.25, outfit: ["boulchomLeatherArmour", 2], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51486, -8114, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 10, speed: 0.66, outfit: ["thenganPlateArmour", 14], weapon: ["smashStick", [12, 11], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }

                        rnd = Math.random();
                        if (rnd > 0.50)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(50978, -8134, "Soldier", false, "Echlin Tribal", {race: "Kel", faction: "arena2", con: 15, speed: 1.55, outfit: ["naapridLeatherArmour", 4], weapon: ["warHammer", [16, 1], 8, 16, 1.25], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else //when I come up with more kellish tribes add more exemplary soldiers.
                        {
                            ArtificialIntelligenceAccess.push(new Unit(50978, -8134, "Soldier", false, "Alzkwaya Tribal", {race: "Kel", faction: "arena2", con: 15, speed: 1.55, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [8, 4], 3, 12, 0.9], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                    }
                    else if (rndm > 0.7)
                    {
                        var rnd = Math.random();
                        if (rnd > 0.45)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51450, -8126, "Skol", true, "arena1"));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51452, -8027, "BlackBear", true, "arena1"));
                            ArtificialIntelligenceAccess.push(new Unit(51450, -8126, "BlackBear", true, "arena1"));
                            ArtificialIntelligenceAccess.push(new Unit(51453, -8249, "BlackBear", true, "arena1"));
                        }

                        rnd = Math.random();
                        if (rnd > 0.50)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(50978, -8134, "Soldier", false, "Echlin Tribal", {race: "Kel", faction: "arena2", con: 15, speed: 1.55, outfit: ["naapridLeatherArmour", 4], weapon: ["warHammer", [16, 0], 8, 16, 1.25], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else //when I come up with more kellish tribes add more exemplary soldiers.
                        {
                            ArtificialIntelligenceAccess.push(new Unit(50978, -8134, "Soldier", false, "Alzkwaya Tribal", {race: "Kel", faction: "arena2", con: 15, speed: 1.55, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [8, 4], 3, 12, 0.9], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                    }
                    else if (rndm > 0.6)
                    {

                        var rnd = Math.random();
                        if (rnd > 0.7)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51486, -8114, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 16, speed: 1.2, outfit: ["blackBearLeatherArmour", 6], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51486, -8114, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 13, speed: 1.52, outfit: ["skolLeatherArmour", 3], weapon: ["longsword", [10, 7], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.1)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51486, -8114, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 19, speed: 1, outfit: ["boulchomLeatherArmour", 2], weapon: ["thenganWarhammer", [20, 14], 16, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51486, -8114, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 14, speed: 0.7, outfit: ["thenganPlateArmour", 17], weapon: ["smashStick", [13, 12], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }

                        rnd = Math.random();
                        if (rnd > 0.45)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51058, -8130, "Skol", true, "arena2"));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51037, -7990, "BlackBear", true, "arena2"));
                            ArtificialIntelligenceAccess.push(new Unit(51058, -8130, "BlackBear", true, "arena2"));
                            ArtificialIntelligenceAccess.push(new Unit(51001, -8284, "BlackBear", true, "arena2"));
                        }
                    }
                    else if (rndm > 0.5)
                    {
                        var rnd = Math.random();
                        if (rnd > 0.7)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51491, -8120, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 14, speed: 1.38, outfit: ["blackBearLeatherArmour", 6], weapon: ["smashStick", [12, 11], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51491, -8120, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 13, speed: 1.45, outfit: ["skolLeatherArmour", 3], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.1)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51491, -8120, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 9, speed: 1.55, outfit: ["boulchomLeatherArmour", 2], weapon: ["longsword", [8, 5], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51491, -8120, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 6, speed: 0.73, outfit: ["thenganPlateArmour", 14], weapon: ["thenganWarhammer", [20, 14], 16, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }

                        rnd = Math.random();
                        if (rnd > 0.64)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51047, -8014, "Skol", false, "arena2"));
                            ArtificialIntelligenceAccess.push(new Unit(51038, -8262, "Skol", false, "arena2"));
                            if (Math.round(Math.random()))
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51007, -8084, "Skol", false, "arena2"));
                            }
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51047, -8014, "Nog", true, "arena2"));
                            ArtificialIntelligenceAccess.push(new Unit(51038, -8262, "Nog", false, "arena2"));
                            ArtificialIntelligenceAccess.push(new Unit(50969, -8097, "Nog", true, "arena2"));
                            ArtificialIntelligenceAccess.push(new Unit(51107, -8156, "Nog", false, "arena2"));
                            ArtificialIntelligenceAccess.push(new Unit(51173, -8076, "Nog", false, "arena2"));
                        }
                    }
                    else if (rndm > 0.4)
                    {
                        var rnd = Math.random();
                        if (rnd > 0.7)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8126, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 14, speed: 1.2, outfit: ["blackBearLeatherArmour", 6], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8126, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 11, speed: 1.52, outfit: ["skolLeatherArmour", 3], weapon: ["longsword", [10, 7], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.1)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8126, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 17, speed: 1, outfit: ["boulchomLeatherArmour", 2], weapon: ["thenganWarhammer", [20, 14], 16, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8126, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 12, speed: 0.7, outfit: ["thenganPlateArmour", 16], weapon: ["smashStick", [13, 12], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }

                        rnd = Math.random();
                        if (rnd > 0.7)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51005, -8132, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 15, speed: 1.38, outfit: ["blackBearLeatherArmour", 6], weapon: ["smashStick", [12, 11], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51005, -8132, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 14, speed: 1.45, outfit: ["skolLeatherArmour", 3], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.1)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51005, -8132, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 10, speed: 1.55, outfit: ["boulchomLeatherArmour", 2], weapon: ["longsword", [8, 6], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51005, -8132, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 19, speed: 0.65, outfit: ["thenganPlateArmour", 15], weapon: ["thenganWarhammer", [26, 16], 19, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                    }
                    else if (rndm > 0.3)
                    {
                        var rnd = Math.random();
                        if (rnd > 0.7)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8086, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 14, speed: 1.2, outfit: ["blackBearLeatherArmour", 6], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8086, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 11, speed: 1.52, outfit: ["skolLeatherArmour", 3], weapon: ["longsword", [10, 7], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.1)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8086, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 17, speed: 1, outfit: ["boulchomLeatherArmour", 2], weapon: ["thenganWarhammer", [20, 14], 16, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8086, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 12, speed: 0.7, outfit: ["thenganPlateArmour", 16], weapon: ["smashStick", [13, 12], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }

                        rnd = Math.random();
                        if (rnd > 0.7)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8166, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 15, speed: 1.38, outfit: ["blackBearLeatherArmour", 6], weapon: ["smashStick", [12, 11], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8166, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 14, speed: 1.45, outfit: ["skolLeatherArmour", 3], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.1)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8166, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 10, speed: 1.55, outfit: ["boulchomLeatherArmour", 2], weapon: ["longsword", [8, 6], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8166, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 19, speed: 0.65, outfit: ["thenganPlateArmour", 15], weapon: ["thenganWarhammer", [26, 16], 19, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }

                        rnd = Math.random();
                        if (rnd > 0.7)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 15, speed: 1.38, outfit: ["blackBearLeatherArmour", 6], weapon: ["smashStick", [12, 11], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 14, speed: 1.45, outfit: ["skolLeatherArmour", 3], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.1)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 10, speed: 1.55, outfit: ["boulchomLeatherArmour", 2], weapon: ["longsword", [8, 6], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 19, speed: 0.65, outfit: ["thenganPlateArmour", 15], weapon: ["thenganWarhammer", [26, 16], 19, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }

                        rnd = Math.random();
                        if (rnd > 0.7)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 14, speed: 1.2, outfit: ["blackBearLeatherArmour", 6], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 11, speed: 1.52, outfit: ["skolLeatherArmour", 3], weapon: ["longsword", [10, 7], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.1)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 17, speed: 1, outfit: ["boulchomLeatherArmour", 2], weapon: ["thenganWarhammer", [20, 14], 16, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 12, speed: 0.7, outfit: ["thenganPlateArmour", 16], weapon: ["smashStick", [13, 12], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                    }
                    else if (rndm > 0.2)
                    {
                        var rnd = Math.random();
                        if (rnd > 0.7)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8166, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 15, speed: 1.2, outfit: ["blackBearLeatherArmour", 6], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8166, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 12, speed: 1.52, outfit: ["skolLeatherArmour", 3], weapon: ["longsword", [10, 7], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.1)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8166, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 18, speed: 1, outfit: ["boulchomLeatherArmour", 2], weapon: ["thenganWarhammer", [20, 14], 16, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8166, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 13, speed: 0.7, outfit: ["thenganPlateArmour", 16], weapon: ["smashStick", [13, 12], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }

                        rnd = Math.random();
                        if (rnd > 0.7)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8086, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 16, speed: 1.38, outfit: ["blackBearLeatherArmour", 6], weapon: ["smashStick", [12, 11], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8086, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 15, speed: 1.45, outfit: ["skolLeatherArmour", 3], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.1)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8086, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 11, speed: 1.55, outfit: ["boulchomLeatherArmour", 2], weapon: ["longsword", [8, 6], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8086, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 20, speed: 0.65, outfit: ["thenganPlateArmour", 15], weapon: ["thenganWarhammer", [26, 16], 19, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }

                        rnd = Math.random();
                        if (rnd > 0.45)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51043, -8004, "Skol", true, "arena2"));
                            ArtificialIntelligenceAccess.push(new Unit(51063, -8250, "Skol", true, "arena2"));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51041, -7995, "BlackBear", true, "arena2"));
                            ArtificialIntelligenceAccess.push(new Unit(51065, -8069, "BlackBear", true, "arena2"));
                            ArtificialIntelligenceAccess.push(new Unit(51084, -8179, "BlackBear", true, "arena2"));
                            ArtificialIntelligenceAccess.push(new Unit(51005, -8264, "BlackBear", true, "arena2"));
                        }
                    }
                    else if (rndm > 0.15)
                    {
                        var rnd = Math.random();
                        if (rnd > 0.45)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51486, -8062, "Skol", false, "arena1"));
                            ArtificialIntelligenceAccess.push(new Unit(51347, -8269, "Skol", false, "arena1"));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51520, -8118, "BlackBear", true, "arena1"));
                        }

                        rnd = Math.random();

                        if (rnd > 0.49)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51079, -8019, "Soldier", false, "Alzkwaya Slave Girl", {race: "Kel", faction: "arena2", con: 0.5, speed: 0.95, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [4, 0.5], 1, 4, 1], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            ArtificialIntelligenceAccess.push(new Unit(51008, -8134, "Soldier", false, "Alzkwaya Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0.85, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [3, 1], 0.5, 4, 0.85], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            ArtificialIntelligenceAccess.push(new Unit(51130, -8114, "Soldier", false, "Echlin Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0.82, outfit: ["naapridLeatherArmour", 1.5], weapon: ["hammer", [1.5, 1], 0.25, 3, 0.9], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            ArtificialIntelligenceAccess.push(new Unit(51059, -8298, "Soldier", false, "Echlin Slave Boy", {race: "Kel", faction: "arena2", con: 0.5, speed: 0.89, outfit: ["naapridLeatherArmour", 1.5], weapon: ["hammer", [1, 1.5], 0, 3, 0.9], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51079, -8019, "Soldier", false, "Alzkwaya Slave Girl", {race: "Kel", faction: "arena2", con: 0.5, speed: 0.9, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [4, 0.5], 1, 4, 1], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            ArtificialIntelligenceAccess.push(new Unit(51008, -8134, "Soldier", false, "Alzkwaya Slave Girl", {race: "Kel", faction: "arena2", con: 0.5, speed: 0.9, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [3, 1], 0.5, 4, 0.85], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            ArtificialIntelligenceAccess.push(new Unit(51130, -8114, "Soldier", false, "Echlin Slave Boy", {race: "Kel", faction: "arena2", con: 1, speed: 0.85, outfit: ["naapridLeatherArmour", 1.5], weapon: ["warHammer", [3.5, 2], 1, 3, 0.9], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            ArtificialIntelligenceAccess.push(new Unit(51059, -8298, "Soldier", false, "Alzkwaya Slave Girl", {race: "Kel", faction: "arena2", con: 0.75, speed: 1, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [3, 1.5], 0.5, 4, 0.85], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                    }
                    else if (rndm > 0.1)
                    {
                        var rnd = Math.random();
                        if (rnd > 0.7)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51491, -8120, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 11, speed: 1.38, outfit: ["blackBearLeatherArmour", 6], weapon: ["smashStick", [12, 11], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51491, -8120, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 10, speed: 1.45, outfit: ["skolLeatherArmour", 3], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.1)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51491, -8120, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 6, speed: 1.55, outfit: ["boulchomLeatherArmour", 2], weapon: ["longsword", [8, 5], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51491, -8120, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 5, speed: 0.73, outfit: ["thenganPlateArmour", 14], weapon: ["longsword", [9, 6], 0, 16, 1.45], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }

                        rnd = Math.random();

                        if (rnd > 0.49)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51079, -8019, "Soldier", false, "Alzkwaya Slave Girl", {race: "Kel", faction: "arena2", con: 0.5, speed: 0.95, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [4, 0.5], 1, 4, 1], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            ArtificialIntelligenceAccess.push(new Unit(51008, -8134, "Soldier", false, "Alzkwaya Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0.85, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [3, 1], 0.5, 4, 0.85], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            ArtificialIntelligenceAccess.push(new Unit(51130, -8114, "Soldier", false, "Echlin Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0.82, outfit: ["naapridLeatherArmour", 1.5], weapon: ["hammer", [1.5, 1], 0.25, 3, 0.9], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            ArtificialIntelligenceAccess.push(new Unit(51059, -8298, "Soldier", false, "Echlin Slave Boy", {race: "Kel", faction: "arena2", con: 0.5, speed: 0.89, outfit: ["naapridLeatherArmour", 1.5], weapon: ["hammer", [1, 1.5], 0, 3, 0.9], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            ArtificialIntelligenceAccess.push(new Unit(51154, -8192, "Soldier", false, "Echlin Slave Boy", {race: "Kel", faction: "arena2", con: 1, speed: 0.85, outfit: ["naapridLeatherArmour", 1.5], weapon: ["warHammer", [3.5, 2], 1, 3, 0.9], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51079, -8019, "Soldier", false, "Echlin Slave Boy", {race: "Kel", faction: "arena2", con: 0.5, speed: 0.89, outfit: ["naapridLeatherArmour", 1.5], weapon: ["hammer", [1, 1.5], 0, 3, 0.9], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            ArtificialIntelligenceAccess.push(new Unit(51008, -8134, "Soldier", false, "Alzkwaya Slave Girl", {race: "Kel", faction: "arena2", con: 0.5, speed: 0.9, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [3, 1], 0.5, 4, 0.85], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            ArtificialIntelligenceAccess.push(new Unit(51130, -8114, "Soldier", false, "Echlin Slave Boy", {race: "Kel", faction: "arena2", con: 1, speed: 0.85, outfit: ["naapridLeatherArmour", 1.5], weapon: ["warHammer", [3.5, 2], 1, 3, 0.9], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            ArtificialIntelligenceAccess.push(new Unit(51059, -8298, "Soldier", false, "Alzkwaya Slave Girl", {race: "Kel", faction: "arena2", con: 0.75, speed: 1, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [3, 1.5], 0.5, 4, 0.85], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            ArtificialIntelligenceAccess.push(new Unit(51154, -8192, "Soldier", false, "Alzkwaya Slave Girl", {race: "Kel", faction: "arena2", con: 1, speed: 1.1, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [3, 1.75], 1, 4, 0.85], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                    }
                    else
                    {
                        var rnd = Math.random();
                        if (rnd > 0.7)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8086, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 14, speed: 1.2, outfit: ["blackBearLeatherArmour", 6], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8086, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 11, speed: 1.52, outfit: ["skolLeatherArmour", 3], weapon: ["longsword", [10, 7], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.1)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8086, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 17, speed: 1, outfit: ["boulchomLeatherArmour", 2], weapon: ["thenganWarhammer", [20, 14], 16, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8086, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 12, speed: 0.7, outfit: ["thenganPlateArmour", 16], weapon: ["smashStick", [13, 12], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }

                        rnd = Math.random();
                        if (rnd > 0.7)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8166, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 15, speed: 1.38, outfit: ["blackBearLeatherArmour", 6], weapon: ["smashStick", [12, 11], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8166, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 14, speed: 1.45, outfit: ["skolLeatherArmour", 3], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.1)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8166, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 10, speed: 1.55, outfit: ["boulchomLeatherArmour", 2], weapon: ["longsword", [8, 6], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51538, -8166, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 19, speed: 0.65, outfit: ["thenganPlateArmour", 15], weapon: ["thenganWarhammer", [26, 16], 19, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }

                        rnd = Math.random();
                        if (rnd > 0.7)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51568, -8132, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 14, speed: 1.35, outfit: ["blackBearLeatherArmour", 6], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51568, -8132, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 18, speed: 1.3, outfit: ["skolLeatherArmour", 3], weapon: ["smashStick", [13, 12], 10, 30, 2.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.1)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51568, -8132, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 16, speed: 1.1, outfit: ["boulchomLeatherArmour", 2], weapon: ["thenganWarhammer", [20, 14], 16, 47, 6.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51568, -8132, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena1", con: 7, speed: 0.85, outfit: ["thenganPlateArmour", 20], weapon: ["longsword", [10, 7], 0, 16, 1.35], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }

                        rnd = Math.random();
                        if (rnd > 0.7)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 15, speed: 1.38, outfit: ["blackBearLeatherArmour", 6], weapon: ["smashStick", [12, 11], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 14, speed: 1.45, outfit: ["skolLeatherArmour", 3], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.1)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 10, speed: 1.55, outfit: ["boulchomLeatherArmour", 2], weapon: ["longsword", [8, 6], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 19, speed: 0.65, outfit: ["thenganPlateArmour", 15], weapon: ["thenganWarhammer", [26, 16], 19, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }

                        rnd = Math.random();
                        if (rnd > 0.7)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 14, speed: 1.2, outfit: ["blackBearLeatherArmour", 6], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 11, speed: 1.52, outfit: ["skolLeatherArmour", 3], weapon: ["longsword", [10, 7], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.1)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 17, speed: 1, outfit: ["boulchomLeatherArmour", 2], weapon: ["thenganWarhammer", [20, 14], 16, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 12, speed: 0.7, outfit: ["thenganPlateArmour", 16], weapon: ["smashStick", [13, 12], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }

                        rnd = Math.random();
                        if (rnd > 0.7)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(50949, -8128, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 13, speed: 1.35, outfit: ["blackBearLeatherArmour", 6], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(50949, -8128, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 12, speed: 1.3, outfit: ["skolLeatherArmour", 3], weapon: ["smashStick", [13, 12], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else if (rnd > 0.1)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(50949, -8128, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 16, speed: 1.1, outfit: ["boulchomLeatherArmour", 2], weapon: ["thenganWarhammer", [20, 14], 16, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(50949, -8128, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena2", con: 13, speed: 0.85, outfit: ["thenganPlateArmour", 18], weapon: ["longsword", [10, 7], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                    }

                    quests.pitFight = false;
                }
                else if (quests.pitFight == "bears")
                {
                    quests.pitFight = "none";
                    if (Math.round(Math.random()))
                    {
                        ArtificialIntelligenceAccess.push(new Unit(51046, -8031, "BlackBear", true, "arena3"));
                        ArtificialIntelligenceAccess.push(new Unit(51042, -8252, "BlackBear", true, "arena3"));
                        if (Math.round(Math.random()))
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51001, -8140, "BlackBear", true, "arena3"));
                        }
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(51046, -8031, "BlackBear", false, "arena3"));
                        ArtificialIntelligenceAccess.push(new Unit(51042, -8252, "BlackBear", false, "arena3"));
                        ArtificialIntelligenceAccess.push(new Unit(51001, -8140, "BlackBear", false, "arena3"));
                        if (Math.round(Math.random()))
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51160, -7975, "BlackBear", false, "arena3"));
                            ArtificialIntelligenceAccess.push(new Unit(51166, -8301, "BlackBear", false, "arena3"));
                        }
                    }
                }
                else if (quests.pitFight == "skols")
                {
                    quests.pitFight = "none";
                    if (Math.round(Math.random()))
                    {
                        if (Math.round(Math.random()))
                        {
                            if (Math.round(Math.random()))
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51046, -8031, "Skol", true, "arena3"));
                            }
                            ArtificialIntelligenceAccess.push(new Unit(51042, -8252, "Skol", true, "arena3"));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51042, -8252, "Skol", false, "arena3"));
                            ArtificialIntelligenceAccess.push(new Unit(51046, -8031, "Skol", false, "arena3"));
                            if (Math.round(Math.random()))
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51001, -8140, "Skol", false, "arena3"));
                            }
                            else
                            {
                                if (Math.round(Math.random()))
                                {
                                    if (Math.round(Math.random()))
                                    {
                                        ArtificialIntelligenceAccess.push(new Unit(51160, -8000, "Skol", false, "arena3"));
                                        ArtificialIntelligenceAccess.push(new Unit(51166, -8276, "Skol", false, "arena3"));
                                    }
                                    else
                                    {
                                        ArtificialIntelligenceAccess.push(new Unit(51162, -8012, "Skol", false, "arena3"));
                                    }
                                }
                                else
                                {
                                    ArtificialIntelligenceAccess.push(new Unit(51160, -8000, "Skol", false, "arena3"));
                                    ArtificialIntelligenceAccess.push(new Unit(51166, -8276, "Skol", false, "arena3"));
                                    if (Math.round(Math.random()))
                                    {
                                        ArtificialIntelligenceAccess.push(new Unit(51162, -8012, "Skol", false, "arena3"));
                                    }
                                }
                            }
                        }
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(51042, -8252, "Skol", false, "arena3"));
                        ArtificialIntelligenceAccess.push(new Unit(51046, -8031, "Skol", false, "arena3"));
                        if (Math.round(Math.random()))
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51001, -8140, "Skol", false, "arena3"));
                        }
                    }
                }
                else if (quests.pitFight == "nogs")
                {
                    quests.pitFight = "none";
                    var rnd = Math.random();
                    if (rnd > 0.65)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(51047, -8014, "Nog", true, "arena3"));
                        ArtificialIntelligenceAccess.push(new Unit(51038, -8262, "Nog", false, "arena3"));
                        ArtificialIntelligenceAccess.push(new Unit(50969, -8097, "Nog", true, "arena3"));
                        ArtificialIntelligenceAccess.push(new Unit(51107, -8156, "Nog", false, "arena3"));
                        ArtificialIntelligenceAccess.push(new Unit(51173, -8076, "Nog", false, "arena3"));
                        if (Math.round(Math.random()))
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51155, -8247, "Nog", false, "arena3"));
                            ArtificialIntelligenceAccess.push(new Unit(51202, -8131, "Nog", true, "arena3"));
                        }
                    }
                    else if (rnd > 0.32)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(51047, -8014, "Nog", false, "arena3"));
                        ArtificialIntelligenceAccess.push(new Unit(51038, -8262, "Nog", true, "arena3"));
                        ArtificialIntelligenceAccess.push(new Unit(50969, -8097, "Nog", false, "arena3"));
                        ArtificialIntelligenceAccess.push(new Unit(51107, -8156, "Nog", true, "arena3"));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(51038, -8262, "Nog", false, "arena3"));
                        ArtificialIntelligenceAccess.push(new Unit(50969, -8097, "Nog", true, "arena3"));
                        ArtificialIntelligenceAccess.push(new Unit(51107, -8156, "Nog", false, "arena3"));
                    }
                }
                else if (quests.pitFight == "pitFighters")
                {
                    quests.pitFight = "none";
                    var rnd = Math.random();
                    if (rnd > 0.65)
                    {
                        if (Math.round(Math.random()))
                        {
                            var rnd = Math.random();
                            if (rnd > 0.7)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 9, speed: 1.34, outfit: ["blackBearLeatherArmour", 6], weapon: ["smashStick", [12, 11], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.4)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 10, speed: 1.4, outfit: ["skolLeatherArmour", 3], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.1)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 7, speed: 1.56, outfit: ["boulchomLeatherArmour", 2], weapon: ["longsword", [8, 5], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 5, speed: 0.74, outfit: ["thenganPlateArmour", 14], weapon: ["flail", [27, 8.5], 17, 47, 7], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                        }
                        else
                        {
                            var rnd = Math.random();
                            if (rnd > 0.7)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 16, speed: 1.2, outfit: ["blackBearLeatherArmour", 6], weapon: ["longsword", [10, 7], 0, 16, 1.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.4)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 14, speed: 1.52, outfit: ["skolLeatherArmour", 3], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.1)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 17, speed: 1, outfit: ["boulchomLeatherArmour", 2], weapon: ["smashStick", [13, 12], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 10, speed: 0.7, outfit: ["thenganPlateArmour", 15], weapon: ["smashStick", [13, 12], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                        }
                    }
                    else if (rnd > 0.32)
                    {
                        if (Math.round(Math.random()))
                        {
                            var rnd = Math.random();
                            if (rnd > 0.7)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 16, speed: 1.2, outfit: ["blackBearLeatherArmour", 6], weapon: ["longsword", [10, 7], 0, 16, 1.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.4)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 14, speed: 1.52, outfit: ["skolLeatherArmour", 3], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.1)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 17, speed: 1, outfit: ["boulchomLeatherArmour", 2], weapon: ["smashStick", [13, 12], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 10, speed: 0.7, outfit: ["thenganPlateArmour", 15], weapon: ["smashStick", [13, 12], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }

                            rnd = Math.random();
                            if (rnd > 0.7)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 9, speed: 1.34, outfit: ["blackBearLeatherArmour", 6], weapon: ["smashStick", [12, 11], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.4)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 10, speed: 1.4, outfit: ["skolLeatherArmour", 3], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.1)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 7, speed: 1.56, outfit: ["boulchomLeatherArmour", 2], weapon: ["longsword", [8, 5], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 5, speed: 0.74, outfit: ["thenganPlateArmour", 14], weapon: ["flail", [27, 8.5], 17, 47, 7], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                        }
                        else
                        {
                            var rnd = Math.random();
                            if (rnd > 0.7)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 11, speed: 1.38, outfit: ["blackBearLeatherArmour", 6], weapon: ["thenganWarhammer", [26, 16], 19, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.4)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 13, speed: 1.45, outfit: ["skolLeatherArmour", 3], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.1)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 8, speed: 1.55, outfit: ["boulchomLeatherArmour", 2], weapon: ["longsword", [8, 6], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 15, speed: 0.86, outfit: ["thenganPlateArmour", 15], weapon: ["smashStick", [12, 11], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }

                            rnd = Math.random();
                            if (rnd > 0.7)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(50949, -8128, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 13, speed: 1.35, outfit: ["blackBearLeatherArmour", 6], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.4)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(50949, -8128, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 12, speed: 1.3, outfit: ["skolLeatherArmour", 3], weapon: ["smashStick", [13, 12], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.1)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(50949, -8128, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 16, speed: 1.1, outfit: ["boulchomLeatherArmour", 2], weapon: ["thenganWarhammer", [20, 14], 16, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(50949, -8128, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 13, speed: 0.85, outfit: ["thenganPlateArmour", 18], weapon: ["longsword", [10, 7], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                        }
                    }
                    else
                    {
                        if (Math.round(Math.random()))
                        {
                            var rnd = Math.random();
                            if (rnd > 0.7)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 11, speed: 1.38, outfit: ["blackBearLeatherArmour", 6], weapon: ["thenganWarhammer", [26, 16], 19, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.4)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 13, speed: 1.45, outfit: ["skolLeatherArmour", 3], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.1)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 8, speed: 1.55, outfit: ["boulchomLeatherArmour", 2], weapon: ["longsword", [8, 6], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 15, speed: 0.86, outfit: ["thenganPlateArmour", 15], weapon: ["smashStick", [12, 11], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }

                            rnd = Math.random();
                            if (rnd > 0.7)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 15, speed: 1.2, outfit: ["blackBearLeatherArmour", 6], weapon: ["longsword", [10, 7], 0, 16, 1.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.4)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 10, speed: 1.52, outfit: ["skolLeatherArmour", 3], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.1)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 18, speed: 1, outfit: ["boulchomLeatherArmour", 2], weapon: ["smashStick", [13, 12], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 11, speed: 0.7, outfit: ["thenganPlateArmour", 16], weapon: ["smashStick", [13, 12], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }

                            rnd = Math.random();
                            if (rnd > 0.7)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 12, speed: 1.2, outfit: ["blackBearLeatherArmour", 6], weapon: ["longSpikedMorningStar", [15, 5], 14, 20, 2.3], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.4)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 15, speed: 1.52, outfit: ["skolLeatherArmour", 3], weapon: ["thenganWarhammer", [20, 14], 16, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.1)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 17, speed: 1.4, outfit: ["boulchomLeatherArmour", 2], weapon: ["longsword", [8, 6], 0, 16, 1.2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 9, speed: 0.69, outfit: ["thenganPlateArmour", 14], weapon: ["longSpikedMorningStar", [18, 7], 14, 20, 2.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                        }
                        else
                        {
                            var rnd = Math.random();
                            if (rnd > 0.7)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 15, speed: 1.38, outfit: ["blackBearLeatherArmour", 6], weapon: ["smashStick", [12, 11], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.4)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 14, speed: 1.45, outfit: ["skolLeatherArmour", 3], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.1)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 10, speed: 1.55, outfit: ["boulchomLeatherArmour", 2], weapon: ["longsword", [8, 6], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8092, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 19, speed: 0.65, outfit: ["thenganPlateArmour", 15], weapon: ["thenganWarhammer", [26, 16], 19, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }

                            rnd = Math.random();
                            if (rnd > 0.7)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 14, speed: 1.2, outfit: ["blackBearLeatherArmour", 6], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.4)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 11, speed: 1.52, outfit: ["skolLeatherArmour", 3], weapon: ["longsword", [10, 7], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.1)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 17, speed: 1, outfit: ["boulchomLeatherArmour", 2], weapon: ["thenganWarhammer", [20, 14], 16, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(51005, -8172, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 12, speed: 0.7, outfit: ["thenganPlateArmour", 16], weapon: ["smashStick", [13, 12], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }

                            rnd = Math.random();
                            if (rnd > 0.7)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(50949, -8128, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 13, speed: 1.35, outfit: ["blackBearLeatherArmour", 6], weapon: ["longSpikedMorningStar", [16, 6], 14, 20, 2.5], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.4)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(50949, -8128, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 12, speed: 1.3, outfit: ["skolLeatherArmour", 3], weapon: ["smashStick", [13, 12], 10, 30, 2], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else if (rnd > 0.1)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(50949, -8128, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 16, speed: 1.1, outfit: ["boulchomLeatherArmour", 2], weapon: ["thenganWarhammer", [20, 14], 16, 47, 6.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(50949, -8128, "Soldier", false, "Pit Fighting Champion", {race: "Thengar", faction: "arena3", con: 13, speed: 0.85, outfit: ["thenganPlateArmour", 18], weapon: ["longsword", [10, 7], 0, 16, 1.6], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                        }
                    }
                }
                else if (quests.pitFight == "prisoners")
                {
                    quests.pitFight = "none";
                    var rnd = Math.random();
                    if (rnd > 0.65)
                    {
                        if (Math.round(Math.random()))
                        {
                            rnd = Math.random();
                            if (rnd > 0.3333)
                            {
                                //kell soldier (prisoner)
                                ArtificialIntelligenceAccess.push(new Unit(51178, -8128, "Soldier", false, "War Prisoner", {race: "Kel", faction: "arena3", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.3, 0.35], 0, 0, 1.1], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else
                            {
                                //kell family
                                if (Math.round(Math.random()))
                                {
                                    if (Math.round(Math.random()))
                                    {
                                        ArtificialIntelligenceAccess.push(new Unit(51178, -8145, "Soldier", false, "Slave Man", {race: "Kel", faction: "arena3", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                        ArtificialIntelligenceAccess.push(new Unit(51101, -8198, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena3", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                        ArtificialIntelligenceAccess.push(new Unit(51056, -8124, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena3", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    }
                                    else
                                    {
                                        ArtificialIntelligenceAccess.push(new Unit(51048, -8191, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena3", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                        ArtificialIntelligenceAccess.push(new Unit(51077, -8171, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena3", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                        ArtificialIntelligenceAccess.push(new Unit(51079, -8218, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena3", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    }
                                }
                                else
                                {
                                    if (Math.round(Math.random()))
                                    {
                                        ArtificialIntelligenceAccess.push(new Unit(51048, -8146, "Soldier", false, "Slave Man", {race: "Kel", faction: "arena3", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                        ArtificialIntelligenceAccess.push(new Unit(51077, -8126, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena3", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                        ArtificialIntelligenceAccess.push(new Unit(51079, -8173, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena3", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    }
                                    else
                                    {
                                        ArtificialIntelligenceAccess.push(new Unit(51154, -8213, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena3", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                        ArtificialIntelligenceAccess.push(new Unit(51107, -8264, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena3", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                        ArtificialIntelligenceAccess.push(new Unit(51239, -8035, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena3", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                        ArtificialIntelligenceAccess.push(new Unit(51182, -8089, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena3", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    }
                                }
                            }
                        }
                        else
                        {
                            rnd = Math.random();
                            if (rnd > 0.3333)
                            {
                                //kell soldier (prisoner)
                                ArtificialIntelligenceAccess.push(new Unit(51178, -8128, "Soldier", false, "War Prisoner", {race: "Kel", faction: "arena3", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.3, 0.35], 0, 0, 1.1], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                            }
                            else
                            {
                                //kell family
                                if (Math.round(Math.random()))
                                {
                                    if (Math.round(Math.random()))
                                    {
                                        ArtificialIntelligenceAccess.push(new Unit(51178, -8145, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena3", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                        ArtificialIntelligenceAccess.push(new Unit(51101, -8198, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena3", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                        ArtificialIntelligenceAccess.push(new Unit(51056, -8124, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena3", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    }
                                    else
                                    {
                                        ArtificialIntelligenceAccess.push(new Unit(51048, -8191, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena3", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                        ArtificialIntelligenceAccess.push(new Unit(51077, -8171, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena3", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                        ArtificialIntelligenceAccess.push(new Unit(51079, -8218, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena3", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    }
                                }
                                else
                                {
                                    if (Math.round(Math.random()))
                                    {
                                        ArtificialIntelligenceAccess.push(new Unit(51048, -8146, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena3", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                        ArtificialIntelligenceAccess.push(new Unit(51077, -8126, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena3", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                        ArtificialIntelligenceAccess.push(new Unit(51079, -8173, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena3", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    }
                                    else
                                    {
                                        ArtificialIntelligenceAccess.push(new Unit(51154, -8213, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena3", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                        ArtificialIntelligenceAccess.push(new Unit(51107, -8264, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena3", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                        ArtificialIntelligenceAccess.push(new Unit(51239, -8035, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena3", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                        ArtificialIntelligenceAccess.push(new Unit(51182, -8089, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena3", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    }
                                }
                            }
                        }
                    }
                    else if (rnd > 0.32)
                    {
                        if (Math.round(Math.random()))
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51178, -8128, "Soldier", false, "War Prisoner", {race: "Kel", faction: "arena3", con: 1, speed: 0, outfit: ["none", 0], weapon: ["none", [0.3, 0.35], 0, 0, 1.1], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51061, -8126, "Soldier", false, "Alzkwaya Tribal", {race: "Kel", faction: "arena3", con: 14, speed: 1.5, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [8, 4], 3, 12, 0.9], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                    }
                    else
                    {
                        if (Math.round(Math.random()))
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51061, -8126, "Soldier", false, "Echlin Tribal", {race: "Kel", faction: "arena3", con: 18, speed: 1.37, outfit: ["naapridLeatherArmour", 4], weapon: ["warHammer", [16, 1], 8, 16, 1.25], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                        }
                        else
                        {
                            if (Math.round(Math.random()))
                            {
                                rnd = Math.random();
                                if (rnd > 0.65)
                                {
                                    ArtificialIntelligenceAccess.push(new Unit(51061, -8126, "Soldier", false, "Alzkwaya Tribal", {race: "Kel", faction: "arena3", con: 13, speed: 1.5, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [8, 4], 3, 12, 0.9], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(50987, -8126, "Soldier", false, "Alzkwaya Slave Man", {race: "Kel", faction: "arena3", con: 1, speed: 0, outfit: ["mofuTribalWear", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(50950, -8085, "Soldier", false, "Alzkwaya Slave Boy", {race: "Kel", faction: "arena3", con: 0.25, speed: 0, outfit: ["mofuTribalWear", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(50960, -8178, "Soldier", false, "Alzkwaya Slave Girl", {race: "Kel", faction: "arena3", con: 0.25, speed: 0, outfit: ["mofuTribalWear", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                }
                                else if (rnd > 0.32)
                                {
                                    if (Math.random() > 0.65)
                                    {
                                        ArtificialIntelligenceAccess.push(new Unit(51061, -8126, "Soldier", false, "Echlin Tribal", {race: "Kel", faction: "arena3", con: 17, speed: 1.37, outfit: ["naapridLeatherArmour", 4], weapon: ["warHammer", [16, 1], 8, 16, 1.25], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                        ArtificialIntelligenceAccess.push(new Unit(50987, -8126, "Soldier", false, "Echlin Slave Woman", {race: "Kel", faction: "arena3", con: 1, speed: 0, outfit: ["naapridLeatherArmour", 4], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                        ArtificialIntelligenceAccess.push(new Unit(50960, -8178, "Soldier", false, "Echlin Slave Boy", {race: "Kel", faction: "arena3", con: 0.25, speed: 0, outfit: ["naapridLeatherArmour", 1.5], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                        ArtificialIntelligenceAccess.push(new Unit(50950, -8085, "Soldier", false, "Echlin Slave Girl", {race: "Kel", faction: "arena3", con: 0.25, speed: 0, outfit: ["naapridLeatherArmour", 1.5], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    }
                                }
                                else
                                {
                                    ArtificialIntelligenceAccess.push(new Unit(51099, -8071, "Soldier", false, "Alzkwaya Slave Girl", {race: "Kel", faction: "arena3", con: 0.5, speed: 0.9, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [4, 0], 1, 4, 1], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51083, -8156, "Soldier", false, "Alzkwaya Slave Girl", {race: "Kel", faction: "arena3", con: 0.5, speed: 0.9, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [2, 1], 0.5, 4, 0.85], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(50992, -8109, "Soldier", false, "Echlin Slave Boy", {race: "Kel", faction: "arena3", con: 0.25, speed: 0.82, outfit: ["naapridLeatherArmour", 1.5], weapon: ["hammer", [1, 0.8], 0.35, 0, 0.9], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                }
                            }
                            else
                            {
                                rnd = Math.random();

                                if (rnd > 0.49)
                                {
                                    ArtificialIntelligenceAccess.push(new Unit(51079, -8019, "Soldier", false, "Alzkwaya Slave Girl", {race: "Kel", faction: "arena3", con: 0.5, speed: 0.95, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [4, 0.5], 1, 4, 1], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51008, -8134, "Soldier", false, "Alzkwaya Slave Girl", {race: "Kel", faction: "arena3", con: 0.25, speed: 0.85, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [3, 1], 0.5, 4, 0.85], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51130, -8114, "Soldier", false, "Echlin Slave Boy", {race: "Kel", faction: "arena3", con: 0.25, speed: 0.82, outfit: ["naapridLeatherArmour", 1.5], weapon: ["hammer", [1.5, 1], 0.25, 3, 0.9], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51059, -8298, "Soldier", false, "Echlin Slave Boy", {race: "Kel", faction: "arena3", con: 0.5, speed: 0.89, outfit: ["naapridLeatherArmour", 1.5], weapon: ["hammer", [1, 1.5], 0, 3, 0.9], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51154, -8192, "Soldier", false, "Echlin Slave Boy", {race: "Kel", faction: "arena3", con: 1, speed: 0.85, outfit: ["naapridLeatherArmour", 1.5], weapon: ["warHammer", [3.5, 2], 1, 3, 0.9], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                }
                                else
                                {
                                    ArtificialIntelligenceAccess.push(new Unit(51079, -8019, "Soldier", false, "Echlin Slave Boy", {race: "Kel", faction: "arena3", con: 0.5, speed: 0.89, outfit: ["naapridLeatherArmour", 1.5], weapon: ["hammer", [1, 1.5], 0, 3, 0.9], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51008, -8134, "Soldier", false, "Alzkwaya Slave Girl", {race: "Kel", faction: "arena3", con: 0.5, speed: 0.9, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [3, 1], 0.5, 4, 0.85], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51130, -8114, "Soldier", false, "Echlin Slave Boy", {race: "Kel", faction: "arena3", con: 1, speed: 0.85, outfit: ["naapridLeatherArmour", 1.5], weapon: ["warHammer", [3.5, 2], 1, 3, 0.9], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51059, -8298, "Soldier", false, "Alzkwaya Slave Girl", {race: "Kel", faction: "arena3", con: 0.75, speed: 1, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [3, 1.5], 0.5, 4, 0.85], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                    ArtificialIntelligenceAccess.push(new Unit(51154, -8192, "Soldier", false, "Alzkwaya Slave Girl", {race: "Kel", faction: "arena3", con: 1, speed: 1.1, outfit: ["mofuTribalWear", 0], weapon: ["kellishSawClub", [3, 1.75], 1, 4, 0.85], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                                }
                            }
                        }
                    }
                }

                //city guards
                ArtificialIntelligenceAccess.push(new Unit(51166, -7530, "Soldier", false, "Beulingerr Soldier", {race: "Thengar", faction: "Thengar", con: 5, speed: 1.15, outfit: ["chainArmour", 7], weapon: ["longsword", [8, 5], 0, 16, 1.3], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, patrolStops: 0, patrolLoop: true, route:[[-514, 277], [-514, 277]]}));
                ArtificialIntelligenceAccess.push(new Unit(51945, -8393, "Soldier", false, "Beulingerr Soldier", {race: "Thengar", faction: "Thengar", con: 8, speed: 1.34, outfit: ["chainArmour", 6.5], weapon: ["longsword", [12, 4], 0, 16, 1.45], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, patrolStops: 4, patrolLoop: true, route:[[51945, -10184], [50570, -10156], [50559, -8470], [51972, -8481]]}));
                ArtificialIntelligenceAccess.push(new Unit(51738, -9966, "Soldier", false, "Beulingerr Soldier", {race: "Thengar", faction: "Thengar", con: 6, speed: 1.27, outfit: ["chainArmour", 7.5], weapon: ["longsword", [6, 6], 0, 16, 1.25], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, patrolStops: 8, patrolLoop: true, route:[[51724, -9287], [51157, -9272], [51152, -9064], [51747, -9066], [51738, -8679], [50749, -8692], [50750, -9979], [51738, -9966]]}));
                ArtificialIntelligenceAccess.push(new Unit(52037, -7560, "Soldier", false, "Beulingerr Soldier", {race: "Thengar", faction: "Thengar", con: 7, speed: 1.38, outfit: ["chainArmour", 7], weapon: ["longsword", [10, 5], 0, 16, 1.4], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, patrolStops: 5, patrolLoop: true, route:[[53457, -7558], [53450, -7776], [50544, -7777], [50548, -6374], [53459, -6369]]}));
                ArtificialIntelligenceAccess.push(new Unit(53257, -6468, "Soldier", false, "Beulingerr Soldier", {race: "Thengar", faction: "Thengar", con: 9, speed: 1.21, outfit: ["chainArmour", 8], weapon: ["longsword", [9, 6], 0, 16, 1.3], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, patrolStops: 2, patrolLoop: true, route:[[53267, -7596], [53257, -6468]]}));
                //citizens
                //grain seller (only one on the map at once)
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Grain Farmer")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(53064, -7291, "Person", false, "Grain Farmer", {race: "Thengar", faction: "Thengar", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.3, 0.25], 0, 1, 1], ranged: [false, "arrow", 8, 2200, 5, 7, 0, "none", 2], patrolStops: 0, patrolLoop: true, route:[[2049, 1021], [1943, 1127], [1690, 1021]], merchant: true, merchandise: [[new Item("coins", false, false), 4], [new Item("harstGrain", false, false), 80]]}));
                }

                //Creatures
                ArtificialIntelligenceAccess.push(new Unit(48545, -4542, "Nog", false, "Chom-Chom"));
                ArtificialIntelligenceAccess.push(new Unit(48522, -5978, "Nog", false, "Cham-Chom"));
                ArtificialIntelligenceAccess.push(new Unit(48633, -6134, "Nog", false, "Chom-Cham"));
                ArtificialIntelligenceAccess.push(new Unit(48523, -7671, "Nog", true, "Cham-Cham"));
                ArtificialIntelligenceAccess.push(new Unit(49222, -8636, "Nog", false, "Chim-Chom"));
                ArtificialIntelligenceAccess.push(new Unit(48981, -8754, "Nog", false, "Chim-Cham"));
                ArtificialIntelligenceAccess.push(new Unit(47822, -9474, "Nog", false, "Chim-Chim"));
                ArtificialIntelligenceAccess.push(new Unit(48710, -9747, "Nog", false, "Cham-Chim"));
                ArtificialIntelligenceAccess.push(new Unit(49471, -9477, "Nog", false, "Chom-Chim"));
                ArtificialIntelligenceAccess.push(new Unit(48667, -10602, "Nog", false, "Chilm-Chom"));
                ArtificialIntelligenceAccess.push(new Unit(48479, -10688, "Nog", false, "Chom-Chalm"));
                ArtificialIntelligenceAccess.push(new Unit(48828, -10765, "Nog", true, "Cholm-Chilm"));
                ArtificialIntelligenceAccess.push(new Unit(49343, -10196, "Nog", false, "Cholm-Chim"));
                ArtificialIntelligenceAccess.push(new Unit(48547, -11796, "Nog", false, "Chilm-Chim"));
                ArtificialIntelligenceAccess.push(new Unit(48810, -11983, "Nog", true, "Chilm-Chorm"));
                ArtificialIntelligenceAccess.push(new Unit(48416, -13042, "Nog", false, "Chirm-Chim"));

                //buildings
                scenicList.push(new Scenery("thenganBuilding4", 50497, -10330, 0, true));
                scenicList.push(new Scenery("thenganBuilding1", 51258, -9800, 0, true));
                scenicList.push(new Scenery("thenganBuilding1", 51561, -9800, 0, true));
                scenicList.push(new Scenery("thenganBuilding3", 51052, -9548, 0, true));
                scenicList.push(new Scenery("thenganBuilding3", 51052, -9055, 0, true));
                scenicList.push(new Scenery("thenganBuilding2", 51561, -8874, 0, true));
                scenicList.push(new Scenery("thenganBuilding2", 51258, -8874, 0, true));
                scenicList.push(new Scenery("thenganBuilding5", 51561, -9506, 0, true));
                scenicList.push(new Scenery("thenganBuilding2", 51258, -9530, 0, true));
                scenicList.push(new Scenery("thenganBuilding3", 51486, -6942, 0, true));
                scenicList.push(new Scenery("thenganBuilding5", 51084, -6942, 0, true));
                scenicList.push(new Scenery("thenganBuilding2", 51238, -7205, 0, true));
                scenicList.push(new Scenery("thenganBuilding3", 51025, -7344, 0, true));
                scenicList.push(new Scenery("thenganBuilding1", 51234, -7398, 0, true));
                scenicList.push(new Scenery("thenganBuilding1", 51556, -7356, 0, true));
                scenicList.push(new Scenery("thenganBuilding1", 51858, -7356, 0, true));
                scenicList.push(new Scenery("thenganBuilding1", 52160, -7356, 0, true));
                scenicList.push(new Scenery("thenganBuilding1", 52462, -7356, 0, true));
                scenicList.push(new Scenery("thenganBuilding1", 52764, -7356, 0, true));
                scenicList.push(new Scenery("thenganBuilding5", 53066, -7282, 0, true));
                scenicList.push(new Scenery("thenganBuilding2", 51858, -7206, 0, true));
                scenicList.push(new Scenery("thenganBuilding2", 52160, -7206, 0, true));
                scenicList.push(new Scenery("thenganBuilding2", 52462, -7206, 0, true));
                scenicList.push(new Scenery("thenganBuilding2", 52764, -7206, 0, true));
                scenicList.push(new Scenery("thenganBuilding1", 51858, -6896, 0, true));
                scenicList.push(new Scenery("thenganBuilding1", 52160, -6896, 0, true));
                scenicList.push(new Scenery("thenganBuilding1", 52462, -6896, 0, true));
                scenicList.push(new Scenery("thenganBuilding1", 52764, -6896, 0, true));
                scenicList.push(new Scenery("thenganBuilding5", 53066, -6812, 0, true));
                scenicList.push(new Scenery("thenganBuilding2", 51858, -6746, 0, true));
                scenicList.push(new Scenery("thenganBuilding2", 52160, -6746, 0, true));
                scenicList.push(new Scenery("thenganBuilding2", 52462, -6746, 0, true));
                scenicList.push(new Scenery("thenganBuilding2", 52764, -6746, 0, true));
                scenicList.push(new Scenery("thenganBuilding1", 52793, -6224, 0, true));
                //the residential zone
                scenicList.push(new Scenery("bed", 52833, -7184, 0 * Math.PI, false));
                scenicList.push(new Scenery("bed", 52531, -7184, 0 * Math.PI, false));
                scenicList.push(new Scenery("bed", 52229, -7184, 0 * Math.PI, false));
                scenicList.push(new Scenery("bed", 51927, -7184, 0 * Math.PI, false));
                scenicList.push(new Scenery("bed", 52700, -7384, 0 * Math.PI, false));
                scenicList.push(new Scenery("bed", 52398, -7384, 0 * Math.PI, false));
                scenicList.push(new Scenery("bed", 52096, -7384, 0 * Math.PI, false));
                scenicList.push(new Scenery("bed", 51794, -7384, 0 * Math.PI, false));
                scenicList.push(new Scenery("bed", 51492, -7384, 0 * Math.PI, false));
                scenicList.push(new Scenery("thenganHearth", 51617, -7286, 0 * Math.PI, "lit"));
                scenicList.push(new Scenery("bed", 52833, -7184 + 460, 1 * Math.PI, false));
                scenicList.push(new Scenery("bed", 52531, -7184 + 460, 1 * Math.PI, false));
                scenicList.push(new Scenery("bed", 52229, -7184 + 460, 1 * Math.PI, false));
                scenicList.push(new Scenery("bed", 51927, -7184 + 460, 1 * Math.PI, false));
                scenicList.push(new Scenery("bed", 52700, -7384 + 460, 1 * Math.PI, false));
                scenicList.push(new Scenery("bed", 52398, -7384 + 460, 1 * Math.PI, false));
                scenicList.push(new Scenery("bed", 52096, -7384 + 460, 1 * Math.PI, false));
                scenicList.push(new Scenery("bed", 51794, -7384 + 460, 1 * Math.PI, false));
                //the inn
                scenicList.push(new Scenery("thenganHearth", 50281, -10331, 1/2 * Math.PI, "lit"));
                scenicList.push(new Scenery("bed", 50471, -10423, 0 * Math.PI, false));
                scenicList.push(new Scenery("bed", 50471, -10240, 1 * Math.PI, false));
                scenicList.push(new Scenery("bartop", 50563, -10381, 1 * Math.PI, false));
                //the well
                scenicList.push(new Scenery("thenganWell", 50927, -9830, 0, false));
                //the sand pit
                scenicList.push(new Scenery("thenganSandbox", 51254, -8126, 0, false));
                //blacksmithy
                scenicList.push(new Scenery("anvil", 51345, -9360, Math.PI * 5/8, true));
                scenicList.push(new Scenery("forge", 51178, -9377, Math.PI * 1/4, true));
                scenicList.push(new Scenery("countertop", 51179, -9536, 1/2 * Math.PI, false));
                scenicList.push(new Scenery("countertop", 51337, -9536, 1/2 * Math.PI, false));
                if (uniqueChars.dagmarLDS)
                {
                    scenicList.push(new Scenery("item", 51182, -9502, 0, "thengar", ["longSpikedMorningStar", 1, -100]));
                    scenicList.push(new Scenery("item", 51180, -9555, 0, "thengar", ["longsword", 1, -70]));
                    scenicList.push(new Scenery("item", 51334, -9496, 0, "thengar", ["thenganDagger", 1, -50]));
                    scenicList.push(new Scenery("item", 51334, -9563, 0, "thengar", ["smashStick", 1, -90]));
                }
                //butcher's shop
                scenicList.push(new Scenery("countertop", 51642, -9415, 1/2 * Math.PI, false));
                if (uniqueChars.gerlachLDS)
                {
                    scenicList.push(new Scenery("item", 51643, -9367, 0, "thengar", ["rawHoffalgreFlesh", 1, -15]));
                    scenicList.push(new Scenery("item", 51642, -9387, 0, "thengar", ["rawBearFlesh", 1, -15]));
                    scenicList.push(new Scenery("item", 51643, -9409, 0, "thengar", ["rawBearTongue", 1, -15]));
                    scenicList.push(new Scenery("item", 51644, -9453, 0, "thengar", ["rawBoulchomFlesh", 1, -10]));
                    scenicList.push(new Scenery("item", 51642, -9429, 0, "thengar", ["rawRabbitFlesh", 1, -10]));
                }
                //tailor shop
                scenicList.push(new Scenery("loom", 51324, -9747, 3/4 * Math.PI, true));
                scenicList.push(new Scenery("countertop", 51177, -9823, 1/2 * Math.PI, false));
                scenicList.push(new Scenery("countertop", 51205, -9823, 1/2 * Math.PI, false));
                scenicList.push(new Scenery("item", 51192, -9785, 0, "thengar", ["boulchomPelt", 1, -20]));
                scenicList.push(new Scenery("item", 51192, -9825, 0, "thengar", ["boulchomPelt", 1, -20]));
                scenicList.push(new Scenery("item", 51192, -9865, 0, "thengar", ["hoffalgrePelt", 1, -15]));
                //balgurMercsHQ
                scenicList.push(new Scenery("bed", 51449, -6847, 0 * Math.PI, false));
                scenicList.push(new Scenery("bed", 51449, -7038, 1 * Math.PI, false));
                scenicList.push(new Scenery("bed", 51315, -6847, 0 * Math.PI, false));
                scenicList.push(new Scenery("bed", 51315, -7038, 1 * Math.PI, false));
                scenicList.push(new Scenery("bed", 51149, -6847, 0 * Math.PI, false));
                scenicList.push(new Scenery("bed", 51149, -7038, 1 * Math.PI, false));
                scenicList.push(new Scenery("bed", 51022, -6847, 0 * Math.PI, false));
                scenicList.push(new Scenery("bed", 51022, -7038, 1 * Math.PI, false));
                scenicList.push(new Scenery("bed", 51304, -7173, 0 * Math.PI, false));
                scenicList.push(new Scenery("thenganHearth", 51240, -7276, Math.PI, "lit"));
                //playerPurchasableHome
                if (quests.lethikHomeOwned)
                {
                    scenicList.push(new Scenery("bed", 51329, -8839, 0 * Math.PI, true));
                    scenicList.push(new Scenery("thenganHearth", 51181, -8925, 1/2 * Math.PI, true));
                    scenicList.push(new Scenery("sign", 51186, -8775, Math.PI, 3, "Battlecry Cabin"));
                }
                else
                {
                    scenicList.push(new Scenery("bed", 51329, -8839, 0 * Math.PI, false));
                    scenicList.push(new Scenery("thenganHearth", 51181, -8925, 1/2 * Math.PI, false));
                    scenicList.push(new Scenery("sign", 51186, -8775, Math.PI, 3, "For Sale - 5500 coins"));
                }
                //barracks
                scenicList.push(new Scenery("bed", 51449 - 465, -6847 - 396, 0 * Math.PI, false));
                scenicList.push(new Scenery("bed", 51449 - 465, -7038 - 407, 1 * Math.PI, false));
                scenicList.push(new Scenery("bed", 51315 - 465, -6847 - 396, 0 * Math.PI, false));
                scenicList.push(new Scenery("bed", 51315 - 465, -7038 - 407, 1 * Math.PI, false));
                //apothecary
                scenicList.push(new Scenery("thenganHearth", 51564, -8943, 1 * Math.PI, "lit"));
                scenicList.push(new Scenery("lab", 51562, -8874, 0 * Math.PI, true));
                scenicList.push(new Scenery("countertop", 51642, -8897, -1/2 * Math.PI, false));
                if (uniqueChars.johannaLDS)
                {
                    scenicList.push(new Scenery("item", 51642, -8947, 0, "thengar", ["lizardTail", 1, -10]));
                    scenicList.push(new Scenery("item", 51642, -8921, 0, "thengar", ["steugiurneFlower", 1, -30]));
                    scenicList.push(new Scenery("item", 51640, -8892, 0, "thengar", ["thalisLeaf", 1, -15]));
                    scenicList.push(new Scenery("item", 51641, -8870, 0, "thengar", ["viperSnakeSkin", 1, -20]));
                    scenicList.push(new Scenery("item", 51643, -8850, 0, "thengar", ["kofkeLeaves", 1, -20]));
                }
                //city prison
                scenicList.push(new Scenery("trapdoor", 53014, -6700, 0 * Math.PI, [379, 424], "lethikCityPrison"));
                if (quests.rutgarSlave)
                {
                    quests.rutgarSlave = false;
                    var slavesSex = Math.round(Math.random());
                    if (slavesSex)
                    {
                        var slaveName = prompt("Your slave has been procured, but what is her name?", "Ailey");
                    }
                    else
                    {
                        var slaveName = prompt("Your slave has been procured, but what is his name?", "Connor");
                    }

                    if (typeof(slaveName) == "undefined" || slaveName == "")
                    {
                        if (slavesSex)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(53014, -6700, "Soldier", false, "Slave Woman", {race: "Kel", faction: "player", con: 1.25, speed: 1.15, outfit: ["none", 0], weapon: ["none", [0.3, 0.25], 0, 1, 1], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: 0, patrolStops: 0, patrolLoop: false, route:[], storage: true, storageCap: 1, merchant: true, merchandise: []}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(53014, -6700, "Soldier", false, "Slave Man", {race: "Kel", faction: "player", con: 3, speed: 1, outfit: ["none", 0], weapon: ["none", [0.3, 0.25], 0, 1, 1], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: 0, patrolStops: 0, patrolLoop: false, route:[], storage: true, storageCap: 1, merchant: true, merchandise: []}));
                        }


                    }
                    else
                    {
                        if (slavesSex)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(53014, -6700, "Soldier", false, slaveName + ", " + player.name + "'s Slave", {race: "Kel", faction: "player", con: 1.25, speed: 1.15, outfit: ["none", 0], weapon: ["none", [0.3, 0.25], 0, 1, 1], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: 0, patrolStops: 0, patrolLoop: false, route:[], storage: true, storageCap: 1, merchant: true, merchandise: []}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(53014, -6700, "Soldier", false, slaveName + ", " + player.name + "'s Slave", {race: "Kel", faction: "player", con: 3, speed: 1, outfit: ["none", 0], weapon: ["none", [0.3, 0.25], 0, 1, 1], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: 0, patrolStops: 0, patrolLoop: false, route:[], storage: true, storageCap: 1, merchant: true, merchandise: []}));
                        }
                    }

                }

                //bar patrons
                ArtificialIntelligenceAccess.push(new Unit(50603, -10342, "Person", false, "Thengar Villager", {race: "Thengar", faction: "Thengar", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.4, 0.45], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[50603, -10366]]}));
                ArtificialIntelligenceAccess.push(new Unit(50662, -10304, "Person", false, "Thengar Villager", {race: "Thengar", faction: "Thengar", personality: "calculated", outfit: ["hoffalgreFurCloak", 0], weapon: ["none", [0.45, 0.55], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[50682, -10303]]}));
                ArtificialIntelligenceAccess.push(new Unit(50664, -10342, "Person", false, "Thengar Villager", {race: "Thengar", faction: "Thengar", personality: "calculated", outfit: ["hoffalgreFurCloak", 0], weapon: ["none", [0.4, 0.5], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[50692, -10337]]}));

                //Lethik interiors
                //bank
                scenicList.push(new Scenery("woodenBench", 50953, -9114, 0 * Math.PI, 1));
                scenicList.push(new Scenery("stumpStoolSml", 50956, -9143, 0 * Math.PI, 1));
                scenicList.push(new Scenery("stumpStoolSml", 50954, -9086, 0 * Math.PI, 1));
                scenicList.push(new Scenery("crate", 50883, -9176, 2.626/4 * 2 * Math.PI, 1, [1.27]));
                scenicList.push(new Scenery("crate", 51013, -9174, 0.3/4 * 2 * Math.PI, 1, [1.39]));
                scenicList.push(new Scenery("crate", 51004, -9014, -0.55/4 * 2 * Math.PI, 1, [1.1]));
                scenicList.push(new Scenery("crate", 50969, -8942, 3/4 * 2 * Math.PI, 1, [1.22]));
                scenicList.push(new Scenery("crate", 50891, -8967, 3.7/4 * 2 * Math.PI, 1, [1]));
                //butcher's
                scenicList.push(new Scenery("crate", 51524, -9594, 0.25/4 * 2 * Math.PI, 1, [1.43]));
                scenicList.push(new Scenery("crate", 51618, -9602, -0.11/4 * 2 * Math.PI, 1, [1.29]));
                scenicList.push(new Scenery("crate", 51517, -9507, 3.56/4 * 2 * Math.PI, 1, [1.05]));
                scenicList.push(new Scenery("blood", 51541, -9411, 0 * Math.PI, 5, 1.2));
                //shop
                scenicList.push(new Scenery("crate", 50998, -9657, 0.35/4 * 2 * Math.PI, 1, [1.35]));
                scenicList.push(new Scenery("crate", 50891, -9672, 8.5/4 * 2 * Math.PI, 1, [1.25]));
                scenicList.push(new Scenery("crate", 50949, -9600, 3.97/4 * 2 * Math.PI, 1, [1.25]));
                scenicList.push(new Scenery("crate", 50989, -9449, -3.7777/4 * 2 * Math.PI, 1, [1.055]));
                scenicList.push(new Scenery("crate", 50901, -9434, 3.7675747/4 * 2 * Math.PI, 1, [1.4]));
                //huntShop
                scenicList.push(new Scenery("crate", 51515, -9757, 2.2/4 * 2 * Math.PI, 1, [1.2]));
                scenicList.push(new Scenery("mediumTable", 51482, -9855, 0 * Math.PI, 1));
                scenicList.push(new Scenery("item", 51490, -9864, 0, "thengar", ["spindletrap", 1, -39]));
                scenicList.push(new Scenery("item", 51482, -9835, 0, "thengar", ["beartrap", 1, -15]));
                scenicList.push(new Scenery("item", 51515, -9836, 0, "thengar", ["beartrap", 1, -15]));
                scenicList.push(new Scenery("item", 51520, -9850, 0, "thengar", ["jacks", 3, -11]));
                scenicList.push(new Scenery("item", 51520, -9871, 0, "thengar", ["clawtrap", 1, -21]));
                scenicList.push(new Scenery("woodenBench", 51640, -9770, 1/2 * Math.PI, 1));
                scenicList.push(new Scenery("item", 51640, -9738, 0, "thengar", ["longbow", 1, -26]));
                scenicList.push(new Scenery("item", 51636, -9773, 0, "thengar", ["steelArrow", 2, -12]));
                scenicList.push(new Scenery("item", 51636, -9782, 0, "thengar", ["steelArrow", 2, -12]));
                scenicList.push(new Scenery("item", 51636, -9791, 0, "thengar", ["steelArrow", 2, -12]));
                scenicList.push(new Scenery("item", 51636, -9800, 0, "thengar", ["steelArrow", 2, -12]));
                scenicList.push(new Scenery("item", 51636, -9809, 0, "thengar", ["steelArrow", 2, -12]));
                scenicList.push(new Scenery("item", 51636, -9814, 0, "thengar", ["arrow", 8, -13]));
                scenicList.push(new Scenery("item", 51636, -9822, 0, "thengar", ["arrow", 8, -13]));
                //prison
                scenicList.push(new Scenery("crate", 53135, -6936, 0.04/4 * 2 * Math.PI + Math.PI, 1, [1.5]));
                //farm house
                scenicList.push(new Scenery("crate", 53124, -7173, -0.09/4 * 2 * Math.PI, 1, [1.15]));
                scenicList.push(new Scenery("crate", 53026, -7194, 0.22/4 * 2 * Math.PI, 1, [1.425]));
                scenicList.push(new Scenery("bed", 52985, -7388, 0 * Math.PI, false));
                scenicList.push(new Scenery("smallTable", 53136, -7412, 0.045 * Math.PI, 0));
                scenicList.push(new Scenery("stumpStoolSml", 53097, -7415, 0.5 * Math.PI, 1));
                scenicList.push(new Scenery("thenganHearth", 52985, -7277, 1/2 * Math.PI, "lit"));
                //inn
                scenicList.push(new Scenery("woodenBench", 50718, -10330, 1/2 * Math.PI, 1));
                scenicList.push(new Scenery("crate", 50302, -10124, 1.5/4 * 2 * Math.PI, 1, [1.23]));
                scenicList.push(new Scenery("crate", 50290, -10550, 0.0025/4 * 2 * Math.PI, 1, [1.23]));
                scenicList.push(new Scenery("mediumTable", 50549, -10267, 0.0025 * Math.PI, 0));
                scenicList.push(new Scenery("stumpStoolSml", 50593, -10268, 2 * Math.PI, 1));
                scenicList.push(new Scenery("stumpStoolSml", 50522, -10262, 3 * Math.PI, 1));
                scenicList.push(new Scenery("stumpStoolSml", 50562, -10311, 3 * Math.PI, 1));
                scenicList.push(new Scenery("stumpStoolSml", 50687, -10365, -1 * Math.PI, 1));
                scenicList.push(new Scenery("stumpStoolSml", 50690, -10336, 1.5 * Math.PI, 1));
                scenicList.push(new Scenery("stumpStoolSml", 50688, -10302, 1 * Math.PI, 1));
                if (Math.round(Math.random()))
                {
                    scenicList.push(new Scenery("item", 50610, -10389, 0, "thengar", ["hoffalgreMeat", 1, -12]));
                    if (Math.round(Math.random()))
                    {
                        scenicList.push(new Scenery("item", 50591, -10394, 0, "thengar", ["harstAle", 1, -3]));
                    }
                    else
                    {
                        scenicList.push(new Scenery("item", 50591, -10394, 0, "thengar", ["pintGlass", 1, -1]));
                    }
                }
                else
                {
                    scenicList.push(new Scenery("item", 50610, -10389, 0, "thengar", ["velHarstBread", 1, -19]));
                    scenicList.push(new Scenery("item", 50591, -10394, 0, "thengar", ["harstAle", 1, -3]));
                    if (Math.round(Math.random()))
                    {
                        scenicList.push(new Scenery("item", 50591, -10394, 0, "thengar", ["harstAle", 1, -3]));
                    }
                    else
                    {
                        scenicList.push(new Scenery("item", 50591, -10394, 0, "thengar", ["pintGlass", 1, -1]));
                    }
                }

                if (Math.round(Math.random()))
                {
                    scenicList.push(new Scenery("item", 50711, -10329, 0, "thengar", ["harstAle", 1, -3]));
                }
                else
                {
                    scenicList.push(new Scenery("item", 50711, -10329, 0, "thengar", ["pintGlass", 1, -1]));
                }

                if (Math.round(Math.random()))
                {
                    scenicList.push(new Scenery("item", 50716, -10292, 0, "thengar", ["harstAle", 1, -3]));
                }
                else
                {
                    scenicList.push(new Scenery("item", 50716, -10292, 0, "thengar", ["pintGlass", 1, -1]));
                }

                //signs
                scenicList.push(new Scenery("sign", 50710, -10222, Math.PI, 3, "The Ragged Wanderer - Inn"));
                scenicList.push(new Scenery("sign", 51307, -9427, Math.PI, 3, "Bonecrusher Arms/Armour"));
                scenicList.push(new Scenery("sign", 51631, -9904, -0 * Math.PI, 3, "Bamey's Hunt Shop"));
                scenicList.push(new Scenery("sign", 51193, -9902, -0 * Math.PI, 3, "The Careful Stiches"));
                scenicList.push(new Scenery("sign", 51677, -9586, 1/2 * Math.PI, 3, "The Meatery"));
                scenicList.push(new Scenery("sign", 50834, -9593, -1/2 * Math.PI, 3, "Lethik General Store"));
                scenicList.push(new Scenery("sign", 50834, -8972, -1/2 * Math.PI, 3, "Lethik City Bank"));
                scenicList.push(new Scenery("sign", 51631, -8771, Math.PI, 3, "Sweet Leaf Apothecary"));
                scenicList.push(new Scenery("sign", 50805, -7419, -1/2 * Math.PI, 3, "Lethik City Barracks"));
                scenicList.push(new Scenery("sign", 51292, -7496, -0 * Math.PI, 3, "Lethik City Barracks"));
                scenicList.push(new Scenery("sign", 53180, -7371, 1/2 * Math.PI, 3, "Redbrick Farm - Produce Shop/Farm"));
                scenicList.push(new Scenery("sign", 53180, -6750, 1/2 * Math.PI, 3, "Lethik City Prison"));

                //leaping beasts
                ArtificialIntelligenceAccess.push(new Unit(51835, -4394, "Boulchom", true, "Chraular"));
                ArtificialIntelligenceAccess.push(new Unit(54848, -10379, "Boulchom", false, "Graw"));
                ArtificialIntelligenceAccess.push(new Unit(56007, -4941, "Boulchom", false, "Grew"));

                //fuzzy bunnies
                ArtificialIntelligenceAccess.push(new Unit(51199, -5791, "Conejo", true, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(49944, -6433, "Conejo", false, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(51472, -11115, "Conejo", true, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(52512, -10540, "Conejo", false, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(52555, -9697, "Conejo", false, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(52975, -8101, "Conejo", true, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(54535, -6473, "Conejo", true, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(54245, -5778, "Conejo", false, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(53112, -10408, "Conejo", false, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(52474, -11869, "Conejo", true, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(50198, -11730, "Conejo", false, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(56994, -9547, "Conejo", false, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(56103, -7759, "Conejo", true, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(57216, -7422, "Conejo", false, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(52782, -9167, "Conejo", false, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(51403, -13049, "Conejo", true, "neutral2"));

                //sun baskers basking in the sun
                ArtificialIntelligenceAccess.push(new Unit(53162, -12293, "Thueg", true, "Dillo"));
                ArtificialIntelligenceAccess.push(new Unit(52521, -12553, "Thueg", false, "Arma"));
                ArtificialIntelligenceAccess.push(new Unit(50330, -12849, "Thueg", true, "Dallo"));
                ArtificialIntelligenceAccess.push(new Unit(51547, -12505, "Thueg", "baby", "Dal"));
                ArtificialIntelligenceAccess.push(new Unit(52152, -13314, "Thueg", false, "Calma"));
                ArtificialIntelligenceAccess.push(new Unit(56617, -11499, "Thueg", false, "Gal"));
                ArtificialIntelligenceAccess.push(new Unit(56999, -12395, "Thueg", "baby", "Dol"));
                ArtificialIntelligenceAccess.push(new Unit(55838, -12139, "Thueg", "baby", "Dil"));
                ArtificialIntelligenceAccess.push(new Unit(56498, -6155, "Thueg", true, "Dollo"));
                ArtificialIntelligenceAccess.push(new Unit(56493, -5432, "Thueg", false, "Gallo"));
                ArtificialIntelligenceAccess.push(new Unit(49215, -5067, "Thueg", false, "Gillo"));

                //Plants
                //flora silvestre
                scenicList.push(new Scenery("vorlymPlant", 56069, -4971, 1.2, false));
                scenicList.push(new Scenery("galloshPlant", 54769, -6544, 6, false));
                scenicList.push(new Scenery("galloshPlant", 51798, -5305, 0, false));
                scenicList.push(new Scenery("vorlymPlant", 50130, -12600, -4.4, false));
                scenicList.push(new Scenery("galloshPlant", 56590, -12133, 3, false));
                scenicList.push(new Scenery("vorlymPlant", 55622, -10570, 2.81, false));
                scenicList.push(new Scenery("galloshPlant", 53651, -12192, 5.5, false));
                scenicList.push(new Scenery("galloshPlant", 51235, -11803, -2.6, false));
                //Farms
                //Cursed Farm
                if (uniqueChars.vsevolodLDS == false)
                {
                    scenicList.push(new Scenery("suuliPlant", 52958, -6076, 0, "thengar"));
                    scenicList.push(new Scenery("suuliPlant", 53028, -6076, -4, "thengar"));
                    scenicList.push(new Scenery("suuliPlant", 53114, -6076, 1, "thengar"));
                    scenicList.push(new Scenery("suuliPlant", 53214, -6076, 3.15, "thengar"));
                    scenicList.push(new Scenery("santhPlant", 53301, -6080, 1, "thengar"));
                    scenicList.push(new Scenery("santhPlant", 53342, -6080, 5, "thengar"));
                    scenicList.push(new Scenery("santhPlant", 53400, -6080, 2, "thengar"));
                    scenicList.push(new Scenery("santhPlant", 53462, -6080, 3, "thengar"));
                    scenicList.push(new Scenery("santhPlant", 53370, -6055, 0, "thengar"));
                    scenicList.push(new Scenery("santhPlant", 53432, -6053, 4, "thengar"));
                    scenicList.push(new Scenery("santhPlant", 53316, -6050, -3, "thengar"));
                    scenicList.push(new Scenery("santhPlant", 53478, -6050, -6, "thengar"));

                    //carrots row 1
                    scenicList.push(new Scenery("carrotPlant", 52936, -6158, -0.5, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 17, -6158, 4.5, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 34, -6158, 2.5, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 51, -6158, 5, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 68, -6158, 2, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 85, -6158, -2.5, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 102, -6158, 4, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 119, -6158, -3.25, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 136, -6158, 3, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 153, -6158, 1.5, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 170, -6158, -5, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 187, -6158, -2, "thengar"));
                    //carrots row 2
                    scenicList.push(new Scenery("carrotPlant", 52936, -6158 + 10, -4.3, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 17, -6158 + 20, 2.3, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 34, -6158 + 20, 2, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 51, -6158 + 20, 8, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 68, -6158 + 20, 6, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 85, -6158 + 20, -5, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 102, -6158 + 20, 3, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 119, -6158 + 20, -21, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 136, -6158 + 20, 6, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 153, -6158 + 20, 7.5, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 170, -6158 + 20, -2, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 187, -6158 + 20, -3, "thengar"));
                    //carrots row 3
                    scenicList.push(new Scenery("carrotPlant", 52936, -6158 - 20, -0.9, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 17, -6158 - 20, 4.4, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 34, -6158 - 20, 4.9, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 51, -6158 - 20, 1.3, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 68, -6158 - 20, 3.6, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 85, -6158 - 20, -12.2, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 102, -6158 - 20, 2.6, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 119, -6158 - 20, -2, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 136, -6158 - 20, 1, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 153, -6158 - 20, 6, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 170, -6158 - 20, -7, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 187, -6158 - 20, -4, "thengar"));

                    //carrots row 1
                    scenicList.push(new Scenery("carrotPlant", 52936, -6158 - 95, -0.5, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 17, -6158 - 95, 4.5, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 34, -6158 - 95, 2.5, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 51, -6158 - 95, 5, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 68, -6158 - 95, 2, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 85, -6158 - 95, -2.5, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 102, -6158 - 95, 4, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 119, -6158 - 95, -3.25, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 136, -6158 - 95, 3, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 153, -6158 - 95, 1.5, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 170, -6158 - 95, -5, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 187, -6158 - 95, -2, "thengar"));
                    //carrots row 2
                    scenicList.push(new Scenery("carrotPlant", 52936, -6158 - 75, -4.3, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 17, -6158 - 75, 2.3, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 34, -6158 - 75, 2, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 51, -6158 - 75, 8, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 68, -6158 - 75, 6, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 85, -6158 - 75, -5, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 102, -6158 - 75, 3, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 119, -6158 - 75, -21, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 136, -6158 - 75, 6, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 153, -6158 - 75, 7.5, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 170, -6158 - 75, -2, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 187, -6158 - 75, -3, "thengar"));
                    //carrots row 3
                    scenicList.push(new Scenery("carrotPlant", 52936, -6158 - 115, -0.9, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 17, -6158 - 115, 4.4, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 34, -6158 - 115, 4.9, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 51, -6158 - 115, 1.3, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 68, -6158 - 115, 3.6, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 85, -6158 - 115, -12.2, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 102, -6158 - 115, 2.6, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 119, -6158 - 115, -2, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 136, -6158 - 115, 1, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 153, -6158 - 115, 6, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 170, -6158 - 115, -7, "thengar"));
                    scenicList.push(new Scenery("carrotPlant", 52936 + 187, -6158 - 115, -4, "thengar"));

                    scenicList.push(new Scenery("potatoPlant", 53220, -6287, -1.1, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 30, -6287, -5, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 60, -6287, 3.72, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 90, -6287, 1.8, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 120, -6287, 6.72, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 150, -6287, -5, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 180, -6287, 5, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 210, -6287, 1, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 240, -6287, -3, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 270, -6287, -9, "thengar"));

                    scenicList.push(new Scenery("potatoPlant", 53220, -6287 + 70, -4.1, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 30, -6287 + 70, -5, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 60, -6287 + 70, 7.62, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 90, -6287 + 70, 11, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 120, -6287 + 70, 32, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 150, -6287 + 70, -3, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 180, -6287 + 70, 4, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 210, -6287 + 70, 1, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 240, -6287 + 70, -7, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 270, -6287 + 70, -55, "thengar"));

                    scenicList.push(new Scenery("potatoPlant", 53220, -6287 + 140, -2, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 30, -6287 + 140, -3, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 60, -6287 + 140, 1.46, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 90, -6287 + 140, 7.9, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 120, -6287 + 140, -3.6, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 150, -6287 + 140, 4.75, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 180, -6287 + 140, -5, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 210, -6287 + 140, -1, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 240, -6287 + 140, 1.7, "thengar"));
                    scenicList.push(new Scenery("potatoPlant", 53220 + 270, -6287 + 140, 4, "thengar"));
                }
                //redbrick farm
                //column 1
                scenicList.push(new Scenery("harstPlant", 53546 - 10, -7267, 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 - 10, -7267 - (44 * 1), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 - 10, -7267 - (44 * 2), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 - 10, -7267 - (44 * 3), 4, "thengar"));

                scenicList.push(new Scenery("harstPlant", 53546 - 10, -7267 - (44 * 5), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 - 10, -7267 - (44 * 6), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 - 10, -7267 - (44 * 7), 4, "thengar"));

                scenicList.push(new Scenery("harstPlant", 53546 - 10, -7267 - (44 * 9), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 - 10, -7267 - (44 * 10), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 - 10, -7267 - (44 * 11), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 - 10, -7267 - (44 * 12), 4, "thengar"));

                //column 2
                scenicList.push(new Scenery("harstPlant", 53546 + 70, -7267, 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 70, -7267 - (44 * 1), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 70, -7267 - (44 * 2), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 70, -7267 - (44 * 3), 4, "thengar"));

                scenicList.push(new Scenery("harstPlant", 53546 + 70, -7267 - (44 * 5), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 70, -7267 - (44 * 6), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 70, -7267 - (44 * 7), 4, "thengar"));

                scenicList.push(new Scenery("harstPlant", 53546 + 70, -7267 - (44 * 9), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 70, -7267 - (44 * 10), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 70, -7267 - (44 * 11), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 70, -7267 - (44 * 12), 4, "thengar"));

                //column 3
                scenicList.push(new Scenery("harstPlant", 53546 + 150, -7267, 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 150, -7267 - (44 * 1), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 150, -7267 - (44 * 2), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 150, -7267 - (44 * 3), 4, "thengar"));

                scenicList.push(new Scenery("harstPlant", 53546 + 150, -7267 - (44 * 5), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 150, -7267 - (44 * 6), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 150, -7267 - (44 * 7), 4, "thengar"));

                scenicList.push(new Scenery("harstPlant", 53546 + 150, -7267 - (44 * 9), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 150, -7267 - (44 * 10), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 150, -7267 - (44 * 11), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 150, -7267 - (44 * 12), 4, "thengar"));

                //column 4
                scenicList.push(new Scenery("harstPlant", 53546 + 230, -7267, 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 230, -7267 - (44 * 1), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 230, -7267 - (44 * 2), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 230, -7267 - (44 * 3), 4, "thengar"));

                scenicList.push(new Scenery("harstPlant", 53546 + 230, -7267 - (44 * 5), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 230, -7267 - (44 * 6), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 230, -7267 - (44 * 7), 4, "thengar"));

                scenicList.push(new Scenery("harstPlant", 53546 + 230, -7267 - (44 * 9), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 230, -7267 - (44 * 10), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 230, -7267 - (44 * 11), 4, "thengar"));
                scenicList.push(new Scenery("harstPlant", 53546 + 230, -7267 - (44 * 12), 4, "thengar"));
                //scenicList.push(new Scenery("haeflowerPlant", 15185, 4442, 4, true));

                change = "s1w5";
            }
        }
        else if (region == "s2w5")
        {
            if (change != "s2w5")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee || ArtificialIntelligenceAccess[i].team == "arena1" || ArtificialIntelligenceAccess[i].team == "arena2" || ArtificialIntelligenceAccess[i].team == "arena3")
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //characters
                //unique AND non-unique only by necessity
                if (quests.lethikHanzRestored == true)
                {
                    if (uniqueChars.hanzLDS == true)
                    {
                        var hits = 0;
                        for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                        {
                            if (ArtificialIntelligenceAccess[i].ID == "Master Hanz of Beulingerr")
                            {
                                hits += 1;
                            }
                        }
                        if (hits == 0)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(51163.344108947895, -17434.104393046102, "Person", false, "Master Hanz of Beulingerr", {race: "Thengar", faction: "Thengar", personality: "calculated", outfit: ["boulchomLeatherArmour", 2.5], weapon: ["none", [0.03, 0.03], 0, 0, 1], ranged: [false, "arrow", 8, 2200, 5, 7, 0, "none", 2], patrolStops: 1, patrolLoop: false, route:[[51143.10528022211, -17415.811817174665]]}));
                            ArtificialIntelligenceAccess[i].health = 8;
                        }
                    }
                }

                if (uniqueChars.hanzChildLDS == true && quests.hanzChild == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "[ " + quests.hanzChildName + " ]")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(50958.387714003904, -17583.743554043962, "Person", false, "[ " + quests.hanzChildName + " ]", {race: player.raceName, faction: "Thengar", personality: "scared", outfit: ["boulchomLeatherArmour", 0.9], weapon: ["none", [0.25, 0.25], 0, 0, 1.3], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[50958.90713732814, -17571.478617217566]], kid: true}));
                        ArtificialIntelligenceAccess[i].health = 1.5;
                    }
                }



                if (player.gamemode == "protagonist")
                {
                    ArtificialIntelligenceAccess.push(new Unit(51179.95648489057, -18223.398333135712, "Soldier", false, "Birthday guest", {race: "Kel", faction: "loner", con: 1, speed: 1, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(51262.15123196404, -17857.65551897758, "Soldier", false, "Birthday guest", {race: "Kel", faction: "loner", con: 0.25, speed: 1, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(51296.28596957222, -17798.71270264655, "Soldier", false, "Birthday guest", {race: "Kel", faction: "loner", con: 1, speed: 1, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(51212.37513444989, -17820.42104102751, "Soldier", false, "Birthday guest", {race: "Kel", faction: "loner", con: 0.25, speed: 1, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));

                    ArtificialIntelligenceAccess.push(new Unit(50928.239379441264, -18129.686504034762, "Soldier", false, "Birthday guest", {race: "Kel", faction: "loner", con: 1, speed: 1, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(50682.9136336489, -18404.924325711105, "Soldier", false, "Birthday guest", {race: "Kel", faction: "loner", con: 1, speed: 1, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(50536.72400985568, -18272.239160849163, "Soldier", false, "Birthday Girl", {race: "Kel", faction: "loner", con: 0.25, speed: 1, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));

                    ArtificialIntelligenceAccess.push(new Unit(51183.08339986864, -18519.83257973238, "Soldier", false, "Birthday guest", {race: "Kel", faction: "loner", con: 1, speed: 1, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(50827.94524048814, -17594.569711000953, "Soldier", false, "Edgy Emo Goth Chick", {race: "Vardan", faction: "loner", con: 1, speed: 1, outfit: ["varnFurClothing", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 1, patrolLoop: false, route:[[50837.036948365894, -17584.39891653539]]}));
                    ArtificialIntelligenceAccess.push(new Unit(50886.11965600879, -18590.90056741665, "Soldier", false, "Birthday guest", {race: "Kel", faction: "loner", con: 1, speed: 1, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));

                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(51179.95648489057, -18223.398333135712, "Soldier", false, "Slave Man", {race: "Kel", faction: "loner", con: 1, speed: 1, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(51262.15123196404, -17857.65551897758, "Soldier", false, "Slave Boy", {race: "Kel", faction: "loner", con: 0.25, speed: 1, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(51296.28596957222, -17798.71270264655, "Soldier", false, "Slave Woman", {race: "Kel", faction: "loner", con: 1, speed: 1, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(51212.37513444989, -17820.42104102751, "Soldier", false, "Slave Girl", {race: "Kel", faction: "loner", con: 0.25, speed: 1, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));

                    ArtificialIntelligenceAccess.push(new Unit(50928.239379441264, -18129.686504034762, "Soldier", false, "Slave Man", {race: "Kel", faction: "loner", con: 1, speed: 1, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(50682.9136336489, -18404.924325711105, "Soldier", false, "Slave Woman", {race: "Kel", faction: "loner", con: 1, speed: 1, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(50536.72400985568, -18272.239160849163, "Soldier", false, "Slave Girl", {race: "Kel", faction: "loner", con: 0.25, speed: 1, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));

                    ArtificialIntelligenceAccess.push(new Unit(51183.08339986864, -18519.83257973238, "Soldier", false, "Slave Man", {race: "Kel", faction: "loner", con: 1, speed: 1, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                    ArtificialIntelligenceAccess.push(new Unit(50827.94524048814, -17594.569711000953, "Soldier", false, "Ichlahomda", {race: "Kel", faction: "loner", con: 1, speed: 1, outfit: ["varnFurClothing", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 1, patrolLoop: false, route:[[50837.036948365894, -17584.39891653539]]}));
                    ArtificialIntelligenceAccess.push(new Unit(50886.11965600879, -18590.90056741665, "Soldier", false, "Slave Man", {race: "Kel", faction: "loner", con: 1, speed: 1, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                }

                //city guards
                ArtificialIntelligenceAccess.push(new Unit(51166, -7530, "Soldier", false, "Beulingerr Soldier", {race: "Thengar", faction: "Thengar", con: 5, speed: 1.15, outfit: ["chainArmour", 7], weapon: ["longsword", [8, 5], 0, 16, 1.3], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, patrolStops: 0, patrolLoop: true, route:[[-514, 277], [-514, 277]]}));
                ArtificialIntelligenceAccess.push(new Unit(51945, -8393, "Soldier", false, "Beulingerr Soldier", {race: "Thengar", faction: "Thengar", con: 8, speed: 1.34, outfit: ["chainArmour", 6.5], weapon: ["longsword", [12, 4], 0, 16, 1.45], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, patrolStops: 4, patrolLoop: true, route:[[51945, -10184], [50570, -10156], [50559, -8470], [51972, -8481]]}));

                //Creatures
                //ArtificialIntelligenceAccess.push(new Unit(48545, -4542, "Nog", false, "Chom-Chom"));

                //buildings
                scenicList.push(new Scenery("thenganBuilding4", 50952.21876496255 - 152, -17563.48775587589 + 50, 0, true));
                scenicList.push(new Scenery("thenganBuilding3", 51187.283320822404 + 70, -17436.4769991973 + 60, 0, true));
                scenicList.push(new Scenery("thenganBuilding1", 51254.08200296437, -17886.34715189713 + 40, 0, true));

                if (quests.lethikHanzMarried == true)
                {
                    scenicList.push(new Scenery("fineBed", 51205.574791729276 - 20, -17264.593596797826 - 15, -1/2 * Math.PI, true, 1));
                    scenicList.push(new Scenery("fineBed", 51205.574791729276 - 20, -17264.593596797826 - 50, -1/2 * Math.PI, true, 1));
                    scenicList.push(new Scenery("fineBed", 50611.087733934946 - 15, -17704.830075102782, Math.PI, true, 1));
                    scenicList.push(new Scenery("drawerB", 51221.682135427596 + 14, -17497.851459438843, 0, 3, [1.55, "hanzDrawer2", 6, [], false, 0]));
                    scenicList.push(new Scenery("drawerB", 51090.13433516202, -17240.438142506537, 1/2 * Math.PI, 3, [1.55, "hanzDrawer3", 6, [], false, 0]));
                    scenicList.push(new Scenery("drawerB", 50775.33144794008, -17601.40919267769, 0, 3, [1.55, "hanzDrawer4", 6, [], false, 0]));
                    scenicList.push(new Scenery("loom", 51095.27751626207, -17495.55820738738, 3/5 * Math.PI, true));
                    scenicList.push(new Scenery("loom", 50756.75606937152, -17719.83932159072, 1/5 * Math.PI, true));
                }
                else
                {
                    scenicList.push(new Scenery("fineBed", 51205.574791729276 - 20, -17264.593596797826 - 15, -1/2 * Math.PI, false, 1));
                    scenicList.push(new Scenery("fineBed", 51205.574791729276 - 20, -17264.593596797826 - 50, -1/2 * Math.PI, false, 1));
                    scenicList.push(new Scenery("fineBed", 50611.087733934946 - 15, -17704.830075102782, Math.PI, false, 1));
                    scenicList.push(new Scenery("drawerB", 51221.682135427596 + 14, -17497.851459438843, 0, 1, [1.55]));
                    scenicList.push(new Scenery("drawerB", 51090.13433516202, -17240.438142506537, 1/2 * Math.PI, 1, [1.55]));
                    scenicList.push(new Scenery("drawerB", 50775.33144794008, -17601.40919267769, 0, 1, [1.55]));
                    scenicList.push(new Scenery("loom", 51095.27751626207, -17495.55820738738, 3/5 * Math.PI, false));
                    scenicList.push(new Scenery("loom", 50756.75606937152, -17719.83932159072, 1/5 * Math.PI, false));
                }
                scenicList.push(new Scenery("bed", 50759.770203091015, -17316.670178454657, 0, false));

                scenicList.push(new Scenery("woodenBench", 50587.95342726742 - 4, -17402.801581791166 + 10, 1/2 * Math.PI, 1));
                scenicList.push(new Scenery("woodenBench", 50583.00082165551, -17341.983170983345 + 10, 1/2 * Math.PI, 1));
                scenicList.push(new Scenery("smallTable", 50602.31914070535 - 14, -17449.262631164158 - 5, Math.PI, 1));
                scenicList.push(new Scenery("smallTable", 50602.31914070535 + 21, -17449.262631164158 - 5, Math.PI, 1));

                scenicList.push(new Scenery("smallTable", 50826.009295263306 - 4, -17447.42517126783 + 4, Math.PI, 1));

                scenicList.push(new Scenery("smallTable", 51214.42275645069, -17387.921746165954, 1/2 * Math.PI, 1));
                scenicList.push(new Scenery("oilLamp", 51214.42275645069 + 4, -17387.921746165954 - 3, -2.9314159 * Math.PI, true, [1000, 2]));

                scenicList.push(new Scenery("woodenBench", 50684.075724590984, -17736.357169480583 - 6, Math.PI, 1));
                scenicList.push(new Scenery("oilLamp", 50753.25195874327 + 24.5, -17588.441650342385, -1.9224149 * Math.PI, true, [1000, 2]));

                //the well
                //scenicList.push(new Scenery("thenganWell", 50927, -9830, 0, false));

                //scenicList.push(new Scenery("countertop", 51642, -8897, -1/2 * Math.PI, false));

                //ArtificialIntelligenceAccess.push(new Unit(50603, -10342, "Person", false, "Thengar Villager", {race: "Thengar", faction: "Thengar", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.4, 0.45], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[50603, -10366]]}));

                scenicList.push(new Scenery("item", 50825.763414011824, -17443.516842105408 , 0, "thengar", ["berulnSkull", 1, -25]));
                //scenicList.push(new Scenery("smallTable", 53136, -7412, 0.045 * Math.PI, 0));
                scenicList.push(new Scenery("thenganHearth", 51020, -17516, -1/2 * Math.PI, "lit"));
                //scenicList.push(new Scenery("woodenBench", 50718, -10330, 1/2 * Math.PI, 1));
                //scenicList.push(new Scenery("crate", 50290, -10550, 0.0025/4 * 2 * Math.PI, 1, [1.23]));
                //scenicList.push(new Scenery("mediumTable", 50549, -10267, 0.0025 * Math.PI, 0));
                scenicList.push(new Scenery("stumpStoolSml", 51141.10873556455, -17489.869267960446, 1 * Math.PI, 1));
                scenicList.push(new Scenery("stumpStoolSml", 50716.97839531122, -17688.463224878804, 1 * Math.PI, 1));

                //signs
                scenicList.push(new Scenery("sign", 50849, -17395 - 10, Math.PI, 3, "Master Hanz's Estate"));

                ArtificialIntelligenceAccess.push(new Unit(51444.79595695257, -18312.584700259704, "Soldier", false, "Beulingerr Soldier", {race: "Thengar", faction: "Thengar", con: 6, speed: 1.3, outfit: ["chainArmour", 7.5], weapon: ["longsword", [10, 6], 0, 16, 1.4], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, patrolStops: 0, patrolLoop: false, route:[]}));
                ArtificialIntelligenceAccess.push(new Unit(51137.4213879315, -17173.24733532316, "Soldier", false, "Beulingerr Soldier", {race: "Thengar", faction: "Thengar", con: 6, speed: 1.3, outfit: ["chainArmour", 7.5], weapon: ["longsword", [10, 6], 0, 16, 1.4], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, patrolStops: 1, patrolLoop: false, route:[51135.672562431995, -17138.215643546486]}));
                ArtificialIntelligenceAccess.push(new Unit(50132.33554380641, -18142.16824571496, "Soldier", false, "Beulingerr Soldier", {race: "Thengar", faction: "Thengar", con: 6, speed: 1.3, outfit: ["chainArmour", 7.5], weapon: ["longsword", [10, 6], 0, 16, 1.4], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, patrolStops: 1, patrolLoop: false, route:[50177.646210515326, -18153.690313679974]}));

                //leaping beasts
                ArtificialIntelligenceAccess.push(new Unit(52851.07680661046, -15566.01196931189, "Boulchom", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(53278.086487407156, -17499.88159767438, "Boulchom", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(56595.329716381704, -18585.48310731894, "Boulchom", true, "preBuilt"));

                //fuzzy bunnies
                ArtificialIntelligenceAccess.push(new Unit(51410.193023157626, -16862.37073025137, "Conejo", true, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(49887.156387586314, -16521.722209539017, "Conejo", false, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(49363.94314032468, -17890.962711886725, "Conejo", true, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(50055.865135511296, -18309.583058584914, "Conejo", false, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(50141.67139029875, -19388.209010617527, "Conejo", true, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(49267.27562709055, -19494.73094191716, "Conejo", true, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(49891.67211969955, -20164.42442152324, "Conejo", false, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(48830.37491428079, -20577.80918343987, "Conejo", true, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(48636.6588910616, -21763.86150642056, "Conejo", false, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(50351.183785241294, -22068.29046314775, "Conejo", false, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(51083.77053004774, -21605.280485405015, "Conejo", true, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(52844.553889279916, -22681.06469454945, "Conejo", false, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(52990.58825982892, -21185.9384108894, "Conejo", false, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(54350.48697836207, -20232.374731606786, "Conejo", false, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(55104.471466954725, -19317.76647128289, "Conejo", false, "neutral2"));
                ArtificialIntelligenceAccess.push(new Unit(52377.54922595536, -16068.648408738623, "Conejo", false, "neutral2"));

                //sun baskers basking in the sun
                ArtificialIntelligenceAccess.push(new Unit(52462.62308439578, -18232.215921082283, "Thueg", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(53325.428937786346, -18977.609628416467, "Thueg", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(54441.95119398309, -18367.105672354515, "Thueg", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(55073.529553833716, -17053.07877663746, "Thueg", "baby", "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(56418.97212674992, -15517.179163381208, "Thueg", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(55655.973299603196, -14272.92619933836, "Thueg", true, "preBuilt"));

                //Plants
                //flora silvestre
                scenicList.push(new Scenery("galloshPlant", 52594.311927833616, -16095.45791089152, 0.40865706236296423, 0));
                scenicList.push(new Scenery("galloshPlant", 52924.82245602937, -16368.683433004435, 4.879284342069474, 0));
                scenicList.push(new Scenery("vorlymPlant", 53250.67895190364, -16082.223602431684, 3.0195687599972754, 0));
                scenicList.push(new Scenery("vorlymPlant", 53841.311176593175, -16679.291464741185, 5.916832670755593, 0));
                scenicList.push(new Scenery("galloshPlant", 54693.85521929732, -16708.92025999494, 0.1928257613391401, 0));
                scenicList.push(new Scenery("vorlymPlant", 55315.394354826676, -16018.401740833466, 3.6900837040697043, 0));
                scenicList.push(new Scenery("vorlymPlant", 55897.544607335345, -15048.256867075146, 3.0914710261905434, 0));
                scenicList.push(new Scenery("vorlymPlant", 56963.148629800926, -16743.467931628966, 6.110993927482205, 0));
                scenicList.push(new Scenery("galloshPlant", 56667.4187742036, -18207.788170348467, 6.0532469921364065, 0));
                scenicList.push(new Scenery("vorlymPlant", 55726.956201221954, -19455.26421777284, 0.20435454266758837, 0));
                scenicList.push(new Scenery("galloshPlant", 54653.96174630907, -19858.964246574786, 6.178649333863466, 0));
                scenicList.push(new Scenery("vorlymPlant", 53693.18848509903, -19821.637604657022, 4.9377082820782086, 0));
                scenicList.push(new Scenery("vorlymPlant", 53559.038608363844, -19933.94365833898, 5.170216990489441, 0));
                scenicList.push(new Scenery("galloshPlant", 56378.75697063421, -21698.01477169757, 2.525861300509192, 0));
                scenicList.push(new Scenery("galloshPlant", 55617.72935225897, -22087.13866581917, 5.945667295570987, 0));
                scenicList.push(new Scenery("vorlymPlant", 55881.55762103505, -22568.169296230913, 2.407502238557517, 0));
                scenicList.push(new Scenery("galloshPlant", 56795.128521480605, -23347.11342796734, 3.987149936910246, 0));
                scenicList.push(new Scenery("vorlymPlant", 57287.18565373689, -23103.219622162884, 2.0292416736303, 0));
                scenicList.push(new Scenery("vorlymPlant", 54755.04152783804, -23157.276828448863, 3.321051185322233, 0));
                scenicList.push(new Scenery("galloshPlant", 53901.43048493201, -23207.220362330027, 4.971432774733972, 0));
                scenicList.push(new Scenery("vorlymPlant", 54322.093887172516, -22861.97406554746, 0.7803073439147524, 0));
                scenicList.push(new Scenery("galloshPlant", 53656.51968951969, -22427.616126730143, 1.4384924403337502, 0));
                scenicList.push(new Scenery("galloshPlant", 52315.24659948676, -22111.379019165404, 6.15596754007661, 0));
                scenicList.push(new Scenery("galloshPlant", 51213.62918818491, -22712.93476619524, 0.2990006925384412, 0));
                scenicList.push(new Scenery("vorlymPlant", 50242.980561749, -22994.056902780132, 1.9313666696530545, 0));
                scenicList.push(new Scenery("vorlymPlant", 49152.179556845054, -23555.09273107336, 3.785298016924506, 0));
                scenicList.push(new Scenery("galloshPlant", 49000.79903035162, -22202.986912249333, 0.883380227418619, 0));
                scenicList.push(new Scenery("vorlymPlant", 50592.4736585556, -21510.93937446758, 4.329176880336672, 0));
                scenicList.push(new Scenery("vorlymPlant", 50673.274875264666, -20363.513216679097, 5.656408116343633, 0));
                scenicList.push(new Scenery("galloshPlant", 49365.47846636224, -19959.681484833174, 2.1361871076312755, 0));
                scenicList.push(new Scenery("galloshPlant", 48379.130206031274, -18469.381109242215, 5.679972754242756, 0));
                scenicList.push(new Scenery("galloshPlant", 49248.275586033145, -17655.843400343638, 2.9798433624124785, 0));
                scenicList.push(new Scenery("vorlymPlant", 49246.91833351866, -15482.342150053777, 5.111930000773011, 0));
                scenicList.push(new Scenery("vorlymPlant", 49246.91833351866, -15482.342150053777, 3.0688266992169537, 0));

                for (var i = 0; i < 15; i++)
                {
                    scenicList.push(new Scenery("suuliPlant", 51345.94450614859 - 76 * i, -18078.099390228628, 0, "thengar"));
                }

                for (var j = 0; j < 3; j++)
                {
                    for (var i = 0; i < 20; i++)
                    {
                        scenicList.push(new Scenery("carrotPlant", 51339.77742181595 - 55 * i, -18166.314516782444 - 60 * j, 0, "thengar"));
                    }
                }

                for (var j = 0; j < 3; j++)
                {
                    for (var i = 0; i < 20; i++)
                    {
                        scenicList.push(new Scenery("potatoPlant", 51341.86132441727 - 55 * i, -18355.081177264317 - 60 * j, 0, "thengar"));
                    }
                }

                for (var j = 0; j < 2; j++)
                {
                    for (var i = 0; i < 24; i++)
                    {
                        scenicList.push(new Scenery("harstPlant", 51344.93221059554 - 46 * i, -18528.418025060386 - 60 * j, 0, "thengar"));
                    }
                }

                change = "s2w5";
            }
        }
        else if (region == "s2w8")
        {
            if (change != "s2w8")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee || ArtificialIntelligenceAccess[i].team == "arena1" || ArtificialIntelligenceAccess[i].team == "arena2" || ArtificialIntelligenceAccess[i].team == "arena3")
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //characters

                generator(5, 5, 5, 5, 5, 1, 88316, -14094); //forest in map s-2-w-8

                scenicList.push(new Scenery("pineTree", 76856.40585, -16824.168225,0.5970630902809072, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 77290.570425, -21863.06475,1.3230052422130156, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 76771.9884, -22159.506675,4.659510698197746, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 77171.226525, -18832.4742,0.8347297184213204, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 76605.30045, -21081.4365,4.797084809662158, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 78079.934325, -23773.380299999997,6.184375268767304, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 77129.943075, -19054.595775,1.9989831973555643, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 76882.031775, -15783.663825,1.5871298107340899, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 76642.969575, -17155.213875,0.5633115630872328, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 78035.162325, -19057.206825,3.3417090598481702, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 77458.576575, -14834.220525,1.42388385032604, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 77148.20385, -21493.53195,1.3570572815970234, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 76723.12725, -19008.51825,2.1004225510533385, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 76602.8181, -23008.1145,1.399170520353988, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 77447.27925, -16005.88095,2.8070107550766674, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 77786.68845, -23059.137225,6.0928286398544635, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 77175.204525, -14727.571125,2.5234475735715685, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 77597.459475, -17741.3322,2.9871183834697317, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 77602.036125, -20015.965275,4.888511197780336, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 77825.04495, -14614.371675,5.854491649763044, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 76801.364175, -17822.8695,6.1541238871217, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 76630.856175, -14595.8496,5.1416895628152615, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 78040.039275, -14590.265775,0.7319079121058838, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 77767.856325, -22323.076575,5.983951274772723, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 77169.375975, -18865.4994,2.654694316342579, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 77799.417075, -23799.897375,2.400606785386512, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 76963.535925, -14921.72775,1.0079233523231494, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 77456.698725, -15840.225525,3.496546542180225, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 76603.4577, -19215.7116,1.2969232533202413, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 76724.744775, -20269.250775,5.270431643770939, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 76736.7051, -16045.357725,1.2421649898148697, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 77456.6529, -23374.167525,5.5608897676577556, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 77501.7837, -23686.239675,3.050515506311948, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 76909.852425, -23058.251925,3.5303785019078187, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 76967.874675, -22661.475675,5.401878861225163, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 77538.413475, -18643.999875,5.135242700664763, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 77452.9674, -21278.5308,4.905968661426923, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 77126.011875, -17887.36185,1.2706685959599564, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 77533.598925, -23309.51235,5.518281364833703, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 77349.827025, -17040.2682,3.7581326728560067, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 77766.633675, -21011.83905,0.4715530475182589, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 76637.95125, -20170.416975,3.1128650495878976, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 76614.080325, -22825.75635,0.9497761796447786, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 77055.88305, -16983.3906,2.8407750601674335, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 77730.9672, -21296.473725,4.275451237865636, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 76853.63685, -23793.610575,4.616218301643651, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 78016.188825, -21848.92335,5.941449857888433, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 76614.768675, -23113.108350000002,4.77937880453965, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 76746.214275, -19940.136599999998,5.548282461633776, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 77827.78665, -22455.2778,0.7895029359738057, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 77517.156525, -22778.6541,0.9618645870255026, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 77354.912625, -15045.678525,4.649617255966315, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 77708.798625, -20803.86375,2.3280885637119586, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 76782.059175, -17855.883975,6.1041003219218535, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 77922.608325, -14873.185425,3.5190159130196395, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 76704.94545, -23186.33475,4.156973082578348, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 77483.171925, -20455.559625,2.5077232529806506, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 77340.671775, -17348.40135,1.6126031329384005, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("kofkePlant", 77028.938925, -22553.077125,0.7395716072873075, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("kofkePlant", 77783.93115, -22637.4312,2.6671865689443424, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("kofkePlant", 76864.71285, -21043.8366,0.24289383166851766, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("steugiurnePlant", 77790.40027499999, -15055.55625,3.6396710320449253, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("steugiurnePlant", 76678.991925, -18647.209575,2.4495464808138427, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("callopPlant", 77982.48015, -18599.294175,5.586520056311841, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("callopPlant", 77162.123925, -20101.0584,3.869141252987177, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("darbPlant", 78064.85985, -23306.7804,0.46555795002212746, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 78132.02154498016, -13989.686548211726,true, undefined, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 77417.19175704995, -14145.986738123169,true, undefined, undefined)); //copied s2w7

                scenicList.push(new Scenery("pineTree", 77465.411625, -5229.267400000001,1.2125262135391324, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77489.5302, -13310.169775,3.1626716087971345, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77534.28465, -4220.75665,2.8760548610253216, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77154.864375, -7103.394850000001,1.6389180704337538, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77931.011175, -5493.9448,4.927521273342498, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77450.4873, -3989.534425,4.496919814835384, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77554.438875, -4541.983075,5.1065021958613475, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77686.284225, -6689.6614,5.704135022259123, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77310.73665, -12555.379375,5.80359707029561, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77139.747975, -8514.8848,3.759729217009807, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 76992.55905, -6141.25705,0.8987911874283595, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 78005.01075, -13628.3971,4.855854163716566, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77102.733075, -10590.4336,0.8184099021686593, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77264.61915, -8351.768275,4.167980263244314, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77733.912975, -11593.25815,3.6083069390366376, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 78038.97975, -5679.6433,0.6153187253751464, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77837.598375, -10994.5204,1.5263784962229305, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77936.900175, -8321.1484,2.340015645050513, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77762.012475, -4750.129,4.001476161728869, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77916.88635, -10415.6395,6.082122409162122, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77824.09755, -10207.765599999999,4.861109377907997, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77628.979575, -5966.602375,3.923202265777833, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77465.514975, -9130.9054,4.7582850296217565, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77860.4007, -8551.311775,0.2097849127327612, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77969.1639, -11952.844975,1.247092075612964, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77139.46815, -5992.078149999999,6.2681876276114386, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77267.16, -9490.806175,4.913891501295326, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77142.370725, -5495.691025,2.3637989736800606, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77241.105075, -5393.560750000001,5.721186305176301, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77184.52095, -9036.073975,1.3531953446916698, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77838.263325, -5592.919975,1.5846399248608556, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 76944.67875, -12458.039275000001,0.7926874014303233, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77067.7101, -13410.741025,5.76765113896951, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77059.9335, -12362.35375,2.751421681370563, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77650.2843, -5245.917475,2.2606452701451465, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77260.6938, -9199.288,4.498435224992993, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77833.2216, -10734.1408,6.101953463081696, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77968.79145, -13580.8132,0.941559772142151, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77997.636825, -10413.323875,3.819431091101093, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77841.6417, -7009.001200000001,4.367578041645107, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77617.3215, -8814.622225,3.704507271826932, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 76941.02445, -9219.307675,6.027170593585847, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77819.449725, -11449.204825,1.5696734658226021, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77874.8463, -6353.2474,2.12503786057829, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 76984.280325, -11045.014675,4.145781416056117, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77667.497925, -11483.57845,5.154175785040256, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77079.216075, -6430.363075,0.29097172075220756, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77878.056975, -9353.064025,1.039515418157638, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77376.809475, -6079.171975,1.4954571878482983, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77453.736, -8456.463775,4.769037917311458, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77034.08625, -13624.3879,3.4715482823241945, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77120.953875, -11740.83805,2.1816335876795305, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77335.054125, -8630.158075,1.0515373828397916, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77368.1778, -13642.611625000001,5.521057197784117, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77609.124675, -10128.791575,0.7680980758559796, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77832.087675, -6405.15445,2.797379548946916, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77302.2249, -10628.5561,3.4362181210211618, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77807.72145, -8753.49265,4.1478890388811065, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77832.309, -6488.344375,2.7694891053835864, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77591.3982, -12252.7423,1.3097786969457479, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("kofkePlant", 77236.635675, -7084.8055,0.31632161941598763, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77175.204525, -14727.571125,3.5859991120014225, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77825.04495, -14614.371675,5.330247690643934, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 78040.039275, -14590.265775,3.51327992039562, true, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 78132.02154498016, -13989.686548211726,true, undefined, undefined)); //copied s1w7
                scenicList.push(new Scenery("pineTree", 77417.19175704995, -14145.986738123169,true, undefined, undefined)); //copied s1w7

                trimmer(97314.18130135114, -18015.666414757754, 87994.01651179291, -18352.91406583303, true);
                trimmer(88309.6011635884, -17401.217333102522, 87964.09903299411, -18338.846038486725, true);
                trimmer(88331.40735295211, -17382.497887386096, 84673.16663283715, -17760.13605621381, true);
                trimmer(84663.93870745416, -16500.781558940318, 82255.53437967291, -16849.08817963043, true);
                trimmer(79705.29039282196, -15283.114470417191, 78414.07955709107, -15649.865696463581, true);

                scenicList.push(new Scenery("pineTree", 88561.47564153263, -20729.121215752777, 5.5476944429862804, true));
                scenicList.push(new Scenery("pineTree", 88234.5968575341, -21097.69600339669, 4.714643619859908, true));
                scenicList.push(new Scenery("pineTree", 85898.9343945714, -20861.17535497355, 2.7043125274266244, true));
                scenicList.push(new Scenery("pineTree", 88248.66786133235, -18582.06791491618, 1.7039829025597673, true));
                scenicList.push(new Scenery("pineTree", 88297.95401488605, -19688.886505824838, 4.186803795056108, true));
                scenicList.push(new Scenery("pineTree", 88138.0858902515, -16031.70175066493, 0.8100273766458589, true));
                scenicList.push(new Scenery("pineTree", 78609.90604345646, -14539.401670068328, 1.1981425082890667, true));
                scenicList.push(new Scenery("pineTree", 87719.52674857227, -17077.9703926173, 0.8452535057252852, true));
                scenicList.push(new Scenery("pineTree", 88438.64403246908, -17827.134698585407, 2.399837723497978, true));
                scenicList.push(new Scenery("pineTree", 88597.27181704625, -17571.296484213166, 6.250815813128376, true));
                scenicList.push(new Scenery("pineTree", 87270.7270078705, -17101.18663181724, 0.9672335775184355, true));
                scenicList.push(new Scenery("pineTree", 86987.66192147069, -16520.876973575167, 5.156631803255083, true));
                scenicList.push(new Scenery("pineTree", 87341.25389582642, -16428.26510248533, 2.846549447653556, true));
                scenicList.push(new Scenery("pineTree", 87232.31930629796, -15934.54220427138, 3.000555012318174, true));
                scenicList.push(new Scenery("pineTree", 86963.10147723462, -15572.658349509313, 0.36369261534898706, true));
                scenicList.push(new Scenery("pineTree", 87360.01069188089, -15440.619774112049, 2.810449072959387, true));
                scenicList.push(new Scenery("pineTree", 87706.51171877178, -15356.732760491135, 5.665180944276956, true));
                scenicList.push(new Scenery("pineTree", 87310.43111860678, -15097.054464821706, 2.4344878078362737, true));
                scenicList.push(new Scenery("pineTree", 87522.77531241797, -14825.56891366562, 2.781070105816097, true));
                scenicList.push(new Scenery("pineTree", 86871.34534178698, -15223.351060725803, 5.224282341553212, true));
                scenicList.push(new Scenery("pineTree", 86618.71634436568, -15106.214005419464, 6.049066305584239, true));
                scenicList.push(new Scenery("pineTree", 86329.37389367144, -15312.707357609428, 1.5533665544764248, true));
                scenicList.push(new Scenery("pineTree", 86104.32694990824, -15056.61879657816, 1.5513460401993135, true));
                scenicList.push(new Scenery("pineTree", 85716.78263334832, -15250.973815095485, 4.404755702363511, true));
                scenicList.push(new Scenery("pineTree", 85806.58673775857, -14829.458731528579, 3.4365872896641743, true));
                scenicList.push(new Scenery("pineTree", 86033.67024784625, -14558.08498250649, 4.740104142855565, true));
                scenicList.push(new Scenery("pineTree", 86472.40023312725, -14494.009850051301, 3.0725226589886683, true));
                scenicList.push(new Scenery("pineTree", 86457.79463214969, -14154.22887158194, 3.182747615817503, true));
                scenicList.push(new Scenery("pineTree", 86907.01757601996, -13976.99577980707, 5.8046863113057885, true));
                scenicList.push(new Scenery("pineTree", 87301.8677682247, -14309.470011088639, 3.93323332845234, true));
                scenicList.push(new Scenery("pineTree", 85383.58465167951, -14973.865501180973, 1.068041431061536, true));
                scenicList.push(new Scenery("pineTree", 85239.17189571288, -14693.108614554583, 0.8257087243901753, true));
                scenicList.push(new Scenery("pineTree", 85623.69388659307, -14449.26662351192, 4.5393188235484585, true));
                scenicList.push(new Scenery("pineTree", 85671.23486771478, -14005.932116515782, 1.0316115325454356, true));
                scenicList.push(new Scenery("pineTree", 84889.63405438204, -14017.292013437884, 2.4514371788567915, true));
                scenicList.push(new Scenery("pineTree", 84774.7366572294, -14321.976185915126, 5.555849057249382, true));
                scenicList.push(new Scenery("pineTree", 84247.83053809628, -14111.093536586428, 0.8223895340785845, true));
                scenicList.push(new Scenery("pineTree", 83807.97983293034, -13986.32740738229, 0.41808629433097716, true));
                scenicList.push(new Scenery("pineTree", 83484.46885245567, -14229.603560098765, 1.7834519865760254, true));
                scenicList.push(new Scenery("pineTree", 83152.63217597496, -14029.893135179793, 5.251795572057743, true));
                scenicList.push(new Scenery("pineTree", 82642.91561566711, -14439.226370113389, 0.16101688142498852, true));
                scenicList.push(new Scenery("pineTree", 82394.61620022247, -14100.106227989154, 5.837968017933949, true));
                scenicList.push(new Scenery("pineTree", 81900.02209339631, -13949.351659969523, 2.6530388680100714, true));
                scenicList.push(new Scenery("pineTree", 80878.62932532212, -13989.676332087043, 3.82034763323807, true));
                scenicList.push(new Scenery("pineTree", 80569.55452587476, -14272.0159752516, 1.1083439153728856, true));
                scenicList.push(new Scenery("pineTree", 80939.11063337381, -14379.101530413856, 3.848494890709684, true));
                scenicList.push(new Scenery("pineTree", 80741.20781132832, -14760.542286182814, 4.7922530808812684, true));
                scenicList.push(new Scenery("pineTree", 81212.19405856825, -14977.03185117287, 0.7490578997858985, true));
                scenicList.push(new Scenery("pineTree", 80147.75366567528, -14830.28267353069, 0.9669018573384027, true));
                scenicList.push(new Scenery("pineTree", 79422.74494816818, -14238.79473551018, 1.213366095022044, true));
                scenicList.push(new Scenery("pineTree", 79837.66174464788, -13940.725680959054, 2.4275464877419917, true));
                scenicList.push(new Scenery("pineTree", 78647.9070510673, -14983.081474028164, 1.439122089203607, true));
                scenicList.push(new Scenery("pineTree", 79644.77317309716, -15883.89213107014, 1.643639707608543, true));
                scenicList.push(new Scenery("pineTree", 80444.4467771295, -16052.310416156677, 3.583889296750231, true));
                scenicList.push(new Scenery("pineTree", 80518.34077181268, -17360.844917783892, 3.939922440069712, true));
                scenicList.push(new Scenery("pineTree", 79911.35688253677, -17539.111132041347, 1.2909017645689558, true));
                scenicList.push(new Scenery("pineTree", 79629.34231457186, -17945.788866140552, 0.853077583582474, true));
                scenicList.push(new Scenery("pineTree", 79273.01447783067, -17757.20934671277, 0.09979243651234342, true));
                scenicList.push(new Scenery("pineTree", 79080.96890276595, -18136.581943261557, 5.816221605434862, true));
                scenicList.push(new Scenery("pineTree", 78803.91986859402, -17502.667578510012, 0.5003436186229147, true));
                scenicList.push(new Scenery("pineTree", 79199.01955308374, -17291.455946765273, 4.582764711247912, true));
                scenicList.push(new Scenery("pineTree", 78766.89219676492, -17120.479070448066, 6.196603511453619, true));
                scenicList.push(new Scenery("pineTree", 79465.52368075367, -16968.54492051646, 1.5950061491055552, true));
                scenicList.push(new Scenery("pineTree", 81960.86023852252, -15834.731995953762, 2.9222552676786933, true));
                scenicList.push(new Scenery("pineTree", 82718.64156156649, -15588.784585345462, 0.5991388805940238, true));
                scenicList.push(new Scenery("pineTree", 83684.33963815418, -15681.067638619556, 3.0152619054763456, true));
                scenicList.push(new Scenery("pineTree", 83937.93619804061, -16086.216245749254, 2.104778454284151, true));
                scenicList.push(new Scenery("pineTree", 83627.85259749708, -16051.223479314573, 4.592697655712175, true));
                scenicList.push(new Scenery("pineTree", 84065.90054592183, -15413.439547068583, 3.1441467251492656, true));
                scenicList.push(new Scenery("pineTree", 83745.66362461775, -15256.910726387854, 4.549730828348339, true));
                scenicList.push(new Scenery("pineTree", 83986.45064516914, -15040.161805160915, 4.566403680476862, true));
                scenicList.push(new Scenery("pineTree", 84389.9177845483, -15016.247500730426, 1.8647004536277927, true));
                scenicList.push(new Scenery("pineTree", 83890.95547340935, -14732.333313716148, 1.8461775788316277, true));
                scenicList.push(new Scenery("pineTree", 83305.69484938883, -14782.542028777767, 5.205958957470581, true));
                scenicList.push(new Scenery("pineTree", 83117.6194929812, -15005.350017770987, 3.1087791684511883, true));
                scenicList.push(new Scenery("pineTree", 82870.72045889174, -14794.729463622903, 2.558342638845747, true));
                scenicList.push(new Scenery("pineTree", 82148.00631415338, -15050.605494439435, 0.7522786422921601, true));
                scenicList.push(new Scenery("pineTree", 81789.61088906159, -15166.482476516228, 5.389868023419855, true));
                scenicList.push(new Scenery("pineTree", 81859.48520329529, -14785.47674979845, 3.0804906300067767, true));
                scenicList.push(new Scenery("pineTree", 84934.79941966245, -15309.374979532628, 4.846322677216445, true));
                scenicList.push(new Scenery("pineTree", 85283.03665280307, -15548.621880395807, 3.1207691452765984, true));
                scenicList.push(new Scenery("pineTree", 84645.4726163956, -15921.857325266375, 3.9458295027549712, true));
                scenicList.push(new Scenery("pineTree", 84607.47824250974, -16156.763736104065, 1.228130541472279, true));
                scenicList.push(new Scenery("pineTree", 85388.67797074575, -16164.089869508494, 1.1004648548759948, true));
                scenicList.push(new Scenery("pineTree", 85653.620433852, -15964.582259676517, 2.962927868764261, true));
                scenicList.push(new Scenery("pineTree", 86213.47715689438, -15646.99960446825, 2.0423033743359014, true));
                scenicList.push(new Scenery("pineTree", 88431.2334001757, -15852.54987271492, 1.4239814851127743, true));
                scenicList.push(new Scenery("pineTree", 88404.22636944565, -16503.23684801952, 3.794766407263473, true));
                scenicList.push(new Scenery("pineTree", 88255.2203589074, -16869.71300969821, 2.078994774372635, true));
                scenicList.push(new Scenery("pineTree", 85823.77818457523, -21538.815168385267, 5.295898743238681, true));
                scenicList.push(new Scenery("pineTree", 85284.69886368359, -21758.820384371687, 1.1692608836952696, true));
                scenicList.push(new Scenery("pineTree", 85426.85882293199, -21944.216418463722, 1.135117580643482, true));
                scenicList.push(new Scenery("pineTree", 85423.12788239641, -21436.892424480942, 6.22558185159918, true));
                scenicList.push(new Scenery("pineTree", 85623.19851145241, -20656.08772421358, 5.060026577383687, true));
                scenicList.push(new Scenery("pineTree", 85239.99656485328, -20487.493902800677, 3.36846635533926, true));
                scenicList.push(new Scenery("pineTree", 85672.45985582673, -20388.462056179796, 3.5694753533339476, true));
                scenicList.push(new Scenery("pineTree", 86029.96868173049, -20604.90984600533, 2.2912276675617194, true));
                scenicList.push(new Scenery("pineTree", 86259.89064863262, -20723.552355335727, 1.5873396945316482, true));
                scenicList.push(new Scenery("pineTree", 86290.01640525441, -20369.17418666086, 1.317996190645015, true));
                scenicList.push(new Scenery("pineTree", 86606.3353073192, -20130.21886781358, 5.729274502237695, true));
                scenicList.push(new Scenery("pineTree", 86846.80339474029, -20233.420256314435, 3.1657747076654004, true));
                scenicList.push(new Scenery("pineTree", 86872.4904055167, -19956.319248702264, 4.633794456859184, true));
                scenicList.push(new Scenery("pineTree", 86662.28061577443, -19728.332352412537, 5.893331436398813, true));
                scenicList.push(new Scenery("pineTree", 86953.32896456456, -19593.51545557862, 3.6539574170482756, true));
                scenicList.push(new Scenery("pineTree", 87216.71111061085, -19771.777451175498, 5.522967936516048, true));
                scenicList.push(new Scenery("pineTree", 87247.84564015215, -20064.650441453217, 0.6413319387925254, true));
                scenicList.push(new Scenery("pineTree", 87844.85210593205, -20112.840213398664, 4.25322061786203, true));

                ArtificialIntelligenceAccess.push(new Unit(86502.00989233388, -16521.657578684, "Koivaya", true, "loner"));
                ArtificialIntelligenceAccess.push(new Unit(85869.10802363667, -15051.456127343354, "Hoffalgre", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(86048.06603704776, -15744.572362859994, "Hoffalgre", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(85618.88436459385, -16145.199586710598, "Hoffalgre", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(84807.26458800928, -15631.146734304222, "Badger", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(84242.68730756256, -14771.09673196969, "Crow", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(83671.1375393644, -14921.76248177641, "Crow", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(83517.51239918689, -14635.309886888293, "Crow", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(84543.85813455607, -14160.170992277353, "Crow", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(86502.00989233388, -16521.657578684, "Koivaya", true, "loner"));
                ArtificialIntelligenceAccess.push(new Unit(81588.80491465746, -17456.964552651327, "Deer", "baby", "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(81725.86620992287, -17319.76439132493, "Deer", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(80523.75183873228, -16939.233080214937, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(80023.64509105298, -16753.84088246724, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(79984.43551290118, -17010.76583830015, "Skol", false, "preBuilt"));
                scenicList.push(new Scenery("cranberryPlant", 87477.07911234724, -15125.989125486, 4.20631317866603, 0));
                scenicList.push(new Scenery("thalisPlant", 88524.05932805083, -15333.622088553375, 3.4944553793903044, 0));
                ArtificialIntelligenceAccess.push(new Unit(88804.1334501109, -15220.158886034833, "Koivaya", false, "loner"));
                ArtificialIntelligenceAccess.push(new Unit(88904.3772636738, -14298.592389699177, "Koivaya", true, "loner"));

                scenicList.push(new Scenery("marigoldPlant", 81423.9566908478, -16742.250600789535, 1.446634005969565, 0));
                scenicList.push(new Scenery("web", 79290.8787862779, -14660.843762829556, 5.476913220251297, 1.294610550810324));
                scenicList.push(new Scenery("web", 79183.17946061665, -14677.288404291821, 4.712659928917502, 1.3661209549644195));
                scenicList.push(new Scenery("web", 79217.14415792539, -14590.674832208168, 2.9871479088613517, 2.2611927075682066));
                scenicList.push(new Scenery("web", 79060.565980242, -14656.354124050493, 6.103765156870022, 2.63381978074174));
                scenicList.push(new Scenery("web", 79088.84210559855, -14793.014367213767, 0.37810545289140113, 1.9015921598027337));
                scenicList.push(new Scenery("web", 79142.45007210581, -14904.879318050602, 0.5522213615363172, 2.281923359860049));
                scenicList.push(new Scenery("web", 79065.59368523095, -14894.738460570266, 5.550619984239717, 1.65407863766709));
                scenicList.push(new Scenery("web", 79125.65151770014, -15017.06797326467, 4.666342750013687, 1.5995684824674332));
                scenicList.push(new Scenery("web", 79233.18973263846, -15105.915837764727, 0.7927235101013503, 1.713578087843852));
                scenicList.push(new Scenery("web", 79200.5385287313, -15019.090112288875, 3.307633151110568, 2.1539410337359577));
                scenicList.push(new Scenery("web", 79364.84505215232, -15010.132414577616, 2.9657107118398254, 2.4448118879127296));
                scenicList.push(new Scenery("web", 79425.57304502027, -15100.091651959543, 5.915207235313416, 2.5670556006913463));
                scenicList.push(new Scenery("web", 79576.82509078989, -15069.50256501707, 5.862271108783337, 2.1915593024953868));
                scenicList.push(new Scenery("web", 79573.2196516529, -14915.772438829756, 0.25493955850756, 2.4953852361919555));
                scenicList.push(new Scenery("web", 79723.70789109082, -14952.015298720155, 3.6090744023204246, 2.1815997331678627));
                scenicList.push(new Scenery("web", 79708.40750664064, -14876.12187971717, 3.502266678541665, 1.0588393708569406));
                scenicList.push(new Scenery("web", 79456.4367728775, -15009.680932549225, 0.7607963819619283, 2.6844663345343722));
                scenicList.push(new Scenery("web", 79429.8385066223, -14888.625576328783, 5.284027698824593, 2.147037661686121));
                scenicList.push(new Scenery("web", 79291.75849662225, -14959.175516755817, 3.6407140225832086, 1.218785482363874));
                scenicList.push(new Scenery("web", 79266.88240093441, -14859.706671297594, 2.627926717326356, 1.1460357632198594));
                scenicList.push(new Scenery("web", 79189.092710338, -14831.913440332486, 0.7785945723223204, 2.180737445698261));
                scenicList.push(new Scenery("web", 79237.04891315386, -14763.123629156067, 1.652031105487507, 2.3219572498537486));
                scenicList.push(new Scenery("web", 79371.9142397057, -14727.975486668456, 6.217353824914047, 1.1643164144441827));
                scenicList.push(new Scenery("web", 79491.13679293914, -14782.516656811671, 1.2313962195855401, 2.143073179224912));
                scenicList.push(new Scenery("web", 79556.15517371288, -14735.601895297796, 3.684700742314998, 2.005773121926855));
                scenicList.push(new Scenery("web", 79452.42288906053, -14667.575812073375, 0.6407752071967237, 2.3347464926843737));
                scenicList.push(new Scenery("web", 79410.8633285335, -14816.288713570273, 2.191646696809767, 2.633637409518642));
                scenicList.push(new Scenery("web", 79387.12861538935, -14579.82634756977, 1.3601476700450736, 2.4920144409185863));
                scenicList.push(new Scenery("web", 79714.22193174215, -14786.096579121917, 5.969782158007179, 2.1406403948812045));
                scenicList.push(new Scenery("web", 79643.812611261, -15004.509922928446, 1.6047279333918414, 1.0864812626886458));
                scenicList.push(new Scenery("web", 79529.21121559638, -15064.935027003086, 5.704133172070785, 1.392177973081679));
                scenicList.push(new Scenery("web", 79321.38496936388, -14531.510552877378, 3.1365316228713422, 1.1096116688720845));
                scenicList.push(new Scenery("web", 79265.4937395424, -14552.845070436875, 2.688692754100492, 1.7117271220123558));
                scenicList.push(new Scenery("etnaEggSac", 79495.622111503, -14899.149701339362, 5.741762567459692, true));
                ArtificialIntelligenceAccess.push(new Unit(79399.09683797411, -14775.1223372007, "Etna", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(79282.36507755906, -15052.37829742499, "Etna", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(79100.60292895982, -14825.96412128477, "Etna", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(79428.91165325882, -14957.59836382235, "Etna", false, "preBuilt"));
                scenicList.push(new Scenery("kofkePlant", 83464.59539570406, -15707.272133125094, 0.8153385960811761, 0));
                ArtificialIntelligenceAccess.push(new Unit(83397.8307794263, -16177.551178823041, "BlackBear", false, "preBuilt"));

                scenicList.push(new Scenery("callopPlant", 84220.12723888857, -20222.115788779585, 1.5805776560733402, 0));
                scenicList.push(new Scenery("callopPlant", 83494.47551269524, -20293.563259297618, 2.3083271355832804, 0));
                scenicList.push(new Scenery("callopPlant", 83275.03271304733, -19589.86189938784, 5.57009085792489, 0));
                scenicList.push(new Scenery("hoilPlant", 82599.26593328026, -18977.506836867167, 2.503909356928982, 0));
                ArtificialIntelligenceAccess.push(new Unit(82236.96346232896, -18730.81752957399, "Koivaya", false, "loner"));
                ArtificialIntelligenceAccess.push(new Unit(81456.20051031577, -19657.30507774089, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(81950.68345729934, -19400.95447240335, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(82061.54860145289, -19701.207213018453, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(82229.00816363883, -20910.9724527693, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(82442.89404922015, -20708.462386662126, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(82198.25056244989, -20574.572059170863, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(82367.78065845727, -20262.033157135516, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(83541.74243844274, -20883.490899712586, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(83895.39281896267, -20774.327956727597, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(84212.65920106955, -21159.41736887044, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(83769.6417188947, -21657.226270076906, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(83813.00020440371, -21321.663777349404, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(85003.15328520641, -20082.456993395823, "Skol", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(84974.03405558714, -20311.61420390865, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(84627.89471505779, -20277.445056414268, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(84379.52003928038, -20101.63132545014, "Skol", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(87104.84808271278, -21421.607810010824, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(86882.16709699389, -21562.531164960223, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(86801.15021175663, -21258.677184083157, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(87110.65505372234, -21099.827220729276, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(87443.05539717223, -21037.10330012273, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(87343.75094259856, -20898.43026604773, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(87100.94025227393, -20804.96271900431, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(86859.1190935625, -20999.0444626111, "Skol", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(87114.04846678213, -21975.548975845148, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(87131.5697940643, -22269.47786441332, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(86847.56630383036, -22145.127310711265, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(86916.634300337, -22478.959777780725, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(87570.47144955264, -22955.86682493083, "Skol", false, "preBuilt"));

                ArtificialIntelligenceAccess.push(new Unit(86690.91823920749, -23125.283967647014, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(86462.48812546761, -23505.246201995822, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(85872.49212979786, -23132.791628519244, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(85808.01329222154, -23403.783280088708, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(85628.92740739929, -23232.284977325486, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(85727.68060082309, -22699.38280443077, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(85277.1845252323, -22941.58565849765, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(84538.4031135272, -23402.829820658335, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(82511.53381353166, -22673.571376277327, "Badger", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(81613.84816162997, -23697.499038828922, "Badger", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(80279.94758161396, -22650.03371733529, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(80882.1982852344, -21583.667722332262, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(81040.57601779874, -21317.161370924176, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(80575.43578904204, -21322.970039428536, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(80948.54916616868, -20683.109925986493, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(80418.83121835308, -20434.44273921106, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(81003.88357949257, -20284.46529221093, "Skol", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(81249.3773868414, -20534.44111151825, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(81569.65233291454, -19946.98289354939, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(80319.06887296478, -19794.901143222818, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(80532.14651494546, -19103.532086873176, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(79933.57041422953, -19316.639675587372, "Skol", false, "preBuilt"));

                scenicList.push(new Scenery("kofkePlant", 87664.85925403856, -19172.82121333359, 3.1592171918341947, 0));
                scenicList.push(new Scenery("kofkePlant", 86635.26107909059, -15386.693645693627, 5.489341377408844, 0));

                change = "s2w8";
            }
        }
        else if (region == "s2w9")
        {
            if (change != "s2w9")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee || ArtificialIntelligenceAccess[i].team == "arena1" || ArtificialIntelligenceAccess[i].team == "arena2" || ArtificialIntelligenceAccess[i].team == "arena3")
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //characters

                generator(106, 999, 473, 1000, 23, 1, 98503, -14117); //forest in map s-2-w-9

                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0 ; i--)
                {
                    if (ArtificialIntelligenceAccess[i].type == "Skol" && ArtificialIntelligenceAccess[i].ID == loggedGenID && ArtificialIntelligenceAccess[i].team != "player")
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                    }
                }

                scenicList.push(new Scenery("pineTree", 87450.7616, -17919.5451,0.6009184164607342, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87285.30605, -18410.38545,3.1328425259585164, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87584.481875, -20549.466225,1.370044085516719, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 86793.83195, -17172.6444,2.356274466551103, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 86770.55675, -14728.53585,6.219598954038168, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87458.73125, -21266.70645,3.0321916913604, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 88059.3644, -17083.0614,2.32539658352719, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87650.25635, -20663.5383,2.8774677452523516, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 86895.80915, -16147.20765,5.273587483283633, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 88086.497675, -17161.95645,2.1784178572221538, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87626.048075, -20464.902525,0.2361295278034787, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 88182.23975, -23236.379999999997,1.9066302078160724, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87203.414825, -20458.134075,3.8031310542911143, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 88238.21255, -20028.8835,4.721064967941535, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87488.71055, -18682.105275,5.964481466763987, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87645.134675, -19870.2471,6.116121558445259, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87934.01645, -23582.766300000003,3.5886926539585984, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87147.80765, -14817.0795,0.989450327107955, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 88076.675525, -15648.067125,2.4553225490170636, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 88214.69165, -22920.755924999998,1.5880360895918062, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87529.58255, -23219.084475,4.521567113239649, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87558.211475, -22445.525325000002,5.711342575601234, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 88313.4065, -19300.785675,2.554849819510721, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87382.6949, -19451.1765,4.1379423075592285, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 88023.963125, -22362.775125,3.5192263319534045, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 86940.024425, -17281.869749999998,6.0065718176516185, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 88258.0577, -23596.1355,4.667795706888921, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 86835.085175, -15985.75545,3.6449721509422783, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 88157.436725, -21706.202325,4.826318423169387, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 86878.827575, -18686.12715,1.6656098824106353, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87535.6334, -21615.32745,0.6620637962375102, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87053.0825, -17996.61885,4.484011097957729, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87055.76375, -18248.516925,3.37028433032794, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87932.759675, -15050.6427,2.757312798394296, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87982.412525, -14440.609575,3.8462434504738154, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87521.40815, -17448.32565,3.784427738339193, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87856.5761, -19618.924274999998,4.303960287093922, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 88041.388325, -22294.066875,5.896983262909684, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87371.78465, -22060.217025,2.3510009429053236, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87777.087275, -18518.0898,0.9829903895435487, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87800.3537, -21681.264750000002,5.571094165874254, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87877.5425, -20719.1211,0.12135161368817961, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 86849.920775, -16862.41695,2.6932628384214525, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87357.363425, -16804.229925,4.742213444791114, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 86842.7438, -23345.0145,3.843132336027432, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87495.990875, -16158.024300000001,4.618454039229244, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87414.449675, -22369.310550000002,6.09791797814811, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87779.5706, -21257.932425,3.257917331333208, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 88113.085925, -23532.401700000002,4.335079662145629, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 86816.9453, -23610.558675,5.740235046668104, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 86805.05225, -23477.958675,1.1265283413550993, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87217.033625, -21712.49985,0.3696196576665093, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 86999.9645, -18257.679,0.15940891415432862, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 88058.7677, -19025.0898,2.2030831711176924, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87931.496075, -21102.304875,0.8211540980941762, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87053.94635, -17953.608675,3.15697483870245, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87604.78625, -16188.567149999999,5.144719377437419, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 86812.238, -19289.06715,5.349901253823824, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87630.8441, -22407.08985,0.20382354012707923, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87942.419975, -18915.3906,0.14273652290255293, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 88312.171175, -21157.8048,3.4587153073079118, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 86803.241675, -20627.674875,2.633283453429803, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87909.693125, -20889.565725,1.5187603681778072, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 86758.42775, -21762.931725000002,2.5783522616795445, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87573.5765, -15930.534375,5.719431340692993, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87969.452825, -14174.0943,2.89236463134718, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 88230.583175, -17766.81525,5.05030551592723, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 86911.5944, -23675.489775000002,2.2085499397852884, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87344.875625, -23267.972925000002,1.291995669231694, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 86793.821225, -18856.05015,5.173190667522684, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87604.229525, -14135.16645,1.0613577764178657, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87320.525975, -23687.824500000002,2.5976510303113773, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 86749.889675, -22631.00835,1.5634199619260716, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87749.77655, -19495.500975,0.63224165651058, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87491.1539, -22455.242175,5.310270635125355, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87620.876675, -14566.54545,0.8060546099635343, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 88059.720275, -20338.5318,1.8085684536411661, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87718.216775, -16736.8545,1.0086848269115876, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87548.555075, -23213.630325,0.019057212458392467, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 86877.329975, -14389.718475,1.0318839988668846, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87477.01445, -20304.717825,1.405809245713446, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87908.827325, -20715.66765,2.6785097335276022, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 88180.158125, -23185.35825,4.780037240787876, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("kofkePlant", 87469.305125, -17509.5108,2.4346109683901327, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("callopPlant", 87883.2404, -16340.666175,0.3511153242298162, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 88561.47564153263, -20729.121215752777,5.5476944429862804, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 88234.5968575341, -21097.69600339669,4.714643619859908, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 88248.66786133235, -18582.06791491618,1.7039829025597673, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 88297.95401488605, -19688.886505824838,4.186803795056108, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 88138.0858902515, -16031.70175066493,0.8100273766458589, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87719.52674857227, -17077.9703926173,0.8452535057252852, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 88438.64403246908, -17827.134698585407,2.399837723497978, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 88597.27181704625, -17571.296484213166,6.250815813128376, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87270.7270078705, -17101.18663181724,0.9672335775184355, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 86987.66192147069, -16520.876973575167,5.156631803255083, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87341.25389582642, -16428.26510248533,2.846549447653556, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87232.31930629796, -15934.54220427138,3.000555012318174, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 86963.10147723462, -15572.658349509313,0.36369261534898706, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87360.01069188089, -15440.619774112049,2.810449072959387, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87706.51171877178, -15356.732760491135,5.665180944276956, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87310.43111860678, -15097.054464821706,2.4344878078362737, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87522.77531241797, -14825.56891366562,2.781070105816097, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 86871.34534178698, -15223.351060725803,5.224282341553212, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 86907.01757601996, -13976.99577980707,5.8046863113057885, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87301.8677682247, -14309.470011088639,3.93323332845234, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 88431.2334001757, -15852.54987271492,1.4239814851127743, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 88404.22636944565, -16503.23684801952,3.794766407263473, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 88255.2203589074, -16869.71300969821,2.078994774372635, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 86846.80339474029, -20233.420256314435,3.1657747076654004, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 86872.4904055167, -19956.319248702264,4.633794456859184, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 86953.32896456456, -19593.51545557862,3.6539574170482756, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87216.71111061085, -19771.777451175498,5.522967936516048, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87247.84564015215, -20064.650441453217,0.6413319387925254, true, undefined)); //copied s2w8
                scenicList.push(new Scenery("pineTree", 87844.85210593205, -20112.840213398664,4.25322061786203, true, undefined)); //copied s2w8

                scenicList.push(new Scenery("pineTree", 94199.51815, -24704.535075,0.9577383775011962, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 96751.435375, -25158.66375,3.1253308464809346, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 91687.5067, -24919.183275,2.6991194223075943, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 92976.073525, -24327.12915,0.6986390191356165, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 94029.562975, -24536.733675,6.0605394669702, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 97255.21885, -25030.177275000002,4.874879339346911, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 92171.095, -25052.914275,2.7610006020455615, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 95917.4506, -25025.676675,1.5532159405606454, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 89112.26454999999, -24845.77065,2.5290844871246128, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 89301.782125, -24979.407075,3.919536875425977, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 93559.2961, -24559.23765,4.263115275432722, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 93804.3487, -25023.04515,6.079469899858843, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 88872.616375, -24691.540275,3.7665088102747832, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 97272.8059, -24580.934325,6.158019029640096, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 93632.4601, -24790.42185,3.3460052087371, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 95159.500225, -24324.047175,2.731763953522343, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 90287.534425, -24577.389225,1.0425021413896485, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 96246.79585, -25045.389225,2.2269504721344924, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 90296.393275, -24700.8759,6.140829204450438, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 90260.686825, -24671.433825,5.243056978305595, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 97742.5648, -24639.046275,1.7988814682245111, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 95287.190125, -24854.334075,4.39666852277558, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 92083.780825, -24589.03365,4.293355687189041, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 88903.1992, -24445.93485,1.0215376315556146, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 92937.993925, -24313.66245,5.545278840940619, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 91134.199075, -24911.315025,1.9025630975500945, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 88785.04089999999, -25026.54735,3.329676497570798, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 94281.69505, -24355.8624,2.2081168211657443, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 88951.215025, -24912.426525,3.376562538222653, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 93569.6389, -25182.156375,4.630881335844803, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 95483.6263, -24553.5417,2.333089890064706, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 90291.89365, -25077.716325,5.60022957426124, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 89927.4133, -24571.6299,4.897938798906351, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 98202.728725, -24986.61915,4.111772978173382, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 91270.153075, -25102.0065,1.8336164826260173, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 97035.686875, -25030.15485,0.6517282273264806, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("callopPlant", 97776.140875, -25147.444425,4.016378346078499, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("callopPlant", 92564.085325, -24961.843425,3.49171822019646, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 89799.58196857505, -24852.026901631143,5.659108887839778, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 88941.37546191934, -24127.734184230398,4.420054278201068, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 98162.12750831735, -24587.851983406155,5.177494521444627, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 98562.35515979865, -24591.700441258286,2.1247196298483724, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 98578.37677596851, -25085.5949610871,6.154157882110825, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 98298.89956975589, -24283.46671326581,0.3305946822155083, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 97802.70852484282, -24287.79859153119,1.2507546654313966, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 97417.10380598335, -24273.54015862302,2.480885837241454, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 96659.26484624729, -24699.76445823534,5.400165821375778, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 96670.5091109301, -24382.741435033313,3.9834750117490123, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 96260.38483643121, -24425.894377603247,4.498801942139346, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 95638.53842312725, -24238.315615381656,1.127303504894951, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 95302.67443545083, -24667.831507177598,2.632438976069163, true, undefined)); //copied s3w9
                scenicList.push(new Scenery("pineTree", 95980.1563117219, -24633.322999490985,0.7770123191582432, true, undefined)); //copied s3w9

                trimmer(97350.17909099725, -13828.051327860905, 96995.11291765232, -27068.11932919729, true);
                trimmer(97314.18130135114, -18015.666414757754, 87994.01651179291, -18352.91406583303, true);
                trimmer(88309.6011635884, -17401.217333102522, 87964.09903299411, -18338.846038486725, true);
                trimmer(88331.40735295211, -17382.497887386096, 84673.16663283715, -17760.13605621381, true);

                scenicList.push(new Scenery("pineTree", 88926.40661957418, -23558.485039184194, 3.3966822615695347, true));
                scenicList.push(new Scenery("pineTree", 88997.17914740056, -23205.478877109414, 3.268813426989684, true));
                scenicList.push(new Scenery("pineTree", 89150.78078435469, -22915.807090569888, 6.061257391429624, true));
                scenicList.push(new Scenery("pineTree", 88779.25689400015, -22743.782586578596, 1.2294911261332746, true));
                scenicList.push(new Scenery("pineTree", 88810.1590842691, -22181.832130375504, 1.7300152818371985, true));
                scenicList.push(new Scenery("pineTree", 88748.66082642834, -21462.756111196988, 0.928874397061025, true));
                scenicList.push(new Scenery("pineTree", 88905.11486975632, -20984.999068149806, 3.635652647102448, true));
                scenicList.push(new Scenery("pineTree", 89173.33509194879, -20629.8057458497, 2.2963978917860777, true));
                scenicList.push(new Scenery("pineTree", 89380.48899476159, -20298.895319921718, 4.65360020343043, true));
                scenicList.push(new Scenery("pineTree", 88733.58156166, -19597.819374772123, 3.230527432210357, true));
                scenicList.push(new Scenery("pineTree", 89255.46358019496, -19016.906938877084, 0.5471018615668782, true));
                scenicList.push(new Scenery("pineTree", 89715.35517481159, -18916.61917377001, 4.534388064591957, true));
                scenicList.push(new Scenery("pineTree", 89929.3622639595, -18806.474111916945, 3.2458987318563084, true));
                scenicList.push(new Scenery("pineTree", 90181.08834329694, -19055.28466188599, 2.3294472618553317, true));
                scenicList.push(new Scenery("pineTree", 89896.34074789994, -19248.47739213669, 1.596558034186859, true));
                scenicList.push(new Scenery("pineTree", 90581.13647637832, -18928.416289099743, 1.4235014478898125, true));
                scenicList.push(new Scenery("pineTree", 90791.56124999623, -18696.43358644327, 1.9833434063234543, true));
                scenicList.push(new Scenery("pineTree", 91360.82881031882, -18991.812119751303, 5.073933722208926, true));
                scenicList.push(new Scenery("pineTree", 90114.30470158705, -17383.043204138954, 2.606410738379149, true));
                scenicList.push(new Scenery("pineTree", 90657.98042542042, -17739.038894222806, 2.877660485572636, true));
                scenicList.push(new Scenery("pineTree", 91037.46437772566, -17838.460064621107, 0.0557553455759391, true));
                scenicList.push(new Scenery("pineTree", 91097.0137653877, -17484.816974212532, 5.164912718935826, true));
                scenicList.push(new Scenery("pineTree", 91487.03803276966, -17759.493756024225, 3.4510012923712803, true));
                scenicList.push(new Scenery("pineTree", 91368.5657381184, -17085.367655995582, 0.5424401728435146, true));
                scenicList.push(new Scenery("pineTree", 92274.3287488939, -16450.362781795997, 5.604454383708842, true));
                scenicList.push(new Scenery("pineTree", 91517.08720574493, -16392.81490485603, 0.9603998769284545, true));
                scenicList.push(new Scenery("pineTree", 90918.50754892548, -16158.702465793232, 5.812373549828363, true));
                scenicList.push(new Scenery("pineTree", 92660.61348449992, -16157.487126447024, 3.9264276993836176, true));
                scenicList.push(new Scenery("pineTree", 92375.25990604519, -15777.421596693604, 1.3094312010586815, true));
                scenicList.push(new Scenery("pineTree", 93584.10998966472, -16448.586030584673, 4.099232051254047, true));
                scenicList.push(new Scenery("pineTree", 94376.32174333179, -16456.097790625892, 1.3671835304252213, true));
                scenicList.push(new Scenery("pineTree", 93777.53523405142, -15756.805635185981, 2.6106520472727963, true));
                scenicList.push(new Scenery("pineTree", 93055.04622494725, -14702.306295717395, 2.886072037634098, true));
                scenicList.push(new Scenery("pineTree", 92502.90539440511, -14652.929512079623, 3.0245105810227058, true));
                scenicList.push(new Scenery("pineTree", 92406.30731929466, -15021.435511019034, 4.726433128670531, true));
                scenicList.push(new Scenery("pineTree", 91503.03087352953, -15330.487938930664, 2.709989307634929, true));
                scenicList.push(new Scenery("pineTree", 90715.21163335799, -14890.825415317606, 4.635834080590079, true));
                scenicList.push(new Scenery("pineTree", 90381.88313750371, -14737.586243491372, 0.6312410731531709, true));
                scenicList.push(new Scenery("pineTree", 90433.26595516014, -13982.468429194694, 3.4076697215248504, true));
                scenicList.push(new Scenery("pineTree", 91203.10803530367, -14079.693965901182, 1.7358705657590563, true));
                scenicList.push(new Scenery("pineTree", 92183.55847536525, -14055.24048460607, 2.345011197203063, true));
                scenicList.push(new Scenery("pineTree", 93432.60773520434, -14088.06433049802, 1.198737087929526, true));
                scenicList.push(new Scenery("pineTree", 93522.515022055, -14459.252043837314, 0.29339430201866484, true));
                scenicList.push(new Scenery("pineTree", 93018.54785653527, -14351.661594673802, 5.435899789649068, true));
                scenicList.push(new Scenery("pineTree", 94036.65502022869, -14144.824293606178, 4.888612536489921, true));
                scenicList.push(new Scenery("pineTree", 94428.09170510965, -13951.621582178339, 2.9014506062338277, true));
                scenicList.push(new Scenery("pineTree", 95506.2101902325, -13998.086926811355, 2.315841644597554, true));
                scenicList.push(new Scenery("pineTree", 96253.21392290271, -14178.74178058297, 2.1453955116166044, true));
                scenicList.push(new Scenery("pineTree", 96670.43601572963, -14355.520960543765, 1.6373239725748256, true));
                scenicList.push(new Scenery("pineTree", 96828.07906071692, -14064.598032492557, 0.8117069711102631, true));
                scenicList.push(new Scenery("pineTree", 97498.32528731841, -13977.23035751289, 2.3767524458613094, true));
                scenicList.push(new Scenery("pineTree", 97458.965408439, -14383.880575219548, 2.5247174767666984, true));
                scenicList.push(new Scenery("pineTree", 98009.42883968874, -14092.585748077092, 5.715228795211426, true));
                scenicList.push(new Scenery("pineTree", 98309.66014609484, -13953.47500997321, 3.1325101859964257, true));
                scenicList.push(new Scenery("pineTree", 98358.96730320716, -14329.489615669341, 5.0615678766515035, true));
                scenicList.push(new Scenery("pineTree", 98637.01684942738, -14589.228385668182, 5.590544624532468, true));
                scenicList.push(new Scenery("pineTree", 98706.50474523724, -14139.225751940376, 1.729385381747875, true));
                scenicList.push(new Scenery("pineTree", 98181.64037730763, -14662.05706763669, 2.1535432210444223, true));
                scenicList.push(new Scenery("pineTree", 98439.55824931747, -14924.51372593397, 4.532483079344386, true));
                scenicList.push(new Scenery("pineTree", 98659.12402625765, -15397.397466802979, 3.9809661226735877, true));
                scenicList.push(new Scenery("pineTree", 98386.86609609087, -15713.943281601472, 3.9502523219599897, true));
                scenicList.push(new Scenery("pineTree", 98605.43347695631, -16260.053774545215, 1.6663853566491655, true));
                scenicList.push(new Scenery("pineTree", 98271.38768579374, -16673.65610552444, 1.248105158865882, true));
                scenicList.push(new Scenery("pineTree", 98558.49373461735, -16953.43864557751, 0.8306872359959705, true));
                scenicList.push(new Scenery("pineTree", 97807.531797694, -16940.22375959693, 1.5281767142324059, true));
                scenicList.push(new Scenery("pineTree", 96778.64227160886, -18516.534563983892, 3.035263261048541, true));
                scenicList.push(new Scenery("pineTree", 96680.48965916884, -18836.351761126294, 2.1985049079334975, true));
                scenicList.push(new Scenery("pineTree", 96351.47698799992, -19429.993856102217, 0.19004040687380302, true));
                scenicList.push(new Scenery("pineTree", 96714.22477130647, -19597.312427925503, 3.3566519824210728, true));
                scenicList.push(new Scenery("pineTree", 98131.75277908998, -20853.33483081556, 0.578614338891331, true));
                scenicList.push(new Scenery("pineTree", 98430.66098459771, -20642.35391398114, 0.5214985954380623, true));
                scenicList.push(new Scenery("pineTree", 98632.81298006819, -20954.05197589813, 4.997951356711999, true));
                scenicList.push(new Scenery("pineTree", 98563.68041174866, -21297.526208537853, 0.7742808527244562, true));
                scenicList.push(new Scenery("pineTree", 98390.04276542575, -21984.372868820545, 6.263542432707821, true));
                scenicList.push(new Scenery("pineTree", 98098.4024036433, -22245.33334205265, 1.8703607940630627, true));
                scenicList.push(new Scenery("pineTree", 97589.59533011261, -22186.730336593024, 0.08682766474086334, true));
                scenicList.push(new Scenery("pineTree", 97565.64496456903, -23342.418731386148, 6.071084373825232, true));
                scenicList.push(new Scenery("pineTree", 98460.62764326054, -23022.029671300195, 5.99707263405242, true));
                scenicList.push(new Scenery("pineTree", 98233.8287602278, -22776.632240623843, 5.932218856353515, true));
                scenicList.push(new Scenery("pineTree", 97786.25926650866, -23814.56986320525, 1.9792458626428049, true));
                scenicList.push(new Scenery("pineTree", 97448.07812116192, -23705.665765916965, 5.450046346283254, true));
                scenicList.push(new Scenery("pineTree", 98677.60489310964, -23252.177845390208, 0.11258233083359964, true));
                scenicList.push(new Scenery("pineTree", 98202.92338491416, -18534.692247077797, 2.992900368116603, true));
                scenicList.push(new Scenery("pineTree", 98652.99885380478, -18487.010902837705, 5.812291348318435, true));
                scenicList.push(new Scenery("pineTree", 98690.30123890149, -17869.86625715134, 0.6366264087155632, true));
                scenicList.push(new Scenery("pineTree", 98632.17144757338, -17377.783498995283, 0.00222363254159553, true));
                scenicList.push(new Scenery("pineTree", 97537.10032477186, -16613.47912812106, 2.7795292881673435, true));
                scenicList.push(new Scenery("pineTree", 97546.65381335361, -15630.653264206125, 2.5334414750219407, true));
                scenicList.push(new Scenery("pineTree", 97676.62665858842, -15176.167108806501, 1.625288215942878, true));
                scenicList.push(new Scenery("pineTree", 96039.49340830134, -14955.119168857189, 2.3991980776931587, true));
                scenicList.push(new Scenery("pineTree", 95677.9355281088, -15320.496148248387, 3.365453770333429, true));
                scenicList.push(new Scenery("pineTree", 95554.68509094763, -14919.34593034357, 0.005642134248347591, true));
                scenicList.push(new Scenery("pineTree", 95074.46011495708, -15448.464458782799, 6.260956841487422, true));
                scenicList.push(new Scenery("pineTree", 94734.23765169522, -15595.616277509509, 4.089326286749041, true));
                scenicList.push(new Scenery("pineTree", 94445.70366884033, -15855.142071604605, 5.59167572689292, true));
                scenicList.push(new Scenery("pineTree", 94519.75604226418, -14871.267180458948, 5.475521656226627, true));
                scenicList.push(new Scenery("pineTree", 94103.0874567991, -15151.110118736566, 0.2848530646772504, true));
                scenicList.push(new Scenery("pineTree", 95052.25626898622, -14003.002325688656, 4.650394643556826, true));
                scenicList.push(new Scenery("pineTree", 95312.71477845842, -13886.3001412694, 0.5947581982287456, true));
                scenicList.push(new Scenery("pineTree", 95914.86811415217, -14040.140136062995, 6.039562705777732, true));
                scenicList.push(new Scenery("pineTree", 96509.95312755731, -13962.193821310004, 3.5109168904390495, true));
                scenicList.push(new Scenery("pineTree", 96272.92835815913, -14494.227960327122, 5.51101215803494, true));

                ArtificialIntelligenceAccess.push(new Unit(94225.56886241103, -22538.244167969628, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(93999.60537195716, -22439.553085412725, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(94152.22711887934, -22286.15272794208, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(93848.55399645673, -22096.604344168358, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(93457.64430560032, -22307.21952258358, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(93560.45621013686, -22462.19974280972, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(93290.55996767443, -22388.19283769802, "Skol", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(93052.89097515686, -22270.019792252024, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(95176.88309458285, -21972.87880659818, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(95094.89877872462, -20915.17204280875, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(95048.05371657021, -20633.816334817977, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(94700.4783278559, -19877.342843580613, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(94399.58432720308, -19686.002967796885, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(94285.11652590039, -19990.84879652929, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(93948.9761297958, -19831.317978995277, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(98091.23926756639, -18504.38180701669, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(98356.09796775901, -18820.567249027463, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(98450.22542430626, -20192.706640243825, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(98407.48570797991, -22454.067979413598, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(98227.19018724517, -22691.386120552634, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(95806.91805414941, -16244.81128439827, "BlackBear", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(95458.85641567496, -16749.523553841595, "BlackBear", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(94373.88308108413, -16169.244839838731, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(94417.94409165977, -15932.174240745826, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(94746.56997050095, -16022.875848985188, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(93629.560614042, -15308.451141436779, "Skol", false, "preBuilt"));

                ArtificialIntelligenceAccess.push(new Unit(97810.63234944287, -21599.906216623473, "Crow", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(98101.08752293394, -23074.520234423457, "Hoffalgre", false, "preBuilt"));
                scenicList.push(new Scenery("kofkePlant", 97979.82733713456, -23226.55929615946, 2.9063499932740435, 0));
                scenicList.push(new Scenery("kofkePlant", 93172.9760989393, -20397.241316844924, 4.491176945740556, 0));
                ArtificialIntelligenceAccess.push(new Unit(93210.68365475068, -16354.108220077462, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(93356.98731148819, -16338.819175184613, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(93274.68572991727, -16586.059509563685, "Skol", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(93513.18482606666, -16389.600913485025, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(93591.50769345408, -16218.024373487302, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(93298.13812479471, -15936.220651285937, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(92972.11885848391, -15934.564317187698, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(93127.26310850505, -15814.186555629312, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(92749.66483904673, -16109.462553955833, "Skol", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(92940.19059238875, -16212.806248861467, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(92837.70200328664, -16758.569058384146, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(93722.75163715011, -15979.261737818479, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(93138.91946555064, -17403.346376023346, "BlackBear", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(91057.39087134774, -17142.056603623874, "BlackBear", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(90689.80070582945, -16456.714533644692, "BlackBear", false, "preBuilt"));

                ArtificialIntelligenceAccess.push(new Unit(89637.84717385436, -17436.30457139225, "Lizard", false, "preBuilt"));
                scenicList.push(new Scenery("cranberryPlant", 92273.69390967322, -15562.569594267468, 1.7883505628457128, 0));
                scenicList.push(new Scenery("cranberryPlant", 91057.68126262129, -15768.92751776419, 0.01929109109543227, 0));
                scenicList.push(new Scenery("cranberryPlant", 92366.5356112586, -15620.118623479388, 3.4760544564063993, 0));

                scenicList.push(new Scenery("callopPlant", 90204.17578695489, -15411.643224732512, 5.016800431302058, 0));
                scenicList.push(new Scenery("darbPlant", 90454.00756743908, -15089.384560311153, 0.6030133836021195, 0));
                scenicList.push(new Scenery("callopPlant", 91709.50191106634, -15072.48546483064, 5.273432085139295, 0));

                ArtificialIntelligenceAccess.push(new Unit(96710.73524743397, -19355.291728570963, "Crow", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(97760.7885400239, -19235.929665999967, "Crow", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(97696.05415852663, -19443.138631188765, "Crow", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(96277.27973929174, -22305.277887608605, "Crow", false, "preBuilt"));

                ArtificialIntelligenceAccess.push(new Unit(92755.75047985403, -32974.213930422135, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(93074.74414001792, -32793.048526082115, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(93090.14441045056, -32978.422596322605, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(92525.06279426193, -33182.957019989735, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(91997.43074321168, -33245.10927097424, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(94371.65189488651, -32715.960274997666, "Skol", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(93910.99466616717, -32658.86595154604, "Skol", false, "preBuilt"));
                scenicList.push(new Scenery("cranberryPlant", 95322.71260631447, -32674.848524955243, 1.7358416230700662, 0));
                ArtificialIntelligenceAccess.push(new Unit(95345.87969044165, -33139.596829764276, "Badger", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(96416.00575881847, -33310.96316002783, "Badger", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(97753.26111781063, -32936.43749637637, "Deer", "baby", "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(97096.26816327553, -33506.32891471484, "Deer", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(97114.88939974278, -33383.685598671815, "Deer", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(97330.33764432358, -33388.02059823267, "Deer", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(97636.37314828587, -31306.857435670678, "Deer", "baby", "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(96814.06471343116, -30238.448013066893, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(97072.72796703728, -30040.951431203306, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(97413.70754631444, -30219.062882674454, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(97216.4128349905, -30252.879086992853, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(97879.96540902757, -29439.148525425542, "Skol", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(98200.42716785097, -29322.480704045294, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(97882.71287872357, -29078.465650657683, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(90305.22571770978, -24806.03188261684, "Hoffalgre", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(92702.03672856581, -25388.106048791116, "Hoffalgre", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(92879.70009973548, -25239.00247178436, "Hoffalgre", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(92630.19376171209, -25082.41170694395, "Hoffalgre", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(90676.57114494295, -25189.65420483583, "Hoffalgre", true, "preBuilt"));

                change = "s2w9";
            }
        }
        else if (region == "s3w9")
        {
            if (change != "s3w9")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee || ArtificialIntelligenceAccess[i].team == "arena1" || ArtificialIntelligenceAccess[i].team == "arena2" || ArtificialIntelligenceAccess[i].team == "arena3")
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //characters

                generator(217, 881, 500, 650, 19999, 1, 98524, -24309); //forest in map s-3-w-9

                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0 ; i--)
                {
                    if (ArtificialIntelligenceAccess[i].type == "Skol" && ArtificialIntelligenceAccess[i].ID == loggedGenID && ArtificialIntelligenceAccess[i].team != "player")
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                    }
                }

                if (Math.random() >= 0.98)
                {
                    ArtificialIntelligenceAccess.push(new Unit(92962.00281408156, -33491.15876539639, "Neev", false, "Wester"));
                }

                scenicList.push(new Scenery("pineTree", 100104.328825, -33283.1133,1.664020548570329, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 100474.031275, -27051.220425,2.7538413773876265, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 100047.6589, -32672.7867,1.4101929069660168, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 100122.555475, -30684.00705,1.0710290324206513, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99549.579175, -31463.29725,1.0227558115090958, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99585.589825, -30493.81575,1.7383216631165808, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99456.273625, -24484.8225,1.0366288922797853, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 100028.0107, -33530.0613,1.0632391679819007, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 98971.5358, -26261.486025,2.915170695608568, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99637.2619, -25155.410925,1.3505810518364592, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 100497.805675, -29543.381849999998,1.3590729677212983, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99923.220625, -31842.075,0.37458116973612665, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99483.306475, -28669.48935,0.6687721175156554, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99113.88775, -31600.856099999997,5.078332922342945, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99498.2269, -27103.60815,1.7248179308223843, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99332.98195, -24666.742875,5.191784444124653, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 100375.478275, -25734.151425,0.29648971887194814, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99932.09605, -26538.0828,3.261928064032593, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99219.471475, -30677.044575,2.2471514577491214, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 100360.473025, -33762.387225,0.47738272293370554, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99986.20465, -27278.604075,2.2040247772605523, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99667.98025, -30404.629575,4.259293313940291, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99618.7915, -26451.653925,5.76001676487155, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99369.159325, -32133.380625,2.5390780040486094, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99106.102375, -26458.016775,4.738847775738038, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99503.34565, -30271.721475,1.4753054344661196, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99133.76215, -32075.662575000002,3.476910915779407, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 100139.274775, -30282.200775,4.898197067369049, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 100379.528425, -26124.705225,0.8009690554152991, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 100195.19005, -27173.793525,3.062904304553177, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99011.817925, -26079.5676,5.1177358006858, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99444.78812499999, -25000.231875,3.3413587822302557, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99525.297775, -25791.701775,5.521349018577445, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 100150.602325, -25684.783275,4.0114131417392604, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 100028.24665, -26059.2447,0.2877221183264735, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 100291.04815, -29231.61,0.688312044702354, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99388.926475, -32564.609474999997,0.6369940873108414, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99721.171375, -25956.077025,4.882521307090889, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 100060.908175, -25528.461525,5.005574771630111, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 100070.190175, -33441.9564,5.034630266603414, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 100147.00165, -25778.89905,1.0043593040301135, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99845.96845, -28020.00675,0.16341083865537445, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99980.43460000001, -24772.896975,4.599233982723712, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 100401.53904999999, -34044.764775,4.689867625645018, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99711.87865, -26156.535075,1.425690064634284, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99326.05945, -30005.35245,6.037659311492725, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 100501.068025, -26406.956025,1.1534357191442983, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99724.125625, -33369.537299999996,1.2653419693586403, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99350.466625, -33191.8845,2.643736257935322, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99418.80535, -25580.095575,4.048880663894299, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99508.689625, -25030.96875,1.2910014391006228, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99601.464775, -30691.26495,1.4981716520696602, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99762.378775, -26073.8658,5.965081391514004, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99261.07277500001, -24494.91375,4.91249476394802, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99255.63617499999, -25576.3662,1.3537481986577873, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99866.419075, -25563.331425,0.9785405065049128, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99970.72555, -33123.67155,0.10912389626061232, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99712.300825, -27955.634325,4.829314597624063, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 100275.0289, -24960.4899,5.096824251956761, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99617.653675, -32429.67435,0.34392842234260296, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99485.12095, -27794.82465,3.79729576944896, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 100045.01762500001, -27327.7899,6.025736103528362, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 100233.0532, -24794.6112,3.760330352130553, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99116.074675, -25010.732625,4.461906836017935, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99492.241375, -33730.546650000004,1.8533940190861715, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 100419.09685, -28772.5137,1.9915344714739993, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99853.829875, -30236.910075,5.230492838043751, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99727.18615, -26850.584925,3.466481145758258, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99421.347175, -27448.608,3.892596299622809, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99169.72015, -27221.38425,5.442823664366083, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99262.3198, -24586.5852,3.716239666281995, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99308.94235, -29261.540549999998,1.051821820340802, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 100219.05025, -31824.08235,3.204644308821122, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99227.528875, -24513.65325,1.5759581676141345, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99954.767725, -31541.522474999998,3.8426628391427093, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99159.8863, -33411.29655,5.070792318612708, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 100474.314025, -33961.8225,4.888720869026244, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99583.491625, -28998.6513,5.199525975795618, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99264.149875, -28028.211375,1.7047665585583347, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 100235.43415, -30909.394875,5.56953029005254, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99828.787975, -26879.351325,1.2655305659558407, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 100189.8724, -32379.2883,1.725144463074981, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99086.73985, -29755.156725,5.5849507999886745, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99788.177275, -32404.46475,5.323705149761233, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99067.14625, -29986.438425,2.5197032324693738, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("kofkePlant", 99319.387525, -25651.896525,5.1207434428894025, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("steugiurnePlant", 99951.967525, -26683.0458,3.323776469187898, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("callopPlant", 99847.70005, -24623.610825,5.171877107295678, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("callopPlant", 99092.62885, -28492.8018,4.380828486445407, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("callopPlant", 99689.0578, -29491.389,4.066847436605218, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("darbPlant", 100299.810475, -30837.0723,4.267053378553548, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99538.65550847218, -28290.262636418283,5.739013861190927, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99607.28323807442, -29467.327129857786,2.4049140310795893, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99147.42085051353, -29520.6043962643,1.5014976655831893, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99802.87424054192, -29814.519717975247,4.375582742561772, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99144.92465992416, -24194.338731406668,4.8851524223410685, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 100147.38617049035, -29727.066158426358,0.07694679796832042, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 100354.35450177237, -30068.433770512416,1.1078785779042057, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 100464.75471716798, -33099.858774327105,3.9989227350815426, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 100306.98264901836, -32934.496032750205,2.038232050894796, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 100387.35428391531, -24212.660063222236,5.203872374089259, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 100118.43985848251, -24448.259793950874,3.4955192994550752, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99748.97944791522, -24212.78271496551,0.7371553525957182, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 98997.49528053639, -28252.98469925065,1.1955923126399226, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 98888.00524263873, -28763.78283542729,0.09871721114478638, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99171.11150970645, -29266.464321345655,5.229176654536753, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 100199.329295081, -27921.460883476942,3.7575916694081775, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 99791.10811719476, -28541.163365659577,5.717282947132565, true, undefined)); //copied s3w10
                scenicList.push(new Scenery("pineTree", 100181.10750162926, -28453.672226052146,1.7876150404465283, true, undefined)); //copied s3w10

                trimmer(119189.39600664338, -26730.695612984702, 97001.6778393279, -27027.729274811954, true);
                trimmer(97350.17909099725, -13828.051327860905, 96995.11291765232, -27068.11932919729, true);

                scenicList.push(new Scenery("pineTree", 89799.58196857505, -24852.026901631143, 5.659108887839778, true));
                scenicList.push(new Scenery("pineTree", 88941.37546191934, -24127.734184230398, 4.420054278201068, true));
                scenicList.push(new Scenery("pineTree", 89007.86590160843, -25316.816934993833, 4.8963860080491886, true));
                scenicList.push(new Scenery("pineTree", 89678.67766977924, -25396.700066907728, 2.2255617421200653, true));
                scenicList.push(new Scenery("pineTree", 89522.58341423454, -25850.24348050021, 0.33927209619459875, true));
                scenicList.push(new Scenery("pineTree", 88967.15617482958, -25706.8319097868, 0.8853766868572388, true));
                scenicList.push(new Scenery("pineTree", 88784.87871978764, -26064.271501818646, 3.53100561013502, true));
                scenicList.push(new Scenery("pineTree", 89021.87561308019, -26792.458834594378, 0.6492967163275256, true));
                scenicList.push(new Scenery("pineTree", 88801.59766113195, -27237.043808506263, 0.9525076859747809, true));
                scenicList.push(new Scenery("pineTree", 89692.91737140849, -27710.837898535177, 0.2689863335629857, true));
                scenicList.push(new Scenery("pineTree", 90094.86666138204, -27423.147503063894, 4.560696986771783, true));
                scenicList.push(new Scenery("pineTree", 90611.26744167956, -27317.567442958785, 2.347684343325142, true));
                scenicList.push(new Scenery("pineTree", 90671.53585580626, -27763.487437947184, 0.3311467389127565, true));
                scenicList.push(new Scenery("pineTree", 90971.01440314706, -28063.69741097954, 3.6932172512155894, true));
                scenicList.push(new Scenery("pineTree", 91365.70354682903, -28143.733166016264, 2.7886835899269977, true));
                scenicList.push(new Scenery("pineTree", 91695.6937260149, -28488.066449856477, 2.2657424983644066, true));
                scenicList.push(new Scenery("pineTree", 92443.05384010296, -28592.9705716858, 3.9295268874286666, true));
                scenicList.push(new Scenery("pineTree", 92886.25890578575, -28865.10408795895, 3.953026214287404, true));
                scenicList.push(new Scenery("pineTree", 92846.01535368583, -29575.661968795343, 2.2077942032386613, true));
                scenicList.push(new Scenery("pineTree", 93563.84819398998, -29442.929550477944, 6.065891293037001, true));
                scenicList.push(new Scenery("pineTree", 93827.10725606575, -28868.68779781427, 1.7563463529572132, true));
                scenicList.push(new Scenery("pineTree", 94460.70536173327, -28787.124871765373, 1.1972249661172298, true));
                scenicList.push(new Scenery("pineTree", 94868.27955541355, -28349.598898277236, 1.8385271720525012, true));
                scenicList.push(new Scenery("pineTree", 95723.99423834273, -28533.749319561575, 5.169805588442352, true));
                scenicList.push(new Scenery("pineTree", 95582.07524034903, -28066.67084154685, 4.819201713904544, true));
                scenicList.push(new Scenery("pineTree", 95781.53318683476, -27645.836928919805, 5.955605798689795, true));
                scenicList.push(new Scenery("pineTree", 96139.67392923801, -27317.87178816798, 5.303763184656871, true));
                scenicList.push(new Scenery("pineTree", 96827.88609624887, -27031.6144254775, 1.4940859118477523, true));
                scenicList.push(new Scenery("pineTree", 96730.73314350788, -26573.79082265538, 5.596943312821863, true));
                scenicList.push(new Scenery("pineTree", 96238.66111699038, -26127.764762927345, 4.888263220541456, true));
                scenicList.push(new Scenery("pineTree", 96488.64070649577, -25706.096286117503, 4.459901142338069, true));
                scenicList.push(new Scenery("pineTree", 97538.116164922, -25365.828618731997, 4.057708630762586, true));
                scenicList.push(new Scenery("pineTree", 98162.12750831735, -24587.851983406155, 5.177494521444627, true));
                scenicList.push(new Scenery("pineTree", 98562.35515979865, -24591.700441258286, 2.1247196298483724, true));
                scenicList.push(new Scenery("pineTree", 98578.37677596851, -25085.5949610871, 6.154157882110825, true));
                scenicList.push(new Scenery("pineTree", 98642.29109947376, -25416.046196775216, 3.8090198464168328, true));
                scenicList.push(new Scenery("pineTree", 98565.05992542542, -25911.629642243057, 5.713705324705042, true));
                scenicList.push(new Scenery("pineTree", 98381.70619577824, -26517.99039910156, 4.936902852349282, true));
                scenicList.push(new Scenery("pineTree", 98298.89956975589, -24283.46671326581, 0.3305946822155083, true));
                scenicList.push(new Scenery("pineTree", 97802.70852484282, -24287.79859153119, 1.2507546654313966, true));
                scenicList.push(new Scenery("pineTree", 97417.10380598335, -24273.54015862302, 2.480885837241454, true));
                scenicList.push(new Scenery("pineTree", 96659.26484624729, -24699.76445823534, 5.400165821375778, true));
                scenicList.push(new Scenery("pineTree", 96670.5091109301, -24382.741435033313, 3.9834750117490123, true));
                scenicList.push(new Scenery("pineTree", 96260.38483643121, -24425.894377603247, 4.498801942139346, true));
                scenicList.push(new Scenery("pineTree", 95638.53842312725, -24238.315615381656, 1.127303504894951, true));
                scenicList.push(new Scenery("pineTree", 95302.67443545083, -24667.831507177598, 2.632438976069163, true));
                scenicList.push(new Scenery("pineTree", 95980.1563117219, -24633.322999490985, 0.7770123191582432, true));

                ArtificialIntelligenceAccess.push(new Unit(95630.17456705855, -25878.128778344068, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(92872.78164346333, -24918.642297048154, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(92765.87677360763, -25070.914220525854, "Skol", false, "preBuilt"));

                ArtificialIntelligenceAccess.push(new Unit(95546.85189105703, -31415.6074927273, "BlackBear", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(95791.11445254962, -30793.087175495824, "BlackBear", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(93336.79828834659, -30585.42073735561, "Badger", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(91946.90387069844, -29933.324045868754, "Crow", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(91701.3444543547, -29837.472096233952, "Crow", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(91741.91704622377, -30100.280294071075, "Crow", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(92004.98345195832, -30187.077248196074, "Crow", false, "preBuilt"));

                scenicList.push(new Scenery("web", 96083.58300881565, -29160.787190040035, 0.7260771123115807, 0.9198271253510832));
                scenicList.push(new Scenery("web", 96027.71224586545, -29212.57408247548, 0.03641874943306769, 1.6783387971637906));
                scenicList.push(new Scenery("web", 96005.30433965128, -29314.898825513712, 4.9397647938633025, 1.562630300529023));
                scenicList.push(new Scenery("web", 96049.91159639189, -29291.81290403923, 2.6552800992178276, 2.73167783634718));
                scenicList.push(new Scenery("web", 96120.2791199432, -29242.870178613626, 0.6318069983047825, 2.7946932406467164));
                scenicList.push(new Scenery("web", 96090.9341842533, -29284.165538889432, 0.7574550209468053, 1.8316274171572269));
                scenicList.push(new Scenery("web", 96145.88900493577, -29190.581511252218, 2.7029461829167416, 2.054396892449656));
                scenicList.push(new Scenery("web", 96202.17957887147, -29232.425089213615, 4.485589406161795, 2.3959094972528985));
                scenicList.push(new Scenery("web", 96146.45095329644, -29281.1272971895, 6.050050216199413, 2.0939002304380088));
                scenicList.push(new Scenery("web", 96174.13580296827, -29336.75036513127, 1.6163857995563389, 1.486952932896437));
                scenicList.push(new Scenery("web", 96091.27609729, -29345.816643189075, 0.22302063555456955, 2.368318957220666));
                scenicList.push(new Scenery("web", 96199.97667223345, -29281.677738997347, 2.890561846962056, 1.7778639552726574));
                scenicList.push(new Scenery("web", 96131.19461383815, -29388.720088708928, 3.244709615879238, 1.3830643836407506));
                scenicList.push(new Scenery("web", 96026.90211649025, -29420.778272591866, 1.3362459604629455, 1.2822018031763902));
                scenicList.push(new Scenery("web", 95945.38391451284, -29417.288349935694, 5.832214847663976, 1.6528437535586709));
                scenicList.push(new Scenery("web", 95930.45526416466, -29465.703244732733, 2.409218879525612, 1.846153895708189));
                scenicList.push(new Scenery("web", 96018.956893951, -29504.89605408084, 0.8485778933819907, 1.2403582669100008));
                scenicList.push(new Scenery("web", 96117.28264179207, -29478.31702769468, 0.5359999313201091, 1.3723690466370126));
                scenicList.push(new Scenery("web", 96201.7320157648, -29421.900586011998, 1.0376857315126857, 1.8528322015767542));
                scenicList.push(new Scenery("web", 96265.5714426088, -29328.73193057628, 4.732098160510207, 0.9491910045532667));
                scenicList.push(new Scenery("web", 96296.71055895399, -29223.04619011061, 4.739017846911995, 2.3176171457303933));
                scenicList.push(new Scenery("web", 96238.23152430724, -29155.69367943315, 5.649903006643415, 0.9965510577784575));
                scenicList.push(new Scenery("web", 96180.18262676189, -29082.457450147165, 0.5315095340501331, 2.6475243501504746));
                scenicList.push(new Scenery("web", 96344.38326454406, -29290.98417572283, 2.053545346837234, 1.04748611123587));
                scenicList.push(new Scenery("web", 96360.8353643576, -29393.096559087076, 1.1750847931438024, 2.0600383454792683));
                scenicList.push(new Scenery("web", 96268.40923198678, -29466.023675301014, 3.077141905424129, 2.4624113783117507));
                scenicList.push(new Scenery("web", 96179.99463377298, -29503.3820041845, 3.8637588879174753, 2.5622043835469186));
                scenicList.push(new Scenery("web", 96121.1977027488, -29472.852872393272, 2.4151606884149595, 2.046111601100441));
                scenicList.push(new Scenery("web", 96095.5882700629, -29539.640612334766, 5.939229852009057, 2.006278026429546));
                scenicList.push(new Scenery("web", 96075.58195539347, -29606.809396406832, 0.26991882641806103, 0.9134919798279604));
                scenicList.push(new Scenery("web", 96157.19428441714, -29592.97734276109, 4.220777969710385, 2.150599652159839));
                scenicList.push(new Scenery("etnaEggSac", 96143.52752323888, -29441.231330685, 2.11068430372431, true));
                scenicList.push(new Scenery("etnaEggSac", 96173.80397973966, -29294.635174139876, 2.552142802762863, true));
                ArtificialIntelligenceAccess.push(new Unit(96129.26464834267, -29332.00376028479, "Etna", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(96197.23576907038, -29349.34478563307, "Etna", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(96255.3872089489, -29284.33458114128, "Etna", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(96261.7739664092, -29404.880917194037, "Etna", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(96066.00330558732, -29412.61190235902, "Etna", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(96011.0875187454, -29369.595790610274, "Etna", false, "preBuilt"));

                scenicList.push(new Scenery("steugiurnePlant", 97194.70376401799, -28368.05324099733, 3.584847105580551, 0));
                ArtificialIntelligenceAccess.push(new Unit(97621.11799173268, -28477.412732879693, "Koivaya", false, "loner"));

                ArtificialIntelligenceAccess.push(new Unit(94369.98865576551, -33370.628009885455, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(94018.38941009529, -33580.15009696012, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(94752.20230200909, -33930.0575733397, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(95052.16105076607, -33517.16246944079, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(95328.8248386633, -33483.49499311518, "Skol", false, "preBuilt"));

                ArtificialIntelligenceAccess.push(new Unit(91656.39658393663, -32256.93371597559, "BlackBear", true, "preBuilt"));
                scenicList.push(new Scenery("cranberryPlant", 91661.71212803591, -31957.544666905167, 2.8509163418154793, 0));
                scenicList.push(new Scenery("cranberryPlant", 90946.18355295064, -31955.054119405962, 5.646330383659765, 0));
                scenicList.push(new Scenery("marigoldPlant", 92019.83488881608, -31891.127823505136, 4.340095813852466, 0));
                scenicList.push(new Scenery("callopPlant", 91127.90212521337, -31272.167615318016, 4.598466154634164, 0));
                scenicList.push(new Scenery("kofkePlant", 91190.95026781873, -30663.409851300592, 3.434111496032795, 0));
                scenicList.push(new Scenery("kofkePlant", 90710.09291470156, -29418.598281711533, 0.5080068178211968, 0));
                scenicList.push(new Scenery("web", 92018.0149110906, -29452.88759329686, 5.954301049357341, 2.7512953147226));
                scenicList.push(new Scenery("web", 91890.73708617967, -29497.73506738057, 4.212308710337189, 2.60081665208886));
                scenicList.push(new Scenery("web", 91965.97467433319, -29327.76699600131, 4.443280389925159, 1.106175070458038));
                scenicList.push(new Scenery("web", 92126.29556495325, -29550.418051423032, 3.878906658147056, 1.17945907627371));
                scenicList.push(new Scenery("web", 92295.54365158218, -29530.39014192041, 3.9274044742004897, 1.4536231895854521));
                scenicList.push(new Scenery("web", 92372.85660468797, -29396.01924743064, 4.05093480365829, 1.8819681617746906));
                scenicList.push(new Scenery("web", 92381.74803135739, -29519.716962096183, 6.069207222362149, 1.7461425630075136));
                scenicList.push(new Scenery("web", 92306.58511614041, -29238.12322400136, 4.894992046002973, 1.6105769487896633));
                scenicList.push(new Scenery("web", 92077.44573970514, -29233.652705395445, 4.870899125339056, 1.632693068287033));
                scenicList.push(new Scenery("web", 92054.28494871322, -29127.611417219337, 6.018050310843079, 1.0204218471345188));
                scenicList.push(new Scenery("web", 91926.1875182743, -29239.89235808961, 4.335333361649952, 1.5604616515427956));
                scenicList.push(new Scenery("web", 91844.89368047715, -29369.055385367297, 1.7252104715429364, 1.484675182535038));
                scenicList.push(new Scenery("web", 92316.43969201122, -29453.299879445323, 2.8465581540950198, 1.2198624181616196));
                scenicList.push(new Scenery("web", 92387.81924949627, -29272.605664588315, 0.13969885924506573, 1.3486130037684596));
                scenicList.push(new Scenery("web", 92416.7387994634, -29241.620297611156, 5.257795076894649, 1.914370255179302));
                scenicList.push(new Scenery("web", 92255.40617107495, -29124.943570281852, 4.056262257560488, 1.3155172454896469));
                scenicList.push(new Scenery("web", 92199.11425407795, -29217.603913250383, 4.234371639412448, 1.6738613575106283));
                scenicList.push(new Scenery("web", 92309.99417508137, -29339.17022237298, 0.22714973725788054, 1.91360223933656));
                scenicList.push(new Scenery("web", 92072.763733373, -29618.074205627687, 0.29206769180542774, 1.7789249160986613));
                scenicList.push(new Scenery("web", 91794.942868726, -29518.680231790288, 0.10800928177399773, 1.0455591499730763));
                scenicList.push(new Scenery("web", 91988.97959432504, -29169.128031156753, 3.742326232802066, 2.4169578935856424));
                scenicList.push(new Scenery("web", 91921.50447432995, -29332.824549202724, 4.3011068637823975, 2.4796085664287277));
                scenicList.push(new Scenery("web", 91996.6737382298, -29272.494006295747, 3.9008732824336203, 2.7902123698191956));
                scenicList.push(new Scenery("web", 92193.50304401515, -29216.455524309513, 4.763815039507006, 2.796676046279745));
                scenicList.push(new Scenery("web", 92241.13442449397, -29503.006650795636, 1.0238885961122743, 2.635894691584342));
                scenicList.push(new Scenery("steugiurnePlant", 92149.03787743638, -29343.713430528856, 0.5479142614881277, 0));
                scenicList.push(new Scenery("etnaEggSac", 92288.14136822113, -29446.29224848564, 4.918045260457589, true));
                scenicList.push(new Scenery("etnaEggSac", 91959.38578273212, -29379.51910590865, 3.418970701152871, true));
                ArtificialIntelligenceAccess.push(new Unit(91986.41385304471, -29221.003375627748, "Etna", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(91981.53606744183, -29424.30491267018, "Etna", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(92242.9856637572, -29516.92520744928, "Etna", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(93575.30092612522, -28802.09876686227, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(92661.01708303277, -28677.65603277192, "Skol", false, "preBuilt"));

                change = "s3w9";
            }
        }
        else if (region == "s3w10")
        {
            if (change != "s3w10")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee || ArtificialIntelligenceAccess[i].team == "arena1" || ArtificialIntelligenceAccess[i].team == "arena2" || ArtificialIntelligenceAccess[i].team == "arena3")
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //characters

                generator(300, 740, 2198, 26, 2023, 1, 108700, -24318); //forest in map s-3-w-10

                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0 ; i--)
                {
                    if (ArtificialIntelligenceAccess[i].type == "Skol" && ArtificialIntelligenceAccess[i].ID == loggedGenID && ArtificialIntelligenceAccess[i].team != "player")
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                    }
                }

                scenicList.push(new Scenery("pineTree", 110645.323725, -28203.272875,0.7779429963507637, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 110882.385225, -32495.991175,5.254969039510712, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109777.760925, -32647.47595,2.537708785318588, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109153.48695, -29185.522,5.149062097427418, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109926.783825, -27133.770025,4.260699864480979, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109248.94042500001, -24559.366375,1.5399897890149925, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109390.882875, -29373.409375,3.5628199638072267, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109886.249175, -28509.417025,5.844719091910256, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109117.45485, -24498.056425,2.271496351321037, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109352.124675, -29748.105775,2.7773590695086514, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 110863.44, -24652.2478,4.09034121084521, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 110819.69565, -31433.053,1.6062359784752755, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109788.850575, -32005.35265,4.820434404623552, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109135.7751, -32056.5382,2.541868859739103, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 110458.470825, -31218.396025000002,0.3770576250055223, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 110420.8524, -30818.423725,5.353097045560471, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 110467.04205, -30432.02635,1.7587618074566238, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 110876.92035, -33884.96545,0.24747799224553896, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 110294.620125, -33967.2886,4.944409753665813, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109273.72395, -28507.701025000002,2.0423361070336714, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109408.087725, -25270.5538,1.801616481927412, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 110651.183475, -27891.75355,2.981350130694604, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109929.172575, -32479.816899999998,0.4876031084511312, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 110687.8893, -33708.45145,5.821022319382193, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109879.0332, -28431.1918,3.4826721997508345, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109957.804425, -31503.132100000003,0.8838597847230691, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109900.81665, -26663.073175,4.204529912755754, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109804.553925, -29720.563,4.506027157307501, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 110655.93854999999, -31722.492475,4.254367270848301, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109488.3195, -31373.3479,0.6895503822170452, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 110516.007525, -26242.63075,2.134615513564255, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109972.864275, -32972.274775,3.732052692106147, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 110713.93935, -30115.446775,1.8380343345938261, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109812.82485, -33158.513425,0.3085943678690388, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 110467.468125, -32215.8103,4.013902431706321, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 110703.511725, -26722.212775,1.8200821771759335, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109579.09395, -33286.6957,0.46719314319768707, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109954.7439, -30031.380325,5.660379925043863, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 110245.4499, -25932.938575,5.748253849145342, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 110635.3953, -30198.7186,3.4083391637456386, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109912.51275, -28601.6023,1.2976411938736898, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 110153.379675, -32357.85415,4.922924353114954, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 110673.71865, -30722.557825,1.195388167344998, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109356.92265, -31119.014275,4.242035837555623, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109341.075, -25318.331725,6.020456949394426, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 110685.628275, -27205.80205,3.7832670397516273, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109547.4864, -24989.288725,3.658271120546856, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109804.98, -24456.75445,1.9667173191986624, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 110721.27525, -31080.6412,3.728683797005659, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 110064.869175, -33180.535749999995,4.101307581172841, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 110304.73965, -27139.45135,2.790481479023974, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 110431.37265, -33841.666675,5.298857343310053, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109926.499125, -32041.204375,1.3135110931458112, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109669.360425, -30865.646875,2.174683534380923, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 110602.37789999999, -26009.89045,0.17704763790948547, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109144.3044, -32191.29685,6.280783460142399, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 110183.727525, -26524.921524999998,1.2939135333410328, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 110061.322125, -28482.235,5.421413079497748, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109189.3923, -32903.7118,2.5493487845573677, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109994.480025, -33834.3103,2.1901183776330773, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 110259.48795, -29834.235325,1.8751350154755986, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109405.617075, -31594.818175,4.059836275650275, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109986.410925, -30329.751775,2.0489870851786884, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 110302.026225, -27295.75165,2.4474372835843714, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("kofkePlant", 109566.48915, -25235.49865,1.462143186017247, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("kofkePlant", 109931.411175, -32223.68245,1.014223519870522, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("steugiurnePlant", 109608.22695, -33869.083675,0.744198946829064, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("thalisPlant", 110441.819775, -25401.98575,1.1967861598356726, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("thalisPlant", 110562.9216, -26405.29,4.552044241990756, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("callopPlant", 109204.69102500001, -32256.926050000002,2.2663721914005395, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("callopPlant", 109375.6563, -32621.385925000002,4.122215846579833, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("darbPlant", 110564.73705, -32908.435675,1.7878705963143466, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("darbPlant", 110137.9425, -30181.674625,2.70877786126429, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("darbPlant", 109182.47175, -25113.41305,4.9239066196215, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 110574.64011334901, -27567.438480868932,0.8188752381451857, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 110163.01713231798, -27971.027228669314,5.230308925854648, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109717.0911727982, -27566.301046008364,0.11409902572766936, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109334.93021696885, -27936.911340243616,0.04399606707488516, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109600.52055678453, -28356.89728544392,1.9908252455536577, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109274.24911433551, -28639.582576397548,2.9702280995319095, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109606.10391061658, -28859.377027357634,3.2630749808245594, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 110287.95145238962, -29137.109802773746,6.218886504055014, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109920.05706043323, -29346.83069097922,1.0666339587933398, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 110637.31290670582, -29618.661392540056,0.18250781676018105, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 110822.15600534368, -32031.049119291158,5.212522850546217, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 110511.35491578693, -33156.877982694205,1.5770982140413987, true, undefined)); //copied s3w11

                scenicList.push(new Scenery("pineTree", 109712.72059447457, -26194.917980788858,3.2630749808245594, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109302.31206229984, -26112.200923204826,6.218886504055014, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109471.78574900079, -26401.312734412342,1.0666339587933398, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109187.91873636201, -26570.21742903646,0.18250781676018105, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109486.56815154564, -27279.443022134088,5.212522850546217, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109178.07324660437, -27376.523221976087,1.5770982140413987, true, undefined)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109067.10507828725, -27680.24623875408,1.5770982140413987, true, undefined)); //copied s3w11

                scenicList.push(new Scenery("pineTree", 109366.00525230878, -24219.651979776856, 2.9091113419851755, true)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 110068.68115758664, -25610.857581777822, 3.8144641526978385, true)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 110679.22275856418, -25634.09086356193, 6.164906815046349, true)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 110113.56735155356, -25165.009606533367, 4.846623043415218, true)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 110592.41716471207, -25128.62922968886, 3.721951835840141, true)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 110103.62448637723, -24713.49146704976, 0.4749559966373353, true)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 110460.3186609748, -24311.688917707863, 5.1302325445358665, true)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 110744.46135219363, -24122.98303503399, 5.772508020666676, true)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109936.153957693, -24074.80231790518, 4.384587738315614, true)); //copied s3w11
                scenicList.push(new Scenery("pineTree", 109177.52388567511, -25717.389529265824, 6.261020207048898, true)); //copied s3w11

                trimmer(119189.39600664338, -26730.695612984702, 97001.6778393279, -27027.729274811954, true)

                trimmer(100005.34474942, -26642.848783392717, 99872.34332215154, -26760.209466437565, true);

                scenicList.push(new Scenery("steugiurnePlant", 101987.97380841551, -26265.179249131772, 4.154074208502539, 0));

                scenicList.push(new Scenery("marigoldPlant", 106316.25086324992, -31888.475089471744, 3.6446969585811138, 0));
                ArtificialIntelligenceAccess.push(new Unit(106621.314132879, -31751.993873912877, "Koivaya", false, "loner"));
                ArtificialIntelligenceAccess.push(new Unit(105065.92602581636, -32128.170533642526, "Badger", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(105321.59904002133, -32189.196886225796, "Badger", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(105003.58746949556, -32459.22238149031, "Badger", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(104491.95946343023, -32800.03725468892, "BlackBear", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(104292.09919617734, -33577.2062106538, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(103985.98718168323, -33864.630019359014, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(103444.69912241341, -30268.872202615818, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(102904.53014866894, -30117.302723305944, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(103249.15412776482, -30946.07181936493, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(104550.25874238084, -27635.743740342845, "BlackBear", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(103899.65070886363, -29107.319432228516, "Deer", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(103774.91460564463, -29158.518540934132, "Deer", "baby", "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(103424.84175537383, -28537.93161435945, "Deer", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(106126.71741286712, -28249.663076230274, "Skol", false, "preBuilt"));
                scenicList.push(new Scenery("cranberryPlant", 106611.97821527564, -28213.731879810337, 2.9903796132990097, 0));
                scenicList.push(new Scenery("korceidaPlant", 103817.99972501541, -25015.30866436403, 2.8088103414592878, 0));
                scenicList.push(new Scenery("web", 103865.56642935377, -25330.014951470086, 3.913735099669213, 1.404043118568337));
                scenicList.push(new Scenery("web", 103992.14439939211, -25325.205638627438, 4.218482401680944, 1.4570260742435913));
                scenicList.push(new Scenery("web", 103897.6259214113, -25244.869750472608, 5.446889435909731, 1.4817445075401015));
                scenicList.push(new Scenery("web", 103763.29305917237, -25282.20715762562, 5.0038738933806215, 1.420369203694728));
                scenicList.push(new Scenery("web", 104055.59340647944, -25256.86440082428, 4.035660873164197, 1.4505535008434933));
                scenicList.push(new Scenery("web", 104123.8153366023, -25283.141396466457, 3.288133139943411, 1.4374505436027273));
                scenicList.push(new Scenery("web", 104147.63905677915, -25180.176373123188, 3.149328323056555, 1.4588376712479467));
                scenicList.push(new Scenery("web", 104156.14550409823, -25241.485945862685, 4.316122947295652, 1.4811178032149277));
                scenicList.push(new Scenery("web", 103824.85665680458, -25408.380232901098, 1.95980871590948, 1.4192980082512148));
                scenicList.push(new Scenery("web", 103936.26419747855, -25429.859043702632, 3.432925068877425, 1.499301631155838));
                scenicList.push(new Scenery("etnaEggSac", 103911.53574273315, -25386.08995375936, 3.1864153282562344, true));
                ArtificialIntelligenceAccess.push(new Unit(103927.70294000462, -25305.23216480569, "Etna", false, "preBuilt"));

                ArtificialIntelligenceAccess.push(new Unit(103024.66466441262, -24377.407562862336, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(103570.89641351138, -24248.53121805018, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(104178.27733698132, -24128.718923121345, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(104079.4126501009, -24266.8982865203, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(103802.69956708833, -24518.94285336484, "Skol", false, "preBuilt"));

                ArtificialIntelligenceAccess.push(new Unit(103220.78201469334, -26529.340252650603, "Badger", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(100923.05229267533, -33272.4665013917, "Badger", false, "preBuilt"));
                scenicList.push(new Scenery("callopPlant", 100794.42744523125, -32114.682150652876, 5.854324681167122, 0));

                ArtificialIntelligenceAccess.push(new Unit(99439.05478271095, -25105.42909064458, "Lizard", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(99855.65237871495, -26706.012610700156, "Lizard", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(99993.3218616686, -27105.11862037381, "Lizard", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(101325.44734820636, -26862.62386228615, "Lizard", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(102222.75863769441, -27108.418210387255, "Lizard", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(103171.48426594656, -27101.791942511645, "Lizard", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(100565.33726080543, -25921.073057329853, "Lizard", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(100758.12401288556, -25111.05296236261, "Koivaya", false, "loner"));
                ArtificialIntelligenceAccess.push(new Unit(101790.01210774355, -25623.228928489276, "Crow", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(101456.86685117582, -25892.730465235476, "Crow", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(101487.68390585954, -25740.88137925474, "Crow", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(101304.83984347602, -25774.40361078563, "Crow", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(101645.09006788579, -25577.493818099283, "Crow", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(101686.15356751857, -26002.79480568249, "Crow", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(102276.93324020987, -26547.08098291543, "Hoffalgre", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(102430.52998825318, -26316.33258273747, "Hoffalgre", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(102095.3904610689, -26102.508173481197, "Hoffalgre", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(102027.50423049656, -25875.387779183715, "Hoffalgre", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(102822.07308533012, -25087.428349721144, "Badger", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(102383.30215385547, -24666.986840788046, "Badger", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(100034.23788385716, -32764.614540659142, "Badger", true, "preBuilt"));
                if (Math.random() > 0.85)
                {
                    ArtificialIntelligenceAccess.push(new Unit(104636.7985103498, -25221.50953490241, "Fox", true, "preBuilt"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(104636.7985103498, -25221.50953490241, "Crow", true, "preBuilt"));
                }
                ArtificialIntelligenceAccess.push(new Unit(105435.20942253339, -26196.66252040969, "Deer", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(106356.22272543944, -25981.340793994408, "Deer", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(106599.33885101925, -25947.727563459084, "Deer", "baby", "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(106457.84618891761, -26045.707940644097, "Deer", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(106910.51754111168, -25416.30147915128, "Deer", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(107665.65336783857, -25518.250250084937, "Deer", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(107821.31573347312, -25452.380080373194, "Deer", "baby", "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(107958.20580153016, -25683.852425294255, "Deer", "baby", "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(108027.632104266, -25316.85722592037, "Deer", false, "preBuilt"));
                if (Math.random() > 0.9)
                {
                    ArtificialIntelligenceAccess.push(new Unit(108117.0243281604, -26339.446917040656, "Fox", false, "preBuilt"));
                }
                ArtificialIntelligenceAccess.push(new Unit(108154.15795274772, -28793.409423273788, "Skol", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(108567.51214393722, -29359.22420773854, "Skol", false, "preBuilt"));

                scenicList.push(new Scenery("pineTree", 100902.60135882536, -28746.44769211666, 0.03506000007213428, true));
                scenicList.push(new Scenery("pineTree", 99538.65550847218, -28290.262636418283, 5.739013861190927, true));
                scenicList.push(new Scenery("pineTree", 99607.28323807442, -29467.327129857786, 2.4049140310795893, true));
                scenicList.push(new Scenery("pineTree", 99147.42085051353, -29520.6043962643, 1.5014976655831893, true));
                scenicList.push(new Scenery("pineTree", 99802.87424054192, -29814.519717975247, 4.375582742561772, true));
                scenicList.push(new Scenery("pineTree", 99144.92465992416, -24194.338731406668, 4.8851524223410685, true));
                scenicList.push(new Scenery("pineTree", 100147.38617049035, -29727.066158426358, 0.07694679796832042, true));
                scenicList.push(new Scenery("pineTree", 100354.35450177237, -30068.433770512416, 1.1078785779042057, true));
                scenicList.push(new Scenery("pineTree", 100639.29453500026, -30225.154523458346, 6.194937612501974, true));
                scenicList.push(new Scenery("pineTree", 101118.40813470133, -30267.23825047758, 1.3075838051753876, true));
                scenicList.push(new Scenery("pineTree", 101356.71826319167, -30438.909545039303, 5.397553381954014, true));
                scenicList.push(new Scenery("pineTree", 101300.14631834842, -30051.41464722418, 5.196861108845601, true));
                scenicList.push(new Scenery("pineTree", 101320.64408167699, -29682.58933920876, 3.718421623819528, true));
                scenicList.push(new Scenery("pineTree", 101743.74394314538, -29454.805666786942, 4.522257435722682, true));
                scenicList.push(new Scenery("pineTree", 101732.10556612846, -28978.073232916675, 3.060130922535327, true));
                scenicList.push(new Scenery("pineTree", 102277.50350814973, -28437.942928525263, 5.734734113875372, true));
                scenicList.push(new Scenery("pineTree", 102579.84026764244, -28550.792233009804, 5.691376123350062, true));
                scenicList.push(new Scenery("pineTree", 102752.17472431838, -28835.36041251841, 0.6307628900925539, true));
                scenicList.push(new Scenery("pineTree", 102616.65898302858, -30303.480884925546, 6.069259133955485, true));
                scenicList.push(new Scenery("pineTree", 103508.92560999273, -30560.880111719445, 3.8130839829164236, true));
                scenicList.push(new Scenery("pineTree", 103807.93918939296, -30879.75899554782, 2.6280621395384762, true));
                scenicList.push(new Scenery("pineTree", 103302.24793314199, -31620.917852465835, 6.224084692366087, true));
                scenicList.push(new Scenery("pineTree", 103054.28740632896, -31961.315732551047, 5.822573581173299, true));
                scenicList.push(new Scenery("pineTree", 102586.35481589203, -31944.971154755094, 0.9413498053704961, true));
                scenicList.push(new Scenery("pineTree", 102571.72207031568, -32347.864465728966, 3.085974722267854, true));
                scenicList.push(new Scenery("pineTree", 102993.9169438884, -32454.66336512656, 5.507654807051067, true));
                scenicList.push(new Scenery("pineTree", 102477.75350204823, -32737.789561097557, 4.7974906226985405, true));
                scenicList.push(new Scenery("pineTree", 102349.06838841236, -33184.7254111443, 1.7691124232563042, true));
                scenicList.push(new Scenery("pineTree", 101994.01052490088, -32996.345017409614, 2.583209885558084, true));
                scenicList.push(new Scenery("pineTree", 102137.59371105747, -32654.772175163125, 5.8099359360235905, true));
                scenicList.push(new Scenery("pineTree", 101673.83368842526, -32618.6064374352, 1.9331083782727412, true));
                scenicList.push(new Scenery("pineTree", 101490.85147700577, -32957.97685750732, 0.7313682486989883, true));
                scenicList.push(new Scenery("pineTree", 101119.2665263419, -32937.78215385534, 3.1019476874279106, true));
                scenicList.push(new Scenery("pineTree", 101390.16217836135, -33248.73418536183, 0.18689538822831922, true));
                scenicList.push(new Scenery("pineTree", 100724.17628916563, -33060.46907278478, 5.798596963950197, true));
                scenicList.push(new Scenery("pineTree", 100464.75471716798, -33099.858774327105, 3.9989227350815426, true));
                scenicList.push(new Scenery("pineTree", 100306.98264901836, -32934.496032750205, 2.038232050894796, true));
                scenicList.push(new Scenery("pineTree", 101109.09006213129, -32662.13245852774, 0.9788394526310763, true));
                scenicList.push(new Scenery("pineTree", 101431.12467500025, -32396.052750631145, 5.063727084603584, true));
                scenicList.push(new Scenery("pineTree", 102098.39997898771, -32254.359850882603, 4.786947894956914, true));
                scenicList.push(new Scenery("pineTree", 102313.26633910046, -32025.350367701485, 3.9168029170829706, true));
                scenicList.push(new Scenery("pineTree", 103681.74429844074, -32239.424808872263, 5.014516557448867, true));
                scenicList.push(new Scenery("pineTree", 103825.69994355041, -31966.75296094642, 3.246962892987408, true));
                scenicList.push(new Scenery("pineTree", 104837.77197791814, -31884.7106651418, 5.6713270432349105, true));
                scenicList.push(new Scenery("pineTree", 105222.79134033064, -31848.499517182525, 0.4536401168554006, true));
                scenicList.push(new Scenery("pineTree", 105558.26823274032, -31793.883561676303, 3.5138661469554613, true));
                scenicList.push(new Scenery("pineTree", 105896.46750034922, -32142.48530605293, 1.1993398760194243, true));
                scenicList.push(new Scenery("pineTree", 105737.46451608399, -32470.105668551852, 5.2330067260454936, true));
                scenicList.push(new Scenery("pineTree", 105255.8901298453, -32790.91264444818, 2.4076022772640715, true));
                scenicList.push(new Scenery("pineTree", 106023.51070803667, -32948.853866753896, 0.3826526212709348, true));
                scenicList.push(new Scenery("pineTree", 106249.75750471465, -33588.830890801924, 3.191989155406802, true));
                scenicList.push(new Scenery("pineTree", 106587.31660995683, -33879.043999588626, 2.152083525841958, true));
                scenicList.push(new Scenery("pineTree", 106067.02103889364, -34050.176077588134, 4.03048530163928, true));
                scenicList.push(new Scenery("pineTree", 105574.07981628606, -34134.97362409718, 2.1138280310258986, true));
                scenicList.push(new Scenery("pineTree", 104880.91315302395, -34152.01784987337, 1.3292722542431241, true));
                scenicList.push(new Scenery("pineTree", 105782.7671987193, -33881.64188399417, 2.637997675150488, true));
                scenicList.push(new Scenery("pineTree", 105696.68199124139, -33532.05850783811, 3.6108460251878802, true));
                scenicList.push(new Scenery("pineTree", 105359.99516276747, -33482.130541796105, 5.766379471936345, true));
                scenicList.push(new Scenery("pineTree", 104801.86115986435, -33482.30681472452, 6.069002586781084, true));
                scenicList.push(new Scenery("pineTree", 104633.88570681734, -33003.98522473019, 5.944284051658526, true));
                scenicList.push(new Scenery("pineTree", 104849.5005786316, -32691.67790349213, 5.372016860965784, true));
                scenicList.push(new Scenery("pineTree", 104373.53871680748, -32552.234008131494, 3.428492830339649, true));
                scenicList.push(new Scenery("pineTree", 103755.13427986931, -32876.26464056174, 2.651499438578985, true));
                scenicList.push(new Scenery("pineTree", 106643.31387271568, -31331.95148736895, 1.8066644842698514, true));
                scenicList.push(new Scenery("pineTree", 106888.27669547718, -31683.53288294209, 1.6235799225988246, true));
                scenicList.push(new Scenery("pineTree", 107144.26715461514, -31463.417101356266, 4.905920685643587, true));
                scenicList.push(new Scenery("pineTree", 106804.36665847052, -32116.825993315968, 3.926716840473608, true));
                scenicList.push(new Scenery("pineTree", 107391.19150856957, -31628.672694108853, 5.612936074890072, true));
                scenicList.push(new Scenery("pineTree", 107739.56204238423, -31588.752737161372, 1.2631676366637203, true));
                scenicList.push(new Scenery("pineTree", 107873.43205034087, -32179.56770645874, 0.3543614028893251, true));
                scenicList.push(new Scenery("pineTree", 108641.56304815812, -31945.791436975956, 5.111949429436711, true));
                scenicList.push(new Scenery("pineTree", 108845.60086585901, -31619.332334738647, 4.29423615076681, true));
                scenicList.push(new Scenery("pineTree", 108684.42567883486, -31391.479624982934, 5.9246804492549465, true));
                scenicList.push(new Scenery("pineTree", 108799.72073915615, -31012.352261830256, 4.504966413690368, true));
                scenicList.push(new Scenery("pineTree", 108227.65825881179, -30921.183808160786, 5.220033753269148, true));
                scenicList.push(new Scenery("pineTree", 108180.39926468788, -30526.314517740262, 2.201911316438241, true));
                scenicList.push(new Scenery("pineTree", 108819.24645949334, -30508.871734675075, 3.682941129893749, true));
                scenicList.push(new Scenery("pineTree", 108798.46553886967, -29715.761010361282, 2.4534624558345204, true));
                scenicList.push(new Scenery("pineTree", 108342.99884538923, -29669.01194349485, 6.046351804112243, true));
                scenicList.push(new Scenery("pineTree", 108934.83108240174, -28930.537440415752, 0.24691308162447204, true));
                scenicList.push(new Scenery("pineTree", 108753.2337871134, -28452.559883594426, 0.7777963634917223, true));
                scenicList.push(new Scenery("pineTree", 108885.74463424544, -28281.74918406006, 4.980193520089481, true));
                scenicList.push(new Scenery("pineTree", 108367.00020452775, -28215.486559038727, 3.3579368198711887, true));
                scenicList.push(new Scenery("pineTree", 108015.93204614238, -27672.27439515094, 0.725170824231149, true));
                scenicList.push(new Scenery("pineTree", 108697.23746441652, -27493.13598690433, 5.523618671108323, true));
                scenicList.push(new Scenery("pineTree", 108875.20053111223, -27165.863428004413, 1.0844155153728534, true));
                scenicList.push(new Scenery("pineTree", 108822.61812627435, -26520.93914679979, 2.2951936510511617, true));
                scenicList.push(new Scenery("pineTree", 108490.66286486873, -26217.683242687162, 3.0786979114627, true));
                scenicList.push(new Scenery("pineTree", 108820.29839747478, -26086.944321713567, 5.952728039275351, true));
                scenicList.push(new Scenery("pineTree", 108176.38580229034, -25918.952941251657, 3.295783196630823, true));
                scenicList.push(new Scenery("pineTree", 108159.70208210422, -25502.930814588293, 1.863723492969414, true));
                scenicList.push(new Scenery("pineTree", 108940.80821012252, -24689.343946695935, 5.315588038994725, true));
                scenicList.push(new Scenery("pineTree", 108889.34093971566, -24183.908534927836, 2.296438242871508, true));
                scenicList.push(new Scenery("pineTree", 108457.03888519407, -24150.121168275098, 4.754559532631721, true));
                scenicList.push(new Scenery("pineTree", 108177.51983065717, -24379.174423747372, 0.9868863630188494, true));
                scenicList.push(new Scenery("pineTree", 107768.91247783635, -24233.61370835808, 0.10260718102765015, true));
                scenicList.push(new Scenery("pineTree", 107640.14299101298, -24628.077940023704, 4.825753328334618, true));
                scenicList.push(new Scenery("pineTree", 107068.06481296412, -24779.502414846094, 1.0525442740445028, true));
                scenicList.push(new Scenery("pineTree", 106830.6634461267, -24432.73096777353, 1.1270618191325972, true));
                scenicList.push(new Scenery("pineTree", 106386.2750389766, -24218.156238285606, 3.845836877431152, true));
                scenicList.push(new Scenery("pineTree", 106525.7926383156, -24630.557215091747, 0.3263449619557907, true));
                scenicList.push(new Scenery("pineTree", 106535.36866955648, -25125.64793668777, 5.6099973452293, true));
                scenicList.push(new Scenery("pineTree", 106005.77481352736, -25331.08811891415, 0.722434179808733, true));
                scenicList.push(new Scenery("pineTree", 105517.59292427126, -25454.689601858823, 4.852281625924615, true));
                scenicList.push(new Scenery("pineTree", 105595.07077348261, -25057.11559015759, 5.187379144989668, true));
                scenicList.push(new Scenery("pineTree", 105408.18551974172, -24673.629553490086, 1.4184521905973249, true));
                scenicList.push(new Scenery("pineTree", 105203.88222096101, -24240.122220939345, 0.19823847099200476, true));
                scenicList.push(new Scenery("pineTree", 104920.47997462479, -24606.78632050379, 4.5449134973322405, true));
                scenicList.push(new Scenery("pineTree", 104638.6090193661, -24340.667365032765, 1.6932032319514991, true));
                scenicList.push(new Scenery("pineTree", 104220.78341727426, -24103.285833441365, 0.42063351909750896, true));
                scenicList.push(new Scenery("pineTree", 104124.57356914712, -24306.366424243315, 3.191648817571586, true));
                scenicList.push(new Scenery("pineTree", 103605.17388786239, -24221.08735453287, 3.230793342215361, true));
                scenicList.push(new Scenery("pineTree", 103407.61618440671, -24481.939337754546, 4.136084683290505, true));
                scenicList.push(new Scenery("pineTree", 103017.80059591903, -24310.229144481462, 4.937166055928825, true));
                scenicList.push(new Scenery("pineTree", 103161.47412829807, -24700.309394404278, 0.3230953367062264, true));
                scenicList.push(new Scenery("pineTree", 102620.72019580762, -25019.95342044025, 3.2074544189353267, true));
                scenicList.push(new Scenery("pineTree", 102797.78263539435, -25310.855394588463, 1.5806711150431214, true));
                scenicList.push(new Scenery("pineTree", 102313.61155017866, -25171.88267005561, 0.4952804544872169, true));
                scenicList.push(new Scenery("pineTree", 102101.70109909521, -24453.944893591644, 0.6862217175752289, true));
                scenicList.push(new Scenery("pineTree", 101793.14053103978, -24252.934669542727, 4.7625560431689244, true));
                scenicList.push(new Scenery("pineTree", 101441.8211289912, -24477.71061312822, 5.488636786992579, true));
                scenicList.push(new Scenery("pineTree", 100803.99918574918, -24481.749190970586, 0.12830182554286262, true));
                scenicList.push(new Scenery("pineTree", 100387.35428391531, -24212.660063222236, 5.203872374089259, true));
                scenicList.push(new Scenery("pineTree", 100118.43985848251, -24448.259793950874, 3.4955192994550752, true));
                scenicList.push(new Scenery("pineTree", 99748.97944791522, -24212.78271496551, 0.7371553525957182, true));
                scenicList.push(new Scenery("pineTree", 98997.49528053639, -28252.98469925065, 1.1955923126399226, true));
                scenicList.push(new Scenery("pineTree", 98888.00524263873, -28763.78283542729, 0.09871721114478638, true));
                scenicList.push(new Scenery("pineTree", 99171.11150970645, -29266.464321345655, 5.229176654536753, true));
                scenicList.push(new Scenery("pineTree", 100683.43859398061, -28408.23687054243, 3.338579939822369, true));
                scenicList.push(new Scenery("pineTree", 101135.26221405507, -28245.348014105602, 1.448220543245681, true));
                scenicList.push(new Scenery("pineTree", 101534.84602133438, -28232.407553366997, 2.5207835194149126, true));
                scenicList.push(new Scenery("pineTree", 101748.95448511229, -28437.879635198653, 0.21223102638765534, true));
                scenicList.push(new Scenery("pineTree", 100573.64880352304, -28079.113098977643, 3.4783559585329806, true));
                scenicList.push(new Scenery("pineTree", 100199.329295081, -27921.460883476942, 3.7575916694081775, true));
                scenicList.push(new Scenery("pineTree", 99791.10811719476, -28541.163365659577, 5.717282947132565, true));
                scenicList.push(new Scenery("pineTree", 100181.10750162926, -28453.672226052146, 1.7876150404465283, true));

                scenicList.push(new Scenery("web", 107843.61195820308, -32116.867929703923, 2.223832248423401, 1.7441878252087857));
                scenicList.push(new Scenery("web", 107792.38387186104, -32048.16871758801, 5.200167004394183, 1.5369639542946272));
                scenicList.push(new Scenery("web", 107792.85443687886, -31957.888533785885, 0.3625005185266814, 2.5165977638901267));
                scenicList.push(new Scenery("web", 107647.0230745135, -31998.984363906373, 6.2544546260576075, 1.3492786357007325));
                scenicList.push(new Scenery("web", 107698.55177682258, -31913.823510183323, 5.922156588286354, 2.5713267869057255));
                scenicList.push(new Scenery("web", 107693.64067922485, -32061.651597752054, 2.370882727461866, 1.2918182996309184));
                scenicList.push(new Scenery("web", 107657.06100093169, -32126.256402911076, 5.521989060986263, 2.608708357702493));
                scenicList.push(new Scenery("web", 107738.53050538394, -32126.02188179117, 2.1473017335563407, 2.4871839047258066));
                scenicList.push(new Scenery("web", 107736.19348146814, -32206.36923479813, 0.20369520331885, 2.1511548329097328));
                scenicList.push(new Scenery("web", 107853.67647960695, -32250.236466345636, 1.9686903868413004, 2.3689732955302283));
                scenicList.push(new Scenery("web", 107780.97375678734, -32295.680813596147, 5.532718696661902, 1.5691018847292502));
                scenicList.push(new Scenery("web", 107647.44457884991, -32253.44644684896, 6.110779030229643, 0.9977085476302592));
                scenicList.push(new Scenery("web", 107543.37992604835, -32295.402622546837, 0.06563267855256175, 1.694056027434994));
                scenicList.push(new Scenery("web", 107537.51640184707, -32181.055381614526, 1.3562959141298678, 2.303992188012217));
                scenicList.push(new Scenery("web", 107554.19462395282, -32101.092080773684, 2.921336415482346, 1.9488846518627647));
                scenicList.push(new Scenery("web", 107568.2052793553, -32019.14025135133, 5.258383036795314, 1.9488599444594814));
                scenicList.push(new Scenery("web", 107553.85996282076, -31902.63082630526, 2.1427432263021884, 2.397547593656885));
                scenicList.push(new Scenery("web", 107545.8348075512, -32413.80725913598, 2.6426313064229823, 1.74370486666996));
                scenicList.push(new Scenery("web", 107593.47557652487, -32360.68091367494, 1.2568245802532472, 1.6448248715445795));
                scenicList.push(new Scenery("web", 107706.50299585097, -32351.786031827447, 2.2929335743753403, 2.060555720686801));
                scenicList.push(new Scenery("web", 107825.84652386805, -32398.62178984003, 5.622754907233612, 2.325024774609564));
                scenicList.push(new Scenery("web", 107782.7512008911, -32453.64537226388, 5.297469349752315, 2.1995674373997796));
                scenicList.push(new Scenery("web", 107673.161791309, -32452.486212451488, 0.5183484579102801, 1.3570373472222725));
                scenicList.push(new Scenery("web", 107619.35679418764, -32533.21151878909, 5.603355651181935, 2.311732851121806));
                scenicList.push(new Scenery("web", 107799.02472434333, -32543.1554975122, 5.125170068315553, 1.6087662158570268));
                scenicList.push(new Scenery("web", 107878.85951361817, -32317.96913958417, 4.411799162475265, 1.386104539355317));

                ArtificialIntelligenceAccess.push(new Unit(107686.37237341974, -31984.722466092422, "Etna", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(107796.44804234519, -32202.9544451913, "Etna", true, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(107596.89675133262, -32238.360657351404, "Etna", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(107598.11445882282, -32434.767596999336, "Etna", false, "preBuilt"));
                ArtificialIntelligenceAccess.push(new Unit(107802.77233579048, -32419.711457358953, "Etna", true, "preBuilt"));


                if (Math.random() >= 0.95)
                {
                    ArtificialIntelligenceAccess.push(new Unit(101039.20932796042, -26507.254232032315, "Neev", false, "Westerly"));
                }

                change = "s3w10";
            }
        }
        else if (region == "s3w11")
        {
            if (change != "s3w11")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee || ArtificialIntelligenceAccess[i].team == "arena1" || ArtificialIntelligenceAccess[i].team == "arena2" || ArtificialIntelligenceAccess[i].team == "arena3")
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //characters

                generator(55, 8034, 1022, 20359, 108756, 1, 118860, -24334); //forest in map s-3-w-11

                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0 ; i--)
                {
                    if (ArtificialIntelligenceAccess[i].type == "Skol" && ArtificialIntelligenceAccess[i].ID == loggedGenID && ArtificialIntelligenceAccess[i].team != "player")
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                    }
                }

                trimmer(114848.53927592107, -32680.167752473182, 114383.52536807343, -33493.33130240283, true);
                trimmer(115611.29439992961, -24442.441707382142, 115265.35188650209, -29493.092585908256, true);
                trimmer(115410.12354399967, -29388.686194347873, 115251.24213005281, -29868.431122176724, true);
                trimmer(115354.91730874556, -29762.58123134355, 114948.11177709152, -32477.00123935625, true);

                trimmer(119189.39600664338, -26730.695612984702, 97001.6778393279, -27027.729274811954, true);
                scenicList.push(new Scenery("pineStumps", 118632.97422352833, -28371.515145629975, 0.5, true));
                scenicList.push(new Scenery("pineStumps", 118153.06797655467, -28566.446696859057, 3, true));
                scenicList.push(new Scenery("pineStumps", 118661.199955785, -28919.65144917017, 5.6, true));
                scenicList.push(new Scenery("pineStumps", 118832.50440855726, -31772.68471169502, 2, true));
                scenicList.push(new Scenery("pineStumps", 118720.42738956182, -27537.720999141395, 9, true));
                scenicList.push(new Scenery("pineTree", 117687.62891243193, -27167.95946180371, 2.3746931455389193, true));
                scenicList.push(new Scenery("pineTree", 118117.04659936164, -26593.653802378347, 2.086815384333472, true));
                scenicList.push(new Scenery("pineTree", 117546.00210933521, -26554.151514609614, 0.7248987243530637, true));
                scenicList.push(new Scenery("pineTree", 117877.40789845344, -26329.68102167326, 1.2886323753526736, true));
                scenicList.push(new Scenery("pineTree", 117759.61683117812, -26087.74346569424, 1.5816582286873857, true));
                scenicList.push(new Scenery("pineTree", 118495.33885774037, -25692.499543709033, 5.521892329685004, true));
                scenicList.push(new Scenery("pineTree", 117804.78046027526, -25390.46122060299, 0.22871603627976006, true));
                scenicList.push(new Scenery("pineTree", 118342.8700474794, -25314.28609359635, 5.6556961895602615, true));
                scenicList.push(new Scenery("pineTree", 118849.39403697765, -25455.10003903868, 2.9834928147013198, true));
                scenicList.push(new Scenery("pineTree", 118651.61793901684, -26631.61612694573, 4.860391851343948, true));
                scenicList.push(new Scenery("pineTree", 115953.11713150176, -28522.751120061064, 1.6417752732924997, true));
                scenicList.push(new Scenery("pineTree", 114993.90662925593, -28848.89963236565, 0.4869216169727271, true));
                scenicList.push(new Scenery("pineTree", 115678.57336853849, -29289.656676628994, 5.780942209174492, true));
                scenicList.push(new Scenery("pineTree", 115840.3873287001, -29644.36803798029, 0.692240301880813, true));
                scenicList.push(new Scenery("pineTree", 114557.80352622975, -29712.47141907672, 3.300038450960051, true));
                scenicList.push(new Scenery("pineTree", 114336.29338032221, -29131.21143748353, 0.6951998327894746, true));
                scenicList.push(new Scenery("pineTree", 114414.95683081598, -28688.90847478128, 1.5613576698284226, true));
                scenicList.push(new Scenery("pineTree", 114034.63835518023, -28273.344999340567, 2.498520127573063, true));
                scenicList.push(new Scenery("pineTree", 114489.42391202346, -28215.143081506314, 2.1308527461742646, true));
                scenicList.push(new Scenery("pineTree", 114401.1351304207, -27985.747578583097, 4.876135114059501, true));
                scenicList.push(new Scenery("pineTree", 114515.90998229643, -27591.01084538461, 1.7971185973961392, true));
                scenicList.push(new Scenery("pineTree", 114920.2538521136, -27552.12066847212, 1.3279822759724271, true));
                scenicList.push(new Scenery("pineTree", 114622.8018177039, -27260.16665183013, 6.080388973171971, true));
                scenicList.push(new Scenery("pineTree", 113543.03899642266, -28272.91933103849, 1.7426070546849612, true));
                scenicList.push(new Scenery("pineTree", 113032.29356732876, -29007.26812543614, 1.9788518050535473, true));
                scenicList.push(new Scenery("pineTree", 113232.96024170441, -29568.658212238628, 2.741330930750686, true));
                scenicList.push(new Scenery("pineTree", 113694.15178750266, -29786.275058704497, 0.9750352737080421, true));
                scenicList.push(new Scenery("pineTree", 112697.65635271593, -29199.89263804269, 5.856175128011508, true));
                scenicList.push(new Scenery("pineTree", 112075.68484202241, -29062.409638534173, 4.853523368736539, true));
                scenicList.push(new Scenery("pineTree", 111765.13416793237, -28757.794901433906, 1.7818134493420095, true));
                scenicList.push(new Scenery("pineTree", 111277.34371660731, -28395.324241102357, 5.213215301465832, true));
                scenicList.push(new Scenery("pineTree", 111902.18919190243, -27987.059697993507, 4.241870461950656, true));
                scenicList.push(new Scenery("pineTree", 111397.36980505711, -27639.09844802431, 0.763587158636462, true));
                scenicList.push(new Scenery("pineTree", 110574.64011334901, -27567.438480868932, 0.8188752381451857, true));
                scenicList.push(new Scenery("pineTree", 110163.01713231798, -27971.027228669314, 5.230308925854648, true));
                scenicList.push(new Scenery("pineTree", 109717.0911727982, -27566.301046008364, 0.11409902572766936, true));
                scenicList.push(new Scenery("pineTree", 109334.93021696885, -27936.911340243616, 0.04399606707488516, true));
                scenicList.push(new Scenery("pineTree", 109600.52055678453, -28356.89728544392, 1.9908252455536577, true));
                scenicList.push(new Scenery("pineTree", 109274.24911433551, -28639.582576397548, 2.9702280995319095, true));
                scenicList.push(new Scenery("pineTree", 109606.10391061658, -28859.377027357634, 3.2630749808245594, true));
                scenicList.push(new Scenery("pineTree", 110287.95145238962, -29137.109802773746, 6.218886504055014, true));
                scenicList.push(new Scenery("pineTree", 109920.05706043323, -29346.83069097922, 1.0666339587933398, true));
                scenicList.push(new Scenery("pineTree", 110637.31290670582, -29618.661392540056, 0.18250781676018105, true));
                scenicList.push(new Scenery("pineTree", 111389.67906630723, -29701.449970227997, 4.0661485377074715, true));
                scenicList.push(new Scenery("pineTree", 111209.63127988765, -30070.29715162714, 5.142604546159222, true));
                scenicList.push(new Scenery("pineTree", 111281.83941510797, -31726.720128239464, 3.1338504313451505, true));
                scenicList.push(new Scenery("pineTree", 110822.15600534368, -32031.049119291158, 5.212522850546217, true));
                scenicList.push(new Scenery("pineTree", 111628.30114200551, -32028.86324603087, 0.12192379502475585, true));
                scenicList.push(new Scenery("pineTree", 112310.14426930265, -31841.66517411526, 4.939983481590402, true));
                scenicList.push(new Scenery("pineTree", 112823.15322703867, -31597.356853162444, 2.9859300433869853, true));
                scenicList.push(new Scenery("pineTree", 113235.89143697954, -31823.13653150924, 3.6480345385156396, true));
                scenicList.push(new Scenery("pineTree", 112600.08203133162, -32405.70142578295, 6.261835769197353, true));
                scenicList.push(new Scenery("pineTree", 112223.27299757091, -32727.32104060585, 5.607428410206946, true));
                scenicList.push(new Scenery("pineTree", 111762.79129229985, -33119.90330636114, 0.3759613294634232, true));
                scenicList.push(new Scenery("pineTree", 111087.6986697909, -33364.26931447672, 1.7900979296131976, true));
                scenicList.push(new Scenery("pineTree", 110511.35491578693, -33156.877982694205, 1.5770982140413987, true));
                scenicList.push(new Scenery("pineTree", 113098.2519907789, -34076.149562868595, 0.8296352745137744, true));
                scenicList.push(new Scenery("pineTree", 114240.31987164407, -33921.84639948708, 2.621268263472588, true));
                scenicList.push(new Scenery("pineTree", 114668.8000377008, -33307.746516301835, 2.3717252025015942, true));
                scenicList.push(new Scenery("pineTree", 115220.07148675159, -33584.021705241394, 1.4488788158240842, true));
                scenicList.push(new Scenery("pineTree", 115037.28070561803, -33034.907894404554, 2.8180699084099645, true));
                scenicList.push(new Scenery("pineTree", 115679.71969800322, -33134.966977518176, 3.010162625188263, true));
                scenicList.push(new Scenery("pineTree", 116570.50378836435, -33245.99484492988, 2.490976696230067, true));
                scenicList.push(new Scenery("pineTree", 116356.62528072092, -32900.734132706355, 4.628543290731827, true));
                scenicList.push(new Scenery("pineTree", 116746.26414020751, -33674.94288735536, 4.11075660200993, true));
                scenicList.push(new Scenery("pineTree", 116861.37412043447, -34088.9343429456, 5.619693386082585, true));
                scenicList.push(new Scenery("pineTree", 117484.77687793187, -33302.58351626892, 3.279637703197406, true));
                scenicList.push(new Scenery("pineTree", 117824.48217682441, -33455.20040085865, 0.5860062767936317, true));
                scenicList.push(new Scenery("pineTree", 118493.98041872485, -33882.28378585872, 0.19385640173869767, true));
                scenicList.push(new Scenery("pineTree", 118001.20367853013, -34078.980722855405, 0.4233136845637001, true));
                scenicList.push(new Scenery("pineTree", 118793.63570162345, -33996.612120087804, 0.9637806214188928, true));
                scenicList.push(new Scenery("pineTree", 118905.47350655815, -33622.101896080276, 6.159100723739134, true));
                scenicList.push(new Scenery("pineTree", 118985.58568933369, -32785.905269035065, 0.2260790235192638, true));
                scenicList.push(new Scenery("pineTree", 118468.76505323261, -32686.18969802045, 1.5881349815821497, true));
                scenicList.push(new Scenery("pineTree", 118184.41616950849, -32425.770310794673, 1.977233630083071, true));
                scenicList.push(new Scenery("pineTree", 119013.88903160596, -32494.87277048124, 0.2932722935611253, true));
                scenicList.push(new Scenery("pineTree", 118876.96902539408, -32231.277142510145, 0.5059851659413847, true));
                scenicList.push(new Scenery("pineTree", 118123.45623131772, -32000.87838899186, 1.278957962794416, true));
                scenicList.push(new Scenery("pineTree", 117472.78255205108, -31529.527677413316, 0.6062062007926462, true));

                scenicList.push(new Scenery("pineTree", 109712.72059447457, -26194.917980788858,3.2630749808245594, true, undefined));
                scenicList.push(new Scenery("pineTree", 109302.31206229984, -26112.200923204826,6.218886504055014, true, undefined));
                scenicList.push(new Scenery("pineTree", 109471.78574900079, -26401.312734412342,1.0666339587933398, true, undefined));
                scenicList.push(new Scenery("pineTree", 109187.91873636201, -26570.21742903646,0.18250781676018105, true, undefined));
                scenicList.push(new Scenery("pineTree", 109486.56815154564, -27279.443022134088,5.212522850546217, true, undefined));
                scenicList.push(new Scenery("pineTree", 109178.07324660437, -27376.523221976087,1.5770982140413987, true, undefined));
                scenicList.push(new Scenery("pineTree", 109067.10507828725, -27680.24623875408,1.5770982140413987, true, undefined));

                scenicList.push(new Scenery("pineTree", 109366.00525230878, -24219.651979776856, 2.9091113419851755, true));
                scenicList.push(new Scenery("pineTree", 110068.68115758664, -25610.857581777822, 3.8144641526978385, true));
                scenicList.push(new Scenery("pineTree", 110679.22275856418, -25634.09086356193, 6.164906815046349, true));
                scenicList.push(new Scenery("pineTree", 110113.56735155356, -25165.009606533367, 4.846623043415218, true));
                scenicList.push(new Scenery("pineTree", 110592.41716471207, -25128.62922968886, 3.721951835840141, true));
                scenicList.push(new Scenery("pineTree", 110103.62448637723, -24713.49146704976, 0.4749559966373353, true));
                scenicList.push(new Scenery("pineTree", 110460.3186609748, -24311.688917707863, 5.1302325445358665, true));
                scenicList.push(new Scenery("pineTree", 110744.46135219363, -24122.98303503399, 5.772508020666676, true));
                scenicList.push(new Scenery("pineTree", 109936.153957693, -24074.80231790518, 4.384587738315614, true));
                scenicList.push(new Scenery("pineTree", 109177.52388567511, -25717.389529265824, 6.261020207048898, true));

                trimmer(114438.50656443492, -33803.74839241264, 114040.8621188429, -34054.79224425246, true);

                scenicList.push(new Scenery("thenganBridges", 115454.59897477234, -26869.54880413075, 1/2 * Math.PI, 1.4, 0));

                scenicList.push(new Scenery("thenganTemperateFishingSpot", 115488.36785977679, -25899.952615393868, 2, true));
                scenicList.push(new Scenery("thenganTemperateFishingSpot", 115392.90223806442, -24583.703573620358, 4, true));
                scenicList.push(new Scenery("thenganTemperateFishingSpot", 115546.81195018801, -27840.533740380713, 10, true));
                scenicList.push(new Scenery("thenganTemperateFishingSpot", 115459.81040410436, -28003.822773591233, 12, true));
                scenicList.push(new Scenery("thenganTemperateFishingSpot", 115398.22398486966, -29161.76157183658, 8, true));
                scenicList.push(new Scenery("thenganTemperateFishingSpot", 115129.30275519962, -30634.7518012331, 20, true));

                change = "s3w11";
            }
        }
        else if (region == "w5")
        {
            if (change != "w5")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION

                //Creatures
                ArtificialIntelligenceAccess.push(new Unit(49791, -2099, "Boulchom", false, "Boork"));
                ArtificialIntelligenceAccess.push(new Unit(56357, -2218, "Thueg", false, "Spindles"));
                ArtificialIntelligenceAccess.push(new Unit(57089, -2223, "Thueg", "baby", "Spindlez"));
                ArtificialIntelligenceAccess.push(new Unit(56780, -2980, "Conejo", true, "boo"));
                ArtificialIntelligenceAccess.push(new Unit(54703, -2152, "Conejo", false, "book"));
                ArtificialIntelligenceAccess.push(new Unit(49347, -3077, "Boulchom", false, "Balg"));
                ArtificialIntelligenceAccess.push(new Unit(48738, -2165, "Thueg", false, "Spindles"));
                ArtificialIntelligenceAccess.push(new Unit(49756, -2106, "Conejo", false, "booky"));

                //Worms (not ripped off from Dune whatsoever)
                ArtificialIntelligenceAccess.push(new Unit(48678, -1004, "Lombris", false, "Dune"));
                ArtificialIntelligenceAccess.push(new Unit(49865, -661, "Lombris", false, "Duna"));
                ArtificialIntelligenceAccess.push(new Unit(50518, -1460, "Lombris", false, "Lom"));
                ArtificialIntelligenceAccess.push(new Unit(51522, -732, "Lombris", false, "Bris"));
                ArtificialIntelligenceAccess.push(new Unit(54476, -387, "Lombris", true, "Brys"));
                ArtificialIntelligenceAccess.push(new Unit(56400, -485, "Lombris", false, "Lomol"));
                ArtificialIntelligenceAccess.push(new Unit(56904, 1205, "Lombris", true, "Brysol"));
                ArtificialIntelligenceAccess.push(new Unit(54758, 1943, "Lombris", false, "Draln"));
                ArtificialIntelligenceAccess.push(new Unit(52311, 1550, "Lombris", false, "Driln"));
                ArtificialIntelligenceAccess.push(new Unit(48867, 2248, "Lombris", false, "Dreln"));
                ArtificialIntelligenceAccess.push(new Unit(51315, 1394, "Lombris", false, "Druln"));
                ArtificialIntelligenceAccess.push(new Unit(49674, 3448, "Lombris", true, "Dryln"));
                ArtificialIntelligenceAccess.push(new Unit(48833, 5885, "Lombris", true, "Dreuln"));
                ArtificialIntelligenceAccess.push(new Unit(52760, 5462, "Lombris", true, "Draaln"));
                ArtificialIntelligenceAccess.push(new Unit(52929, -597, "Lombris", false, "Drooln"));
                ArtificialIntelligenceAccess.push(new Unit(51847, 4531, "Lombris", true, "Drouln"));
                ArtificialIntelligenceAccess.push(new Unit(54483, 3935, "Lombris", false, "Dreiln"));
                ArtificialIntelligenceAccess.push(new Unit(56540, 2269, "Lombris", true, "Droaln"));
                ArtificialIntelligenceAccess.push(new Unit(57427, 5350, "Lombris", false, "Drieln"));
                ArtificialIntelligenceAccess.push(new Unit(53909, 5323, "Lombris", false, "Drioln"));
                ArtificialIntelligenceAccess.push(new Unit(50610, 9, "Lombris", false, "Dryiln"));
                ArtificialIntelligenceAccess.push(new Unit(52654, 2604, "Lombris", true, "Drueln"));
                ArtificialIntelligenceAccess.push(new Unit(55717, 4334, "Lombris", true, "Druyln"));
                ArtificialIntelligenceAccess.push(new Unit(49396, 899, "Lombris", true, "Drualn"));
                ArtificialIntelligenceAccess.push(new Unit(57382, 3259, "Lombris", false, "Drieln"));
                //Mud Beetles
                ArtificialIntelligenceAccess.push(new Unit(54541, 192, "MudBeetle", true, "Brufe"));
                ArtificialIntelligenceAccess.push(new Unit(50024, 1055, "MudBeetle", true, "Brufe"));
                ArtificialIntelligenceAccess.push(new Unit(52521, 4689, "MudBeetle", true, "Brufe"));
                ArtificialIntelligenceAccess.push(new Unit(54120, 3408, "MudBeetle", true, "Brufe"));
                ArtificialIntelligenceAccess.push(new Unit(55264, 2258, "MudBeetle", true, "Brufe"));
                ArtificialIntelligenceAccess.push(new Unit(52169, 27, "MudBeetle", true, "Brufe"));
                ArtificialIntelligenceAccess.push(new Unit(51113, -1230, "MudBeetle", true, "Brufe"));
                ArtificialIntelligenceAccess.push(new Unit(48970, -11, "MudBeetle", true, "Brufe"));
                ArtificialIntelligenceAccess.push(new Unit(51652, 3171, "MudBeetle", true, "Brufe"));
                ArtificialIntelligenceAccess.push(new Unit(56369, 944, "MudBeetle", true, "Brufe"));
                ArtificialIntelligenceAccess.push(new Unit(53413, 71, "MudBeetle", true, "Brufe"));


                //Plants
                scenicList.push(new Scenery("vorlymPlant", 50983, -2297, 1.5, false));
                scenicList.push(new Scenery("galloshPlant", 56610, -2539, -4, false));
                scenicList.push(new Scenery("galloshPlant", 49607, -2238, -2, false));

                change = "w5";
            }
        }
        else if (region == "n1e1")
        {
            if (change != "n1e1")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                scenicList.push(new Scenery("pineTree", -8545, 5837,-1.5707963267948966, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -9187, 6047,-0.25, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -9077, 6365,1.0367255756846319, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -8313, 6303,3.8955748904513436, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -7475, 6291,0.27, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -7921, 6103,-0.4, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -7804, 5809,0.6283185307179586, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -9864, 6233,3.8955748904513436, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -10591, 6072,-0.5969026041820606, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -10783, 6306,-4.178318229274425, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -11250, 5783,5.874778262212914, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -11526, 6213,0.56, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -11860, 6012,0.995, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -12542, 6099,-0.126, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -13251, 6393,0.6597344572538565, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -12082, 6404,-0.283, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -11250, 5783,5.874778262212914, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -13707, 6029,0.2, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -14063, 6249,-1.81, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -13699, 6445,8.92, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -14144, 5820,3.14, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -14450, 6526,2.7, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -14642, 6116,5.82, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -14893, 6438,0.726, true, undefined)); //copied e1
                scenicList.push(new Scenery("akerPlant", -12137, 6239,0.67, true, undefined)); //copied e1
                scenicList.push(new Scenery("pluttPlant", -8549, 5995,3.141592653589793, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineStumps", -6544, 5895,-0.9, true, undefined)); //copied e1

                scenicList.push(new Scenery("pineTree", -12733.4223055065, 6605.912537473543, 1.5327747388652577, true));
                scenicList.push(new Scenery("pineTree", -13090.773441532914, 6952.050196208478, 3.8822991748637854, true));
                scenicList.push(new Scenery("pineTree", -12580.061111475288, 7173.027125561249, 2.338956235986604, true));
                scenicList.push(new Scenery("pineTree", -12273.213784187827, 6819.7168775660375, 0.9409605762977982, true));
                scenicList.push(new Scenery("pineTree", -11734.85299754228, 6665.468642403687, 3.929443923566078, true));
                scenicList.push(new Scenery("pineTree", -11938.747501447295, 7076.155743263432, 2.0628163716174424, true));
                scenicList.push(new Scenery("pineTree", -12336.362379340313, 7495.736691965867, 3.517926816186638, true));
                scenicList.push(new Scenery("pineTree", -11334.992394303514, 6649.355725467659, 0.47511863491710965, true));
                scenicList.push(new Scenery("pineTree", -11545.76256700087, 7081.448323068684, 5.4310733377055245, true));
                scenicList.push(new Scenery("pineTree", -11874.153588782483, 7470.849895715327, 4.749492020074888, true));
                scenicList.push(new Scenery("pineTree", -10968.651418257017, 6740.624466105806, 6.064914209885785, true));
                scenicList.push(new Scenery("pineTree", -10465.93651762215, 6646.359849041953, 5.070453123391986, true));
                scenicList.push(new Scenery("pineTree", -10482.104541630897, 7112.459416559092, 0.5586717297738721, true));
                scenicList.push(new Scenery("pineTree", -9985.767187164756, 6684.528433061292, 5.416540170928672, true));
                scenicList.push(new Scenery("pineTree", -9407.384586708473, 6963.09797777909, 1.53817752580189, true));
                scenicList.push(new Scenery("pineTree", -9066.040853445602, 6670.202787602684, 5.029574256918179, true));
                scenicList.push(new Scenery("pineTree", -7517.007275637525, 6738.744983164988, 4.972695302059109, true));
                scenicList.push(new Scenery("pineTree", -7146.236218679714, 7066.955251430461, 2.174823319870941, true));
                scenicList.push(new Scenery("pineTree", -7967.333490049397, 7060.979352432352, 0.3203629386556373, true));
                scenicList.push(new Scenery("pineTree", -8333.641182929972, 7490.490390827667, 2.8241210586506735, true));
                scenicList.push(new Scenery("pineTree", -8676.664164541691, 7368.621172916775, 0.5693442604228145, true));
                scenicList.push(new Scenery("pineTree", -8785.27170487207, 6986.080146361793, 1.307921418079919, true));
                scenicList.push(new Scenery("pineTree", -8221.231212905966, 6691.876840761038, 2.720170306504495, true));
                scenicList.push(new Scenery("pineTree", -10720.384048882699, 6899.569662680437, 3.471770749523811, true));
                scenicList.push(new Scenery("pineTree", -11137.150913226082, 7261.21095984712, 5.346250898570788, true));
                scenicList.push(new Scenery("pineTree", -11447.671847123678, 7745.246211242708, 5.316116851906012, true));
                scenicList.push(new Scenery("pineTree", -11845.432798731557, 7984.295970272753, 0.054524940520247825, true));

                // put stuff below

                //forest

                scenicList.push(new Scenery("pineTree", -13129.174888955427, 7213.252756222654, 0.22595450014814542, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -12750.308965879309, 7470.621287422189, 1.3528923308017637, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -13247.051510485262, 7799.933544473371, 5.70896837728578, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -13116.10256451299, 8198.724468728115, 4.636751314833018, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -13305.681543275929, 8576.400166319905, 0.7653775293051998, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -13078.52735826428, 8895.616460202129, 1.4457838181819849, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -12760.688129769218, 9106.361180037671, 4.4885883539286455, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -12536.439997758556, 8904.836581374664, 4.626098368929211, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -12261.70578909685, 9271.840073602065, 4.622010534951406, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -12150.268127246769, 8801.094887546928, 5.539827689087458, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -12464.42058109119, 8527.810368788041, 3.596323347580831, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -12957.774609209477, 8501.287544403334, 2.628572764849959, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -12670.092484479617, 8113.54132195855, 1.2895309918997548, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -12487.651541296806, 7871.128307781438, 3.897927474946103, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -12202.234110483721, 8219.522903765475, 1.2302995092186269, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -11948.760914510067, 8538.284765813918, 2.3837864361075822, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -11564.855354922453, 8251.564057529766, 5.151683829376737, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -11490.674534462794, 8612.825647477943, 3.7178731471462134, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -11254.463727398961, 8712.21305753204, 0.3410763434823355, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -10936.51783033141, 8509.546812555716, 2.642961695598472, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -10738.045141558045, 8798.387508999002, 1.7266561307365995, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -10754.905679555864, 8322.084207900589, 5.802071618315524, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -11163.686727183143, 8116.754873778982, 1.8278901779039252, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -11016.23778109678, 7820.637542320786, 1.225521718923242, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -10793.3378131568, 7573.179141901653, 5.710588317223384, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -10388.497188202853, 7522.662187392188, 4.557421136376859, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -10512.350812298631, 7835.806434954555, 5.5988164760089205, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -10397.61009992606, 8185.761566935467, 1.8244066457720136, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -9952.804730907721, 8303.314174811327, 1.4825514898776662, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -10032.085839527252, 7892.947020001734, 3.9527854275007317, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -9990.048979932868, 7396.315237633081, 0.42002805586813785, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -9803.47543368542, 7078.838870029561, 3.3313723439531655, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -9604.31555770016, 7300.748793982299, 1.3003791762203123, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -9669.240922273379, 7548.345204316338, 4.042236621021944, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -9570.390909777712, 8018.821057925512, 4.9819525418035555, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -9331.026057288156, 7699.156616190414, 3.9476510724771687, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -9250.12924161998, 8260.790287547206, 3.0564937079827947, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -8691.361046131127, 8261.464950472791, 6.0418901330149675, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -8548.982759566725, 7994.093100656789, 1.909013303624755, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -8467.110783206925, 8442.220436304313, 2.1611174697337603, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -8890.398847710114, 7884.018609866669, 1.1425163238302336, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -9192.331116466356, 8009.98361363302, 5.021643596672063, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -9112.19163989556, 7470.234966739716, 0.7581098895337465, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -8668.230975326758, 7729.722722901671, 5.210853896303462, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -8067.09566734939, 7680.386609471359, 2.5265593253819034, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -8201.554995520097, 8070.224483406627, 4.093261913212776, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -7990.035813701452, 8336.2648498202, 0.2624082644098775, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -7846.153261471229, 8695.764870489933, 2.16316962928698, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -7959.29864151905, 8966.658071411313, 6.236970805654648, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -7589.684080742113, 8999.211233228609, 0.7655945951331908, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -7421.117484291676, 8749.24301942802, 4.804628472741327, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -7001.220859294569, 8670.0774384869, 0.33616991543880725, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -7335.007932006958, 8394.900209594512, 2.4722059386739432, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -6971.283951337995, 8128.191415734358, 1.0743563781953203, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -7481.9592066245905, 8049.404163279641, 2.685259098042263, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -7656.496673360884, 8263.97999004972, 4.225266588226136, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -7609.488136106597, 7659.709308192016, 4.824230738566075, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -7662.22124853602, 7309.226656249048, 5.699653821872388, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -8035.742103480376, 7407.168333027955, 1.4669095658552338, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -7268.340356050329, 7369.906542002001, 2.18934669580863, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -7017.674068278298, 7621.743364223735, 3.8906286874734115, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -6927.996378311937, 7902.760824105187, 1.0696390983090653, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -6622.883531398994, 7964.497307402654, 3.4934807822462837, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -6393.944234523874, 8174.325747728019, 0.7488622429507702, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -6138.481565492113, 8230.139330429181, 0.5740252754787127, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -6311.493154088987, 7771.119100530262, 5.856492714636091, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -6304.107685025458, 8481.484040199011, 3.810247848985245, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -6890.38542167899, 8377.950913359478, 3.4922435002736028, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -6702.990619371065, 7377.976192421162, 0.5847816922523721, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -6339.045082004681, 7465.319037406105, 5.282371057795683, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -6638.801953740849, 6963.175240052395, 4.917690647591539, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -6863.169223680374, 6668.593429577411, 2.26928693848358, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -8387.42006939829, 8869.05014578751, 4.4789721776382745, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -8337.633767585647, 9330.893490564093, 5.129968305975756, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -7917.338928337099, 9378.647305213886, 4.147528505564781, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -8450.702855571055, 9650.71649082364, 3.2038550287771828, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -8868.513574077406, 9233.050376750902, 2.1519866483640655, true, "snowy"));

                scenicList.push(new Scenery("bushkaPlant", -8995.093493966368, 14077.121316445115, 1.55, true));
                scenicList.push(new Scenery("bushkaPlant", -10308.417640814947, 10479.332561165322, 2.66, true));
                scenicList.push(new Scenery("bushkaPlant", -4225.209070278804, 8752.665941925767, 3.83, true));
                scenicList.push(new Scenery("bushkaPlant",  -6099.12750378168, 11035.073806916798, 6.19, true));
                scenicList.push(new Scenery("bushkaPlant", -11736.846706102328, 9649.12052509933, 7.32, true));
                scenicList.push(new Scenery("bushkaPlant", -9482.829565258795, 15405.72690878134, 2.33, true));
                scenicList.push(new Scenery("bushkaPlant", -7458.88763709313, 12694.287777857198, 1.02, true));
                scenicList.push(new Scenery("bushkaPlant", -8278.5765588543, 11490.02010268897, 4.22, true));
                scenicList.push(new Scenery("bushkaPlant", -8439.801969241156, 9113.963314105513, 1.62, true));
                scenicList.push(new Scenery("bushkaPlant", -10526.906038220139, 13721.039019195769, 6.22, true));
                scenicList.push(new Scenery("bushkaPlant", -11702.34835767249, 13213.80140539326, 3.882, true));
                scenicList.push(new Scenery("bushkaPlant", -10900.090926233168, 15748.983526011187, 2.02, true));

                scenicList.push(new Scenery("wightbloomPlant", -4735.2752112881335, 13683.17858422957, 1.163, true));
                scenicList.push(new Scenery("wightbloomPlant", -10877.94249926928, 13583.766962040498, 4.113, true));

                scenicList.push(new Scenery("akerPlant", -10994.334427365142, 8181.407651839819, 7.773, true));
                scenicList.push(new Scenery("akerPlant", -7921.522016587703, 7536.383803597619, 3.332, true));
                scenicList.push(new Scenery("akerPlant", -11805.88255223685, 8534.747462655005, 1.552, true));

                scenicList.push(new Scenery("neprilnePlant", -7491.068355738233, 8529.05240086077, 1.132, true));

                //animals
                ArtificialIntelligenceAccess.push(new Unit(-9402.162848909591, 12231.275623255191, "Balkur", true, "icntblevrit1"));
                ArtificialIntelligenceAccess.push(new Unit(-8981.693791837306, 15046.826234863125, "Balkur", false, "icntblevrit2"));

                ArtificialIntelligenceAccess.push(new Unit(-5475.737745876115, 16249.336173689375, "Waanti", true, "keyinthemornuyt1"));
                ArtificialIntelligenceAccess.push(new Unit(-5406.884113964776, 16186.424309958229, "Waanti", "baby", "keyinthemornuyt2"));
                ArtificialIntelligenceAccess.push(new Unit(-5547.481082414118, 16120.073202912305, "Waanti", false, "keyinthemornuyt3"));
                ArtificialIntelligenceAccess.push(new Unit(-5218.408408939942, 16170.146025811779, "Waanti", true, "keyinthemornuyt4"));
                ArtificialIntelligenceAccess.push(new Unit(-11666.740056966182, 15548.341011657158, "Waanti", true, "keyinthemornuyt5"));
                ArtificialIntelligenceAccess.push(new Unit(-11774.924931191932, 15360.32383319825, "Waanti", false, "keyinthemornuyt6"));
                ArtificialIntelligenceAccess.push(new Unit(-11424.018320940691, 15600.448144453674, "Waanti", "baby", "keyinthemornuyt7"));
                ArtificialIntelligenceAccess.push(new Unit(-11575.382555683931, 15497.78953777801, "Waanti", true, "keyinthemornuyt8"));
                ArtificialIntelligenceAccess.push(new Unit(-11598.486715668936, 14320.54281926406, "Waanti", false, "keyinthemornuyt9"));
                ArtificialIntelligenceAccess.push(new Unit(-11663.960238509877, 14251.606026909492, "Waanti", "baby", "keyinthemornuyt10"));
                ArtificialIntelligenceAccess.push(new Unit(-5427.863395479744, 10575.021884706868, "Waanti", true, "keyinthemornuyt11"));
                ArtificialIntelligenceAccess.push(new Unit(-5509.305420664141, 10461.184557973917, "Waanti", "baby", "keyinthemornuyt12"));
                ArtificialIntelligenceAccess.push(new Unit(-5606.50774474146, 10541.727461026845, "Waanti", false, "keyinthemornuyt13"));
                ArtificialIntelligenceAccess.push(new Unit(-5399.569709661346, 10342.285766858366, "Waanti", true, "keyinthemornuyt14"));

                ArtificialIntelligenceAccess.push(new Unit(-6576.479699511188, 13724.86443601273, "WinterWolf", false, "dothngsnevee1"));
                ArtificialIntelligenceAccess.push(new Unit(-6482.832954313629, 13639.167649310515, "WinterWolf", false, "dothngsnevee2"));
                ArtificialIntelligenceAccess.push(new Unit( -4466.157283861404, 8629.799894934047, "WinterWolf", false, "dothngsnevee3"));
                ArtificialIntelligenceAccess.push(new Unit(-4016.1839862198685, 8106.314716299558, "WinterWolf", false, "dothngsnevee4"));
                ArtificialIntelligenceAccess.push(new Unit(-12464.734208603473, 12257.887271779098, "WinterWolf", false, "dothngsnevee5"));
                ArtificialIntelligenceAccess.push(new Unit(-12623.125198456784, 12373.019754475787, "WinterWolf", false, "dothngsnevee6"));
                ArtificialIntelligenceAccess.push(new Unit(-6504.516530398516, 9260.798857634129, "WinterWolf", false, "dothngsnevee7"));
                ArtificialIntelligenceAccess.push(new Unit(-6592.222052647729, 9448.537260011426, "WinterWolf", false, "dothngsnevee8"));
                ArtificialIntelligenceAccess.push(new Unit(-6417.970341733546, 9564.027653480416, "WinterWolf", false, "dothngsnevee9"));
                ArtificialIntelligenceAccess.push(new Unit(-6673.04725516485, 9627.652142732919, "WinterWolf", false, "dothngsnevee10"));
                ArtificialIntelligenceAccess.push(new Unit(-11341.090774960632, 11514.798440393199, "WinterWolf", false, "dothngsnevee11"));
                ArtificialIntelligenceAccess.push(new Unit(-4177.734999513496, 8873.827050105541, "WinterWolf", false, "dothngsnevee12"));

                ArtificialIntelligenceAccess.push(new Unit(-5983.546957006437, 7534.252366466019, "Varn", false, "wntieetr1"));
                ArtificialIntelligenceAccess.push(new Unit(-6130.5820732440625, 7375.368692710772, "Varn", false, "wntieetr2"));
                ArtificialIntelligenceAccess.push(new Unit(-6241.190441756485, 7593.412695122828, "Varn", true, "wntieetr3"));
                ArtificialIntelligenceAccess.push(new Unit(-12147.033390492472, 9328.073627346766, "Varn", false, "wntieetr4"));
                ArtificialIntelligenceAccess.push(new Unit(-11988.558565335534, 9218.49295866712, "Varn", true, "wntieetr5"));
                ArtificialIntelligenceAccess.push(new Unit(-12095.426003157958, 9095.615948669965, "Varn", true, "wntieetr6"));
                ArtificialIntelligenceAccess.push(new Unit(-11988.742750056974, 8970.429958951348, "Varn", true, "wntieetr7"));
                ArtificialIntelligenceAccess.push(new Unit(-11985.809273589795, 9229.028663553214, "Varn", false, "wntieetr8"));
                ArtificialIntelligenceAccess.push(new Unit(-12664.996128698083, 7155.00057387229, "Varn", false, "wntieetr9"));

                ArtificialIntelligenceAccess.push(new Unit(-11497.752936723251, 7234.381483514101, "Grib", true, "psplts1"));
                ArtificialIntelligenceAccess.push(new Unit(-11947.40879588354, 7867.948785471991, "Grib", false, "psplts2"));

                ArtificialIntelligenceAccess.push(new Unit(-8978.49598867524, 10037.303151116697, "Glutid", true, "wlgernt1"));
                ArtificialIntelligenceAccess.push(new Unit(-9468.719899475513, 9870.312980308949, "Glutid", false, "wlgernt2"));

                ArtificialIntelligenceAccess.push(new Unit(-7902.196082421767, 8134.481976721624, "BlackBear", true, "wzernoo1"));

                ArtificialIntelligenceAccess.push(new Unit(-8799.118479627019, 7433.554942461666, "Narthwarp", false, "lngnosishere1"));
                ArtificialIntelligenceAccess.push(new Unit(-9244.214420556189, 7595.379151778215, "Narthwarp", false, "lngnosishere2"));
                ArtificialIntelligenceAccess.push(new Unit(-9186.382295537824, 7352.702536847674, "Narthwarp", false, "lngnosishere3"));
                ArtificialIntelligenceAccess.push(new Unit(-8811.20506958547, 7783.123429476911, "Narthwarp", false, "lngnosishere4"));

                ArtificialIntelligenceAccess.push(new Unit(-12434.216238391284, 7787.434329902612, "Shehid", false, "gldencrn1"));
                ArtificialIntelligenceAccess.push(new Unit(-12434.13283063396, 7550.187243148129, "Shehid", false, "gldencrn2"));
                ArtificialIntelligenceAccess.push(new Unit(-11978.932362729922, 7423.974123715857, "Shehid", false, "gldencrn3"));

                scenicList.push(new Scenery("stone", -7477.384651689107, 12611.18771526323, 1.23, 3, 2));
                scenicList.push(new Scenery("stone", -7685.114066399925, 12718.644711046176, 4.71, 2, 1));
                scenicList.push(new Scenery("stone", -11387.481476196848, 11902.231363944005, 2.61, 1.5, 2));

                change = "n1e1";
            }
        }
        else if (region == "n1e2")
        {
            if (change != "n1e2")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                scenicList.push(new Scenery("pineTree", -11860, 6012,0.995, true, undefined)); //copied n1e1
                scenicList.push(new Scenery("pineTree", -12542, 6099,-0.126, true, undefined)); //copied n1e1
                scenicList.push(new Scenery("pineTree", -13251, 6393,0.6597344572538565, true, undefined)); //copied n1e1
                scenicList.push(new Scenery("pineTree", -12082, 6404,-0.283, true, undefined)); //copied n1e1
                scenicList.push(new Scenery("pineTree", -13707, 6029,0.2, true, undefined)); //copied n1e1
                scenicList.push(new Scenery("pineTree", -14063, 6249,-1.81, true, undefined)); //copied n1e1
                scenicList.push(new Scenery("pineTree", -13699, 6445,8.92, true, undefined)); //copied n1e1
                scenicList.push(new Scenery("pineTree", -14144, 5820,3.14, true, undefined)); //copied n1e1
                scenicList.push(new Scenery("pineTree", -14450, 6526,2.7, true, undefined)); //copied n1e1
                scenicList.push(new Scenery("pineTree", -14642, 6116,5.82, true, undefined)); //copied n1e1
                scenicList.push(new Scenery("pineTree", -14893, 6438,0.726, true, undefined)); //copied n1e1
                scenicList.push(new Scenery("akerPlant", -12137, 6239,0.67, true, undefined)); //copied n1e1
                scenicList.push(new Scenery("pineTree", -12733.4223055065, 6605.912537473543,1.5327747388652577, true, undefined)); //copied n1e1
                scenicList.push(new Scenery("pineTree", -13090.773441532914, 6952.050196208478,3.8822991748637854, true, undefined)); //copied n1e1
                scenicList.push(new Scenery("pineTree", -12580.061111475288, 7173.027125561249,2.338956235986604, true, undefined)); //copied n1e1
                scenicList.push(new Scenery("pineTree", -12273.213784187827, 6819.7168775660375,0.9409605762977982, true, undefined)); //copied n1e1
                scenicList.push(new Scenery("pineTree", -11734.85299754228, 6665.468642403687,3.929443923566078, true, undefined)); //copied n1e1
                scenicList.push(new Scenery("pineTree", -11938.747501447295, 7076.155743263432,2.0628163716174424, true, undefined)); //copied n1e1
                scenicList.push(new Scenery("pineTree", -12336.362379340313, 7495.736691965867,3.517926816186638, true, undefined)); //copied n1e1
                scenicList.push(new Scenery("pineTree", -11874.153588782483, 7470.849895715327,4.749492020074888, true, undefined)); //copied n1e1
                scenicList.push(new Scenery("pineTree", -11845.432798731557, 7984.295970272753,0.054524940520247825, true, undefined)); //copied n1e1
                scenicList.push(new Scenery("pineTree", -13129.174888955427, 7213.252756222654,0.22595450014814542, true, "snowy")); //copied n1e1
                scenicList.push(new Scenery("pineTree", -12750.308965879309, 7470.621287422189,1.3528923308017637, true, "snowy")); //copied n1e1
                scenicList.push(new Scenery("pineTree", -13247.051510485262, 7799.933544473371,5.70896837728578, true, "snowy")); //copied n1e1
                scenicList.push(new Scenery("pineTree", -13116.10256451299, 8198.724468728115,4.636751314833018, true, "snowy")); //copied n1e1
                scenicList.push(new Scenery("pineTree", -13305.681543275929, 8576.400166319905,0.7653775293051998, true, "snowy")); //copied n1e1
                scenicList.push(new Scenery("pineTree", -13078.52735826428, 8895.616460202129,1.4457838181819849, true, "snowy")); //copied n1e1
                scenicList.push(new Scenery("pineTree", -12760.688129769218, 9106.361180037671,4.4885883539286455, true, "snowy")); //copied n1e1
                scenicList.push(new Scenery("pineTree", -12536.439997758556, 8904.836581374664,4.626098368929211, true, "snowy")); //copied n1e1
                scenicList.push(new Scenery("pineTree", -12261.70578909685, 9271.840073602065,4.622010534951406, true, "snowy")); //copied n1e1
                scenicList.push(new Scenery("pineTree", -12150.268127246769, 8801.094887546928,5.539827689087458, true, "snowy")); //copied n1e1
                scenicList.push(new Scenery("pineTree", -12464.42058109119, 8527.810368788041,3.596323347580831, true, "snowy")); //copied n1e1
                scenicList.push(new Scenery("pineTree", -12957.774609209477, 8501.287544403334,2.628572764849959, true, "snowy")); //copied n1e1
                scenicList.push(new Scenery("pineTree", -12670.092484479617, 8113.54132195855,1.2895309918997548, true, "snowy")); //copied n1e1
                scenicList.push(new Scenery("pineTree", -12487.651541296806, 7871.128307781438,3.897927474946103, true, "snowy")); //copied n1e1
                scenicList.push(new Scenery("pineTree", -12202.234110483721, 8219.522903765475,1.2302995092186269, true, "snowy")); //copied n1e1
                scenicList.push(new Scenery("pineTree", -11948.760914510067, 8538.284765813918,2.3837864361075822, true, "snowy")); //copied n1e1
                scenicList.push(new Scenery("bushkaPlant", -11736.846706102328, 9649.12052509933,7.32, true, undefined)); //copied n1e1
                scenicList.push(new Scenery("bushkaPlant", -11702.34835767249, 13213.80140539326,3.882, true, undefined)); //copied n1e1
                scenicList.push(new Scenery("akerPlant", -11805.88255223685, 8534.747462655005,1.552, true, undefined)); //copied n1e1

                scenicList.push(new Scenery("pineTree", -10183, 5372,-0.5969026041820606, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -9449, 5429,4.5553093477052, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -8885, 5550,-0.5969026041820606, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -8545, 5837,-1.5707963267948966, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -9187, 6047,-0.25, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -9077, 6365,1.0367255756846319, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -8313, 6303,3.8955748904513436, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -7475, 6291,0.27, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -7921, 6103,-0.4, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -7804, 5809,0.6283185307179586, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -9923, 5734,0.2, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -9864, 6233,3.8955748904513436, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -10591, 6072,-0.5969026041820606, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -10783, 6306,-4.178318229274425, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -11250, 5783,5.874778262212914, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -10576, 5660,-0.5, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -11526, 6213,0.56, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -11860, 6012,0.995, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -12024, 5545,-2.092300707290802, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -12542, 6099,-0.126, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -12891, 5725,0.65, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -13251, 6393,0.6597344572538565, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -12082, 6404,-0.283, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -11250, 5783,5.874778262212914, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -13541, 5707,0, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -14000, 5467,24, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -14644, 5409,4.326, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -13707, 6029,0.2, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -14063, 6249,-1.81, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -13699, 6445,8.92, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -14144, 5820,3.14, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -14623, 5700,-4.326, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -14450, 6526,2.7, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -14642, 6116,5.82, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineTree", -14893, 6438,0.726, true, undefined)); //copied e1
                scenicList.push(new Scenery("akerPlant", -12137, 6239,0.67, true, undefined)); //copied e1
                scenicList.push(new Scenery("pluttPlant", -8549, 5995,3.141592653589793, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineStumps", -6544, 5895,-0.9, true, undefined)); //copied e1
                scenicList.push(new Scenery("pineStumps", -7911, 5498,-0.3, true, undefined)); //copied e1

                scenicList.push(new Scenery("pineTree", -13707, 6029,0.2, true, undefined)); //copied e2
                scenicList.push(new Scenery("pineTree", -14063, 6249,-1.81, true, undefined)); //copied e2
                scenicList.push(new Scenery("pineTree", -13699, 6445,8.92, true, undefined)); //copied e2
                scenicList.push(new Scenery("pineTree", -14144, 5820,3.14, true, undefined)); //copied e2
                scenicList.push(new Scenery("pineTree", -14450, 6526,2.7, true, undefined)); //copied e2
                scenicList.push(new Scenery("pineTree", -14642, 6116,5.82, true, undefined)); //copied e2
                scenicList.push(new Scenery("pineTree", -14893, 6438,0.726, true, undefined)); //copied e2
                scenicList.push(new Scenery("pineTree", -15203, 5851,-6, true, undefined)); //copied e2
                scenicList.push(new Scenery("pineTree", -15465, 6213,-5, true, undefined)); //copied e2
                scenicList.push(new Scenery("pineTree", -16035, 6526,3.7, true, undefined)); //copied e2
                scenicList.push(new Scenery("pineTree", -16141, 6034,-2, true, undefined)); //copied e2
                scenicList.push(new Scenery("pineTree", -16899, 5902,5.6, true, undefined)); //copied e2
                scenicList.push(new Scenery("pineTree", -16640, 6412,-4.4, true, undefined)); //copied e2
                scenicList.push(new Scenery("pineTree", -17292, 6300,2.55, true, undefined)); //copied e2
                scenicList.push(new Scenery("pineTree", -17573, 5935,-1.3, true, undefined)); //copied e2
                scenicList.push(new Scenery("pineTree", -18066, 6193,4.25, true, undefined)); //copied e2
                scenicList.push(new Scenery("pineTree", -18063, 5832,-3.5, true, undefined)); //copied e2
                scenicList.push(new Scenery("pineTree", -18697, 5892,-4.326, true, undefined)); //copied e2
                scenicList.push(new Scenery("pineTree", -18660, 6413,2.7, true, undefined)); //copied e2
                scenicList.push(new Scenery("pineTree", -19173, 6128,5.82, true, undefined)); //copied e2
                scenicList.push(new Scenery("pineTree", -23153, 6151,-2.25, true, undefined)); //copied e2
                scenicList.push(new Scenery("pineTree", -23518, 6494,5.6, true, undefined)); //copied e2
                scenicList.push(new Scenery("pineTree", -19708, 6434,-6.1, true, undefined)); //copied e2
                scenicList.push(new Scenery("pineTree", -19623, 6020,4.85, true, undefined)); //copied e2
                scenicList.push(new Scenery("pineTree", -20206, 6182,6.2, true, undefined)); //copied e2
                scenicList.push(new Scenery("pineTree", -20078, 5835,3.8, true, undefined)); //copied e2
                scenicList.push(new Scenery("pineTree", -22641, 6364,-2.85, true, undefined)); //copied e2
                scenicList.push(new Scenery("pineTree", -22659, 5806,3.2, true, undefined)); //copied e2
                scenicList.push(new Scenery("pineTree", -20654, 5920,-5.79, true, undefined)); //copied e2
                scenicList.push(new Scenery("pineTree", -20691, 6455,3, true, undefined)); //copied e2
                scenicList.push(new Scenery("pineTree", -21207, 6173,-1.3, true, undefined)); //copied e2
                scenicList.push(new Scenery("pineTree", -22324, 6086,2.95, true, undefined)); //copied e2
                scenicList.push(new Scenery("pineTree", -21735, 5972,-6, true, undefined)); //copied e2
                scenicList.push(new Scenery("pineTree", -21914, 6486,-3.75, true, undefined)); //copied e2
                scenicList.push(new Scenery("pineTree", -21454, 6550,1, true, undefined)); //copied e2
                scenicList.push(new Scenery("pineTree", -24052, 5813,-2, true, undefined)); //copied e2
                scenicList.push(new Scenery("pineTree", -23742, 6022,1.1, true, undefined)); //copied e2
                scenicList.push(new Scenery("pineTree", -24244, 6281,-1.7, true, undefined)); //copied e2
                scenicList.push(new Scenery("pineTree", -24562, 6011,4.9, true, undefined)); //copied e2
                scenicList.push(new Scenery("pineTree", -25076, 6479,6.8, true, undefined)); //copied e2
                scenicList.push(new Scenery("pineTree", -25651, 6162,-3.3, true, undefined)); //copied e2
                scenicList.push(new Scenery("pineTree", -25213, 5786,4.7, true, undefined)); //copied e2
                scenicList.push(new Scenery("stomwikPlant", -15793, 5985,0, true, undefined)); //copied e2
                scenicList.push(new Scenery("akerPlant", -14522, 5800,0.5, true, undefined)); //copied e2

                //the stuff below

                //trees

                scenicList.push(new Scenery("pineTree", -13618.04811749764, 6905.426763528485, 1.6989753929215228, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -14077.01125136021, 6862.343920487922, 2.61371882977856, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -13971.152228414154, 7316.3888360055225, 6.1273122882492075, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -13618.614581837377, 7584.713342747497, 2.4153354317196234, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -14056.04945903866, 7984.787568354518, 4.893924024274776, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -13656.217558964903, 8322.743635832765, 0.766557125030035, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -14058.272781780077, 8624.71505215363, 4.6276158126505855, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -13718.409312372174, 8916.228034514363, 5.359738184969471, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -14131.370789687451, 9138.11208751385, 5.056460614427731, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -13694.544267809919, 9404.939999961756, 0.47047838389609575, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -14531.592977509636, 9543.986608893221, 1.2769975971964596, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -14866.593166676876, 9843.970817164012, 1.3784858574497378, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -14485.338572322113, 9898.317631924054, 5.170888313012755, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -14805.069527808895, 10196.326739132326, 0.3008427023756855, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -15183.203673505763, 9429.761346996533, 3.740613321909571, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -14893.95935414393, 9123.320032657733, 2.444917416423808, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -14539.640247794912, 8816.098319756324, 6.192564022565774, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -15274.89026439029, 8917.392172215485, 0.7311917413588822, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -15554.803078823888, 9276.541370087487, 5.27259805859115, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -15895.95449326884, 9004.00917523414, 4.089326876721967, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -16436.514741908137, 9001.406245096037, 4.0001079604265675, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -15714.127355096449, 8601.619628410028, 1.1463083255453084, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -15310.238009752866, 8310.566662633142, 0.9399721547166606, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -14986.343013404256, 8611.847846343515, 3.8304794008019796, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -14672.158445194627, 8193.514674437823, 3.206576967424409, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -14902.77560861793, 7819.075429196134, 2.7619325194851645, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -14937.476250311387, 7194.773473594165, 5.2998026156839275, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -14428.80728667684, 7578.2554487411035, 5.0121980028130935, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -14772.658925656147, 6909.66656060543, 5.832574705493782, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -15327.463533658083, 6738.104710025415, 4.341293599379694, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -15528.24386553999, 7035.053544155422, 0.09491112965313603, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -15460.398381606075, 7429.680410516213, 3.9214898137938436, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -15839.246149614031, 7780.122481667222, 4.942650326179874, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -15763.907748377513, 8150.5176282645325, 5.228453697314052, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -16280.096450460811, 8690.878307954188, 4.089936993525995, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -16198.651019553865, 8288.631617875186, 1.7359567718248516, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -16611.993601573613, 8030.745615032547, 6.140143291625989, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -16913.926378319524, 8421.417336579896, 0.4327379837596167, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -16754.84619777818, 8707.680641166833, 4.281104058086631, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -17227.725433482723, 9130.016048359752, 0.8264353248396012, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -17532.679140119042, 9076.132764508247, 0.5916479136692138, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -17684.94650055205, 8682.356456113708, 1.2491667701924312, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -18100.415343273864, 8962.554773093021, 5.5132165581156745, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -18006.850678534174, 9281.784820220699, 2.6123709393873447, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -17776.1253436974, 9467.766388752723, 3.7111120642770623, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -17601.51608541169, 9631.102603893234, 3.2106835296220146, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -18061.533560819837, 9642.600115176614, 0.4439568991906527, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -18006.533266695216, 9892.120292395612, 2.00228994365134, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -18420.08655488826, 9763.559976651159, 4.223115948906589, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -18489.388939680804, 10157.822150584861, 6.187894733351133, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -18783.500804382693, 9797.940834061528, 3.9521656124570277, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -18548.414257241195, 9415.313411088548, 4.505992961404246, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -18603.379622974564, 8972.541207915754, 3.0798095261196607, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -19035.229730470004, 8895.659713450825, 2.5817117194584718, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -18962.353964496793, 9143.283400097935, 2.8018874294550944, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -18908.757075836435, 10246.712685468148, 1.9016200145890019, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -18589.02694387251, 10504.728287805845, 4.514615930346883, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -18959.006523278378, 10576.614486819693, 4.5586740447420055, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -18087.58825301575, 10355.533429500674, 4.037758171529761, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -19471.300555641126, 8833.031861780211, 3.1881157865862844, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -19699.292036521412, 9060.6161537356, 5.803421517723036, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -20136.998693506168, 8956.076968804846, 0.8325622961063227, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -20029.208253668992, 9370.743257319209, 3.129721115403073, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -20589.864211239805, 8664.00386869908, 3.292494725378019, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -20233.80641766973, 8466.736249066917, 1.7734660338507076, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -19727.199515291526, 8378.80996553155, 6.000430394433239, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -19130.79937821408, 8421.623260541763, 6.277585191898488, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -18839.349799008174, 8640.532131319922, 1.1301119900462822, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -18306.196722608238, 8440.468633510949, 1.0212845725037225, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -18556.121277026625, 8005.061348371577, 2.8460881131054263, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -19125.87565377839, 8049.271010423599, 5.805837095612423, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -19794.442283596436, 8154.605306515937, 2.7125344380441456, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -20144.193593586115, 7842.293274368331, 2.8630258109835687, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -20553.45143882764, 8129.1147471803, 3.591851033551021, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -21087.054482813313, 8237.59430459752, 0.6437209589059492, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -21405.054705230355, 8532.65426464534, 4.715988904891932, true, "snowy"));

                scenicList.push(new Scenery("pineTree", -14342.39842894323, 8243.524310355497, 3.5157965785229757, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -14476.806508377142, 9250.203807327889, 4.156353562019149, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -15080.938040491279, 8166.098086496733, 5.349264824412012, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -15234.761125238832, 7918.364163225821, 5.031658239077944, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -15822.182626917327, 7119.829008176576, 0.6361318186461714, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -16024.64482277332, 7439.083779554975, 3.657996309761816, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -16401.529597562243, 7116.3786817152795, 5.203990383955296, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -16681.158596902198, 7309.956964040454, 1.5290672476144733, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -16980.83547921728, 7802.541349374154, 4.829839189407569, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -17285.017137234434, 8055.51475742593, 0.9912706320050914, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -17251.346821960222, 7851.917128104714, 3.365177106608778, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -17416.98190008053, 8375.365742486789, 0.7421783526466084, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -17711.808316156465, 8107.332780996997, 4.338903668256999, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -18042.646338332648, 7756.060326150153, 6.10269198572761, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -17797.45506204696, 7820.728677570909, 5.368257066939894, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -17641.076429431905, 7513.468288854282, 5.780602728345346, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -17217.683690203783, 7508.845358504749, 1.2447477904162703, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -17035.388047341832, 7085.403702694686, 2.9128740382536598, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -16955.364454252478, 6883.355528843816, 3.910338214644887, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -17464.7498171617, 6766.264329495267, 1.998368270726024, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -17657.29834008976, 7066.259681252217, 5.300153542946757, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -17525.396683326966, 7265.5895135353485, 5.613185771425385, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -18116.35801201642, 7455.006854483534, 1.67873606796155, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -18409.79934417722, 7662.007369918694, 5.766839303251265, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -18747.60814432663, 7297.517886506753, 3.843343304946575, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -18457.6078569479, 6993.818280399123, 4.634695869283217, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -18069.379965299846, 6720.470117537289, 1.2253081817766807, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -18144.02006483478, 6974.105196015478, 5.502362838454085, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -18824.0447308571, 6766.064929137621, 0.19326626293764632, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -19125.57995534042, 7222.317412582839, 1.843225633340267, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -19131.03147683634, 7610.603343764556, 1.7844493351601902, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -19653.6619466589, 7708.037992749222, 0.10815374668433966, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -19902.832251831496, 7520.346864053462, 5.138485042623604, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -20078.997716094782, 7271.794528258423, 4.703866295707671, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -19620.354433080898, 7175.090477224502, 4.234219394053157, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -19534.675761927727, 7466.197131633376, 2.089227232308555, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -19938.330706349316, 6943.819297810714, 1.3703972989053466, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -19464.53136444997, 6712.010731272, 0.9350500226594771, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -20230.081245851186, 6718.346837850164, 1.0207058686228865, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -20658.85778712446, 6865.755815560418, 2.3636234173889124, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -20568.13000905056, 7137.679794994278, 5.891329404395422, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -20645.039268972858, 7419.544711886881, 2.40675084039521, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -20505.351070289675, 7509.0984986753765, 4.5258336569806765, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -20689.617102727374, 7760.154953638275, 0.43617033596455734, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -21076.54025126313, 7861.042707364939, 5.452503403205144, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -20892.53020058836, 8065.589301285597, 1.6691095709535102, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -21114.951079654777, 8841.818389159693, 3.0365804330973263, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -21157.931621392156, 9095.690025013902, 1.1788247619931345, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -21405.013837086448, 9246.283839692185, 0.27730181418613814, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -21631.888106915892, 8945.850531957112, 2.5860412521199914, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -21822.872517062922, 9279.179998382264, 1.26959778167954, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -22000.128969592475, 8894.701405878095, 4.071925940020653, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -21561.1940226764, 9527.618017138435, 5.659377129801404, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -22213.086718178896, 8559.11593082308, 1.6786706461076935, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -22516.609545745257, 8840.543684943717, 5.821949156005781, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -22421.702506259815, 9133.67546264359, 4.3833309104876355, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -22737.260971343214, 9307.660119744838, 2.543891583479027, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -22702.674694346875, 9583.28569474937, 4.045086760935766, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -22934.488188273863, 9784.589125896586, 5.758504058350831, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -22798.04868480685, 10031.866906865522, 0.5351626528183789, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -23245.604108858046, 10352.64638547336, 5.9329641373125, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -23372.959346591826, 9912.323575415983, 4.056679088962976, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -23288.270489100803, 9523.516979753711, 2.5411071067203954, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -23067.906316560682, 9377.724300286613, 3.6077033155540374, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -23359.049067008116, 9148.795540431844, 4.162467685720089, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -23150.7856192246, 8927.167054950738, 4.708479999654356, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -22877.248182366016, 9111.412204456032, 4.728111091526798, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -22434.78975075414, 9558.123894727189, 5.027997127456732, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -22657.475884711537, 9857.50515073232, 6.021086621878668, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -22365.110697544802, 10084.469891033159, 0.021140814485780847, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -22625.74720590957, 10364.003452458508, 5.124778072346706, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -22950.297017491524, 10585.828582963146, 5.026780012931269, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -22982.448010669443, 10273.369921971873, 4.556506038527827, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -22976.3439782292, 8694.852667405063, 2.351759759643766, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -23269.522856557698, 8682.724039558898, 4.987562857276702, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -23047.542225499375, 8330.202228377057, 0.8478882785373462, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -22679.22016133186, 8392.966274839786, 5.421342491549895, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -22442.29197605588, 8084.862348556737, 5.8635724476340645, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -22024.912191925298, 8247.267733486919, 5.074047425258352, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -21668.760819391064, 8063.1772929289655, 5.158549559401695, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -21843.911210315015, 7692.89369596537, 5.613446817428176, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -22274.710438648883, 7635.1935265369075, 1.2862109212977242, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -22547.56104475178, 7852.246146820249, 1.8123942198907763, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -22825.29069605488, 7845.935549214298, 3.8333110943245474, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -23138.863060082233, 8071.722408202063, 6.063025137252726, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -23207.81093395838, 7588.438608743116, 0.23180380884537308, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -22965.764495078864, 7244.578183692288, 2.590159439807286, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -22522.2817717685, 7346.757716075391, 2.364124233336136, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -22033.768160582273, 7224.88521461085, 0.005682221834248806, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -21740.864804237935, 7472.393778493295, 4.7645437761413545, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -21455.22991209148, 7579.142168447331, 2.325756454479965, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -21434.936415597957, 7857.592792081228, 0.8404790326676678, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -21094.822820944984, 7446.871203349892, 3.9699942689144936, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -21417.950487994804, 7125.050587073722, 4.4254819746565, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -21850.857581015243, 6883.68388337988, 3.460658314196081, true, "snowy"));

                scenicList.push(new Scenery("pineTree", -22564.031563201108, 6907.604364612028, 4.686714657168089, true));
                scenicList.push(new Scenery("pineTree", -23345.244750696158, 6981.055244986942, 0.5690758373098637, true));
                scenicList.push(new Scenery("pineTree", -20963.359321983604, 7059.0741937757875, 2.306437098920868, true));


                //cottage

                scenicList.push(new Scenery("pineTree", -20976.125662358794, 13231.552577068223, 1.5625943671954676, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -21130.241675192927, 13628.809522945163, 5.654387766523397, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -21479.597005562315, 13477.214334935046, 1.9686282530604489, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -21995.502560614168, 13447.624319890363, 2.2499090298363122, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -21852.666347852773, 13041.72685096116, 3.8218084029923305, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -22127.99504662267, 12730.264437887026, 1.9710304823326878, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -21550.952846465178, 12805.293490889444, 0.03560410972937195, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -20616.559061612534, 12975.696492995452, 5.4247350393619325, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -20539.192502005884, 13382.488408010444, 1.9138211658094135, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -20276.71480582892, 13715.176923318693, 4.23112533224876, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -20798.117643611236, 13827.648362877759, 1.8427583902200648, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -21362.913821389702, 13968.891951349959, 3.778112815054814, true, "snowy"));

                scenicList.push(new Scenery("freydicBuilding5", -21367.578214203284, 13197.89020630277, 0, true));

                scenicList.push(new Scenery("crate", -21319.76562645684, 13275.325067048563, 0.689, 1, [1.2]));
                scenicList.push(new Scenery("crate", -21353.466671800452, 13304.208667212819, 0.989, 1, [1.4]));

                scenicList.push(new Scenery("harstPlant", -20896.800103809703, 13028.70695431031, 6.74, "freynor"));
                scenicList.push(new Scenery("harstPlant", -20972.24876453387, 12973.821072248076, 1.86, "freynor"));
                scenicList.push(new Scenery("harstPlant", -21020.5825113009, 13034.728420518504, 2.16, "freynor"));

                scenicList.push(new Scenery("potatoPlant", -21413.429093724688, 12970.815972336104, 0.959, "freynor"));
                scenicList.push(new Scenery("potatoPlant", -21500.708728406415, 12983.9543574092, 5.55, "freynor"));
                scenicList.push(new Scenery("potatoPlant", -21452.06258545801, 12966.637224891716, 4.23, "frenor"));

                scenicList.push(new Scenery("hearth", -21387.88809984972, 13187.742699082006, 2.1, "lit"));

                scenicList.push(new Scenery("walrusHideRug", -21347.443185181917, 13207.406325036565, 2.2, 0.85));

                scenicList.push(new Scenery("stumpStoolSml",-21379.19744974711, 13242.83392270731, 0, true));

                if (uniqueChars.olavLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Olav the Hermit")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-21376.634525427333, 13236.729431034028, "Person", false, "Olav the Hermit", {race: "Freynor", faction: "Freynor", personality: "violent", outfit: ["varnFurClothing", 0], weapon: ["longbow", [0.3, 0.5], 0, 0, 0.40 + (Math.floor(Math.random() * 6) / 10)], ranged: [true, "arrow", 5, 2100, 9, 7, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-21376.634525427333, 13235.729431034028]]}));
                    }
                }
                ArtificialIntelligenceAccess[ArtificialIntelligenceAccess.length -1].healthMAX = 12;
                ArtificialIntelligenceAccess[ArtificialIntelligenceAccess.length -1].health = 12;

                //item
                if (quests.hermitsWood == true)
                {
                    quests.hermitsWood = false;
                    worldItems.push([new Item("wood", -21455.153755780033, 13189.602642253305), 1]);
                    worldItems.push([new Item("wood", -21440.69297900197, 13163.855152811297), 1]);
                    worldItems.push([new Item("wood", -21443.96243015585, 13178.629653117394), 1]);
                }

                //creatures

                ArtificialIntelligenceAccess.push(new Unit(-19187.30765881136, 11765.611064249553, "Koobu", false, "moxifoxi1"));

                ArtificialIntelligenceAccess.push(new Unit(-19429.135754748808, 13810.667975472967, "Waanti", false, "keyinthemornuy1"));
                ArtificialIntelligenceAccess.push(new Unit(-19556.935878731845, 13900.750409568931, "Waanti", true, "keyinthemornuy2"));
                ArtificialIntelligenceAccess.push(new Unit(-19316.273496911268, 13988.07690923234, "Waanti", false, "keyinthemornuy3"));
                ArtificialIntelligenceAccess.push(new Unit(-14267.461837252935, 14125.45928042317, "Waanti", "baby", "keyinthemornuy4"));
                ArtificialIntelligenceAccess.push(new Unit(-14395.378155757568, 13915.508550708062, "Waanti", false, "keyinthemornuy5"));
                ArtificialIntelligenceAccess.push(new Unit(-14496.265861568978, 13984.801633139505, "Waanti", false, "keyinthemornuy6"));
                ArtificialIntelligenceAccess.push(new Unit(-14671.779002060102, 14148.235877952404, "Waanti", true, "keyinthemornuy7"));
                ArtificialIntelligenceAccess.push(new Unit(-14718.04644506877, 14040.951020101917, "Waanti", "baby", "keyinthemornuy8"));
                ArtificialIntelligenceAccess.push(new Unit(-15799.581953957939, 10652.855029021674, "Waanti", false, "keyinthemornuy9"));
                ArtificialIntelligenceAccess.push(new Unit(-15855.647371927698, 10755.057664073984, "Waanti", "baby", "keyinthemornuy10"));
                ArtificialIntelligenceAccess.push(new Unit(-17198.378145498085, 12294.390028545602, "Waanti", false, "keyinthemornuy11"));
                ArtificialIntelligenceAccess.push(new Unit(-17009.449357120622, 12255.774974320086, "Waanti", "baby", "keyinthemornuy12"));
                ArtificialIntelligenceAccess.push(new Unit(-22869.01405347991, 16235.07807580251, "Waanti", "baby", "keyinthemornuy13"));
                ArtificialIntelligenceAccess.push(new Unit(-22721.46389384539, 16329.508675864634, "Waanti", false, "keyinthemornuy14"));
                ArtificialIntelligenceAccess.push(new Unit(-22808.286337101486, 16160.677832558787, "Waanti", true, "keyinthemornuy15"));
                ArtificialIntelligenceAccess.push(new Unit(-18406.313772912745, 10580.5390724403, "Waanti", "baby", "keyinthemornuy16"));
                ArtificialIntelligenceAccess.push(new Unit(-18362.678520290414, 10670.063752015249, "Waanti", "baby", "keyinthemornuy17"));
                ArtificialIntelligenceAccess.push(new Unit(-18170.544134496453, 10588.169004526517, "Waanti", false, "keyinthemornuy18"));
                ArtificialIntelligenceAccess.push(new Unit(-18493.98348001375, 10681.476141330999, "Waanti", true, "keyinthemornuy19"));

                ArtificialIntelligenceAccess.push(new Unit(-17150.820071348902, 13705.656688178186, "WinterWolf", false, "dothngsnever1"));
                ArtificialIntelligenceAccess.push(new Unit(-17056.603181550974, 13634.24330689028, "WinterWolf", false, "dothngsnever2"));
                ArtificialIntelligenceAccess.push(new Unit(-14055.10825324051, 11198.25695943727, "WinterWolf", false, "dothngsnever3"));
                ArtificialIntelligenceAccess.push(new Unit(-14138.657859316865, 11118.581454969864, "WinterWolf", false, "dothngsnever4"));
                ArtificialIntelligenceAccess.push(new Unit(-14270.982455988862, 11245.464552715543, "WinterWolf", false, "dothngsnever5"));
                ArtificialIntelligenceAccess.push(new Unit(-14110.47820803839, 9425.708287637039, "WinterWolf", false, "dothngsnever6"));
                ArtificialIntelligenceAccess.push(new Unit(-14213.907362124892, 9536.370649991604, "WinterWolf", false, "dothngsnever7"));
                ArtificialIntelligenceAccess.push(new Unit(-14082.20507640555, 9586.101103164907, "WinterWolf", false, "dothngsnever8"));
                ArtificialIntelligenceAccess.push(new Unit(-14324.277268891037, 9435.922996393207, "WinterWolf", false, "dothngsnever9"));
                ArtificialIntelligenceAccess.push(new Unit(-22664.714924960434, 10817.998927015185, "WinterWolf", false, "dothngsnever10"));
                ArtificialIntelligenceAccess.push(new Unit(-22789.789264165833, 10937.077801208048, "WinterWolf", false, "dothngsnever11"));
                ArtificialIntelligenceAccess.push(new Unit(-22537.83448124851, 10834.544686764923, "WinterWolf", false, "dothngsnever12"));
                ArtificialIntelligenceAccess.push(new Unit(-16426.563074177408, 15802.880153267852, "WinterWolf", false, "dothngsnever13"));
                ArtificialIntelligenceAccess.push(new Unit(-16243.307017827927, 15932.410295774856, "WinterWolf", false, "dothngsnever14"));
                ArtificialIntelligenceAccess.push(new Unit(-16351.736925861449, 16035.565500194325, "WinterWolf", false, "dothngsnever15"));
                ArtificialIntelligenceAccess.push(new Unit(-16201.891624059304, 15810.15932319728, "WinterWolf", false, "dothngsnever16"));
                ArtificialIntelligenceAccess.push(new Unit(-19098.30809095215, 15530.406313382276, "WinterWolf", false, "dothngsnever17"));
                ArtificialIntelligenceAccess.push(new Unit(-18936.96285760309, 15583.745207427177, "WinterWolf", false, "dothngsnever18"));

                ArtificialIntelligenceAccess.push(new Unit(-14479.508303290404, 15771.791207851506, "Balkur", false, "icntbleveit1"));

                ArtificialIntelligenceAccess.push(new Unit(-22111.632164286155, 9317.64791825696, "BlackBear", false, "fretme1"));
                ArtificialIntelligenceAccess.push(new Unit(-22199.215306220423, 9570.365309361345, "BlackBear", true, "fretme2"));
                ArtificialIntelligenceAccess.push(new Unit(-17818.165274105457, 7196.57646838924, "BlackBear", false, "fretme2"));

                ArtificialIntelligenceAccess.push(new Unit(-17164.90080822277, 8769.414434476, "Grib", false, "lkeapyysnd1"));
                ArtificialIntelligenceAccess.push(new Unit(-19884.698749706033, 7359.859370320479, "Grib", false, "lkeapyysnd2"));

                ArtificialIntelligenceAccess.push(new Unit(-18176.74311031184, 9201.697241186861, "Narthwarp", false, "kngsrnsom1"));
                ArtificialIntelligenceAccess.push(new Unit(-18440.18630461747, 9394.887745719741, "Narthwarp", false, "kngsrnsom2"));

                ArtificialIntelligenceAccess.push(new Unit(-18674.781452332572, 8085.67677217206, "Shehid", false, "ydyuhteme1"));
                ArtificialIntelligenceAccess.push(new Unit(-18713.38624795983, 8384.436183987214, "Shehid", false, "ydyuhteme2"));
                ArtificialIntelligenceAccess.push(new Unit(-18380.06099490088, 8289.808190231293, "Shehid", false, "ydyuhteme3"));
                ArtificialIntelligenceAccess.push(new Unit(-21021.740819762945, 7384.955110232146, "Shehid", false, "ydyuhteme4"));
                ArtificialIntelligenceAccess.push(new Unit(-17143.88838045, 7561.761829491252, "Shehid", false, "ydyuhteme5"));
                ArtificialIntelligenceAccess.push(new Unit(-16943.328352675886, 7743.873720129396, "Shehid", false, "ydyuhteme6"));

                ArtificialIntelligenceAccess.push(new Unit(-15982.606175967023, 8003.4271220655655, "Varn", false, "wntieetr1"));
                ArtificialIntelligenceAccess.push(new Unit(-16120.59694197086, 7735.417162196777, "Varn", true, "wntieetr2"));
                ArtificialIntelligenceAccess.push(new Unit(-16263.12937911269, 7929.343542258234, "Varn", false, "wntieetr3"));
                ArtificialIntelligenceAccess.push(new Unit(-22297.392037245118, 7927.875475258231, "Varn", true, "wntieetr4"));
                ArtificialIntelligenceAccess.push(new Unit(-22086.053434471243, 7678.847087986931, "Varn", false, "wntieetr5"));
                ArtificialIntelligenceAccess.push(new Unit(-21930.724805956677, 7797.035941517406, "Varn", true, "wntieetr6"));
                ArtificialIntelligenceAccess.push(new Unit(-21801.745965851056, 8078.6606017080285, "Varn", false, "wntieetr7"));
                ArtificialIntelligenceAccess.push(new Unit(-21667.46915487945, 7962.010891714917, "Varn", true, "wntieetr8"));

                ArtificialIntelligenceAccess.push(new Unit(-14612.849213152012, 7043.2942406542725, "Viper", false, "poysno1"));

                ArtificialIntelligenceAccess.push(new Unit(-14817.865903870605, 9437.802029646993, "Lizard", true, "grnliat1"));

                //plants

                scenicList.push(new Scenery("bushkaPlant", -16513.90189733972, 14394.376714192224, 2.58, true));
                scenicList.push(new Scenery("bushkaPlant", -15855.632909630469, 11079.341322292732, 8.11, true));
                scenicList.push(new Scenery("bushkaPlant", -21816.14714797375, 9512.64370350178, 9.99, true));
                scenicList.push(new Scenery("bushkaPlant", -22225.83521340521, 15485.99989056436, 0.23, true));

                scenicList.push(new Scenery("wightbloomPlant", -16339.0694766174, 14960.09894998763, 1.16, true));
                scenicList.push(new Scenery("wightbloomPlant", -18214.668355690897, 11067.675257399565, 2.44, true));

                scenicList.push(new Scenery("akerPlant", -18045.74913413458, 8789.249563609757, 5.43, true));

                scenicList.push(new Scenery("pluttPlant", -20905.114239189592, 8271.251241805841, 1.43, true));

                scenicList.push(new Scenery("stomwikPlant", -16335.180391136248, 8454.157977294715, 2.28, true));

                scenicList.push(new Scenery("glinPlant", -18491.49589194653, 8394.342484571083, 7.44, true));
                scenicList.push(new Scenery("glinPlant", -18671.204324161175, 8213.008723052244, 5.66, true));
                scenicList.push(new Scenery("glinPlant", -18845.327158865723, 8336.149058614357, 1.68, true));

                change = "n1e2";
            }
        }
        else if (region == "n1e3")
        {
            if (change != "n1e3")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                scenicList.push(new Scenery("pineTree", -23153, 6151,-2.25, true, undefined)); //copied n1e2
                scenicList.push(new Scenery("pineTree", -23518, 6494,5.6, true, undefined)); //copied n1e2
                scenicList.push(new Scenery("pineTree", -22641, 6364,-2.85, true, undefined)); //copied n1e2
                scenicList.push(new Scenery("pineTree", -22659, 5806,3.2, true, undefined)); //copied n1e2
                scenicList.push(new Scenery("pineTree", -22324, 6086,2.95, true, undefined)); //copied n1e2
                scenicList.push(new Scenery("pineTree", -24052, 5813,-2, true, undefined)); //copied n1e2
                scenicList.push(new Scenery("pineTree", -23742, 6022,1.1, true, undefined)); //copied n1e2
                scenicList.push(new Scenery("pineTree", -24244, 6281,-1.7, true, undefined)); //copied n1e2
                scenicList.push(new Scenery("pineTree", -24562, 6011,4.9, true, undefined)); //copied n1e2
                scenicList.push(new Scenery("pineTree", -25076, 6479,6.8, true, undefined)); //copied n1e2
                scenicList.push(new Scenery("pineTree", -25651, 6162,-3.3, true, undefined)); //copied n1e2
                scenicList.push(new Scenery("pineTree", -25213, 5786,4.7, true, undefined)); //copied n1e2
                scenicList.push(new Scenery("pineTree", -22000.128969592475, 8894.701405878095,4.071925940020653, true, "snowy")); //copied n1e2
                scenicList.push(new Scenery("pineTree", -22213.086718178896, 8559.11593082308,1.6786706461076935, true, "snowy")); //copied n1e2
                scenicList.push(new Scenery("pineTree", -22516.609545745257, 8840.543684943717,5.821949156005781, true, "snowy")); //copied n1e2
                scenicList.push(new Scenery("pineTree", -22421.702506259815, 9133.67546264359,4.3833309104876355, true, "snowy")); //copied n1e2
                scenicList.push(new Scenery("pineTree", -22737.260971343214, 9307.660119744838,2.543891583479027, true, "snowy")); //copied n1e2
                scenicList.push(new Scenery("pineTree", -22702.674694346875, 9583.28569474937,4.045086760935766, true, "snowy")); //copied n1e2
                scenicList.push(new Scenery("pineTree", -22934.488188273863, 9784.589125896586,5.758504058350831, true, "snowy")); //copied n1e2
                scenicList.push(new Scenery("pineTree", -22798.04868480685, 10031.866906865522,0.5351626528183789, true, "snowy")); //copied n1e2
                scenicList.push(new Scenery("pineTree", -23245.604108858046, 10352.64638547336,5.9329641373125, true, "snowy")); //copied n1e2
                scenicList.push(new Scenery("pineTree", -23372.959346591826, 9912.323575415983,4.056679088962976, true, "snowy")); //copied n1e2
                scenicList.push(new Scenery("pineTree", -23288.270489100803, 9523.516979753711,2.5411071067203954, true, "snowy")); //copied n1e2
                scenicList.push(new Scenery("pineTree", -23067.906316560682, 9377.724300286613,3.6077033155540374, true, "snowy")); //copied n1e2
                scenicList.push(new Scenery("pineTree", -23359.049067008116, 9148.795540431844,4.162467685720089, true, "snowy")); //copied n1e2
                scenicList.push(new Scenery("pineTree", -23150.7856192246, 8927.167054950738,4.708479999654356, true, "snowy")); //copied n1e2
                scenicList.push(new Scenery("pineTree", -22877.248182366016, 9111.412204456032,4.728111091526798, true, "snowy")); //copied n1e2
                scenicList.push(new Scenery("pineTree", -22434.78975075414, 9558.123894727189,5.027997127456732, true, "snowy")); //copied n1e2
                scenicList.push(new Scenery("pineTree", -22657.475884711537, 9857.50515073232,6.021086621878668, true, "snowy")); //copied n1e2
                scenicList.push(new Scenery("pineTree", -22365.110697544802, 10084.469891033159,0.021140814485780847, true, "snowy")); //copied n1e2
                scenicList.push(new Scenery("pineTree", -22625.74720590957, 10364.003452458508,5.124778072346706, true, "snowy")); //copied n1e2
                scenicList.push(new Scenery("pineTree", -22950.297017491524, 10585.828582963146,5.026780012931269, true, "snowy")); //copied n1e2
                scenicList.push(new Scenery("pineTree", -22982.448010669443, 10273.369921971873,4.556506038527827, true, "snowy")); //copied n1e2
                scenicList.push(new Scenery("pineTree", -22976.3439782292, 8694.852667405063,2.351759759643766, true, "snowy")); //copied n1e2
                scenicList.push(new Scenery("pineTree", -23269.522856557698, 8682.724039558898,4.987562857276702, true, "snowy")); //copied n1e2
                scenicList.push(new Scenery("pineTree", -23047.542225499375, 8330.202228377057,0.8478882785373462, true, "snowy")); //copied n1e2
                scenicList.push(new Scenery("pineTree", -22679.22016133186, 8392.966274839786,5.421342491549895, true, "snowy")); //copied n1e2
                scenicList.push(new Scenery("pineTree", -22442.29197605588, 8084.862348556737,5.8635724476340645, true, "snowy")); //copied n1e2
                scenicList.push(new Scenery("pineTree", -22024.912191925298, 8247.267733486919,5.074047425258352, true, "snowy")); //copied n1e2
                scenicList.push(new Scenery("pineTree", -22274.710438648883, 7635.1935265369075,1.2862109212977242, true, "snowy")); //copied n1e2
                scenicList.push(new Scenery("pineTree", -22547.56104475178, 7852.246146820249,1.8123942198907763, true, "snowy")); //copied n1e2
                scenicList.push(new Scenery("pineTree", -22825.29069605488, 7845.935549214298,3.8333110943245474, true, "snowy")); //copied n1e2
                scenicList.push(new Scenery("pineTree", -23138.863060082233, 8071.722408202063,6.063025137252726, true, "snowy")); //copied n1e2
                scenicList.push(new Scenery("pineTree", -23207.81093395838, 7588.438608743116,0.23180380884537308, true, "snowy")); //copied n1e2
                scenicList.push(new Scenery("pineTree", -22965.764495078864, 7244.578183692288,2.590159439807286, true, "snowy")); //copied n1e2
                scenicList.push(new Scenery("pineTree", -22522.2817717685, 7346.757716075391,2.364124233336136, true, "snowy")); //copied n1e2
                scenicList.push(new Scenery("pineTree", -22033.768160582273, 7224.88521461085,0.005682221834248806, true, "snowy")); //copied n1e2
                scenicList.push(new Scenery("pineTree", -22564.031563201108, 6907.604364612028,4.686714657168089, true, undefined)); //copied n1e2
                scenicList.push(new Scenery("pineTree", -23345.244750696158, 6981.055244986942,0.5690758373098637, true, undefined)); //copied n1e2
                scenicList.push(new Scenery("pineTree", -21995.502560614168, 13447.624319890363,2.2499090298363122, true, "snowy")); //copied n1e2
                scenicList.push(new Scenery("pineTree", -22127.99504662267, 12730.264437887026,1.9710304823326878, true, "snowy")); //copied n1e2
                scenicList.push(new Scenery("bushkaPlant", -22225.83521340521, 15485.99989056436,0.23, true, undefined)); //copied n1e2

                scenicList.push(new Scenery("pineTree", -35827.22633744856, 5727.058513374485,3.2974230251624324, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -35942.246913580246, 6037.513760288066,4.02832796982925, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -35185.25102880658, 5712.012217078189,5.4180366991329985, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -29831, 5764,6, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -30049, 5979,3, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -30502, 5984,-2, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -29506, 5907,0, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -28894, 5795,-1, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -28474, 6009,-0.7, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -28075, 5806,2.5, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -27814, 6059,0.9, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -27489, 5917,5.6, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -27041, 5927,4.15, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -26413, 5795,3.5, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -25997, 5968,-2.875, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -26003, 6438,-4.3, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -26411, 6102,-9.2, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -26487, 6578,5.9, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -26909, 6226,-2.64, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -27489, 6420,0, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -28199, 6300,0, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -28604, 6530,5.5, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -28934, 6142,-6.6, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -29304, 6435,-6.7, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -29738, 6129,10, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -29609, 6578,5, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -30077, 6321,-3.13, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -30307, 5781,-5.8, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -30444, 6481,4.42, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -30851, 6166,-1.3696372563201, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -31004, 5883,-2.25, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -31423, 5918,12, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -31329, 6277,0, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -30942, 6525,13.5, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -31822, 6134,-8.4, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -32230, 5822,5.7721, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -31791, 5859,1.2, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -31661, 6435,0, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -29291, 6142,-4.536, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -24052, 5813,-2, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -23742, 6022,1.1, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -24244, 6281,-1.7, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -24562, 6011,4.9, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -25076, 6479,6.8, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -25651, 6162,-3.3, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -25213, 5786,4.7, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -32491, 5555,5, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -32700, 5990,-9, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -32391, 6232,3.4, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -32478, 6524,-5.443, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -32925, 6310,7.75, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -33352, 6480,-3.95, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -33239, 6077,-2.39239, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -33706, 6188,10.45, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -33551, 5652,12.85, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -32851, 5714,-13.1, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -26078, 5599,1, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -26078, 5599,5.7, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -26863, 5634,1.2, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -27725, 5595,2, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -28393, 5561,0.1, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -29267, 5639,3, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -30635, 5633,2.8, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -31591, 5590,0.1, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -27287, 5659,0, true, undefined)); //copied e3
                scenicList.push(new Scenery("neprilnePlant", -29025, 5615,5.9, true, undefined)); //copied e3
                scenicList.push(new Scenery("glinPlant", -30045, 5911,-10.5, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -34992, 6702,6, true, undefined)); //copied e3
                scenicList.push(new Scenery("pineTree", -34384, 6421,5.3, true, undefined)); //copied e3

                scenicList.push(new Scenery("pineTree", -23991.97862489201, 6688.26873410701, 4.177861375706536, true));
                scenicList.push(new Scenery("pineTree", -24585.7924782815, 6692.275255603198, 6.133087490519908, true));
                scenicList.push(new Scenery("pineTree", -23802.92347457704, 7108.772914633983, 5.811287241998845, true));
                scenicList.push(new Scenery("pineTree", -24434.35393925876, 7064.628391012672, 6.1216792485593015, true));
                scenicList.push(new Scenery("pineTree", -25050.56566958834, 6942.582031786193, 1.7936511069043908, true));
                scenicList.push(new Scenery("pineTree", -24892.557945714503, 7277.27841065534, 1.0976565905218585, true));
                scenicList.push(new Scenery("pineTree", -26209.45400212201, 6800.612299802058, 0.9530030585328002, true));
                scenicList.push(new Scenery("pineTree", -26740.29119390534, 6768.792796777177, 0.07778362724567459, true));
                scenicList.push(new Scenery("pineTree", -26512.04267051344, 6952.986441347492, 3.032744087396702, true));
                scenicList.push(new Scenery("pineTree", -27176.316327353576, 6636.535128120084, 3.7054849147573936, true));
                scenicList.push(new Scenery("pineTree", -27710.87106145983, 6643.684429749497, 2.198560953022542, true));
                scenicList.push(new Scenery("pineTree", -27618.441250925407, 6916.161110901422, 6.058196070258311, true));
                scenicList.push(new Scenery("pineTree", -27332.883852251045, 7100.7117283071575, 3.894331711780199, true));
                scenicList.push(new Scenery("pineTree", -28006.89681841141, 6815.833726548876, 3.3280814913694954, true));
                scenicList.push(new Scenery("pineTree", -28213.87327336803, 6643.784968389728, 5.469131271490034, true));
                scenicList.push(new Scenery("pineTree", -28422.69726897071, 6940.071161696039, 4.316689981332969, true));
                scenicList.push(new Scenery("pineTree", -28926.614115847162, 6638.050448709856, 5.852385632986384, true));
                scenicList.push(new Scenery("pineTree", -29388.375627694775, 6743.580717430509, 2.4060094067114983, true));
                scenicList.push(new Scenery("pineTree", -29266.407593768534, 7088.6433473337975, 6.261824196143782, true));
                scenicList.push(new Scenery("pineTree", -29000.114972093088, 6983.262804765891, 1.9459439275741075, true));
                scenicList.push(new Scenery("pineTree", -29100.243201417863, 7405.814556865901, 4.72543660957025, true));
                scenicList.push(new Scenery("pineTree", -29901.290631403146, 6860.874616078529, 5.684227037808588, true));
                scenicList.push(new Scenery("pineTree", -30121.636874937783, 6748.595723874325, 5.805873934670346, true));
                scenicList.push(new Scenery("pineTree", -29612.676940057965, 6996.917776472668, 4.278246638217817, true));
                scenicList.push(new Scenery("pineTree", -29737.902969805116, 6731.311754614809, 1.1921585739629204, true));
                scenicList.push(new Scenery("pineTree", -30642.49819971513, 6665.714172269832, 0.1345037901919337, true));
                scenicList.push(new Scenery("pineTree", -30424.803938052086, 6807.812377053581, 6.27856375976079, true));
                scenicList.push(new Scenery("pineTree", -30691.040816055323, 6883.330901806234, 4.58513184977074, true));
                scenicList.push(new Scenery("pineTree", -32142.453895641887, 6658.677914899954, 0.30790248610805543, true));
                scenicList.push(new Scenery("pineTree", -31390.551158776198, 6682.355765171263, 5.990884024289732, true));
                scenicList.push(new Scenery("pineTree", -31006.306735758586, 6711.588193783664, 2.305209581363424, true));
                scenicList.push(new Scenery("pineTree", -30975.951376538862, 6942.223354293863, 5.759757011992826, true));
                scenicList.push(new Scenery("pineTree", -30807.49793012566, 7148.44582602023, 2.228299903213306, true));
                scenicList.push(new Scenery("pineTree", -30444.936478496642, 7383.41547674497, 5.574210591719389, true));
                scenicList.push(new Scenery("pineTree", -30234.963246428186, 7066.587559731089, 2.063741339491064, true));
                scenicList.push(new Scenery("pineTree", -31235.751149230888, 7320.59553810478, 4.211630470090099, true));
                scenicList.push(new Scenery("pineTree", -30938.08802137969, 7518.037792768434, 0.9311447016570645, true));
                scenicList.push(new Scenery("pineTree", -27777.991746166717, 7291.652839146298, 2.9945460754767765, true));

                scenicList.push(new Scenery("pineTree", -25557.292523356216, 6775.282293150573, 4.009701214005513, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -25830.36813474433, 7138.612280936631, 5.256981576619868, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -25356.83366653274, 7209.316245539256, 6.208111188401313, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -25269.100502202986, 7562.0989401502375, 1.605089439771251, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -24459.559117676294, 7467.8914820424825, 0.8488002587345551, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -24119.76849865739, 7443.0762683862395, 1.2845625278079253, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -24006.168432944938, 7835.006658292834, 2.4330604485906244, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -24460.5001081079, 8018.629511040622, 5.391241695509313, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -24745.81467545166, 7763.563953183648, 3.413000155869467, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -25136.28780469864, 7980.7662700750525, 3.3466940402825993, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -24941.427177298414, 8394.971996745995, 4.9049667486768485, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -25422.658957574928, 8239.335017032125, 1.0170502999942361, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -25638.775324786842, 7974.0775924207755, 2.025594908768747, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -26026.066300893322, 7747.229843832614, 0.5177303234722833, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -26150.715586601964, 7350.8698153904415, 4.708279589217897, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -26491.439286688557, 7316.6055251285525, 1.134872523348401, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -26652.462096066636, 7649.824176722428, 3.0597034927921487, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -26414.237428232223, 7914.467129636278, 2.0223081910859855, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -26994.078833548905, 7896.895150367641, 2.0397847435708805, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -27156.655424209628, 7570.830677689279, 1.5296095271134826, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -26964.590542730282, 7193.487435725535, 3.0009345921401027, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -27557.965112661725, 7492.29520551153, 2.537740664893593, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -27715.857800630944, 7791.94263315112, 6.055417474825126, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -27520.592324810656, 8017.393146985925, 4.662479017340606, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -27353.047304120177, 8322.57079333291, 1.621541789044796, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -27000.544969638562, 8225.549646668806, 4.252030847166608, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -26604.695033729786, 8285.997951748524, 3.010050092794629, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -26215.2618598927, 8493.411272847377, 4.484546568528981, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -26069.898241434174, 8198.056598109808, 2.4430231490724306, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -25813.66874218323, 8490.627157640622, 4.192007273820048, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -25401.820120471966, 8654.7687501616, 5.683994454787115, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -25726.87238656127, 8936.036807089999, 2.4023058344870587, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -26007.431956432676, 9273.13577007356, 3.092039168902374, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -26263.312440113154, 9090.9992180829, 5.012452289247605, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -26378.609202801148, 9368.729031986042, 0.6920705354253855, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -26678.57374080783, 9510.303700083225, 2.495588912986582, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -26443.76252523723, 9648.06153640571, 0.1379596968253323, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -26108.570451134867, 9753.539845701825, 5.858550531906116, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -26249.61890713087, 9991.120431057385, 1.3696425613477488, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -25892.007434026837, 9559.319360487245, 4.177570120857853, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -26700.37275046363, 9106.291420856987, 1.6438505856749188, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -27137.349760126468, 8979.008508898933, 0.8877239129621071, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -27422.49549344016, 8678.154985602983, 2.073008226691925, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -26951.54826951591, 8566.316486300944, 5.087996504585818, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -26618.375898006616, 8806.52064385089, 2.585776988853363, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -26208.684676731013, 8771.28859615452, 3.382409093982072, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -28243.274767443763, 7545.814839522307, 4.1924777630069565, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -28327.79002852711, 7984.656850380987, 1.7736118647060228, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -27992.38338664068, 8207.414913183255, 2.7372645052524316, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -27827.938246150316, 8509.838282778874, 2.6448738400404883, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -28288.453675649336, 8643.1197930018, 4.407324902415818, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -24419.818644659386, 8406.379705494599, 3.6784949565172753, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -24176.54747668885, 8626.058732473868, 0.272490622646328, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -23940.39040552661, 8333.542426594897, 2.7888020546911947, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -23742.419161300237, 8084.887979313443, 3.3209390161380568, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -23699.423277038673, 8601.094962090665, 0.6942548980758907, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -23899.63705930636, 8906.570751271373, 1.2334646242593732, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -23734.593352689782, 9181.754835423875, 1.6492931216558213, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -23625.105103014153, 7555.373638871037, 2.0795227871448976, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -23608.805192327018, 8321.857149170506, 2.272642102415597, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -33251.532999275165, 6988.8489993242865, 5.623273189337759, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -28659.329712678864, 7308.900019585688, 5.026960678696023, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -28757.556312029763, 7677.0892268536545, 3.1374969846700056, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -29254.542535552475, 7721.073190844313, 0.05901195756569625, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -28997.011630310575, 7976.004408149653, 5.469392780507181, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -28644.531994844026, 8143.961204646164, 1.0413151744628693, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -28699.345429804198, 8419.35294339425, 0.793566594415234, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -29185.729785542764, 8665.709821354641, 6.230360789572241, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -29348.74460148715, 8425.141422337394, 4.41500235697535, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -29114.925264750484, 8236.103353005325, 3.6619419499408936, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -29446.532905137115, 8002.468816729754, 1.3769820037859237, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -29621.905701084626, 7678.3758204479755, 4.831553808350331, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -29863.31851209379, 7914.684384424263, 5.991120920392729, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -29785.51534813043, 8275.520056823048, 5.167776303721017, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -30003.957688388105, 8643.50582428325, 6.033833720685686, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -30270.0617568326, 8337.056169487696, 1.2746112550600124, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -30660.948785248544, 8021.5791497173495, 3.855662523243728, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -30984.667325261264, 8123.831240617903, 5.546050756740568, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -30631.08068893527, 8332.471934041867, 4.049879714342989, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -30469.48441467035, 8666.971562595598, 4.117868515335317, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -30292.32060912368, 8973.997589579129, 1.5874867997820323, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -29726.673195013947, 8812.052575295467, 3.5261149636952953, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -31011.76433746318, 8398.53298240245, 1.6815974417222406, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -31354.805764236688, 7960.360093842824, 3.645386094147965, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -31559.08761954653, 8141.350372292318, 4.2067854398463735, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -31603.356149080788, 7731.789283413584, 0.5758412231974801, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -31904.051638054156, 8030.183705931022, 4.790787079159055, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -31581.410906755813, 8466.216228660185, 5.521367099267343, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -32000.575149698092, 7569.928739708424, 0.7220929290132158, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -32392.04363899284, 7648.267707556057, 0.1744753011377038, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -32482.34910579084, 7312.3204325081715, 1.6002205384038157, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -32867.107103808645, 7468.328604829935, 5.423065674878849, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -33009.11502426502, 7137.496552064102, 4.595310686713143, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -30265.818796492826, 7789.760146788906, 0.21982754015474512, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -30045.943819018925, 7520.905028064953, 3.1364023643196797, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -29862.938526809372, 7281.585406295653, 5.440721149663799, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -29485.575120473528, 7337.412547886092, 1.3804337971703105, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -30616.109306074482, 7681.029452783278, 0.003861833745872367, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -31230.411804755426, 7653.547027754099, 4.002925238022998, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -31645.027181627866, 7303.169764511562, 3.7806333224183333, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -31558.722354284822, 7019.651733651137, 3.490068628866592, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -31783.69185438382, 6813.43726238682, 3.5835973689318132, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -32123.680859545766, 7045.44703219055, 5.82141781026633, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -32466.284213349347, 6913.809232039196, 5.541930836741178, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -32833.6595208919, 6737.775694857772, 1.4188128540995955, true, "snowy"));
                scenicList.push(new Scenery("pineTree", -31405.347095776127, 11909.501966231952, 1.0754843, true, "snowy"));

                //plants
                scenicList.push(new Scenery("bushkaPlant", -27159.846329697863, 12717.948033707282, 1.45, true));
                scenicList.push(new Scenery("bushkaPlant", -29756.37244129524, 13495.197052891912, 2.67, true));
                scenicList.push(new Scenery("bushkaPlant",-32387.858751396307, 9651.807068442979, 3.89, true));
                scenicList.push(new Scenery("bushkaPlant", -31309.113805252913, 8135.327975147819, 4.102, true));
                scenicList.push(new Scenery("bushkaPlant", -24773.58262140725, 15278.746009113569, 5.131, true));
                scenicList.push(new Scenery("bushkaPlant", -24766.423685447182, 13801.964217943734, 6.72, true));
                scenicList.push(new Scenery("bushkaPlant", -25612.086365793868, 11922.16849285608, 1.163, true));
                scenicList.push(new Scenery("bushkaPlant", -32183.66507042835, 14857.82802193571, 2.14, true));
                scenicList.push(new Scenery("bushkaPlant", -29884.729425925274, 12423.65976332178, 3.95, true));
                scenicList.push(new Scenery("bushkaPlant", -31462.100667603037, 11858.492493171274, 6.2355, true));

                scenicList.push(new Scenery("wightbloomPlant", -29386.56006150811, 11408.841970813743, 2.863, true));

                scenicList.push(new Scenery("wyrPlant", -25439.4499535718, 7652.133455432985, 6.162, true));
                scenicList.push(new Scenery("wyrPlant", -30317.289274796076, 7937.380770779177, 1.789, true));

                scenicList.push(new Scenery("akerPlant", -25561.523879167533, 8156.87360422573, 7.67, true));
                scenicList.push(new Scenery("akerPlant", -31307.519489698967, 7160.834695331602, 4.81, true));
                scenicList.push(new Scenery("akerPlant", -27484.73898020951, 7190.7238615611905, 1.81, true));

                scenicList.push(new Scenery("glinPlant", -29564.36788270022, 8147.959959237769, 0.568, true));
                scenicList.push(new Scenery("glinPlant", -29476.620241340097, 8323.08469435101, 2.838, true));
                scenicList.push(new Scenery("glinPlant", -29186.35640125774, 8089.61843457056, 4.608, true));
                scenicList.push(new Scenery("glinPlant", -29296.505451517452, 7913.34659130007, 2.28, true));
                scenicList.push(new Scenery("glinPlant", -29562.18696149577, 8430.168710028345, 7.58, true));
                scenicList.push(new Scenery("glinPlant", -29619.305816656273, 8300.332219547941, 0.128, true));

                scenicList.push(new Scenery("culprisPlant", -26532.9746259379, 8002.559515060744, 0.128, true));

                scenicList.push(new Scenery("stone", -31164.633553619627, 11722.926937849554, 4.11, 1, 3));
                scenicList.push(new Scenery("stone", -24784.169426909237, 10439.347855175742, 5.31, 1.5, 1));

                //animals
                ArtificialIntelligenceAccess.push(new Unit(-30390.434025582308, 7489.530395826565, "Varn", false, "gleeno1"));
                ArtificialIntelligenceAccess.push(new Unit(-29984.470069658073, 7333.056485040523, "Varn", false, "gleeno2"));
                ArtificialIntelligenceAccess.push(new Unit(-30183.55547606795, 7591.469968033401, "Varn", true, "gleeno3"));
                ArtificialIntelligenceAccess.push(new Unit(-29980.168436558524, 7644.980701544033, "Varn", true, "gleeno4"));
                ArtificialIntelligenceAccess.push(new Unit(-30156.841388781573, 7843.4822590720405, "Varn", true, "gleeno5"));
                ArtificialIntelligenceAccess.push(new Unit(-29066.580859742964, 7092.297505678628, "Varn", true, "gleeno6"));
                ArtificialIntelligenceAccess.push(new Unit(-29189.35232945996, 7167.413596751402, "Varn", true, "gleeno7"));
                ArtificialIntelligenceAccess.push(new Unit(-29039.868645429036, 7289.546421159039, "Varn", false, "gleeno8"));
                ArtificialIntelligenceAccess.push(new Unit(-27493.76618150998, 7576.413449869598, "Varn", false, "gleeno9"));
                ArtificialIntelligenceAccess.push(new Unit(-27228.633617813204, 7492.903631124836, "Varn", true, "gleeno10"));
                ArtificialIntelligenceAccess.push(new Unit(-27403.327944004508, 7435.209197033248, "Varn", false, "gleeno11"));
                ArtificialIntelligenceAccess.push(new Unit(-27266.417765144783, 7373.054398023794, "Varn", true, "gleeno12"));
                ArtificialIntelligenceAccess.push(new Unit(-27250.106773565098, 7660.723299631024, "Varn", false, "gleeno13"));
                ArtificialIntelligenceAccess.push(new Unit(-24605.244823772886, 8120.642183008834, "Varn", false, "gleeno14"));
                ArtificialIntelligenceAccess.push(new Unit(-24410.30533321625, 7936.572659502972, "Varn", true, "gleeno15"));
                ArtificialIntelligenceAccess.push(new Unit(-24706.00780951504, 7900.004917630375, "Varn", false, "gleeno16"));

                ArtificialIntelligenceAccess.push(new Unit(-29714.25856285699, 8215.301290103485, "Shehid", false, "gldencr1"));
                ArtificialIntelligenceAccess.push(new Unit(-29449.547867619993, 8084.21835460172, "Shehid", false, "gldencr2"));
                ArtificialIntelligenceAccess.push(new Unit(-29325.102528900527, 8338.233718610942, "Shehid", false, "gldencr3"));
                ArtificialIntelligenceAccess.push(new Unit(-29477.42477771746, 8430.270468954264, "Shehid", false, "gldencr4"));
                ArtificialIntelligenceAccess.push(new Unit(-29385.306286515595, 8212.281515068818, "Shehid", false, "gldencr5"));
                ArtificialIntelligenceAccess.push(new Unit(-29266.04810889122, 7980.6072980585295, "Shehid", false, "gldencr6"));
                ArtificialIntelligenceAccess.push(new Unit(-29045.657130896358, 8051.978911729265, "Shehid", false, "gldencr7"));
                ArtificialIntelligenceAccess.push(new Unit(-29183.42407176615, 8199.861575554154, "Shehid", false, "gldencr8"));
                ArtificialIntelligenceAccess.push(new Unit(-29603.249040541858, 7769.9177049743585, "Shehid", false, "gldencr9"));
                ArtificialIntelligenceAccess.push(new Unit(-29739.14306098608, 7952.143725522188, "Shehid", false, "gldencr10"));
                ArtificialIntelligenceAccess.push(new Unit(-29661.304070258248, 8121.941679508881, "Shehid", false, "gldencr12"));
                ArtificialIntelligenceAccess.push(new Unit(-29678.764504711024, 8409.509371687855, "Shehid", false, "gldencr13"));
                ArtificialIntelligenceAccess.push(new Unit(-29246.307092065505, 8583.233174834055, "Shehid", false, "gldencr14"));
                ArtificialIntelligenceAccess.push(new Unit(-28868.377325352252, 7749.285255322456, "Shehid", false, "gldencr15"));

                ArtificialIntelligenceAccess.push(new Unit(-31341.6164655985, 6981.150405435249, "BlackBear", false, "fredmisslvry1"));

                ArtificialIntelligenceAccess.push(new Unit(-32199.227426579422, 7744.3020022287155, "WinterWolf", false, "acurtate1"));
                ArtificialIntelligenceAccess.push(new Unit(-32083.334168466863, 7938.606586362059, "WinterWolf", false, "acurtate2"));
                ArtificialIntelligenceAccess.push(new Unit(-32279.742172129314, 7998.488804738367, "WinterWolf", false, "acurtate3"));
                ArtificialIntelligenceAccess.push(new Unit(-26420.303501524155, 9805.150992832738, "WinterWolf", false, "acurtate4"));
                ArtificialIntelligenceAccess.push(new Unit(-26371.11286130409, 9982.313807587228, "WinterWolf", false, "acurtate5"));
                ArtificialIntelligenceAccess.push(new Unit(-26515.164626565565, 10087.811994284193, "WinterWolf", false, "acurtate6"));
                ArtificialIntelligenceAccess.push(new Unit(-26151.479297691345, 9950.428615593, "WinterWolf", false, "acurtate7"));
                ArtificialIntelligenceAccess.push(new Unit(-32559.987436123512, 9196.25689038179, "WinterWolf", false, "acurtate8"));
                ArtificialIntelligenceAccess.push(new Unit(-32691.949597174465, 9276.759016742166, "WinterWolf", false, "acurtate9"));
                ArtificialIntelligenceAccess.push(new Unit(-32632.363501947973, 9394.015292227872, "WinterWolf", false, "acurtate10"));
                ArtificialIntelligenceAccess.push(new Unit(-24824.676158517355, 13233.08485667531, "WinterWolf", false, "acurtate11"));
                ArtificialIntelligenceAccess.push(new Unit(-24753.62559411573, 13120.053218333109, "WinterWolf", false, "acurtate12"));
                ArtificialIntelligenceAccess.push(new Unit(-30986.56490959381, 15274.276998542311, "WinterWolf", false, "acurtate13"));
                ArtificialIntelligenceAccess.push(new Unit(-31160.96049376188, 15314.321699493004, "WinterWolf", false, "acurtate14"));
                ArtificialIntelligenceAccess.push(new Unit(-31046.424403716526, 15443.691708559136, "WinterWolf", false, "acurtate15"));
                ArtificialIntelligenceAccess.push(new Unit(-31285.573944549564, 15457.911704786517, "WinterWolf", false, "acurtate16"));
                ArtificialIntelligenceAccess.push(new Unit(-31144.802795755262, 15395.65423206803, "WinterWolf", true, "acurtate17"));
                ArtificialIntelligenceAccess.push(new Unit(-32382.46602265378, 12621.69980491301, "WinterWolf", false, "acurtate18"));
                ArtificialIntelligenceAccess.push(new Unit(-24876.18745200179, 15224.365958186776, "WinterWolf", false, "acurtate19"));
                ArtificialIntelligenceAccess.push(new Unit(-24925.27921955652, 15441.210972107347, "WinterWolf", false, "acurtate20"));
                ArtificialIntelligenceAccess.push(new Unit(-32264.342701239668, 15112.402107376529, "WinterWolf", false, "acurtate21"));
                ArtificialIntelligenceAccess.push(new Unit(-32086.99089536374, 15199.32458036364, "WinterWolf", false, "acurtate22"));

                ArtificialIntelligenceAccess.push(new Unit(-32907.53518365175, 6915.715503447004, "Grib", false, "anymredeepman1"));
                ArtificialIntelligenceAccess.push(new Unit(-25851.357386959524, 8803.752234270964, "Grib", true, "anymredeepman2"));
                ArtificialIntelligenceAccess.push(new Unit(-26826.879947026395, 8503.936640189679, "Grib", false, "anymredeepman3"));

                ArtificialIntelligenceAccess.push(new Unit(-28514.256914213613, 8573.226568339705, "Waanti", false, "smnthinglketht1"));
                ArtificialIntelligenceAccess.push(new Unit(-28676.637831364565, 8673.61521792089, "Waanti", true, "smnthinglketht2"));
                ArtificialIntelligenceAccess.push(new Unit(-28518.621024108354, 8736.063755292587, "Waanti", "baby", "smnthinglketht3"));
                ArtificialIntelligenceAccess.push(new Unit(-31573.37295770793, 8918.437621926392, "Waanti", true, "smnthinglketht4"));
                ArtificialIntelligenceAccess.push(new Unit(-31443.281282026226, 9005.70672347484, "Waanti", false, "smnthinglketht5"));
                ArtificialIntelligenceAccess.push(new Unit(-31527.82770073512, 9120.108367236007, "Waanti", "baby", "smnthinglketht6"));
                ArtificialIntelligenceAccess.push(new Unit(-31334.112606488714, 9239.066299223867, "Waanti", false, "smnthinglketht7"));
                ArtificialIntelligenceAccess.push(new Unit(-24935.862180538315, 10852.780039592115, "Waanti", false, "smnthinglketht8"));
                ArtificialIntelligenceAccess.push(new Unit(-25136.55730321576, 10675.672939462002, "Waanti", "baby", "smnthinglketht9"));
                ArtificialIntelligenceAccess.push(new Unit(-25309.48182555381, 10843.71100098259, "Waanti", "baby", "smnthinglketht10"));
                ArtificialIntelligenceAccess.push(new Unit(-25340.253563114627, 10793.049025137632, "Waanti", true, "smnthinglketht11"));
                ArtificialIntelligenceAccess.push(new Unit(-24979.631722516748, 10557.250285532966, "Waanti", false, "smnthinglketht12"));
                ArtificialIntelligenceAccess.push(new Unit(-25451.522454110233, 10583.283533769569, "Waanti", true, "smnthinglketht13"));
                ArtificialIntelligenceAccess.push(new Unit(-31775.63322162049, 13690.084447598778, "Waanti", true, "smnthinglketht14"));
                ArtificialIntelligenceAccess.push(new Unit(-31870.898082141655, 13583.485736375951, "Waanti", false, "smnthinglketht15"));
                ArtificialIntelligenceAccess.push(new Unit(-32016.876176090922, 13733.773218096818, "Waanti", "baby", "smnthinglketht16"));

                ArtificialIntelligenceAccess.push(new Unit(-25574.85302104149, 7522.206607258905, "Boar", false, "wowlkelamnge1"));

                ArtificialIntelligenceAccess.push(new Unit(-29270.505440883466, 9920.641958483619, "Koobu", false, "kiboto1"));
                ArtificialIntelligenceAccess.push(new Unit(-27471.663361014256, 15521.95549242106, "Koobu", false, "kiboto2"));

                ArtificialIntelligenceAccess.push(new Unit(-27478.94832229086, 11945.276051206532, "Balkur", false, "dracoonioen1"));
                ArtificialIntelligenceAccess.push(new Unit(-31300.67393831852, 11826.994317528553, "Balkur", false, "dracoonioen2"));

                change = "n1e3";
            }
        }
        else if (region == "s1w6") //Visig Forest
        {
            if (change != "s1w6")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION

                //Creatures

                //plains
                if (change == "s1w5")
                {
                    ArtificialIntelligenceAccess.push(new Unit(58903, -11142, "Boulchom", true, "Borke"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(58903, -11142, "Boulchom", false, "Borke"));
                }
                ArtificialIntelligenceAccess.push(new Unit(58559, -12675, "Boulchom", false, "Borkuh"));
                ArtificialIntelligenceAccess.push(new Unit(58786, -4115, "Thueg", true, "Spinele"));
                ArtificialIntelligenceAccess.push(new Unit(59074, -4404, "Thueg", "baby", "Espind"));
                ArtificialIntelligenceAccess.push(new Unit(58302, -4371, "Thueg", false, "Spinedler"));
                ArtificialIntelligenceAccess.push(new Unit(58900, -13337, "Thueg", false, "Spinedlar"));
                ArtificialIntelligenceAccess.push(new Unit(58720, -5452, "Conejo", true, "Boka"));
                ArtificialIntelligenceAccess.push(new Unit(59171, -6370, "Conejo", false, "Boke"));
                ArtificialIntelligenceAccess.push(new Unit(58296, -7143, "Conejo", true, "Boko"));
                ArtificialIntelligenceAccess.push(new Unit(59347, -8061, "Conejo", false, "Boki"));

                //bears
                if (change != "s2w6") //if the player comes into the map from any direction other than the south.
                {
                    ArtificialIntelligenceAccess.push(new Unit(62507, -13387, "BlackBear", true, "Jude"));
                    ArtificialIntelligenceAccess.push(new Unit(64266, -13056, "BlackBear", false, "Judy"));
                    ArtificialIntelligenceAccess.push(new Unit(63375, -5468, "BlackBear", true, "Juda"));
                }
                ArtificialIntelligenceAccess.push(new Unit(66639, -5687, "BlackBear", false, "Judis"));

                //skols
                if (change != "s1w7") //if the player comes into the map from any direction other than the West.
                {
                    ArtificialIntelligenceAccess.push(new Unit(68000, -12516, "Skol", false, "Jane"));
                    ArtificialIntelligenceAccess.push(new Unit(67703, -12273, "Skol", true, "John"));
                }

                ArtificialIntelligenceAccess.push(new Unit(66760, -12016, "Skol", false, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(60743, -6730, "Skol", false, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(61410, -6051, "Skol", false, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(62161, -5413, "Skol", false, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(60671, -5870, "Skol", false, "Joana"));
                ArtificialIntelligenceAccess.push(new Unit(60579, -5241, "Skol", true, "Joey"));
                ArtificialIntelligenceAccess.push(new Unit(61816, -4725, "Skol", false, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(62187, -4415, "Skol", false, "Joe"));
                ArtificialIntelligenceAccess.push(new Unit(59966, -13347, "Skol", false, "Joe"));

                //scamper or buzz
                ArtificialIntelligenceAccess.push(new Unit(64720, -8143, "Lizard", true, "Lizol"));
                ArtificialIntelligenceAccess.push(new Unit(60758, -11715, "Lizard", false, "Lizelit"));
                ArtificialIntelligenceAccess.push(new Unit(59936, -9982, "Lizard", false, "Lizelit"));
                ArtificialIntelligenceAccess.push(new Unit(60687, -10171, "Lizard", true, "Lazaro"));
                ArtificialIntelligenceAccess.push(new Unit(60108, -12414, "Fletter", true, "Floz"));
                ArtificialIntelligenceAccess.push(new Unit(62028, -9727, "Fletter", true, "Fliz"));
                ArtificialIntelligenceAccess.push(new Unit(61254, -9727, "Fletter", false, "Flaz"));
                ArtificialIntelligenceAccess.push(new Unit(65747, -13070, "Fletter", false, "Fluz"));
                ArtificialIntelligenceAccess.push(new Unit(67176, -13386, "Lizard", false, "Lizaq"));
                ArtificialIntelligenceAccess.push(new Unit(62515, -10555, "Lizard", false, "Lizelith"));
                ArtificialIntelligenceAccess.push(new Unit(64379, -17435, "Fletter", false, "Flooz"));
                ArtificialIntelligenceAccess.push(new Unit(61672, -17692, "Fletter", false, "Flilz"));
                ArtificialIntelligenceAccess.push(new Unit(62041, -5599, "Lizard", true, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(66430, -4469, "Lizard", false, "Lizelim"));
                ArtificialIntelligenceAccess.push(new Unit(66642, -3981, "Fletter", true, "Flip"));
                ArtificialIntelligenceAccess.push(new Unit(65654, -4186, "Lizard", true, "lizaker"));
                ArtificialIntelligenceAccess.push(new Unit(65521, -4248, "Lizard", false, "Lizelinc"));

                //random
                var rnd = Math.random();

                if (rnd > 0.45)
                {
                    ArtificialIntelligenceAccess.push(new Unit(61382, -11143, "Lizard", false, "Liza"));
                    ArtificialIntelligenceAccess.push(new Unit(66985, -6172, "Skol", true, "Johanan"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(61382, -11143, "BlackBear", false, "Juhv"));
                    ArtificialIntelligenceAccess.push(new Unit(66985, -6172, "BlackBear", false, "Juhvuh"));
                }

                rnd = Math.random();

                if (rnd > 0.9)
                {
                    ArtificialIntelligenceAccess.push(new Unit(60198, -13161, "Skol", true, "Joey"));
                    ArtificialIntelligenceAccess.push(new Unit(60231, -13360, "Skol", false, "Joe"));
                }
                else if (rnd > 0.7)
                {
                    ArtificialIntelligenceAccess.push(new Unit(60198, -13161, "Skol", false, "Joe"));
                    ArtificialIntelligenceAccess.push(new Unit(60231, -13360, "Skol", false, "Joe"));
                }
                else if (rnd > 0.6)
                {
                    ArtificialIntelligenceAccess.push(new Unit(60198, -13161, "Skol", false, "Joe"));
                    ArtificialIntelligenceAccess.push(new Unit(60231, -13360, "Skol", false, "Joe"));
                    ArtificialIntelligenceAccess.push(new Unit(59851, -13442, "Skol", false, "Joe"));
                    ArtificialIntelligenceAccess.push(new Unit(60267, -12705, "Skol", false, "Joe"));
                    ArtificialIntelligenceAccess.push(new Unit(60539, -13118, "Skol", false, "Joe"));
                }

                rnd = Math.random();

                if (rnd > 0.33)
                {
                    ArtificialIntelligenceAccess.push(new Unit(7593, -13477, "Lizard", true, "Lizathera"));
                    ArtificialIntelligenceAccess.push(new Unit(66417, -13665, "Lizard", false, "Lizatherine"));
                }
                else
                {
                    if (change != "s2w6") //if the player comes into the map from any direction other than the south.
                    {
                        ArtificialIntelligenceAccess.push(new Unit(7593, -13477, "Skol", false, "Joe"));
                        ArtificialIntelligenceAccess.push(new Unit(66417, -13665, "Skol", false, "Joe"));
                    }
                }

                rnd = Math.random();

                if (rnd > 0.51)
                {
                    if (change != "w6") //if the player comes into the map from any direction other than the south.
                    {
                        ArtificialIntelligenceAccess.push(new Unit(60173, -4454, "Skol", false, "Joe"));
                        ArtificialIntelligenceAccess.push(new Unit(60398, -3769, "Skol", false, "Joe"));
                        ArtificialIntelligenceAccess.push(new Unit(60742, -4194, "Skol", false, "Joe"));
                    }
                }

                rnd = Math.random();

                if (rnd > 0.4)
                {
                    ArtificialIntelligenceAccess.push(new Unit(63884, -10679, "Lizard", true, "Lizather"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(63884, -10679, "BlackBear", false, "Juve"));
                }

                rnd = Math.random();

                if (rnd > 0.35)
                {
                    ArtificialIntelligenceAccess.push(new Unit(63343, -12367, "Lizard", true, "Lizeltor"));
                }
                else if (rnd > 0.25)
                {
                    ArtificialIntelligenceAccess.push(new Unit(63343, -12367, "Skol", true, "Jolina"));
                }
                else if (rnd > 0.15)
                {
                    ArtificialIntelligenceAccess.push(new Unit(63343, -12367, "BlackBear", true, "Juvjuv"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(63343, -12367, "BlackBear", false, "Juventud"));
                }

                rnd = Math.random();

                if (rnd > 0.84)
                {
                    ArtificialIntelligenceAccess.push(new Unit(63787, -11429, "Skol", false, "Jole"));
                    ArtificialIntelligenceAccess.push(new Unit(64029, -12234, "Skol", false, "Jome"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(63787, -11429, "Lizard", false, "Lizeilia"));
                }

                rnd = Math.random();

                if (rnd > 0.50)
                {
                    ArtificialIntelligenceAccess.push(new Unit(66704, -7915, "Skol", false, "Joel"));
                    ArtificialIntelligenceAccess.push(new Unit(67043, -9071, "Skol", false, "Joem"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(66351, -7422, "Hoffalgre", true, "Humfrez"));
                    ArtificialIntelligenceAccess.push(new Unit(65857, -7533, "Hoffalgre", true, "Herbertaz"));
                }

                rnd = Math.random();

                if (rnd > 0.50)
                {
                    ArtificialIntelligenceAccess.push(new Unit(63956, -4871, "Skol", true, "Jolac"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(63956, -4871, "Hoffalgre", true, "Humfar"));
                    ArtificialIntelligenceAccess.push(new Unit(63692, -4440, "Hoffalgre", true, "Hirbel"));
                }

                rnd = Math.random();

                if (rnd > 0.30)
                {
                    ArtificialIntelligenceAccess.push(new Unit(63474, -8177, "Skol", false, "Joela"));
                    ArtificialIntelligenceAccess.push(new Unit(63223, -8591, "Skol", false, "Joema"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(63474, -8177, "Hoffalgre", false, "Herber"));
                    ArtificialIntelligenceAccess.push(new Unit(63223, -8591, "Lizard", true, "Lizo"));
                }

                rnd = Math.random();

                if (rnd > 0.40)
                {
                    ArtificialIntelligenceAccess.push(new Unit(63908, -7556, "Skol", false, "Joele"));
                }
                else
                {

                    ArtificialIntelligenceAccess.push(new Unit(63908, -7556, "Lizard", false, "Lizom"));
                }

                rnd = Math.random();

                if (rnd > 0.45)
                {
                    scenicList.push(new Scenery("callopPlant", 60515, -5461, -10, false));
                }
                else
                {

                    scenicList.push(new Scenery("darbPlant", 60515, -5461, -10, false));
                }

                rnd = Math.random();

                if (rnd > 0.14)
                {
                    ArtificialIntelligenceAccess.push(new Unit(61076, -10412, "Lizard", false, "Liza"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(61076, -10412, "BlackBear", true, "Juvorh"));
                }

                //etnas
                ArtificialIntelligenceAccess.push(new Unit(65777, -12188, "Etna", true, "Shelob"));
                ArtificialIntelligenceAccess.push(new Unit(65939, -12363, "Etna", false, "Shembil"));
                ArtificialIntelligenceAccess.push(new Unit(65780, -12509, "Etna", false, "Shaltherg"));
                ArtificialIntelligenceAccess.push(new Unit(65795, -12679, "Etna", false, "Shilb"));
                ArtificialIntelligenceAccess.push(new Unit(65413, -12170, "Etna", false, "Shalib"));
                ArtificialIntelligenceAccess.push(new Unit(65593, -12565, "Etna", false, "Elnorsh"));
                ArtificialIntelligenceAccess.push(new Unit(63366, -6487, "Etna", false, "Aldernesh"));
                ArtificialIntelligenceAccess.push(new Unit(63348, -6402, "Etna", false, "Galshohma"));
                ArtificialIntelligenceAccess.push(new Unit(65457, -4859, "Etna", true, "Wollosh"));
                ArtificialIntelligenceAccess.push(new Unit(65285, -8023, "Etna", false, "Shulib"));
                ArtificialIntelligenceAccess.push(new Unit(65279, -7888, "Etna", false, "Alnarsh"));
                ArtificialIntelligenceAccess.push(new Unit(65303, -7800, "Etna", false, "Elinesh"));
                ArtificialIntelligenceAccess.push(new Unit(65430, -7621, "Etna", false, "Gasholb"));

                //tentacle oodlers
                ArtificialIntelligenceAccess.push(new Unit(61829, -8965, "Hoffalgre", true, "Humfrey"));
                ArtificialIntelligenceAccess.push(new Unit(61285, -9105, "Hoffalgre", true, "Herberta"));
                ArtificialIntelligenceAccess.push(new Unit(61495, -9601, "Hoffalgre", true, "Halber"));
                ArtificialIntelligenceAccess.push(new Unit(60759, -13451, "Hoffalgre", false, "Halbara"));
                ArtificialIntelligenceAccess.push(new Unit(65561, -11615, "Hoffalgre", false, "Halbire"));

                //Scenery

                //web
                //1
                scenicList.push(new Scenery("web", 65813, -12467, 8, 1.9));
                scenicList.push(new Scenery("web", 65749, -12354, 10, 1.2));
                scenicList.push(new Scenery("web", 65656, -12416, 10, 1.1));
                scenicList.push(new Scenery("web", 65873, -12575, 1, 1));
                scenicList.push(new Scenery("web", 65762, -12567, 0, 1.6));
                scenicList.push(new Scenery("web", 65902, -11986, -0.666, 1.5));
                scenicList.push(new Scenery("web", 65763, -12404, -2.12, 1.4));
                scenicList.push(new Scenery("web", 65813, -12312, 5, 1));
                scenicList.push(new Scenery("web", 65718, -12045, 0, 3));
                scenicList.push(new Scenery("web", 65563, -12109, 3, 2.65));
                scenicList.push(new Scenery("web", 65529, -12412, 1.5, 2.7));
                scenicList.push(new Scenery("web", 65928, -12190, 0.75, 2.9));
                scenicList.push(new Scenery("web", 65683, -12263, 2, 2.8));
                scenicList.push(new Scenery("web", 65777, -12187, 0, 1.8));
                scenicList.push(new Scenery("web", 65945, -12403, 4, 3.2));
                scenicList.push(new Scenery("web", 65929, -12051, 1.2, 2));
                scenicList.push(new Scenery("web", 66107, -12423, 0, 3));
                scenicList.push(new Scenery("web", 65984, -12599, -2, 2.2));
                scenicList.push(new Scenery("web", 65399, -12238, -4, 2.5));
                scenicList.push(new Scenery("etnaEggSac", 65774, -12244, 0, true));
                scenicList.push(new Scenery("web", 65557, -12259, -5, 1));
                scenicList.push(new Scenery("web", 65355, -12413, 16, 2.5));
                scenicList.push(new Scenery("web", 65256, -12283, 0.63, 2.1));
                scenicList.push(new Scenery("web", 65369, -12085, 10, 2.75));
                scenicList.push(new Scenery("web", 65236, -12164, 3, 2));
                scenicList.push(new Scenery("web", 65500, -11973, 0, 2.25));
                scenicList.push(new Scenery("web", 65707, -12562, 6, 2.96));
                scenicList.push(new Scenery("web", 65860, -12727, -8, 2.8));
                scenicList.push(new Scenery("web", 65709, -12758, -13, 3));
                scenicList.push(new Scenery("web", 66004, -12869, -3.13, 2.9));
                scenicList.push(new Scenery("web", 66030, -12719, -2.222, 2));
                scenicList.push(new Scenery("web", 65524, -12621, -6.464, 2.64));
                scenicList.push(new Scenery("web", 65399, -12534, -7, 2));
                scenicList.push(new Scenery("etnaEggSac", 65904, -12424, -2, true));
                scenicList.push(new Scenery("etnaEggSac", 65601, -12520, 4, true));
                scenicList.push(new Scenery("etnaEggSac", 65841, -12257, 9, true));
                //2
                scenicList.push(new Scenery("web", 63261, -6450, 1.2, 0.9));
                scenicList.push(new Scenery("web", 63342, -6434, 3.141592365239, 1.45));
                scenicList.push(new Scenery("web", 63284, -6529, -3.10102, 1.77));
                scenicList.push(new Scenery("web", 63205, -6321, -1, 2.7));
                scenicList.push(new Scenery("web", 63127, -6520, -2, 2.8));
                scenicList.push(new Scenery("web", 63487, -6462, 0, 3.1));
                scenicList.push(new Scenery("web", 63340, -6370, -4, 1.8));
                scenicList.push(new Scenery("web", 63417, -6523, 0.5, 1.55));
                scenicList.push(new Scenery("etnaEggSac", 63260, -6451, -20, true));
                //3
                scenicList.push(new Scenery("web", 65427, -4877, -0.123, 1.23456789101112));
                scenicList.push(new Scenery("web", 65337, -4886, 1.5, 1.42));
                scenicList.push(new Scenery("web", 65537, -4898, 3.15, 1.63));
                scenicList.push(new Scenery("web", 65644, -4757, 4, 1.7));
                scenicList.push(new Scenery("web", 65770, -4901, 3.5, 1.6));
                scenicList.push(new Scenery("web", 65411, -4754, -2.61, 2));
                scenicList.push(new Scenery("web", 65257, -4948, 12, 1.48));
                scenicList.push(new Scenery("web", 65667, -4869, 7, 1.89));
                scenicList.push(new Scenery("web", 65525, -4806, -6, 2.3));
                scenicList.push(new Scenery("web", 65335, -4889, -4.5, 1.94));
                scenicList.push(new Scenery("web", 65679, -4905, -1.3, 1.03));
                scenicList.push(new Scenery("web", 65437, -4900, 4.9, 1.78));
                scenicList.push(new Scenery("skeleton", 65558, -4904, 0.26, 1.62));
                scenicList.push(new Scenery("overWeb", 65603, -4892, 2.9, 0.23));
                scenicList.push(new Scenery("overWeb", 65543, -4922, -0.17, 0.7));
                scenicList.push(new Scenery("overWeb", 65555, -4897, 0.1, 0.86));
                scenicList.push(new Scenery("overWeb", 65543, -4922, -0.1, 0.8));
                scenicList.push(new Scenery("overWeb", 65555, -4897, 0.16, 0.94));
                scenicList.push(new Scenery("overWeb", 65603, -4892, 3.14159, 0.3));
                if (quests.spiderwebLoot) //risky alchemist tried to collect a web sample... it didn't work out so well.
                {
                    quests.spiderwebLoot = false;
                    worldItems.push([new Item("coins", 65511, -4888), 34]);
                    worldItems.push([new Item("thenganDagger", 65602, -4892), 1]);
                }
                //4
                scenicList.push(new Scenery("web", 65536, -7963, 0, 0.88));
                scenicList.push(new Scenery("web", 65135, -7988, -1.04, 1));
                scenicList.push(new Scenery("web", 65397, -7683, -12, 1.52));
                scenicList.push(new Scenery("web", 65249, -7850, -14, 1.66));
                scenicList.push(new Scenery("web", 65525, -7538, -1.9, 1.63));
                scenicList.push(new Scenery("web", 65290, -7652, -2.4, 1.71));
                scenicList.push(new Scenery("web", 65454, -7756, 8, 1.56));
                scenicList.push(new Scenery("web", 65120, -7894, 0, 1.8));
                scenicList.push(new Scenery("web", 65164, -8140, 3, 1.75));
                scenicList.push(new Scenery("web", 65456, -8032, -7.8, 2.26));
                scenicList.push(new Scenery("web", 65756, -7975, -19, 1.68));
                scenicList.push(new Scenery("web", 65630, -7955, -1, 2));
                scenicList.push(new Scenery("web", 65299, -7973, 1.12, 2.4));
                scenicList.push(new Scenery("web", 65323, -7770, 1.1, 1.4));
                scenicList.push(new Scenery("web", 65189, -7770, 5.56, 1.61));
                scenicList.push(new Scenery("web", 65501, -7622, 9, 1.45));
                scenicList.push(new Scenery("web", 65402, -7579, 4, 1.78));
                scenicList.push(new Scenery("web", 65491, -7860, 11, 2.1));
                scenicList.push(new Scenery("web", 65381, -7825, -3.91, 1.41));
                scenicList.push(new Scenery("web", 65206, -7919, 1.55, 1.2));
                scenicList.push(new Scenery("web", 65301, -8076, -3.3, 1.77));
                scenicList.push(new Scenery("web", 65148, -8023, -1.6, 1.54));
                scenicList.push(new Scenery("etnaEggSac", 65242, -7861, -2, true));

                //forest plants
                scenicList.push(new Scenery("kofkePlant", 60871, -9467, -5.5, false));
                scenicList.push(new Scenery("steugiurnePlant", 61199, -10760, 4, false));
                scenicList.push(new Scenery("callopPlant", 63348, -12077, -8, false));
                scenicList.push(new Scenery("thalisPlant", 60352, -12956, 0, false));
                scenicList.push(new Scenery("thalisPlant", 62538, -12622, 3, false));
                scenicList.push(new Scenery("kofkePlant", 64371, -11519, -5.5, false));
                scenicList.push(new Scenery("darbPlant", 61049, -11870, 1.2, false));
                scenicList.push(new Scenery("darbPlant", 66809, -12785, -1, false));
                scenicList.push(new Scenery("callopPlant", 62198, -10637, -2.5, false));
                scenicList.push(new Scenery("callopPlant", 64554, -10949, 3, false));
                scenicList.push(new Scenery("kofkePlant", 65112, -11901, -5.5, false));
                scenicList.push(new Scenery("darbPlant", 66809, -12785, -1, false));
                scenicList.push(new Scenery("thalisPlant", 66332, -11589, 5, false));
                scenicList.push(new Scenery("darbPlant", 65320, -10941, 0.5, false));
                scenicList.push(new Scenery("callopPlant", 66790, -7518, 9, false));
                scenicList.push(new Scenery("steugiurnePlant", 65878, -5989, 16, false));
                scenicList.push(new Scenery("kofkePlant", 65513, -6450, -5.5, false));
                scenicList.push(new Scenery("darbPlant", 64764, -7018, 1, false));
                scenicList.push(new Scenery("thalisPlant", 64440, -8472, 8, false));
                scenicList.push(new Scenery("kofkePlant", 64817, -9418, -6.8, false));
                scenicList.push(new Scenery("kofkePlant", 61538, -7648, -3.2, false));
                scenicList.push(new Scenery("steugiurnePlant", 61979, -5269, 15, false));
                scenicList.push(new Scenery("callopPlant", 63366, -5187, 6, false));
                scenicList.push(new Scenery("kofkePlant", 64290, -4443, 3.5, false));
                scenicList.push(new Scenery("darbPlant", 63176, -3943, 0.2, false));
                scenicList.push(new Scenery("thalisPlant", 61311, -4626, 3, false));
                scenicList.push(new Scenery("kofkePlant", 66572, -4400, 4.5, false));
                scenicList.push(new Scenery("kofkePlant", 66028, -5132, -2.6, false));
                scenicList.push(new Scenery("darbPlant", 66157, -4731, -0.81, false));
                scenicList.push(new Scenery("kofkePlant", 63419, -4237, 4.7, false));

                //plains plants
                scenicList.push(new Scenery("vorlymPlant", 59178, -10389, -4, false));
                scenicList.push(new Scenery("galloshPlant", 58849, -12778, 5, false));
                scenicList.push(new Scenery("galloshPlant", 58515, -4256, 0, false));

                //stumps
                //scenicList.push(new Scenery("pineStumps", -6474 , 1900, 0, true));

                //Border Trees (North)
                scenicList.push(new Scenery("pineTree", 65223, -4200, 5.4, true));
                scenicList.push(new Scenery("pineTree", 64879, -4054, 6.12, true));
                scenicList.push(new Scenery("pineTree", 65093, -3764, 0.25, true));
                scenicList.push(new Scenery("pineTree", 65594, -3924, 4, true));
                scenicList.push(new Scenery("pineTree", 65648, -3592, -5.8, true));
                scenicList.push(new Scenery("pineTree", 65952, -4170, 4.45, true));
                scenicList.push(new Scenery("pineTree", 66345, -4008, 3.5, true));
                scenicList.push(new Scenery("pineTree", 66916, -3868, -4.3, true));
                scenicList.push(new Scenery("pineTree", 66526, -3664, -5.7, true));
                scenicList.push(new Scenery("pineTree", 66819, -4220, 2, true)); //original
                scenicList.push(new Scenery("pineTree", 67249, -4137, 1.3, true)); //original
                scenicList.push(new Scenery("pineTree", 67249, -4137, -0.775, true)); //original
                scenicList.push(new Scenery("pineTree", 67238, -3591, 1.89, true)); //original
                scenicList.push(new Scenery("pineTree", 67692, -3758, 2.34, true)); //original
                scenicList.push(new Scenery("pineTree", 67804, -4101, 0.89, true)); //original
                scenicList.push(new Scenery("pineTree", 68195, -3886, 7.65, true)); //original
                scenicList.push(new Scenery("pineTree", 67361, -3855, 9.28, true)); //original
                scenicList.push(new Scenery("pineTree", 68080, -3561, -8.2, true)); //original
                scenicList.push(new Scenery("pineTree", 64382, -4223, 7, true));
                scenicList.push(new Scenery("pineTree", 64757, -3624, 3.2, true));
                scenicList.push(new Scenery("pineTree", 64468, -3905, -6, true));
                scenicList.push(new Scenery("pineTree", 64041, -3766, -1.4, true));
                scenicList.push(new Scenery("pineTree", 63991, -4071, 5.5, true));
                scenicList.push(new Scenery("pineTree", 63419, -3891, -8.275, true));
                scenicList.push(new Scenery("pineTree", 63681, -3589, 64, true));
                scenicList.push(new Scenery("pineTree", 63195, -4211, 8.623, true));
                scenicList.push(new Scenery("pineTree", 62945, -3758, -5.3, true));
                scenicList.push(new Scenery("pineTree", 62797, -4050, 10.2, true));
                scenicList.push(new Scenery("pineTree", 62452, -3851, 12.07, true));
                scenicList.push(new Scenery("pineTree", 62337, -4220, 13.12, true));
                scenicList.push(new Scenery("pineTree", 63638, -4194, 9.45, true));
                scenicList.push(new Scenery("pineTree", 62081, -3624, -2.8, true));
                scenicList.push(new Scenery("pineTree", 61902, -3925, -12.12, true));
                scenicList.push(new Scenery("pineTree", 61520, -3790, 8.5, true));
                scenicList.push(new Scenery("pineTree", 61563, -4127, -2.222, true));
                scenicList.push(new Scenery("pineTree", 61049, -4055, 6.3, true));
                scenicList.push(new Scenery("pineTree", 61236, -3549, 5.41, true));
                scenicList.push(new Scenery("pineTree", 60602, -3924, 54.1, true));
                scenicList.push(new Scenery("pineTree", 60988, -3769, -5.8549, true));
                scenicList.push(new Scenery("pineTree", 60398, -4224, -5, true));
                scenicList.push(new Scenery("pineTree", 60183, -3976, 3.6, true));
                scenicList.push(new Scenery("pineTree", 59633, -4041, 3.42, true));
                scenicList.push(new Scenery("pineTree", 59873, -3697, -3.05, true));
                scenicList.push(new Scenery("pineTree", 60518, -3634, 2.84, true));
                scenicList.push(new Scenery("pineTree", 68204, -4229, 3, true)); //original
                scenicList.push(new Scenery("pineTree", 66071, -3787, 1.43859, true));

                //Border Trees (South)
                scenicList.push(new Scenery("pineTree", 59655, -13702, 0.22, true));
                scenicList.push(new Scenery("pineTree", 60102, -13527, 3.27, true));
                scenicList.push(new Scenery("pineTree", 59551, -13236, 1, true));
                scenicList.push(new Scenery("pineTree", 60470, -13367, -5.56, true));
                scenicList.push(new Scenery("pineTree", 60771, -13653, -2.5, true));
                scenicList.push(new Scenery("pineTree", 61136, -13547, 3.72, true));
                scenicList.push(new Scenery("pineTree", 61434, -13759, 4, true));
                scenicList.push(new Scenery("pineTree", 61317, -13221, -0.6, true));
                scenicList.push(new Scenery("pineTree", 60909, -13286, -3, true));
                scenicList.push(new Scenery("pineTree", 63800, -13528, -7.63192631, true));
                scenicList.push(new Scenery("pineTree", 63253, -13673, -5, true));
                scenicList.push(new Scenery("pineTree", 63375, -13237, 2.46435, true));
                scenicList.push(new Scenery("pineTree", 62946, -13375, 3.6927836, true));
                scenicList.push(new Scenery("pineTree", 61892, -13365, 8.229, true));
                scenicList.push(new Scenery("pineTree", 62126, -13659, 0.75, true));
                scenicList.push(new Scenery("pineTree", 62562, -13790, -6.1, true));
                scenicList.push(new Scenery("pineTree", 64513, -13657, 5.85, true));
                scenicList.push(new Scenery("pineTree", 64394, -13267, -8.1, true));
                scenicList.push(new Scenery("pineTree", 65106, -13572, 3.333, true));
                scenicList.push(new Scenery("pineTree", 65575, -13365, -7.6, true));
                scenicList.push(new Scenery("pineTree", 65817, -13727, 2.424, true));
                scenicList.push(new Scenery("pineTree", 66131, -13468, 3.9, true));
                scenicList.push(new Scenery("pineTree", 66600, -13232, 4.666, true)); //original
                scenicList.push(new Scenery("pineTree", 66938, -13550, -28.7, true)); //original
                scenicList.push(new Scenery("pineTree", 67423, -13700, 1.654, true)); //original
                scenicList.push(new Scenery("pineTree", 68201, -13828, -5, true)); //original
                scenicList.push(new Scenery("pineTree", 67863, -13504, -9, true)); //original
                scenicList.push(new Scenery("pineTree", 67425, -13277, 6.69, true)); //original
                scenicList.push(new Scenery("pineTree", 68175, -13212, 4.343434, true)); //original

                //Border Trees (West)
                //scenicList.push(new Scenery("pineTree", 66938, -13550, -28.7, true)); //copy
                //scenicList.push(new Scenery("pineTree", 67423, -13700, 1.654, true)); //copy
                //scenicList.push(new Scenery("pineTree", 66600, -13232, 4.666, true)); //copy
                //scenicList.push(new Scenery("pineTree", 68201, -13828, -5, true)); //copy
                //scenicList.push(new Scenery("pineTree", 67863, -13504, -9, true)); //copy
                //scenicList.push(new Scenery("pineTree", 67425, -13277, 6.69, true)); //copy
                //scenicList.push(new Scenery("pineTree", 68175, -13212, 4.343434, true)); //copy
                //scenicList.push(new Scenery("pineTree", 66819, -4220, 2, true)); //copy
                //scenicList.push(new Scenery("pineTree", 67249, -4137, 1.3, true)); //copy
                //scenicList.push(new Scenery("pineTree", 67249, -4137, -0.775, true)); //copy
                //scenicList.push(new Scenery("pineTree", 67238, -3591, 1.89, true)); //copy
                //scenicList.push(new Scenery("pineTree", 67692, -3758, 2.34, true)); //copy
                //scenicList.push(new Scenery("pineTree", 67804, -4101, 0.89, true)); //copy
                //scenicList.push(new Scenery("pineTree", 68195, -3886, 7.65, true)); //copy
                //scenicList.push(new Scenery("pineTree", 67361, -3855, 9.28, true)); //copy
                //scenicList.push(new Scenery("pineTree", 68080, -3561, -8.2, true)); //copy
                //scenicList.push(new Scenery("pineTree", 68204, -4229, 3, true)); //copy

                //scenicList.push(new Scenery("pineTree", 64120, -6017, -1.5, true));
                //scenicList.push(new Scenery("pineTree", 64282, -5535, 0.5, true));
                //scenicList.push(new Scenery("pineTree", 64690, -5623, -0.8, true));
                //scenicList.push(new Scenery("pineTree", 64529, -5151, -5, true));
                //scenicList.push(new Scenery("pineTree", 64795, -4823, -1.44, true));
                //scenicList.push(new Scenery("pineTree", 64283, -4841, 2.34, true));
                //scenicList.push(new Scenery("pineTree", 64922, -4527, -3.85, true));
                //scenicList.push(new Scenery("pineTree", 66148, -4497, -4.5219, true));
                //scenicList.push(new Scenery("pineTree", 60009, -4336, 4.19, true));
                //scenicList.push(new Scenery("pineTree", 66286, -4883, -7, true));
                //scenicList.push(new Scenery("pineTree", 66477, -5142, -3.2, true));
                //scenicList.push(new Scenery("pineTree", 66710, -4626, 6, true));
                //scenicList.push(new Scenery("pineTree", 67112, -4525, 1.4, true));
                //scenicList.push(new Scenery("pineTree", 67001, -4929, -5.5, true));
                //scenicList.push(new Scenery("pineTree", 66362, -5609, 8.275, true));
                //scenicList.push(new Scenery("pineTree", 66768, -5447, -64, true));
                //scenicList.push(new Scenery("pineTree", 67022, -5227, -8.623, true));
                //scenicList.push(new Scenery("pineTree", 67266, -5608, 5.3, true));
                //scenicList.push(new Scenery("pineTree", 66702, -5950, -10.2, true));
                //scenicList.push(new Scenery("pineTree", 66210, -6125, -12.07, true));
                //scenicList.push(new Scenery("pineTree", 65800, -6231, -13.12, true));
                //scenicList.push(new Scenery("pineTree", 65759, -6518, -9.45, true));
                //scenicList.push(new Scenery("pineTree", 65871, -6800, 2.8, true));
                //scenicList.push(new Scenery("pineTree", 66254, -6967, 12.12, true));
                //scenicList.push(new Scenery("pineTree", 66184, -7216, -8.5, true));
                //scenicList.push(new Scenery("pineTree", 66678, -7127, 2.222, true));
                //scenicList.push(new Scenery("pineTree", 66580, -7422, -6.3, true));
                //scenicList.push(new Scenery("pineTree", 66735, -7725, -5.41, true));
                //scenicList.push(new Scenery("pineTree", 67068, -7918, -54.1, true));
                //scenicList.push(new Scenery("pineTree", 66757, -8112, 5.8549, true));
                //scenicList.push(new Scenery("pineTree", 67304, -8158, 5, true));
                //scenicList.push(new Scenery("pineTree", 66996, -7441, -3.6, true));
                //scenicList.push(new Scenery("pineTree", 67421, -7614, -3.42, true));
                //scenicList.push(new Scenery("pineTree", 67679, -7979, 79, true));
                //scenicList.push(new Scenery("pineTree", 67729, -8261, -2.84, true));
                //scenicList.push(new Scenery("pineTree", 68095, -8100, 2.8, true));

                scenicList.push(new Scenery("pineTree", 67162, -12964, -4.2, true));
                scenicList.push(new Scenery("pineTree", 66498, -11920, -3.5, true));
                scenicList.push(new Scenery("pineTree", 66951, -12625, 4.5, true));
                scenicList.push(new Scenery("pineTree", 67444, -12184, 2.89, true));
                scenicList.push(new Scenery("pineTree", 67063, -11927, 3.1, true));
                scenicList.push(new Scenery("pineTree", 67451, -12475, -3.95, true));
                scenicList.push(new Scenery("pineTree", 62376, -13167, -4.8, true));
                scenicList.push(new Scenery("pineTree", 66555, -12788, 2.89, true));
                scenicList.push(new Scenery("pineTree", 66710, -12325, 9, true));
                scenicList.push(new Scenery("pineTree", 67694, -13044, -10, true));
                scenicList.push(new Scenery("pineTree", 68193, -12889, 42, true));
                scenicList.push(new Scenery("pineTree", 66721, -11555, -1.2, true));
                scenicList.push(new Scenery("pineTree", 67805, -12773, 1.8, true));
                scenicList.push(new Scenery("pineTree", 67964, -12247, -3.93, true));
                scenicList.push(new Scenery("pineTree", 67796, -11733, 0.7, true));
                scenicList.push(new Scenery("pineTree", 67779, -11986, -45, true));
                scenicList.push(new Scenery("pineTree", 67384, -11546, -0.15, true));
                scenicList.push(new Scenery("pineTree", 68083, -11539, -15, true));
                scenicList.push(new Scenery("pineTree", 67604, -11122, -3.25, true));
                scenicList.push(new Scenery("pineTree", 67936, -10822, 4.45, true));
                scenicList.push(new Scenery("pineTree", 68192, -10484, -4.65, true));
                scenicList.push(new Scenery("pineTree", 67243, -11281, 0.55, true));
                scenicList.push(new Scenery("pineTree", 67762, -10369, -2.25, true));
                scenicList.push(new Scenery("pineTree", 67379, -10657, -7.25, true));
                scenicList.push(new Scenery("pineTree", 66990, -10426, 2.65, true));
                scenicList.push(new Scenery("pineTree", 67129, -10943, -4.25, true));
                scenicList.push(new Scenery("pineTree", 66733, -11150, -1.1, true));
                scenicList.push(new Scenery("pineTree", 66880, -10683, 8.8, true));
                scenicList.push(new Scenery("pineTree", 67394, -9778, -1.8, true));
                scenicList.push(new Scenery("pineTree", 68109, -9629, 5.4, true));
                scenicList.push(new Scenery("pineTree", 67768, -9732, -9.15, true));
                scenicList.push(new Scenery("pineTree", 66916, -9567, 8.15, true));
                scenicList.push(new Scenery("pineTree", 67539, -9447, -4.09, true));
                scenicList.push(new Scenery("pineTree", 67937, -9172, -16, true));
                scenicList.push(new Scenery("pineTree", 67335, -9127, -12.5, true));
                scenicList.push(new Scenery("pineTree", 66999, -9269, 3.08, true));
                scenicList.push(new Scenery("pineTree", 67689, -8890, -48, true));
                scenicList.push(new Scenery("pineTree", 68195, -8873, -5.65, true));
                scenicList.push(new Scenery("pineTree", 67978, -8537, 9.4, true));
                scenicList.push(new Scenery("pineTree", 65825, -7976, -1.8, true));
                scenicList.push(new Scenery("pineTree", 67020, -8841, -1.9, true));
                scenicList.push(new Scenery("pineTree", 67478, -8533, -7.777777777, true));
                scenicList.push(new Scenery("pineTree", 67345, -8768, -8.05, true));
                scenicList.push(new Scenery("pineTree", 66587, -8587, 6, true));
                scenicList.push(new Scenery("pineTree", 67033, -8507, -5.24, true));
                scenicList.push(new Scenery("pineTree", 67290, -6106, -12.5, true));
                scenicList.push(new Scenery("pineTree", 66101, -6571, 3.08, true));
                scenicList.push(new Scenery("pineTree", 66482, -6431, -48, true));
                scenicList.push(new Scenery("pineTree", 66565, -6706, -5.65, true));
                scenicList.push(new Scenery("pineTree", 67031, -6843, 9.4, true));
                scenicList.push(new Scenery("pineTree", 66979, -6504, -1.8, true));
                scenicList.push(new Scenery("pineTree", 67541, -6636, -1.9, true));
                scenicList.push(new Scenery("pineTree", 67634, -4512, -7.777777777, true));
                scenicList.push(new Scenery("pineTree", 68037, -4573, -8.05, true));
                scenicList.push(new Scenery("pineTree", 67829, -4931, 6, true));
                scenicList.push(new Scenery("pineTree", 67468, -4790, -5.24, true));
                scenicList.push(new Scenery("pineTree", 67412, -5121, 8.18, true));
                scenicList.push(new Scenery("pineTree", 68142, -5213, 7.55, true));
                scenicList.push(new Scenery("pineTree", 67734, -5298, 0, true));
                scenicList.push(new Scenery("pineTree", 68198, -5184, 0, true));
                scenicList.push(new Scenery("pineTree", 68010, -5578, 3.14, true));
                scenicList.push(new Scenery("pineTree", 67835, -5899, -1.56, true));
                scenicList.push(new Scenery("pineTree", 68203, -6229, -6, true));
                scenicList.push(new Scenery("pineTree", 67674, -6334, 2, true));
                scenicList.push(new Scenery("pineTree", 67356, -7174, 1.3, true));
                scenicList.push(new Scenery("pineTree", 67911, -7341, -0.9, true));
                scenicList.push(new Scenery("pineTree", 68127, -6591, 3, true));
                scenicList.push(new Scenery("pineTree", 67842, -6932, -5, true));
                scenicList.push(new Scenery("pineTree", 68050, -7710, 6.3, true));

                //Trees
                scenicList.push(new Scenery("pineTree", 65520, -4403, 0, true));
                scenicList.push(new Scenery("pineTree", 60273, -10049, 0, true));
                scenicList.push(new Scenery("pineTree", 60749, -10416, 3.14, true));
                scenicList.push(new Scenery("pineTree", 60430, -10803, -1.56, true));
                scenicList.push(new Scenery("pineTree", 60283, -11183, -6, true));
                scenicList.push(new Scenery("pineTree", 60940, -11009, 2, true));
                scenicList.push(new Scenery("pineTree", 60673, -11250, 1.1, true));
                scenicList.push(new Scenery("pineTree", 60490, -11740, -0.9, true));
                scenicList.push(new Scenery("pineTree", 59849, -11830, 3, true));
                scenicList.push(new Scenery("pineTree", 61230, -11357, -4, true));
                scenicList.push(new Scenery("pineTree", 61605, -10961, 4.3, true));
                scenicList.push(new Scenery("pineTree", 59971, -13083, 5, true));
                scenicList.push(new Scenery("pineTree", 59726, -12819, -8, true));
                scenicList.push(new Scenery("pineTree", 60234, -12905, 2.65, true));
                scenicList.push(new Scenery("pineTree", 60021, -12636, -3.4, true));
                scenicList.push(new Scenery("pineTree", 60299, -12501, -6.4, true));
                scenicList.push(new Scenery("pineTree", 59887, -12419, 8, true));
                scenicList.push(new Scenery("pineTree", 59654, -12138, 6, true));
                scenicList.push(new Scenery("pineTree", 60102, -12155, 3.9, true));
                scenicList.push(new Scenery("pineTree", 60590, -12254, -4.829, true));
                scenicList.push(new Scenery("pineTree", 63704, -12170, -1.073, true));
                scenicList.push(new Scenery("pineTree", 64843, -12693, -2.87687, true));
                scenicList.push(new Scenery("pineTree", 63050, -13046, 7.5, true));
                scenicList.push(new Scenery("pineTree", 65381, -12485, -5.5, true));
                scenicList.push(new Scenery("pineTree", 65280, -12820, 0.45, true));
                scenicList.push(new Scenery("pineTree", 65003, -13110, 6.2, true));
                scenicList.push(new Scenery("pineTree", 65607, -12257, -1.8, true));
                scenicList.push(new Scenery("pineTree", 65617, -12786, 1.9, true));
                scenicList.push(new Scenery("pineTree", 66055, -12580, 7.777777777, true));
                scenicList.push(new Scenery("pineTree", 66170, -12272, 0, true));
                scenicList.push(new Scenery("pineTree", 65978, -11983, -6, true));
                scenicList.push(new Scenery("pineTree", 65202, -12187, 5.28, true));
                scenicList.push(new Scenery("pineTree", 64824, -11979, -3.5219, true));
                scenicList.push(new Scenery("pineTree", 65879, -11580, -2.90012, true));
                scenicList.push(new Scenery("pineTree", 64803, -12286, 6.702931247829, true));
                scenicList.push(new Scenery("pineTree", 64254, -12485, 4.13369123926, true));
                scenicList.push(new Scenery("pineTree", 64372, -12113, -2.8, true));
                scenicList.push(new Scenery("pineTree", 65495, -11933, 5.9, true));
                scenicList.push(new Scenery("pineTree", 66060, -12916, -3.6, true));
                scenicList.push(new Scenery("pineTree", 60775, -12917, 1.5, true));
                scenicList.push(new Scenery("pineTree", 60918, -12617, -3.75, true));
                scenicList.push(new Scenery("pineTree", 61444, -12766, 5.75, true));
                scenicList.push(new Scenery("pineTree", 61697, -13019, 6.3, true));
                scenicList.push(new Scenery("pineTree", 66590, -9784, 3.15, true));
                scenicList.push(new Scenery("pineTree", 66205, -11226, 5.75, true));
                scenicList.push(new Scenery("pineTree", 66365, -10808, -7.45, true));
                scenicList.push(new Scenery("pineTree", 65883, -10950, 2.30, true));
                scenicList.push(new Scenery("pineTree", 65501, -11173, 6.371, true));
                scenicList.push(new Scenery("pineTree", 65306, -11527, 4.61, true));
                scenicList.push(new Scenery("pineTree", 64886, -11552, -1.6, true));
                scenicList.push(new Scenery("pineTree", 65059, -10930, 0, true));
                scenicList.push(new Scenery("pineTree", 64422, -12852, 0, true));
                scenicList.push(new Scenery("pineTree", 63980, -12993, -5, true));
                scenicList.push(new Scenery("pineTree", 63581, -12766, 1.68, true));
                scenicList.push(new Scenery("pineTree", 63804, -12552, 2.34, true));
                scenicList.push(new Scenery("pineTree", 63026, -12607, 3.75, true));
                scenicList.push(new Scenery("pineTree", 62675, -12803, -5.4321012, true));
                scenicList.push(new Scenery("pineTree", 62127, -12871, -1, true));
                scenicList.push(new Scenery("pineTree", 62497, -12480, -3.35, true));
                scenicList.push(new Scenery("pineTree", 64500, -11719, 0.9, true));
                scenicList.push(new Scenery("pineTree", 65504, -8119, -5.3, true));
                scenicList.push(new Scenery("pineTree", 65133, -8212, -6.24, true));
                scenicList.push(new Scenery("pineTree", 64922, -8524, -2.1, true));
                scenicList.push(new Scenery("pineTree", 64631, -8245, 2.8, true));
                scenicList.push(new Scenery("pineTree", 64669, -7829, 1.386, true));
                scenicList.push(new Scenery("pineTree", 65517, -7792, -6, true));
                scenicList.push(new Scenery("pineTree", 65232, -7602, -2, true));
                scenicList.push(new Scenery("pineTree", 65046, -7858, 5.77, true));
                scenicList.push(new Scenery("pineTree", 64731, -7523, -3.14, true));
                scenicList.push(new Scenery("pineTree", 64279, -8019, -4.80, true));
                scenicList.push(new Scenery("pineTree", 65154, -7300, 4.6825, true));
                scenicList.push(new Scenery("pineTree", 62491, -6184, 3.14, true));
                scenicList.push(new Scenery("pineTree", 62416, -6480, -1.5, true));
                scenicList.push(new Scenery("pineTree", 62691, -6699, 2.3, true));
                scenicList.push(new Scenery("pineTree", 63108, -6557, 3.78, true));
                scenicList.push(new Scenery("pineTree", 63251, -6212, 4.39, true));
                scenicList.push(new Scenery("pineTree", 62778, -5918, -0.65, true));
                scenicList.push(new Scenery("pineTree", 63398, -5754, 0, true));
                scenicList.push(new Scenery("pineTree", 63169, -7010, 0.25, true));
                scenicList.push(new Scenery("pineTree", 63590, -6457, -4.1, true));
                scenicList.push(new Scenery("pineTree", 63805, -5759, 1.4, true));
                scenicList.push(new Scenery("pineTree", 63470, -6828, -2.6, true));
                scenicList.push(new Scenery("pineTree", 62720, -7137, -1.30313, true));
                scenicList.push(new Scenery("pineTree", 63062, -7331, -2.5, true));
                scenicList.push(new Scenery("pineTree", 63685, -7378, -5.4, true));
                scenicList.push(new Scenery("pineTree", 63747, -7046, -6.894, true));
                scenicList.push(new Scenery("pineTree", 63217, -7837, 7.54, true));
                scenicList.push(new Scenery("pineTree", 63334, -7554, 2.63, true));
                scenicList.push(new Scenery("pineTree", 63643, -7771, 6.26, true));
                scenicList.push(new Scenery("pineTree", 64197, -7681, -62.6, true));
                scenicList.push(new Scenery("pineTree", 64125, -7319, 1.25, true));
                scenicList.push(new Scenery("pineTree", 64410, -7109, 5.8, true));
                scenicList.push(new Scenery("pineTree", 64218, -6816, -7, true));
                scenicList.push(new Scenery("pineTree", 62872, -6281, -11, true));
                scenicList.push(new Scenery("pineTree", 65355, -4677, 0.39, true));
                scenicList.push(new Scenery("pineTree", 65833, -4933, 2.88, true));
                scenicList.push(new Scenery("pineTree", 65200, -4986, -3.6, true));
                scenicList.push(new Scenery("pineTree", 65688, -4710, 4.2, true));
                scenicList.push(new Scenery("pineTree", 65433, -5452, -2.325, true));
                scenicList.push(new Scenery("pineTree", 66032, -5332, -3.82, true));
                scenicList.push(new Scenery("pineTree", 64977, -5367, -5.5555, true));
                scenicList.push(new Scenery("pineTree", 65926, -5720, -6.74, true));
                scenicList.push(new Scenery("pineTree", 60024, -9638, 5.8, true));
                scenicList.push(new Scenery("pineTree", 60856, -9742, -7, true));
                scenicList.push(new Scenery("pineTree", 62872, -6281, -11, true));
                scenicList.push(new Scenery("pineTree", 60578, -9254, 0.39, true));
                scenicList.push(new Scenery("pineTree", 59881, -9277, 2.88, true));
                scenicList.push(new Scenery("pineTree", 61315, -9401, -3.6, true));
                scenicList.push(new Scenery("pineTree", 61191, -10167, 4.2, true));
                scenicList.push(new Scenery("pineTree", 61706, -10532, -2.325, true));
                scenicList.push(new Scenery("pineTree", 62200, -10813, -3.82, true));
                scenicList.push(new Scenery("pineTree", 61227, -11798, -5.5555, true));
                scenicList.push(new Scenery("pineTree", 61431, -12164, -6.74, true));
                scenicList.push(new Scenery("pineTree", 60240, -8871, -3.25, true));
                scenicList.push(new Scenery("pineTree", 61053, -8950, 4.45, true));
                scenicList.push(new Scenery("pineTree", 62045, -8871, -4.65, true));
                scenicList.push(new Scenery("pineTree", 61938, -9249, 0.55, true));
                scenicList.push(new Scenery("pineTree", 61367, -9805, -2.25, true));
                scenicList.push(new Scenery("pineTree", 61893, -9968, -7.25, true));
                scenicList.push(new Scenery("pineTree", 62214, -10394, 2.65, true));
                scenicList.push(new Scenery("pineTree", 62807, -10606, -4.25, true));
                scenicList.push(new Scenery("pineTree", 63209, -10639, -1.1, true));
                scenicList.push(new Scenery("pineTree", 63698, -10503, 8.8, true));
                scenicList.push(new Scenery("pineTree", 64140, -10343, -1.8, true));
                scenicList.push(new Scenery("pineTree", 63402, -10882, 5.4, true));
                scenicList.push(new Scenery("pineTree", 62968, -11130, -9.15, true));
                scenicList.push(new Scenery("pineTree", 62449, -11270, 8.15, true));
                scenicList.push(new Scenery("pineTree", 62004, -11515, -4.09, true));
                scenicList.push(new Scenery("pineTree", 62039, -12111, -16, true));
                scenicList.push(new Scenery("pineTree", 62444, -11864, -12.5, true));
                scenicList.push(new Scenery("pineTree", 62654, -9606, 3.08, true));
                scenicList.push(new Scenery("pineTree", 62989, -9773, -48, true));
                scenicList.push(new Scenery("pineTree", 63397, -9636, -5.65, true));
                scenicList.push(new Scenery("pineTree", 63037, -9318, 9.4, true));
                scenicList.push(new Scenery("pineTree", 63690, -9779, 0, true));
                scenicList.push(new Scenery("pineTree", 64167, -9739, -3.14, true));
                scenicList.push(new Scenery("pineTree", 63846, -9418, 1.56, true));
                scenicList.push(new Scenery("pineTree", 64307, -9232, 6, true));
                scenicList.push(new Scenery("pineTree", 63770, -8967, -2, true));
                scenicList.push(new Scenery("pineTree", 62694, -8984, -1.1, true));
                scenicList.push(new Scenery("pineTree", 63285, -8908, 0.9, true));
                scenicList.push(new Scenery("pineTree", 62803, -8579, -13, true));
                scenicList.push(new Scenery("pineTree", 62645, -8275, 3.82, true));
                scenicList.push(new Scenery("pineTree", 63136, -8323, -3.3, true));
                scenicList.push(new Scenery("pineTree", 62153, -8124, 5.5555, true));
                scenicList.push(new Scenery("pineTree", 61801, -8269, 7.8, true));
                scenicList.push(new Scenery("pineTree", 61751, -9605, -8, true));
                scenicList.push(new Scenery("pineTree", 61457, -8295, 2.15, true));
                scenicList.push(new Scenery("pineTree", 61870, -7730, 4.9, true));
                scenicList.push(new Scenery("pineTree", 61291, -7822, -2.22, true));
                scenicList.push(new Scenery("pineTree", 62842, -7934, 3, true));
                scenicList.push(new Scenery("pineTree", 62847, -7658, -8, true));
                scenicList.push(new Scenery("pineTree", 62260, -7376, -6, true));
                scenicList.push(new Scenery("pineTree", 62202, -6921, -3.9, true));
                scenicList.push(new Scenery("pineTree", 61810, -7292, 4.829, true));
                scenicList.push(new Scenery("pineTree", 61461, -7461, 1.073, true));
                scenicList.push(new Scenery("pineTree", 61554, -7056, 2.87687, true));
                scenicList.push(new Scenery("pineTree", 61677, -6624, -7.5, true));
                scenicList.push(new Scenery("pineTree", 62036, -6287, 5.5, true));
                scenicList.push(new Scenery("pineTree", 61519, -6323, -0.45, true));
                scenicList.push(new Scenery("pineTree", 61254, -6766, -6.2, true));
                scenicList.push(new Scenery("pineTree", 62374, -7770, 1.8, true));
                scenicList.push(new Scenery("pineTree", 60962, -8176, -1.9, true));
                scenicList.push(new Scenery("pineTree", 60618, -8290, -7.777777777, true));
                scenicList.push(new Scenery("pineTree", 60250, -8236, 1, true));
                scenicList.push(new Scenery("pineTree", 60478, -7935, 6, true));
                scenicList.push(new Scenery("pineTree", 60949, -7523, -5.28, true));
                scenicList.push(new Scenery("pineTree", 60569, -7594, 3.5219, true));
                scenicList.push(new Scenery("pineTree", 60248, -7381, 2.90012, true));
                scenicList.push(new Scenery("pineTree", 60662, -7190, -6.702931247829, true));
                scenicList.push(new Scenery("pineTree", 61113, -7197, -4.13369123926, true));
                scenicList.push(new Scenery("pineTree", 60874, -6930, 2.8, true));
                scenicList.push(new Scenery("pineTree", 60312, -7016, -5.9, true));
                scenicList.push(new Scenery("pineTree", 60518, -6631, 3.6, true));
                scenicList.push(new Scenery("pineTree", 60918, -6572, 5.073, true));
                scenicList.push(new Scenery("pineTree", 61131, -6150, -3.14, true));
                scenicList.push(new Scenery("pineTree", 61747, -5923, -6.6, true));
                scenicList.push(new Scenery("pineTree", 61285, -5802, 45, true));
                scenicList.push(new Scenery("pineTree", 61679, -5428, 4.822, true));
                scenicList.push(new Scenery("pineTree", 62138, -5955, 22, true));
                scenicList.push(new Scenery("pineTree", 62457, -5531, 3.7, true));
                scenicList.push(new Scenery("pineTree", 66098, -9696, 7.2, true));
                scenicList.push(new Scenery("pineTree", 66547, -9426, -2.8, true));
                scenicList.push(new Scenery("pineTree", 66491, -10350, -4.2, true));
                scenicList.push(new Scenery("pineTree", 66036, -10514, -3.5, true));
                scenicList.push(new Scenery("pineTree", 65353, -10657, 4.5, true));
                scenicList.push(new Scenery("pineTree", 65609, -10364, 2.89, true));
                scenicList.push(new Scenery("pineTree", 65051, -10462, 3.1, true));
                scenicList.push(new Scenery("pineTree", 64552, -10738, -3.95, true));
                scenicList.push(new Scenery("pineTree", 64638, -10363, -4.8, true));
                scenicList.push(new Scenery("pineTree", 64667, -11060, 2.89, true));
                scenicList.push(new Scenery("pineTree", 64505, -11310, 2.5, true));
                scenicList.push(new Scenery("pineTree", 64186, -10968, -10, true));
                scenicList.push(new Scenery("pineTree", 64066, -11756, 42, true));
                scenicList.push(new Scenery("pineTree", 61857, -12483, -1.2, true));
                scenicList.push(new Scenery("pineTree", 63972, -11251, 1.8, true));
                scenicList.push(new Scenery("pineTree", 63861, -10906, -3.93, true));
                scenicList.push(new Scenery("pineTree", 63556, -11625, 0.7, true));
                scenicList.push(new Scenery("pineTree", 63502, -11291, -43, true));
                scenicList.push(new Scenery("pineTree", 63209, -11957, -0.15, true));
                scenicList.push(new Scenery("pineTree", 62872, -12184, 14, true));
                scenicList.push(new Scenery("pineTree", 61731, -11849, 15, true));
                scenicList.push(new Scenery("pineTree", 62854, -11562, 16, true));
                scenicList.push(new Scenery("pineTree", 63188, -11709, -17, true));
                scenicList.push(new Scenery("pineTree", 63563, -8544, 4.4, true));
                scenicList.push(new Scenery("pineTree", 64079, -8629, 6, true));
                scenicList.push(new Scenery("pineTree", 64005, -8332, -8.5, true));
                scenicList.push(new Scenery("pineTree", 64548, -8894, 2.75, true));
                scenicList.push(new Scenery("pineTree", 64671, -9804, -1.4, true));
                scenicList.push(new Scenery("pineTree", 64673, -9454, -6.4, true));
                scenicList.push(new Scenery("pineTree", 65203, -9755, -9, true));
                scenicList.push(new Scenery("pineTree", 65118, -9218, 3, true));
                scenicList.push(new Scenery("pineTree", 65352, -8879, 5.9, true));
                scenicList.push(new Scenery("pineTree", 65727, -8579, -4.153, true));
                scenicList.push(new Scenery("pineTree", 66100, -8784, -1.073, true));
                scenicList.push(new Scenery("pineTree", 65801, -9070, -2.66687, true));
                scenicList.push(new Scenery("pineTree", 65596, -9375, 7.6, true));
                scenicList.push(new Scenery("pineTree", 66530, -8940, -5.9, true));
                scenicList.push(new Scenery("pineTree", 66104, -9293, -0.55, true));
                scenicList.push(new Scenery("pineTree", 65987, -8278, 6.2, true));
                scenicList.push(new Scenery("pineTree", 66425, -8298, -3.45, true));
                scenicList.push(new Scenery("pineTree", 66261, -7979, -2.8, true));
                scenicList.push(new Scenery("pineTree", 65798, -7230, -6.2, true));
                scenicList.push(new Scenery("pineTree", 65573, -7455, 4.1111011, true));
                scenicList.push(new Scenery("pineTree", 66100, -7569, 2.77, true));
                scenicList.push(new Scenery("pineTree", 65377, -6624, 5.9, true));
                scenicList.push(new Scenery("pineTree", 64838, -6867, -3.6, true));
                scenicList.push(new Scenery("pineTree", 65387, -6934, 1.5, true));
                scenicList.push(new Scenery("pineTree", 64975, -6414, 35, true));
                scenicList.push(new Scenery("pineTree", 64655, -6613, 5.75, true));
                scenicList.push(new Scenery("pineTree", 64457, -6248, -6.2, true));
                scenicList.push(new Scenery("pineTree", 65040, -5821, 1.15, true));
                scenicList.push(new Scenery("pineTree", 65464, -5917, -5.95, true));
                scenicList.push(new Scenery("pineTree", 64974, -6102, -7.125, true));
                scenicList.push(new Scenery("pineTree", 65346, -6264, 7.30, true));
                scenicList.push(new Scenery("pineTree", 64472, -5911, 6.173, true));
                scenicList.push(new Scenery("pineTree", 63609, -6071, 4.61, true));
                scenicList.push(new Scenery("pineTree", 64120, -6017, -1.5, true));
                scenicList.push(new Scenery("pineTree", 64282, -5535, 0.5, true));
                scenicList.push(new Scenery("pineTree", 64690, -5623, -0.8, true));
                scenicList.push(new Scenery("pineTree", 64529, -5151, -5, true));
                scenicList.push(new Scenery("pineTree", 64795, -4823, -1.44, true));
                scenicList.push(new Scenery("pineTree", 64283, -4841, 2.34, true));
                scenicList.push(new Scenery("pineTree", 64922, -4527, -3.85, true));
                scenicList.push(new Scenery("pineTree", 66148, -4497, -4.5219, true));
                scenicList.push(new Scenery("pineTree", 60009, -4336, 4.19, true));
                scenicList.push(new Scenery("pineTree", 66286, -4883, -7, true));
                scenicList.push(new Scenery("pineTree", 66477, -5142, -3.2, true));
                scenicList.push(new Scenery("pineTree", 66710, -4626, 6, true));
                scenicList.push(new Scenery("pineTree", 67112, -4525, 1.4, true));
                scenicList.push(new Scenery("pineTree", 67001, -4929, -5.5, true));
                scenicList.push(new Scenery("pineTree", 66362, -5609, 8.275, true));
                scenicList.push(new Scenery("pineTree", 66768, -5447, -64, true));
                scenicList.push(new Scenery("pineTree", 67022, -5227, -8.623, true));
                scenicList.push(new Scenery("pineTree", 67266, -5608, 5.3, true));
                scenicList.push(new Scenery("pineTree", 66702, -5950, -10.2, true));
                scenicList.push(new Scenery("pineTree", 66210, -6125, -12.07, true));
                scenicList.push(new Scenery("pineTree", 65800, -6231, -13.12, true));
                scenicList.push(new Scenery("pineTree", 65759, -6518, -9.45, true));
                scenicList.push(new Scenery("pineTree", 65871, -6800, 2.8, true));
                scenicList.push(new Scenery("pineTree", 66254, -6967, 12.12, true));
                scenicList.push(new Scenery("pineTree", 66184, -7216, -8.5, true));
                scenicList.push(new Scenery("pineTree", 66678, -7127, 2.222, true));
                scenicList.push(new Scenery("pineTree", 66580, -7422, -6.3, true));
                scenicList.push(new Scenery("pineTree", 66735, -7725, -5.41, true));
                scenicList.push(new Scenery("pineTree", 67068, -7918, -54.1, true));
                scenicList.push(new Scenery("pineTree", 66757, -8112, 5.8549, true));
                scenicList.push(new Scenery("pineTree", 67304, -8158, 5, true));
                scenicList.push(new Scenery("pineTree", 66996, -7441, -3.6, true));
                scenicList.push(new Scenery("pineTree", 67421, -7614, -3.42, true));
                scenicList.push(new Scenery("pineTree", 67679, -7979, 79, true));
                scenicList.push(new Scenery("pineTree", 67729, -8261, -2.84, true));
                scenicList.push(new Scenery("pineTree", 68095, -8100, 2.8, true));
                scenicList.push(new Scenery("pineTree", 59658, -4682, 6.173, true));
                scenicList.push(new Scenery("pineTree", 59572, -5030, 4.61, true));
                scenicList.push(new Scenery("pineTree", 60018, -4893, -1.5, true));
                scenicList.push(new Scenery("pineTree", 60341, -4632, 0.5, true));
                scenicList.push(new Scenery("pineTree", 60725, -4468, -0.8, true));
                scenicList.push(new Scenery("pineTree", 64001, -4484, -5, true));
                scenicList.push(new Scenery("pineTree", 64003, -5195, -1.44, true));
                scenicList.push(new Scenery("pineTree", 63668, -5302, 2.34, true));
                scenicList.push(new Scenery("pineTree", 63677, -4723, -3.85, true));
                scenicList.push(new Scenery("pineTree", 63408, -4984, -4.5219, true));
                scenicList.push(new Scenery("pineTree", 63408, -4984, 4.19, true));
                scenicList.push(new Scenery("pineTree", 63004, -5569, -7, true));
                scenicList.push(new Scenery("pineTree", 63165, -5242, -3.2, true));
                scenicList.push(new Scenery("pineTree", 63044, -4751, 6, true));
                scenicList.push(new Scenery("pineTree", 62684, -5001, 1.4, true));
                scenicList.push(new Scenery("pineTree", 62739, -4471, -5.5, true));
                scenicList.push(new Scenery("pineTree", 63364, -4547, 8.275, true));
                scenicList.push(new Scenery("pineTree", 61934, -4264, -64, true));
                scenicList.push(new Scenery("pineTree", 62122, -4660, -8.623, true));
                scenicList.push(new Scenery("pineTree", 62266, -5112, 5.3, true));
                scenicList.push(new Scenery("pineTree", 61752, -4976, -10.2, true));
                scenicList.push(new Scenery("pineTree", 61212, -5167, -12.07, true));
                scenicList.push(new Scenery("pineTree", 61273, -5450, -13.12, true));
                scenicList.push(new Scenery("pineTree", 60853, -5884, -9.59, true));
                scenicList.push(new Scenery("pineTree", 60742, -5517, 2.8, true));
                scenicList.push(new Scenery("pineTree", 60082, -6490, 10.02, true));
                scenicList.push(new Scenery("pineTree", 60646, -6226, 6.26, true));
                scenicList.push(new Scenery("pineTree", 60174, -6224, 2.228, true));
                scenicList.push(new Scenery("pineTree", 59903, -5975, -6.3, true));
                scenicList.push(new Scenery("pineTree", 60131, -5668, 5.14, true));
                scenicList.push(new Scenery("pineTree", 60568, -5712, 154, true));
                scenicList.push(new Scenery("pineTree", 60543, -5963, 5.8549, true));
                scenicList.push(new Scenery("pineTree", 60218, -5941, 5, true));
                scenicList.push(new Scenery("pineTree", 59684, -5614, -3.6, true));
                scenicList.push(new Scenery("pineTree", 59840, -5276, -3.42, true));
                scenicList.push(new Scenery("pineTree", 60377, -5471, -9.7, true));
                scenicList.push(new Scenery("pineTree", 61585, -4533, 2.84, true));
                scenicList.push(new Scenery("pineTree", 61306, -4887, 3.8, true));
                scenicList.push(new Scenery("pineTree", 61087, -4428, 0.8, true));
                scenicList.push(new Scenery("pineTree", 60891, -4753, 5, true));
                scenicList.push(new Scenery("pineTree", 60836, -5129, 1.44, true));
                scenicList.push(new Scenery("pineTree", 60257, -5141, 2.34, true));
                scenicList.push(new Scenery("pineTree", 60491, -4884, 4.84, true));
                scenicList.push(new Scenery("pineTree", 61583, -9024, -4.29, true));
                scenicList.push(new Scenery("pineTree", 63027, -10358, 9.4, true));


                scenicList.push(new Scenery("pineTree", 66770.733, -14434.66675,2.297416141949725, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 63112.0065, -14494.829125,5.82256752209894, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 64495.8669, -14832.910375,4.934393253586919, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 61885.6203, -14698.140025,2.45895623725421, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 64485.961875, -14496.264325,3.33928020110871, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 62112.0075, -14577.67195,0.6825996135207524, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 59049.020625000005, -14361.090325,1.9664468256697536, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 59132.109150000004, -14543.46505,3.934673578229054, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 65899.2156, -14571.0595,0.3509820463411841, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 64206.4401, -14273.866825,3.647823347784595, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 65394.999225, -15037.43515,1.9491634959588369, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 61664.678475, -15044.07295,5.856500612992066, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 64535.55915, -14417.523325,5.0918743465905525, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 59910.119175, -14323.730275,2.413255491385624, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 64302.195825, -14397.334,2.3328562664610657, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67529.664225, -14990.6137,2.181999272692535, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66072.49065, -14460.98395,4.141200500268286, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 61696.169025, -14233.9864,3.434589411470894, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 64987.845075, -14197.744675,1.2005966608631262, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 65891.570625, -14904.473425,1.6751911558913706, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 62180.008875, -14616.45745,2.9291797896535128, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66264.537375, -14634.1771,5.660477075393087, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 60327.38895, -14550.388525,3.520161023360535, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 64771.746075, -14614.383625,0.9234358045374582, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 61838.4654, -14515.5937,3.3823824127329147, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 60841.731675, -14507.506075,5.578199082278818, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 59585.860499999995, -14160.597175,4.643613988645527, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67634.52645, -15055.151875,0.1775701097452843, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("kofkePlant", 63055.1328, -14746.774,2.701518081833805, true, undefined)); //copied s2w6

                scenicList.push(new Scenery("pineTree", 63495.43625625339, -14117.179157600767, 10, true));

                change = "s1w6";
            }
        }
        else if (region == "s2w6") //Visig Forest
        {
            if (change != "s2w6")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                generator(223, 387768, 4218, 5787, 99687, 1, 67896, -14128); //forest in map s-2-w-6
                trimmer(59000, -14212, 57801, -24028, true, false);
                trimmer(60225.41418221065, -20586.686606037092, 58658.3129481818, -21918.185406522105, true, false);
                trimmer(60054.174019811624, -22490.82555201236, 58317.20932440751, -23119.412972999977, true, false);
                trimmer(59535.30384842556, -23122.556542272792, 58634.846224160836, -23970.547562601023, true, false);
                trimmer(59615.1530780469, -16354.1339055181, 58272.25372510159, -18596.83407215409, true, false);
                trimmer(60155.330926027185, -16828.65641250246, 59536.35577271621, -18667.421184075134, true, false);

                ArtificialIntelligenceAccess.push(new Unit(58648.19433245523, -15026.400825466513, "Thueg", "baby", "preBuilt"));
                scenicList.push(new Scenery("vorlymPlant", 58912.9712231897, -15485.837834090056, 5.861444310757405, 0));
                scenicList.push(new Scenery("galloshPlant", 58318.59388327018, -16182.795573390933, 1.783706478217804, 0));
                ArtificialIntelligenceAccess.push(new Unit(58807.242151533595, -17228.882266936056, "Thueg", false, "preBuilt"));
                scenicList.push(new Scenery("vorlymPlant", 59132.32741773632, -19748.837988577787, 4.954804100174019, 0));

                scenicList.push(new Scenery("pineTree", 59655, -13702,0.22, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 60102, -13527,3.27, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 60470, -13367,-5.56, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 60771, -13653,-2.5, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 61136, -13547,3.72, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 61434, -13759,4, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 63800, -13528,-7.63192631, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 63253, -13673,-5, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 62946, -13375,3.6927836, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 61892, -13365,8.229, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 62126, -13659,0.75, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 62562, -13790,-6.1, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 64513, -13657,5.85, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 65106, -13572,3.333, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 65575, -13365,-7.6, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 65817, -13727,2.424, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 66131, -13468,3.9, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 66938, -13550,-28.7, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67423, -13700,1.654, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 68201, -13828,-5, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67863, -13504,-9, true, undefined)); //copied s1w6

                scenicList.push(new Scenery("pineTree", 67275.76215547322, -21374.79500626647, -0.15, true));
                scenicList.push(new Scenery("pineTree", 67701.63212458185, -20940.13907014899, 15, true));
                scenicList.push(new Scenery("pineTree", 62306.293083263154, -18163.359885520033, 2, true));
                scenicList.push(new Scenery("pineTree", 63356.804015896865, -20529.154658642372, -3.29, true));
                scenicList.push(new Scenery("pineTree", 63163.67772675505, -19937.482808480905, 11, true));

                scenicList.push(new Scenery("pineTree", 63602.48240611824, -18539.319298326394, 0.8, true));
                scenicList.push(new Scenery("pineTree", 63001.24288082049, -19416.718108791574, 5, true));
                scenicList.push(new Scenery("pineTree", 62417.774129749996, -20912.67979420917, 1.44, true));
                scenicList.push(new Scenery("pineTree", 60591.094499952764, -22556.579217285056, 2.34, true));
                scenicList.push(new Scenery("pineTree", 60221.72758074227, -22812.69146028123, 4.84, true));
                scenicList.push(new Scenery("pineTree", 60447.787996874475, -21100.137967566356, -4.29, true));
                scenicList.push(new Scenery("pineTree", 61644.07758210822, -20866.239207504477, 9.4, true));

                scenicList.push(new Scenery("pineTree", 63495.43625625339, -14117.179157600767, 10, true));

                scenicList.push(new Scenery("pineTree", 72434.85344587606, -17572.323085546264, true, undefined));
                scenicList.push(new Scenery("pineTree", 72667.13207488095, -18661.465289841824, true, undefined));
                scenicList.push(new Scenery("pineTree", 69740.90103264112, -20709.781524518112, true, undefined));
                scenicList.push(new Scenery("pineTree", 70472.19032353937, -21121.846388462433, true, undefined));
                scenicList.push(new Scenery("pineTree", 70085.08699791554, -21712.325176731978, true, undefined));
                scenicList.push(new Scenery("pineTree", 69724.52081851977, -21159.55274163261, true, undefined));
                scenicList.push(new Scenery("pineTree", 69014.45636680684, -20706.94713763656, true, undefined));
                scenicList.push(new Scenery("pineTree", 68356.22393424856, -20777.6385086282, true, undefined));
                scenicList.push(new Scenery("pineTree", 67827.39681102712, -19199.83582597119, true, undefined));

                scenicList.push(new Scenery("pineTree", 68258.00184853325, -14518.634233565948, true, undefined));
                scenicList.push(new Scenery("pineTree", 69446.34471321676, -14284.87943066498, true, undefined));
                scenicList.push(new Scenery("pineTree", 69086.94860453416, -14051.021429418312, true, undefined));
                scenicList.push(new Scenery("pineTree", 67821.50720511012, -14141.788319092662, true, undefined));
                scenicList.push(new Scenery("pineTree", 67360.35253774474, -14079.648188285433, true, undefined));
                scenicList.push(new Scenery("pineTree", 67471.43801077022, -14515.852483814035, true, undefined));
                scenicList.push(new Scenery("pineTree", 68548.20398626427, -14979.029051382882, true, undefined));
                scenicList.push(new Scenery("pineTree", 68140.18789976943, -15305.742114218854, true, undefined));
                scenicList.push(new Scenery("pineTree", 68126.67975224578, -15860.730574747968, true, undefined));
                scenicList.push(new Scenery("pineTree", 67978.00576788372, -16280.631150199739, true, undefined));
                scenicList.push(new Scenery("pineTree", 68449.33561497623, -16162.141624710055, true, undefined));
                scenicList.push(new Scenery("pineTree", 68311.95804795019, -16597.993499006323, true, undefined));

                //Creatures

                //etnas
                ArtificialIntelligenceAccess.push(new Unit(62925.192265567355, -16426.90700467775, "Etna", true, "Shelob"));
                ArtificialIntelligenceAccess.push(new Unit(63088.47782404278, -16372.132688808419, "Etna", false, "Helob"));
                ArtificialIntelligenceAccess.push(new Unit(63167.23617916575, -16620.445315472614, "Etna", true, "Shelob"));
                ArtificialIntelligenceAccess.push(new Unit(63000.56440864819, -16550.64611205772, "Etna", false, "Helob"));

                //skols
                ArtificialIntelligenceAccess.push(new Unit(67178.7072500001, -17517.534123284422, "Skol", false, "furby"));
                ArtificialIntelligenceAccess.push(new Unit(67254.86922128474, -17202.55163986595, "Skol", false, "frob"));

                //tentacle oodlers
                //ArtificialIntelligenceAccess.push(new Unit(61829, -8965, "Hoffalgre", true, "Humfrey"));

                //Scenery

                //scenicList.push(new Scenery("skeleton", 65558, -4904, 0.26, 1.62));
                //scenicList.push(new Scenery("web", 65536, -7963, 0, 0.88));

                scenicList.push(new Scenery("web", 63202.23075988445, -16732.937126956826, 0, 1.9));
                scenicList.push(new Scenery("web", 63116.57989316633, -16759.390964154747, 1.2, 1.7));
                scenicList.push(new Scenery("web", 63125.49405373003, -16678.24846164893, 9, 1.39));
                scenicList.push(new Scenery("web", 63198.08633506119, -16641.304569726628, 8, 1.45));
                scenicList.push(new Scenery("web", 63101.823561546575, -16589.379664460008, 1.3, 1.5));
                scenicList.push(new Scenery("web", 63167.03908836758, -16538.17054906474, 3, 1.32));
                scenicList.push(new Scenery("web", 63249.43215863818, -16496.839141312234, 2, 1.7));
                scenicList.push(new Scenery("web", 63143.57950854016, -16433.91533984429, 4, 1.65));
                scenicList.push(new Scenery("web", 63084.95890385195, -16491.0272126083, 5.55, 1.26));
                scenicList.push(new Scenery("web", 62982.656980149, -16555.283141338376, 6, 1.99));
                scenicList.push(new Scenery("web", 63022.588029164945, -16650.179686535517, 12, 1.39));
                scenicList.push(new Scenery("web", 62924.636132716514, -16626.86192222899, 17, 1.75));
                scenicList.push(new Scenery("web", 62862.760272759995, -16550.598713950785, 4, 1.4));
                scenicList.push(new Scenery("web", 62784.92820895798, -16589.79151983315, 0, 1.35));
                scenicList.push(new Scenery("web", 62829.68809357106, -16459.054195116136, 23, 1.21));
                scenicList.push(new Scenery("web", 62933.097721180944, -16414.06920239243, 13, 1.37));
                scenicList.push(new Scenery("web", 62934.02647157778, -16492.57905672314, 3.8, 1.44));
                scenicList.push(new Scenery("web", 63032.13550512826, -16388.724133038348, 9.1, 1.28));
                scenicList.push(new Scenery("web", 62975.25130668667, -16347.757215527901, 4, 1.42));
                scenicList.push(new Scenery("web", 62833.55823000676, -16419.514132574892, 14, 1.58));
                scenicList.push(new Scenery("web", 62768.38772314628, -16445.217575846815, 7, 1.88));
                scenicList.push(new Scenery("web", 63094.31175513725, -16263.391532700309, 15, 1.66));
                scenicList.push(new Scenery("web", 63165.36740306687, -16309.048230339058, 8, 1.77));
                scenicList.push(new Scenery("etnaEggSac", 63084.173524151025, -16581.311139092555, -5.722223, true));



                //forest plants
                scenicList.push(new Scenery("kofkePlant", 64647.52453867712, -19738.71453410092, 5.65, false));
                scenicList.push(new Scenery("steugiurnePlant", 64355.42083157894, -15411.772789123475, 4, false));
                scenicList.push(new Scenery("callopPlant", 66142.61623168449, -19075.88111316141, -7.2, false));
                scenicList.push(new Scenery("callopPlant", 61855.95788024016, -23135.04480392387, 9, false));
                scenicList.push(new Scenery("thalisPlant", 64242.483558016596, -16418.561340856086, 0.56, false));
                scenicList.push(new Scenery("darbPlant", 67079.18021123904, -16079.318849854571, 1.26, false));

                change = "s2w6";
            }
        }
        else if (region == "s1w7") //Visig Forest
        {
            if (change != "s1w7")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                generator(78, 11, 655, 8614, 2250, 1, 78069, -3958); //forest in map s-1-w-7
                trimmer(69539.72061666005, -9941.254804000157, 68219.57578426073, -11125.627086810175, true, false);
                trimmer(70901.71876592633, -9927.374500568265, 69661.81946583132, -10249.751583359048, true, false);
                trimmer(70921.84179079173, -11001.9202083581, 70553.27564651598, -13853.177474135047, true, false);

                scenicList.push(new Scenery("darbPlant", 66809, -12785,-1, false, undefined)); //copied s1w6
                scenicList.push(new Scenery("callopPlant", 66790, -7518,9, false, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 66916, -3868,-4.3, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 66819, -4220,2, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67249, -4137,1.3, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67249, -4137,-0.775, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67238, -3591,1.89, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67692, -3758,2.34, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67804, -4101,0.89, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 68195, -3886,7.65, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67361, -3855,9.28, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 68080, -3561,-8.2, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 68204, -4229,3, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 66938, -13550,-28.7, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67423, -13700,1.654, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 68201, -13828,-5, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67863, -13504,-9, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67425, -13277,6.69, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 68175, -13212,4.343434, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67162, -12964,-4.2, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 66951, -12625,4.5, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67444, -12184,2.89, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67063, -11927,3.1, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67451, -12475,-3.95, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 66710, -12325,9, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67694, -13044,-10, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 68193, -12889,42, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 66721, -11555,-1.2, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67805, -12773,1.8, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67964, -12247,-3.93, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67796, -11733,0.7, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67779, -11986,-45, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67384, -11546,-0.15, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 68083, -11539,-15, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67604, -11122,-3.25, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67936, -10822,4.45, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 68192, -10484,-4.65, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67243, -11281,0.55, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67762, -10369,-2.25, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67379, -10657,-7.25, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 66990, -10426,2.65, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67129, -10943,-4.25, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 66733, -11150,-1.1, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 66880, -10683,8.8, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67394, -9778,-1.8, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 68109, -9629,5.4, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67768, -9732,-9.15, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 66916, -9567,8.15, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67539, -9447,-4.09, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67937, -9172,-16, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67335, -9127,-12.5, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 66999, -9269,3.08, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67689, -8890,-48, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 68195, -8873,-5.65, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67978, -8537,9.4, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67020, -8841,-1.9, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67478, -8533,-7.777777777, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67345, -8768,-8.05, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67033, -8507,-5.24, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67290, -6106,-12.5, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67031, -6843,9.4, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 66979, -6504,-1.8, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67541, -6636,-1.9, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67634, -4512,-7.777777777, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 68037, -4573,-8.05, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67829, -4931,6, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67468, -4790,-5.24, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67412, -5121,8.18, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 68142, -5213,7.55, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67734, -5298,0, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 68198, -5184,0, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 68010, -5578,3.14, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67835, -5899,-1.56, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 68203, -6229,-6, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67674, -6334,2, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67356, -7174,1.3, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67911, -7341,-0.9, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 68127, -6591,3, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67842, -6932,-5, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 68050, -7710,6.3, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 66710, -4626,6, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67112, -4525,1.4, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67001, -4929,-5.5, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 66768, -5447,-64, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67022, -5227,-8.623, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67266, -5608,5.3, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 66702, -5950,-10.2, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 66735, -7725,-5.41, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67068, -7918,-54.1, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 66757, -8112,5.8549, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67304, -8158,5, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 66996, -7441,-3.6, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67421, -7614,-3.42, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67679, -7979,79, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67729, -8261,-2.84, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 68095, -8100,2.8, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 66770.733, -14434.66675,2.297416141949725, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67529.664225, -14990.6137,2.181999272692535, true, undefined)); //copied s1w6
                scenicList.push(new Scenery("pineTree", 67634.52645, -15055.151875,0.1775701097452843, true, undefined)); //copied s1w6

                scenicList.push(new Scenery("pineTree", 69374.32199074063, -11151.249416711456,6, true, undefined));
                scenicList.push(new Scenery("pineTree", 68465.33599948596, -10863.768840921866,-5, true, undefined));
                scenicList.push(new Scenery("pineTree", 69059.9846302443, -10593.276050744615,44, true, undefined));
                scenicList.push(new Scenery("pineTree", 68685.29199385016, -10376.2067193135,-1.1, true, undefined));
                scenicList.push(new Scenery("pineTree", 69321.4955454477, -10382.521892272653,0, true, undefined));

                scenicList.push(new Scenery("pineTree", 74606.53965310525, -13742.473038020722,7, true, undefined));
                scenicList.push(new Scenery("pineTree", 74780.2517726307, -13338.474673140983,-4.5, true, undefined));
                scenicList.push(new Scenery("pineTree", 74118.67940786894, -13326.528628103926,44, true, undefined));
                scenicList.push(new Scenery("pineTree", 74732.87762543095, -13087.445324604196,-1.1, true, undefined));
                scenicList.push(new Scenery("pineTree", 75456.75413665378, -8057.754877603868,0, true, undefined));
                scenicList.push(new Scenery("pineTree", 74863.85009270476, -7782.314089623686,2, true, undefined));
                scenicList.push(new Scenery("pineTree", 73342.54425045286, -4334.586323273114,-5, true, undefined));
                scenicList.push(new Scenery("pineTree", 72923.93997771267, -3876.9346934962837,41, true, undefined));
                scenicList.push(new Scenery("pineTree", 73860.84005560762, -3800.9069190702266,1, true, undefined));
                scenicList.push(new Scenery("pineTree", 74618.37112102451, -4031.7921265903356,3, true, undefined));
                scenicList.push(new Scenery("pineTree", 74871.26461760676, -3717.185228054313,7.824, true, undefined));

                scenicList.push(new Scenery("kofkePlant", 69212.45681276722, -10884.473296672784, 5.65, false));
                ArtificialIntelligenceAccess.push(new Unit(69640.00551580155, -11058.791628539419, "Hoffalgre", false, "fubwub"));

                ArtificialIntelligenceAccess.push(new Unit(69325.61512387783, -8646.850977753642, "Skol", false, "furby"));
                ArtificialIntelligenceAccess.push(new Unit(69492.30667996976, -8273.897031944647, "Skol", false, "frob"));
                ArtificialIntelligenceAccess.push(new Unit(70159.80683958894, -8588.483648465293, "Skol", false, "furby"));

                scenicList.push(new Scenery("pineTree", 73382.444775, -14219.206125,3.0059322879973216, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 71843.76315, -14390.776875,3.8203375786247236, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 71917.136775, -14652.2787,2.248141315212979, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 74364.400425, -14611.21365,0.6890519742594378, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 73632.261225, -14173.958325,5.5507285010544605, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 75235.874925, -14694.403575,4.810544210570756, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 73523.406375, -14217.36045,6.1193408885865, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 75845.803725, -14277.208875,2.8283217466949098, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 73320.399675, -14639.7051,3.535120638400052, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 76041.211275, -14495.328075,1.8457388200157223, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 71798.7123, -14421.990525,3.018733841928949, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 75460.3482, -14651.156475,5.834694839732681, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 77175.204525, -14727.571125,3.5859991120014225, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 77825.04495, -14614.371675,5.330247690643934, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 75919.9515, -14213.98305,5.893346106890695, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 70412.71275, -14653.473075,0.6119170725277198, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 74861.053725, -14650.7967,1.6791642489277174, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 76630.856175, -14595.8496,0.531256208895074, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 78040.039275, -14590.265775,3.51327992039562, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 74618.3694, -14602.084725,0.39600194193181615, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 70013.400525, -14215.179375,2.8670448907763677, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 71496.7353, -14594.17455,1.2225228556225898, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 74435.516925, -14317.905375,0.1946555607767217, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 74234.19795, -14179.882425,0.3124233911136853, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 71607.87555, -14585.577975,1.085945049404505, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 70257.58245, -14211.655725,4.340413598259924, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 68942.690625, -14744.848125,1.2003633517936239, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 74685.198825, -14659.51515,5.9758206461171355, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 74355.1935, -14682.4335,3.6101825780512, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 69152.532075, -14647.560675,5.0635271452917054, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 71883.454425, -14592.69255,4.177618851535075, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 69602.096775, -14751.19245,4.111089170710651, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 70256.33835, -14487.30285,0.5825294615192639, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 74669.5959, -14534.74635,2.4253874231790595, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 73723.2063, -14204.83755,4.562986181253815, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 70081.1952, -14272.113525,6.196852051937063, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("pineTree", 75333.0015, -14500.1943,0.0124365906557714, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("steugiurnePlant", 71451.026325, -14239.062,6.131836548569868, true, undefined)); //copied s2w7
                scenicList.push(new Scenery("callopPlant", 71451.026325, -14239.062,0.657664847958677, true, undefined)); //copied s2w7

                trimmer(79705.29039282196, -15283.114470417191, 78414.07955709107, -15649.865696463581, true);

                scenicList.push(new Scenery("pineTree", 78132.02154498016, -13989.686548211726, true, undefined));
                scenicList.push(new Scenery("pineTree", 77417.19175704995, -14145.986738123169, true, undefined));
                scenicList.push(new Scenery("pineTree", 75248.22101290649, -14069.724002669536, true, undefined));
                scenicList.push(new Scenery("pineTree", 72434.85344587606, -17572.323085546264, true, undefined));

                scenicList.push(new Scenery("pineTree", 72434.85344587606, -17572.323085546264, true, undefined));
                scenicList.push(new Scenery("pineTree", 72667.13207488095, -18661.465289841824, true, undefined));
                scenicList.push(new Scenery("pineTree", 69740.90103264112, -20709.781524518112, true, undefined));
                scenicList.push(new Scenery("pineTree", 70472.19032353937, -21121.846388462433, true, undefined));
                scenicList.push(new Scenery("pineTree", 70085.08699791554, -21712.325176731978, true, undefined));
                scenicList.push(new Scenery("pineTree", 69724.52081851977, -21159.55274163261, true, undefined));
                scenicList.push(new Scenery("pineTree", 69014.45636680684, -20706.94713763656, true, undefined));
                scenicList.push(new Scenery("pineTree", 68356.22393424856, -20777.6385086282, true, undefined));
                scenicList.push(new Scenery("pineTree", 67827.39681102712, -19199.83582597119, true, undefined));

                scenicList.push(new Scenery("pineTree", 68258.00184853325, -14518.634233565948, true, undefined));
                scenicList.push(new Scenery("pineTree", 69446.34471321676, -14284.87943066498, true, undefined));
                scenicList.push(new Scenery("pineTree", 69086.94860453416, -14051.021429418312, true, undefined));
                scenicList.push(new Scenery("pineTree", 67821.50720511012, -14141.788319092662, true, undefined));
                scenicList.push(new Scenery("pineTree", 67360.35253774474, -14079.648188285433, true, undefined));
                scenicList.push(new Scenery("pineTree", 67471.43801077022, -14515.852483814035, true, undefined));
                scenicList.push(new Scenery("pineTree", 68548.20398626427, -14979.029051382882, true, undefined));
                scenicList.push(new Scenery("pineTree", 68140.18789976943, -15305.742114218854, true, undefined));
                scenicList.push(new Scenery("pineTree", 68126.67975224578, -15860.730574747968, true, undefined));
                scenicList.push(new Scenery("pineTree", 67978.00576788372, -16280.631150199739, true, undefined));
                scenicList.push(new Scenery("pineTree", 68449.33561497623, -16162.141624710055, true, undefined));
                scenicList.push(new Scenery("pineTree", 68311.95804795019, -16597.993499006323, true, undefined));

                change = "s1w7";
            }
        }
        else if (region == "s2w7") //Visig Forest
        {
            if (change != "s2w7")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                generator(46, 951, 467, 599, 199, 1, 78081, -14151); //forest in map s-2-w-7
                trimmer(70923.05583171644, -13833.298188164164, 70534.46569420704, -15616.384698471045, true, false);
                trimmer(78418.37564355148, -15323.636124333827, 70763.6841003665, -15628.413902439186, true, false);
                trimmer(78142.51983143283, -20021.056036797654, 77903.22222430418, -20239.64101419797, true, false);

                scenicList.push(new Scenery("pineTree", 66518.189475, -22230.8545,3.8391837028553146, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66770.733, -14434.66675,4.250056417708162, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67734.613125, -16875.65725,4.950089019964549, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67209.665325, -23846.139925,5.318492523086694, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66773.8998, -18751.045375,5.409305258659775, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66899.94, -18763.706725,2.0985109494854264, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67851.08955, -22910.962825000002,5.089182836802822, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67253.126925, -23495.5972,4.508262749494692, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67113.976875, -17454.42505,3.1429332186811596, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66860.944875, -20675.950825,1.1288302145572349, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67381.704075, -16853.27125,1.6920791777726265, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67691.483025, -22725.0703,4.367432382477975, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67692.7047, -17016.040675,4.2551968779275375, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66474.15555, -20811.7849,3.21162208131431, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66420.8016, -20670.6985,3.9941376622164615, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66768.5724, -15406.077775,2.731921525616615, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67429.404, -15936.138475,0.3779822387752593, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67482.322125, -18111.113875,1.323851979658145, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66776.310975, -20481.74935,5.114275387558962, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66609.40365, -21810.619749999998,3.408674249516336, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67047.924525, -18713.258275,0.9417180495053036, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67888.124925, -23101.70695,2.2006280231749535, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66786.043425, -19546.394800000002,0.28859943000845706, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67333.75065, -19501.777825,5.0432060228609945, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67198.4733, -19094.140075,1.3817808877365179, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67529.664225, -14990.6137,1.3944398066014985, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66580.743525, -19219.8361,0.16800316929764897, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66592.776, -19550.367925,5.445046716014881, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67362.523875, -23461.677925,0.1665590424372234, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66996.809175, -18334.04665,1.2348246094282826, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66807.263325, -19921.650849999998,4.515321051157335, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67337.922675, -17849.938675,5.092045646388863, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66880.88655, -19984.084000000003,1.5565787659091241, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67762.2495, -20497.73545,1.3316465118984708, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67196.55645, -20422.238275,2.103270708762233, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67177.788675, -15219.4891,1.8860451843412807, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67620.348975, -22375.4041,1.3340040082014508, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67416.242475, -22457.7097,0.6632889808606895, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67335.875175, -17263.628275,2.5248883022902273, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67609.881375, -21827.819725,2.4120021628263815, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67423.724625, -18724.765225,0.47493103769621364, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67444.355625, -15648.1303,3.402463926185073, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67482.548325, -22316.470224999997,3.781874146381909, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67336.9311, -19976.442925,3.578066478701726, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67728.42285, -21747.5158,4.774601480889188, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66845.502825, -16868.79325,2.426245380812415, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66753.825525, -15717.607825,6.0865342005361365, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67655.3388, -19898.138725,6.273629730315823, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66813.398025, -17047.600449999998,5.889939918535885, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67107.783675, -19413.319975,0.23697843274399316, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67655.246175, -20292.142075,5.2217438566354035, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67272.125775, -16412.27875,0.31911167554721676, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67203.273225, -22379.121775,2.815724593275752, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66805.2207, -21903.657175,0.6206993951994448, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66716.917875, -17893.73275,5.86731844130324, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66962.001675, -19802.838325,1.282044899365155, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67326.6624, -15795.328975,5.892701250573599, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67122.104475, -23826.259675,1.7604633904082048, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67381.975125, -17888.894800000002,1.8682984089471348, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66672.471525, -16531.424725,3.6290892636094827, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67634.52645, -15055.151875,2.0916802352827646, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66846.822975, -19034.284825,0.4596501977797856, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("kofkePlant", 67878.610875, -22470.766900000002,0.04120663684908436, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 66938, -13550,-28.7, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67423, -13700,1.654, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 68201, -13828,-5, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67863, -13504,-9, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67275.76215547322, -21374.79500626647,-0.15, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("pineTree", 67701.63212458185, -20940.13907014899,15, true, undefined)); //copied s2w6
                scenicList.push(new Scenery("darbPlant", 67079.18021123904, -16079.318849854571,1.26, false, undefined)); //copied s2w6

                scenicList.push(new Scenery("pineTree", 78132.02154498016, -13989.686548211726, true, undefined));
                scenicList.push(new Scenery("pineTree", 77417.19175704995, -14145.986738123169, true, undefined));
                scenicList.push(new Scenery("pineTree", 75248.22101290649, -14069.724002669536, true, undefined));

                scenicList.push(new Scenery("pineTree", 72434.85344587606, -17572.323085546264, true, undefined));
                scenicList.push(new Scenery("pineTree", 72667.13207488095, -18661.465289841824, true, undefined));
                scenicList.push(new Scenery("pineTree", 69740.90103264112, -20709.781524518112, true, undefined));
                scenicList.push(new Scenery("pineTree", 70472.19032353937, -21121.846388462433, true, undefined));
                scenicList.push(new Scenery("pineTree", 70085.08699791554, -21712.325176731978, true, undefined));
                scenicList.push(new Scenery("pineTree", 69724.52081851977, -21159.55274163261, true, undefined));
                scenicList.push(new Scenery("pineTree", 69014.45636680684, -20706.94713763656, true, undefined));
                scenicList.push(new Scenery("pineTree", 68356.22393424856, -20777.6385086282, true, undefined));
                scenicList.push(new Scenery("pineTree", 67827.39681102712, -19199.83582597119, true, undefined));

                scenicList.push(new Scenery("pineTree", 75747.53341088437, -16563.946063480213, true, undefined));
                scenicList.push(new Scenery("pineTree", 75496.97327871258, -16864.842799877955, true, undefined));
                scenicList.push(new Scenery("pineTree", 75973.91920098921, -16999.582382939505, true, undefined));
                scenicList.push(new Scenery("pineTree", 76338.03289621204, -16819.52465683849, true, undefined));
                scenicList.push(new Scenery("pineTree", 75546.17020388438, -17355.636840783158, true, undefined));

                scenicList.push(new Scenery("pineTree", 68258.00184853325, -14518.634233565948, true, undefined));
                scenicList.push(new Scenery("pineTree", 69446.34471321676, -14284.87943066498, true, undefined));
                scenicList.push(new Scenery("pineTree", 69086.94860453416, -14051.021429418312, true, undefined));
                scenicList.push(new Scenery("pineTree", 67821.50720511012, -14141.788319092662, true, undefined));
                scenicList.push(new Scenery("pineTree", 67360.35253774474, -14079.648188285433, true, undefined));
                scenicList.push(new Scenery("pineTree", 67471.43801077022, -14515.852483814035, true, undefined));
                scenicList.push(new Scenery("pineTree", 68548.20398626427, -14979.029051382882, true, undefined));
                scenicList.push(new Scenery("pineTree", 68140.18789976943, -15305.742114218854, true, undefined));
                scenicList.push(new Scenery("pineTree", 68126.67975224578, -15860.730574747968, true, undefined));
                scenicList.push(new Scenery("pineTree", 67978.00576788372, -16280.631150199739, true, undefined));
                scenicList.push(new Scenery("pineTree", 68449.33561497623, -16162.141624710055, true, undefined));
                scenicList.push(new Scenery("pineTree", 68311.95804795019, -16597.993499006323, true, undefined));

                scenicList.push(new Scenery("web", 73850.1797046862, -17786.991137607172, -1, 2));
                scenicList.push(new Scenery("web", 73854.81928752804, -17884.06343432357, 1.12, 2.4));
                scenicList.push(new Scenery("web", 73778.32954882711, -17858.31087046487, 1.1, 2.45));
                scenicList.push(new Scenery("web", 73631.0202557692, -17796.563030721274, 5.56, 1.81));
                scenicList.push(new Scenery("web", 73651.25987734788, -17955.05355611866, 9, 1.95));
                scenicList.push(new Scenery("web", 73508.7284855165, -18004.50568824662, 4, 2.3));
                scenicList.push(new Scenery("web", 74041.6927134775, -17837.154599025933, 17, 2.2));
                scenicList.push(new Scenery("web", 73933.07326177179, -17720.33793349132, 2.92, 1.2));

                ArtificialIntelligenceAccess.push(new Unit(74041.6927134775, -17837.154599025933, "Etna", true, "Wollosh"));
                ArtificialIntelligenceAccess.push(new Unit(73778.32954882711, -17858.31087046487, "Etna", false, "Shulib"));
                ArtificialIntelligenceAccess.push(new Unit(73850.1797046862, -17786.991137607172, "Etna", false, "Shulib"));

                ArtificialIntelligenceAccess.push(new Unit(76182.22402305914, -16209.464135405882, "Etna", false, "Shulib"));


                scenicList.push(new Scenery("web", 76228.4404291861, -16191.085212137463, 1.55, 1.9));
                scenicList.push(new Scenery("web", 76064.83183128339, -16247.052445671412, -3.3, 2));
                scenicList.push(new Scenery("web", 76189.992249425, -16286.601799478354, -1.6, 1.7));
                scenicList.push(new Scenery("etnaEggSac", 76154.10693540273, -16236.7343369435, 13.1313, true));

                change = "s2w7";
            }
        }
        else if (region == "e1") //Y > 6290 && Y < 32370
        {
            if (change != "e1")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                //ArtificialIntelligenceAccess.push(new Unit(1300, 2000, "BlackBear", "giant", "Lugtug"));

                //Shehids in the forest
                ArtificialIntelligenceAccess.push(new Unit(-8690, 2326, "Shehid", false, "clamgirl"));
                ArtificialIntelligenceAccess.push(new Unit(-8880, 2875, "Shehid", false, "clamboy"));
                ArtificialIntelligenceAccess.push(new Unit(-8860, 3275, "Shehid", false, "berch"));
                ArtificialIntelligenceAccess.push(new Unit(-9490, 2941, "Shehid", false, "shamble"));
                ArtificialIntelligenceAccess.push(new Unit(-8216, 3766, "Shehid", false, "timbson"));
                ArtificialIntelligenceAccess.push(new Unit(-7519, 583, "Shehid", false, "timberly"));
                ArtificialIntelligenceAccess.push(new Unit(-7460, 544, "Shehid", false, "timbar"));
                ArtificialIntelligenceAccess.push(new Unit(-7480, 504, "Shehid", false, "timblin"));
                ArtificialIntelligenceAccess.push(new Unit(-8094, 739, "Shehid", false, "timblo"));
                ArtificialIntelligenceAccess.push(new Unit(-8005, 786, "Shehid", false, "timbla"));
                ArtificialIntelligenceAccess.push(new Unit(-8080, 646, "Shehid", false, "timbli"));
                ArtificialIntelligenceAccess.push(new Unit(-8066, 159, "Shehid", true, "timblik"));
                ArtificialIntelligenceAccess.push(new Unit(-10170, 4248, "Shehid", true, "liklim"));
                ArtificialIntelligenceAccess.push(new Unit(-9838, 4451, "Shehid", true, "ogklip"));
                ArtificialIntelligenceAccess.push(new Unit(-9715, 4227, "Shehid", true, "lipsorn"));
                ArtificialIntelligenceAccess.push(new Unit(-9198, 4538, "Shehid", false, "lipi"));
                ArtificialIntelligenceAccess.push(new Unit(-12332, -723, "Shehid", true, "lipthorn"));
                ArtificialIntelligenceAccess.push(new Unit(-12410, 4867, "Shehid", true, "galtong"));
                ArtificialIntelligenceAccess.push(new Unit(-11427, 3467, "Shehid", false, "tooblo"));
                ArtificialIntelligenceAccess.push(new Unit(-11470, 3506, "Shehid", false, "toobla"));
                ArtificialIntelligenceAccess.push(new Unit(-12564, -2860, "Shehid", true, "pipthorn"));
                ArtificialIntelligenceAccess.push(new Unit(-12354, -2884, "Shehid", false, "toobli"));
                ArtificialIntelligenceAccess.push(new Unit(-12334, -3126, "Shehid", false, "tooble"));
                ArtificialIntelligenceAccess.push(new Unit(-12465, -3230, "Shehid", false, "tooblu"));
                ArtificialIntelligenceAccess.push(new Unit(-8377, 568, "Shehid", false, "fooblo"));
                ArtificialIntelligenceAccess.push(new Unit(-8518, 319, "Shehid", false, "foobla"));
                ArtificialIntelligenceAccess.push(new Unit(-8555, 411, "Shehid", false, "foobli"));
                ArtificialIntelligenceAccess.push(new Unit(-8500, 627, "Shehid", false, "fooble"));
                ArtificialIntelligenceAccess.push(new Unit(-8293, 713, "Shehid", false, "fooblu"));
                ArtificialIntelligenceAccess.push(new Unit(-8410, 878, "Shehid", false, "kuabo"));
                ArtificialIntelligenceAccess.push(new Unit(-8955, 936, "Shehid", true, "ogklap"));
                ArtificialIntelligenceAccess.push(new Unit(-9056, -1588, "Shehid", true, "Giglap"));
                ArtificialIntelligenceAccess.push(new Unit(-8946, -1755, "Shehid", false, "Gigi"));
                ArtificialIntelligenceAccess.push(new Unit(-8867, -1724, "Shehid", false, "Giga"));
                ArtificialIntelligenceAccess.push(new Unit(-9251, -1724, "Shehid", false, "Gigil"));
                ArtificialIntelligenceAccess.push(new Unit(-9257, -1606, "Shehid", false, "Gigli"));
                ArtificialIntelligenceAccess.push(new Unit(-9463, 4504, "Shehid", false, "Giglo"));
                ArtificialIntelligenceAccess.push(new Unit(-9351, 4391, "Shehid", false, "Gigo"));
                ArtificialIntelligenceAccess.push(new Unit(-9404, 4137, "Shehid", true, "timbap"));
                ArtificialIntelligenceAccess.push(new Unit(-9062, 4191, "Shehid", false, "timbri"));
                ArtificialIntelligenceAccess.push(new Unit(-9270, 4377, "Shehid", false, "timbro"));
                ArtificialIntelligenceAccess.push(new Unit(-8787, 4040, "Shehid", false, "timbra"));

                //Ardils
                ArtificialIntelligenceAccess.push(new Unit(-3936, 5729, "Ardil", true, "Fannyfranfran"));
                ArtificialIntelligenceAccess.push(new Unit(-4277, 4587, "Ardil", false, "busybut"));

                //Vipers
                ArtificialIntelligenceAccess.push(new Unit(-9607, 2648, "Viper", false, "slitherz"));
                ArtificialIntelligenceAccess.push(new Unit(-11027, 239, "Viper", false, "Serpil"));

                //Lizards
                ArtificialIntelligenceAccess.push(new Unit(-8277, 1718, "Lizard", false, "Lizzy"));
                ArtificialIntelligenceAccess.push(new Unit(-9173, 1272, "Lizard", true, "Lizander"));
                ArtificialIntelligenceAccess.push(new Unit(-10079, 274, "Lizard", false, "Lizabeth"));
                ArtificialIntelligenceAccess.push(new Unit(-11443, 1183, "Lizard", false, "Lizzer"));
                ArtificialIntelligenceAccess.push(new Unit(-12784, 2278, "Lizard", true, "Lizzely"));
                ArtificialIntelligenceAccess.push(new Unit(-10461, -337, "Lizard", false, "Liza"));
                ArtificialIntelligenceAccess.push(new Unit(-9394, -1962, "Lizard", false, "Lizian"));
                ArtificialIntelligenceAccess.push(new Unit(-8182, -2325, "Lizard", true, "Lizel"));
                ArtificialIntelligenceAccess.push(new Unit(-7434, -2070, "Lizard", false, "Liz"));
                ArtificialIntelligenceAccess.push(new Unit(-9265, 5185, "Lizard", false, "Liziela"));
                ArtificialIntelligenceAccess.push(new Unit(-10220, 1426, "Lizard", true, "Lizalt"));
                ArtificialIntelligenceAccess.push(new Unit(-10284, 2670, "Lizard", false, "Liziana"));
                ArtificialIntelligenceAccess.push(new Unit(-12115, 1323, "Lizard", false, "Lizarina"));

                //Bees
                scenicList.push(new Scenery("beeHive", -8287 , 3377, 0, true));

                //Ulgoys
                scenicList.push(new Scenery("ulgoyPlant", -9580, 3557, 0, 3.2));
                ArtificialIntelligenceAccess.push(new Unit(-9569, 3566, "Ulgoy", true, "Venus"));
                scenicList.push(new Scenery("ulgoyPlant", -9125, 494, 0, 2));
                ArtificialIntelligenceAccess.push(new Unit(-9118, 497, "Ulgoy", false, "Trampa"));
                scenicList.push(new Scenery("ulgoyPlant", -11382, 351, 0, 1.15));
                ArtificialIntelligenceAccess.push(new Unit(-11379, 353, "Ulgoy", "baby", "Flytrap"));
                scenicList.push(new Scenery("ulgoyPlant", -11008, 568, 0, 1.15));
                ArtificialIntelligenceAccess.push(new Unit(-11005, 570, "Ulgoy", "baby", "Trap"));

                //narthwarps
                ArtificialIntelligenceAccess.push(new Unit(-11292, 3177, "Narthwarp", true, "krinklestitch"));
                ArtificialIntelligenceAccess.push(new Unit(-10291, -2926, "Narthwarp", false, "krinklestitchenheimerIII"));
                ArtificialIntelligenceAccess.push(new Unit(-10449, -2880, "Narthwarp", false, "krinklestitchenheimerII"));
                ArtificialIntelligenceAccess.push(new Unit(-10398, -3076, "Narthwarp", false, "krinklestitchenheimerI"));
                ArtificialIntelligenceAccess.push(new Unit(-12321, -1836, "Narthwarp", true, "Kacklkromf"));
                ArtificialIntelligenceAccess.push(new Unit(-12708, -1973, "Narthwarp", false, "kacklkromfenheimerI"));
                ArtificialIntelligenceAccess.push(new Unit(-12549, -1447, "Narthwarp", false, "kacklkromfenheimerII"));
                ArtificialIntelligenceAccess.push(new Unit(-12662, -1314, "Narthwarp", false, "kacklkromfenheimerIII"));
                ArtificialIntelligenceAccess.push(new Unit(-9366, -1072, "Narthwarp", false, "Mokinshanks"));
                ArtificialIntelligenceAccess.push(new Unit(-9330, -1403, "Narthwarp", false, "Kronkenstocks"));
                ArtificialIntelligenceAccess.push(new Unit(-8989, -1015, "Narthwarp", false, "Bokinshanks"));
                ArtificialIntelligenceAccess.push(new Unit(-9117, -713, "Narthwarp", false, "Fronkenstocks"));

                //Varns of the woodlands
                ArtificialIntelligenceAccess.push(new Unit(-7847, -139, "Varn", true, "rain"));
                ArtificialIntelligenceAccess.push(new Unit(-7462, -39, "Varn", true, "sun"));
                ArtificialIntelligenceAccess.push(new Unit(-7105, -695, "Varn", false, "snow"));
                ArtificialIntelligenceAccess.push(new Unit(-8007, -989, "Varn", true, "wind"));
                ArtificialIntelligenceAccess.push(new Unit(-10694, 2278, "Varn", true, "si"));
                ArtificialIntelligenceAccess.push(new Unit(-11065, 2029, "Varn", true, "no"));
                ArtificialIntelligenceAccess.push(new Unit(-10738, 2083, "Varn", true, "gracias"));
                ArtificialIntelligenceAccess.push(new Unit(-11350, 2166, "Varn", false, "denada"));
                ArtificialIntelligenceAccess.push(new Unit(-11276, 1877, "Varn", true, "todos"));
                ArtificialIntelligenceAccess.push(new Unit(-10630, 2151, "Varn", false, "ningunos"));
                ArtificialIntelligenceAccess.push(new Unit(-7303, -3040, "Varn", true, "hail"));
                ArtificialIntelligenceAccess.push(new Unit(-7116, -3121, "Varn", true, "storm"));
                ArtificialIntelligenceAccess.push(new Unit(-6537, -3078, "Varn", true, "will"));
                ArtificialIntelligenceAccess.push(new Unit(-6983, -2796, "Varn", true, "eatyou"));
                ArtificialIntelligenceAccess.push(new Unit(-11059, -839, "Varn", true, "wewill"));
                ArtificialIntelligenceAccess.push(new Unit(-11155, -958, "Varn", false, "wewil"));
                ArtificialIntelligenceAccess.push(new Unit(-11311, -1134, "Varn", true, "lrock"));
                ArtificialIntelligenceAccess.push(new Unit(-11420, -1109, "Varn", false, "you!"));
                ArtificialIntelligenceAccess.push(new Unit(-11613, -1079, "Varn", false, "Living"));
                ArtificialIntelligenceAccess.push(new Unit(-11783, -1025, "Varn", true, "ona"));
                ArtificialIntelligenceAccess.push(new Unit(-11664, -901, "Varn", true, "sunnybeach"));
                ArtificialIntelligenceAccess.push(new Unit(-11890, -897, "Varn", true, "heckyeah!!!"));
                ArtificialIntelligenceAccess.push(new Unit(-7175, 5260, "Varn", true, "johny"));
                ArtificialIntelligenceAccess.push(new Unit(-7497, 5379, "Varn", true, "james"));
                ArtificialIntelligenceAccess.push(new Unit(-7517, 5188, "Varn", true, "jillian"));
                ArtificialIntelligenceAccess.push(new Unit(-7513, 4941, "Varn", true, "jude"));
                ArtificialIntelligenceAccess.push(new Unit(-7374, 4660, "Varn", true, "julian"));
                ArtificialIntelligenceAccess.push(new Unit(-7625, 4700, "Varn", true, "july"));
                ArtificialIntelligenceAccess.push(new Unit(-6621, 4758, "Varn", true, "jekkle"));
                ArtificialIntelligenceAccess.push(new Unit(-6580, 4418, "Varn", false, "jazz"));
                ArtificialIntelligenceAccess.push(new Unit(-6799, 3911, "Varn", true, "June"));
                ArtificialIntelligenceAccess.push(new Unit(-7090, 3991, "Varn", false, "Jed"));
                ArtificialIntelligenceAccess.push(new Unit(-6317, 204, "Varn", true, "Tal"));
                ArtificialIntelligenceAccess.push(new Unit(-6594, 46, "Varn", true, "Til"));
                ArtificialIntelligenceAccess.push(new Unit(-7581, -1658, "Varn", true, "Tyl"));
                ArtificialIntelligenceAccess.push(new Unit(-7128, 1989, "Varn", false, "Tol"));
                ArtificialIntelligenceAccess.push(new Unit(-5986, 2947, "Varn", true, "Tul"));
                ArtificialIntelligenceAccess.push(new Unit(-6329, -3246, "Varn", false, "Tel"));
                ArtificialIntelligenceAccess.push(new Unit(-5897, -3461, "Varn", false, "Tela"));
                ArtificialIntelligenceAccess.push(new Unit(-4240, -1519, "Varn", true, "Tula"));

                //lions tigers and BLACKBEARS oh my!
                ArtificialIntelligenceAccess.push(new Unit(-11630, 5669, "BlackBear", true, "Jugtug"));
                ArtificialIntelligenceAccess.push(new Unit(-12041, 4710, "BlackBear", false, "Yugtug"));
                ArtificialIntelligenceAccess.push(new Unit(-12275, 4426, "BlackBear", true, "Pugtug"));
                ArtificialIntelligenceAccess.push(new Unit(-12170, 6191, "BlackBear", false, "Tugtug"));
                ArtificialIntelligenceAccess.push(new Unit(-7769, 640, "BlackBear", false, "Hugtug"));
                ArtificialIntelligenceAccess.push(new Unit(-12765, -2427, "BlackBear", true, "Nugtug"));
                ArtificialIntelligenceAccess.push(new Unit(-9195, -3204, "BlackBear", false, "Luvtug"));
                ArtificialIntelligenceAccess.push(new Unit(-11660, -1679, "BlackBear", false, "Duvtuv"));
                ArtificialIntelligenceAccess.push(new Unit(-12407, -86, "BlackBear", false, "Guvtug"));
                ArtificialIntelligenceAccess.push(new Unit(-12203, 677, "BlackBear", false, "Ruvtuv"));
                ArtificialIntelligenceAccess.push(new Unit(-12686, 843, "BlackBear", true, "Mugtug"));
                ArtificialIntelligenceAccess.push(new Unit(-8550, 6131, "BlackBear", true, "Grugtug"));
                ArtificialIntelligenceAccess.push(new Unit(-8251, 5968, "BlackBear", false, "Yuvtuv"));
                ArtificialIntelligenceAccess.push(new Unit(-10860, 5750, "BlackBear", false, "Juvtuv"));
                ArtificialIntelligenceAccess.push(new Unit(-9664, -2658, "BlackBear", true, "Ugug"));

                //ferocious gribs...
                ArtificialIntelligenceAccess.push(new Unit(-11836, 3742, "Grib", true, "stuckan"));
                ArtificialIntelligenceAccess.push(new Unit(-11601, 3904, "Grib", true, "frukkan"));
                ArtificialIntelligenceAccess.push(new Unit(-9993, 3965, "Grib", true, "fuckan"));
                ArtificialIntelligenceAccess.push(new Unit(-7932, -2046, "Grib", false, "lucytoodlewop"));
                ArtificialIntelligenceAccess.push(new Unit(-8480, -1979, "Grib", false, "mandybibblbop"));
                ArtificialIntelligenceAccess.push(new Unit(-7960, -2824, "Grib", true, "buckan"));
                ArtificialIntelligenceAccess.push(new Unit(-11080, -3075, "Grib", true, "truckan"));
                ArtificialIntelligenceAccess.push(new Unit(-11318, -3167, "Grib", true, "krukkan"));
                ArtificialIntelligenceAccess.push(new Unit(-11579, -3048, "Grib", false, "tucytoodletop"));
                ArtificialIntelligenceAccess.push(new Unit(-13110, -514, "Grib", true, "Gruckan"));
                ArtificialIntelligenceAccess.push(new Unit(-9919, 5837, "Grib", false, "Gucytoodlewop"));
                ArtificialIntelligenceAccess.push(new Unit(-9269, 5971, "Grib", false, "Tandybibblbop"));
                ArtificialIntelligenceAccess.push(new Unit(-9446, 5542, "Grib", false, "Quilcytoodlewop"));
                ArtificialIntelligenceAccess.push(new Unit(-9827, 5637, "Grib", false, "Vandybibblbop"));
                ArtificialIntelligenceAccess.push(new Unit(-6214, 3512, "Grib", true, "Vandybibblbeed"));

                //naaprids of the southern grasslands
                ArtificialIntelligenceAccess.push(new Unit(-5031, -2683, "Naaprid", "baby", "Naarimo"));
                ArtificialIntelligenceAccess.push(new Unit(-4966, -2960, "Naaprid", false, "Naaste"));
                ArtificialIntelligenceAccess.push(new Unit(-5207, -2871, "Naaprid", false, "kaaste"));
                ArtificialIntelligenceAccess.push(new Unit(-5169, -3136, "Naaprid", false, "Laaste"));
                ArtificialIntelligenceAccess.push(new Unit(-3817, -3336, "Naaprid", false, "phaashe"));
                ArtificialIntelligenceAccess.push(new Unit(-4940, -2567, "Naaprid", true, "Yaahmo"));

                //friches of the grasslands before the wuncwer woods
                ArtificialIntelligenceAccess.push(new Unit(-3891, -2492, "Frich", false, "Sansa"));
                ArtificialIntelligenceAccess.push(new Unit(-3961, -2617, "Frich", false, "Aria"));

                if (player.level > 8 && player.level < 13 || Math.floor(Math.random() * 9) == 8) // summon giant friches if between these levels.
                {
                    ArtificialIntelligenceAccess.push(new Unit(-5441, -2609, "Frich", "massive", "Edard"));
                    ArtificialIntelligenceAccess.push(new Unit(-5434, -2411, "Frich", "massive", "Robert"));
                    ArtificialIntelligenceAccess.push(new Unit(-5570, -2522, "Frich", "massive", "Stannis"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(-3797, -2540, "Frich", true, "Edard"));
                    ArtificialIntelligenceAccess.push(new Unit(-5434, -2411, "Frich", false, "Robert"));
                    ArtificialIntelligenceAccess.push(new Unit(-5342, -2290, "Frich", false, "Stannis"));
                }
                ArtificialIntelligenceAccess.push(new Unit(-5110, -2116, "Frich", false, "Renely"));

                ArtificialIntelligenceAccess.push(new Unit(-5334, -1338, "Frich", true, "Tjon"));
                ArtificialIntelligenceAccess.push(new Unit(-5593, -1410, "Frich", false, "Sam"));
                ArtificialIntelligenceAccess.push(new Unit(-5990, -910, "Frich", false, "RedDeadWalder"));
                ArtificialIntelligenceAccess.push(new Unit(-5508, -566, "Frich", true, "Robbstar"));

                ArtificialIntelligenceAccess.push(new Unit(-4086, 159, "Frich", true, "Ramsay"));
                ArtificialIntelligenceAccess.push(new Unit(-4591, -361, "Frich", false, "Umber"));
                ArtificialIntelligenceAccess.push(new Unit(-4428, -2500, "Frich", false, "Tormund"));
                ArtificialIntelligenceAccess.push(new Unit(-5508, -566, "Frich", true, "Daavos"));

                ArtificialIntelligenceAccess.push(new Unit(-4318, -3341, "Frich", false, "inspector"));
                ArtificialIntelligenceAccess.push(new Unit(-4688, -3525, "Frich", true, "Harold"));
                ArtificialIntelligenceAccess.push(new Unit(-5143, 2663, "Frich", true, "gadget"));
                ArtificialIntelligenceAccess.push(new Unit(-4428, 2433, "Frich", true, "toolbox"));

                ArtificialIntelligenceAccess.push(new Unit(-4757, 4016, "Frich", true, "Gizmo"));
                ArtificialIntelligenceAccess.push(new Unit(-5201, 5973, "Frich", true, "Gear"));

                //Trees of the forest
                scenicList.push(new Scenery("pineTree", -7703 , 1761, Math.PI, true));
                scenicList.push(new Scenery("pineTree", -7319 , 2158, Math.PI * 0.63, true));
                scenicList.push(new Scenery("pineTree", -7918 , 2493, 0, true));
                scenicList.push(new Scenery("pineTree", -7110 , 2531, Math.PI * 1.45, true));
                scenicList.push(new Scenery("pineTree", -7087 , 2950, - Math.PI * 0.19, true));
                scenicList.push(new Scenery("pineTree", -7632 , 2872, 0.19, true));
                scenicList.push(new Scenery("pineTree", -7427 , 3301, 1.87 * Math.PI, true));
                scenicList.push(new Scenery("pineTree", -7061 , 3661, - Math.PI * 1.33, true));
                scenicList.push(new Scenery("pineTree", -7800 , 3550, - 0.25, true));
                scenicList.push(new Scenery("pineTree", -8284 , 3238, Math.PI * 1.61, true));
                scenicList.push(new Scenery("pineTree", -8340 , 2685, - Math.PI * 0.91, true));
                scenicList.push(new Scenery("pineTree", -8155 , 2015, 0.32, true));
                scenicList.push(new Scenery("pineTree", -7714 , 3982, Math.PI, true));
                scenicList.push(new Scenery("pineTree", -8399 , 3798, Math.PI * 0.63, true));
                scenicList.push(new Scenery("pineTree", -8743 , 3450, 0, true));
                scenicList.push(new Scenery("pineTree", -8926 , 2996, Math.PI * 1.45, true));
                scenicList.push(new Scenery("pineTree", -8743 , 2291, Math.PI * 0.72, true));
                scenicList.push(new Scenery("pineTree", -8525 , 1670, - 0.39, true));
                scenicList.push(new Scenery("pineTree", -9151 , 1782, 1.98 * Math.PI, true));
                scenicList.push(new Scenery("pineTree", -9362 , 2188, Math.PI * 1.53, true));
                scenicList.push(new Scenery("pineTree", -9395 , 2720, - 0.50, true));
                scenicList.push(new Scenery("pineTree", -9642 , 3192, - Math.PI * 1.20, true));
                scenicList.push(new Scenery("pineTree", -9325 , 3380, Math.PI * 0.33, true));
                scenicList.push(new Scenery("pineTree", -9090 , 3989, - 0.77, true));
                scenicList.push(new Scenery("pineTree", -7316 , 1029, Math.PI, true));
                scenicList.push(new Scenery("pineTree", -7765 , 940, Math.PI * 0.63, true));
                scenicList.push(new Scenery("pineTree", -7479 , 711, 0, true));
                scenicList.push(new Scenery("pineTree", -7994 , 834, Math.PI * 1.45, true));
                scenicList.push(new Scenery("pineTree", -7514 , 458, - Math.PI * 0.19, true));
                scenicList.push(new Scenery("pineTree", -8097 , 566, 0.19, true));
                scenicList.push(new Scenery("pineTree", -7160 , 59, - Math.PI * 1.33, true));
                scenicList.push(new Scenery("pineTree", -7969 , 87, 1.87 * Math.PI, true));
                scenicList.push(new Scenery("pineTree", -8431 , 160, - 0.25, true));
                scenicList.push(new Scenery("pineTree", -8451 , 4238, Math.PI * 1.61, true));
                scenicList.push(new Scenery("pineTree", -8741 , 4800, - Math.PI * 0.91, true));
                scenicList.push(new Scenery("pineTree", -9093 , 4430, 0.32, true));
                scenicList.push(new Scenery("pineTree", -9666 , 4132, Math.PI, true));
                scenicList.push(new Scenery("pineTree", -9920 , 3648, Math.PI * 0.63, true));
                scenicList.push(new Scenery("pineTree", -10249 , 3374, 0, true));
                scenicList.push(new Scenery("pineTree", -9999 , 2766, Math.PI * 1.45, true));
                scenicList.push(new Scenery("pineTree", -9820 , 2337, Math.PI * 0.72, true));
                scenicList.push(new Scenery("pineTree", -10049 , 1824, - 0.39, true));
                scenicList.push(new Scenery("pineTree", -9652 , 1798, 1.98 * Math.PI, true));
                scenicList.push(new Scenery("pineTree", -8554 , 925, Math.PI * 1.53, true));
                scenicList.push(new Scenery("pineTree", -8781 , 522, - 0.50, true));
                scenicList.push(new Scenery("pineTree", -9014 , 39, - Math.PI * 1.20, true));
                scenicList.push(new Scenery("pineTree", -8653 , -317, Math.PI * 0.33, true));
                scenicList.push(new Scenery("pineTree", -7708 , -319, - 0.77, true));
                scenicList.push(new Scenery("pineTree", -8189 , -266, 0.56, true));
                scenicList.push(new Scenery("pineTree", -7885 , -733, 0.995, true));
                scenicList.push(new Scenery("pineTree", -7896 , -1224, - Math.PI * 0.666, true));
                scenicList.push(new Scenery("pineTree", -8270 , -971, 0.454545, true));
                scenicList.push(new Scenery("pineTree", -8702 , -727, - 0.126, true));
                scenicList.push(new Scenery("pineTree", -9432 , -354, 0.65, true));
                scenicList.push(new Scenery("pineTree", -8519 , 5313, Math.PI * 0.21, true));
                scenicList.push(new Scenery("pineTree", -9431 , 4798, - 0.283, true));
                scenicList.push(new Scenery("pineTree", -9919 , 4570, -0.19, true));
                scenicList.push(new Scenery("pineTree", -10308 , 4227, 0.26, true));
                scenicList.push(new Scenery("pineTree", -10453 , 3825, 0.066, true));
                scenicList.push(new Scenery("pineTree", -10923 , 4107, Math.PI, true));
                scenicList.push(new Scenery("pineTree", -11056 , 3599, Math.PI * 0.63, true));
                scenicList.push(new Scenery("pineTree", -10740 , 3190, 0, true));
                scenicList.push(new Scenery("pineTree", -10583 , 2834, Math.PI * 1.55, true));
                scenicList.push(new Scenery("pineTree", -10612 , 2370, - Math.PI * 0.19, true));
                scenicList.push(new Scenery("pineTree", -10448 , 2047, 0.16, true));
                scenicList.push(new Scenery("pineTree", -10572 , 1661, 1.93 * Math.PI, true));
                scenicList.push(new Scenery("pineTree", -10953 , 1579, - Math.PI * 1.33, true));
                scenicList.push(new Scenery("pineTree", -11358 , 3550, - 0.25, true));
                scenicList.push(new Scenery("pineTree", -12008 , 1780, Math.PI * 1.61, true));
                scenicList.push(new Scenery("pineTree", -11401 , 1922, - Math.PI * 0.91, true));
                scenicList.push(new Scenery("pineTree", -11539 , 1630, 0.32, true));
                scenicList.push(new Scenery("pineTree", -12573 , 1643, Math.PI, true));
                scenicList.push(new Scenery("pineTree", -12635 , 2024, Math.PI * 0.63, true));
                scenicList.push(new Scenery("pineTree", -12515 , 2375, 0.1, true));
                scenicList.push(new Scenery("pineTree", -11440 , 2401, -48.1, true));
                scenicList.push(new Scenery("pineTree", -10936 , 2016, Math.PI * 1.45, true));
                scenicList.push(new Scenery("pineTree", -11183 , 2742, Math.PI * 0.72, true));
                scenicList.push(new Scenery("pineTree", -11025 , 2984, - 0.39, true));
                scenicList.push(new Scenery("pineTree", -11590 , 3174, 1.98 * Math.PI, true));
                scenicList.push(new Scenery("pineTree", -11921 , 3713, Math.PI * 1.53, true));
                scenicList.push(new Scenery("pineTree", -11604 , 3829, - 0.50, true));
                scenicList.push(new Scenery("pineTree", -11311 , 3952, - Math.PI * 1.20, true));
                scenicList.push(new Scenery("pineTree", -11245 , 4527, Math.PI * 0.33, true));
                scenicList.push(new Scenery("pineTree", -10739 , 4526, - 0.80, true));
                scenicList.push(new Scenery("pineTree", -10336 , 4787, Math.PI, true));
                scenicList.push(new Scenery("pineTree", -9734 , 5002, Math.PI * 0.65, true));
                scenicList.push(new Scenery("pineTree", -10894 , 4991, -Math.PI * 1.25, true));
                scenicList.push(new Scenery("pineTree", -10183 , 5372, - Math.PI * 0.19, true));
                scenicList.push(new Scenery("pineTree", -9067 , 5036, 0.995, true));
                scenicList.push(new Scenery("pineTree", -9449 , 5429, Math.PI * 1.45, true));
                scenicList.push(new Scenery("pineTree", -8885 , 5550, - Math.PI * 0.19, true));
                scenicList.push(new Scenery("pineTree", -8545 , 5837, - Math.PI * 0.50, true));
                scenicList.push(new Scenery("pineTree", -9187 , 6047, - 0.25, true));
                scenicList.push(new Scenery("pineTree", -9077 , 6365, Math.PI * 0.33, true));
                scenicList.push(new Scenery("pineTree", -8313 , 6303, Math.PI * 1.24, true));
                scenicList.push(new Scenery("pineTree", -7475 , 6291, 0.27, true));
                scenicList.push(new Scenery("pineTree", -7921 , 6103, - 0.40, true));
                scenicList.push(new Scenery("pineTree", -7804 , 5809, Math.PI * 0.20, true));
                scenicList.push(new Scenery("pineTree", -9923 , 5734, 0.2, true));
                scenicList.push(new Scenery("pineTree", -9864 , 6233, Math.PI * 1.24, true));
                scenicList.push(new Scenery("pineTree", -10591 , 6072, - Math.PI * 0.19, true));
                scenicList.push(new Scenery("pineTree", -10783 , 6306, - Math.PI * 1.33, true));
                scenicList.push(new Scenery("pineTree", -11250 , 5783, 1.87 * Math.PI, true));
                scenicList.push(new Scenery("pineTree", -11392 , 4881, - 0.25, true));
                scenicList.push(new Scenery("pineTree", -11725 , 4243, Math.PI * 1.61, true));
                scenicList.push(new Scenery("pineTree", -12296 , 4005, - Math.PI * 0.91, true));
                scenicList.push(new Scenery("pineTree", -12193 , 3257, 0.32, true));
                scenicList.push(new Scenery("pineTree", -11689 , 2800, Math.PI, true));
                scenicList.push(new Scenery("pineTree", -11972 , 2192, Math.PI * 0.63, true));
                scenicList.push(new Scenery("pineTree", -10249 , 3374, 0, true));
                scenicList.push(new Scenery("pineTree", -12220 , 2789, Math.PI * 1.45, true));
                scenicList.push(new Scenery("pineTree", -12853 , 2723, Math.PI * 0.72, true));
                scenicList.push(new Scenery("pineTree", -10049 , 1824, - 0.39, true));
                scenicList.push(new Scenery("pineTree", -13093 , 2211, 1.98 * Math.PI, true));
                scenicList.push(new Scenery("pineTree", -13164 , 1675, Math.PI * 1.53, true));
                scenicList.push(new Scenery("pineTree", -10576 , 5660, - 0.50, true));
                scenicList.push(new Scenery("pineTree", -11448 , 5333, - Math.PI * 1.20, true));
                scenicList.push(new Scenery("pineTree", -11935 , 4582, - 0.77, true));
                scenicList.push(new Scenery("pineTree", -11526 , 6213, 0.56, true));
                scenicList.push(new Scenery("pineTree", -11860 , 6012, 0.995, true));
                scenicList.push(new Scenery("pineTree", -12024 , 5545, - Math.PI * 0.666, true));
                scenicList.push(new Scenery("pineTree", -11899 , 5050, 0.454545, true));
                scenicList.push(new Scenery("pineTree", -12542 , 6099, - 0.126, true));
                scenicList.push(new Scenery("pineTree", -12891 , 5725, 0.65, true));
                scenicList.push(new Scenery("pineTree", -13251 , 6393, Math.PI * 0.21, true));
                scenicList.push(new Scenery("pineTree", -12082 , 6404, - 0.283, true));
                scenicList.push(new Scenery("pineTree", -12650 , 5221, -0.19, true));
                scenicList.push(new Scenery("pineTree", -13097 , 4946, 0.26, true));
                scenicList.push(new Scenery("pineTree", -12725 , 4595, 0.066, true));
                scenicList.push(new Scenery("pineTree", -13011 , 3906, - 0.40, true));
                scenicList.push(new Scenery("pineTree", -12663 , 3593, Math.PI * 0.20, true));
                scenicList.push(new Scenery("pineTree", -13022 , 3142, 0.2, true));
                scenicList.push(new Scenery("pineTree", -12583 , 3044, 0.32, true));
                scenicList.push(new Scenery("pineTree", -9214 , 892, -Math.PI * 1.25, true));
                scenicList.push(new Scenery("pineTree", -9615 , 1045, - Math.PI * 0.19, true));
                scenicList.push(new Scenery("pineTree", -9823 , 20, 0.995, true));
                scenicList.push(new Scenery("pineTree", -8217 , -1658, - Math.PI * 0.50, true));
                scenicList.push(new Scenery("pineTree", -7891 , -1934, - 0.25, true));
                scenicList.push(new Scenery("pineTree", -7370 , -2314, Math.PI * 0.33, true));
                scenicList.push(new Scenery("pineTree", -7139 , -3469, Math.PI * 1.24, true));
                scenicList.push(new Scenery("pineTree", -7245 , -3134, 0.27, true));
                scenicList.push(new Scenery("pineTree", -9322 , 437, - 0.40, true));
                scenicList.push(new Scenery("pineTree", -10063 , 713, Math.PI * 0.20, true));
                scenicList.push(new Scenery("pineTree", -10309 , 243, 0.2, true));
                scenicList.push(new Scenery("pineTree", -9978 , -465, Math.PI * 1.24, true));
                scenicList.push(new Scenery("pineTree", -9245 , -705, - Math.PI * 0.19, true));
                scenicList.push(new Scenery("pineTree", -8896 , -1116, - Math.PI * 1.33, true));
                scenicList.push(new Scenery("pineTree", -11250 , 5783, 1.87 * Math.PI, true));
                scenicList.push(new Scenery("pineTree", -8684 , -1417, - 0.25, true));
                scenicList.push(new Scenery("pineTree", -8455 , -2074, Math.PI * 1.61, true));
                scenicList.push(new Scenery("pineTree", -7879 , -2381, - Math.PI * 0.91, true));
                scenicList.push(new Scenery("pineTree", -7395 , -2737, 0.32, true));
                scenicList.push(new Scenery("pineTree", -7737 , -3007, Math.PI, true));
                scenicList.push(new Scenery("pineTree", -7693 , -3388, Math.PI * 0.63, true));
                scenicList.push(new Scenery("pineTree", -8189 , -2732, 0, true));
                scenicList.push(new Scenery("pineTree", -8213 , -3275, Math.PI * 1.45, true));
                scenicList.push(new Scenery("pineTree", -8500 , -3458, Math.PI * 0.72, true));
                scenicList.push(new Scenery("pineTree", -8904 , -3271, - 0.39, true));
                scenicList.push(new Scenery("pineTree", -9120 , -3546, 1.98 * Math.PI, true));
                scenicList.push(new Scenery("pineTree", -9665 , -3381, Math.PI * 1.53, true));
                scenicList.push(new Scenery("pineTree", -9772 , -2970, - 0.50, true));
                scenicList.push(new Scenery("pineTree", -9539 , -2410, - Math.PI * 1.20, true));
                scenicList.push(new Scenery("pineTree", -9194 , -2915, - 0.77, true));
                scenicList.push(new Scenery("pineTree", -8634 , -2906, 0.56, true));
                scenicList.push(new Scenery("pineTree", -8846 , -2378, 0.995, true));
                scenicList.push(new Scenery("pineTree", -9027 , -1800, - Math.PI * 0.666, true));
                scenicList.push(new Scenery("pineTree", -9454 , -1422, 0.454545, true));
                scenicList.push(new Scenery("pineTree", -10054 , -1709, - 0.126, true));
                scenicList.push(new Scenery("pineTree", -10143 , -2230, 0.65, true));
                scenicList.push(new Scenery("pineTree", -10155 , -2715, Math.PI * 0.21, true));
                scenicList.push(new Scenery("pineTree", -10087 , -3247, - 0.283, true));
                scenicList.push(new Scenery("pineTree", -10340 , -3485, -0.19, true));
                scenicList.push(new Scenery("pineTree", -10708 , -3304, 0.26, true));
                scenicList.push(new Scenery("pineTree", -10591 , 557, 0.066, true));
                scenicList.push(new Scenery("pineTree", -10433 , 990, - 0.40, true));
                scenicList.push(new Scenery("pineTree", -11134 , 889, Math.PI * 0.20, true));
                scenicList.push(new Scenery("pineTree", -10553 , -117, 0.23467, true));
                scenicList.push(new Scenery("pineTree", -10620 , -573, 0.37, true));
                scenicList.push(new Scenery("pineTree", -11684 , 1035, 0.19, true));
                scenicList.push(new Scenery("pineTree", -11574 , 557, 1.87 * Math.PI, true));
                scenicList.push(new Scenery("pineTree", -11037 , 319, - Math.PI * 1.33, true));
                scenicList.push(new Scenery("pineTree", -11063 , -160, - 0.25, true));
                scenicList.push(new Scenery("pineTree", -11296 , -475, Math.PI * 1.61, true));
                scenicList.push(new Scenery("pineTree", -10957 , -904, - Math.PI * 0.91, true));
                scenicList.push(new Scenery("pineTree", -10408 , -1066, 0.32, true));
                scenicList.push(new Scenery("pineTree", -9813 , -855, Math.PI, true));
                scenicList.push(new Scenery("pineTree", -10063 , -1277, Math.PI * 0.63, true));
                scenicList.push(new Scenery("pineTree", -10673 , -2910, 0, true));
                scenicList.push(new Scenery("pineTree", -11317 , -3284, Math.PI * 1.45, true));
                scenicList.push(new Scenery("pineTree", -12008 , -3076, Math.PI * 0.72, true));
                scenicList.push(new Scenery("pineTree", -12445 , -3415, - 0.39, true));
                scenicList.push(new Scenery("pineTree", -10452 , -1525, 1.98 * Math.PI, true));
                scenicList.push(new Scenery("pineTree", -10634 , -1999, Math.PI * 1.53, true));
                scenicList.push(new Scenery("pineTree", -10572 , -2536, - 0.50, true));
                scenicList.push(new Scenery("pineTree", -11802 , -3406, - Math.PI * 1.20, true));
                scenicList.push(new Scenery("pineTree", -12137 , 1018, Math.PI * 0.33, true));
                scenicList.push(new Scenery("pineTree", -13073 , -3473, - 0.77, true));
                scenicList.push(new Scenery("pineTree", -12807 , -3020, Math.PI, true));
                scenicList.push(new Scenery("pineTree", -13094 , -2621, Math.PI * 0.63, true));
                scenicList.push(new Scenery("pineTree", -12440 , -2139, 0, true));
                scenicList.push(new Scenery("pineTree", -12634 , 915, Math.PI * 1.45, true));
                scenicList.push(new Scenery("pineTree", -13149 , 1028, - Math.PI * 0.19, true));
                scenicList.push(new Scenery("pineTree", -12778 , 670, 0.19, true));
                scenicList.push(new Scenery("pineTree", -13103 , 381, - Math.PI * 1.33, true));
                scenicList.push(new Scenery("pineTree", -12750 , 128, 1.87 * Math.PI, true));
                scenicList.push(new Scenery("pineTree", -13105 , -609, - 0.25, true));
                scenicList.push(new Scenery("pineTree", -12693 , -1046, Math.PI * 1.61, true));
                scenicList.push(new Scenery("pineTree", -12994 , -1378, - Math.PI * 0.91, true));
                scenicList.push(new Scenery("pineTree", -12778 , -1823, 0.32, true));
                scenicList.push(new Scenery("pineTree", -13100 , -1978, Math.PI, true));
                scenicList.push(new Scenery("pineTree", -12501 , -2696, Math.PI * 0.63, true));
                scenicList.push(new Scenery("pineTree", -12004 , -2395, 0, true));
                scenicList.push(new Scenery("pineTree", -11552 , -2709, Math.PI * 1.45, true));
                scenicList.push(new Scenery("pineTree", -11084 , -2969, Math.PI * 0.72, true));
                scenicList.push(new Scenery("pineTree", -11138 , -2620, - 0.39, true));
                scenicList.push(new Scenery("pineTree", -11009 , -1658, 1.98 * Math.PI, true));
                scenicList.push(new Scenery("pineTree", -10875 , -1273, Math.PI * 1.53, true));
                scenicList.push(new Scenery("pineTree", -11771 , -879, - 0.50, true));
                scenicList.push(new Scenery("pineTree", -11539 , -11, - Math.PI * 1.20, true));
                scenicList.push(new Scenery("pineTree", -13155 , -213, Math.PI * 0.63, true));
                scenicList.push(new Scenery("pineTree", -12654 , -352, 0, true));
                scenicList.push(new Scenery("pineTree", -12388 , -742, Math.PI * 1.45, true));
                scenicList.push(new Scenery("pineTree", -12297 , -1401, Math.PI * 0.72, true));
                scenicList.push(new Scenery("pineTree", -12041 , -1866, - 0.39, true));
                scenicList.push(new Scenery("pineTree", -11418 , -2293, 1.98 * Math.PI, true));
                scenicList.push(new Scenery("pineTree", -11077 , -2148, Math.PI * 1.53, true));
                scenicList.push(new Scenery("pineTree", -11568 , -1864, - 0.50, true));
                scenicList.push(new Scenery("pineTree", -11381 , -1227, - Math.PI * 1.20, true));
                scenicList.push(new Scenery("pineTree", -12263 , -638, - 0.77, true));
                scenicList.push(new Scenery("pineTree", -11751 , -1497, Math.PI * 0.68, true));
                scenicList.push(new Scenery("pineTree", -12002 , -324, -0.454545, true));
                scenicList.push(new Scenery("pineTree", -12193 , 88, - 0.126, true));
                scenicList.push(new Scenery("pineTree", -12332 , 430, 0.54, true));
                scenicList.push(new Scenery("pineTree", -12017 , 569, Math.PI * 0.21, true));

                //replacement trees of the map s1e1
                scenicList.push(new Scenery("pineTree", -7583 , -3885, 1.2, true));
                scenicList.push(new Scenery("pineTree", -8065 , -3688, -3, true));
                scenicList.push(new Scenery("pineTree", -8710 , -3916, -2.5, true));
                scenicList.push(new Scenery("pineTree", -9578 , -3837, 4, true));
                scenicList.push(new Scenery("pineTree", -10111 , -3906, -5, true));
                scenicList.push(new Scenery("pineTree", -11025 , -3706, 2.6, true));
                scenicList.push(new Scenery("pineTree", -11548 , -3882, 5.2, true));
                scenicList.push(new Scenery("pineTree", -12132 , -3725, -1, true));
                scenicList.push(new Scenery("pineTree", -12700 , -3822, 6, true));
                scenicList.push(new Scenery("pineTree", -13186 , -3942, -6.3, true));
                scenicList.push(new Scenery("pineTree", -6995 , -3821, 6.995, true));
                scenicList.push(new Scenery("pineTree", -6398 , -3743, 0.23, true));
                scenicList.push(new Scenery("pineTree", -6848 , -4186, -3.678, true));
                scenicList.push(new Scenery("pineTree", -8029 , -4161, 3.1, true));
                scenicList.push(new Scenery("pineTree", -7448 , -4370, 4.5, true));
                scenicList.push(new Scenery("pineTree", -8620 , -4332, -1.7, true));
                scenicList.push(new Scenery("pineTree", -9388 , -4224, -4.62, true));
                scenicList.push(new Scenery("pineTree", -9795 , -4691, -5.9, true));
                scenicList.push(new Scenery("pineTree", -9968 , -4233, 2.3, true));
                scenicList.push(new Scenery("pineTree", -10507 , -4023, 2.5, true));
                scenicList.push(new Scenery("pineTree", -10465 , -4521, 3.98, true));
                scenicList.push(new Scenery("pineTree", -11005 , -4119, -4.1, true));
                scenicList.push(new Scenery("pineTree", -10660 , -4900, -2, true));
                scenicList.push(new Scenery("pineTree", -11008 , -4524, -4.8, true));
                scenicList.push(new Scenery("pineTree", -11744 , -4280, -1.891, true));
                scenicList.push(new Scenery("pineTree", -11263 , -4864, 5.435, true));
                scenicList.push(new Scenery("pineTree", -11857 , -4696, 3.82, true));
                scenicList.push(new Scenery("pineTree", -11717 , -5059, -6.42, true));
                scenicList.push(new Scenery("pineTree", -12329 , -4069, 2.93, true));
                scenicList.push(new Scenery("pineTree", -12245 , -4426, -4.7, true));
                scenicList.push(new Scenery("pineTree", -12174 , -4947, -2.2, true));
                scenicList.push(new Scenery("pineTree", -12232 , -5375, 5.68, true));
                scenicList.push(new Scenery("pineTree", -12808 , -5502, 1, true));
                scenicList.push(new Scenery("pineTree", -12913 , -4233, -1.5, true));
                scenicList.push(new Scenery("pineTree", -13143 , -4801, 3, true));
                scenicList.push(new Scenery("pineTree", -12722, -4981, 2.136, true));
                scenicList.push(new Scenery("pineTree", -13009 , -5159, -1.29, true));
                scenicList.push(new Scenery("pineTree", -11286 , -5204, 7, true));

                //replacement trees for the map e2.
                scenicList.push(new Scenery("pineTree", -13696, 1772, 1.3, true));
                scenicList.push(new Scenery("pineTree", -14036, 1575, 2.25, true));
                scenicList.push(new Scenery("pineTree", -14255, 1933, -5.3, true));
                scenicList.push(new Scenery("pineTree", -14548, 1709, -4.25, true));
                scenicList.push(new Scenery("pineTree", -13749, 2072, 3, true));
                scenicList.push(new Scenery("pineTree", -13699, 707, -1.3, true));
                scenicList.push(new Scenery("pineTree", -13735, 1127, -2.25, true));
                scenicList.push(new Scenery("pineTree", -14119, 917, 5.4, true));
                scenicList.push(new Scenery("pineTree", -13447, 104, 4.25, true));
                scenicList.push(new Scenery("pineTree", -14194, 574, -3.5, true));
                scenicList.push(new Scenery("pineTree", -13709, -299, 4.6, true));
                scenicList.push(new Scenery("pineTree", -13857, 269, 2, true));
                scenicList.push(new Scenery("pineTree", -14349, 210, 2.95, true));
                scenicList.push(new Scenery("pineTree", -13966, -29, -6, true));
                scenicList.push(new Scenery("pineTree", -14213, -537, -5, true));
                scenicList.push(new Scenery("pineTree", -13696, -764, 3.7, true));
                scenicList.push(new Scenery("pineTree", -14226, -958, -2, true));
                scenicList.push(new Scenery("pineTree", -13429, -1039, -2.75, true));
                scenicList.push(new Scenery("pineTree", -13757, -1282, 6.1, true));
                scenicList.push(new Scenery("pineTree", -14638, 1014, 4.85, true));
                scenicList.push(new Scenery("pineTree", -14088, -1655, -4.2, true));
                scenicList.push(new Scenery("pineTree", -13524, -1559, 3.8, true));
                scenicList.push(new Scenery("pineTree", -13681, -1845, 1.4, true));
                scenicList.push(new Scenery("pineTree", -14604, 718, 1.68, true));
                scenicList.push(new Scenery("pineTree", -14346, -203, 5.79, true));
                scenicList.push(new Scenery("pineTree", -14298, -1385, -5.34, true));
                scenicList.push(new Scenery("pineTree", -13604, -2246, -2.75, true));
                scenicList.push(new Scenery("pineTree", -14054, -2088, 6.1, true));
                scenicList.push(new Scenery("pineTree", -14422, -1919, -4.85, true));
                scenicList.push(new Scenery("pineTree", -14636, -1141, -6.2, true));
                scenicList.push(new Scenery("pineTree", -14750, -1668, -3.8, true));
                scenicList.push(new Scenery("pineTree", -14003, -2427, -1.4, true));
                scenicList.push(new Scenery("pineTree", -13513, -2573, -1.68, true));
                scenicList.push(new Scenery("pineTree", -13401, -2965, -5.79, true));
                scenicList.push(new Scenery("pineTree", -13693, -3272, 5.34, true));
                scenicList.push(new Scenery("pineTree", -13853, -3600, 2.4, true));
                scenicList.push(new Scenery("pineTree", -13898, -2842, -2.25, true));
                scenicList.push(new Scenery("pineTree", -14160, -3433, 5.6, true));
                scenicList.push(new Scenery("pineTree", -14274, -3142, -4.4, true));
                scenicList.push(new Scenery("pineTree", -14489, -2910, 2.55, true));
                scenicList.push(new Scenery("pineTree", -14605, -3349, -1.3, true));
                scenicList.push(new Scenery("pineTree", -14225, -2703, -2.25, true));
                scenicList.push(new Scenery("pineTree", -14570, -2559, -5.9, true));
                scenicList.push(new Scenery("pineTree", -14744, -2267, 4.25, true));
                scenicList.push(new Scenery("pineTree", -14315, -2276, -3.5, true));
                scenicList.push(new Scenery("pineTree", -14899, -3219, 4.6, true));
                scenicList.push(new Scenery("pineTree", -14827, -3578, 2.678, true));
                scenicList.push(new Scenery("pineTree", -14623, -727, 2.95, true));
                scenicList.push(new Scenery("pineTree", -14891, -334, -6, true));
                scenicList.push(new Scenery("pineTree", -14685, 31, -5, true));
                scenicList.push(new Scenery("pineTree", -14837, 405, 3.7, true));
                scenicList.push(new Scenery("pineTree", -14850, 1520, -2, true));
                scenicList.push(new Scenery("pineTree", -14699, 2005, -2.75, true));
                scenicList.push(new Scenery("pineTree", -13700, 2375, 6.6, true));
                scenicList.push(new Scenery("pineTree", -13454, 2883, 4.85, true));
                scenicList.push(new Scenery("pineTree", -13835, 2716, -4.2, true));
                scenicList.push(new Scenery("pineTree", -14187, 2273, 3.8, true));
                scenicList.push(new Scenery("pineTree", -14702, 2454, 1.4, true));
                scenicList.push(new Scenery("pineTree", -14278, 2555, -1.9, true));
                scenicList.push(new Scenery("pineTree", -14550, 2857, 5.82, true));
                scenicList.push(new Scenery("pineTree", -14060, 3070, 8.9, true));
                scenicList.push(new Scenery("pineTree", -14775, 3265, -3.75, true));
                scenicList.push(new Scenery("pineTree", -13615, 3272, 6.25, true));
                scenicList.push(new Scenery("pineTree", -14006, 3491, 4.45, true));
                scenicList.push(new Scenery("pineTree", -13382, 3558, -6.77, true));
                scenicList.push(new Scenery("pineTree", -13811, 3791, -3.8, true));
                scenicList.push(new Scenery("pineTree", -14545, 3577, -2.1, true));
                scenicList.push(new Scenery("pineTree", -14751, 4028, -1.68, true));
                scenicList.push(new Scenery("pineTree", -14245, 3877, -5.36, true));
                scenicList.push(new Scenery("pineTree", -14299, 4240, 6, true));
                scenicList.push(new Scenery("pineTree", -13935, 4112, -1.5, true));
                scenicList.push(new Scenery("pineTree", -13455, 4015, 1.5, true));
                scenicList.push(new Scenery("pineTree", -14828, 4400, 3.5, true));
                scenicList.push(new Scenery("pineTree", -13638, 4478, -7, true));
                scenicList.push(new Scenery("pineTree", -13579, 4760, 4.8, true));
                scenicList.push(new Scenery("pineTree", -14176, 4636, -4.15, true));
                scenicList.push(new Scenery("pineTree", -14636, 4744, 5, true));
                scenicList.push(new Scenery("pineTree", -13902, 5082, -2.64, true));
                scenicList.push(new Scenery("pineTree", -13402, 5321, 6.64, true));
                scenicList.push(new Scenery("pineTree", -13541, 5707, 0, true));
                scenicList.push(new Scenery("pineTree", -14000, 5467, 24, true));
                scenicList.push(new Scenery("pineTree", -14382, 5058, -1, true));
                scenicList.push(new Scenery("pineTree", -14904, 4994, -3.14, true));
                scenicList.push(new Scenery("pineTree", -14644, 5409, 4.326, true));
                scenicList.push(new Scenery("pineTree", -13707, 6029, 0.2, true));
                scenicList.push(new Scenery("pineTree", -14063, 6249, -1.81, true));
                scenicList.push(new Scenery("pineTree", -13699, 6445, 8.92, true));
                scenicList.push(new Scenery("pineTree", -14144, 5820, 3.14, true));
                scenicList.push(new Scenery("pineTree", -14623, 5700, -4.326, true));
                scenicList.push(new Scenery("pineTree", -14450, 6526, 2.7, true));
                scenicList.push(new Scenery("pineTree", -14642, 6116, 5.82, true));
                scenicList.push(new Scenery("pineTree", -14893, 6438, 0.726, true));

                //plants of the forest
                scenicList.push(new Scenery("neprilnePlant", -9639 , 2010, 0.11, true));
                scenicList.push(new Scenery("neprilnePlant", -10556 , -1226, -0.39, true));
                scenicList.push(new Scenery("neprilnePlant", -7891 , -297, 0.47, true));
                scenicList.push(new Scenery("stomwikPlant", -11300 , -195, -0.25, true));
                scenicList.push(new Scenery("stomwikPlant", -11227 , 3073, 0.25, true));
                scenicList.push(new Scenery("akerPlant", -8231 , 3819, 0.25, true));
                scenicList.push(new Scenery("akerPlant", -9761 , 2581, -0.35, true));
                scenicList.push(new Scenery("akerPlant", -9448 , 4934, 0.85, true));
                scenicList.push(new Scenery("pluttPlant", -11859 , 4788, -1.99, true));
                scenicList.push(new Scenery("pluttPlant", -12504 , 4632, -1.99, true));
                scenicList.push(new Scenery("tylunPlant", -12021 , 4296, 0, true));
                scenicList.push(new Scenery("akerPlant", -12083 , 3772, 0.38, true));
                scenicList.push(new Scenery("culprisPlant", -11508 , 3369, 3, true));
                scenicList.push(new Scenery("culprisPlant", -11188 , 2437, 1, true));
                scenicList.push(new Scenery("neprilnePlant", -12402 , 5071, -0.12, true));
                scenicList.push(new Scenery("akerPlant", -12137 , 6239, 0.67, true));
                scenicList.push(new Scenery("akerPlant", -7797 , 584, 2.15, true));
                scenicList.push(new Scenery("stomwikPlant", -8318 , -1954, -2.25, true));
                scenicList.push(new Scenery("pluttPlant", -7905 , -3013, Math.PI, true));
                scenicList.push(new Scenery("culprisPlant", -10581 , -3108, -2, true));
                scenicList.push(new Scenery("neprilnePlant", -11731 , -3186, 0.15, true));
                scenicList.push(new Scenery("neprilnePlant", -12416 , -3062, -0.45, true));
                scenicList.push(new Scenery("stomwikPlant", -12630 , -3084, 1.16, true));
                scenicList.push(new Scenery("akerPlant", -12526 , -2289, -2.75, true));
                scenicList.push(new Scenery("pluttPlant", -9196 , -3085, -1.99, true));
                scenicList.push(new Scenery("culprisPlant", -12176 , -1052, -1, true));
                scenicList.push(new Scenery("akerPlant", -12591 , 24, 0.44, true));
                scenicList.push(new Scenery("akerPlant", -12324 , 50, 1.26, true));
                scenicList.push(new Scenery("neprilnePlant", -12246 , -174, -2.3122512, true));
                scenicList.push(new Scenery("neprilnePlant", -8865 , 815, 1.4822332, true));
                scenicList.push(new Scenery("pluttPlant", -8549 , 5995, Math.PI, true));
                scenicList.push(new Scenery("neprilnePlant", -10044 , 5079, 1.89314221, true));
                scenicList.push(new Scenery("glinPlant", -8443 , 3193, 0, true));
                scenicList.push(new Scenery("glinPlant", -10762 , 2744, 1, true));
                scenicList.push(new Scenery("glinPlant", -9620 , -923, 0, true));
                scenicList.push(new Scenery("glinPlant", -9585 , -1144, 3, true));
                scenicList.push(new Scenery("glinPlant", -9353 , 4496, 0, true));
                scenicList.push(new Scenery("glinPlant", -9422 , 4483, -2, true));
                scenicList.push(new Scenery("glinPlant", -9447 , 4519, 2.9, true));
                scenicList.push(new Scenery("glinPlant", -9493 , 4485, 1, true));
                scenicList.push(new Scenery("glinPlant", -9195 , -1943, 0.65, true));
                scenicList.push(new Scenery("culprisPlant", -10156 , -2418, -3.212, true));
                scenicList.push(new Scenery("akerPlant", -9458 , -2568, -2.75, true));
                scenicList.push(new Scenery("glinPlant", -11587 , -2109, 2, true));
                scenicList.push(new Scenery("stomwikPlant", -11965 , -1414, 0, true));
                scenicList.push(new Scenery("glinPlant", -12768 , -1507, -1.55, true));
                scenicList.push(new Scenery("glinPlant", -9157 , 4196, -1.55, true));
                scenicList.push(new Scenery("halcifPlant", -11413 , 3822, -0.55, true));
                scenicList.push(new Scenery("cyrinthilimPlant", -11015 , 152, 1.23, true));
                scenicList.push(new Scenery("wyrPlant", -9872 , 4197, -Math.PI * 0.16, true));
                scenicList.push(new Scenery("wyrPlant", -11220 , -1408, Math.PI * 0.67, true));
                scenicList.push(new Scenery("wyrPlant", -8187 , -2331, -Math.PI * 0.92, true));
                scenicList.push(new Scenery("halcifPlant", -12291 , -2532, 0.85, true));
                scenicList.push(new Scenery("cyrinthilimPlant", -10634 , 2471, -2.34, true));

                //stumps of the "Wuncwer" woods
                scenicList.push(new Scenery("pineStumps", -6474 , 1900, 0, true));
                scenicList.push(new Scenery("pineStumps", -6496 , 548, -0.75, true));
                scenicList.push(new Scenery("pineStumps", -6191 , 2871, 1.6, true));
                scenicList.push(new Scenery("pineStumps", -7423 , 4794, 0.2, true));
                scenicList.push(new Scenery("pineStumps", -6544 , 5895, -0.9, true));
                scenicList.push(new Scenery("pineStumps", -6659 , 4000, 0.23, true));

                scenicList.push(new Scenery("pineStumps", -6248 , 4985, -1.6, true));
                scenicList.push(new Scenery("pineStumps", -5852 , -329, 0, true));
                scenicList.push(new Scenery("pineStumps", -6818 , -650, -1.4, true));
                scenicList.push(new Scenery("pineStumps", -7003 , -1749, 0, true));
                scenicList.push(new Scenery("pineStumps", -6395 , -2816, -0.88, true));
                scenicList.push(new Scenery("pineStumps", -7911 , 5498, -0.3, true));


                change = "e1";
            }
        }
        else if (region == "n1e4")
        {
            if (change != "n1e4")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                generator2(562319, 545, 54153, 8432503, 3231101, 2, -34023, 16529);
                cropper(-40729, 10759, -43972, 7515, true, true);

                scenicList.push(new Scenery("pineTree", -34992 , 6702, 6, true));
                scenicList.push(new Scenery("pineTree", -34384, 6421, 5.3, true));

                scenicList.push(new Scenery("erguerPlant", -41418, 8998, 4, true));
                scenicList.push(new Scenery("techiPlant", -41417, 6952, 1, true));

                ArtificialIntelligenceAccess.push(new Unit(-41598, 8028, "Frich", false, "fuzzball"));
                ArtificialIntelligenceAccess.push(new Unit(-41211, 8832, "Frich", false, "fuzzball"));

                //e-3 trees (SouthWest)
                scenicList.push(new Scenery("pineTree", -24463 , 5090, 5.3, true));
                scenicList.push(new Scenery("pineTree", -24052 , 5813, -2, true));
                scenicList.push(new Scenery("pineTree", -23742 , 6022, 1.1, true));
                scenicList.push(new Scenery("pineTree", -24244 , 6281, -1.7, true));
                scenicList.push(new Scenery("pineTree", -24562, 6011, 4.9, true));
                scenicList.push(new Scenery("pineTree", -25076 , 6479, 6.8, true));
                scenicList.push(new Scenery("pineTree", -25651 , 6162, -3.3, true));
                scenicList.push(new Scenery("pineTree", -25213 , 5786, 4.7, true));
                scenicList.push(new Scenery("pineTree", -24775 , 5505, -1.5, true));
                scenicList.push(new Scenery("pineTree", -24165 , 5375, 2.25, true));
                scenicList.push(new Scenery("pineTree", -32700 , 5990, -9, true));
                scenicList.push(new Scenery("pineTree", -32391 , 6232, 3.4, true));
                scenicList.push(new Scenery("pineTree", -32478 , 6524, -5.443, true));
                scenicList.push(new Scenery("pineTree", -32925 , 6310, 7.75, true));
                scenicList.push(new Scenery("pineTree", -33352 , 6480, -3.95, true));
                scenicList.push(new Scenery("pineTree", -33239 , 6077, -2.39239, true));
                scenicList.push(new Scenery("pineTree", -33706 , 6188, 10.45, true));
                scenicList.push(new Scenery("pineTree", -33551 , 5652, 12.85, true));
                scenicList.push(new Scenery("pineTree", -32851 , 5714, -13.1, true));

                ArtificialIntelligenceAccess.push(new Unit(-42341.93945987805, 10715.218195508834, "Waanti", false, "Canryacht1"));
                ArtificialIntelligenceAccess.push(new Unit(-42133.79923984253, 10661.809633262978, "Waanti", true, "Canryacht2"));
                ArtificialIntelligenceAccess.push(new Unit(-42239.95717125928, 10752.772185202512, "Waanti", "baby", "Canryacht3"));

                ArtificialIntelligenceAccess.push(new Unit(-41145.67609806021, 11859.233083642363, "WinterWolf", false, "whtppleinsnow1"));
                ArtificialIntelligenceAccess.push(new Unit(-41228.85178298561, 11959.64213322798, "WinterWolf", false, "whtppleinsnow2"));
                ArtificialIntelligenceAccess.push(new Unit(-41319.006783854995, 11929.026185482253, "WinterWolf", false, "whtppleinsnow3"));


                ArtificialIntelligenceAccess.push(new Unit(-42975.68388651433, 14270.228217383341, "Glutid", false, "slkman1", {patrolStops: 3, patrolLoop: true, route:[[-40879.86387976736, 15970.488651858013], [-42355.75462604215, 13562.23685480315], [-42975.68388651433, 14270.228217383341]]}));


                scenicList.push(new Scenery("bushkaPlant", -42288.61172579082, 12361.75050432576, 4, true));

                scenicList.push(new Scenery("stone", -40993.044966260626, 13671.929519157078, 6, 1, 2));



                change = "n1e4";
            }
        }
        else if (region == "s1e4")
        {
            if (change != "s1e4")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //e-5
                generator2(897, 27418911, 421534281, 8548903, 119, 1, -44150, -3266, true);
                cropper(-44150, -3266, -45175, -3598, true, true);

                for (var i = scenicList.length -1; i >= 0; i--)
                {
                    if (scenicList[i].type != "pineTree")
                    {
                        scenicList.splice(i, 1);
                    }
                }

                //e-4
                generator2(194838973478567290593490753765777, 874189889999927462711, 21264612647782889982392365641534281, 4291914929422375482332503, 3339769, 1, -40882, 3192, true);
                cropper(-40882, -3192, -44012, -3634, true, true);

                //s-1-e-4
                generator2(53765777, 99, 213974281, 332503, 100101000, 1, -33959, -3720);
                cropper(-40435, -3624, -44055, -13911, true, true);

                //s-1-e-5
                generator2(789678567456345678, 87675674567589, 23453467578, 87967857598607, 775764427, 1, -44316, -3916, true);
                cropper(-44316, -3916, -46384, -13818, true, true);

                scenicList.push(new Scenery("pineTree", -44213, -12679, -2.7, true));

                //REGION CREATION
                //Build AI Units


                //creatures
                //ArtificialIntelligenceAccess.push(new Unit(808, -11538, "Naaprid", false, "Hueso"));


                //Scenery
                //scenicList.push(new Scenery("techiPlant", 2702 , -12061, -8.5, true));



                change = "s1e4";
            }
        }
        else if (region == "s1e5")
        {
            if (change != "s1e5")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];
                //e-5
                generator2(897, 27418911, 421534281, 8548903, 119, 1, -44150, -3266, true);
                cropper(-44150, -3266, -45175, -3598, true, true);

                for (var i = scenicList.length -1; i >= 0; i--)
                {
                    if (scenicList[i].type != "pineTree")
                    {
                        scenicList.splice(i, 1);
                    }
                }

                //s-1-e-5
                generator2(789678567456345678, 87675674567589, 23453467578, 87967857598607, 775764427, 1, -44316, -3916);
                cropper(-44316, -3916, -46384, -13818, true, true);

                generator2(194838973478567290593490753765777, 874189889999927462711, 21264612647782889982392365641534281, 4291914929422375482332503, 3339769, 1, -40882, 3192, true);
                cropper(-40882, -3192, -44012, -3634, true, true);

                generator2(53765777, 99, 213974281, 332503, 100101000, 1, -33959, -3720, true);
                cropper(-40435, -3624, -44055, -13911, true, true);

                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--)
                {
                    if (ArtificialIntelligenceAccess[i].X < -45609 && ArtificialIntelligenceAccess[i].type != "Shehid" && ArtificialIntelligenceAccess[i].type != "Lizard" && !ArtificialIntelligenceAccess[i].guarantee && ArtificialIntelligenceAccess[i].team != "player")
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                    }
                }

                //s - 1 - e - 5 east plains
                generator(768528794, 3465768798, 8976875, 123, 222, 2, -47147, -4369); //eastern grasslands in map s-1-e-5
                cropper(-47147, -4369, -50955, -13249, true, true);

                for (var i = ArtificialIntelligenceAccess.length -1; i >= 0; i--)
                {
                    if (ArtificialIntelligenceAccess[i].type == "Peacock")
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                    }
                }


                scenicList.push(new Scenery("pineTree", -44438 , -5347, 1, true));
                scenicList.push(new Scenery("pineTree", -46167 , -4835, 5.2, true));
                scenicList.push(new Scenery("pineTree", -46035 , -6130, 3.8, true));

                scenicList.push(new Scenery("pineTree", -44213, -12679, -2.7, true));


                scenicList.push(new Scenery("pineTree", -43731 , -8082, 2.1, true));
                scenicList.push(new Scenery("pineTree", -43838 , -8498, -4, true));
                scenicList.push(new Scenery("pineTree", -44032 , -8311, 5.5, true));

                if (uniqueChars.barracoLDS == true)
                {
                    scenicList.push(new Scenery("tent", -44405, -7140, (0.25 * Math.PI), true));
                    scenicList.push(new Scenery("tent", -43694, -7307, (-0.25 * Math.PI), true));
                    scenicList.push(new Scenery("tent", -43393, -7708, (-0.75 * Math.PI), true));
                    scenicList.push(new Scenery("tent", -43777, -7927, (1 * Math.PI), true));
                    scenicList.push(new Scenery("tent", -44142, -8177, (1.1 * Math.PI), true));
                    scenicList.push(new Scenery("tent", -44600, -8088, (-1.25 * Math.PI), true));
                    scenicList.push(new Scenery("tent", -44632, -7616, (0.25 * Math.PI), true));
                    scenicList.push(new Scenery("tent", -44414, -7455, (0.38 * Math.PI), true));

                    ArtificialIntelligenceAccess.push(new Unit(-44372, -7184, "Soldier", false, "Ser Barraco Kein the Bandit Chieftain", {race: "Nirwaden", faction: "none", con: 30, speed: 1.05, outfit: ["barracoPlateArmour", 20], weapon: ["estoc", [4, 12], 34, 17, 3.25], ranged: [false, "steelBolt", 15, 2200, 18, 16 /3, 0, "none", 3], patrolStops: 1, patrolLoop: false, route:[[-44347, -7199]]}));

                    if (quests.manOfThePeopleMen > 0)
                    {
                        if (quests.manOfThePeopleMen == 1)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-44265, -7013, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 5, speed: 1.1, outfit: ["boarArmour", 4], weapon: ["crossbow", [0, 0], 0, 21, 3.4], ranged: [true, "steelBolt", 17, 2200, 19, 18 /3, 0, "none", 3], patrolStops: 1, patrolLoop: false, route:[[-44239, -7057]]}));
                        }
                        else if (quests.manOfThePeopleMen == 2)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-44564, -7548, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 5, speed: 1.1, outfit: ["boarArmour", 4], weapon: ["crossbow", [0, 0], 0, 21, 3.4], ranged: [true, "steelBolt", 17, 2200, 19, 18 /3, 0, "none", 3], patrolStops: 1, patrolLoop: false, route:[[-44498, -7556]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-43473, -7641, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 6, speed: 1.1, outfit: ["boarArmour", 5], weapon: ["crossbow", [0, 0], 0, 21, 3.4], ranged: [true, "steelBolt", 18, 2200, 18, 17 /3, 0, "none", 3.5], patrolStops: 1, patrolLoop: false, route:[[-43486, -7613]]}));
                        }
                        else if (quests.manOfThePeopleMen == 3)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-43679, -7648, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 2, speed: 1.28, outfit: ["nirwadenGambeson", 1], weapon: ["sickle", [2, 2], 0, 21, 1.15], ranged: [false, "steelBolt", 15, 2200, 18, 16 /3, 0, "none", 3], patrolStops: 1, patrolLoop: false, route:[[-43718, -7645]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-44564, -7548, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 5, speed: 1.1, outfit: ["boarArmour", 4], weapon: ["crossbow", [0, 0], 0, 21, 3.4], ranged: [true, "steelBolt", 17, 2200, 19, 18 /3, 0, "none", 3], patrolStops: 1, patrolLoop: false, route:[[-44498, -7556]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-43473, -7641, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 6, speed: 1.1, outfit: ["boarArmour", 5], weapon: ["crossbow", [0, 0], 0, 21, 3.4], ranged: [true, "steelBolt", 18, 2200, 18, 17 /3, 0, "none", 3.5], patrolStops: 1, patrolLoop: false, route:[[-43486, -7613]]}));
                        }
                        else if (quests.manOfThePeopleMen == 4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-43770, -7219, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 4, speed: 1.19, outfit: ["nirwadenGambeson", 1], weapon: ["nirineseSabre", [6, 4], 0, 24, 1.27], ranged: [false, "steelBolt", 15, 2200, 18, 16 /3, 0, "none", 3], patrolStops: 0, patrolLoop: false, route:[[-43718, -7645]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-43679, -7648, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 2, speed: 1.28, outfit: ["nirwadenGambeson", 1], weapon: ["sickle", [2, 2], 0, 21, 1.15], ranged: [false, "steelBolt", 15, 2200, 18, 16 /3, 0, "none", 3], patrolStops: 1, patrolLoop: false, route:[[-43718, -7645]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-44564, -7548, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 5, speed: 1.1, outfit: ["boarArmour", 4], weapon: ["crossbow", [0, 0], 0, 21, 3.4], ranged: [true, "steelBolt", 17, 2200, 19, 18 /3, 0, "none", 3], patrolStops: 1, patrolLoop: false, route:[[-44498, -7556]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-43473, -7641, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 6, speed: 1.1, outfit: ["boarArmour", 5], weapon: ["crossbow", [0, 0], 0, 21, 3.4], ranged: [true, "steelBolt", 18, 2200, 18, 17 /3, 0, "none", 3.5], patrolStops: 1, patrolLoop: false, route:[[-43486, -7613]]}));
                        }
                        else if (quests.manOfThePeopleMen == 5)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-43770, -7219, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 4, speed: 1.19, outfit: ["nirwadenGambeson", 1], weapon: ["nirineseSabre", [6, 4], 0, 24, 1.27], ranged: [false, "steelBolt", 15, 2200, 18, 16 /3, 0, "none", 3], patrolStops: 0, patrolLoop: false, route:[[-43718, -7645]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-43679, -7648, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 2, speed: 1.28, outfit: ["nirwadenGambeson", 1], weapon: ["sickle", [2, 2], 0, 21, 1.15], ranged: [false, "steelBolt", 15, 2200, 18, 16 /3, 0, "none", 3], patrolStops: 1, patrolLoop: false, route:[[-43718, -7645]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-44564, -7548, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 5, speed: 1.1, outfit: ["boarArmour", 4], weapon: ["crossbow", [0, 0], 0, 21, 3.4], ranged: [true, "steelBolt", 17, 2200, 19, 18 /3, 0, "none", 3], patrolStops: 1, patrolLoop: false, route:[[-44498, -7556]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-43473, -7641, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 6, speed: 1.1, outfit: ["boarArmour", 5], weapon: ["crossbow", [0, 0], 0, 21, 3.4], ranged: [true, "steelBolt", 18, 2200, 18, 17 /3, 0, "none", 3.5], patrolStops: 1, patrolLoop: false, route:[[-43486, -7613]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-44434, -7321, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 6, speed: 1.1, outfit: ["boarArmour", 4.5], weapon: ["crossbow", [0, 0], 0, 21, 3.4], ranged: [true, "steelBolt", 16, 2200, 17, 16 /3, 0, "none", 4.1], patrolStops: 1, patrolLoop: false, route:[[-44353, -7333]]}));
                        }
                        else if (quests.manOfThePeopleMen == 6)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-43770, -7219, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 4, speed: 1.19, outfit: ["nirwadenGambeson", 1], weapon: ["nirineseSabre", [6, 4], 0, 24, 1.27], ranged: [false, "steelBolt", 15, 2200, 18, 16 /3, 0, "none", 3], patrolStops: 0, patrolLoop: false, route:[[-43718, -7645]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-44720, -7729, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 3, speed: 1.28, outfit: ["nirwadenGambeson", 1.5], weapon: ["nirineseSpear", [3, 4], 10, 37, 1.4], ranged: [false, "steelBolt", 15, 2200, 18, 16 /3, 0, "none", 3], patrolStops: 1, patrolLoop: false, route:[[-44810, -7728]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-43679, -7648, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 2, speed: 1.28, outfit: ["nirwadenGambeson", 1], weapon: ["sickle", [2, 2], 0, 21, 1.15], ranged: [false, "steelBolt", 15, 2200, 18, 16 /3, 0, "none", 3], patrolStops: 1, patrolLoop: false, route:[[-43718, -7645]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-44564, -7548, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 5, speed: 1.1, outfit: ["boarArmour", 4], weapon: ["crossbow", [0, 0], 0, 21, 3.4], ranged: [true, "steelBolt", 17, 2200, 19, 18 /3, 0, "none", 3], patrolStops: 1, patrolLoop: false, route:[[-44498, -7556]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-43473, -7641, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 6, speed: 1.1, outfit: ["boarArmour", 5], weapon: ["crossbow", [0, 0], 0, 21, 3.4], ranged: [true, "steelBolt", 18, 2200, 18, 17 /3, 0, "none", 3.5], patrolStops: 1, patrolLoop: false, route:[[-43486, -7613]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-44434, -7321, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 6, speed: 1.1, outfit: ["boarArmour", 4.5], weapon: ["crossbow", [0, 0], 0, 21, 3.4], ranged: [true, "steelBolt", 16, 2200, 17, 16 /3, 0, "none", 4.1], patrolStops: 1, patrolLoop: false, route:[[-44353, -7333]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-43770, -7219, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 4, speed: 1.19, outfit: ["nirwadenGambeson", 1], weapon: ["nirineseSabre", [6, 4], 0, 24, 1.27], ranged: [false, "steelBolt", 15, 2200, 18, 16 /3, 0, "none", 3], patrolStops: 0, patrolLoop: false, route:[[-43718, -7645]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-44720, -7729, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 3, speed: 1.28, outfit: ["nirwadenGambeson", 1.5], weapon: ["nirineseSpear", [3, 4], 10, 37, 1.4], ranged: [false, "steelBolt", 15, 2200, 18, 16 /3, 0, "none", 3], patrolStops: 1, patrolLoop: false, route:[[-44810, -7728]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-43870, -8044, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 3, speed: 1.28, outfit: ["nirwadenGambeson", 1.5], weapon: ["nirineseSpear", [3, 4], 10, 37, 1.4], ranged: [false, "steelBolt", 15, 2200, 18, 16 /3, 0, "none", 3], patrolStops: 1, patrolLoop: false, route:[[-43899, -8049]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-43679, -7648, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 2, speed: 1.28, outfit: ["nirwadenGambeson", 1], weapon: ["sickle", [2, 2], 0, 21, 1.15], ranged: [false, "steelBolt", 15, 2200, 18, 16 /3, 0, "none", 3], patrolStops: 1, patrolLoop: false, route:[[-43718, -7645]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-44564, -7548, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 5, speed: 1.1, outfit: ["boarArmour", 4], weapon: ["crossbow", [0, 0], 0, 21, 3.4], ranged: [true, "steelBolt", 17, 2200, 19, 18 /3, 0, "none", 3], patrolStops: 1, patrolLoop: false, route:[[-44498, -7556]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-43473, -7641, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 6, speed: 1.1, outfit: ["boarArmour", 5], weapon: ["crossbow", [0, 0], 0, 21, 3.4], ranged: [true, "steelBolt", 18, 2200, 18, 17 /3, 0, "none", 3.5], patrolStops: 1, patrolLoop: false, route:[[-43486, -7613]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-44434, -7321, "Soldier", false, "Barracano", {race: "Nirwaden", faction: "none", con: 6, speed: 1.1, outfit: ["boarArmour", 4.5], weapon: ["crossbow", [0, 0], 0, 21, 3.4], ranged: [true, "steelBolt", 16, 2200, 17, 16 /3, 0, "none", 4.1], patrolStops: 1, patrolLoop: false, route:[[-44353, -7333]]}));
                        }
                    }
                }

                if (quests.breakawaysQuest == true && uniqueChars.raldoLDS == true)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-45614, -9536, "Soldier", false, "Raldo the Long", {race: "Nirwaden", faction: "hostile", con: 7, speed: 1.34, outfit: ["boarArmour", 4.5], weapon: ["nirineseSpear", [5, 4], 11, 38, 1.3], ranged: [false, "steelBolt", 15, 2200, 18, 16 /3, 0, "none", 3], patrolStops: 1, patrolLoop: false, route:[[-45625, -9552]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-46118, -9720, "Soldier", false, "Breakaway Bandit", {race: "Nirwaden", faction: "hostile", con: 2, speed: 1, outfit: ["boarArmour", 4], weapon: ["crossbow", [0, 0], 0, 21, 3.4], ranged: [true, "steelBolt", 15, 2200, 17, 16 /3, 0, "none", 4], patrolStops: 0, patrolLoop: false, route:[[-44498, -7556]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-45586, -9803, "Soldier", false, "Breakaway Bandit", {race: "Nirwaden", faction: "hostile", con: 4, speed: 1.15, outfit: ["nirwadenGambeson", 1.5], weapon: ["sickle", [3, 3], 0, 23, 1.2], ranged: [false, "steelBolt", 15, 2200, 18, 16 /3, 0, "none", 3], patrolStops: 1, patrolLoop: false, route:[[-45576, -9824]]}));
                    scenicList.push(new Scenery("tent", -45572, -9451, (-0.25 * Math.PI), true));
                    scenicList.push(new Scenery("tent", -45537, -9600, (-0.5 * Math.PI), true));
                    scenicList.push(new Scenery("tent", -45754, -9749, (0.5 * Math.PI), true));
                }

                scenicList.push(new Scenery("cave", -47307, -8789, 0, [854, 297], "arcusMine"));
                scenicList.push(new Scenery("sign", -47221, -8821,  2 / Math.PI - 0.6, 1, "Arcus Co. Mine"));


                change = "s1e5";
            }
        }
        else if (region == "s1") //Y > 6290 && Y < 32370
        {
            if (change != "s1")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                var bushornot = Math.floor(Math.random() * 9);
                if (bushornot == 1)
                {
                    ArtificialIntelligenceAccess.push(new Unit(2977, -4894, "Grush", false, "turtlebob"));
                    ArtificialIntelligenceAccess.push(new Unit(3082, -4954, "Grush", "baby", "turtletim"));
                    ArtificialIntelligenceAccess.push(new Unit(5669, -4701, "Grush", false, "turtledahlia"));
                    scenicList.push(new Scenery("butterMellowPlant", -1071 , -10780, 12.6, true));
                }
                else
                {
                    scenicList.push(new Scenery("techiPlant", -1071 , -10780, 12.6, true));
                    scenicList.push(new Scenery("grushweedPlant", 2977, -4894, 0, 1)); //for grush weed the last number determines its size multiplier.
                    scenicList.push(new Scenery("grushweedPlant", 3082, -4954, 0, 0.6)); //for grush weed the last number determines its size multiplier.
                    scenicList.push(new Scenery("grushweedPlant", 5669, -4701, 0, 1)); //for grush weed the last number determines its size multiplier.
                }

                if (bushornot == 2)
                {
                    ArtificialIntelligenceAccess.push(new Unit(5612, -4955, "Grush", false, "turtlejoe"));
                    ArtificialIntelligenceAccess.push(new Unit(5885, -5133, "Grush", "baby", "turtlejimmy"));
                    ArtificialIntelligenceAccess.push(new Unit(765, -7802, "Grush", "baby", "turtletommy"));
                    ArtificialIntelligenceAccess.push(new Unit(704, -7814, "Grush", "baby", "turtletimmy"));
                    ArtificialIntelligenceAccess.push(new Unit(616, -7845, "Grush", "baby", "turtledarly"));
                    ArtificialIntelligenceAccess.push(new Unit(728, -7995, "Grush", false, "turtlejohn"));
                    scenicList.push(new Scenery("palntPlant", -1544 , -7933, -2.1, true));
                    ArtificialIntelligenceAccess.push(new Unit(1658, -7708, "Naaprid", false, "dopra"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(3008, -7333, "Naaprid", false, "opra"));
                    scenicList.push(new Scenery("palntPlant", -1544 , -7933, -2.1, true));
                    scenicList.push(new Scenery("grushweedPlant", 728, -7995, 2.5, 1)); //for grush weed the last number determines its size multiplier.
                    scenicList.push(new Scenery("grushweedPlant", 704, -7814, 2.5, 0.6)); //for grush weed the last number determines its size multiplier.
                    scenicList.push(new Scenery("grushweedPlant", 765, -7802, 0, 0.6)); //for grush weed the last number determines its size multiplier.
                    scenicList.push(new Scenery("grushweedPlant", 616, -7845, -1, 0.6)); //for grush weed the last number determines its size multiplier.
                    scenicList.push(new Scenery("grushweedPlant", 5612, -4955, 0, 1)); //for grush weed the last number determines its size multiplier.
                    scenicList.push(new Scenery("grushweedPlant", 5885, -5133, 0, 0.6)); //for grush weed the last number determines its size multiplier.
                }

                if (bushornot == 7)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-1294, -7184, "Grush", false, "turtlejamz"));
                    scenicList.push(new Scenery("grushweedPlant", -1495, -7108, 0, 1)); //for grush weed the last number determines its size multiplier.
                    ArtificialIntelligenceAccess.push(new Unit(5798, -4989, "Grush", true, "turtleTrudge"));
                    ArtificialIntelligenceAccess.push(new Unit(1345, -13190, "Grush", false, "turtleBudge"));
                    scenicList.push(new Scenery("palntPlant", -1387 , -10444, 2.2, true));
                    ArtificialIntelligenceAccess.push(new Unit(-2293, -9072, "Evrak", true, "evil"));
                }
                else
                {
                    scenicList.push(new Scenery("grushweedPlant", -1294, -7184, 0, 1)); //for grush weed the last number determines its size multiplier.
                    ArtificialIntelligenceAccess.push(new Unit(-1495, -7108, "Grush", false, "turtlejamza"));
                    ArtificialIntelligenceAccess.push(new Unit(-2293, -9072, "Evrak", false, "evil"));
                    scenicList.push(new Scenery("itlinPlant", -1387 , -10444, -2.2, true));
                    scenicList.push(new Scenery("grushweedPlant", 1345, -13190, 0, 1.425)); //for grush weed the last number determines its size multiplier.
                    scenicList.push(new Scenery("grushweedPlant", 5798, -4989, 2, 1.6)); //for grush weed the last number determines its size multiplier.
                }

                if (bushornot == 5)
                {
                    ArtificialIntelligenceAccess.push(new Unit(1217, -8134, "Grush", true, "turtledarla"));
                    ArtificialIntelligenceAccess.push(new Unit(5593, -4493, "Grush", true, "turtletom"));
                    ArtificialIntelligenceAccess.push(new Unit(2253, -12972, "Grush", false, "turtletyler"));
                    scenicList.push(new Scenery("butterMellowPlant", -597 , -5256, 0, true));
                    ArtificialIntelligenceAccess.push(new Unit(1080, -13248, "Grush", "baby", "turtletonk"));
                    ArtificialIntelligenceAccess.push(new Unit(-1838, -11241, "Frich", "massive", "superpuper"));
                    ArtificialIntelligenceAccess.push(new Unit(1486, -13498, "Golgemoff", true, "Sweetling"));
                }
                else
                {
                    scenicList.push(new Scenery("grushweedPlant", 2253, -12972, 6.5, 1)); //for grush weed the last number determines its size multiplier.
                    scenicList.push(new Scenery("grushweedPlant", 1080, -13248, 0.6, 0.6)); //for grush weed the last number determines its size multiplier.
                    scenicList.push(new Scenery("techiPlant", -597 , -5256, 0, true));
                    scenicList.push(new Scenery("grushweedPlant", 1217, -8134, 1, 1.5)); //for grush weed the last number determines its size multiplier.
                    scenicList.push(new Scenery("grushweedPlant", 5593, -4493, 0, 1.5)); //for grush weed the last number determines its size multiplier.
                }

                //Friches in the plains
                ArtificialIntelligenceAccess.push(new Unit(4510, -6220, "Frich", true, "sweatypie"));
                ArtificialIntelligenceAccess.push(new Unit(4676, -6326, "Frich", false, "manospequenas"));
                ArtificialIntelligenceAccess.push(new Unit(922, -6521, "Frich", true, "paydulce"));
                ArtificialIntelligenceAccess.push(new Unit(819, -6556, "Frich", false, "piespequenos"));
                ArtificialIntelligenceAccess.push(new Unit(1006, -6779, "Frich", false, "culo"));
                ArtificialIntelligenceAccess.push(new Unit(1048, -6976, "Frich", true, "verga"));
                ArtificialIntelligenceAccess.push(new Unit(912, -6945, "Frich", false, "huelefeo"));
                ArtificialIntelligenceAccess.push(new Unit(492, -7087, "Frich", false, "mesamesa"));
                ArtificialIntelligenceAccess.push(new Unit(-818, -11490, "Frich", true, "superculo"));
                ArtificialIntelligenceAccess.push(new Unit(-901, -11511, "Frich", true, "superverga"));
                ArtificialIntelligenceAccess.push(new Unit(-870, -11615, "Frich", true, "superfeo"));
                ArtificialIntelligenceAccess.push(new Unit(-989, -11564, "Frich", false, "sillasilla"));
                ArtificialIntelligenceAccess.push(new Unit(-1706, -11155, "Frich", false, "superfea"));
                ArtificialIntelligenceAccess.push(new Unit(840, -9459, "Frich", false, "superfly"));
                ArtificialIntelligenceAccess.push(new Unit(5050, -5181, "Frich", false, "chal"));
                ArtificialIntelligenceAccess.push(new Unit(4779, -5070, "Frich", false, "chol"));
                ArtificialIntelligenceAccess.push(new Unit(4909, -4986, "Frich", false, "chil"));
                ArtificialIntelligenceAccess.push(new Unit(-308, -4190, "Frich", true, "cholera"));
                ArtificialIntelligenceAccess.push(new Unit(1175, -4670, "Frich", false, "chale"));
                ArtificialIntelligenceAccess.push(new Unit(1274, -4852, "Frich", false, "chole"));
                ArtificialIntelligenceAccess.push(new Unit(1166, -4813, "Frich", false, "chile"));
                ArtificialIntelligenceAccess.push(new Unit(-914, -4703, "Frich", true, "argentina"));
                ArtificialIntelligenceAccess.push(new Unit(2819, -5572, "Frich", true, "bolivia"));
                ArtificialIntelligenceAccess.push(new Unit(6325, -4420, "Frich", false, "chule"));


                //Golgemoffs crawling through your nightmares...
                /*var golgSz = "baby";

                 if (currentSeason == "Frost")
                 {
                 golgSz = false;
                 }
                 if (currentSeason == "Bounty")
                 {
                 golgSz = true;
                 }
                 if (currentSeason != "Bright")
                 {
                 for (var i = 0; i < 5; i++)
                 {
                 for (var j = 0; j < 5; j++)
                 {
                 var rdmX = ((30 * Math.random()) - 15) * i;
                 var rdmY = ((30 * Math.random()) - 15) * j;
                 ArtificialIntelligenceAccess.push(new Unit(3337 + rdmX, -5504 + rdmY, "Golgemoff", golgSz, "Teek", {patrolStops: 5, patrolLoop: true, route:[[3617 + rdmX, -7861 + rdmY], [529 + rdmX, -10411 + rdmY], [-698 + rdmX, -8887 + rdmY], [-2232 + rdmX, -8130 + rdmY], [3337 + rdmX, -5504 + rdmY]]}));
                 }
                 }
                 }*/
                ArtificialIntelligenceAccess.push(new Unit(4526, -5718, "Golgemoff", false, "Keek", {patrolStops: 7, patrolLoop: true, route:[[6981, -6924], [6042, -5080], [5943, -4895], [5813, -4301], [-3119, -4307], [-1572, -6834], [4526, -5718]]}));

                //Evrak and Avrak dominating the plains!!!
                ArtificialIntelligenceAccess.push(new Unit(577, -5839, "Evrak", false, "elvin"));
                ArtificialIntelligenceAccess.push(new Unit(727, -12342, "Evrak", false, "evin"));
                ArtificialIntelligenceAccess.push(new Unit(3273, -9944, "Evrak", false, "evarin"));
                ArtificialIntelligenceAccess.push(new Unit(5974, -7025, "Evrak", false, "evarlin"));
                ArtificialIntelligenceAccess.push(new Unit(3584, -12245, "Evrak", true, "Telvarin"));
                ArtificialIntelligenceAccess.push(new Unit(-1799, -12734, "Avrak", true, "alkra"));
                ArtificialIntelligenceAccess.push(new Unit(-1235, -12105, "Avrak", false, "alka"));
                ArtificialIntelligenceAccess.push(new Unit(4638, -5615, "Avrak", false, "alkro"));
                ArtificialIntelligenceAccess.push(new Unit(1298, -10506, "Avrak", false, "alko"));
                ArtificialIntelligenceAccess.push(new Unit(942, -10185, "Avrak", false, "alkii"));
                ArtificialIntelligenceAccess.push(new Unit(5611, -10601, "Avrak", true, "alkrii"));
                ArtificialIntelligenceAccess.push(new Unit(3873, -7008, "Avrak", false, "alke"));

                //A few varns prowl the fields!!!
                ArtificialIntelligenceAccess.push(new Unit(782, -9091, "Varn", true, "elp"));
                ArtificialIntelligenceAccess.push(new Unit(703, -9124, "Varn", true, "h"));
                ArtificialIntelligenceAccess.push(new Unit(451, -9021, "Varn", true, "mepl"));
                ArtificialIntelligenceAccess.push(new Unit(-2228, -10171, "Varn", false, "ease"));
                ArtificialIntelligenceAccess.push(new Unit(-813, -8554, "Varn", false, "coolBouy"));
                ArtificialIntelligenceAccess.push(new Unit(-2474, -4294, "Varn", true, "ent"));
                ArtificialIntelligenceAccess.push(new Unit(-2860, -4164, "Varn", true, "artm"));
                ArtificialIntelligenceAccess.push(new Unit(-2301, -4213, "Varn", false, "dep"));


                //Anters!!!
                scenicList.push(new Scenery("anterHill", 400, -6000, 0, true));
                scenicList.push(new Scenery("anterHill", 170, -10453, 2.7, true));
                scenicList.push(new Scenery("anterHill", 5691, -13164, -5.7, true));

                //Ardils!!!
                ArtificialIntelligenceAccess.push(new Unit(-1190, -9867, "Ardil", true, "Butklii"));
                ArtificialIntelligenceAccess.push(new Unit(-232, -9270, "Ardil", false, "Butkliil"));
                ArtificialIntelligenceAccess.push(new Unit(15, -9447, "Ardil", true, "Butkliik"));
                ArtificialIntelligenceAccess.push(new Unit(138, -13222, "Ardil", false, "Buttlick"));
                ArtificialIntelligenceAccess.push(new Unit(-2433, -12028, "Ardil", true, "Buklii"));
                ArtificialIntelligenceAccess.push(new Unit(5792, -5342, "Ardil", false, "Buliil"));
                ArtificialIntelligenceAccess.push(new Unit(2934, -5905, "Ardil", false, "Buliilk"));
                ArtificialIntelligenceAccess.push(new Unit(4273, -9773, "Ardil", true, "Buklii"));
                ArtificialIntelligenceAccess.push(new Unit(2361, -8858, "Ardil", false, "Bullkilt"));
                ArtificialIntelligenceAccess.push(new Unit(3644, -5757, "Ardil", false, "Bullkilp"));

                //Naaprids grazing!!!
                ArtificialIntelligenceAccess.push(new Unit(808, -11538, "Naaprid", false, "Hueso"));
                ArtificialIntelligenceAccess.push(new Unit(480, -11396, "Naaprid", false, "Hueco"));
                ArtificialIntelligenceAccess.push(new Unit(569, -11716, "Naaprid", false, "Luto"));
                ArtificialIntelligenceAccess.push(new Unit(805, -11862, "Naaprid", false, "Pena"));
                ArtificialIntelligenceAccess.push(new Unit(1038, -11781, "Naaprid", "baby", "Huesito"));
                ArtificialIntelligenceAccess.push(new Unit(924, -11594, "Naaprid", "baby", "Huequita"));
                ArtificialIntelligenceAccess.push(new Unit(254, -11037, "Naaprid", true, "Sufrimiento"));
                ArtificialIntelligenceAccess.push(new Unit(475, -12180, "Naaprid", true, "Agobio"));
                ArtificialIntelligenceAccess.push(new Unit(5017, -8591, "Naaprid", false, "ad"));
                ArtificialIntelligenceAccess.push(new Unit(4740, -8444, "Naaprid", false, "lad"));
                ArtificialIntelligenceAccess.push(new Unit(4813, -8159, "Naaprid", false, "dad"));
                ArtificialIntelligenceAccess.push(new Unit(5077, -8224, "Naaprid", false, "Pad"));
                ArtificialIntelligenceAccess.push(new Unit(4350, -8271, "Naaprid", false, "Pod"));
                ArtificialIntelligenceAccess.push(new Unit(4483, -8366, "Naaprid", "baby", "rod"));
                ArtificialIntelligenceAccess.push(new Unit(4933, -8304, "Naaprid", "baby", "claud"));
                ArtificialIntelligenceAccess.push(new Unit(4931, -8444, "Naaprid", "baby", "bo"));
                ArtificialIntelligenceAccess.push(new Unit(4626, -8263, "Naaprid", "baby", "shu"));
                ArtificialIntelligenceAccess.push(new Unit(4717, -8770, "Naaprid", true, "tod"));
                ArtificialIntelligenceAccess.push(new Unit(4102, -8558, "Naaprid", true, "kerod"));
                ArtificialIntelligenceAccess.push(new Unit(4368, -7993, "Naaprid", true, "dod"));
                ArtificialIntelligenceAccess.push(new Unit(5110, -7913, "Naaprid", true, "kerod"));
                ArtificialIntelligenceAccess.push(new Unit(5472, -8361, "Naaprid", true, "dode"));

                ArtificialIntelligenceAccess.push(new Unit(3400, -7644, "Naaprid", true, "tode"));
                ArtificialIntelligenceAccess.push(new Unit(2769, -7608, "Naaprid", false, "doda"));
                ArtificialIntelligenceAccess.push(new Unit(3028, -7728, "Naaprid", false, "poda"));
                ArtificialIntelligenceAccess.push(new Unit(3010, -7568, "Naaprid", "baby", "dodo"));

                //Perma-Grushes!!!
                ArtificialIntelligenceAccess.push(new Unit(1166, -7761, "Grush", true, "Cruncher"));
                ArtificialIntelligenceAccess.push(new Unit(1196, -13286, "Grush", false, "Crutcher"));
                ArtificialIntelligenceAccess.push(new Unit(-831, -4602, "Grush", false, "Brutcher"));
                ArtificialIntelligenceAccess.push(new Unit(-1625, -7172, "Grush", "baby", "Butch"));

                //Scenery
                scenicList.push(new Scenery("grushweedPlant", 3160 , -4483, -0.3, 1)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", 3250 , -4508, -1.3, 0.6)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", 2260 , -13141, -1.3, 1)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", 2327 , -12965, 2, 0.6)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", 3200 , -4541, 0.3, 0.6)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", 3257 , -4597, 3.2, 1.2)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", 3129 , -4815, -0.8, 1)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", 2899 , -5057, 0, 1.5)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", 3025 , -5183, 0, 1)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", 5462 , -4553, 0, 1.5)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", 5785 , -4826, 0, 1.1)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", 5632 , -4801, 0, 0.8)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", 5547 , -5043, 0, 1)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", 5842 , -5190, 0, 0.6)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", 5568 , -5328, -1, 1)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", 1436 , -8010, 0, 1)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", 1400 , -8000, 0, 1.15)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", 851 , -8382, -5, 1.5)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", 395 , -8227, 5, 1.2)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", 1006 , -12969, 1.111, 1.5)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", 837 , -12997, 1, 1)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", 882 , -12903, 1.6, 1)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", -1501 , -7190, 3.9, 0.9)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", -1770 , -7376, -1.43, 1.7)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", -1398 , -7335, 2.43, 1)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", -1508 , -7609, 3.333, 1.1657)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", -634 , -4556, -5.333, 1.5)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("grushweedPlant", -928 , -4507, 6.333, 1)); //for grush weed the last number determines its size multiplier.
                scenicList.push(new Scenery("techiPlant", 2702 , -12061, -8.5, true));
                scenicList.push(new Scenery("techiPlant", 4234 , -5994, -2.5, true));
                scenicList.push(new Scenery("techiPlant", 5419 , -6449, 2.146, true));
                scenicList.push(new Scenery("techiPlant", 1213 , -10947, -2.146, true));
                scenicList.push(new Scenery("techiPlant", 1818 , -13349, -3.05, true));
                scenicList.push(new Scenery("techiPlant", 6059 , -6527, 1, true));
                scenicList.push(new Scenery("techiPlant", 5391 , -5262, -0.1, true));
                scenicList.push(new Scenery("techiPlant", 890 , -7731, -0.2, true));
                scenicList.push(new Scenery("techiPlant", 2227 , -13406, -1.6, true));
                scenicList.push(new Scenery("techiPlant", 707 , -13146, 1.2, true));
                scenicList.push(new Scenery("techiPlant", 3043 , -13540, 1.82, true));
                scenicList.push(new Scenery("techiPlant", 288 , -13032, 0, true));
                scenicList.push(new Scenery("techiPlant", 3204 , -5508, 4, true));
                scenicList.push(new Scenery("techiPlant", 2228 , -4731, -1.46, true));
                scenicList.push(new Scenery("techiPlant", 1510 , -8302, 1.5, true));
                scenicList.push(new Scenery("techiPlant", 6269 , -4950, -3, true));
                scenicList.push(new Scenery("techiPlant", 6317 , -4979, 3, true));
                scenicList.push(new Scenery("techiPlant", 1332 , -13530, 1.45, true));
                scenicList.push(new Scenery("techiPlant", -339 , -10565, 0.1, true));
                scenicList.push(new Scenery("techiPlant", 247 , -10314, -0.05, true));
                scenicList.push(new Scenery("techiPlant", -907 , -4618, 5, true));
                scenicList.push(new Scenery("techiPlant", 1165 , -5317, 4.5, true));
                scenicList.push(new Scenery("techiPlant", 6013 , -5986, 0, true));
                scenicList.push(new Scenery("techiPlant", 2391 , -13076, -4.85, true));
                scenicList.push(new Scenery("techiPlant", 4478 , -9698, -4.5, true));
                scenicList.push(new Scenery("techiPlant", 6212 , -7094, -0.5, true));
                scenicList.push(new Scenery("techiPlant", 3088 , -7476, 3.55, true));
                scenicList.push(new Scenery("techiPlant", 5112 , -10337, -3.75, true));
                scenicList.push(new Scenery("techiPlant", 6302 , -4235, -3.55, true));
                scenicList.push(new Scenery("techiPlant", 4348 , -13031, 8, true));
                scenicList.push(new Scenery("techiPlant", 1298 , -10232, -0.65, true));
                scenicList.push(new Scenery("techiPlant", 4921 , -10739, 0.45, true));
                scenicList.push(new Scenery("luufPlant", 1040 , -6090, 0, true));
                scenicList.push(new Scenery("luufPlant", 3986 , -5087, -6.4, true));
                scenicList.push(new Scenery("luufPlant", 1270 , -12813, -3, true));
                scenicList.push(new Scenery("luufPlant", 189 , -7280, 2, true));
                scenicList.push(new Scenery("luufPlant", 359 , -10792, 1.11, true));
                scenicList.push(new Scenery("luufPlant", 6164 , -5617, 1.111, true));
                scenicList.push(new Scenery("luufPlant", 395 , -12528, 2.3, true));
                scenicList.push(new Scenery("luufPlant", -1373 , -4875, -6.111, true));
                scenicList.push(new Scenery("luufPlant", 6011 , -8981, 2.5, true));
                scenicList.push(new Scenery("luufPlant", 6263 , -12475, -3, true));
                scenicList.push(new Scenery("luufPlant", 1212 , -4303, -6.111, true));
                scenicList.push(new Scenery("luufPlant", 5130 , -11435, 0, true));
                scenicList.push(new Scenery("luufPlant", 4990 , -13386, -5.4321, true));
                scenicList.push(new Scenery("itlinPlant", 3967 , -8854, -2.25, true));
                scenicList.push(new Scenery("itlinPlant", 5067 , -9141, 3.25, true));
                scenicList.push(new Scenery("itlinPlant", 1721 , -10010, -40.4, true));
                scenicList.push(new Scenery("itlinPlant", -1912 , -12299, 0, true));
                scenicList.push(new Scenery("itlinPlant", -715 , -11942, 1, true));
                scenicList.push(new Scenery("itlinPlant", -1536 , -11629, -2.264, true));
                scenicList.push(new Scenery("itlinPlant", 328 , -4654, -2.4, true));
                scenicList.push(new Scenery("itlinPlant", 4636 , -4323, 5.5, true));
                scenicList.push(new Scenery("itlinPlant", 4427 , -11153, -4.444, true));
                scenicList.push(new Scenery("itlinPlant", 2326 , -8795, 6.4, true));
                scenicList.push(new Scenery("itlinPlant", 5033 , -4823, -6.4, true));
                scenicList.push(new Scenery("itlinPlant", 6229 , -3987, 1.5, true));
                scenicList.push(new Scenery("itlinPlant", 3171 , -10964, 0, true));
                scenicList.push(new Scenery("itlinPlant", 6441 , -9318, 2.5, true));
                scenicList.push(new Scenery("palntPlant", 3758 , -4310, 6, true));
                scenicList.push(new Scenery("palntPlant", 5412 , -6751, 0, true));
                scenicList.push(new Scenery("palntPlant", -134 , -5841, 1, true));
                scenicList.push(new Scenery("palntPlant", 852 , -8584, 2, true));
                scenicList.push(new Scenery("palntPlant", 819 , -13343, 4, true));
                scenicList.push(new Scenery("palntPlant", 410 , -11262, 3, true));
                scenicList.push(new Scenery("palntPlant", 4141 , -11693, -3.2, true));
                scenicList.push(new Scenery("palntPlant", -1572 , -9399, -1.4, true));
                scenicList.push(new Scenery("palntPlant", 3047 , -12626, -2.5, true));
                scenicList.push(new Scenery("palntPlant", 1076 , -9888, 0, true));
                scenicList.push(new Scenery("palntPlant", 1544 , -9168, -3.14159, true));
                scenicList.push(new Scenery("palntPlant", -779 , -5189, 1.9, true));
                scenicList.push(new Scenery("palntPlant", 4348 , -7674, 4.89, true));
                scenicList.push(new Scenery("palntPlant", 5326 , -8149, -1.9, true));
                scenicList.push(new Scenery("palntPlant", 5586 , -12299, 6.2, true));
                scenicList.push(new Scenery("palntPlant", -714 , -6487, 2.3, true));
                scenicList.push(new Scenery("palntPlant", 2858 , -5643, 0.25, true));
                scenicList.push(new Scenery("palntPlant", 3579 , -9140, -1, true));
                scenicList.push(new Scenery("palntPlant", 2950 , -11178, 0, true));
                scenicList.push(new Scenery("butterMellowPlant", 4099 , -12455, 6.66666, true));


                change = "s1";
            }
        }
        else if (region == "s2") //Y > 6290 && Y < 32370
        {
            if (change != "s2")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                //pine trees of the Hent Woods
                scenicList.push(new Scenery("pineTree", 4454 , -17547, 0, true));
                scenicList.push(new Scenery("pineTree", 4165 , -17636, -2, true));
                scenicList.push(new Scenery("pineTree", 4096 , -17461, 0.25, true));
                scenicList.push(new Scenery("pineTree", 3881 , -17567, 6, true));
                scenicList.push(new Scenery("pineTree", 4458 , -17811, -5.5, true));
                scenicList.push(new Scenery("pineTree", 4760 , -17816, 0, true));
                scenicList.push(new Scenery("pineTree", 4690 , -18108, 3, true));
                scenicList.push(new Scenery("pineTree", 4257 , -18126, -4, true));
                scenicList.push(new Scenery("pineTree", 4030 , -17864, -2.87, true));
                scenicList.push(new Scenery("pineTree", 3592 , -17885, -0.25, true));
                scenicList.push(new Scenery("pineTree", 3911 , -18085, 1.4, true));
                scenicList.push(new Scenery("pineTree", 3527 , -18125, -3.6, true));
                scenicList.push(new Scenery("pineTree", 3200 , -18090, 1, true));
                scenicList.push(new Scenery("pineTree", 2945 , -17832, -1, true));
                scenicList.push(new Scenery("pineTree", 2930 , -18115, 0.64, true));
                scenicList.push(new Scenery("pineTree", 2628 , -17873, -21, true));
                scenicList.push(new Scenery("pineTree", 2463 , -18015, -4.25, true));
                scenicList.push(new Scenery("pineTree", 2400 , -17827, 5, true));
                scenicList.push(new Scenery("pineTree", 2604 , -18292, -6, true));
                scenicList.push(new Scenery("pineTree", 2150 , -18202, -3.333, true));
                scenicList.push(new Scenery("pineTree", 2302 , -18474, 2.62, true));
                scenicList.push(new Scenery("pineTree", 2067 , -18710, -4, true));
                scenicList.push(new Scenery("pineTree", 1758 , -18755, 2.9, true));
                scenicList.push(new Scenery("pineTree", 1819 , -19032, -3.2, true));
                scenicList.push(new Scenery("pineTree", 1779 , -19291, -1.4, true));
                scenicList.push(new Scenery("pineTree", 1689 , -19530, 3.45, true));
                scenicList.push(new Scenery("pineTree", 1788 , -19793, 10, true));
                scenicList.push(new Scenery("pineTree", 1784 , -19975, -1, true));
                scenicList.push(new Scenery("pineTree", 2184 , -20173, 0, true));
                scenicList.push(new Scenery("pineTree", 2507 , -20311, -2.6, true));
                scenicList.push(new Scenery("pineTree", 2380 , -20519, 6.25, true));
                scenicList.push(new Scenery("pineTree", 2516 , -20051, 1.9, true));
                scenicList.push(new Scenery("pineTree", 2625 , -20605, 5.4, true));
                scenicList.push(new Scenery("pineTree", 2855 , -20359, -1.3, true));
                scenicList.push(new Scenery("pineTree", 3001 , -20632, 3, true));
                scenicList.push(new Scenery("pineTree", 3273 , -20420, 420, true));
                scenicList.push(new Scenery("pineTree", 3562 , -20574, -2.95, true));
                scenicList.push(new Scenery("pineTree", 3827 , -20435, 2.25, true));
                scenicList.push(new Scenery("pineTree", 3777 , -20587, 1.4, true));
                scenicList.push(new Scenery("pineTree", 3287 , -20705, -3.8, true));
                scenicList.push(new Scenery("pineTree", 3858 , -20196, 0, true));
                scenicList.push(new Scenery("pineTree", 3549 , -20041, 5.1, true));
                scenicList.push(new Scenery("pineTree", 3397 , -20228, -4.64, true));
                scenicList.push(new Scenery("pineTree", 3075 , -20114, -2.2, true));
                scenicList.push(new Scenery("pineTree", 3278 , -19859, -5.25, true));
                scenicList.push(new Scenery("pineTree", 2900 , -19899, 5.27, true));
                scenicList.push(new Scenery("pineTree", 4203 , -20271, 6, true));
                scenicList.push(new Scenery("pineTree", 4095 , -19928, 3.333, true));
                scenicList.push(new Scenery("pineTree", 4590 , -20355, -2.62, true));
                scenicList.push(new Scenery("pineTree", 4455 , -20090, -4.8, true));
                scenicList.push(new Scenery("pineTree", 4782 , -20162, -2.9, true));
                scenicList.push(new Scenery("pineTree", 4648 , -19831, 3.2, true));
                scenicList.push(new Scenery("pineTree", 4288 , -19741, 1.8, true));
                scenicList.push(new Scenery("pineTree", 2147 , -19859, 5.45, true));
                scenicList.push(new Scenery("pineTree", 2560 , -19729, -9, true));
                scenicList.push(new Scenery("pineTree", 2080 , -19510, 6.4, true));
                scenicList.push(new Scenery("pineTree", 2294 , -19131, 0, true));
                scenicList.push(new Scenery("pineTree", 2687 , -19276, 5.1, true));
                scenicList.push(new Scenery("pineTree", 3061 , -19422, -4.64, true));
                scenicList.push(new Scenery("pineTree", 2617 , -18834, -2.2, true));
                scenicList.push(new Scenery("pineTree", 3736 , -19516, -5.25, true));
                scenicList.push(new Scenery("pineTree", 3566 , -19178, 5.27, true));
                scenicList.push(new Scenery("pineTree", 3080 , -18993, 6, true));
                scenicList.push(new Scenery("pineTree", 4236 , -19212, 3.17, true));
                scenicList.push(new Scenery("pineTree", 4954 , -19360, -2.62, true));
                scenicList.push(new Scenery("pineTree", 5164 , -19079, -4.8, true));
                scenicList.push(new Scenery("pineTree", 4725 , -18928, -2.9, true));
                scenicList.push(new Scenery("pineTree", 5044 , -19662, 3.9, true));
                scenicList.push(new Scenery("pineTree", 4689 , -18608, 1.8, true));
                scenicList.push(new Scenery("pineTree", 4089 , -18840, 5.45, true));
                scenicList.push(new Scenery("pineTree", 3554 , -18767, -0.9, true));
                scenicList.push(new Scenery("pineTree", 3903 , -18510, 6.21, true));
                scenicList.push(new Scenery("pineTree", 3170 , -18554, 0, true));
                scenicList.push(new Scenery("pineTree", 3442 , -18398, -1.8, true));
                scenicList.push(new Scenery("pineTree", 4535 , -19436, 4.525, true));
                scenicList.push(new Scenery("pineTree", 4322 , -18519, -2.7, true));
                scenicList.push(new Scenery("pineTree", 2876 , -18659, 2.25, true));

                //shehids of the Hent Woods
                ArtificialIntelligenceAccess.push(new Unit(3932, -17662, "Shehid", true, "Kulbai"));
                ArtificialIntelligenceAccess.push(new Unit(4035, -17625, "Shehid", false, "Kelb"));
                ArtificialIntelligenceAccess.push(new Unit(3938, -17523, "Shehid", false, "Kalblii"));
                ArtificialIntelligenceAccess.push(new Unit(4022, -17478, "Shehid", false, "Kellib"));
                ArtificialIntelligenceAccess.push(new Unit(4151, -17714, "Shehid", true, "Kulblii"));
                ArtificialIntelligenceAccess.push(new Unit(4393, -17575, "Shehid", false, "Kalb"));
                ArtificialIntelligenceAccess.push(new Unit(4507, -17775, "Shehid", false, "Kolblii"));
                ArtificialIntelligenceAccess.push(new Unit(4141, -19864, "Shehid", true, "Kulb"));
                ArtificialIntelligenceAccess.push(new Unit(4366, -19780, "Shehid", false, "Kelblii"));
                ArtificialIntelligenceAccess.push(new Unit(4226, -20180, "Shehid", false, "Kilb"));
                ArtificialIntelligenceAccess.push(new Unit(3423, -20291, "Shehid", false, "Kilblii"));
                ArtificialIntelligenceAccess.push(new Unit(3364, -20321, "Shehid", true, "Kullib"));
                ArtificialIntelligenceAccess.push(new Unit(3288, -20360, "Shehid", false, "Kilbin"));
                ArtificialIntelligenceAccess.push(new Unit(3315, -20481, "Shehid", false, "Kilobii"));
                ArtificialIntelligenceAccess.push(new Unit(3239, -20496, "Shehid", false, "Kilobin"));
                ArtificialIntelligenceAccess.push(new Unit(3709, -20608, "Shehid", true, "Kulobii"));
                ArtificialIntelligenceAccess.push(new Unit(4471, -19469, "Shehid", true, "Kulobin"));
                ArtificialIntelligenceAccess.push(new Unit(4587, -19363, "Shehid", false, "Kelobii"));
                ArtificialIntelligenceAccess.push(new Unit(4436, -19307, "Shehid", false, "Keloblii"));
                ArtificialIntelligenceAccess.push(new Unit(4294, -19340, "Shehid", false, "Kalobii"));
                ArtificialIntelligenceAccess.push(new Unit(4262, -19156, "Shehid", false, "Kaloblii"));
                ArtificialIntelligenceAccess.push(new Unit(4339, -19166, "Shehid", false, "Kelobin"));
                ArtificialIntelligenceAccess.push(new Unit(4476, -19184, "Shehid", false, "Kalobin"));
                ArtificialIntelligenceAccess.push(new Unit(4784, -19147, "Shehid", true, "Kulublii"));
                ArtificialIntelligenceAccess.push(new Unit(4931, -19224, "Shehid", false, "Kaloblin"));
                ArtificialIntelligenceAccess.push(new Unit(4647, -19220, "Shehid", false, "Keloblin"));
                ArtificialIntelligenceAccess.push(new Unit(4771, -19344, "Shehid", false, "Kiloblii"));
                ArtificialIntelligenceAccess.push(new Unit(4647, -19461, "Shehid", false, "Kiloblin"));
                ArtificialIntelligenceAccess.push(new Unit(4839, -19518, "Shehid", true, "Kulub"));
                ArtificialIntelligenceAccess.push(new Unit(4673, -19017, "Shehid", false, "Kilbii"));
                ArtificialIntelligenceAccess.push(new Unit(4514, -18962, "Shehid", false, "Kalbii"));
                ArtificialIntelligenceAccess.push(new Unit(4141, -18799, "Shehid", false, "Kelbii"));
                ArtificialIntelligenceAccess.push(new Unit(5068, -19003, "Shehid", false, "Kolbii"));
                ArtificialIntelligenceAccess.push(new Unit(4027, -18966, "Shehid", false, "Kolblin"));
                ArtificialIntelligenceAccess.push(new Unit(4651, -18044, "Shehid", true, "Kulbii"));
                ArtificialIntelligenceAccess.push(new Unit(4385, -18047, "Shehid", false, "Kilbolin"));
                ArtificialIntelligenceAccess.push(new Unit(2574, -19383, "Shehid", false, "Kalbilin"));
                ArtificialIntelligenceAccess.push(new Unit(2731, -19378, "Shehid", false, "Kolbelin"));
                ArtificialIntelligenceAccess.push(new Unit(1719, -19712, "Shehid", false, "Kelbalin"));
                ArtificialIntelligenceAccess.push(new Unit(1768, -19896, "Shehid", true, "Kulbulun"));
                ArtificialIntelligenceAccess.push(new Unit(2130, -20041, "Shehid", false, "Kellbell"));

                //Plants in the Hent Woods
                scenicList.push(new Scenery("glinPlant", 4600 , -19019, 0.2, true));
                scenicList.push(new Scenery("glinPlant", 4561 , -18967, -2, true));
                scenicList.push(new Scenery("glinPlant", 4671 , -19123, 1, true));
                scenicList.push(new Scenery("glinPlant", 4284 , -19098, -3, true));
                scenicList.push(new Scenery("glinPlant", 4620 , -19317, 2.3, true));
                scenicList.push(new Scenery("glinPlant", 4790 , -19239, 4, true));
                scenicList.push(new Scenery("glinPlant", 4375 , -19333, -0.6, true));
                scenicList.push(new Scenery("glinPlant", 4366 , -19272, 4.3, true));
                scenicList.push(new Scenery("glinPlant", 4515 , -19202, -0.15, true));
                scenicList.push(new Scenery("glinPlant", 4122 , -18173, 3.15, true));
                scenicList.push(new Scenery("glinPlant", 3466 , -19105, 0, true));
                scenicList.push(new Scenery("glinPlant", 2469 , -19910, -5.15, true));
                scenicList.push(new Scenery("glinPlant", 3086 , -18163, 6, true));
                scenicList.push(new Scenery("glinPlant", 2759 , -18588, -1, true));
                scenicList.push(new Scenery("cyrinthilimPlant", 3272 , -20230, 5.3, true));
                scenicList.push(new Scenery("cyrinthilimPlant", 3750 , -19465, 0, true));
                scenicList.push(new Scenery("cyrinthilimPlant", 2502 , -17940, -4.75, true));
                scenicList.push(new Scenery("tepprekliaPlant", 2786 , -19180, 4, true));
                scenicList.push(new Scenery("tepprekliaPlant", 3447 , -19738, 1, true));
                scenicList.push(new Scenery("tepprekliaPlant", 4295 , -19967, -2, true));
                scenicList.push(new Scenery("tepprekliaPlant", 2456 , -19518, -5, true));
                scenicList.push(new Scenery("culprisPlant", 3873 , -19086, -3.1, true));
                scenicList.push(new Scenery("culprisPlant", 3520 , -18606, 2.4, true));
                scenicList.push(new Scenery("culprisPlant", 2823 , -18275, 4.6, true));
                scenicList.push(new Scenery("culprisPlant", 3546 , -18276, -1.9, true));
                scenicList.push(new Scenery("culprisPlant", 4032 , -17721, -3.1, true));
                scenicList.push(new Scenery("stomwikPlant", 4355 , -18817, 0.25, true));
                scenicList.push(new Scenery("stomwikPlant", 3873 , -19909, 2, true));
                scenicList.push(new Scenery("stomwikPlant", 2241 , -18805, -1.11112, true));
                scenicList.push(new Scenery("akerPlant", 3670 , -20463, 0, true));
                scenicList.push(new Scenery("akerPlant", 3569 , -20203, -5, true));
                scenicList.push(new Scenery("akerPlant", 3739 , -20320, 3.8, true));
                scenicList.push(new Scenery("akerPlant", 2496 , -18207, -6, true));
                scenicList.push(new Scenery("akerPlant", 3670 , -18860, 2, true));
                scenicList.push(new Scenery("akerPlant", 4586 , -19997, -4, true));
                scenicList.push(new Scenery("bequonPlant", 3884 , -18747, 0, true));
                scenicList.push(new Scenery("bequonPlant", 4256 , -17828, -5.56, true));

                //creatures of the Hent Woods
                var random = Math.floor(Math.random() * 8);

                if (random == 0) //Varns and Snakes and Bears, oh my!
                {
                    ArtificialIntelligenceAccess.push(new Unit(4519, -19650, "BlackBear", false, "Juvjuv"));
                    ArtificialIntelligenceAccess.push(new Unit(3599, -20269, "BlackBear", false, "Juvjuvjuv"));
                    ArtificialIntelligenceAccess.push(new Unit(4400, -20315, "BlackBear", true, "Juv"));
                    ArtificialIntelligenceAccess.push(new Unit(4413, -18753, "BlackBear", false, "Juvjuvjuvjuv"));
                    ArtificialIntelligenceAccess.push(new Unit(3554, -20498, "Viper", false, "slitherin'"));
                    ArtificialIntelligenceAccess.push(new Unit(3004, -19881, "Viper", false, "Serpal"));
                    ArtificialIntelligenceAccess.push(new Unit(2704, -17946, "Viper", false, "Serper"));
                    ArtificialIntelligenceAccess.push(new Unit(3939, -18619, "Viper", false, "Serperus"));
                    ArtificialIntelligenceAccess.push(new Unit(2685, -18280, "Viper", true, "Serpenta"));
                    ArtificialIntelligenceAccess.push(new Unit(1629, -20101, "Lizard", false, "Lizella"));
                    ArtificialIntelligenceAccess.push(new Unit(4529, -17865, "Lizard", false, "Lizette"));
                    ArtificialIntelligenceAccess.push(new Unit(3435, -17908, "Varn", true, "Dog"));
                    ArtificialIntelligenceAccess.push(new Unit(3540, -17820, "Varn", false, "Dogdog"));
                    ArtificialIntelligenceAccess.push(new Unit(3504, -17954, "Varn", false, "Doggy"));
                    ArtificialIntelligenceAccess.push(new Unit(3583, -18003, "Varn", false, "Doggydog"));
                    ArtificialIntelligenceAccess.push(new Unit(3969, -17955, "Varn", true, "Doggg"));
                    ArtificialIntelligenceAccess.push(new Unit(4102, -17937, "Varn", true, "Dogg"));
                    ArtificialIntelligenceAccess.push(new Unit(3412, -18028, "Varn", true, "Dogggg"));
                    ArtificialIntelligenceAccess.push(new Unit(3270, -18037, "Varn", true, "Doggdog"));
                    ArtificialIntelligenceAccess.push(new Unit(3205, -17996, "Varn", false, "Doggdogdog"));
                    ArtificialIntelligenceAccess.push(new Unit(2989, -17786, "Varn", true, "Doggdogg"));
                    ArtificialIntelligenceAccess.push(new Unit(3922, -19819, "Varn", true, "Gen"));
                    ArtificialIntelligenceAccess.push(new Unit(3688, -19583, "Varn", true, "Gengen"));
                    ArtificialIntelligenceAccess.push(new Unit(3764, -20017, "Varn", false, "Gengengen"));
                    ArtificialIntelligenceAccess.push(new Unit(3148, -19486, "Varn", true, "Gengengengen"));
                    ArtificialIntelligenceAccess.push(new Unit(3335, -19775, "Varn", false, "Gengengengengen"));
                }
                else if (random == 1) //Gribs, Lizards, and Narthwarps + more
                {
                    ArtificialIntelligenceAccess.push(new Unit(2382, -18246, "Lizard", true, "lizelia"));
                    ArtificialIntelligenceAccess.push(new Unit(3232, -18359, "Lizard", true, "lizario"));
                    ArtificialIntelligenceAccess.push(new Unit(3528, -18283, "Lizard", false, "Lizuel"));
                    ArtificialIntelligenceAccess.push(new Unit(3899, -19196, "Lizard", false, "Lizlo"));
                    ArtificialIntelligenceAccess.push(new Unit(4529, -17865, "Lizard", false, "Lizette"));
                    ArtificialIntelligenceAccess.push(new Unit(1629, -20101, "Lizard", false, "Lizella"));
                    ArtificialIntelligenceAccess.push(new Unit(4112, -18408, "Narthwarp", false, "Mokmok"));
                    ArtificialIntelligenceAccess.push(new Unit(3471, -18754, "Narthwarp", false, "Mokmokmok"));
                    ArtificialIntelligenceAccess.push(new Unit(3566, -18703, "Narthwarp", false, "Mokmokmokmok"));
                    ArtificialIntelligenceAccess.push(new Unit(2280, -19632, "Narthwarp", false, "Mokmokmokmokmok"));
                    ArtificialIntelligenceAccess.push(new Unit(2263, -18893, "Narthwarp", false, "Mokkmokk"));
                    ArtificialIntelligenceAccess.push(new Unit(2111, -18829, "Narthwarp", false, "Mokk"));
                    ArtificialIntelligenceAccess.push(new Unit(2065, -18977, "Narthwarp", false, "Mokkmokkmokk"));
                    ArtificialIntelligenceAccess.push(new Unit(2588, -19033, "Narthwarp", false, "Mokkmokkmokkmokk"));
                    ArtificialIntelligenceAccess.push(new Unit(2493, -19087, "Narthwarp", false, "Mokkmokkmokkmokkmokk"));
                    ArtificialIntelligenceAccess.push(new Unit(3922, -19819, "Grib", true, "Gen"));
                    ArtificialIntelligenceAccess.push(new Unit(3688, -19583, "Grib", true, "Gengen"));
                    ArtificialIntelligenceAccess.push(new Unit(3764, -20017, "Grib", false, "Gengengen"));
                    ArtificialIntelligenceAccess.push(new Unit(3148, -19486, "Grib", true, "Gengengengen"));
                    ArtificialIntelligenceAccess.push(new Unit(3335, -19775, "Grib", false, "Gengengengengen"));
                    ArtificialIntelligenceAccess.push(new Unit(2924, -19247, "BlackBear", false, "Juvjuvjuvjuv"));
                    ArtificialIntelligenceAccess.push(new Unit(4572, -19736, "Viper", false, "Serperal"));
                    ArtificialIntelligenceAccess.push(new Unit(4509, -19980, "Varn", true, "Gengengengengen"));
                    ArtificialIntelligenceAccess.push(new Unit(3914, -20453, "Varn", false, "Gengengen"));
                    ArtificialIntelligenceAccess.push(new Unit(3593, -20375, "BlackBear", true, "Juv"));
                    ArtificialIntelligenceAccess.push(new Unit(3122, -20103, "Grib", true, "Genn"));
                    ArtificialIntelligenceAccess.push(new Unit(2713, -20004, "BlackBear", false, "Juvjuv"));
                    ArtificialIntelligenceAccess.push(new Unit(4832, -20389, "Varn", true, "Genegen"));
                    ArtificialIntelligenceAccess.push(new Unit(3983, -20706, "Varn", true, "Gengenege"));
                    ArtificialIntelligenceAccess.push(new Unit(4317, -17697, "Lizard", true, "Genngenn"));
                    ArtificialIntelligenceAccess.push(new Unit(4460, -17692, "Lizard", false, "Gengengenn"));
                    scenicList.push(new Scenery("beeHive", 4386 , -19231, -5.7, true));
                }
                else if (random == 2) //mix of all + extra Lizards and Shehids
                {
                    ArtificialIntelligenceAccess.push(new Unit(4312, -17799, "Shehid", true, "Oogluk"));
                    ArtificialIntelligenceAccess.push(new Unit(4259, -17920, "Shehid", true, "Ooglook"));
                    ArtificialIntelligenceAccess.push(new Unit(3915, -18710, "BlackBear", true, "Juv"));
                    ArtificialIntelligenceAccess.push(new Unit(3689, -18923, "BlackBear", false, "Juve"));
                    ArtificialIntelligenceAccess.push(new Unit(3981, -19126, "BlackBear", false, "Juva"));
                    ArtificialIntelligenceAccess.push(new Unit(4521, -19642, "Varn", true, "Genegen"));
                    ArtificialIntelligenceAccess.push(new Unit(4466, -19796, "Varn", true, "Gengenege"));
                    ArtificialIntelligenceAccess.push(new Unit(4658, -19933, "Varn", false, "Genegene"));
                    ArtificialIntelligenceAccess.push(new Unit(4534, -20054, "Varn", false, "Gengenegeg"));
                    ArtificialIntelligenceAccess.push(new Unit(4739, -19996, "Varn", false, "Gengegnegeg"));
                    ArtificialIntelligenceAccess.push(new Unit(4609, -20199, "Varn", true, "Gengengegg"));
                    ArtificialIntelligenceAccess.push(new Unit(4219, -20339, "Varn", false, "Gengegnegegegg"));
                    ArtificialIntelligenceAccess.push(new Unit(4074, -20492, "Varn", true, "Gengengeggeg"));
                    ArtificialIntelligenceAccess.push(new Unit(3517, -20388, "Lizard", true, "lil"));
                    ArtificialIntelligenceAccess.push(new Unit(3451, -20442, "Lizard", false, "lili"));
                    ArtificialIntelligenceAccess.push(new Unit(3630, -20386, "Lizard", false, "lilil"));
                    ArtificialIntelligenceAccess.push(new Unit(3628, -20278, "Lizard", true, "lilily"));
                    ArtificialIntelligenceAccess.push(new Unit(3730, -20247, "Lizard", true, "lilili"));
                    ArtificialIntelligenceAccess.push(new Unit(3609, -20199, "Lizard", false, "lililil"));
                    ArtificialIntelligenceAccess.push(new Unit(3822, -19959, "Shehid", true, "looklook"));
                    ArtificialIntelligenceAccess.push(new Unit(3366, -19871, "Viper", false, "Serpal"));
                    ArtificialIntelligenceAccess.push(new Unit(3275, -19793, "Viper", false, "Serpette"));
                    ArtificialIntelligenceAccess.push(new Unit(3236, -19926, "Viper", false, "Serpikk"));
                    ArtificialIntelligenceAccess.push(new Unit(3209, -20196, "Shehid", false, "Aglolok"));
                    ArtificialIntelligenceAccess.push(new Unit(3321, -20228, "Shehid", false, "Agloolok"));
                    ArtificialIntelligenceAccess.push(new Unit(2528, -20469, "Narthwarp", false, "Mokk"));
                    ArtificialIntelligenceAccess.push(new Unit(2065, -20536, "Narthwarp", false, "Mokmok"));
                    ArtificialIntelligenceAccess.push(new Unit(2298, -20584, "Narthwarp", false, "Mok"));
                    ArtificialIntelligenceAccess.push(new Unit(2564, -20385, "Narthwarp", false, "Mokkmokk"));
                    ArtificialIntelligenceAccess.push(new Unit(2795, -20356, "Narthwarp", false, "Mokkmokkmokk"));
                    ArtificialIntelligenceAccess.push(new Unit(2189, -20240, "Narthwarp", false, "Mokmokmok"));
                    ArtificialIntelligenceAccess.push(new Unit(1900, -19618, "Grib", false, "Genden"));
                    ArtificialIntelligenceAccess.push(new Unit(1722, -19423, "Grib", true, "Gengen"));
                    ArtificialIntelligenceAccess.push(new Unit(2182, -19675, "Grib", false, "Gengengen"));
                    ArtificialIntelligenceAccess.push(new Unit(2368, -20157, "Shehid", true, "Uglug"));
                    ArtificialIntelligenceAccess.push(new Unit(2385, -19351, "BlackBear", false, "Juvu"));
                    ArtificialIntelligenceAccess.push(new Unit(1792, -19565, "Grib", true, "Gengenggle"));
                    ArtificialIntelligenceAccess.push(new Unit(2835, -18881, "Varn", false, "Gengenegegee"));
                    ArtificialIntelligenceAccess.push(new Unit(2572, -18527, "Narthwarp", false, "Mokkly"));
                    ArtificialIntelligenceAccess.push(new Unit(2386, -18217, "Narthwarp", false, "Mokmokly"));
                    ArtificialIntelligenceAccess.push(new Unit(3128, -18323, "Narthwarp", false, "Mokly"));
                    ArtificialIntelligenceAccess.push(new Unit(3009, -18300, "Narthwarp", false, "Mokkmokkly"));
                    ArtificialIntelligenceAccess.push(new Unit(2787, -17985, "Lizard", true, "lililily"));
                    ArtificialIntelligenceAccess.push(new Unit(2243, -17750, "Lizard", false, "lillii"));
                    ArtificialIntelligenceAccess.push(new Unit(2105, -18961, "Lizard", false, "llili"));
                    ArtificialIntelligenceAccess.push(new Unit(3744, -18017, "Viper", false, "Serpilate"));
                    ArtificialIntelligenceAccess.push(new Unit(3428, -17772, "Lizard", true, "lilililii"));
                    ArtificialIntelligenceAccess.push(new Unit(3642, -18547, "BlackBear", false, "Juvjuv"));
                }
                else if (random == 3)
                {
                    ArtificialIntelligenceAccess.push(new Unit(3848, -18740, "Viper", true, "Serpral"));
                    ArtificialIntelligenceAccess.push(new Unit(4235, -17914, "Narthwarp", true, "tantan"));
                    ArtificialIntelligenceAccess.push(new Unit(4327, -17734, "Narthwarp", false, "tant"));
                    ArtificialIntelligenceAccess.push(new Unit(4323, -17625, "Narthwarp", false, "tanto"));
                    ArtificialIntelligenceAccess.push(new Unit(4260, -17499, "Narthwarp", false, "tanta"));
                    ArtificialIntelligenceAccess.push(new Unit(4116, -18008, "Narthwarp", false, "tantin"));
                    ArtificialIntelligenceAccess.push(new Unit(4479, -18079, "Narthwarp", false, "tantil"));
                    ArtificialIntelligenceAccess.push(new Unit(4429, -18138, "Narthwarp", false, "tantilizer"));
                    ArtificialIntelligenceAccess.push(new Unit(4134, -18013, "Narthwarp", false, "tanton"));
                    ArtificialIntelligenceAccess.push(new Unit(4005, -18143, "Narthwarp", false, "tantorl"));
                    ArtificialIntelligenceAccess.push(new Unit(4087, -18229, "Narthwarp", false, "tantarl"));
                    ArtificialIntelligenceAccess.push(new Unit(3973, -18441, "Narthwarp", false, "tantirl"));
                    if (player.level >= 16 && Math.random() > 0.78)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(3868, -19021, "Viper", "giant", "Seprias Lady-Regent of Snakes"));
                        ArtificialIntelligenceAccess.push(new Unit(2660, -19158, "Viper", true, "Serprala the Lady's Daughter"));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(2660, -19158, "Viper", false, "Serpserp"));
                        ArtificialIntelligenceAccess.push(new Unit(3411, -19806, "Grib", true, "Gengenagin"));
                        ArtificialIntelligenceAccess.push(new Unit(3900, -19921, "Grib", true, "Gengenagen"));
                        ArtificialIntelligenceAccess.push(new Unit(3617, -20306, "Grib", false, "Gengenagon"));
                    }
                    ArtificialIntelligenceAccess.push(new Unit(3148, -18301, "Viper", true, "Serpril"));
                    ArtificialIntelligenceAccess.push(new Unit(2514, -18338, "Viper", false, "Serprol"));
                    ArtificialIntelligenceAccess.push(new Unit(2209, -18137, "Viper", false, "Serprul"));
                    ArtificialIntelligenceAccess.push(new Unit(2277, -18815, "BlackBear", false, "Juvjuv"));
                    ArtificialIntelligenceAccess.push(new Unit(1844, -18832, "Viper", false, "Serprool"));
                    ArtificialIntelligenceAccess.push(new Unit(2735, -20136, "Lizard", true, "lizzzzzzzzzzzzz"));
                    ArtificialIntelligenceAccess.push(new Unit(2890, -20208, "Lizard", false, "lizz"));
                    ArtificialIntelligenceAccess.push(new Unit(3063, -20462, "Shehid", true, "Uglug"));
                    ArtificialIntelligenceAccess.push(new Unit(3260, -20145, "Lizard", false, "lizzz"));
                    ArtificialIntelligenceAccess.push(new Unit(4177, -20089, "BlackBear", true, "Juve"));
                    ArtificialIntelligenceAccess.push(new Unit(4445, -19885, "BlackBear", false, "Juva"));
                    ArtificialIntelligenceAccess.push(new Unit(4394, -20305, "Varn", false, "Geng"));
                    ArtificialIntelligenceAccess.push(new Unit(1597, -19724, "Varn", true, "Genge"));
                    ArtificialIntelligenceAccess.push(new Unit(2285, -20689, "Varn", false, "Gengen"));
                    ArtificialIntelligenceAccess.push(new Unit(2442, -20721, "Varn", true, "Gen"));
                    ArtificialIntelligenceAccess.push(new Unit(1931, -20187, "Varn", true, "Genger"));
                    ArtificialIntelligenceAccess.push(new Unit(1939, -20390, "Varn", true, "Gengerly"));
                    ArtificialIntelligenceAccess.push(new Unit(2161, -20412, "Varn", true, "Gengar"));
                    ArtificialIntelligenceAccess.push(new Unit(3945, -20676, "Lizard", true, "lizzzz"));
                }
                else if (random == 4) //Leveled/Random Map
                {

                    if (player.level >= 9)
                    {
                        if (Math.random() > 0.5)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(2687, -20340, "Grib", true, "geg"));
                            ArtificialIntelligenceAccess.push(new Unit(2526, -20468, "Grib", true, "Gege"));
                            ArtificialIntelligenceAccess.push(new Unit(2819, -20542, "Grib", false, "Gech"));
                            ArtificialIntelligenceAccess.push(new Unit(3002, -20457, "Grib", false, "Goch"));
                            ArtificialIntelligenceAccess.push(new Unit(3162, -20555, "Grib", false, "Gich"));
                            ArtificialIntelligenceAccess.push(new Unit(3133, -20755, "Grib", false, "Guch"));
                            ArtificialIntelligenceAccess.push(new Unit(2791, -20695, "Grib", false, "Gooch"));

                            ArtificialIntelligenceAccess.push(new Unit(2587, -19656, "Varn", false, "Geng"));
                            ArtificialIntelligenceAccess.push(new Unit(2527, -19619, "Varn", true, "Genge"));
                            ArtificialIntelligenceAccess.push(new Unit(2489, -19693, "Varn", false, "Gengen"));
                            ArtificialIntelligenceAccess.push(new Unit(2138, -19535, "Varn", true, "Gen"));
                            ArtificialIntelligenceAccess.push(new Unit(2119, -19443, "Varn", true, "Genger"));
                            ArtificialIntelligenceAccess.push(new Unit(2229, -19145, "Varn", false, "Gengenar"));
                            ArtificialIntelligenceAccess.push(new Unit(1856, -19245, "Varn", true, "Genar"));
                            ArtificialIntelligenceAccess.push(new Unit(2311, -19255, "Varn", true, "Gengar"));
                            ArtificialIntelligenceAccess.push(new Unit(3129, -19416, "Viper", false, "Serprul"));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(2687, -20340, "Varn", true, "geg"));
                            ArtificialIntelligenceAccess.push(new Unit(2526, -20468, "Varn", true, "Gege"));
                            ArtificialIntelligenceAccess.push(new Unit(2819, -20542, "Varn", false, "Gech"));
                            ArtificialIntelligenceAccess.push(new Unit(3002, -20457, "Varn", false, "Goch"));
                            ArtificialIntelligenceAccess.push(new Unit(3162, -20555, "Varn", false, "Gich"));
                            ArtificialIntelligenceAccess.push(new Unit(3133, -20755, "Varn", false, "Guch"));
                            ArtificialIntelligenceAccess.push(new Unit(2791, -20695, "Varn", false, "Gooch"));

                            ArtificialIntelligenceAccess.push(new Unit(2587, -19656, "Grib", false, "Geng"));
                            ArtificialIntelligenceAccess.push(new Unit(2527, -19619, "Grib", true, "Genge"));
                            ArtificialIntelligenceAccess.push(new Unit(2489, -19693, "Grib", false, "Gengen"));
                            ArtificialIntelligenceAccess.push(new Unit(2138, -19535, "Grib", true, "Gen"));
                            ArtificialIntelligenceAccess.push(new Unit(2119, -19443, "Grib", true, "Genger"));
                            ArtificialIntelligenceAccess.push(new Unit(2229, -19145, "Grib", false, "Gengenar"));
                            ArtificialIntelligenceAccess.push(new Unit(1856, -19245, "Grib", true, "Genar"));
                            ArtificialIntelligenceAccess.push(new Unit(2311, -19255, "Grib", true, "Gengar"));
                        }
                        ArtificialIntelligenceAccess.push(new Unit(3751, -17759, "Grib", true, "Giigor"));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(2687, -20340, "Lizard", true, "geg"));
                        ArtificialIntelligenceAccess.push(new Unit(2526, -20468, "Lizard", true, "Gege"));
                        ArtificialIntelligenceAccess.push(new Unit(2819, -20542, "Lizard", false, "Gech"));
                        ArtificialIntelligenceAccess.push(new Unit(3002, -20457, "Varn", false, "Goch"));
                        ArtificialIntelligenceAccess.push(new Unit(3162, -20555, "Varn", false, "Gich"));
                        ArtificialIntelligenceAccess.push(new Unit(3133, -20755, "Varn", false, "Guch"));
                        ArtificialIntelligenceAccess.push(new Unit(2791, -20695, "Varn", false, "Gooch"));

                        ArtificialIntelligenceAccess.push(new Unit(2587, -19656, "Grib", false, "Geng"));
                        ArtificialIntelligenceAccess.push(new Unit(2527, -19619, "Lizard", true, "Genge"));
                        ArtificialIntelligenceAccess.push(new Unit(2489, -19693, "Lizard", false, "Gengen"));
                        ArtificialIntelligenceAccess.push(new Unit(2138, -19535, "Lizard", true, "Gen"));
                        ArtificialIntelligenceAccess.push(new Unit(2229, -19145, "Lizard", false, "Gengenar"));
                        ArtificialIntelligenceAccess.push(new Unit(1856, -19245, "Grib", false, "Genar"));
                        ArtificialIntelligenceAccess.push(new Unit(2311, -19255, "Grib", false, "Gengar"));
                    }

                    ArtificialIntelligenceAccess.push(new Unit(2681, -19030, "BlackBear", false, "Juvjuv"));
                    ArtificialIntelligenceAccess.push(new Unit(3179, -19216, "Lizard", true, "Liz"));
                    ArtificialIntelligenceAccess.push(new Unit(3442, -20728, "Varn", true, "Gronny"));
                    ArtificialIntelligenceAccess.push(new Unit(4042, -19877, "Lizard", false, "Lizonya"));
                    ArtificialIntelligenceAccess.push(new Unit(4492, -19925, "BlackBear", true, "Juv"));
                    ArtificialIntelligenceAccess.push(new Unit(4219, -19484, "Lizard", true, "anaverga"));
                    ArtificialIntelligenceAccess.push(new Unit(3553, -18984, "Narthwarp", false, "tantarla"));
                    ArtificialIntelligenceAccess.push(new Unit(3650, -18626, "Narthwarp", false, "tentarla"));
                    ArtificialIntelligenceAccess.push(new Unit(3889, -18583, "Narthwarp", false, "tintarla"));
                    ArtificialIntelligenceAccess.push(new Unit(4451, -18796, "BlackBear", false, "Jalva"));
                    ArtificialIntelligenceAccess.push(new Unit(4680, -18325, "Narthwarp", false, "tintarla"));
                    ArtificialIntelligenceAccess.push(new Unit(4263, -17901, "Varn", true, "Grealnny"));
                    ArtificialIntelligenceAccess.push(new Unit(3166, -18316, "Lizard", true, "anapico"));
                    ArtificialIntelligenceAccess.push(new Unit(3355, -18232, "Lizard", false, "anapene"));
                    ArtificialIntelligenceAccess.push(new Unit(2481, -17945, "Lizard", true, "Lizeg"));
                    ArtificialIntelligenceAccess.push(new Unit(4727, -17895, "Lizard", false, "Lizplog"));

                    if (Math.random > 0.4)
                    {
                        scenicList.push(new Scenery("beeHive", 3674 , 20495, 3, true));
                    }

                    if (player.level >= 7)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(3419, -19562, "BlackBear", true, "Juva"));
                        ArtificialIntelligenceAccess.push(new Unit(3419, -19562, "BlackBear", false, "Julva"));
                        ArtificialIntelligenceAccess.push(new Unit(3712, -20276, "Varn", true, "Gren"));
                        ArtificialIntelligenceAccess.push(new Unit(3605, -20258, "Varn", true, "Grenny"));
                        ArtificialIntelligenceAccess.push(new Unit(3635, -20757, "Varn", true, "Grinny"));
                        ArtificialIntelligenceAccess.push(new Unit(3813, -20752, "Varn", false, "Grunny"));
                        ArtificialIntelligenceAccess.push(new Unit(4028, -20382, "Varn", true, "Grilnny"));
                        ArtificialIntelligenceAccess.push(new Unit(3987, -20702, "Varn", false, "Gralnny"));
                        ArtificialIntelligenceAccess.push(new Unit(4321, -20178, "Varn", true, "Grolnny"));
                        ArtificialIntelligenceAccess.push(new Unit(2647, -18539, "Grib", true, "Gulch"));
                        ArtificialIntelligenceAccess.push(new Unit(2333, -18795, "Grib", true, "Golch"));
                        ArtificialIntelligenceAccess.push(new Unit(2706, -18085, "BlackBear", true, "Juve"));
                        ArtificialIntelligenceAccess.push(new Unit(3973, -18693, "Narthwarp", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(3827, -18705, "Narthwarp", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(3823, -19007, "Narthwarp", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(4329, -18900, "Narthwarp", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(4503, -18785, "Narthwarp", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(4753, -18549, "Varn", false, "Graelnie"));
                        ArtificialIntelligenceAccess.push(new Unit(4312, -18210, "Varn", true, "Graeln"));
                        ArtificialIntelligenceAccess.push(new Unit(3887, -18275, "BlackBear", false, "Juventud"));
                        ArtificialIntelligenceAccess.push(new Unit(4323, -17698, "Narthwarp", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(4061, -17747, "Narthwarp", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(3971, -17992, "Narthwarp", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(4322, -18068, "Narthwarp", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(2277, -18032, "Grib", true, "Galch"));
                        ArtificialIntelligenceAccess.push(new Unit(3146, -17891, "Grib", true, "Giich"));
                        ArtificialIntelligenceAccess.push(new Unit(3224, -18019, "Grib", false, "Giichii"));
                        ArtificialIntelligenceAccess.push(new Unit(3425, -18015, "Grib", true, "Giichiich"));
                        ArtificialIntelligenceAccess.push(new Unit(3448, -17765, "Grib", true, "Giichiichii"));
                    }
                    else if (player.level >= 3)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(3419, -19562, "BlackBear", false, "Juvu"));
                        ArtificialIntelligenceAccess.push(new Unit(3419, -19562, "Grib", false, "Gerk"));
                        ArtificialIntelligenceAccess.push(new Unit(3605, -20259, "BlackBear", false, "Juvjuv"));
                        ArtificialIntelligenceAccess.push(new Unit(3635, -20757, "Varn", false, "Grinny"));
                        ArtificialIntelligenceAccess.push(new Unit(4321, -20178, "Varn", false, "Grolnny"));
                        ArtificialIntelligenceAccess.push(new Unit(2647, -18539, "Grib", true, "Gulch"));
                        ArtificialIntelligenceAccess.push(new Unit(2333, -18795, "Grib", false, "Golch"));
                        ArtificialIntelligenceAccess.push(new Unit(2706, -18085, "BlackBear", false, "Juvjuvjuv"));
                        ArtificialIntelligenceAccess.push(new Unit(3973, -18693, "Narthwarp", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(3827, -18705, "Narthwarp", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(4503, -18785, "Narthwarp", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(4753, -18549, "Varn", false, "Graelnie"));
                        ArtificialIntelligenceAccess.push(new Unit(3887, -18275, "Lizard", true, "Lizpor"));
                        ArtificialIntelligenceAccess.push(new Unit(4323, -17698, "Narthwarp", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(4061, -17747, "Narthwarp", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(2277, -18032, "Grib", false, "Galch"));
                        ArtificialIntelligenceAccess.push(new Unit(3146, -17891, "Grib", false, "Giich"));
                        ArtificialIntelligenceAccess.push(new Unit(3224, -18019, "Grib", false, "Giichii"));
                        ArtificialIntelligenceAccess.push(new Unit(3425, -18015, "Grib", true, "Giichiich"));
                        ArtificialIntelligenceAccess.push(new Unit(3448, -17765, "Grib", false, "Giichiichii"));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(3419, -19562, "Varn", false, "Vam"));
                        ArtificialIntelligenceAccess.push(new Unit(3419, -19562, "Lizard", true, "LizardBoy"));
                        ArtificialIntelligenceAccess.push(new Unit(3686, -20349, "Lizard", false, "Lizp"));
                        ArtificialIntelligenceAccess.push(new Unit(3615, -20287, "Lizard", true, "Lizpon"));
                        ArtificialIntelligenceAccess.push(new Unit(2647, -18539, "Grib", false, "Gulch"));
                        ArtificialIntelligenceAccess.push(new Unit(2333, -18795, "Grib", false, "Golch"));
                        ArtificialIntelligenceAccess.push(new Unit(2706, -18085, "BlackBear", false, "Juvjuvjuv"));
                        ArtificialIntelligenceAccess.push(new Unit(3973, -18693, "Narthwarp", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(4503, -18785, "Varn", false, "Tumvam"));
                        ArtificialIntelligenceAccess.push(new Unit(3887, -18275, "Lizard", false, "Lizpy"));
                        ArtificialIntelligenceAccess.push(new Unit(4323, -17698, "Narthwarp", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(2277, -18032, "Varn", false, "Vamtum"));
                        ArtificialIntelligenceAccess.push(new Unit(3146, -17891, "Varn", false, "Giich"));
                        ArtificialIntelligenceAccess.push(new Unit(3224, -18019, "Varn", false, "Giichii"));
                        ArtificialIntelligenceAccess.push(new Unit(3425, -18015, "Varn", false, "Giichiich"));
                        ArtificialIntelligenceAccess.push(new Unit(3448, -17765, "Varn", false, "Giichiichii"));
                        if (Math.random() < 0.6)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(3751, -17759, "varn", true, "Fizigor"));
                            ArtificialIntelligenceAccess.push(new Unit(3935, -20447, "Lizard", true, "Lizpila"));
                            ArtificialIntelligenceAccess.push(new Unit(4020, -20326, "Lizard", false, "Lizpil"));
                            ArtificialIntelligenceAccess.push(new Unit(4394, -20285, "Lizard", true, "Lizpilo"));
                            ArtificialIntelligenceAccess.push(new Unit(5151, -19278, "Lizard", false, "Lizpilona"));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(4855, -17761, "varn", false, "Fizigor"));
                            ArtificialIntelligenceAccess.push(new Unit(3935, -20447, "Lizard", false, "Lizpil"));
                            ArtificialIntelligenceAccess.push(new Unit(4020, -20326, "Lizard", true, "Lizpila"));
                            ArtificialIntelligenceAccess.push(new Unit(4809, -20370, "Lizard", true, "Lizpilo"));
                            ArtificialIntelligenceAccess.push(new Unit(5132, -19480, "Lizard", true, "Lizpilon"));
                        }
                    }


                }
                else if (random == 5) //Mostly docile-Narthwarps + a few other creatures...
                {
                    ArtificialIntelligenceAccess.push(new Unit(3393, -20539, "Narthwarp", false, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(3651, -20226, "Narthwarp", false, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(3700, -20367, "Narthwarp", false, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(3540, -20233, "Narthwarp", false, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(3151, -20186, "Narthwarp", false, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(3010, -20568, "Narthwarp", false, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(2549, -20398, "Narthwarp", false, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(2606, -20704, "Lizard", false, "Lizard"));
                    ArtificialIntelligenceAccess.push(new Unit(2274, -20513, "Lizard", false, "Lizard"));
                    ArtificialIntelligenceAccess.push(new Unit(1989, -20179, "Lizard", true, "Lizard"));
                    ArtificialIntelligenceAccess.push(new Unit(1728, -19425, "Lizard", false, "Lizard"));
                    ArtificialIntelligenceAccess.push(new Unit(2767, -18754, "Lizard", true, "Lizard"));
                    ArtificialIntelligenceAccess.push(new Unit(4579, -18346, "Lizard", false, "Lizard"));
                    ArtificialIntelligenceAccess.push(new Unit(3580, -17967, "Lizard", false, "Lizard"));

                    ArtificialIntelligenceAccess.push(new Unit(4252, -17859, "Varn", true, "Grib"));
                    ArtificialIntelligenceAccess.push(new Unit(4332, -17707, "Varn", false, "Grib"));
                    ArtificialIntelligenceAccess.push(new Unit(4427, -17490, "Varn", true, "Grib"));
                    ArtificialIntelligenceAccess.push(new Unit(4108, -17398, "Varn", false, "Grib"));
                    ArtificialIntelligenceAccess.push(new Unit(3794, -17792, "Varn", false, "Grib"));
                    ArtificialIntelligenceAccess.push(new Unit(3915, -17962, "Varn", true, "Grib"));

                    if (Math.random() > 0.71 && player.level >= 5)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(3705, -18333, "BlackBear", true, "Juv"));
                        ArtificialIntelligenceAccess.push(new Unit(4182, -18886, "Varn", true, "Luv"));
                        ArtificialIntelligenceAccess.push(new Unit(4611, -17819, "Varn", true, "Gribbly"));
                        ArtificialIntelligenceAccess.push(new Unit(2634, -19204, "Viper", false, "Serprul"));
                        ArtificialIntelligenceAccess.push(new Unit(2813, -20089, "Narthwarp", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(2685, -20290, "Narthwarp", false, "docile"));

                        if (Math.random() <= 0.34 && player.level >= 10)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(2371, -19404, "Narthwarp", true, "docile"));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(2371, -19404, "BlackBear", true, "docile"));
                        }
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(3705, -18333, "BlackBear", false, "Juvjuv"));
                        ArtificialIntelligenceAccess.push(new Unit(3538, -18844, "Viper", false, "Serprul"));
                        ArtificialIntelligenceAccess.push(new Unit(2359, -19873, "Narthwarp", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(2371, -19404, "BlackBear", false, "docile"));
                    }

                    ArtificialIntelligenceAccess.push(new Unit(4097, -18654, "BlackBear", false, "Juvo"));
                    ArtificialIntelligenceAccess.push(new Unit(2942, -18395, "BlackBear", false, "Juvon"));
                    ArtificialIntelligenceAccess.push(new Unit(4658, -18861, "Varn", true, "Luvy"));
                    ArtificialIntelligenceAccess.push(new Unit(4701, -18694, "Varn", false, "Luvii"));
                    ArtificialIntelligenceAccess.push(new Unit(2863, -19212, "Viper", false, "Serpral"));
                    ArtificialIntelligenceAccess.push(new Unit(2229, -18912, "Varn", false, "Luviy"));
                    ArtificialIntelligenceAccess.push(new Unit(2179, -18591, "Varn", false, "Luviiy"));
                    ArtificialIntelligenceAccess.push(new Unit(2019, -18381, "Varn", true, "Luvil"));
                    ArtificialIntelligenceAccess.push(new Unit(1800, -18703, "Varn", false, "Luviil"));
                    ArtificialIntelligenceAccess.push(new Unit(2122, -18902, "Varn", false, "Luviila"));
                    ArtificialIntelligenceAccess.push(new Unit(1664, -19146, "Varn", true, "Luto"));
                    ArtificialIntelligenceAccess.push(new Unit(1542, -19283, "Varn", false, "Luvluv"));
                    ArtificialIntelligenceAccess.push(new Unit(2045, -19245, "Varn", false, "Luviduv"));

                    ArtificialIntelligenceAccess.push(new Unit(2819, -19500, "Varn", true, "Luta"));
                    ArtificialIntelligenceAccess.push(new Unit(2644, -19719, "Varn", false, "Luvlov"));
                    ArtificialIntelligenceAccess.push(new Unit(2045, -19245, "Varn", false, "Luvidov"));
                    ArtificialIntelligenceAccess.push(new Unit(3225, -19798, "Varn", false, "Luvidove"));
                    ArtificialIntelligenceAccess.push(new Unit(3549, -19961, "Varn", true, "Luvlove"));
                    ArtificialIntelligenceAccess.push(new Unit(3725, -19595, "Varn", false, "Loveydove"));

                    ArtificialIntelligenceAccess.push(new Unit(2143, -18132, "Grib", true, "Giichiil"));

                    ArtificialIntelligenceAccess.push(new Unit(4244, -20082, "Narthwarp", false, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(4037, -20302, "Narthwarp", false, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(4595, -20192, "Narthwarp", false, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(4609, -19901, "Narthwarp", false, "docile"));

                    ArtificialIntelligenceAccess.push(new Unit(2493, -17938, "Shehid", true, "Kulborlii"));
                    ArtificialIntelligenceAccess.push(new Unit(2723, -17863, "Shehid", false, "Kulborliin"));
                    ArtificialIntelligenceAccess.push(new Unit(2812, -17989, "Shehid", true, "Kulborl"));
                    ArtificialIntelligenceAccess.push(new Unit(2689, -17946, "Shehid", false, "Kulboriin"));
                    ArtificialIntelligenceAccess.push(new Unit(2743, -18276, "Shehid", false, "Kulboliin"));
                    ArtificialIntelligenceAccess.push(new Unit(2896, -17759, "Shehid", false, "Koolboliin"));
                }
                else if (random == 6) //Docile-Gribs, docile-Narthwarps, Varn Pack, bit of a mix
                {
                    ArtificialIntelligenceAccess.push(new Unit(4291, -17495, "Grib", true, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(4347, -17692, "Grib", false, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(4096, -18117, "Grib", false, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(4484, -18050, "Grib", false, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(4170, -19196, "Grib", true, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(4281, -19688, "Grib", true, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(3790, -17838, "Lizard", false, "Lizard"));
                    ArtificialIntelligenceAccess.push(new Unit(3750, -18020, "Lizard", true, "Lizard"));
                    ArtificialIntelligenceAccess.push(new Unit(3645, -18037, "Lizard", false, "Lizard"));
                    ArtificialIntelligenceAccess.push(new Unit(4814, -18254, "Lizard", true, "Lizard"));
                    ArtificialIntelligenceAccess.push(new Unit(4598, -20192, "Lizard", false, "Lizard"));
                    ArtificialIntelligenceAccess.push(new Unit(4401, -20284, "Lizard", true, "Lizard"));
                    ArtificialIntelligenceAccess.push(new Unit(4307, -20421, "Lizard", false, "Lizard"));
                    ArtificialIntelligenceAccess.push(new Unit(4612, -17919, "Lizard", false, "Lizard"));
                    ArtificialIntelligenceAccess.push(new Unit(4433, -19881, "Narthwarp", false, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(4363, -20088, "Narthwarp", false, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(4653, -19999, "Ardil", false, "Chipp"));
                    ArtificialIntelligenceAccess.push(new Unit(3705, -19815, "BlackBear", false, "Juvjuv"));
                    ArtificialIntelligenceAccess.push(new Unit(3636, -20386, "BlackBear", true, "Juv"));
                    ArtificialIntelligenceAccess.push(new Unit(3323, -20671, "Viper", false, "Serpral"));
                    ArtificialIntelligenceAccess.push(new Unit(3051, -20328, "Varn", true, "Luta"));
                    ArtificialIntelligenceAccess.push(new Unit(3327, -20042, "Varn", true, "Luto"));
                    ArtificialIntelligenceAccess.push(new Unit(2976, -20028, "Varn", false, "Luvidov"));
                    ArtificialIntelligenceAccess.push(new Unit(2661, -20404, "Varn", false, "Luvidove"));
                    ArtificialIntelligenceAccess.push(new Unit(2784, -20705, "Varn", true, "Lute"));
                    ArtificialIntelligenceAccess.push(new Unit(2577, -20742, "Varn", false, "Luvydove"));
                    ArtificialIntelligenceAccess.push(new Unit(2465, -20662, "Varn", false, "Lovduv"));
                    ArtificialIntelligenceAccess.push(new Unit(2214, -20411, "Varn", true, "Luviidove"));
                    ArtificialIntelligenceAccess.push(new Unit(2161, -19494, "Narthwarp", false, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(2560, -19663, "Narthwarp", false, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(2800, -19032, "BlackBear", false, "Juvjuvjuv"));
                    ArtificialIntelligenceAccess.push(new Unit(2698, -18094, "BlackBear", true, "Juva"));
                    ArtificialIntelligenceAccess.push(new Unit(2608, -18573, "Grib", true, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(2041, -18980, "Grib", true, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(2091, -18130, "Grib", false, "docile"));
                }
                else if (random == 7) //Docile-BlackBears, Random, Vipers, docile-others, Lizards, Mix
                {
                    ArtificialIntelligenceAccess.push(new Unit(3429, -19926, "BlackBear", false, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(3153, -20195, "Narthwarp", false, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(3006, -20550, "Narthwarp", false, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(3864, -20276, "Viper", false, "Serpile"));
                    ArtificialIntelligenceAccess.push(new Unit(3294, -20656, "Viper", false, "Serpinala"));
                    ArtificialIntelligenceAccess.push(new Unit(2118, -18778, "Viper", false, "Serpella"));
                    ArtificialIntelligenceAccess.push(new Unit(3485, -18481, "Viper", false, "Serpine"));
                    ArtificialIntelligenceAccess.push(new Unit(2816, -20636, "Lizard", true, "Lizalina"));
                    ArtificialIntelligenceAccess.push(new Unit(2658, -20406, "Lizard", false, "Lizarene"));
                    ArtificialIntelligenceAccess.push(new Unit(2537, -20470, "Lizard", false, "Lizara"));
                    ArtificialIntelligenceAccess.push(new Unit(2596, -20183, "Lizard", false, "Lizelle"));
                    ArtificialIntelligenceAccess.push(new Unit(3901, -19211, "Lizard", false, "Lizarena")); //
                    ArtificialIntelligenceAccess.push(new Unit(3823, -19446, "Lizard", false, "Lizaria"));
                    ArtificialIntelligenceAccess.push(new Unit(3587, -19390, "Lizard", false, "Lizello"));
                    ArtificialIntelligenceAccess.push(new Unit(2693, -19898, "Lizard", true, "Lizette"));
                    ArtificialIntelligenceAccess.push(new Unit(3095, -19921, "Lizard", true, "Lizayette"));
                    ArtificialIntelligenceAccess.push(new Unit(2690, -18669, "Lizard", false, "Lizanburdough"));
                    ArtificialIntelligenceAccess.push(new Unit(4826, -20366, "Lizard", true, "Lizonardo Di'Caprio"));
                    ArtificialIntelligenceAccess.push(new Unit(2835, -20118, "BlackBear", false, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(2800, -19579, "BlackBear", true, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(3299, -18800, "Lizard", false, "Lizellia"));
                    ArtificialIntelligenceAccess.push(new Unit(3753, -19823, "BlackBear", true, "Juv"));
                    ArtificialIntelligenceAccess.push(new Unit(4704, -18702, "Grib", true, "Grit"));
                    ArtificialIntelligenceAccess.push(new Unit(4437, -18547, "Grib", true, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(4559, -18322, "Grib", false, "Gritlin"));
                    ArtificialIntelligenceAccess.push(new Unit(3569, -17987, "Narthwarp", false, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(4289, -17748, "BlackBear", true, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(2066, -19286, "Lizard", true, "Lizaloria"));

                    if (Math.random() > 0.32)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(3650, -20234, "BlackBear", true, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(3642, -20418, "BlackBear", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(3689, -20334, "BlackBear", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(2498, -19377, "BlackBear", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(2308, -19649, "Lizard", false, "Lizalite"));
                        ArtificialIntelligenceAccess.push(new Unit(4040, -19394, "Grib", false, "docile"));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(3632, -20281, "Viper", true, "Serpevera"));
                        ArtificialIntelligenceAccess.push(new Unit(2308, -19649, "BlackBear", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(4166, -17973, "BlackBear", false, "docile"));
                    }

                    if (Math.random() <= 0.47)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(2869, -18754, "Grib", true, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(3074, -19188, "Grib", true, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(2965, -18979, "Grib", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(2689, -18067, "Narthwarp", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(2373, -18223, "Narthwarp", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(3070, -18081, "Narthwarp", false, "Master Henriquez El Tercero"));
                        ArtificialIntelligenceAccess.push(new Unit(2677, -18246, "Narthwarp", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(3814, -18853, "BlackBear", true, "docile"));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(2869, -18754, "Varn", false, "Tum"));
                        ArtificialIntelligenceAccess.push(new Unit(3074, -19188, "Varn", true, "Timtum"));
                        ArtificialIntelligenceAccess.push(new Unit(2965, -18979, "Varn", true, "Tid"));
                        ArtificialIntelligenceAccess.push(new Unit(2689, -18067, "Grib", true, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(2373, -18223, "Grib", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(3070, -18081, "Narthwarp", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(2677, -18246, "Grib", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(3814, -18853, "BlackBear", false, "docile"));
                        ArtificialIntelligenceAccess.push(new Unit(1609, -19128, "Lizard", false, "Lizaline"));

                        if (Math.random() < 0.25)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(2504, -17936, "Viper", true, "Serprandora"));
                            ArtificialIntelligenceAccess.push(new Unit(4194, -20081, "BlackBear", false, "docile"));
                            ArtificialIntelligenceAccess.push(new Unit(4514, -19928, "BlackBear", false, "Juve"));
                            ArtificialIntelligenceAccess.push(new Unit(3710, -18617, "BlackBear", false, "docile"));
                            ArtificialIntelligenceAccess.push(new Unit(1647, -19177, "Lizard", true, "Lizalina"));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(2504, -17936, "Viper", false, "Serpranda"));
                            ArtificialIntelligenceAccess.push(new Unit(4750, -20065, "Varn", false, "Tum"));
                            ArtificialIntelligenceAccess.push(new Unit(4610, -19921, "Varn", false, "Timtum"));
                            ArtificialIntelligenceAccess.push(new Unit(4444, -20015, "Varn", true, "Tid"));
                            ArtificialIntelligenceAccess.push(new Unit(4433, -19836, "Varn", false, "Timtumtin"));
                            ArtificialIntelligenceAccess.push(new Unit(4073, -20007, "Varn", true, "Tidtim"));
                        }
                    }
                }

                //Plants in the plains
                scenicList.push(new Scenery("tenicPlant", 4733, -21143, 0, true));
                scenicList.push(new Scenery("tenicPlant", 4181, -15438, 6, true));
                scenicList.push(new Scenery("tenicPlant", -1836, -16383, -5, true));
                scenicList.push(new Scenery("tenicPlant", -2063, -19190, 2, true));
                scenicList.push(new Scenery("mufPlant", -2223, -22349, 0, true));
                scenicList.push(new Scenery("mufPlant", 1279, -22813, -4.444, true));
                scenicList.push(new Scenery("mufPlant", 4760, -22801, 5.45, true));
                scenicList.push(new Scenery("mufPlant", -986, -17496, 3.2, true));
                scenicList.push(new Scenery("mufPlant", 860, -20301, -2.34, true));
                scenicList.push(new Scenery("mufPlant", -2283, -17095, 6.1, true));
                scenicList.push(new Scenery("mufPlant", -1738, -22652, -6.1, true));
                scenicList.push(new Scenery("mufPlant", 3443, -21920, 1.4, true));
                scenicList.push(new Scenery("mufPlant", -2474, -20415, -1.5, true));
                scenicList.push(new Scenery("butterMellowPlant", 1056, -18795, 0, true));
                scenicList.push(new Scenery("butterMellowPlant", -1971, -21494, 2, true));
                scenicList.push(new Scenery("butterMellowPlant", 5900, -16792, 3, true));
                scenicList.push(new Scenery("butterMellowPlant", 2159, -17200, 5, true));
                scenicList.push(new Scenery("butterMellowPlant", -2656, -22817, -1, true));
                scenicList.push(new Scenery("butterMellowPlant", 6028, -15547, -4.5, true));
                scenicList.push(new Scenery("palntPlant", 2735, -21625, 1, true));
                scenicList.push(new Scenery("palntPlant", 5698, -18767, 0, true));
                scenicList.push(new Scenery("palntPlant", 1118, -20842, 2.2, true));
                scenicList.push(new Scenery("palntPlant", 295, -20660, 8, true));
                scenicList.push(new Scenery("palntPlant", -1186, -20800, -2.5, true));
                scenicList.push(new Scenery("palntPlant", 3159, -16400, 2.8, true));
                scenicList.push(new Scenery("palntPlant", 2825, -14371, 3.8, true));
                scenicList.push(new Scenery("palntPlant", -2596, -17742, -0.024, true));
                scenicList.push(new Scenery("palntPlant", -853, -22338, 0, true));
                scenicList.push(new Scenery("palntPlant", -2523, -21197, -2.4, true));
                scenicList.push(new Scenery("palntPlant", -1395, -19579, 1.1, true));
                scenicList.push(new Scenery("palntPlant", -1481, -18743, 3, true));
                scenicList.push(new Scenery("palntPlant", 6238, -21848, 0.55, true));
                scenicList.push(new Scenery("palntPlant", 2321, -14880, -1.85, true));
                scenicList.push(new Scenery("palntPlant", 4610, -16078, 5, true));
                scenicList.push(new Scenery("techiPlant", 1616, -20636, 0, true));
                scenicList.push(new Scenery("techiPlant", 1652, -21154, -1.2, true));
                scenicList.push(new Scenery("techiPlant", 894, -19586, -4.2, true));
                scenicList.push(new Scenery("techiPlant", -915, -21455, 3.56, true));
                scenicList.push(new Scenery("techiPlant", -1032, -21601, -3.08, true));
                scenicList.push(new Scenery("techiPlant", -642, -20181, -5.56, true));
                scenicList.push(new Scenery("techiPlant", 4065, -17035, -2.25, true));
                scenicList.push(new Scenery("techiPlant", 1174, -14411, 2.75, true));
                scenicList.push(new Scenery("techiPlant", -2122, -18474, 5.75, true));
                scenicList.push(new Scenery("techiPlant", -799, -19885, -3.92, true));
                scenicList.push(new Scenery("techiPlant", 5837, -17667, 4.22, true));
                scenicList.push(new Scenery("techiPlant", -943, -18314, 5, true));
                scenicList.push(new Scenery("techiPlant", 4462, -14910, 6, true));
                scenicList.push(new Scenery("techiPlant", 5925, -21159, -3.3, true));
                scenicList.push(new Scenery("techiPlant", 6575, -16872, 0, true));
                scenicList.push(new Scenery("techiPlant", 3259, -15092, 0.5, true));
                scenicList.push(new Scenery("techiPlant", 5405, -19306, 6.3, true));
                scenicList.push(new Scenery("techiPlant", 5434, -17520, 3.5, true));
                scenicList.push(new Scenery("techiPlant", -2166, -18274, 1, true));
                scenicList.push(new Scenery("techiPlant", 4024, -14955, 2.25, true));
                scenicList.push(new Scenery("luufPlant", 5068, -17446, -2.06, true));
                scenicList.push(new Scenery("luufPlant", 2710, -16097, -1, true));
                scenicList.push(new Scenery("luufPlant", -1693, -15572, 3, true));
                scenicList.push(new Scenery("luufPlant", -1377, -19963, 0, true));
                scenicList.push(new Scenery("luufPlant", -1497, -23407, 4.6, true));
                scenicList.push(new Scenery("luufPlant", -1421, -14786, -6, true));
                scenicList.push(new Scenery("itlinPlant", 1332, -21470, 2.3, true));
                scenicList.push(new Scenery("itlinPlant", 6052, -19890, -2.9, true));
                scenicList.push(new Scenery("itlinPlant", 6342, -14468, 4.1, true));
                scenicList.push(new Scenery("itlinPlant", -675, -20348, 6.425, true));
                scenicList.push(new Scenery("itlinPlant", -2905, -17392, -5.3, true));
                scenicList.push(new Scenery("itlinPlant", -2447, -23431, 1.3, true));
                scenicList.push(new Scenery("grushweedPlant", 5971, -14811, 6.1, 1));
                scenicList.push(new Scenery("grushweedPlant", 6399, -14768, 3.05, 1.7));
                scenicList.push(new Scenery("grushweedPlant", -1291, -18621, 3.05, 1.3));
                scenicList.push(new Scenery("grushweedPlant", -977, -18860, 0, 0.6));
                scenicList.push(new Scenery("grushweedPlant", -732, -19624, 4.6, 1.5));
                scenicList.push(new Scenery("grushweedPlant", -808, -19963, 0.38, 1));

                //Random
                random = Math.floor(Math.random() * 8);

                if (random == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(6249, -14933, "Grush", true, "Grassy"));
                    ArtificialIntelligenceAccess.push(new Unit(2030, -15428, "Grush", "baby", "Gratzini"));
                    ArtificialIntelligenceAccess.push(new Unit(2047, -15510, "Grush", false, "Gratz"));
                }
                else
                {
                    scenicList.push(new Scenery("grushweedPlant", 6249, -14933, 0, 1.5));
                    scenicList.push(new Scenery("grushweedPlant", 2030, -15428, 0, 0.49));
                    scenicList.push(new Scenery("grushweedPlant", 2047, -15510, 1, 1.02));
                }

                if (random == 2)
                {
                    ArtificialIntelligenceAccess.push(new Unit(6201, -14686, "Grush", false, "Grassy-ass"));
                    ArtificialIntelligenceAccess.push(new Unit(6169, -14817, "Grush", "baby", "Grassito"));
                }
                else
                {
                    scenicList.push(new Scenery("grushweedPlant", 6201, -14686, 0, 1));
                    scenicList.push(new Scenery("grushweedPlant", 6169, -14817, 0, 0.6));
                }

                if (random == 4)
                {
                    ArtificialIntelligenceAccess.push(new Unit(1814, -15460, "Grush", false, "Grasselle"));
                    ArtificialIntelligenceAccess.push(new Unit(5946, -14724, "Grush", false, "Grassia"));
                    ArtificialIntelligenceAccess.push(new Unit(6012, -14645, "Grush", "baby", "Grassita"));
                    ArtificialIntelligenceAccess.push(new Unit(-940, -18757, "Grush", false, "Grassette"));
                    ArtificialIntelligenceAccess.push(new Unit(-738, -19814, "Grush", "baby", "Hierbita"));
                    ArtificialIntelligenceAccess.push(new Unit(-824, -19786, "Grush", "baby", "Pastito"));
                    ArtificialIntelligenceAccess.push(new Unit(-923, -19865, "Grush", false, "Hierba"));
                }
                else
                {
                    scenicList.push(new Scenery("grushweedPlant", -738, -19814, 0, 0.6));
                    scenicList.push(new Scenery("grushweedPlant", -824, -19786, 0, 0.6));
                    scenicList.push(new Scenery("grushweedPlant", -923, -19865, 0, 1));
                    scenicList.push(new Scenery("grushweedPlant", 5946, -14724, 0, 1));
                    scenicList.push(new Scenery("grushweedPlant", 6012, -14645, 0, 0.6));
                    scenicList.push(new Scenery("grushweedPlant", 1814, -15460, 0, 1));
                    scenicList.push(new Scenery("grushweedPlant", -940, -18757, -2, 1.25));
                }

                if (random == 5)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-1723, -18922, "Grush", "giant", "The Hill"));
                    ArtificialIntelligenceAccess.push(new Unit(6622, -14666, "Grush", false, "Grassio"));
                }
                else
                {
                    scenicList.push(new Scenery("grushweedPlant", 6622, -14666, 0.34, 1.21));
                    scenicList.push(new Scenery("grushweedPlant", -1723, -18922, 0, 3));
                }

                if (random == 7)
                {
                    ArtificialIntelligenceAccess.push(new Unit(2179, -15473, "Grush", false, "Grassi"));
                    scenicList.push(new Scenery("grushweedPlant", -1562, -18668, 0, 1.9));
                }
                else
                {
                    scenicList.push(new Scenery("grushweedPlant", 2179, -15473, 0, 1));
                }

                if (random == 8)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-644, -19755, "Grush", false, "Grawly"));
                    ArtificialIntelligenceAccess.push(new Unit(-1177, -18763, "Grush", true, "Grawls"));
                    ArtificialIntelligenceAccess.push(new Unit(2258, -15590, "Grush", false, "Grass"));
                }
                else
                {
                    scenicList.push(new Scenery("grushweedPlant", -1177, -18763, 4, 1.6));
                    scenicList.push(new Scenery("grushweedPlant", 2258, -15590, -4.34, 0.92));
                    scenicList.push(new Scenery("grushweedPlant", -644, -19755, 0, 1));
                }

                if (quests.lostGirlFound == false && quests.lostGirlQuest == true)
                {
                    ArtificialIntelligenceAccess.push(new Unit(4795, -18752, "StoneGolem", "baby", "Sleeping Stone"));
                }
                if (uniqueChars.ireneLDS == true && quests.lostGirlFound == false && quests.lostGirlQuest == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Irene, Fenwik's Daughter")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(5697, -19390, "Person", false, "Irene, Fenwik's Daughter", {race: "Kel", faction: "Kel", personality: "scared", outfit: ["ardilFurClothing", 0], weapon: ["none", [0.1, 0.05], 0, 9, 0.9], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], kid: true, patrolStops: 0, patrolLoop: true, route:[[2049, 1021], [1943, 1127], [1690, 1021]]}));
                    }
                }
                //Avraks/Evraks of the plains
                ArtificialIntelligenceAccess.push(new Unit(2991, -14637, "Evrak", false, "Telve"));
                ArtificialIntelligenceAccess.push(new Unit(4922, -15301, "Avrak", false, "Akreve"));
                ArtificialIntelligenceAccess.push(new Unit(2802, -17230, "Avrak", false, "Akrevel"));
                ArtificialIntelligenceAccess.push(new Unit(6208, -18260, "Avrak", false, "Akrevii"));
                ArtificialIntelligenceAccess.push(new Unit(4030, -23183, "Evrak", false, "Telvel"));
                ArtificialIntelligenceAccess.push(new Unit(2093, -23518, "Evrak", false, "Telvel"));
                ArtificialIntelligenceAccess.push(new Unit(-2319, -21510, "Avrak", false, "Akrevele"));
                ArtificialIntelligenceAccess.push(new Unit(-1762, -19934, "Avrak", false, "Akrevelii"));
                ArtificialIntelligenceAccess.push(new Unit(-1151, -14374, "Evrak", false, "Telven"));
                ArtificialIntelligenceAccess.push(new Unit(-1944, -15540, "Avrak", false, "Akreven"));

                //Mofu Nests / Mofu
                ArtificialIntelligenceAccess.push(new Unit(-1421, -23142, "Mofu", true, "Klenda"));
                ArtificialIntelligenceAccess.push(new Unit(-943, -23383, "Mofu", true, "Klen"));
                ArtificialIntelligenceAccess.push(new Unit(-1126, -23311, "Mofu", false, "Klene"));
                ArtificialIntelligenceAccess.push(new Unit(-1043, -23077, "Mofu", false, "Klena"));
                ArtificialIntelligenceAccess.push(new Unit(-1037, -23202, "Mofu", "baby", "Klee"));
                ArtificialIntelligenceAccess.push(new Unit(-1342, -23373, "Mofu", "baby", "Klea"));
                ArtificialIntelligenceAccess.push(new Unit(-1001, -23405, "Mofu", "baby", "Kleo"));
                ArtificialIntelligenceAccess.push(new Unit(-1467, -23256, "Mofu", "baby", "Kley"));
                ArtificialIntelligenceAccess.push(new Unit(-1505, -23383, "Mofu", false, "Kleno"));
                ArtificialIntelligenceAccess.push(new Unit(-1194, -23568, "Mofu", true, "Klendo"));
                ArtificialIntelligenceAccess.push(new Unit(-1641, -23205, "Mofu", false, "Klenoo"));
                ArtificialIntelligenceAccess.push(new Unit(-1365, -22911, "Mofu", false, "Klendoo"));
                ArtificialIntelligenceAccess.push(new Unit(-1194, -22876, "Mofu", "baby", "Kli"));
                ArtificialIntelligenceAccess.push(new Unit(1908, -23210, "Mofu", false, "Klendup"));
                ArtificialIntelligenceAccess.push(new Unit(2133, -23285, "Mofu", false, "Klip"));
                ArtificialIntelligenceAccess.push(new Unit(1998, -23350, "Mofu", "baby", "Klup"));
                ArtificialIntelligenceAccess.push(new Unit(848, -20033, "Mofu", true, "Klendup"));
                scenicList.push(new Scenery("mofuNest", -943, -23383, -5.5, 1.4)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("mofuNest", -1126, -23311, 6, 1.124)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("mofuNest", -1043, -23077, -1, 1)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("mofuNest", -1421, -23142, -3, 1.6)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("mofuNest", -1505, -23383, 2.5, 1.25)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("mofuNest", -1365, -22911, 4.3, 1)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("mofuNest", 1908, -23210, -4.6, 1.055)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("mofuNest", 2133, -23285, 2.1, 0.9)); //for mofu nests the last number determines its size multiplier.

                //Naaprid herds
                ArtificialIntelligenceAccess.push(new Unit(-1463, -22360, "Naaprid", true, "gove"));
                ArtificialIntelligenceAccess.push(new Unit(-1270, -22172, "Naaprid", true, "gabe"));
                ArtificialIntelligenceAccess.push(new Unit(-1635, -22635, "Naaprid", false, "gebriela"));
                ArtificialIntelligenceAccess.push(new Unit(-1061, -22709, "Naaprid", false, "govree"));
                ArtificialIntelligenceAccess.push(new Unit(-990, -22556, "Naaprid", "baby", "gode"));
                ArtificialIntelligenceAccess.push(new Unit(5784, -20732, "Naaprid", true, "gebriel"));
                ArtificialIntelligenceAccess.push(new Unit(5883, -20926, "Naaprid", false, "gabii"));
                ArtificialIntelligenceAccess.push(new Unit(5514, -21045, "Naaprid", false, "govrea"));

                //Frich Packs
                ArtificialIntelligenceAccess.push(new Unit(-2650, -22483, "Frich", false, "Friz"));
                ArtificialIntelligenceAccess.push(new Unit(-2897, -22179, "Frich", false, "Frez"));
                ArtificialIntelligenceAccess.push(new Unit(-2765, -22644, "Frich", true, "Frilz"));
                ArtificialIntelligenceAccess.push(new Unit(-2363, -22713, "Frich", true, "Frelz"));
                ArtificialIntelligenceAccess.push(new Unit(-2864, -22379, "Frich", false, "Frizly"));
                ArtificialIntelligenceAccess.push(new Unit(-1810, -20015, "Frich", true, "Fraz"));
                ArtificialIntelligenceAccess.push(new Unit(-1678, -20281, "Frich", false, "Frezno"));
                ArtificialIntelligenceAccess.push(new Unit(-1804, -20245, "Frich", false, "Freliz"));
                ArtificialIntelligenceAccess.push(new Unit(-2473, -20333, "Frich", false, "Freloz"));
                ArtificialIntelligenceAccess.push(new Unit(-2697, -19285, "Frich", true, "Frel"));
                ArtificialIntelligenceAccess.push(new Unit(-1085, -18128, "Frich", true, "Frele"));
                ArtificialIntelligenceAccess.push(new Unit(1193, -14827, "Frich", false, "Fraloz"));
                ArtificialIntelligenceAccess.push(new Unit(6703, -19799, "Frich", false, "Fralooz"));
                ArtificialIntelligenceAccess.push(new Unit(5863, -22420, "Frich", true, "Freliz"));
                ArtificialIntelligenceAccess.push(new Unit(6346, -22565, "Frich", false, "Freloz"));
                ArtificialIntelligenceAccess.push(new Unit(6511, -15230, "Frich", true, "Frelaz"));
                ArtificialIntelligenceAccess.push(new Unit(878, -19133, "Frich", false, "Frooz"));

                //Varns
                ArtificialIntelligenceAccess.push(new Unit(-1244, -19247, "Varn", true, "Frel"));
                ArtificialIntelligenceAccess.push(new Unit(5740, -17079, "Varn", false, "Fral"));
                ArtificialIntelligenceAccess.push(new Unit(4016, -21134, "Varn", true, "Freel"));
                ArtificialIntelligenceAccess.push(new Unit(3907, -21317, "Varn", true, "Frol"));
                ArtificialIntelligenceAccess.push(new Unit(2801, -21413, "Varn", false, "Frool"));
                ArtificialIntelligenceAccess.push(new Unit(1155, -17721, "Varn", true, "Frul"));

                //Ardils
                ArtificialIntelligenceAccess.push(new Unit(-558, -22201, "Ardil", false, "Fluffers"));
                ArtificialIntelligenceAccess.push(new Unit(-815, -20960, "Ardil", true, "Fluffiez"));
                ArtificialIntelligenceAccess.push(new Unit(-1514, -16661, "Ardil", false, "Fluffy"));
                ArtificialIntelligenceAccess.push(new Unit(1929, -16664, "Ardil", true, "Fluffez"));
                ArtificialIntelligenceAccess.push(new Unit(5968, -19355, "Ardil", false, "Fluff"));
                ArtificialIntelligenceAccess.push(new Unit(1385, -21580, "Ardil", true, "Fluffel"));

                //sign to Calcutt
                scenicList.push(new Scenery("sign", -212, -15217, Math.PI / 2, 1, "Calcutt Village - 52 sectors"));

                change = "s2";
            }
        }
        else if (region == "s3") //Y > 6290 && Y < 32370
        {
            if (change != "s3")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                //citizens of Echlin village/tribe
                if (quests.fenwikEchlinArmed)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-995, -30767, "Soldier", false, "Echlin Tribe Warrior", {race: "Kel", faction: "Kel", con: 4, speed: 1.65, outfit: ["naapridLeatherArmour", 4], weapon: ["kellishClaymore", [24, 9], 0, 50, 2.06], ranged: [false, "arrow", 5, 1500, 1, 3, 0, "none", 1.50], patrolStops: 0, patrolLoop: true, route:[[3071, 314], [3014, 394], [2218, 346]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-1348, -30360, "Soldier", false, "Echlin Tribe Warrior", {race: "Kel", faction: "Kel", con: 2, speed: 1.80, outfit: ["naapridLeatherArmour", 4], weapon: ["kellishClaymore", [23, 9], 0, 50, 2.15], ranged: [false, "arrow", 5, 1500, 1, 3, 0, "none", 1.50], patrolStops: 6, patrolLoop: true, route:[[-218, -30349], [-227, -31505], [-1706, -31503], [-1724, -30600], [-1366, -30601], [-1348, -30360]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-295, -30422, "Soldier", false, "Echlin Tribe Warrior", {race: "Kel", faction: "Kel", con: 1, speed: 1.95, outfit: ["naapridLeatherArmour", 4], weapon: ["kellishClaymore", [18, 9], 0, 50, 3], ranged: [false, "arrow", 7, 1500, 1, 3, 0, "none", 1.50], patrolStops: 0, patrolLoop: true, route:[[3071, 314], [3014, 394], [2218, 346]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-588, -31257, "Soldier", false, "Echlin Tribe Warrior", {race: "Kel", faction: "Kel", con: 2, speed: 1.7, outfit: ["naapridLeatherArmour", 4], weapon: ["kellishClaymore", [20, 9], 0, 50, 3.15], ranged: [false, "arrow", 7, 1500, 1, 3, 0, "none", 1.50], patrolStops: 0, patrolLoop: true, route:[[3071, 314], [3014, 394], [2218, 346]]}));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(-995, -30767, "Soldier", false, "Echlin Tribe Warrior", {race: "Kel", faction: "Kel", con: 4, speed: 1.65, outfit: ["naapridLeatherArmour", 4], weapon: ["warHammer", [10, 1], 8, 16, 1], ranged: [false, "arrow", 5, 1500, 1, 3, 0, "none", 1.50], patrolStops: 0, patrolLoop: true, route:[[3071, 314], [3014, 394], [2218, 346]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-1348, -30360, "Soldier", false, "Echlin Tribe Warrior", {race: "Kel", faction: "Kel", con: 2, speed: 1.80, outfit: ["naapridLeatherArmour", 4], weapon: ["warHammer", [11, 1], 8, 16, 1], ranged: [false, "arrow", 5, 1500, 1, 3, 0, "none", 1.50], patrolStops: 6, patrolLoop: true, route:[[-218, -30349], [-227, -31505], [-1706, -31503], [-1724, -30600], [-1366, -30601], [-1348, -30360]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-295, -30422, "Soldier", false, "Echlin Tribe Warrior", {race: "Kel", faction: "Kel", con: 1, speed: 1.95, outfit: ["naapridLeatherArmour", 4], weapon: ["longbow", [8, 1], 8, 16, 1], ranged: [true, "arrow", 7, 1500, 1, 5, 0, "none", 1.50], patrolStops: 0, patrolLoop: true, route:[[3071, 314], [3014, 394], [2218, 346]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-588, -31257, "Soldier", false, "Echlin Tribe Warrior", {race: "Kel", faction: "Kel", con: 2, speed: 1.7, outfit: ["naapridLeatherArmour", 4], weapon: ["longbow", [8, 1], 8, 16, 1], ranged: [true, "arrow", 7, 1200, 1, 3, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[3071, 314], [3014, 394], [2218, 346]]}));
                }

                if (uniqueChars.teberLDS == true && quests.bountyTeberCompletionStyle != "royal pardon")
                {
                    var teberName = "Teber the Artisan";
                    if (quests.bountyTeberQuest == true)
                    {
                        teberName = "Teber the Deserter";
                    }

                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == teberName)
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        if (quests.fenwikEchlinArmed)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-441, -30503, "Person", false, teberName, {race: "Freynor", faction: "Kel", personality: "violent", outfit: ["naapridLeatherArmour", 4], weapon: ["kellishClaymore", [19, 2], 0, 50, 2.45], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[2049, 1021], [1943, 1127], [1690, 1021]], merchant: true, merchandise: [[new Item("coins", false, false), 62], [new Item("naapridFiber", false, false), 11], [new Item("ironRing", false, false), 6], [new Item("pintGlass", false, false), 18], [new Item("potionGlass", false, false), 16], [new Item("glassJar", false, false), 7]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-441, -30503, "Person", false, teberName, {race: "Freynor", faction: "Kel", personality: "violent", outfit: ["naapridLeatherArmour", 4], weapon: ["freydicSword", [6, 6], 0, 0, 1.45], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[2049, 1021], [1943, 1127], [1690, 1021]], merchant: true, merchandise: [[new Item("coins", false, false), 62], [new Item("naapridFiber", false, false), 11], [new Item("ironRing", false, false), 6], [new Item("pintGlass", false, false), 18], [new Item("potionGlass", false, false), 16], [new Item("glassJar", false, false), 7]]}));
                        }

                        for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                        {
                            if (ArtificialIntelligenceAccess[i].ID == teberName)
                            {
                                ArtificialIntelligenceAccess[i].healthMAX = 29;
                                ArtificialIntelligenceAccess[i].health = 29;
                                ArtificialIntelligenceAccess[i].speed += 0.05;
                                ArtificialIntelligenceAccess[i].grudge = 340;
                            }
                        }
                    }
                }
                if (uniqueChars.roselinLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Roselin the Tailor")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-1312, -31363, "Person", false, "Roselin the Tailor", {race: "Kel", faction: "Kel", personality: "scared", outfit: ["naapridLeatherArmour", 4], weapon: ["none", [0.1, 0.4], 0, 0, 0.65], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[2049, 1021], [1943, 1127], [1690, 1021]], merchant: true, merchandise: [[new Item("coins", false, false), 30], [new Item("naapridPelt", false, false), 7], [new Item("naapridHorn", false, false), 12], [new Item("naapridLeatherArmour", false, false), 5]]}));
                    }
                }
                if (uniqueChars.fenwikLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Fenwik the Smith")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        if (quests.fenwikShopStyle == "normal")
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-963, -31386, "Person", false, "Fenwik the Smith", {race: "Kel", faction: "Kel", personality: "violent", outfit: ["naapridLeatherArmour", 4], weapon: ["warHammer", [8, 1], 8, 16, 1.4], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[2049, 1021], [1943, 1127], [1690, 1021]], merchant: true, merchandise: [[new Item("coins", false, false), 43], [new Item("iron", false, false), 2], [new Item("kellishSawClub", false, false), 3], [new Item("warHammer", false, false), 4], [new Item("kellishClaymore", false, false), 1], [new Item("timberAxe", false, false), 2], [new Item("longbow", false, false), 1], [new Item("arrow", false, false), 9], [new Item("mace", false, false), 2], [new Item("hammer", false, false), 3]]}));
                        }
                        else if (quests.fenwikShopStyle == "cash")
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-963, -31386, "Person", false, "Fenwik the Smith", {race: "Kel", faction: "Kel", personality: "violent", outfit: ["naapridLeatherArmour", 4], weapon: ["warHammer", [8, 1], 8, 16, 1.4], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[2049, 1021], [1943, 1127], [1690, 1021]], merchant: true, merchandise: [[new Item("coins", false, false), 145], [new Item("kellishSawClub", false, false), 1], [new Item("warHammer", false, false), 1], [new Item("hammer", false, false), 1]]}));
                        }
                    }
                }
                if (uniqueChars.ireneLDS == true && quests.lostGirlFound == true)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-1117, -31425, "Ardil", true, "Irene's Pet Ardil"));
                    ArtificialIntelligenceAccess.push(new Unit(-1004, -31483, "Ardil", true, "Irene's Pet Ardil"));
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Irene")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-1076, -31514, "Person", false, "Irene", {race: "Kel", faction: "Kel", personality: "scared", outfit: ["ardilFurClothing", 0], weapon: ["none", [0.1, 0.05], 0, 9, 0.9], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], kid: true, patrolStops: 0, patrolLoop: true, route:[[2049, 1021], [1943, 1127], [1690, 1021]]}));
                    }
                }
                if (uniqueChars.schuylarLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Chieftain Schuylar")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-1281, -30842, "Person", false, "Chieftain Schuylar", {race: "Kel", faction: "Kel", personality: "violent", outfit: ["naapridLeatherArmour", 6], weapon: ["kellishClaymore", [25, 1], 0, 50, 2], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[2049, 1021], [1943, 1127], [1690, 1021]], merchant: true, merchandise: [[new Item("coins", false, false), 492], [new Item("naapridDrinkinghornFull", false, false), 19], [new Item("naapridMilkhornFull", false, false), 14], [new Item("kellishClayPotOfNaapridMilk", false, false), 6], [new Item("naapridButter", false, false), 5], [new Item("kellishClayPotOfMushroomStew", false, false), 1], [new Item("kellishClayPotOfWater", false, false), 8], [new Item("kellishClayPot", false, false), 9], [new Item("santhBread", false, false), 1], [new Item("kellishSanthDough", false, false), 2], [new Item("rawNaapridFlesh", false, false), 4], [new Item("naapridMeat", false, false), 2], [new Item("pumpkin", false, false), 2], [new Item("jackOLanternEmpty", false, false), 3], [new Item("beesWax", false, false), 4], [new Item("candle", false, false), 6], [new Item("fireStarter", false, false), 2]]}));

                        for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                        {
                            if (ArtificialIntelligenceAccess[i].ID == "Chieftain Schuylar")
                            {
                                ArtificialIntelligenceAccess[i].healthMAX = 32;
                                ArtificialIntelligenceAccess[i].health = 32;
                                ArtificialIntelligenceAccess[i].speed += 0.55;
                                ArtificialIntelligenceAccess[i].grudge = 340;

                            }
                        }
                    }
                }
                //Buildings
                scenicList.push(new Scenery("kellishBuilding1", -1238, -30472, 0, true));
                scenicList.push(new Scenery("kellishBuilding1", -879, -30432, 0, true));
                scenicList.push(new Scenery("kellishBuilding1", -443, -30529, 0, true));
                scenicList.push(new Scenery("kellishBuilding2", -741, -31419, 0, true));
                scenicList.push(new Scenery("kellishBuilding2", -382, -31379, 0, true));
                scenicList.push(new Scenery("kellishBuilding4", -469, -31083, 0, true));
                scenicList.push(new Scenery("kellishBuilding3", -1168, -31170, 0, true));
                scenicList.push(new Scenery("kellishBuilding3", -1319, -31348, 0, true));
                scenicList.push(new Scenery("kellishBuilding4", -312, -30807, 0, true));
                scenicList.push(new Scenery("kellishBuilding6", -1205, -30838, 0, true));

                //stuff
                scenicList.push(new Scenery("well", -718, -30700, 4, true));
                scenicList.push(new Scenery("campFire", -1186, -30846, -1.2, "permaLit"));

                //Echlin Village crafting stations
                scenicList.push(new Scenery("anvil", -884, -31318, -Math.PI * 1/4, true));
                scenicList.push(new Scenery("forge", -882, -31444, Math.PI * 1/2, true));
                scenicList.push(new Scenery("loom", -1327, -31313, 0, true));

                //Echlin Village Farm
                scenicList.push(new Scenery("suuliPlant", -1651 , -30665, 3, "kel"));

                scenicList.push(new Scenery("harstPlant", -1428 , -30652, 1, "kel"));
                scenicList.push(new Scenery("harstPlant", -1458 , -30652, 1, "kel"));
                scenicList.push(new Scenery("harstPlant", -1488 , -30652, 1, "kel"));
                scenicList.push(new Scenery("harstPlant", -1518 , -30652, 1, "kel"));
                scenicList.push(new Scenery("harstPlant", -1548 , -30652, 1, "kel"));
                scenicList.push(new Scenery("harstPlant", -1578 , -30652, 1, "kel"));

                scenicList.push(new Scenery("potatoPlant", -1428 , -30724, 1, "kel"));
                scenicList.push(new Scenery("potatoPlant", -1458 , -30724, 1, "kel"));
                scenicList.push(new Scenery("potatoPlant", -1488 , -30724, 1, "kel"));
                scenicList.push(new Scenery("potatoPlant", -1518 , -30724, 1, "kel"));
                scenicList.push(new Scenery("potatoPlant", -1548 , -30724, 1, "kel"));
                scenicList.push(new Scenery("potatoPlant", -1578 , -30724, 1, "kel"));

                scenicList.push(new Scenery("carrotPlant", -1428 , -30790, 1, "kel"));
                scenicList.push(new Scenery("carrotPlant", -1458 , -30790, 1, "kel"));
                scenicList.push(new Scenery("carrotPlant", -1488 , -30790, 1, "kel"));
                scenicList.push(new Scenery("carrotPlant", -1518 , -30790, 1, "kel"));
                scenicList.push(new Scenery("carrotPlant", -1548 , -30790, 1, "kel"));
                scenicList.push(new Scenery("carrotPlant", -1578 , -30790, 1, "kel"));

                scenicList.push(new Scenery("santhPlant", -1652 , -30738, 1, "kel"));
                scenicList.push(new Scenery("santhPlant", -1652 , -30768, 1, "kel"));
                scenicList.push(new Scenery("santhPlant", -1652 , -30798, 1, "kel"));
                scenicList.push(new Scenery("santhPlant", -1652 , -30828, 1, "kel"));

                scenicList.push(new Scenery("pumpkinPlant", -1653 , -30888, 2, "kel"));
                scenicList.push(new Scenery("pumpkinPlant", -1583 , -30888, -1, "kel"));
                scenicList.push(new Scenery("pumpkinPlant", -1513 , -30888, 1, "kel"));
                scenicList.push(new Scenery("pumpkinPlant", -1443 , -30888, 0, "kel"));

                ArtificialIntelligenceAccess.push(new Unit(-2089, -29849, "Mofu", false, "Tupper"));
                ArtificialIntelligenceAccess.push(new Unit(-2054, -29703, "Mofu", "baby", "Goozy"));
                ArtificialIntelligenceAccess.push(new Unit(-2278, -29667, "Mofu", false, "Tem"));
                ArtificialIntelligenceAccess.push(new Unit(-2372, -29720, "Mofu", "baby", "Tilby"));
                ArtificialIntelligenceAccess.push(new Unit(-2472, -29756, "Mofu", "baby", "Libby"));
                ArtificialIntelligenceAccess.push(new Unit(-2429, -29856, "Mofu", false, "Gelnam"));
                ArtificialIntelligenceAccess.push(new Unit(-2440, -29962, "Mofu", "baby", "Tally"));
                ArtificialIntelligenceAccess.push(new Unit(-2500, -29938, "Mofu", "baby", "Jilin"));
                ArtificialIntelligenceAccess.push(new Unit(-2176, -29434, "Mofu", true, "Loz"));
                ArtificialIntelligenceAccess.push(new Unit(-2368, -29393, "Mofu", "baby", "Kleena"));
                ArtificialIntelligenceAccess.push(new Unit(5547, -29081, "Mofu", "baby", "Feath"));
                ArtificialIntelligenceAccess.push(new Unit(5332, -28842, "Mofu", true, "Fey"));
                ArtificialIntelligenceAccess.push(new Unit(5245, -29093, "Mofu", false, "Fea"));
                ArtificialIntelligenceAccess.push(new Unit(5417, -28940, "Mofu", false, "Fella"));
                ArtificialIntelligenceAccess.push(new Unit(5699, -29055, "Mofu", false, "Afetho"));
                ArtificialIntelligenceAccess.push(new Unit(5526, -29155, "Mofu", true, "Ley"));
                ArtificialIntelligenceAccess.push(new Unit(5040, -28965, "Mofu", true, "Fellont"));
                ArtificialIntelligenceAccess.push(new Unit(5550, -28918, "Mofu", false, "Feo"));
                ArtificialIntelligenceAccess.push(new Unit(5929, -28989, "Mofu", false, "Fennel"));
                ArtificialIntelligenceAccess.push(new Unit(5353, -29162, "Mofu", "baby", "Oregano"));
                ArtificialIntelligenceAccess.push(new Unit(5163, -28992, "Mofu", "baby", "Lavender"));
                ArtificialIntelligenceAccess.push(new Unit(5356, -29044, "Mofu", "baby", "Thyme"));

                ArtificialIntelligenceAccess.push(new Unit(3760, -25089, "Ardil", false, "Fluffi"));
                ArtificialIntelligenceAccess.push(new Unit(1475, -26274, "Ardil", true, "Flof"));
                ArtificialIntelligenceAccess.push(new Unit(2087, -24322, "Ardil", false, "Fluffor"));
                ArtificialIntelligenceAccess.push(new Unit(4695, -31293, "Ardil", false, "Fluffim"));

                ArtificialIntelligenceAccess.push(new Unit(5860, -25482, "Naaprid", true, "tabe"));
                ArtificialIntelligenceAccess.push(new Unit(5715, -25851, "Naaprid", false, "tebriela"));
                ArtificialIntelligenceAccess.push(new Unit(5209, -25700, "Naaprid", false, "tovree"));
                ArtificialIntelligenceAccess.push(new Unit(5292, -25813, "Naaprid", "baby", "tode"));
                ArtificialIntelligenceAccess.push(new Unit(4712, -25481, "Naaprid", true, "tebriel"));
                ArtificialIntelligenceAccess.push(new Unit(4984, -25920, "Naaprid", "baby", "tabii"));
                ArtificialIntelligenceAccess.push(new Unit(5131, -26117, "Naaprid", false, "tovrea"));
                ArtificialIntelligenceAccess.push(new Unit(5702, -26234, "Naaprid", false, "tabel"));
                ArtificialIntelligenceAccess.push(new Unit(5549, -26092, "Naaprid", "baby", "tebel"));
                ArtificialIntelligenceAccess.push(new Unit(6176, -26436, "Naaprid", true, "tebe"));
                ArtificialIntelligenceAccess.push(new Unit(4849, -26178, "Naaprid", true, "telb"));
                ArtificialIntelligenceAccess.push(new Unit(-1573, -32540, "Naaprid", false, "thovrea"));
                ArtificialIntelligenceAccess.push(new Unit(-1065, -32518, "Naaprid", false, "thabel"));
                ArtificialIntelligenceAccess.push(new Unit(-1327, -32617, "Naaprid", "baby", "thebel"));
                ArtificialIntelligenceAccess.push(new Unit(-1165, -32271, "Naaprid", true, "thebe"));

                ArtificialIntelligenceAccess.push(new Unit(-1122, -25315, "Frich", true, "Ratter"));
                ArtificialIntelligenceAccess.push(new Unit(-875, -25470, "Frich", false, "Rata"));
                ArtificialIntelligenceAccess.push(new Unit(-2099, -24804, "Frich", false, "Raton"));
                ArtificialIntelligenceAccess.push(new Unit(-1799, -26221, "Frich", false, "Ratal"));
                ArtificialIntelligenceAccess.push(new Unit(-2069, -27769, "Frich", false, "Ratol"));
                ArtificialIntelligenceAccess.push(new Unit(-1980, -27949, "Frich", false, "Ratyl"));
                ArtificialIntelligenceAccess.push(new Unit(1314, -32450, "Frich", true, "Rattalon"));
                ArtificialIntelligenceAccess.push(new Unit(5609, -27402, "Frich", false, "Ratil"));
                ArtificialIntelligenceAccess.push(new Unit(5797, -27298, "Frich", false, "Ratul"));
                ArtificialIntelligenceAccess.push(new Unit(2245, -27179, "Frich", false, "Ratin"));
                ArtificialIntelligenceAccess.push(new Unit(1895, -25407, "Frich", true, "Rattail"));
                ArtificialIntelligenceAccess.push(new Unit(-1420, -29340, "Frich", false, "Rataul"));
                ArtificialIntelligenceAccess.push(new Unit(-1204, -29146, "Frich", false, "Ratein"));
                ArtificialIntelligenceAccess.push(new Unit(-1381, -33597, "Frich", true, "Froozle"));

                ArtificialIntelligenceAccess.push(new Unit(1314, -32450, "Avrak", false, "Ava"));

                scenicList.push(new Scenery("tunskMound", -2326, -30565, 0, true)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("tunskMound", -660, -29920, -3, true)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("tunskMound", -1619, -25422, 5, true)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("tunskMound", -1234, -26529, -1.5, true)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("tunskMound", 219, -26761, 2.34, true)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("tunskMound", 1328, -27619, 4, true)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("tunskMound", 1089, -28642, -2, true)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("tunskMound", 5323, -28604, 6.44, true)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("tunskMound", 5837, -32383, 1, true)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("tunskMound", 2475, -32587, -4.2, true)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("tunskMound", 3009, -33697, 5.7, true)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("tunskMound", 1016, -32180, 3.3, true)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("tunskMound", 2800, -30129, -3.89, true)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("tunskMound", 3927, -25973, 3.9, true)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("tunskMound", 778, -25529, 4.5, true)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("tunskMound", 1433, -24726, -4.5, true)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("tunskMound", 2162, -28579, -5.3, true)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("tunskMound", -2110, -31828, -2.25, true)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("tunskMound", -1159, -33195, 3.5, true)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("tunskMound", -2384, -33735, -1, true)); //for mofu nests the last number determines its size multiplier.

                //Mofu Habitations
                scenicList.push(new Scenery("mofuNest", -2089, -29849, -3, 1.2)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("mofuNest", -2278, -29667, 1, 1)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("mofuNest", -2429, -29856, 0, 1.15)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("mofuNest", -2176, -29434, -2.245, 1.9)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("mofuNest", 5245, -29093, -6, 1.1)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("mofuNest", 5417, -28940, 1.9, 1.05)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("mofuNest", 5699, -29055, 0.65, 1.15)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("mofuNest", 5332, -28842, -3.845, 1.7)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("mofuNest", 5929, -28989, 4, 1.35)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("mofuNest", 5526, -29155, 5.45, 2.2)); //for mofu nests the last number determines its size multiplier.

                //Plantlife
                scenicList.push(new Scenery("grushweedPlant", -1934, -27527, 5, 1.2));
                scenicList.push(new Scenery("grushweedPlant", 5213, -32206, 2.3681, 1.15));
                scenicList.push(new Scenery("grushweedPlant", 5027, -32290, 2.3681, 0.96));
                scenicList.push(new Scenery("mufPlant", -1212, -25586, 2, true));
                scenicList.push(new Scenery("mufPlant", -1625, -28741, -4, true));
                scenicList.push(new Scenery("mufPlant", 3916, -26914, 3, true));
                scenicList.push(new Scenery("mufPlant", 3791, -28886, -6, true));
                scenicList.push(new Scenery("techiPlant", -2181, -30042, -3.5, true));
                scenicList.push(new Scenery("techiPlant", -574, -27261, 1.65, true));
                scenicList.push(new Scenery("techiPlant", 4316, -27563, -3.5, true));
                scenicList.push(new Scenery("techiPlant", 5929, -32834, 4.98, true));
                scenicList.push(new Scenery("techiPlant", 6297, -32969, -5.78, true));
                scenicList.push(new Scenery("techiPlant", 5597, -25983, -6.13, true));
                scenicList.push(new Scenery("techiPlant", 1211, -28938, 0, true));
                scenicList.push(new Scenery("techiPlant", -1191, -29547, -1.55, true));
                scenicList.push(new Scenery("luufPlant", -2190, -28265, 6, true));
                scenicList.push(new Scenery("luufPlant", 4912, -33426, -4.66, true));
                scenicList.push(new Scenery("itlinPlant", -2044, -26903, -5.9, true));
                scenicList.push(new Scenery("itlinPlant", 1175, -25095, 4.3, true));
                scenicList.push(new Scenery("itlinPlant", 3959, -31413, -3.3, true));
                scenicList.push(new Scenery("itlinPlant", -1843, -25164, 5, true));
                scenicList.push(new Scenery("tenicPlant", 5959, -27404, 2.7, true));
                scenicList.push(new Scenery("butterMellowPlant", 4959, -25479, -1, true));
                scenicList.push(new Scenery("butterMellowPlant", 3003, -32876, -2.2345, true));
                scenicList.push(new Scenery("palntPlant", 3347, -25438, -2.3, true));
                scenicList.push(new Scenery("palntPlant", 4799, -29996, 4.4, true));
                scenicList.push(new Scenery("palntPlant", 3751, -33251, -3.6, true));
                scenicList.push(new Scenery("palntPlant", 1771, -28054, -0.4, true));


                change = "s3";
            }
        }
        else if (region == "s1e1")
        {
            if (change != "s1e1")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                //Animals in the forest
                ArtificialIntelligenceAccess.push(new Unit(-12632, -4608, "Grib", false, "Kab"));
                ArtificialIntelligenceAccess.push(new Unit(-12339, -4511, "Grib", true, "Keb"));
                ArtificialIntelligenceAccess.push(new Unit(-12856, -4354, "Grib", true, "Kubb"));
                ArtificialIntelligenceAccess.push(new Unit(-12706, -4829, "Grib", true, "Kiib"));
                ArtificialIntelligenceAccess.push(new Unit(-12423, -5247, "Narthwarp", false, "Grax"));
                ArtificialIntelligenceAccess.push(new Unit(-11373, -4376, "Shehid", false, "Toot"));
                ArtificialIntelligenceAccess.push(new Unit(-11348, -4490, "Shehid", false, "Tut"));
                ArtificialIntelligenceAccess.push(new Unit(-11120, -4466, "Shehid", false, "Tat"));
                ArtificialIntelligenceAccess.push(new Unit(-10984, -4232, "Shehid", false, "Tittle"));
                ArtificialIntelligenceAccess.push(new Unit(-11225, -4217, "Shehid", false, "Tit"));
                ArtificialIntelligenceAccess.push(new Unit(-10009, -4348, "Shehid", false, "Tilt"));
                ArtificialIntelligenceAccess.push(new Unit(-10428, -4256, "BlackBear", true, "Grrrr"));
                ArtificialIntelligenceAccess.push(new Unit(-7498, -4088, "BlackBear", false, "Grrr"));
                ArtificialIntelligenceAccess.push(new Unit(-10009, -4348, "Shehid", false, "Tilt"));
                scenicList.push(new Scenery("ulgoyPlant", -11988, -4219, 2, 3.4));
                ArtificialIntelligenceAccess.push(new Unit(-12001, -4216, "Ulgoy", true, "Neptune"));
                ArtificialIntelligenceAccess.push(new Unit(-8839, -4188, "Varn", true, "fluff"));
                ArtificialIntelligenceAccess.push(new Unit(-9071, -4112, "Varn", false, "fluf"));
                ArtificialIntelligenceAccess.push(new Unit(-8965, -4248, "Varn", false, "flufff"));
                ArtificialIntelligenceAccess.push(new Unit(-11025, -4803, "Viper", false, "scale"));
                ArtificialIntelligenceAccess.push(new Unit(-11448, -4055, "Lizard", true, "eLIZabeth"));

                ArtificialIntelligenceAccess.push(new Unit(-9805, -9416, "Frich", false, "thugBug"));
                ArtificialIntelligenceAccess.push(new Unit(-9511, -9249, "Frich", true, "thugBug"));
                ArtificialIntelligenceAccess.push(new Unit(-9487, -9384, "Frich", false, "thugBug"));
                ArtificialIntelligenceAccess.push(new Unit(-11547, -10427, "Frich", false, "thugBug"));
                ArtificialIntelligenceAccess.push(new Unit(-11687, -10474, "Frich", true, "thugBug"));
                ArtificialIntelligenceAccess.push(new Unit(-11579, -10281, "Frich", true, "thugBug"));
                ArtificialIntelligenceAccess.push(new Unit(-11763, -10221, "Frich", false, "thugBug"));
                ArtificialIntelligenceAccess.push(new Unit(-11498, -10145, "Frich", false, "thugBug"));
                ArtificialIntelligenceAccess.push(new Unit(-7947, -12989, "Frich", false, "thugBug"));
                ArtificialIntelligenceAccess.push(new Unit(-5246, -11020, "Frich", false, "thugBug"));
                ArtificialIntelligenceAccess.push(new Unit(-5423, -11898, "Frich", false, "thugBug"));
                ArtificialIntelligenceAccess.push(new Unit(-5271, -10854, "Frich", false, "thugBug"));
                ArtificialIntelligenceAccess.push(new Unit(-5423, -5052, "Frich", false, "thugBug"));
                ArtificialIntelligenceAccess.push(new Unit(-5652, -5168, "Frich", true, "thugBug"));
                ArtificialIntelligenceAccess.push(new Unit(-9414, -6154, "Frich", true, "thugBug"));
                ArtificialIntelligenceAccess.push(new Unit(-9194, -6239, "Frich", true, "thugBug"));
                ArtificialIntelligenceAccess.push(new Unit(-9014, -6041, "Frich", false, "thugBug"));
                ArtificialIntelligenceAccess.push(new Unit(-8725, -6390, "Frich", true, "thugBug"));

                ArtificialIntelligenceAccess.push(new Unit(-7522, -11182, "Evrak", false, "thoogBoog"));

                ArtificialIntelligenceAccess.push(new Unit(-6731, -9301, "Ardil", false, "badyBoop"));
                ArtificialIntelligenceAccess.push(new Unit(-4438, -9200, "Ardil", true, "badyBoop"));
                ArtificialIntelligenceAccess.push(new Unit(-11038, -6393, "Ardil", false, "badyBoop"));

                ArtificialIntelligenceAccess.push(new Unit(-5012, -12614, "Naaprid", false, "jerryBoog"));
                ArtificialIntelligenceAccess.push(new Unit(-4688, -12444, "Naaprid", true, "jerryBoog"));
                ArtificialIntelligenceAccess.push(new Unit(-4953, -12709, "Naaprid", "baby", "jerryBoog"));

                ArtificialIntelligenceAccess.push(new Unit(-7799, -5368, "Varn", true, "ppopyDog"));
                ArtificialIntelligenceAccess.push(new Unit(-7724, -5637, "Varn", false, "ppopyDog"));
                ArtificialIntelligenceAccess.push(new Unit(-11475, -8059, "Varn", false, "ppopyDog"));
                ArtificialIntelligenceAccess.push(new Unit(-12220, -6760, "Varn", true, "ppopyDog"));
                ArtificialIntelligenceAccess.push(new Unit(-11913, -5649, "Varn", true, "ppopyDog"));


                //Build Scenery

                scenicList.push(new Scenery("techiPlant", -9289 ,-9603, 1, true));
                scenicList.push(new Scenery("techiPlant", -9649 ,-12638, 2, true));
                scenicList.push(new Scenery("techiPlant", -6660 ,-5127, 3, true));
                scenicList.push(new Scenery("techiPlant", -9275 ,-6523, 4, true));
                scenicList.push(new Scenery("techiPlant", -6227 ,-7006, 5, true));
                scenicList.push(new Scenery("techiPlant", -4357 ,-10745, 6, true));
                scenicList.push(new Scenery("techiPlant", -9778 ,-7778, 8, true));
                scenicList.push(new Scenery("techiPlant", -12453 ,-6554, 10, true));

                scenicList.push(new Scenery("palntPlant", -5177 ,-12902, 12, true));
                scenicList.push(new Scenery("palntPlant", -10814 ,-8486, 15, true));

                scenicList.push(new Scenery("itlinPlant", -7293 , -8208, 5.5, true));
                scenicList.push(new Scenery("itlinPlant", -6836 , -8281, 7.8, true));
                scenicList.push(new Scenery("itlinPlant", -8423 , -8807, 1.1, true));
                scenicList.push(new Scenery("ishPlant", -11117 , -7781, 2.23, true));

                scenicList.push(new Scenery("luufPlant", -11155 ,-9093, 3, true));
                scenicList.push(new Scenery("luufPlant", -5283 ,-10015, 2.5, true));



                //trees in the southern wuncwer woods.
                scenicList.push(new Scenery("pineTree", -7583 , -3885, 1.2, true));
                scenicList.push(new Scenery("pineTree", -8065 , -3688, -3, true));
                scenicList.push(new Scenery("pineTree", -8710 , -3916, -2.5, true));
                scenicList.push(new Scenery("pineTree", -9578 , -3837, 4, true));
                scenicList.push(new Scenery("pineTree", -10111 , -3906, -5, true));
                scenicList.push(new Scenery("pineTree", -11025 , -3706, 2.6, true));
                scenicList.push(new Scenery("pineTree", -11548 , -3882, 5.2, true));
                scenicList.push(new Scenery("pineTree", -12132 , -3725, -1, true));
                scenicList.push(new Scenery("pineTree", -12700 , -3822, 6, true));
                scenicList.push(new Scenery("pineTree", -13186 , -3942, -6.3, true));
                scenicList.push(new Scenery("pineTree", -6995 , -3821, 6.995, true));
                scenicList.push(new Scenery("pineTree", -6398 , -3743, 0.23, true));
                scenicList.push(new Scenery("pineTree", -6848 , -4186, -3.678, true));
                scenicList.push(new Scenery("pineTree", -8029 , -4161, 3.1, true));
                scenicList.push(new Scenery("pineTree", -7448 , -4370, 4.5, true));
                scenicList.push(new Scenery("pineTree", -8620 , -4332, -1.7, true));
                scenicList.push(new Scenery("pineTree", -9388 , -4224, -4.62, true));
                scenicList.push(new Scenery("pineTree", -9795 , -4691, -5.9, true));
                scenicList.push(new Scenery("pineTree", -9968 , -4233, 2.3, true));
                scenicList.push(new Scenery("pineTree", -10507 , -4023, 2.5, true));
                scenicList.push(new Scenery("pineTree", -10465 , -4521, 3.98, true));
                scenicList.push(new Scenery("pineTree", -11005 , -4119, -4.1, true));
                scenicList.push(new Scenery("pineTree", -10660 , -4900, -2, true));
                scenicList.push(new Scenery("pineTree", -11008 , -4524, -4.8, true));
                scenicList.push(new Scenery("pineTree", -11744 , -4280, -1.891, true));
                scenicList.push(new Scenery("pineTree", -11263 , -4864, 5.435, true));
                scenicList.push(new Scenery("pineTree", -11857 , -4696, 3.82, true));
                scenicList.push(new Scenery("pineTree", -11717 , -5059, -6.42, true));
                scenicList.push(new Scenery("pineTree", -12329 , -4069, 2.93, true));
                scenicList.push(new Scenery("pineTree", -12245 , -4426, -4.7, true));
                scenicList.push(new Scenery("pineTree", -12174 , -4947, -2.2, true));
                scenicList.push(new Scenery("pineTree", -12232 , -5375, 5.68, true));
                scenicList.push(new Scenery("pineTree", -12808 , -5502, 1, true));
                scenicList.push(new Scenery("pineTree", -12913 , -4233, -1.5, true));
                scenicList.push(new Scenery("pineTree", -13143 , -4801, 3, true));
                scenicList.push(new Scenery("pineTree", -12722, -4981, 2.136, true));
                scenicList.push(new Scenery("pineTree", -13009 , -5159, -1.29, true));
                scenicList.push(new Scenery("pineTree", -11286 , -5204, 7, true));

                //tomb of ulther, the brave
                scenicList.push(new Scenery("pineTree", -10076 , -11643, 3, true));
                scenicList.push(new Scenery("pineTree", -10720 , -11378, 1, true));
                scenicList.push(new Scenery("stone", -10195 , -11349, 1.3, 3, 1));
                scenicList.push(new Scenery("pineTree", -9458 , -11437, 7, true));
                scenicList.push(new Scenery("pineTree", -10452 , -10851, 4, true));
                scenicList.push(new Scenery("pineTree", -11136 , -11033, 2, true));
                scenicList.push(new Scenery("brightbloomPlant", -10190 , -11268, 4.1, "ultherFlower"));
                ArtificialIntelligenceAccess.push(new Unit(-12115, -11594, "Varn", true, "bossmanI"));
                ArtificialIntelligenceAccess.push(new Unit(-12166, -11846, "Varn", false, "bossmanII"));
                ArtificialIntelligenceAccess.push(new Unit(-11953, -11997, "Varn", true, "bossmanIII"));
                ArtificialIntelligenceAccess.push(new Unit(-10489, -10993, "Shehid", false, "hackeyI"));
                ArtificialIntelligenceAccess.push(new Unit(-11009, -11109, "Shehid", false, "hackeyII"));
                ArtificialIntelligenceAccess.push(new Unit(-10154, -11510, "Shehid", true, "hackeyBossman"));
                scenicList.push(new Scenery("akerPlant", -10152 , -11356, 5.5, true));
                ArtificialIntelligenceAccess.push(new Unit(-12454, -12972, "Avrak", false, "ahhratattackI"));
                ArtificialIntelligenceAccess.push(new Unit(-12200, -12910, "Avrak", false, "ahhratattackII"));
                ArtificialIntelligenceAccess.push(new Unit(-5000, -7500, "Frich", "massive", "uhohspagheti"));
                scenicList.push(new Scenery("grushweedPlant", -7654 , -12453, 1.3, 3));
                scenicList.push(new Scenery("grushweedPlant", -7832 , -12332, 4, 1.6));
                var rndmxz = Math.round(Math.random());
                if (rndmxz == 0)
                {
                    scenicList.push(new Scenery("grushweedPlant", -7370 , -12397, 6, 2));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(-7370 , -12397, "Grush", true, "boyomatic"));
                }
                scenicList.push(new Scenery("glinPlant", -10695 , -11241, 3.7, true));





                //all items dropped on map
                if (quests.ultherMapItems == true)
                {
                    quests.ultherMapItems = false;
                    worldItems.push([new Item("ultherRIP", -10163 , -11312), 1]);
                    worldItems.push([new Item("sealSkin", -10150 , -11312), 1]);
                    worldItems.push([new Item("culprisLeaf", -10157 , -11312), 2]);
                    worldItems.push([new Item("tylunFlower", -10150 , -11312), 1]);
                }

                //Plants of the souther tip of the wuncwer woods
                scenicList.push(new Scenery("akerPlant", -7460 , -4008, 6.8, true));
                scenicList.push(new Scenery("glinPlant", -8837 , -4003, 1, true));
                scenicList.push(new Scenery("culprisPlant", -12566 , -4628, -2, true));
                scenicList.push(new Scenery("neprilnePlant", -11329 , -4441, 3, true));
                scenicList.push(new Scenery("akerPlant", -12309 , -5242, -5.5, true));


                change = "s1e1";
            }
        }
        else if (region == "s3e1")
        {
            if (change != "s3e1")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                //grassborder animals
                ArtificialIntelligenceAccess.push(new Unit(-3906, -29862, "Frich", true, "Ratool"));
                ArtificialIntelligenceAccess.push(new Unit(-4181, -30861, "Frich", false, "Ratain"));
                ArtificialIntelligenceAccess.push(new Unit(-4251, -31000, "Frich", true, "Ratoal"));
                ArtificialIntelligenceAccess.push(new Unit(-4438, -30923, "Frich", false, "Rataon"));
                ArtificialIntelligenceAccess.push(new Unit(-3795, -32187, "Frich", false, "Ration"));
                ArtificialIntelligenceAccess.push(new Unit(-11615, -24474, "Frich", true, "Ratoala"));
                ArtificialIntelligenceAccess.push(new Unit(-11815, -24561, "Frich", false, "Rataono"));
                ArtificialIntelligenceAccess.push(new Unit(-9604, -24669, "Frich", true, "Ratoalo"));
                ArtificialIntelligenceAccess.push(new Unit(-6382, -24510, "Frich", false, "Rata"));

                ArtificialIntelligenceAccess.push(new Unit(-4432, -33545, "Mofu", true, "Kaperbaldi"));
                ArtificialIntelligenceAccess.push(new Unit(-4650, -33429, "Mofu", false, "Aperbaldica"));
                ArtificialIntelligenceAccess.push(new Unit(-4590, -33709, "Mofu", "baby", "Aper"));

                scenicList.push(new Scenery("tunskMound", -9277, -33752, 0, true)); //for mofu nests the last number determines its size multiplier.

                //Mofu Habitations
                scenicList.push(new Scenery("mofuNest", -4432, -33545, -2.1, 1.315)); //for mofu nests the last number determines its size multiplier.
                scenicList.push(new Scenery("techiPlant", -4599, -28695, 3, true));
                scenicList.push(new Scenery("luufPlant", -4355, -24889, -5, true));
                scenicList.push(new Scenery("itlinPlant", -9599, -24620, -3.2, true));
                scenicList.push(new Scenery("techiPlant", -9265, -24930, 1.11, true));

                //Animals in the mud bog
                //ArtificialIntelligenceAccess.push(new Unit(-6610, -32189, "Grewble", false, "Glud"));
                //ArtificialIntelligenceAccess.push(new Unit(-7778, -32048, "BrolleWorms", false, "Slickers"));
                //ArtificialIntelligenceAccess.push(new Unit(-6838, -31129, "Ut", false, "Icky Icky"));
                //ArtificialIntelligenceAccess.push(new Unit(-9239, -31197, "SpittingMudFly", true, "Super Fly"));

                //Build Scenery
                scenicList.push(new Scenery("grewbleEggPatch", -7237 , -31546, -Math.PI * 2.2, false));
                scenicList.push(new Scenery("grewbleEggPatch", -7611 , -29496, -Math.PI * 1.4, false));
                scenicList.push(new Scenery("grewbleEggPatch", -8235 , -26971, -Math.PI * -6.1, false));
                scenicList.push(new Scenery("grewbleEggPatch", -10523 , -27599, -Math.PI * 0, false));
                scenicList.push(new Scenery("grewbleEggPatch", -10238 , -27403, -Math.PI * 5, false));
                scenicList.push(new Scenery("grewbleEggPatch", -10235 , -27494, -Math.PI * 3.77, false));
                scenicList.push(new Scenery("grewbleEggPatch", -10445 , -27153, -Math.PI * -2.4, false));
                scenicList.push(new Scenery("grewbleEggPatch", -10578 , -26210, 1, false));
                scenicList.push(new Scenery("grewbleEggPatch", -6830 , -31015, 2, false));
                scenicList.push(new Scenery("brolleFeast", -10116 , -29425, 0, false));
                scenicList.push(new Scenery("brolleFeast", -7534 , -28197, -Math.PI * 4.2, false));
                scenicList.push(new Scenery("brolleFeast", -10049 , -28561, -Math.PI * -2, false));
                scenicList.push(new Scenery("brolleFeast", -9314 , -26816, -Math.PI * -Math.PI, false));


                //Plants in the mud bog
                scenicList.push(new Scenery("wegPlant", -8039 , -31917, 5, true));
                scenicList.push(new Scenery("wegPlant", -6300 , -33078, 3, true));
                scenicList.push(new Scenery("wegPlant", -8432 , -31226, 0, true));
                scenicList.push(new Scenery("wegPlant", -8636 , -27421, -3.2, true));
                scenicList.push(new Scenery("wegPlant", -7448 , -30705, -4, true));
                scenicList.push(new Scenery("wegPlant", -5333 , -29560, -2, true));
                scenicList.push(new Scenery("wegPlant", -9743 , -26443, 3.14159, true));
                scenicList.push(new Scenery("wegPlant", -6928 , -26150, -1.1, true));
                scenicList.push(new Scenery("wegPlant", -8484 , -25656, -6, true));
                scenicList.push(new Scenery("wegPlant", -12774 , -29931, -2.23, true));
                scenicList.push(new Scenery("wegPlant", -7536 , -31824, 4.3, true));
                scenicList.push(new Scenery("sesrePlant", -9030 , -30602, 1, true));
                scenicList.push(new Scenery("sesrePlant", -9324 , -31587, 2.42, true));
                scenicList.push(new Scenery("sesrePlant", -6549 , -30150, -5.5, true));
                scenicList.push(new Scenery("sesrePlant", -6796 , -27705, 3.6, true));
                scenicList.push(new Scenery("sesrePlant", -10083 , -27886, -2.83, true));
                scenicList.push(new Scenery("sesrePlant", -10853 , -28016, -4, true));
                scenicList.push(new Scenery("sesrePlant", -10158 , -31303, 4.444, true));
                scenicList.push(new Scenery("sesrePlant", -11527 , -32609, -1.131320096913069, true));
                scenicList.push(new Scenery("lorkweedPlant", -7842 , -30440, -2.5, true));
                scenicList.push(new Scenery("lorkweedPlant", -8435 , -32994, 6, true));
                scenicList.push(new Scenery("lorkweedPlant", -9418 , -33194, 9, true));
                scenicList.push(new Scenery("lorkweedPlant", -7043 , -30258, -1, true));
                scenicList.push(new Scenery("lorkweedPlant", -6332 , -28978, 2, true));
                scenicList.push(new Scenery("lorkweedPlant", -6183 , -28293, -1.5, true));
                scenicList.push(new Scenery("lorkweedPlant", -5505 , -26480, 1.35, true));
                scenicList.push(new Scenery("lorkweedPlant", -6410 , -26714, 5.5, true));
                scenicList.push(new Scenery("lorkweedPlant", -8085 , -26216, -5, true));
                scenicList.push(new Scenery("lorkweedPlant", -11399 , -25450, 4.5, true));
                scenicList.push(new Scenery("lorkweedPlant", -11009 , -27171, -3.3, true));
                scenicList.push(new Scenery("lorkweedPlant", -9248 , -26859, 1, true));
                scenicList.push(new Scenery("lorkweedPlant", -6327 , -25252, -3.4444, true));
                scenicList.push(new Scenery("lorkweedPlant", -10968 , -26032, 1.6, true));
                scenicList.push(new Scenery("lorkweedPlant", -11345 , -32173, -3.4444, true));
                scenicList.push(new Scenery("lorkweedPlant", -10617 , -30279, 5.56, true));
                scenicList.push(new Scenery("lorkweedPlant", -8516 , -32417, 2, true));

                var random = Math.floor(Math.random() * 13);

                if (random >= 0 && random <= 7)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-10634, -27122, "Grewble", false, "Glod"));
                    ArtificialIntelligenceAccess.push(new Unit(-10582, -27338, "Grewble", false, "Gled"));
                    ArtificialIntelligenceAccess.push(new Unit(-10158, -27824, "Grewble", false, "Glid"));
                    ArtificialIntelligenceAccess.push(new Unit(-10296, -26454, "Grewble", false, "Glidr"));
                    ArtificialIntelligenceAccess.push(new Unit(-10738, -26060, "Grewble", false, "Glood"));
                    ArtificialIntelligenceAccess.push(new Unit(-11333, -28148, "Grewble", false, "Glewd"));

                    ArtificialIntelligenceAccess.push(new Unit(-10125, -27563, "Grewble", "baby", "Glad"));
                    ArtificialIntelligenceAccess.push(new Unit(-11679, -26352, "Grewble", "baby", "Gliid"));

                    ArtificialIntelligenceAccess.push(new Unit(-10065, -27223, "Grewble", true, "Glud"));
                }
                else if (random <= 11)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-10634, -27122, "Grewble", "baby", "Glod"));
                    ArtificialIntelligenceAccess.push(new Unit(-10582, -27338, "Grewble", false, "Gled"));
                    ArtificialIntelligenceAccess.push(new Unit(-10158, -27824, "Grewble", "baby", "Glid"));
                    ArtificialIntelligenceAccess.push(new Unit(-10296, -26454, "Grewble", false, "Glidr"));
                    ArtificialIntelligenceAccess.push(new Unit(-10738, -26060, "Grewble", false, "Glood"));
                    ArtificialIntelligenceAccess.push(new Unit(-11333, -28148, "Grewble", "baby", "Glewd"));

                    ArtificialIntelligenceAccess.push(new Unit(-10125, -27563, "Grewble", false, "Glad"));
                    ArtificialIntelligenceAccess.push(new Unit(-11679, -26352, "Grewble", true, "Gliid"));

                    ArtificialIntelligenceAccess.push(new Unit(-10065, -27223, "Grewble", false, "Glud"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(-10634, -27122, "Grewble", false, "Glod"));
                    ArtificialIntelligenceAccess.push(new Unit(-10582, -27338, "Grewble", true, "Gled"));
                    ArtificialIntelligenceAccess.push(new Unit(-10158, -27824, "Grewble", false, "Glid"));
                    ArtificialIntelligenceAccess.push(new Unit(-10296, -26454, "Grewble", false, "Glidr"));
                    ArtificialIntelligenceAccess.push(new Unit(-10738, -26060, "Grewble", false, "Glood"));
                    ArtificialIntelligenceAccess.push(new Unit(-11333, -28148, "Grewble", true, "Glewd"));

                    ArtificialIntelligenceAccess.push(new Unit(-10125, -27563, "Grewble", true, "Glad"));
                    ArtificialIntelligenceAccess.push(new Unit(-11679, -26352, "Grewble", false, "Gliid"));

                    ArtificialIntelligenceAccess.push(new Unit(-10065, -27223, "Grewble", "giant", "Horgune the Mud King"));
                }

                random = Math.floor(Math.random() * 13);

                if (random >= 8)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-6385, -29752, "Ut", "baby", "Icky"));
                    ArtificialIntelligenceAccess.push(new Unit(-6187, -30102, "SpittingMudFly", "baby", "Lil Fly"));
                    ArtificialIntelligenceAccess.push(new Unit(-6548, -30629, "Grewble", false, "Gluck"));
                    ArtificialIntelligenceAccess.push(new Unit(-7718, -29738, "Grewble", false, "Glick"));
                    ArtificialIntelligenceAccess.push(new Unit(-7313, -28682, "BrolleWorms", false, "Slipper"));
                    ArtificialIntelligenceAccess.push(new Unit(-6850, -28821, "BrolleWorms", false, "Zapatilla"));
                    ArtificialIntelligenceAccess.push(new Unit(-6843, -28150, "BrolleWorms", false, "Boot"));
                    ArtificialIntelligenceAccess.push(new Unit(-7282, -27862, "Ut", false, "Ick"));
                    ArtificialIntelligenceAccess.push(new Unit(-6706, -27347, "SpittingMudFly", true, "The Fly"));
                    ArtificialIntelligenceAccess.push(new Unit(-6002, -27849, "Grewble", false, "Glon"));
                    ArtificialIntelligenceAccess.push(new Unit(-6843, -28150, "BrolleWorms", false, "Bota"));
                    ArtificialIntelligenceAccess.push(new Unit(-8192, -28544, "SpittingMudFly", "baby", "La Mosca"));
                    ArtificialIntelligenceAccess.push(new Unit(-8341, -27860, "SpittingMudFly", false, "A Fly"));
                    ArtificialIntelligenceAccess.push(new Unit(-8271, -27163, "Grewble", "baby", "Glilk"));
                    ArtificialIntelligenceAccess.push(new Unit(-7761, -26946, "Grewble", false, "Glolk"));
                    ArtificialIntelligenceAccess.push(new Unit(-8552, -26284, "Ut", true, "Ickick"));
                    ArtificialIntelligenceAccess.push(new Unit(-7366, -26352, "Ut", "baby", "Ickuh"));
                    ArtificialIntelligenceAccess.push(new Unit(-6914, -26993, "Ut", "baby", "Ickor"));
                    ArtificialIntelligenceAccess.push(new Unit(-8791, -26838, "Ut", "baby", "Icklii"));
                    ArtificialIntelligenceAccess.push(new Unit(-7199, -25952, "BrolleWorms", false, "Zapato"));
                    ArtificialIntelligenceAccess.push(new Unit(-6452, -26153, "BrolleWorms", false, "Shoe"));
                    ArtificialIntelligenceAccess.push(new Unit(-6784, -25361, "BrolleWorms", false, "Sandal"));
                    ArtificialIntelligenceAccess.push(new Unit(-9461, -27794, "BrolleWorms", false, "Huarache"));
                    ArtificialIntelligenceAccess.push(new Unit(-9021, -29168, "SpittingMudFly", false, "Una Mosca"));
                    ArtificialIntelligenceAccess.push(new Unit(-9415, -29669, "SpittingMudFly", "baby", "Moscita"));
                    ArtificialIntelligenceAccess.push(new Unit(-9155, -30201, "BrolleWorms", false, "Sandalia"));
                    ArtificialIntelligenceAccess.push(new Unit(-8265, -30756, "Ut", false, "Ickle"));
                    ArtificialIntelligenceAccess.push(new Unit(-6741, -31899, "Grewble", false, "Gluyka"));
                    ArtificialIntelligenceAccess.push(new Unit(-8380, -32059, "Ut", false, "Ickler"));
                    ArtificialIntelligenceAccess.push(new Unit(-9083, -32672, "Ut", "baby", "Ickluh"));
                    ArtificialIntelligenceAccess.push(new Unit(-10275, -32356, "BrolleWorms", false, "Flip-Flop"));
                    ArtificialIntelligenceAccess.push(new Unit(-9882, -31837, "BrolleWorms", false, "Chancla"));
                    ArtificialIntelligenceAccess.push(new Unit(-9103, -32300, "BrolleWorms", false, "High-Heels"));
                    ArtificialIntelligenceAccess.push(new Unit(-9271, -31727, "BrolleWorms", false, "Zapato de Tacón"));
                    ArtificialIntelligenceAccess.push(new Unit(-8359, -32655, "BrolleWorms", false, "Tacón"));
                    ArtificialIntelligenceAccess.push(new Unit(-11368, -32751, "SpittingMudFly", true, "Mosca Mosca"));
                    ArtificialIntelligenceAccess.push(new Unit(-12187, -32622, "SpittingMudFly", "baby", "Las Moscas"));
                    ArtificialIntelligenceAccess.push(new Unit(-11866, -32840, "Ut", false, "Icklem"));
                    ArtificialIntelligenceAccess.push(new Unit(-10470, -30354, "BrolleWorms", false, "99er"));
                    ArtificialIntelligenceAccess.push(new Unit(-11487, -29952, "Ut", false, "Icklek"));
                    ArtificialIntelligenceAccess.push(new Unit(-10967, -28766, "SpittingMudFly", "baby", "Fly Fly"));
                    ArtificialIntelligenceAccess.push(new Unit(-6372, -31461, "BrolleWorms", false, "666er"));
                }
                else if (random >= 3)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-6385, -29752, "Ut", false, "Icky"));
                    ArtificialIntelligenceAccess.push(new Unit(-6187, -30102, "SpittingMudFly", false, "Lil Fly"));
                    ArtificialIntelligenceAccess.push(new Unit(-6548, -30629, "Grewble", true, "Gluck"));
                    ArtificialIntelligenceAccess.push(new Unit(-7718, -29738, "Grewble", "baby", "Glick"));
                    ArtificialIntelligenceAccess.push(new Unit(-7313, -28682, "BrolleWorms", false, "Slipper"));
                    ArtificialIntelligenceAccess.push(new Unit(-6850, -28821, "BrolleWorms", false, "Zapatilla"));
                    ArtificialIntelligenceAccess.push(new Unit(-6843, -28150, "BrolleWorms", false, "Boot"));
                    ArtificialIntelligenceAccess.push(new Unit(-7282, -27862, "Ut", "baby", "Ick"));
                    ArtificialIntelligenceAccess.push(new Unit(-6706, -27347, "SpittingMudFly", "giant", "The Fly"));
                    ArtificialIntelligenceAccess.push(new Unit(-6002, -27849, "Grewble", false, "Glon"));
                    ArtificialIntelligenceAccess.push(new Unit(-6843, -28150, "BrolleWorms", false, "Bota"));
                    ArtificialIntelligenceAccess.push(new Unit(-8192, -28544, "SpittingMudFly", false, "La Mosca"));
                    ArtificialIntelligenceAccess.push(new Unit(-8341, -27860, "SpittingMudFly", "baby", "A Fly"));
                    ArtificialIntelligenceAccess.push(new Unit(-8271, -27163, "Grewble", false, "Glilk"));
                    ArtificialIntelligenceAccess.push(new Unit(-7761, -26946, "Grewble", false, "Glolk"));
                    ArtificialIntelligenceAccess.push(new Unit(-8552, -26284, "Ut", false, "Ickick"));
                    ArtificialIntelligenceAccess.push(new Unit(-7366, -26352, "Ut", "baby", "Ickuh"));
                    ArtificialIntelligenceAccess.push(new Unit(-6914, -26993, "BrolleWorms", false, "Ickor"));
                    ArtificialIntelligenceAccess.push(new Unit(-8791, -26838, "Ut", false, "Icklii"));
                    ArtificialIntelligenceAccess.push(new Unit(-7199, -25952, "BrolleWorms", false, "Zapato"));
                    ArtificialIntelligenceAccess.push(new Unit(-6452, -26153, "SpittingMudFly", "baby", "Shoe"));
                    ArtificialIntelligenceAccess.push(new Unit(-6784, -25361, "BrolleWorms", false, "Sandal"));
                    ArtificialIntelligenceAccess.push(new Unit(-9461, -27794, "BrolleWorms", false, "Huarache"));
                    ArtificialIntelligenceAccess.push(new Unit(-9021, -29168, "SpittingMudFly", true, "Una Mosca"));
                    ArtificialIntelligenceAccess.push(new Unit(-9415, -29669, "SpittingMudFly", "baby", "Moscita"));
                    ArtificialIntelligenceAccess.push(new Unit(-9155, -30201, "BrolleWorms", false, "Sandalia"));
                    ArtificialIntelligenceAccess.push(new Unit(-8265, -30756, "Ut", true, "Ickle"));
                    ArtificialIntelligenceAccess.push(new Unit(-6741, -31899, "Grewble", "baby", "Gluyka"));
                    ArtificialIntelligenceAccess.push(new Unit(-8380, -32059, "Ut", "baby", "Ickler"));
                    ArtificialIntelligenceAccess.push(new Unit(-9083, -32672, "Ut", false, "Ickluh"));
                    ArtificialIntelligenceAccess.push(new Unit(-10275, -32356, "BrolleWorms", false, "Flip-Flop"));
                    ArtificialIntelligenceAccess.push(new Unit(-9882, -31837, "BrolleWorms", false, "Chancla"));
                    ArtificialIntelligenceAccess.push(new Unit(-9103, -32300, "BrolleWorms", false, "High-Heels"));
                    ArtificialIntelligenceAccess.push(new Unit(-9271, -31727, "BrolleWorms", false, "Zapato de Tacón"));
                    ArtificialIntelligenceAccess.push(new Unit(-8359, -32655, "BrolleWorms", false, "Tacón"));
                    ArtificialIntelligenceAccess.push(new Unit(-11368, -32751, "SpittingMudFly", "baby", "Mosca Mosca"));
                    ArtificialIntelligenceAccess.push(new Unit(-12187, -32622, "SpittingMudFly", false, "Las Moscas"));
                    ArtificialIntelligenceAccess.push(new Unit(-11866, -32840, "Ut", "baby", "Icklem"));
                    ArtificialIntelligenceAccess.push(new Unit(-10470, -30354, "SpittingMudFly", "baby", "99er"));
                    ArtificialIntelligenceAccess.push(new Unit(-11487, -29952, "Ut", false, "Icklek"));
                    ArtificialIntelligenceAccess.push(new Unit(-10967, -28766, "SpittingMudFly", false, "Fly Fly"));
                    ArtificialIntelligenceAccess.push(new Unit(-6372, -31461, "BrolleWorms", false, "999er"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(-6385, -29752, "Ut", true, "Icky"));
                    ArtificialIntelligenceAccess.push(new Unit(-6187, -30102, "SpittingMudFly", "giant", "Lil Fly"));
                    ArtificialIntelligenceAccess.push(new Unit(-6548, -30629, "Grewble", false, "Gluck"));
                    ArtificialIntelligenceAccess.push(new Unit(-7718, -29738, "Grewble", true, "Glick"));
                    ArtificialIntelligenceAccess.push(new Unit(-7313, -28682, "BrolleWorms", false, "Slipper"));
                    ArtificialIntelligenceAccess.push(new Unit(-6850, -28821, "BrolleWorms", false, "Zapatilla"));
                    ArtificialIntelligenceAccess.push(new Unit(-6843, -28150, "BrolleWorms", false, "Boot"));
                    ArtificialIntelligenceAccess.push(new Unit(-7282, -27862, "Ut", false, "Ick"));
                    ArtificialIntelligenceAccess.push(new Unit(-6706, -27347, "SpittingMudFly", false, "The Fly"));
                    ArtificialIntelligenceAccess.push(new Unit(-6002, -27849, "Grewble", false, "Glon"));
                    ArtificialIntelligenceAccess.push(new Unit(-6843, -28150, "BrolleWorms", false, "Bota"));
                    ArtificialIntelligenceAccess.push(new Unit(-8192, -28544, "SpittingMudFly", true, "La Mosca"));
                    ArtificialIntelligenceAccess.push(new Unit(-8341, -27860, "SpittingMudFly", false, "A Fly"));
                    ArtificialIntelligenceAccess.push(new Unit(-8271, -27163, "Grewble", true, "Glilk"));
                    ArtificialIntelligenceAccess.push(new Unit(-7761, -26946, "Grewble", false, "Glolk"));
                    ArtificialIntelligenceAccess.push(new Unit(-8552, -26284, "Ut", "baby", "Ickick"));
                    ArtificialIntelligenceAccess.push(new Unit(-7366, -26352, "Ut", "baby", "Ickuh"));
                    ArtificialIntelligenceAccess.push(new Unit(-6914, -26993, "Ut", false, "Ickor"));
                    ArtificialIntelligenceAccess.push(new Unit(-8791, -26838, "Ut", "baby", "Icklii"));
                    ArtificialIntelligenceAccess.push(new Unit(-7199, -25952, "BrolleWorms", false, "Zapato"));
                    ArtificialIntelligenceAccess.push(new Unit(-6452, -26153, "BrolleWorms", false, "Shoe"));
                    ArtificialIntelligenceAccess.push(new Unit(-6784, -25361, "BrolleWorms", false, "Sandal"));
                    ArtificialIntelligenceAccess.push(new Unit(-9461, -27794, "BrolleWorms", false, "Huarache"));
                    ArtificialIntelligenceAccess.push(new Unit(-9021, -29168, "SpittingMudFly", "giant", "Una Mosca"));
                    ArtificialIntelligenceAccess.push(new Unit(-9415, -29669, "SpittingMudFly", false, "Moscita"));
                    ArtificialIntelligenceAccess.push(new Unit(-9155, -30201, "BrolleWorms", false, "Sandalia"));
                    ArtificialIntelligenceAccess.push(new Unit(-8265, -30756, "Ut", true, "Ickle"));
                    ArtificialIntelligenceAccess.push(new Unit(-6741, -31899, "Grewble", false, "Gluyka"));
                    ArtificialIntelligenceAccess.push(new Unit(-8380, -32059, "Ut", false, "Ickler"));
                    ArtificialIntelligenceAccess.push(new Unit(-9083, -32672, "Ut", "baby", "Ickluh"));
                    ArtificialIntelligenceAccess.push(new Unit(-10275, -32356, "BrolleWorms", false, "Flip-Flop"));
                    ArtificialIntelligenceAccess.push(new Unit(-9882, -31837, "BrolleWorms", false, "Chancla"));
                    ArtificialIntelligenceAccess.push(new Unit(-9103, -32300, "BrolleWorms", false, "High-Heels"));
                    ArtificialIntelligenceAccess.push(new Unit(-9271, -31727, "BrolleWorms", false, "Zapato de Tacón"));
                    ArtificialIntelligenceAccess.push(new Unit(-8359, -32655, "BrolleWorms", false, "Tacón"));
                    ArtificialIntelligenceAccess.push(new Unit(-11368, -32751, "SpittingMudFly", true, "Mosca Mosca"));
                    ArtificialIntelligenceAccess.push(new Unit(-12187, -32622, "SpittingMudFly", true, "Las Moscas"));
                    ArtificialIntelligenceAccess.push(new Unit(-11866, -32840, "Ut", false, "Icklem"));
                    ArtificialIntelligenceAccess.push(new Unit(-10470, -30354, "BrolleWorms", false, "777er"));
                    ArtificialIntelligenceAccess.push(new Unit(-11487, -29952, "Ut", "baby", "Icklek"));
                    ArtificialIntelligenceAccess.push(new Unit(-10967, -28766, "SpittingMudFly", "baby", "Fly Fly"));
                    ArtificialIntelligenceAccess.push(new Unit(-6372, -31461, "BrolleWorms", false, "55er"));
                }

                //Clay Deposits
                scenicList.push(new Scenery("clayDeposit", -7528, -27313, -5.2, 6));
                scenicList.push(new Scenery("clayDeposit", -9444, -26065, 3.06, 4));
                scenicList.push(new Scenery("clayDeposit", -9253, -28028, 0.25, 2));
                scenicList.push(new Scenery("clayDeposit", -11376, -31332, 5.99, 2));
                scenicList.push(new Scenery("clayDeposit", -7820, -30081, -2.4, 9));
                scenicList.push(new Scenery("clayDeposit", -9852, -31025, 4, 5));
                scenicList.push(new Scenery("clayDeposit", -10243, -32593, -1, 3));
                scenicList.push(new Scenery("clayDeposit", -11861, -32456, 2.46, 7));
                scenicList.push(new Scenery("clayDeposit", -6878, -25600, 3.5, 4));
                scenicList.push(new Scenery("clayDeposit", -6966, -31909, 2.2, 3));

                change = "s3e1";
            }
        }
        else if (region == "e2")
        {
            if (change != "e2")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                //Nelgref Himself
                if (uniqueChars.nelgrefLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Nelgref the Flayer")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-19124, 4998, "Soldier", false, "Nelgref the Flayer", {race: "Freynor", faction: "hostile", con: 12, speed: 2.7, outfit: ["skinAndBones", 4], weapon: ["rasper", [7, 3], 0, 15, 0.9], ranged: [false, "arrow", 9, 2100, 1, 7, 0, "none", 1.2], patrolStops: 0, patrolLoop: false, route:[[221 -750, 5517]]}));
                    }
                }
                //Nelgref's Pets
                if (quests.lostDeliveryPetsKilled < 7)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-19065, 5180, "Soldier", false, "Nelgref's Pet Bandit", {race: "Freynor", faction: "hostile", con: 2, speed: 0, outfit: ["blackBearLeatherArmour", 3.5], weapon: ["longbow", [7, 5], 0, 17, 1.5], ranged: [true, "steelArrow", 10, 2200, 2, 13, 0, "none", 1.65], patrolStops: 0, patrolLoop: true, route:[[3071, 314]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-19488, 4727, "Soldier", false, "Nelgref's Pet Bandit", {race: "Freynor", faction: "hostile", con: 3, speed: 0, outfit: ["blackBearLeatherArmour", 3.75], weapon: ["longbow", [7, 5], 0, 17, 1.5], ranged: [true, "arrow", 8, 2100, 1, 7, 0, "none", 2], patrolStops: 0, patrolLoop: true, route:[[3071, 314]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-19304, 4578, "Soldier", false, "Nelgref's Pet Bandit", {race: "Freynor", faction: "hostile", con: 4, speed: 0, outfit: ["blackBearLeatherArmour", 3.5], weapon: ["longbow", [7, 5], 0, 17, 1.5], ranged: [true, "arrow", 9, 2000, 1, 8, 0, "none", 1], patrolStops: 0, patrolLoop: true, route:[[3071, 314]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-18944, 4663, "Soldier", false, "Nelgref's Pet Bandit", {race: "Freynor", faction: "hostile", con: 4, speed: 0, outfit: ["blackBearLeatherArmour", 3.5], weapon: ["crossbow", [7, 5], 0, 17, 1.5], ranged: [true, "steelBolt", 11, 2250, 18, 40 /3, 0, "none", 7], patrolStops: 0, patrolLoop: true, route:[[3071, 314]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-19037, 4844, "Soldier", false, "Nelgref's Pet Bandit", {race: "Freynor", faction: "hostile", con: 7, speed: 2, outfit: ["blackBearLeatherArmour", 4], weapon: ["freydicSword", [7, 5], 0, 17, 1.5], ranged: [false, "steelBolt", 11, 2250, 18, 40 /3, 0, "none", 7], patrolStops: 0, patrolLoop: true, route:[[3071, 314]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-19102, 5055, "Soldier", false, "Nelgref's Pet Bandit", {race: "Freynor", faction: "hostile", con: 6, speed: 1.89, outfit: ["blackBearLeatherArmour", 4], weapon: ["freydicSword", [9, 4], 0, 17, 1.4], ranged: [false, "steelBolt", 11, 2250, 18, 40 /3, 0, "none", 7], patrolStops: 0, patrolLoop: true, route:[[3071, 314]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-18829, 4944, "Soldier", false, "Nelgref's Pet Bandit", {race: "Freynor", faction: "hostile", con: 5, speed: 1.95, outfit: ["blackBearLeatherArmour", 4.5], weapon: ["freydicSword", [8, 5], 0, 17, 1.65], ranged: [false, "steelBolt", 11, 2250, 18, 40 /3, 0, "none", 7], patrolStops: 0, patrolLoop: true, route:[[3071, 314]]}));
                }
                else if (uniqueChars.nelgrefLDS == false)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-19031, 5072, "Shehid", true, "shetop"));
                    ArtificialIntelligenceAccess.push(new Unit(-19209, 4955, "Shehid", true, "shetel"));
                    ArtificialIntelligenceAccess.push(new Unit(-19220, 4736, "Shehid", false, "shetlip"));
                    ArtificialIntelligenceAccess.push(new Unit(-19361, 4670, "Shehid", false, "shetlic"));
                    ArtificialIntelligenceAccess.push(new Unit(-19390, 4819, "Shehid", false, "shetlil"));
                    ArtificialIntelligenceAccess.push(new Unit(-19028, 4798, "Shehid", false, "shetlaf"));
                    ArtificialIntelligenceAccess.push(new Unit(-18892, 4652, "Shehid", true, "shetlint"));
                    ArtificialIntelligenceAccess.push(new Unit(-19029, 5211, "Shehid", false, "shetluf"));
                    ArtificialIntelligenceAccess.push(new Unit(-18844, 4864, "Shehid", false, "shetlif"));
                    scenicList.push(new Scenery("glinPlant", -19151 , 5065, 5, true));
                    scenicList.push(new Scenery("glinPlant", -19348 , 4690, 1, true));
                    scenicList.push(new Scenery("glinPlant", -19192 , 4937, -2.94, true));
                    scenicList.push(new Scenery("glinPlant", -19087 , 4935, 0, true));
                }

                //The Victims
                scenicList.push(new Scenery("skeleton", -19230, 5008, 5.12, 1.75));
                scenicList.push(new Scenery("skeleton", -19152, 4938, 0, 1.6));
                scenicList.push(new Scenery("skeleton", -19142, 4932, 3, 1));
                scenicList.push(new Scenery("skeleton", -19157, 4928, 1.5, 1.8));
                scenicList.push(new Scenery("skeleton", -19162, 4925, 6, 1.7));
                scenicList.push(new Scenery("skeleton", -19332, 4714, 4.6, 1.6));

                if (quests.lostDeliveryQuest != "complete")
                {
                    scenicList.push(new Scenery("skeleton", -19014, 1364, 2.1, 1.624));
                    scenicList.push(new Scenery("deadNaaprid", -18626, 1304, 3.4, 1.93));
                    scenicList.push(new Scenery("propWagon", -18822, 1253, -3.24, 1.75));
                }

                //Nelgref's Camp
                scenicList.push(new Scenery("tent", -18961, 5013, -1/4 * Math.PI, true));
                scenicList.push(new Scenery("tent", -19367, 5077, 1/4 * Math.PI, true));
                scenicList.push(new Scenery("tent", -19088, 4716, Math.PI, true));
                scenicList.push(new Scenery("tent", -19413, 4554, 1/2 * Math.PI, true));
                scenicList.push(new Scenery("tent", -19511, 4796, 0.875/2 * Math.PI, true));
                if (quests.lostDeliveryCrate == true)
                {
                    quests.lostDeliveryCrate = false;
                    worldItems.push([new Item("freydicSword", -18885, 4710), 1]);
                    worldItems.push([new Item("longbow", -18885, 4845), 1]);
                    worldItems.push([new Item("longbow", -18880, 4849), 1]);
                    worldItems.push([new Item("coins", -18890, 4865), 114]);
                    worldItems.push([new Item("arrow", -18924, 4835), 1]);
                    worldItems.push([new Item("arrow", -18923, 4837), 59]);
                    worldItems.push([new Item("arrow", -18923, 4839), 1]);
                    worldItems.push([new Item("arrow", -18921, 4840), 1]);
                    worldItems.push([new Item("steelBolt", -18924, 4835), 2]);
                    worldItems.push([new Item("steelBolt", -18923, 4837), 14]);
                    worldItems.push([new Item("steelBolt", -18923, 4839), 1]);
                    worldItems.push([new Item("steelBolt", -18922, 4840), 1]);
                    worldItems.push([new Item("crossbow", -18857, 4765), 1]);
                    worldItems.push([new Item("svehnsShipment", -18942, 4822), 1]);
                }

                //Animals in the forest
                ArtificialIntelligenceAccess.push(new Unit(-13935, 2270, "Grib", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-13805, 2514, "Grib", true, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-14035, 4389, "Grib", true, "Kab"));
                ArtificialIntelligenceAccess.push(new Unit(-14477, 1925, "Viper", false, "Slib"));
                ArtificialIntelligenceAccess.push(new Unit(-14087, 1359, "Lizard", true, "Lib"));
                ArtificialIntelligenceAccess.push(new Unit(-14854, 1081, "Lizard", false, "Liv"));
                ArtificialIntelligenceAccess.push(new Unit(-14501, 3283, "BlackBear", false, "Clib"));
                ArtificialIntelligenceAccess.push(new Unit(-14409, 5947, "BlackBear", true, "Clob"));
                ArtificialIntelligenceAccess.push(new Unit(-15119, 2314, "Varn", true, "Flib"));
                ArtificialIntelligenceAccess.push(new Unit(-15015, 2450, "Varn", true, "Flab"));
                ArtificialIntelligenceAccess.push(new Unit(-15423, 2581, "Varn", true, "Flob"));
                ArtificialIntelligenceAccess.push(new Unit(-15295, 2370, "Varn", false, "Fleeb"));
                ArtificialIntelligenceAccess.push(new Unit(-15517, 2396, "Varn", false, "Fliib"));
                ArtificialIntelligenceAccess.push(new Unit(-15335, 2212, "Varn", true, "Fleb"));
                ArtificialIntelligenceAccess.push(new Unit(-15138, 1770, "Varn", false, "Floob"));
                ArtificialIntelligenceAccess.push(new Unit(-17199, 1851, "Varn", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-13713, 5329, "Narthwarp", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-15646, 4550, "Narthwarp", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-15865, 4466, "Narthwarp", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-16109, 4842, "Narthwarp", false, "docile"));
                if (uniqueChars.nelgrefLDS == false)
                {
                    scenicList.push(new Scenery("ulgoyPlant", -16488, 3908, 4.9, 7));
                    ArtificialIntelligenceAccess.push(new Unit(-16473, 3885, "Ulgoy", "giant", "The Really Big Plant"));
                }
                else
                {
                    scenicList.push(new Scenery("ulgoyPlant", -16488, 3908, -1, 3.15));
                    ArtificialIntelligenceAccess.push(new Unit(-16478, 3902, "Ulgoy", true, "Biggy-Realz"));
                }
                ArtificialIntelligenceAccess.push(new Unit(-16247, 3330, "BlackBear", true, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-16497, 2348, "Grib", true, "Gral"));
                ArtificialIntelligenceAccess.push(new Unit(-16874, 2476, "Grib", true, "Grul"));
                ArtificialIntelligenceAccess.push(new Unit(-19305, 2966, "BlackBear", false, "Clibly"));
                if (Math.random() > 0.64)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-19573, 2028, "Viper", true, "Slizer"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(-19573, 2028, "Viper", false, "Slizer"));
                    ArtificialIntelligenceAccess.push(new Unit(-16259, -3313, "Viper", false, "Slipre"));
                    ArtificialIntelligenceAccess.push(new Unit(-15731, 5838, "Narthwarp", false, "Eklitora"));
                }
                ArtificialIntelligenceAccess.push(new Unit(-21387, 2488, "Grib", false, "Bilbo"));
                ArtificialIntelligenceAccess.push(new Unit(-21779, 2420, "Grib", true, "Frodo"));
                ArtificialIntelligenceAccess.push(new Unit(-21522, 2687, "Grib", true, "Samwise"));
                ArtificialIntelligenceAccess.push(new Unit(-22888, 2091, "Varn", true, "Flaib"));
                scenicList.push(new Scenery("ulgoyPlant", -22546, 4123, -3, 2.12));
                ArtificialIntelligenceAccess.push(new Unit(-22550, 4118, "Ulgoy", false, "Planter"));
                ArtificialIntelligenceAccess.push(new Unit(-20755, 3424, "BlackBear", false, "Clibord the Bear"));
                ArtificialIntelligenceAccess.push(new Unit(-21610, 5421, "Lizard", false, "Liva"));
                ArtificialIntelligenceAccess.push(new Unit(-21075, 4279, "Varn", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-20984, 4020, "Varn", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-18413, 6123, "BlackBear", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-17227, 5680, "Lizard", true, "Ligazo"));
                ArtificialIntelligenceAccess.push(new Unit(-15719, 6052, "Narthwarp", false, "Kabordo"));
                ArtificialIntelligenceAccess.push(new Unit(-16052, 6015, "Narthwarp", false, "Eklit"));
                ArtificialIntelligenceAccess.push(new Unit(-14353, 3844, "Shehid", true, "sheta"));
                ArtificialIntelligenceAccess.push(new Unit(-17202, 1305, "Lizard", true, "Luc"));
                ArtificialIntelligenceAccess.push(new Unit(-16084, 1398, "Lizard", false, "Luv"));
                scenicList.push(new Scenery("beeHive", -15375 , -2055, 4.5, true));
                scenicList.push(new Scenery("beeHive", -19953 , -2708, -3.8, true));
                ArtificialIntelligenceAccess.push(new Unit(-17095, -2815, "Narthwarp", true, "Kettoltep"));
                ArtificialIntelligenceAccess.push(new Unit(-17079, -3085, "Narthwarp", false, "Kettol"));
                ArtificialIntelligenceAccess.push(new Unit(-16980, -3120, "Narthwarp", false, "Teptep"));
                ArtificialIntelligenceAccess.push(new Unit(-17672, -3085, "Narthwarp", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-17522, -2898, "Narthwarp", false, "Kettep"));
                ArtificialIntelligenceAccess.push(new Unit(-17424, -2814, "Narthwarp", false, "Toltep"));
                ArtificialIntelligenceAccess.push(new Unit(-16882, -2909, "Narthwarp", false, "Koltep"));
                ArtificialIntelligenceAccess.push(new Unit(-16593, -3099, "Lizard", true, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-16833, -3200, "Lizard", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-16743, -3522, "Lizard", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-16181, -2238, "Shehid", true, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-16327, -2176, "Shehid", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-16161, -2091, "Shehid", false, "Scrud"));
                ArtificialIntelligenceAccess.push(new Unit(-15474, -1603, "BlackBear", true, "Juvitude"));
                ArtificialIntelligenceAccess.push(new Unit(-15906, -1761, "BlackBear", true, "Juvily"));
                ArtificialIntelligenceAccess.push(new Unit(-14651, -1987, "BlackBear", false, "Juvol"));
                ArtificialIntelligenceAccess.push(new Unit(-14275, -2508, "Lizard", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-14922, -2996, "Varn", false, "Tib"));
                ArtificialIntelligenceAccess.push(new Unit(-15003, -3225, "Varn", false, "Tab"));
                ArtificialIntelligenceAccess.push(new Unit(-15621, -2601, "Varn", true, "Tob"));
                ArtificialIntelligenceAccess.push(new Unit(-13547, -3147, "Grib", true, "Todder"));
                ArtificialIntelligenceAccess.push(new Unit(-14165, -1195, "Lizard", true, "docile"));
                scenicList.push(new Scenery("ulgoyPlant", -14555, 441, -1, 3.25));
                ArtificialIntelligenceAccess.push(new Unit(-14546, 437, "Ulgoy", true, "Planted"));
                ArtificialIntelligenceAccess.push(new Unit(-15058, -47, "BlackBear", false, "Plant Food"));
                ArtificialIntelligenceAccess.push(new Unit(-14311, -383, "Varn", true, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-15181, -576, "Lizard", true, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-18661, 424, "BlackBear", false, "Berry Buffer"));
                ArtificialIntelligenceAccess.push(new Unit(-16843, -1317, "Narthwarp", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-14871, -912, "Varn", true, "docile"));
                if (Math.random() > 0.74)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-17651, -2072, "Narthwarp", true, "Kulpatelep"));
                    ArtificialIntelligenceAccess.push(new Unit(-18089, -2704, "Narthwarp", false, "Telp"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(-17651, -2072, "Narthwarp", false, "Kulpa"));
                    ArtificialIntelligenceAccess.push(new Unit(-17449, -2093, "Narthwarp", false, "Telep"));
                    ArtificialIntelligenceAccess.push(new Unit(-17798, -2281, "Narthwarp", false, "Leplep"));
                    ArtificialIntelligenceAccess.push(new Unit(-17836, -2802, "Narthwarp", false, "Telp"));
                    ArtificialIntelligenceAccess.push(new Unit(-18278, -2802, "Narthwarp", false, "Tepla"));
                    ArtificialIntelligenceAccess.push(new Unit(-19849, -3181, "BlackBear", false, "Juvelina"));
                }
                ArtificialIntelligenceAccess.push(new Unit(-19272, -2795, "BlackBear", true, "Juvelin"));
                ArtificialIntelligenceAccess.push(new Unit(-20060, -2796, "Lizard", true, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-20511, -2924, "Grib", true, "Tedder"));
                ArtificialIntelligenceAccess.push(new Unit(-20619, -2502, "Grib", false, "Tedrit"));
                ArtificialIntelligenceAccess.push(new Unit(-18988, -2543, "Viper", false, "Slick-scale"));
                if (Math.random() > 0.82)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-18630, -2335, "Viper", true, "Slick-skin"));
                    ArtificialIntelligenceAccess.push(new Unit(-16830, -64, "BlackBear", false, "Juvelen"));
                    ArtificialIntelligenceAccess.push(new Unit(-21241, 638, "BlackBear", false, "Juvalic"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(-18630, -2335, "Viper", false, "Slick-skin"));
                    ArtificialIntelligenceAccess.push(new Unit(-16830, -64, "BlackBear", true, "Juvelen"));
                    ArtificialIntelligenceAccess.push(new Unit(-21241, 638, "Lizard", false, "docile"));
                    ArtificialIntelligenceAccess.push(new Unit(-21031, 477, "Lizard", false, "docile"));
                }
                ArtificialIntelligenceAccess.push(new Unit(-17137, -593, "BlackBear", false, "Juvel"));
                ArtificialIntelligenceAccess.push(new Unit(-17886, -1025, "Lizard", false, "lizter"));
                ArtificialIntelligenceAccess.push(new Unit(-18023, -1131, "Lizard", false, "liztel"));
                ArtificialIntelligenceAccess.push(new Unit(-17567, -1193, "Lizard", false, "lizt"));
                ArtificialIntelligenceAccess.push(new Unit(-16960, 534, "Shehid", false, "Glup"));
                ArtificialIntelligenceAccess.push(new Unit(-17007, 150, "Shehid", false, "Glip"));
                ArtificialIntelligenceAccess.push(new Unit(-14576, 812, "Shehid", true, "Glap"));
                ArtificialIntelligenceAccess.push(new Unit(-15164, 722, "Shehid", false, "Glep"));
                ArtificialIntelligenceAccess.push(new Unit(-15561, 844, "Shehid", true, "Glop"));
                ArtificialIntelligenceAccess.push(new Unit(-19052, -2302, "Shehid", false, "Gliip"));
                ArtificialIntelligenceAccess.push(new Unit(-20743, -2220, "Shehid", false, "Gleep"));
                ArtificialIntelligenceAccess.push(new Unit(-20938, -1931, "Shehid", false, "Gleap"));
                ArtificialIntelligenceAccess.push(new Unit(-20776, -1903, "Varn", true, "docdoc"));
                ArtificialIntelligenceAccess.push(new Unit(-20580, -1805, "Varn", true, "docedoc"));
                ArtificialIntelligenceAccess.push(new Unit(-20254, -1786, "Varn", true, "doc"));
                ArtificialIntelligenceAccess.push(new Unit(-20446, -1736, "Varn", true, "dock"));
                ArtificialIntelligenceAccess.push(new Unit(-20558, -1394, "Varn", true, "doce"));
                ArtificialIntelligenceAccess.push(new Unit(-20809, -1594, "Varn", false, "dewey"));
                ArtificialIntelligenceAccess.push(new Unit(-20745, -1272, "Varn", false, "scrappy"));
                ArtificialIntelligenceAccess.push(new Unit(-21055, -724, "Narthwarp", false, "Kulta"));
                ArtificialIntelligenceAccess.push(new Unit(-20815, -833, "Narthwarp", false, "Tultet"));
                ArtificialIntelligenceAccess.push(new Unit(-21202, 974, "Shehid", false, "Glupt"));
                ArtificialIntelligenceAccess.push(new Unit(-22587, 760, "Grib", true, "Talgtits"));
                ArtificialIntelligenceAccess.push(new Unit(-22665, 465, "Shehid", false, "Glipt"));
                ArtificialIntelligenceAccess.push(new Unit(-22492, -2627, "Shehid", true, "Glept"));
                ArtificialIntelligenceAccess.push(new Unit(-22330, -2847, "Shehid", false, "Glapt"));
                ArtificialIntelligenceAccess.push(new Unit(-21940, -2697, "Shehid", false, "Glopt"));
                ArtificialIntelligenceAccess.push(new Unit(-23064, -3078, "Varn", false, "B-Dew"));
                ArtificialIntelligenceAccess.push(new Unit(-22850, -1810, "Shehid", false, "Gleept"));
                ArtificialIntelligenceAccess.push(new Unit(-22400, -1305, "Lizard", false, "liztil"));
                ArtificialIntelligenceAccess.push(new Unit(-18456, 3006, "Shehid", false, "Glilpt"));
                ArtificialIntelligenceAccess.push(new Unit(-17556, 3418, "Shehid", true, "Glulpt"));
                ArtificialIntelligenceAccess.push(new Unit(-14218, 4947, "Shehid", false, "Glolpt"));
                ArtificialIntelligenceAccess.push(new Unit(-16711, 5327, "Shehid", false, "Glelpt"));
                ArtificialIntelligenceAccess.push(new Unit(-21770, 5635, "Shehid", false, "Glelpt"));
                ArtificialIntelligenceAccess.push(new Unit(-14530, -669, "Shehid", false, "Gloolpt"));
                ArtificialIntelligenceAccess.push(new Unit(-22718, -369, "Lizard", false, "docile"));
                if (Math.random() > 0.80)
                {
                    if (Math.random() > 5)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-21429, 1215, "Viper", false, "Dry-scale"));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-21429, 1215, "Shehid", true, "Glum"));
                    }
                }
                else
                {
                    if (Math.random() > 6.5)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-21429, 1215, "Shehid", false, "Glim"));
                    }
                }
                //Build Scenery

                //trees in the wuntol woods.
                scenicList.push(new Scenery("pineTree", -13696, 1772, 1.3, true));
                scenicList.push(new Scenery("pineTree", -14036, 1575, 2.25, true));
                scenicList.push(new Scenery("pineTree", -14255, 1933, -5.3, true));
                scenicList.push(new Scenery("pineTree", -14548, 1709, -4.25, true));
                scenicList.push(new Scenery("pineTree", -13749, 2072, 3, true));
                scenicList.push(new Scenery("pineTree", -13699, 707, -1.3, true));
                scenicList.push(new Scenery("pineTree", -13735, 1127, -2.25, true));
                scenicList.push(new Scenery("pineTree", -14119, 917, 5.4, true));
                scenicList.push(new Scenery("pineTree", -13447, 104, 4.25, true));
                scenicList.push(new Scenery("pineTree", -14194, 574, -3.5, true));
                scenicList.push(new Scenery("pineTree", -13709, -299, 4.6, true));
                scenicList.push(new Scenery("pineTree", -13857, 269, 2, true));
                scenicList.push(new Scenery("pineTree", -14349, 210, 2.95, true));
                scenicList.push(new Scenery("pineTree", -13966, -29, -6, true));
                scenicList.push(new Scenery("pineTree", -14213, -537, -5, true));
                scenicList.push(new Scenery("pineTree", -13696, -764, 3.7, true));
                scenicList.push(new Scenery("pineTree", -14226, -958, -2, true));
                scenicList.push(new Scenery("pineTree", -13429, -1039, -2.75, true));
                scenicList.push(new Scenery("pineTree", -13757, -1282, 6.1, true));
                scenicList.push(new Scenery("pineTree", -14638, 1014, 4.85, true));
                scenicList.push(new Scenery("pineTree", -14088, -1655, -4.2, true));
                scenicList.push(new Scenery("pineTree", -13524, -1559, 3.8, true));
                scenicList.push(new Scenery("pineTree", -13681, -1845, 1.4, true));
                scenicList.push(new Scenery("pineTree", -14604, 718, 1.68, true));
                scenicList.push(new Scenery("pineTree", -14346, -203, 5.79, true));
                scenicList.push(new Scenery("pineTree", -14298, -1385, -5.34, true));
                scenicList.push(new Scenery("pineTree", -13604, -2246, -2.75, true));
                scenicList.push(new Scenery("pineTree", -14054, -2088, 6.1, true));
                scenicList.push(new Scenery("pineTree", -14422, -1919, -4.85, true));
                scenicList.push(new Scenery("pineTree", -14636, -1141, -6.2, true));
                scenicList.push(new Scenery("pineTree", -14750, -1668, -3.8, true));
                scenicList.push(new Scenery("pineTree", -14003, -2427, -1.4, true));
                scenicList.push(new Scenery("pineTree", -13513, -2573, -1.68, true));
                scenicList.push(new Scenery("pineTree", -13401, -2965, -5.79, true));
                scenicList.push(new Scenery("pineTree", -13693, -3272, 5.34, true));
                scenicList.push(new Scenery("pineTree", -13853, -3600, 2.4, true));
                scenicList.push(new Scenery("pineTree", -13898, -2842, -2.25, true));
                scenicList.push(new Scenery("pineTree", -14160, -3433, 5.6, true));
                scenicList.push(new Scenery("pineTree", -14274, -3142, -4.4, true));
                scenicList.push(new Scenery("pineTree", -14489, -2910, 2.55, true));
                scenicList.push(new Scenery("pineTree", -14605, -3349, -1.3, true));
                scenicList.push(new Scenery("pineTree", -14225, -2703, -2.25, true));
                scenicList.push(new Scenery("pineTree", -14570, -2559, -5.9, true));
                scenicList.push(new Scenery("pineTree", -14744, -2267, 4.25, true));
                scenicList.push(new Scenery("pineTree", -14315, -2276, -3.5, true));
                scenicList.push(new Scenery("pineTree", -14899, -3219, 4.6, true));
                scenicList.push(new Scenery("pineTree", -14827, -3578, 2.678, true));
                scenicList.push(new Scenery("pineTree", -14623, -727, 2.95, true));
                scenicList.push(new Scenery("pineTree", -14891, -334, -6, true));
                scenicList.push(new Scenery("pineTree", -14685, 31, -5, true));
                scenicList.push(new Scenery("pineTree", -14837, 405, 3.7, true));
                scenicList.push(new Scenery("pineTree", -14850, 1520, -2, true));
                scenicList.push(new Scenery("pineTree", -14699, 2005, -2.75, true));
                scenicList.push(new Scenery("pineTree", -13700, 2375, 6.6, true));
                scenicList.push(new Scenery("pineTree", -13454, 2883, 4.85, true));
                scenicList.push(new Scenery("pineTree", -13835, 2716, -4.2, true));
                scenicList.push(new Scenery("pineTree", -14187, 2273, 3.8, true));
                scenicList.push(new Scenery("pineTree", -14702, 2454, 1.4, true));
                scenicList.push(new Scenery("pineTree", -14278, 2555, -1.9, true));
                scenicList.push(new Scenery("pineTree", -14550, 2857, 5.82, true));
                scenicList.push(new Scenery("pineTree", -14060, 3070, 8.9, true));
                scenicList.push(new Scenery("pineTree", -14775, 3265, -3.75, true));
                scenicList.push(new Scenery("pineTree", -13615, 3272, 6.25, true));
                scenicList.push(new Scenery("pineTree", -14006, 3491, 4.45, true));
                scenicList.push(new Scenery("pineTree", -13382, 3558, -6.77, true));
                scenicList.push(new Scenery("pineTree", -13811, 3791, -3.8, true));
                scenicList.push(new Scenery("pineTree", -14545, 3577, -2.1, true));
                scenicList.push(new Scenery("pineTree", -14751, 4028, -1.68, true));
                scenicList.push(new Scenery("pineTree", -14245, 3877, -5.36, true));
                scenicList.push(new Scenery("pineTree", -14299, 4240, 6, true));
                scenicList.push(new Scenery("pineTree", -13935, 4112, -1.5, true));
                scenicList.push(new Scenery("pineTree", -13455, 4015, 1.5, true));
                scenicList.push(new Scenery("pineTree", -14828, 4400, 3.5, true));
                scenicList.push(new Scenery("pineTree", -13638, 4478, -7, true));
                scenicList.push(new Scenery("pineTree", -13579, 4760, 4.8, true));
                scenicList.push(new Scenery("pineTree", -14176, 4636, -4.15, true));
                scenicList.push(new Scenery("pineTree", -14636, 4744, 5, true));
                scenicList.push(new Scenery("pineTree", -13902, 5082, -2.64, true));
                scenicList.push(new Scenery("pineTree", -13402, 5321, 6.64, true));
                scenicList.push(new Scenery("pineTree", -13541, 5707, 0, true));
                scenicList.push(new Scenery("pineTree", -14000, 5467, 24, true));
                scenicList.push(new Scenery("pineTree", -14382, 5058, -1, true));
                scenicList.push(new Scenery("pineTree", -14904, 4994, -3.14, true));
                scenicList.push(new Scenery("pineTree", -14644, 5409, 4.326, true));
                scenicList.push(new Scenery("pineTree", -13707, 6029, 0.2, true));
                scenicList.push(new Scenery("pineTree", -14063, 6249, -1.81, true));
                scenicList.push(new Scenery("pineTree", -13699, 6445, 8.92, true));
                scenicList.push(new Scenery("pineTree", -14144, 5820, 3.14, true));
                scenicList.push(new Scenery("pineTree", -14623, 5700, -4.326, true));
                scenicList.push(new Scenery("pineTree", -14450, 6526, 2.7, true));
                scenicList.push(new Scenery("pineTree", -14642, 6116, 5.82, true));
                scenicList.push(new Scenery("pineTree", -14893, 6438, 0.726, true));
                scenicList.push(new Scenery("pineTree", -15628, 1611, 1.3, true));
                scenicList.push(new Scenery("pineTree", -15344, 1992, 2.25, true));
                scenicList.push(new Scenery("pineTree", -15190, 2889, -5.3, true));
                scenicList.push(new Scenery("pineTree", -15615, 3098, -4.25, true));
                scenicList.push(new Scenery("pineTree", -15241, 3679, 3, true));
                scenicList.push(new Scenery("pineTree", -15469, 2507, -1.3, true));
                scenicList.push(new Scenery("pineTree", -16320, 1764, -2.25, true));
                scenicList.push(new Scenery("pineTree", -15943, 2235, 5.4, true));
                scenicList.push(new Scenery("pineTree", -16085, 2692, 4.25, true));
                scenicList.push(new Scenery("pineTree", -16512, 3569, -3.5, true));
                scenicList.push(new Scenery("pineTree", -15498, 4189, 4.6, true));
                scenicList.push(new Scenery("pineTree", -15242, 4637, 2, true));
                scenicList.push(new Scenery("pineTree", -15361, 5314, 2.95, true));
                scenicList.push(new Scenery("pineTree", -15203, 5851, -6, true));
                scenicList.push(new Scenery("pineTree", -15465, 6213, -5, true));
                scenicList.push(new Scenery("pineTree", -16035, 6526, 3.7, true));
                scenicList.push(new Scenery("pineTree", -16141, 6034, -2, true));
                scenicList.push(new Scenery("pineTree", -15757, 5754, -2.75, true));
                scenicList.push(new Scenery("pineTree", -15901, 4924, 6.1, true));
                scenicList.push(new Scenery("pineTree", -16093, 4488, 4.85, true));
                scenicList.push(new Scenery("pineTree", -16098, 3890, -4.2, true));
                scenicList.push(new Scenery("pineTree", -15749, 3541, 3.8, true));
                scenicList.push(new Scenery("pineTree", -16300, 2986, 1.4, true));
                scenicList.push(new Scenery("pineTree", -16861, 1612, 1.68, true));
                scenicList.push(new Scenery("pineTree", -16864, 2094, 5.79, true));
                scenicList.push(new Scenery("pineTree", -16757, 2600, -5.34, true));
                scenicList.push(new Scenery("pineTree", -16849, 3207, -2.75, true));
                scenicList.push(new Scenery("pineTree", -17408, 2504, 6.1, true));
                scenicList.push(new Scenery("pineTree", -17372, 2912, -4.85, true));
                scenicList.push(new Scenery("pineTree", -16578, 4340, -6.2, true));
                scenicList.push(new Scenery("pineTree", -16868, 4013, -3.8, true));
                scenicList.push(new Scenery("pineTree", -17472, 3463, -1.4, true));
                scenicList.push(new Scenery("pineTree", -16269, 5517, -1.68, true));
                scenicList.push(new Scenery("pineTree", -16404, 5215, -5.79, true));
                scenicList.push(new Scenery("pineTree", -16900, 4847, 5.34, true));
                scenicList.push(new Scenery("pineTree", -17335, 5020, 2.4, true));
                scenicList.push(new Scenery("pineTree", -17027, 5461, -2.25, true));
                scenicList.push(new Scenery("pineTree", -16899, 5902, 5.6, true));
                scenicList.push(new Scenery("pineTree", -16640, 6412, -4.4, true));
                scenicList.push(new Scenery("pineTree", -17292, 6300, 2.55, true));
                scenicList.push(new Scenery("pineTree", -17573, 5935, -1.3, true));
                scenicList.push(new Scenery("pineTree", -17567, 5488, -2.25, true));
                scenicList.push(new Scenery("pineTree", -18078, 5167, -5.9, true));
                scenicList.push(new Scenery("pineTree", -18066, 6193, 4.25, true));
                scenicList.push(new Scenery("pineTree", -18063, 5832, -3.5, true));
                scenicList.push(new Scenery("pineTree", -18476, 5510, 4.6, true));
                scenicList.push(new Scenery("pineTree", -17723, 4700, 2.678, true));
                scenicList.push(new Scenery("pineTree", -17409, 4286, 2.95, true));
                scenicList.push(new Scenery("pineTree", -18154, 3967, -6, true));
                scenicList.push(new Scenery("pineTree", -18089, 3548, -5, true));
                scenicList.push(new Scenery("pineTree", -18045, 2677, 3.7, true));
                scenicList.push(new Scenery("pineTree", -17417, 1513, -2, true));
                scenicList.push(new Scenery("pineTree", -17501, 1941, -2.75, true));
                scenicList.push(new Scenery("pineTree", -18204, 2160, 6.6, true));
                scenicList.push(new Scenery("pineTree", -17837, 3063, 4.85, true));
                scenicList.push(new Scenery("pineTree", -18068, 1665, -4.2, true));
                scenicList.push(new Scenery("pineTree", -19271, 5223, 3.8, true));
                scenicList.push(new Scenery("pineTree", -18871, 5094, 1.4, true));
                scenicList.push(new Scenery("pineTree", -18813, 4792, -1.9, true));
                scenicList.push(new Scenery("pineTree", -19098, 4599, 5.82, true));
                scenicList.push(new Scenery("pineTree", -19543, 4574, 8.9, true));
                scenicList.push(new Scenery("pineTree", -19433, 4942, 0, true));
                scenicList.push(new Scenery("pineTree", -18354, 4916, 6.25, true));
                scenicList.push(new Scenery("pineTree", -17924, 4397, 4.45, true));
                scenicList.push(new Scenery("pineTree", -17583, 3765, -6.77, true));
                scenicList.push(new Scenery("pineTree", -17091, 3684, -3.8, true));
                scenicList.push(new Scenery("pineTree", -18492, 4564, -2.1, true));
                scenicList.push(new Scenery("pineTree", -18851, 4176, -1.68, true));
                scenicList.push(new Scenery("pineTree", -18639, 1603, -5.36, true));
                scenicList.push(new Scenery("pineTree", -18441, 1910, 6, true));
                scenicList.push(new Scenery("pineTree", -18706, 3761, -1.5, true));
                scenicList.push(new Scenery("pineTree", -18544, 2952, 1.5, true));
                scenicList.push(new Scenery("pineTree", -18653, 2522, 3.5, true));
                scenicList.push(new Scenery("pineTree", -18919, 2081, -7.5, true));
                scenicList.push(new Scenery("pineTree", -19315, 1774, 4.8, true));
                scenicList.push(new Scenery("pineTree", -19719, 1517, -4.15, true));
                scenicList.push(new Scenery("pineTree", -19914, 1983, 5, true));
                scenicList.push(new Scenery("pineTree", -19293, 2219, -2.64, true));
                scenicList.push(new Scenery("pineTree", -19081, 2835, 6.64, true));
                scenicList.push(new Scenery("pineTree", -18500, 3371, 0, true));
                scenicList.push(new Scenery("pineTree", -19132, 3300, 23.3, true));
                scenicList.push(new Scenery("pineTree", -19480, 2548, -1, true));
                scenicList.push(new Scenery("pineTree", -19696, 3059, -3.46, true));
                scenicList.push(new Scenery("pineTree", -20199, 1676, 4.637, true));
                scenicList.push(new Scenery("pineTree", -20577, 1620, 0.2, true));
                scenicList.push(new Scenery("pineTree", -20402, 2215, -1.81, true));
                scenicList.push(new Scenery("pineTree", -19785, 2312, 8.92, true));
                scenicList.push(new Scenery("pineTree", -20302, 2697, 3.14, true));
                scenicList.push(new Scenery("pineTree", -18697, 5892, -4.326, true));
                scenicList.push(new Scenery("pineTree", -18660, 6413, 2.7, true));
                scenicList.push(new Scenery("pineTree", -19173, 6128, 5.82, true));
                scenicList.push(new Scenery("pineTree", -18934, 3576, 0.726, true));
                scenicList.push(new Scenery("pineTree", -19412, 5677, -2, true));
                scenicList.push(new Scenery("pineTree", -19471, 4118, 2.25, true));
                scenicList.push(new Scenery("pineTree", -19417, 3763, -5.5, true));
                scenicList.push(new Scenery("pineTree", -19814, 3479, -4.4, true));
                scenicList.push(new Scenery("pineTree", -20462, 3144, 3, true));
                scenicList.push(new Scenery("pineTree", -20954, 2391, -1.3, true));
                scenicList.push(new Scenery("pineTree", -20952, 1992, -2.67, true));
                scenicList.push(new Scenery("pineTree", -21203, 1680, 5.4, true));
                scenicList.push(new Scenery("pineTree", -21683, 1554, 4.25, true));
                scenicList.push(new Scenery("pineTree", -22198, 1638, -3.5, true));
                scenicList.push(new Scenery("pineTree", -22848, 1769, 4.6, true));
                scenicList.push(new Scenery("pineTree", -23443, 1639, 2, true));
                scenicList.push(new Scenery("pineTree", -23265, 2104, 2.95, true));
                scenicList.push(new Scenery("pineTree", -23590, 2527, -6.2, true));
                scenicList.push(new Scenery("pineTree", -22965, 2502, -4.8, true));
                scenicList.push(new Scenery("pineTree", -22529, 2257, 1.7, true));
                scenicList.push(new Scenery("pineTree", -22034, 2058, -3, true));
                scenicList.push(new Scenery("pineTree", -21587, 1938, -2.75, true));
                scenicList.push(new Scenery("pineTree", -21503, 2293, 6.1, true));
                scenicList.push(new Scenery("pineTree", -21065, 2911, 4.85, true));
                scenicList.push(new Scenery("pineTree", -21982, 2543, -4.2, true));
                scenicList.push(new Scenery("pineTree", -22548, 2847, 4.8, true));
                scenicList.push(new Scenery("pineTree", -23254, 2962, 1.4, true));
                scenicList.push(new Scenery("pineTree", -21161, 3398, 2.68, true));
                scenicList.push(new Scenery("pineTree", -20274, 3694, 5.79, true));
                scenicList.push(new Scenery("pineTree", -20851, 3742, -6.34, true));
                scenicList.push(new Scenery("pineTree", -21719, 3688, -3.75, true));
                scenicList.push(new Scenery("pineTree", -21789, 2995, 6.1, true));
                scenicList.push(new Scenery("pineTree", -23551, 3569, -4.85, true));
                scenicList.push(new Scenery("pineTree", -22873, 3300, -6.2, true));
                scenicList.push(new Scenery("pineTree", -23363, 4039, -3.8, true));
                scenicList.push(new Scenery("pineTree", -23458, 4367, -1.4, true));
                scenicList.push(new Scenery("pineTree", -22987, 4643, -1.68, true));
                scenicList.push(new Scenery("pineTree", -23456, 4963, -5.79, true));
                scenicList.push(new Scenery("pineTree", -23592, 5367, 5.34, true));
                scenicList.push(new Scenery("pineTree", -23371, 5680, 2.4, true));
                scenicList.push(new Scenery("pineTree", -23153, 6151, -2.25, true));
                scenicList.push(new Scenery("pineTree", -23518, 6494, 5.6, true));
                scenicList.push(new Scenery("pineTree", -22809, -6432, -4.4, true));
                scenicList.push(new Scenery("pineTree", -16381, 4806, -2.95, true));
                scenicList.push(new Scenery("pineTree", -22013, 3355, 6.2, true));
                scenicList.push(new Scenery("pineTree", -22373, 3615, 4.1, true));
                scenicList.push(new Scenery("pineTree", -22906, 3756, -1.7, true));
                scenicList.push(new Scenery("pineTree", -20111, 4179, 3, true));
                scenicList.push(new Scenery("pineTree", -19838, 3870, 2.75, true));
                scenicList.push(new Scenery("pineTree", -20736, 4221, -6.1, true));
                scenicList.push(new Scenery("pineTree", -21323, 4021, -4.85, true));
                scenicList.push(new Scenery("pineTree", -20033, 4569, 4.2, true));
                scenicList.push(new Scenery("pineTree", -19915, 4909, -4.8, true));
                scenicList.push(new Scenery("pineTree", -20402, 4822, -1.4, true));
                scenicList.push(new Scenery("pineTree", -20422, 4481, -2.68, true));
                scenicList.push(new Scenery("pineTree", -18960, 5557, -5.79, true));
                scenicList.push(new Scenery("pineTree", -19737, 5205, 6.34, true));
                scenicList.push(new Scenery("pineTree", -19925, 5523, 3.75, true));
                scenicList.push(new Scenery("pineTree", -19708, 6434, -6.1, true));
                scenicList.push(new Scenery("pineTree", -19623, 6020, 4.85, true));
                scenicList.push(new Scenery("pineTree", -20206, 6182, 6.2, true));
                scenicList.push(new Scenery("pineTree", -20078, 5835, 3.8, true));
                scenicList.push(new Scenery("pineTree", -20358, 5210, 1.4, true));
                scenicList.push(new Scenery("pineTree", -21859, 4232, 1.68, true));
                scenicList.push(new Scenery("pineTree", -22259, 4058, 5.79, true));
                scenicList.push(new Scenery("pineTree", -22843, 4133, -5.34, true));
                scenicList.push(new Scenery("pineTree", -22906, 5194, -2.4, true));
                scenicList.push(new Scenery("pineTree", -22347, 4442, 2.25, true));
                scenicList.push(new Scenery("pineTree", -21285, 4514, -5.6, true));
                scenicList.push(new Scenery("pineTree", -20887, 4575, 3.8, true));
                scenicList.push(new Scenery("pineTree", -20993, 5001, 1.5, true));
                scenicList.push(new Scenery("pineTree", -21859, 4778, -1.72, true));
                scenicList.push(new Scenery("pineTree", -21489, 5020, 5.9, true));
                scenicList.push(new Scenery("pineTree", -20763, 5526, 5.5, true));
                scenicList.push(new Scenery("pineTree", -22641, 6364, -2.85, true));
                scenicList.push(new Scenery("pineTree", -22659, 5806, 3.2, true));
                scenicList.push(new Scenery("pineTree", -20654, 5920, -5.79, true));
                scenicList.push(new Scenery("pineTree", -20691, 6455, 3, true));
                scenicList.push(new Scenery("pineTree", -21207, 6173, -1.3, true));
                scenicList.push(new Scenery("pineTree", -21382, 5754, -2.25, true));
                scenicList.push(new Scenery("pineTree", -21300, 5423, 5.4, true));
                scenicList.push(new Scenery("pineTree", -21972, 5332, 4.25, true));
                scenicList.push(new Scenery("pineTree", -22316, 5071, -3.5, true));
                scenicList.push(new Scenery("pineTree", -21902, 5673, 4.6, true));
                scenicList.push(new Scenery("pineTree", -22422, 5411, 2, true));
                scenicList.push(new Scenery("pineTree", -22324, 6086, 2.95, true));
                scenicList.push(new Scenery("pineTree", -21735, 5972, -6, true));
                scenicList.push(new Scenery("pineTree", -21914, 6486, -3.75, true));
                scenicList.push(new Scenery("pineTree", -21454, 6550, 1, true));
                scenicList.push(new Scenery("pineTree", -15523, -3446, 1.7, true));
                scenicList.push(new Scenery("pineTree", -15477, -2936, -3, true));
                scenicList.push(new Scenery("pineTree", -15047, -2829, -2.75, true));
                scenicList.push(new Scenery("pineTree", -15291, -2535, 6.1, true));
                scenicList.push(new Scenery("pineTree", -15961, -3196, 4.85, true));
                scenicList.push(new Scenery("pineTree", -16104, -3584, -4.2, true));
                scenicList.push(new Scenery("pineTree", -16551, -3362, 4.8, true));
                scenicList.push(new Scenery("pineTree", -16988, -3495, 0.4, true));
                scenicList.push(new Scenery("pineTree", -17527, -3290, 2.9, true));
                scenicList.push(new Scenery("pineTree", -17857, -3467, -5.4, true));
                scenicList.push(new Scenery("pineTree", -17041, -3173, 6.4, true));
                scenicList.push(new Scenery("pineTree", -16385, -3044, -3.75, true));
                scenicList.push(new Scenery("pineTree", -16764, -2891, 5.6, true));
                scenicList.push(new Scenery("pineTree", -18357, -3323, -4.85, true));
                scenicList.push(new Scenery("pineTree", -18771, -3552, -6.2, true));
                scenicList.push(new Scenery("pineTree", -19190, -3559, -3.8, true));
                scenicList.push(new Scenery("pineTree", -19585, -3316, -1.4, true));
                scenicList.push(new Scenery("pineTree", -19997, -3500, -1.68, true));
                scenicList.push(new Scenery("pineTree", -20458, -3171, -5.79, true));
                scenicList.push(new Scenery("pineTree", -20633, -3579, 5.34, true));
                scenicList.push(new Scenery("pineTree", -20843, -3241, -2.25, true));
                scenicList.push(new Scenery("pineTree", -21051, -3468, 2.4, true));
                scenicList.push(new Scenery("pineTree", -21493, -3139, 5.6, true));
                scenicList.push(new Scenery("pineTree", -21542, -3563, -4.4, true));
                scenicList.push(new Scenery("pineTree", -21973, -3329, -2.95, true));
                scenicList.push(new Scenery("pineTree", -22451, -3402, 6.2, true));
                scenicList.push(new Scenery("pineTree", -22851, -3178, 4.1, true));
                scenicList.push(new Scenery("pineTree", -22988, -3485, -1.7, true));
                scenicList.push(new Scenery("pineTree", -23453, -3480, 3, true));
                scenicList.push(new Scenery("pineTree", -23268, -3193, 2.75, true));
                scenicList.push(new Scenery("pineTree", -23545, -2893, -6.1, true));
                scenicList.push(new Scenery("pineTree", -23159, -2845, -4.85, true));
                scenicList.push(new Scenery("pineTree", -23369, -2422, 4.2, true));
                scenicList.push(new Scenery("pineTree", -23000, -2106, -4.8, true));
                scenicList.push(new Scenery("pineTree", -23584, -1940, -1.4, true));
                scenicList.push(new Scenery("pineTree", -22735, -2606, -2.68, true));
                scenicList.push(new Scenery("pineTree", -22683, -2274, -5.79, true));
                scenicList.push(new Scenery("pineTree", -23244, -1655, 6.34, true));
                scenicList.push(new Scenery("pineTree", -23352, -1265, 3.75, true));
                scenicList.push(new Scenery("pineTree", -23330, -836, -6.9, true));
                scenicList.push(new Scenery("pineTree", -23001, -1077, 4.85, true));
                scenicList.push(new Scenery("pineTree", -22881, -742, 4.34, true));
                scenicList.push(new Scenery("pineTree", -23181, -555, 3.8, true));
                scenicList.push(new Scenery("pineTree", -23519, -321, 1.4, true));
                scenicList.push(new Scenery("pineTree", -23457, 139, 1.68, true));
                scenicList.push(new Scenery("pineTree", -23589, 498, 5.79, true));
                scenicList.push(new Scenery("pineTree", -23146, 704, -5.34, true));
                scenicList.push(new Scenery("pineTree", -23575, 820, -2.4, true));
                scenicList.push(new Scenery("pineTree", -23345, 1047, 2.25, true));
                scenicList.push(new Scenery("pineTree", -19017, -3180, -5.6, true));
                scenicList.push(new Scenery("pineTree", -22878, 1154, 3.8, true));
                scenicList.push(new Scenery("pineTree", -22479, 998, 1.5, true));
                scenicList.push(new Scenery("pineTree", -22018, 1043, -1.72, true));
                scenicList.push(new Scenery("pineTree", -21627, 860, 5.9, true));
                scenicList.push(new Scenery("pineTree", -21408, 1133, 5.5, true));
                scenicList.push(new Scenery("pineTree", -21076, 960, -2.85, true));
                scenicList.push(new Scenery("pineTree", -20592, 1055, 3.2, true));
                scenicList.push(new Scenery("pineTree", -20125, 1130, -5.79, true));
                scenicList.push(new Scenery("pineTree", -15166, 879, 3, true));
                scenicList.push(new Scenery("pineTree", -15498, 1073, -1.3, true));
                scenicList.push(new Scenery("pineTree", -15836, 959, -2.25, true));
                scenicList.push(new Scenery("pineTree", -16481, 1123, 5.4, true));
                scenicList.push(new Scenery("pineTree", -13447, 104, 4.25, true));
                scenicList.push(new Scenery("pineTree", -16239, 786, -3.5, true));
                scenicList.push(new Scenery("pineTree", -16912, 1090, 4.6, true));
                scenicList.push(new Scenery("pineTree", -16836, 783, 2, true));
                scenicList.push(new Scenery("pineTree", -17340, 948, 2.95, true));
                scenicList.push(new Scenery("pineTree", -17633, 1128, -6, true));
                scenicList.push(new Scenery("pineTree", -17686, 853, -5, true));
                scenicList.push(new Scenery("pineTree", -18051, 1017, 3.8, true));
                scenicList.push(new Scenery("pineTree", -18640, 1109, 2.95, true));
                scenicList.push(new Scenery("pineTree", -18449, 626, -1.3, true));
                scenicList.push(new Scenery("pineTree", -18086, 473, -2.25, true));
                scenicList.push(new Scenery("pineTree", -18595, 177, -5.9, true));
                scenicList.push(new Scenery("pineTree", -18943, 470, 4.25, true));
                scenicList.push(new Scenery("pineTree", -19007, 863, -3.5, true));
                scenicList.push(new Scenery("pineTree", -19321, 1028, 4.6, true));
                scenicList.push(new Scenery("pineTree", -19591, 1086, 2.678, true));
                scenicList.push(new Scenery("pineTree", -19454, 591, 2.95, true));
                scenicList.push(new Scenery("pineTree", -19861, 782, -6, true));
                scenicList.push(new Scenery("pineTree", -20305, 610, -5, true));
                scenicList.push(new Scenery("pineTree", -20726, 677, 3.7, true));
                scenicList.push(new Scenery("pineTree", -21306, 349, -2, true));
                scenicList.push(new Scenery("pineTree", -22272, 467, -2.75, true));
                scenicList.push(new Scenery("pineTree", -22777, 218, 6.6, true));
                scenicList.push(new Scenery("pineTree", -22961, -99, 4.85, true));
                scenicList.push(new Scenery("pineTree", -22601, -389, -4.2, true));
                scenicList.push(new Scenery("pineTree", -22346, -1032, 3.8, true));
                scenicList.push(new Scenery("pineTree", -22679, -1501, 1.4, true));
                scenicList.push(new Scenery("pineTree", -22394, -1777, -1.9, true));
                scenicList.push(new Scenery("pineTree", -22195, -2152, 5.82, true));
                scenicList.push(new Scenery("pineTree", -22280, -2462, 8.9, true));
                scenicList.push(new Scenery("pineTree", -22460, -2966, -3.75, true));
                scenicList.push(new Scenery("pineTree", -21994, -2890, 6.25, true));
                scenicList.push(new Scenery("pineTree", -21847, -2554, 4.45, true));
                scenicList.push(new Scenery("pineTree", -21242, -2782, -6.77, true));
                scenicList.push(new Scenery("pineTree", -20737, -2813, -3.8, true));
                scenicList.push(new Scenery("pineTree", -20941, -2418, -2.1, true));
                scenicList.push(new Scenery("pineTree", -21599, -2301, -1.68, true));
                scenicList.push(new Scenery("pineTree", -21830, -1919, -5.36, true));
                scenicList.push(new Scenery("pineTree", -22015, -1518, 6, true));
                scenicList.push(new Scenery("pineTree", -21745, -1091, -1.5, true));
                scenicList.push(new Scenery("pineTree", -21982, -822, 1.5, true));
                scenicList.push(new Scenery("pineTree", -22405, -657, 3.5, true));
                scenicList.push(new Scenery("pineTree", -22649, 555, -7, true));
                scenicList.push(new Scenery("pineTree", -21978, 702, 4.8, true));
                scenicList.push(new Scenery("pineTree", -21794, 281, -4.15, true));
                scenicList.push(new Scenery("pineTree", -22303, 89, 5, true));
                scenicList.push(new Scenery("pineTree", -21923, -316, -2.64, true));
                scenicList.push(new Scenery("pineTree", -21497, -600, 0, true));
                scenicList.push(new Scenery("pineTree", -21209, -2156, 7.9, true));
                scenicList.push(new Scenery("pineTree", -19867, -2946, -9.1, true));
                scenicList.push(new Scenery("pineTree", -18467, -2825, 4.0668, true));
                scenicList.push(new Scenery("pineTree", -18014, -3018, 2.2764, true));
                scenicList.push(new Scenery("pineTree", -17524, -2797, 9.2, true));
                scenicList.push(new Scenery("pineTree", -17149, -2392, -5.669, true));
                scenicList.push(new Scenery("pineTree", -17794, -2511, -1.6281, true));
                scenicList.push(new Scenery("pineTree", -19003, -2621, 2.8392, true));
                scenicList.push(new Scenery("pineTree", -19415, -2979, -6.08, true));
                scenicList.push(new Scenery("pineTree", -19710, -2256, -5, true));
                scenicList.push(new Scenery("pineTree", -16417, -2940, 3.7, true));
                scenicList.push(new Scenery("pineTree", -15963, -2636, 3.5, true));
                scenicList.push(new Scenery("pineTree", -15804, -2315, -0.17, true));
                scenicList.push(new Scenery("pineTree", -16299, -2065, 0.47, true));
                scenicList.push(new Scenery("pineTree", -16735, -2222, -4.18, true));
                scenicList.push(new Scenery("pineTree", -17319, -2106, 9.6, true));
                scenicList.push(new Scenery("pineTree", -18003, -2179, 1.45, true));
                scenicList.push(new Scenery("pineTree", -18405, -2448, -10.34, true));
                scenicList.push(new Scenery("pineTree", -19012, -2127, 3.614, true));
                scenicList.push(new Scenery("pineTree", -20250, -2499, -4.628, true));
                scenicList.push(new Scenery("pineTree", -20266, -2840, -3.4, true));
                scenicList.push(new Scenery("pineTree", -21413, -132, 57, true));
                scenicList.push(new Scenery("pineTree", -21084, -417, 0, true));
                scenicList.push(new Scenery("pineTree", -20910, 40, 3.9, true));
                scenicList.push(new Scenery("pineTree", -20649, -186, -5.4, true));
                scenicList.push(new Scenery("pineTree", -20913, 351, 4.76, true));
                scenicList.push(new Scenery("pineTree", -20389, 143, -2.3764, true));
                scenicList.push(new Scenery("pineTree", -20670, -583, -9.215, true));
                scenicList.push(new Scenery("pineTree", -21272, -973, 5.169, true));
                scenicList.push(new Scenery("pineTree", -20489, -2182, 3.1543, true));
                scenicList.push(new Scenery("pineTree", -16469, -2535, -2.53, true));
                scenicList.push(new Scenery("pineTree", -15175, 539, -4.85, true));
                scenicList.push(new Scenery("pineTree", -15252, 172, 4.2, true));
                scenicList.push(new Scenery("pineTree", -15407, -135, -4.8, true));
                scenicList.push(new Scenery("pineTree", -15893, 98, -1.4, true));
                scenicList.push(new Scenery("pineTree", -15964, -316, -2.68, true));
                scenicList.push(new Scenery("pineTree", -15537, -525, -5.79, true));
                scenicList.push(new Scenery("pineTree", -15121, -901, 6.34, true));
                scenicList.push(new Scenery("pineTree", -15172, -1282, 3.75, true));
                scenicList.push(new Scenery("pineTree", -15234, -1648, -6.9, true));
                scenicList.push(new Scenery("pineTree", -14945, -1971, -4.85, true));
                scenicList.push(new Scenery("pineTree", -15148, -2213, -4.34, true));
                scenicList.push(new Scenery("pineTree", -15506, -2018, -3.8, true));
                scenicList.push(new Scenery("pineTree", -15925, -1908, 1.4, true));
                scenicList.push(new Scenery("pineTree", -15696, 515, -1.68, true));
                scenicList.push(new Scenery("pineTree", -16270, 359, -5.79, true));
                scenicList.push(new Scenery("pineTree", -16702, 375, 5.34, true));
                scenicList.push(new Scenery("pineTree", -17269, 524, 2.4, true));
                scenicList.push(new Scenery("pineTree", -17131, 118, 2.25, true));
                scenicList.push(new Scenery("pineTree", -16383, -38, 5.6, true));
                scenicList.push(new Scenery("pineTree", -16434, -350, 3.8, true));
                scenicList.push(new Scenery("pineTree", -16141, -647, -1.5, true));
                scenicList.push(new Scenery("pineTree", -15721, -803, -1.72, true));
                scenicList.push(new Scenery("pineTree", -15542, -1113, -5.9, true));
                scenicList.push(new Scenery("pineTree", -15649, -1442, -5.5, true));
                scenicList.push(new Scenery("pineTree", -16217, -1569, 2.85, true));
                scenicList.push(new Scenery("pineTree", -16599, -1823, -3.2, true));
                scenicList.push(new Scenery("pineTree", -16996, -1833, -5.79, true));
                scenicList.push(new Scenery("pineTree", -16617, -1506, 3, true));
                scenicList.push(new Scenery("pineTree", -17093, -1481, -1.3, true));
                scenicList.push(new Scenery("pineTree", -17716, -1802, -2.25, true));
                scenicList.push(new Scenery("pineTree", -17687, -1338, 5.4, true));
                scenicList.push(new Scenery("pineTree", -18217, -1786, 4.25, true));
                scenicList.push(new Scenery("pineTree", -18453, -2031, -3.5, true));
                scenicList.push(new Scenery("pineTree", -19535, -2606, 4.6, true));
                scenicList.push(new Scenery("pineTree", -18736, -1734, 2, true));
                scenicList.push(new Scenery("pineTree", -19323, -1726, 2.95, true));
                scenicList.push(new Scenery("pineTree", -19704, -1835, -6, true));
                scenicList.push(new Scenery("pineTree", -20136, -1981, -5, true));
                scenicList.push(new Scenery("pineTree", -20092, -1615, 3.8, true));
                scenicList.push(new Scenery("pineTree", -20490, -1802, 2.95, true));
                scenicList.push(new Scenery("pineTree", -20840, -1975, -1.3, true));
                scenicList.push(new Scenery("pineTree", -21206, -1730, -2.25, true));
                scenicList.push(new Scenery("pineTree", -21494, -1430, -5.9, true));
                scenicList.push(new Scenery("pineTree", -20864, -1537, 4.25, true));
                scenicList.push(new Scenery("pineTree", -20885, -1187, -3.5, true));
                scenicList.push(new Scenery("pineTree", -20468, -1406, 4.6, true));
                scenicList.push(new Scenery("pineTree", -19978, -1231, 2.678, true));
                scenicList.push(new Scenery("pineTree", -19683, -1509, 2.95, true));
                scenicList.push(new Scenery("pineTree", -19035, -1325, -6, true));
                scenicList.push(new Scenery("pineTree", -19546, -1065, -5, true));
                scenicList.push(new Scenery("pineTree", -18977, -932, 3.7, true));
                scenicList.push(new Scenery("pineTree", -20276, -917, -2, true));
                scenicList.push(new Scenery("pineTree", -18295, -1396, -2.75, true));
                scenicList.push(new Scenery("pineTree", -18337, -1079, 6.6, true));
                scenicList.push(new Scenery("pineTree", -17802, -692, 4.85, true));
                scenicList.push(new Scenery("pineTree", -17407, -1040, -5, true));
                scenicList.push(new Scenery("pineTree", -16086, -1190, 3.8, true));
                scenicList.push(new Scenery("pineTree", -16723, -1118, 1.4, true));
                scenicList.push(new Scenery("pineTree", -16909, -724, -1.9, true));
                scenicList.push(new Scenery("pineTree", -17025, -328, 5.82, true));
                scenicList.push(new Scenery("pineTree", -17572, -357, 8.9, true));
                scenicList.push(new Scenery("pineTree", -17698, -90, -3.75, true));
                scenicList.push(new Scenery("pineTree", -17633, 258, 6.25, true));
                scenicList.push(new Scenery("pineTree", -18141, -62, 4.45, true));
                scenicList.push(new Scenery("pineTree", -18048, -419, -6.77, true));
                scenicList.push(new Scenery("pineTree", -18575, -806, -3.8, true));
                scenicList.push(new Scenery("pineTree", -18587, -385, -2.1, true));
                scenicList.push(new Scenery("pineTree", -19092, -631, -1.68, true));
                scenicList.push(new Scenery("pineTree", -19616, -734, -5.36, true));
                scenicList.push(new Scenery("pineTree", -20099, -563, 6, true));
                scenicList.push(new Scenery("pineTree", -19891, -204, -1.5, true));
                scenicList.push(new Scenery("pineTree", -19332, -290, 1.5, true));
                scenicList.push(new Scenery("pineTree", -18907, -86, 3.5, true));
                scenicList.push(new Scenery("pineTree", -19545, 124, -7, true));
                scenicList.push(new Scenery("pineTree", -19923, 398, 4.8, true));
                scenicList.push(new Scenery("pineTree", -16155, -2337, -4.15, true));
                scenicList.push(new Scenery("pineTree", -19903, -2595, 0, true));
                scenicList.push(new Scenery("pineTree", -18192, -746, 2.9999, true));

                //trees to the east
                scenicList.push(new Scenery("pineTree", -24765, 1829, 5, true));
                scenicList.push(new Scenery("pineTree", -24198 , 1709, 2, true));
                scenicList.push(new Scenery("pineTree", -23745 , 1934, -3, true));
                scenicList.push(new Scenery("pineTree", -24444 , 2385, 4.5, true));
                scenicList.push(new Scenery("pineTree", -24198 , 2234, -1, true));
                scenicList.push(new Scenery("pineTree", -23898 , 2830, 2.25, true));
                scenicList.push(new Scenery("pineTree", -24634 , 966, 1.25, true));
                scenicList.push(new Scenery("pineTree", -24197 , 705, 5.42, true));
                scenicList.push(new Scenery("pineTree", -24018 , 991, -3.5, true));
                scenicList.push(new Scenery("pineTree", -24019 , 231, -4, true));
                scenicList.push(new Scenery("pineTree", -23811 , -62, -8, true));
                scenicList.push(new Scenery("pineTree", -24420 , -2, 7, true));
                scenicList.push(new Scenery("pineTree", -23997 , -373, 7.3, true));
                scenicList.push(new Scenery("pineTree", -24020 , 3429, 2.6, true));
                scenicList.push(new Scenery("pineTree", -23774 , 3956, 1.7, true));
                scenicList.push(new Scenery("pineTree", -24052 , 4209, 3, true));
                scenicList.push(new Scenery("pineTree", -23818 , 4635, 4, true));
                scenicList.push(new Scenery("pineTree", -24185 , 4835, -5, true));
                scenicList.push(new Scenery("pineTree", -24463 , 5090, 5.3, true));
                scenicList.push(new Scenery("pineTree", -24052 , 5813, -2, true));
                scenicList.push(new Scenery("pineTree", -23742 , 6022, 1.1, true));
                scenicList.push(new Scenery("pineTree", -24244 , 6281, -1.7, true));
                scenicList.push(new Scenery("pineTree", -24562, 6011, 4.9, true));
                scenicList.push(new Scenery("pineTree", -25076 , 6479, 6.8, true));
                scenicList.push(new Scenery("pineTree", -25651 , 6162, -3.3, true));
                scenicList.push(new Scenery("pineTree", -25213 , 5786, 4.7, true));
                scenicList.push(new Scenery("pineTree", -24775 , 5505, -1.5, true));
                scenicList.push(new Scenery("pineTree", -24165 , 5375, 2.25, true));
                scenicList.push(new Scenery("pineTree", -25098 , 5232, 9, true));
                scenicList.push(new Scenery("pineTree", -25590 , 5399, -8.42, true));
                scenicList.push(new Scenery("pineTree", -25394 , 4982, -4, true));
                scenicList.push(new Scenery("pineTree", -24660 , 4619, -14, true));
                scenicList.push(new Scenery("pineTree", -24660 , 4619, 7.7, true));
                scenicList.push(new Scenery("pineTree", -23789 , 4633, 8.2, true));
                scenicList.push(new Scenery("pineTree", -25189 , 4353, 6, true));
                scenicList.push(new Scenery("pineTree", -24265 , 3738, 3.9, true));
                scenicList.push(new Scenery("pineTree", -25112 , 3699, -5, true));
                scenicList.push(new Scenery("pineTree", -24615 , 3299, 2.5, true));
                scenicList.push(new Scenery("pineTree", -24499 , 2943, -4.4, true));
                scenicList.push(new Scenery("pineTree", -24958 , 2161, -6, true));
                scenicList.push(new Scenery("pineTree", -24835 , 2725, -5.55, true));
                scenicList.push(new Scenery("pineTree", -24703 , 4115, -2.2, true));
                scenicList.push(new Scenery("pineTree", -25089 , 3063, -1.25, true));
                scenicList.push(new Scenery("pineTree", -25395 , 1643, 1.77, true));
                scenicList.push(new Scenery("pineTree", -25610 , 4604, 3.25, true));
                scenicList.push(new Scenery("pineTree", -25377 , 105, -4.7, true));
                scenicList.push(new Scenery("pineTree", -24578 , 366, 1.6, true));
                scenicList.push(new Scenery("pineTree", -23898 , -769, 9.4, true));
                scenicList.push(new Scenery("pineTree", -24547 , -471, -9, true));
                scenicList.push(new Scenery("pineTree", -24943 , -1088, 10.37, true));
                scenicList.push(new Scenery("pineTree", -24322 , -1385, -5.1, true));
                scenicList.push(new Scenery("pineTree", -23705 , -1513, 16, true));
                scenicList.push(new Scenery("pineTree", -24062 , -1706, 8.864, true));
                scenicList.push(new Scenery("pineTree", -23859 , -2235, 9.2, true));
                scenicList.push(new Scenery("pineTree", -23687 , -2627, -7.12, true));
                scenicList.push(new Scenery("pineTree", -24992 , -1579, -3.9, true));
                scenicList.push(new Scenery("pineTree", -24561 , -1965, -6.3, true));
                scenicList.push(new Scenery("pineTree", -24146 , -2050, -2.5, true));
                scenicList.push(new Scenery("pineTree", -24927 , -2450, 4.444, true));
                scenicList.push(new Scenery("pineTree", -24461 , -2299, 6.75, true));
                scenicList.push(new Scenery("pineTree", -24323 , -2744, -3.33, true));
                scenicList.push(new Scenery("pineTree", -24646 , -2924, -2.2, true));
                scenicList.push(new Scenery("pineTree", -23897 , -3066, 0.19, true));
                scenicList.push(new Scenery("pineTree", -24054 , -3525, 0, true));
                scenicList.push(new Scenery("pineTree", -24280 , -3092, 8.88, true));
                scenicList.push(new Scenery("pineTree", -24674 , -3346, 2, true));
                scenicList.push(new Scenery("pineTree", -24367 , -1000, 3, true));
                scenicList.push(new Scenery("pineTree", -25064 , -3010, -10, true));

                //Plants of the wuntol woods
                scenicList.push(new Scenery("neprilnePlant", -17425 , 3993, -5.8, true));
                scenicList.push(new Scenery("pluttPlant", -16685 , 4251, 2.4, true));
                scenicList.push(new Scenery("pluttPlant", -20807 , 5229, 3.4, true));
                scenicList.push(new Scenery("pluttPlant", -17457 , 4992, -5.2, true));
                scenicList.push(new Scenery("pluttPlant", -21673 , -3221, 4.444, true));
                scenicList.push(new Scenery("pluttPlant", -15564 , -1707, 1, true));
                scenicList.push(new Scenery("pluttPlant", -15572 , -1722, 2, true));
                scenicList.push(new Scenery("pluttPlant", -15581 , -1697, 4, true));
                scenicList.push(new Scenery("pluttPlant", -15591 , -1718, 8, true));
                scenicList.push(new Scenery("pluttPlant", -18613 , 308, 16, true));
                scenicList.push(new Scenery("culprisPlant", -16183 , 5023, -3, true));
                scenicList.push(new Scenery("culprisPlant", -15028 , 3554, 3, true));
                scenicList.push(new Scenery("culprisPlant", -18402 , 2601, 4.9, true));
                scenicList.push(new Scenery("culprisPlant", -19197 , 3033, 1.6, true));
                scenicList.push(new Scenery("culprisPlant", -22381 , -2686, 12, true));
                scenicList.push(new Scenery("culprisPlant", -16883 , -1358, -1.5, true));
                scenicList.push(new Scenery("culprisPlant", -21156 , 617, -3.5, true));
                scenicList.push(new Scenery("neprilnePlant", -15323 , 4987, 4, true));
                scenicList.push(new Scenery("neprilnePlant", -21654 , 5532, -4, true));
                scenicList.push(new Scenery("stomwikPlant", -15793 , 5985, 0, true));
                scenicList.push(new Scenery("stomwikPlant", -16580 , 3181, -4.4, true));
                scenicList.push(new Scenery("stomwikPlant", -18732 , -2343, 6, true));
                scenicList.push(new Scenery("akerPlant", -14491 , 5755, 1, true));
                scenicList.push(new Scenery("akerPlant", -14522 , 5800, 0.5, true));
                scenicList.push(new Scenery("akerPlant", -19358 , 4061, 7.6, true));
                scenicList.push(new Scenery("akerPlant", -19053 , 3597, -8.8, true));
                scenicList.push(new Scenery("akerPlant", -22214 , 4390, 0, true));
                scenicList.push(new Scenery("akerPlant", -20611 , -2843, 9.64, true));
                scenicList.push(new Scenery("akerPlant", -14692 , -1805, 7.6, true));
                scenicList.push(new Scenery("akerPlant", -18994 , -2891, -0.89, true));
                scenicList.push(new Scenery("akerPlant", -22180 , 132, -6.6, true));
                scenicList.push(new Scenery("akerPlant", -17058 , -498, 1.9, true));
                scenicList.push(new Scenery("akerPlant", -14749 , 284, -4.82, true));
                scenicList.push(new Scenery("akerPlant", -15193 , -2065, 0.25, true));
                scenicList.push(new Scenery("akerPlant", -17115 , -221, 6.25, true));
                scenicList.push(new Scenery("glinPlant", -14380 , 4881, -1, true));
                scenicList.push(new Scenery("glinPlant", -15147 , 3024, 6, true));
                scenicList.push(new Scenery("glinPlant", -17777 , 3397, -3.5, true));
                scenicList.push(new Scenery("glinPlant", -21282 , 3248, -3.1, true));
                scenicList.push(new Scenery("glinPlant", -15555 , 4047, 4.3, true));
                scenicList.push(new Scenery("glinPlant", -14563 , 3658, 7, true));
                scenicList.push(new Scenery("glinPlant", -16949 , -3390, 6, true));
                scenicList.push(new Scenery("glinPlant", -17023 , -2793, 5, true));
                scenicList.push(new Scenery("glinPlant", -14274 , -2850, -0.4, true));
                scenicList.push(new Scenery("glinPlant", -16534 , -2922, 6, true));
                scenicList.push(new Scenery("glinPlant", -15944 , -2502, -7.789, true));
                scenicList.push(new Scenery("neprilnePlant", -17081 , 2517, -2.6, true));
                scenicList.push(new Scenery("ogardPlant", -19517 , 2316, 3.141593862489, true));
                scenicList.push(new Scenery("ogardPlant", -16292 , -2231, 0, true));
                scenicList.push(new Scenery("wyrPlant", -15134 , 2399, 2.8, true));
                scenicList.push(new Scenery("wyrPlant", -20621 , -1614, -5.6, true));
                scenicList.push(new Scenery("wyrPlant", -17775 , -2176, -2.96, true));
                scenicList.push(new Scenery("wyrPlant", -20900 , -834, 3.9, true));
                scenicList.push(new Scenery("neprilnePlant", -18139 , -2706, 2.34, true));
                scenicList.push(new Scenery("halcifPlant", -17912 , -708, -4.7, true));
                scenicList.push(new Scenery("neprilnePlant", -14519 , -2354, 6.1, true));
                scenicList.push(new Scenery("cyrinthilimPlant", -16948 , -3143, 2, true));
                scenicList.push(new Scenery("cyrinthilimPlant", -21038 , -2478, 4, true));
                scenicList.push(new Scenery("neprilnePlant", -17892 , -1006, 8.5, true));
                if (Math.random() >= 0.84)
                {
                    scenicList.push(new Scenery("halcifPlant", -19558 , -2494, 0, true));
                }
                else
                {
                    scenicList.push(new Scenery("glinPlant", -19558 , -2494, 0, true));
                }

                change = "e2";
            }
        }
        else if (region == "e3")
        {
            if (change != "e3")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //e-4 forest edge
                generator2(9786217, 193249, 242531, 33632203, 8967556824000, 1, -33912, 6507, true);
                cropper(-33912, 6507, -35953, 1571, true, true);

                generator2(2436217, 56679, 21, 3, 894000, 1, -33923, 1056, true);
                cropper(-33923, 1056, -35952, -3576, true, true);

                for (var i = scenicList.length -1; i >= 0; i--)
                {
                    if (scenicList[i].type != "pineTree")
                    {
                        scenicList.splice(i, 1);
                    }
                }

                //-/

                //REGION CREATION
                //Build AI Units

                //PROPS
                //scenicList.push(new Scenery("skeleton", -19230, 5008, 5.12, 1.75));

                //CREATURES
                ArtificialIntelligenceAccess.push(new Unit(-25689, -1562, "Grib", true, "Hungo"));
                ArtificialIntelligenceAccess.push(new Unit(-25630, -1322, "Grib", false, "Hungy"));
                ArtificialIntelligenceAccess.push(new Unit(-32586, -3365, "Grib", true, "Hunga"));
                ArtificialIntelligenceAccess.push(new Unit(-29485, -1450, "Grib", false, "Hungly"));
                ArtificialIntelligenceAccess.push(new Unit(-32582, -463, "Grib", false, "Hungory"));
                ArtificialIntelligenceAccess.push(new Unit(-29778, 88, "Grib", true, "Hungal"));
                ArtificialIntelligenceAccess.push(new Unit(-24758, 5592, "Grib", false, "Hungail"));
                ArtificialIntelligenceAccess.push(new Unit(-27958, -718, "Viper", false, "Slibi"));
                ArtificialIntelligenceAccess.push(new Unit(-25977, -1486, "Lizard", true, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-30202, -4910, "Lizard", true, "lagartija"));
                ArtificialIntelligenceAccess.push(new Unit(-31089, -2866, "Lizard", true, "lagartilla"));
                ArtificialIntelligenceAccess.push(new Unit(-30466, -130, "Lizard", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-27874, -113, "Lizard", false, "Lazzy"));
                ArtificialIntelligenceAccess.push(new Unit(-27693, 86, "Lizard", false, "Lazzu"));
                ArtificialIntelligenceAccess.push(new Unit(-32922, 2547, "Lizard", false, "Ilzy"));
                ArtificialIntelligenceAccess.push(new Unit(-33021, 2331, "Lizard", false, "Zilzy"));
                ArtificialIntelligenceAccess.push(new Unit(-27757, 1189, "Lizard", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-32248, -4, "Lizard", false, "zalzy"));
                ArtificialIntelligenceAccess.push(new Unit(-26865, -122, "BlackBear", false, "Clube"));
                ArtificialIntelligenceAccess.push(new Unit(-31159, 5443, "Varn", false, "Fliku"));
                ArtificialIntelligenceAccess.push(new Unit(-31501, 5621, "Varn", false, "Fliko"));
                ArtificialIntelligenceAccess.push(new Unit(-31117, 5847, "Varn", false, "Flika"));
                ArtificialIntelligenceAccess.push(new Unit(-31079, 6193, "Varn", false, "Fliki"));
                ArtificialIntelligenceAccess.push(new Unit(-30012, 6315, "Varn", true, "Flik"));
                ArtificialIntelligenceAccess.push(new Unit(-31838, -1898, "Viper", false, "Slybi"));
                ArtificialIntelligenceAccess.push(new Unit(-23829, 4690, "Viper", false, "Slybil"));
                ArtificialIntelligenceAccess.push(new Unit(-32119, -2622, "Varn", false, "Flikia"));
                ArtificialIntelligenceAccess.push(new Unit(-32437, -2718, "Varn", true, "Flikei"));
                ArtificialIntelligenceAccess.push(new Unit(-30127, -2694, "Varn", true, "Flikem"));
                ArtificialIntelligenceAccess.push(new Unit(-27605, -3266, "Varn", false, "Flibiora"));
                if (Math.random() > 0.75)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-32302, 2970, "BlackBear", false, "Clubo"));
                    ArtificialIntelligenceAccess.push(new Unit(-26679, 940, "Varn", true, "Flibuh"));
                    ArtificialIntelligenceAccess.push(new Unit(-26416, 839, "Varn", true, "Flibouh"));
                    ArtificialIntelligenceAccess.push(new Unit(-26529, 1123, "Varn", false, "Flibila"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(-32302, 2970, "BlackBear", true, "Klug"));
                }

                if (Math.random() > 0.45)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-29701, 3830, "BlackBear", true, "Klugger"));
                    ArtificialIntelligenceAccess.push(new Unit(-31005, 3285, "Varn", false, "Flikia"));
                    ArtificialIntelligenceAccess.push(new Unit(-30771, 3391, "Varn", true, "Flikei"));
                    ArtificialIntelligenceAccess.push(new Unit(-31103, 3476, "Varn", true, "Flikem"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(-29821, 3847, "BlackBear", false, "Klewga"));
                    ArtificialIntelligenceAccess.push(new Unit(-31261, 3400, "Grib", false, "Hungali"));
                    ArtificialIntelligenceAccess.push(new Unit(-30878, 3099, "Grib", false, "Hungoli"));
                }
                ArtificialIntelligenceAccess.push(new Unit(-31108, 55, "Narthwarp", false, "silwiloi"));
                ArtificialIntelligenceAccess.push(new Unit(-31406, -45, "Narthwarp", false, "silwiloa"));
                ArtificialIntelligenceAccess.push(new Unit(-24591, -1478, "Narthwarp", false, "silwile"));
                ArtificialIntelligenceAccess.push(new Unit(-24410, -2106, "Narthwarp", false, "silwila"));
                ArtificialIntelligenceAccess.push(new Unit(-24513, -2236, "Narthwarp", false, "silwili"));
                ArtificialIntelligenceAccess.push(new Unit(-24525, -2507, "Narthwarp", false, "silwilo"));
                ArtificialIntelligenceAccess.push(new Unit(-24317, -2587, "Narthwarp", false, "silwilu"));
                ArtificialIntelligenceAccess.push(new Unit(-24164, -2288, "Narthwarp", false, "silwileu"));
                ArtificialIntelligenceAccess.push(new Unit(-24033, -1792, "Narthwarp", false, "silwiloux"));
                ArtificialIntelligenceAccess.push(new Unit(-24066, -1625, "Narthwarp", false, "silwilei"));
                ArtificialIntelligenceAccess.push(new Unit(-24636, -1266, "Narthwarp", false, "silwilai"));
                ArtificialIntelligenceAccess.push(new Unit(-27676, 222, "Narthwarp", false, "silwilie"));
                ArtificialIntelligenceAccess.push(new Unit(-27792, 361, "Narthwarp", false, "silwilia"));
                ArtificialIntelligenceAccess.push(new Unit(-33433, 3463, "Narthwarp", false, "silwileo"));
                ArtificialIntelligenceAccess.push(new Unit(-33063, -3535, "Narthwarp", false, "silwilio"));
                scenicList.push(new Scenery("ulgoyPlant", -32682, 3331, 5.666666, 2.6));
                ArtificialIntelligenceAccess.push(new Unit(-32671, 3332, "Ulgoy", false, "avro ol plant"));
                scenicList.push(new Scenery("ulgoyPlant", -25998, -255, 9, 3.5));
                ArtificialIntelligenceAccess.push(new Unit(-26010, -257, "Ulgoy", true, "big ol plant"));
                ArtificialIntelligenceAccess.push(new Unit(-26800, 2650, "Boar", true, "Tambor"));
                ArtificialIntelligenceAccess.push(new Unit(-28221, 3617, "Boar", false, "Tambora"));
                ArtificialIntelligenceAccess.push(new Unit(-28286, 4756, "Boar", false, "Tambura"));
                ArtificialIntelligenceAccess.push(new Unit(-28343, 4711, "Boar", "baby", "Tamburo"));
                ArtificialIntelligenceAccess.push(new Unit(-30371, 4572, "Boar", "baby", "Tamburita"));
                if (Math.random() > 0.6)
                {
                    if (Math.random() > 0.75)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-25457, 2934, "Boar", true, "Tambul"));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-25351, 2875, "Boar", "baby", "Tamburica"));
                    }
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(-25351, 2873, "Grib", true, "Hungul"));
                }

                if (Math.random() > 0.35)
                {
                    if (Math.random() > 0.4)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-28570, -3116, "Boar", "baby", "Tamburima"));
                    }
                    else
                    {
                        if (Math.random() > 0.2)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-28570, -3116, "Boar", false, "Tamburimo"));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-28570, -3116, "Boar", true, "Tamburul"));
                        }
                    }
                }
                else
                {
                    if (Math.random() > 0.39)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-28482, -3034, "BlackBear", false, "Kuba"));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-28632, -2918, "BlackBear", true, "Kubro"));
                    }
                }
                ArtificialIntelligenceAccess.push(new Unit(-24875, 1716, "Shehid", false, "shrimperz"));
                ArtificialIntelligenceAccess.push(new Unit(-32759, 367, "Shehid", true, "chalambara"));
                ArtificialIntelligenceAccess.push(new Unit(-28701, -1787, "Shehid", true, "chalambga"));
                ArtificialIntelligenceAccess.push(new Unit(-27394, -592, "Shehid", false, "chumulga"));
                ArtificialIntelligenceAccess.push(new Unit(-26029, -1178, "Shehid", false, "chumulg"));
                ArtificialIntelligenceAccess.push(new Unit(-26463, -537, "Shehid", true, "chamulg"));
                ArtificialIntelligenceAccess.push(new Unit(-27497, -664, "Shehid", true, "gamulgo"));
                ArtificialIntelligenceAccess.push(new Unit(-27698, -568, "BorbBeetle", true, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-28078, -539, "BorbBeetle", true, "Ben"));
                ArtificialIntelligenceAccess.push(new Unit(-27216, 922, "BorbBeetle", false, "Benjamin"));
                ArtificialIntelligenceAccess.push(new Unit(-32616, 4687, "BorbBeetle", false, "docile"));
                ArtificialIntelligenceAccess.push(new Unit(-31279, -1625, "BorbBeetle", false, "Bilg"));
                ArtificialIntelligenceAccess.push(new Unit(-31756, 1353, "BorbBeetle", false, "Bilig"));
                scenicList.push(new Scenery("beeHive", -26969, -852, 7.25, true));
                ArtificialIntelligenceAccess.push(new Unit(-29364, -1803, "Shehid", false, "chumgam"));
                ArtificialIntelligenceAccess.push(new Unit(-29115, 5990, "Shehid", false, "chumga"));
                ArtificialIntelligenceAccess.push(new Unit(-28980, 5799, "Shehid", true, "chamgu"));
                ArtificialIntelligenceAccess.push(new Unit(-29168, 5800, "Shehid", false, "chumgu"));
                ArtificialIntelligenceAccess.push(new Unit(-29339, 5979, "Shehid", true, "chamgo"));
                ArtificialIntelligenceAccess.push(new Unit(-28812, 5906, "Shehid", false, "chumgo"));
                ArtificialIntelligenceAccess.push(new Unit(-28308, 5584, "Shehid", false, "chumgy"));
                ArtificialIntelligenceAccess.push(new Unit(-27613, 5338, "Shehid", false, "chumgol"));
                ArtificialIntelligenceAccess.push(new Unit(-27035, 4930, "Shehid", false, "chumgal"));
                ArtificialIntelligenceAccess.push(new Unit(-25018, 4068, "Shehid", false, "chamgal"));
                ArtificialIntelligenceAccess.push(new Unit(-25373, 3737, "Shehid", true, "chamgol"));
                ArtificialIntelligenceAccess.push(new Unit(-24666, 3931, "Shehid", false, "chamgil"));
                ArtificialIntelligenceAccess.push(new Unit(-25018, 3065, "Shehid", false, "chamgyl"));
                ArtificialIntelligenceAccess.push(new Unit(-28195, -194, "Shehid", false, "chamgaal"));
                ArtificialIntelligenceAccess.push(new Unit(-30877, -1178, "Shehid", false, "chamgeel"));
                ArtificialIntelligenceAccess.push(new Unit(-29569, -3260, "Shehid", false, "chumgiel"));



                //Build Scenery

                //trees in the wuntol woods.

                //north trees
                //scenicList.push(new Scenery("pineTree", -24463 , 5090, 5.3, true));
                //scenicList.push(new Scenery("pineTree", -24052 , 5813, -2, true));
                //scenicList.push(new Scenery("pineTree", -23742 , 6022, 1.1, true));
                //scenicList.push(new Scenery("pineTree", -24244 , 6281, -1.7, true));
                //scenicList.push(new Scenery("pineTree", -24562, 6011, 4.9, true));
                //scenicList.push(new Scenery("pineTree", -25076 , 6479, 6.8, true));
                //scenicList.push(new Scenery("pineTree", -25651 , 6162, -3.3, true));
                //scenicList.push(new Scenery("pineTree", -25213 , 5786, 4.7, true));
                //scenicList.push(new Scenery("pineTree", -24775 , 5505, -1.5, true));
                //scenicList.push(new Scenery("pineTree", -24165 , 5375, 2.25, true));
                //scenicList.push(new Scenery("pineTree", -32700 , 5990, -9, true));
                //scenicList.push(new Scenery("pineTree", -32391 , 6232, 3.4, true));
                //scenicList.push(new Scenery("pineTree", -32478 , 6524, -5.443, true));
                //scenicList.push(new Scenery("pineTree", -32925 , 6310, 7.75, true));
                //scenicList.push(new Scenery("pineTree", -33352 , 6480, -3.95, true));
                //scenicList.push(new Scenery("pineTree", -33239 , 6077, -2.39239, true));
                //scenicList.push(new Scenery("pineTree", -33706 , 6188, 10.45, true));
                //scenicList.push(new Scenery("pineTree", -33551 , 5652, 12.85, true));
                //scenicList.push(new Scenery("pineTree", -32851 , 5714, -13.1, true));
                scenicList.push(new Scenery("pineTree", -29831 , 5764, 6, true));
                scenicList.push(new Scenery("pineTree", -30049 , 5979, 3, true));
                scenicList.push(new Scenery("pineTree", -30502 , 5984, -2, true));
                scenicList.push(new Scenery("pineTree", -29506 , 5907, 0, true));
                scenicList.push(new Scenery("pineTree", -28894 , 5795, -1, true));
                scenicList.push(new Scenery("pineTree", -28474 , 6009, -0.7, true));
                scenicList.push(new Scenery("pineTree", -28075 , 5806, 2.5, true));
                scenicList.push(new Scenery("pineTree", -27814 , 6059, 0.9, true));
                scenicList.push(new Scenery("pineTree", -27489 , 5917, 5.6, true));
                scenicList.push(new Scenery("pineTree", -27041 , 5927, 4.15, true));
                scenicList.push(new Scenery("pineTree", -26413 , 5795, 3.5, true));
                scenicList.push(new Scenery("pineTree", -25997 , 5968, -2.875, true));
                scenicList.push(new Scenery("pineTree", -26003 , 6438, -4.3, true));
                scenicList.push(new Scenery("pineTree", -26411 , 6102, -9.2, true));
                scenicList.push(new Scenery("pineTree", -26487 , 6578, 5.9, true));
                scenicList.push(new Scenery("pineTree", -26909 , 6226, -2.64, true));
                scenicList.push(new Scenery("pineTree", -27489 , 6420, 0, true));
                scenicList.push(new Scenery("pineTree", -28199 , 6300, 0, true));
                scenicList.push(new Scenery("pineTree", -28604 , 6530, 5.5, true));
                scenicList.push(new Scenery("pineTree", -28934 , 6142, -6.6, true));
                scenicList.push(new Scenery("pineTree", -29304 , 6435, -6.7, true));
                scenicList.push(new Scenery("pineTree", -29738 , 6129, 10, true));
                scenicList.push(new Scenery("pineTree", -29609 , 6578, 5, true));
                scenicList.push(new Scenery("pineTree", -30077 , 6321, -3.13, true));
                scenicList.push(new Scenery("pineTree", -30307 , 5781, -5.8, true));
                scenicList.push(new Scenery("pineTree", -30444 , 6481, 4.42, true));
                scenicList.push(new Scenery("pineTree", -30851 , 6166, -1.3696372563201, true));
                scenicList.push(new Scenery("pineTree", -31004 , 5883, -2.25, true));
                scenicList.push(new Scenery("pineTree", -31423 , 5918, 12, true));
                scenicList.push(new Scenery("pineTree", -31329 , 6277, 0, true));
                scenicList.push(new Scenery("pineTree", -30942 , 6525, 13.5, true));
                scenicList.push(new Scenery("pineTree", -31822 , 6134, -8.4, true));
                scenicList.push(new Scenery("pineTree", -32230 , 5822, 5.7721, true));
                scenicList.push(new Scenery("pineTree", -31791 , 5859, 1.2, true));
                scenicList.push(new Scenery("pineTree", -31661 , 6435, 0, true));
                scenicList.push(new Scenery("pineTree", -29291 , 6142, -4.536, true));

                //westside trees
                scenicList.push(new Scenery("pineTree", -24765, 1829, 5, true));
                scenicList.push(new Scenery("pineTree", -24198 , 1709, 2, true));
                scenicList.push(new Scenery("pineTree", -23745 , 1934, -3, true));
                scenicList.push(new Scenery("pineTree", -24444 , 2385, 4.5, true));
                scenicList.push(new Scenery("pineTree", -24198 , 2234, -1, true));
                scenicList.push(new Scenery("pineTree", -23898 , 2830, 2.25, true));
                scenicList.push(new Scenery("pineTree", -24634 , 966, 1.25, true));
                scenicList.push(new Scenery("pineTree", -24197 , 705, 5.42, true));
                scenicList.push(new Scenery("pineTree", -24018 , 991, -3.5, true));
                scenicList.push(new Scenery("pineTree", -24019 , 231, -4, true));
                scenicList.push(new Scenery("pineTree", -23811 , -62, -8, true));
                scenicList.push(new Scenery("pineTree", -24420 , -2, 7, true));
                scenicList.push(new Scenery("pineTree", -23997 , -373, 7.3, true));
                scenicList.push(new Scenery("pineTree", -24020 , 3429, 2.6, true));
                scenicList.push(new Scenery("pineTree", -23774 , 3956, 1.7, true));
                scenicList.push(new Scenery("pineTree", -24052 , 4209, 3, true));
                scenicList.push(new Scenery("pineTree", -23818 , 4635, 4, true));
                scenicList.push(new Scenery("pineTree", -24185 , 4835, -5, true));
                scenicList.push(new Scenery("pineTree", -24463 , 5090, 5.3, true));
                scenicList.push(new Scenery("pineTree", -24052 , 5813, -2, true));
                scenicList.push(new Scenery("pineTree", -23742 , 6022, 1.1, true));
                scenicList.push(new Scenery("pineTree", -24244 , 6281, -1.7, true));
                scenicList.push(new Scenery("pineTree", -24562, 6011, 4.9, true));
                scenicList.push(new Scenery("pineTree", -25076 , 6479, 6.8, true));
                scenicList.push(new Scenery("pineTree", -25651 , 6162, -3.3, true));
                scenicList.push(new Scenery("pineTree", -25213 , 5786, 4.7, true));
                scenicList.push(new Scenery("pineTree", -24775 , 5505, -1.5, true));
                scenicList.push(new Scenery("pineTree", -24165 , 5375, 2.25, true));
                scenicList.push(new Scenery("pineTree", -25098 , 5232, 9, true));
                scenicList.push(new Scenery("pineTree", -25590 , 5399, -8.42, true));
                scenicList.push(new Scenery("pineTree", -25394 , 4982, -4, true));
                scenicList.push(new Scenery("pineTree", -24660 , 4619, -14, true));
                scenicList.push(new Scenery("pineTree", -24660 , 4619, 7.7, true));
                scenicList.push(new Scenery("pineTree", -23789 , 4633, 8.2, true));
                scenicList.push(new Scenery("pineTree", -25189 , 4353, 6, true));
                scenicList.push(new Scenery("pineTree", -24265 , 3738, 3.9, true));
                scenicList.push(new Scenery("pineTree", -25112 , 3699, -5, true));
                scenicList.push(new Scenery("pineTree", -24615 , 3299, 2.5, true));
                scenicList.push(new Scenery("pineTree", -24499 , 2943, -4.4, true));
                scenicList.push(new Scenery("pineTree", -24958 , 2161, -6, true));
                scenicList.push(new Scenery("pineTree", -24835 , 2725, -5.55, true));
                scenicList.push(new Scenery("pineTree", -24703 , 4115, -2.2, true));
                scenicList.push(new Scenery("pineTree", -25089 , 3063, -1.25, true));
                scenicList.push(new Scenery("pineTree", -25395 , 1643, 1.77, true));
                scenicList.push(new Scenery("pineTree", -25610 , 4604, 3.25, true));
                scenicList.push(new Scenery("pineTree", -25377 , 105, -4.7, true));
                scenicList.push(new Scenery("pineTree", -24578 , 366, 1.6, true));
                scenicList.push(new Scenery("pineTree", -23898 , -769, 9.4, true));
                scenicList.push(new Scenery("pineTree", -24547 , -471, -9, true));
                scenicList.push(new Scenery("pineTree", -24943 , -1088, 10.37, true));
                scenicList.push(new Scenery("pineTree", -24322 , -1385, -5.1, true));
                scenicList.push(new Scenery("pineTree", -23705 , -1513, 16, true));
                scenicList.push(new Scenery("pineTree", -24062 , -1706, 8.864, true));
                scenicList.push(new Scenery("pineTree", -23859 , -2235, 9.2, true));
                scenicList.push(new Scenery("pineTree", -23687 , -2627, -7.12, true));
                scenicList.push(new Scenery("pineTree", -24992 , -1579, -3.9, true));
                scenicList.push(new Scenery("pineTree", -24561 , -1965, -6.3, true));
                scenicList.push(new Scenery("pineTree", -24146 , -2050, -2.5, true));
                scenicList.push(new Scenery("pineTree", -24927 , -2450, 4.444, true));
                scenicList.push(new Scenery("pineTree", -24461 , -2299, 6.75, true));
                scenicList.push(new Scenery("pineTree", -24323 , -2744, -3.33, true));
                scenicList.push(new Scenery("pineTree", -24646 , -2924, -2.2, true));
                scenicList.push(new Scenery("pineTree", -23897 , -3066, 0.19, true));
                scenicList.push(new Scenery("pineTree", -24054 , -3525, 0, true));
                scenicList.push(new Scenery("pineTree", -24280 , -3092, 8.88, true));
                scenicList.push(new Scenery("pineTree", -24674 , -3346, 2, true));
                scenicList.push(new Scenery("pineTree", -24367 , -1000, 3, true));
                scenicList.push(new Scenery("pineTree", -25064 , -3010, -10, true));

                //south trees
                //scenicList.push(new Scenery("pineTree", -24323 , -2744, -3.33, true));
                //scenicList.push(new Scenery("pineTree", -24646 , -2924, -2.2, true));
                //scenicList.push(new Scenery("pineTree", -23897 , -3066, 0.19, true));
                //scenicList.push(new Scenery("pineTree", -24054 , -3525, 0, true));
                //scenicList.push(new Scenery("pineTree", -24280 , -3092, 8.88, true));
                //scenicList.push(new Scenery("pineTree", -24674 , -3346, 2, true));
                //scenicList.push(new Scenery("pineTree", -25064 , -3010, -10, true));
                //scenicList.push(new Scenery("pineTree", -32604 , -3450, -8, true));
                //scenicList.push(new Scenery("pineTree", -32995 , -3536, -4.46, true));
                //scenicList.push(new Scenery("pineTree", -32750 , -3092, 2, true));
                //scenicList.push(new Scenery("pineTree", -32392 , -2822, -3.8, true));
                //scenicList.push(new Scenery("pineTree", -32906 , -2767, 5, true));
                //scenicList.push(new Scenery("pineTree", -33156 , -3023, 6, true));
                //scenicList.push(new Scenery("pineTree", -33499 , -3322, -5.3, true));
                //scenicList.push(new Scenery("pineTree", -33213 , -3006, -7.73, true));
                //scenicList.push(new Scenery("pineTree", -32906 , -2767, 3.8, true));
                //scenicList.push(new Scenery("pineTree", -33703 , -2805, 9, true));
                scenicList.push(new Scenery("pineTree", -25237 , -3468, 12, true));
                scenicList.push(new Scenery("pineTree", -25765 , -2989, 2, true));
                scenicList.push(new Scenery("pineTree", -26046 , -3314, 4, true));
                scenicList.push(new Scenery("pineTree", -25741 , -3637, 7, true));
                scenicList.push(new Scenery("pineTree", -25579 , -3301, 5, true));
                scenicList.push(new Scenery("pineTree", -26097 , -2818, 3.2, true));
                scenicList.push(new Scenery("pineTree", -26440 , -2967, -1.8, true));
                scenicList.push(new Scenery("pineTree", -26477 , -3500, 3.7, true));
                scenicList.push(new Scenery("pineTree", -26750 , -3155, 6, true));
                scenicList.push(new Scenery("pineTree", -27126 , -2881, 1.8, true));
                scenicList.push(new Scenery("pineTree", -27251 , -3287, 5, true));
                scenicList.push(new Scenery("pineTree", -27026 , -3498, 3, true));
                scenicList.push(new Scenery("pineTree", -27736 , -3420, 4.6, true));
                scenicList.push(new Scenery("pineTree", -27578 , -3199, 3.2, true));
                scenicList.push(new Scenery("pineTree", -27473 , -2943, 5.6, true));
                scenicList.push(new Scenery("pineTree", -27799 , -2971, 2, true));
                scenicList.push(new Scenery("pineTree", -25410 , -2954, 3, true));
                scenicList.push(new Scenery("pineTree", -28033 , -3223, 6, true));
                scenicList.push(new Scenery("pineTree", -28260 , -3567, 4, true));
                scenicList.push(new Scenery("pineTree", -28369 , -2844, 3.4, true));
                scenicList.push(new Scenery("pineTree", -28470 , -3119, 5, true));
                scenicList.push(new Scenery("pineTree", -28757 , -3338, 4.1, true));
                scenicList.push(new Scenery("pineTree", -29351 , -2984, 3, true));
                scenicList.push(new Scenery("pineTree", -28877 , -2992, 9, true));
                scenicList.push(new Scenery("pineTree", -29296 , -3304, 5, true));
                scenicList.push(new Scenery("pineTree", -29677 , -3554, 4, true));
                scenicList.push(new Scenery("pineTree", -29868 , -3207, 3.1, true));
                scenicList.push(new Scenery("pineTree", -29172 , -84, 3.6, true));
                scenicList.push(new Scenery("pineTree", -30465 , -3376, 6.7, true));
                scenicList.push(new Scenery("pineTree", -30477 , -2868, 3.9, true));
                scenicList.push(new Scenery("pineTree", -31060 , -3523, 3, true));
                scenicList.push(new Scenery("pineTree", -31079 , -3120, 1, true));
                scenicList.push(new Scenery("pineTree", -31338 , -2791, 5, true));
                scenicList.push(new Scenery("pineTree", -31563 , -3363, 4.2, true));
                scenicList.push(new Scenery("pineTree", -31696 , -3021, 5.9, true));
                scenicList.push(new Scenery("pineTree", -31993 , -3529, 0.9, true));
                scenicList.push(new Scenery("pineTree", -32095 , -2855, 5.2, true));
                scenicList.push(new Scenery("pineTree", -32295 , -3293, 3, true));

                //east trees
                scenicList.push(new Scenery("pineTree", -32545 , -2522, 1, true));
                scenicList.push(new Scenery("pineTree", -32334 , -2205, 5.2, true));
                scenicList.push(new Scenery("pineTree", -32482 , -1700, 3.8, true));
                scenicList.push(new Scenery("pineTree", -33350 , -2564, 7.1, true));
                scenicList.push(new Scenery("pineTree", -32946 , -2242, 2.242, true));
                scenicList.push(new Scenery("pineTree", -33498 , -2098, -6, true));
                scenicList.push(new Scenery("pineTree", -33081 , -1820, 11, true));
                scenicList.push(new Scenery("pineTree", -32842 , -1483, 13, true));
                scenicList.push(new Scenery("pineTree", -32604 , -3450, -8, true));
                scenicList.push(new Scenery("pineTree", -32995 , -3536, -4.46, true));
                scenicList.push(new Scenery("pineTree", -32750 , -3092, 2, true));
                scenicList.push(new Scenery("pineTree", -32392 , -2822, -3.8, true));
                scenicList.push(new Scenery("pineTree", -32906 , -2767, 5, true));
                scenicList.push(new Scenery("pineTree", -33156 , -3023, 6, true));
                scenicList.push(new Scenery("pineTree", -33499 , -3322, -5.3, true));
                scenicList.push(new Scenery("pineTree", -33213 , -3006, -7.73, true));
                scenicList.push(new Scenery("pineTree", -32906 , -2767, 3.8, true));
                scenicList.push(new Scenery("pineTree", -33703 , -2805, 9, true));
                scenicList.push(new Scenery("pineTree", -33660 , -1621, -10, true));
                scenicList.push(new Scenery("pineTree", -33703 , -2805, 9, true));
                scenicList.push(new Scenery("pineTree", -33267 , -1180, 14, true));
                scenicList.push(new Scenery("pineTree", -32553 , -1309, -15.5, true));
                scenicList.push(new Scenery("pineTree", -32309 , -1088, 2.198983648723, true));
                scenicList.push(new Scenery("pineTree", -32706 , -958, 3, true));
                scenicList.push(new Scenery("pineTree", -33801 , -776, 1, true));
                scenicList.push(new Scenery("pineTree", -33304 , -701, -2.35, true));
                scenicList.push(new Scenery("pineTree", -32913 , -478, 0, true));
                scenicList.push(new Scenery("pineTree", -32599 , -25, -1, true));
                scenicList.push(new Scenery("pineTree", -33579 , -320, -20, true));
                scenicList.push(new Scenery("pineTree", -33386 , 65, 0, true));
                scenicList.push(new Scenery("pineTree", -33027 , -159, 2, true));
                scenicList.push(new Scenery("pineTree", -32772, 449, 0, true));
                scenicList.push(new Scenery("pineTree", -32772 , 449, 13.321, true));
                scenicList.push(new Scenery("pineTree", -33143 , 337, 1.4, true));
                scenicList.push(new Scenery("pineTree", -32819 , 1063, -8.214, true));
                scenicList.push(new Scenery("pineTree", -32985 , 749, -1.88, true));
                scenicList.push(new Scenery("pineTree", -33323 , 940, 11, true));
                scenicList.push(new Scenery("pineTree", -33654 , 1025, 0.5, true));
                scenicList.push(new Scenery("pineTree", -33799 , 288, 10, true));
                scenicList.push(new Scenery("pineTree", -33408 , 631, 1.6, true));
                scenicList.push(new Scenery("pineTree", -32438 , 1616, 0.25, true));
                scenicList.push(new Scenery("pineTree", -32630 , 1940, -0.75, true));
                scenicList.push(new Scenery("pineTree", -32312 , 2303, -12.55555, true));
                scenicList.push(new Scenery("pineTree", -32736 , 2532, 3.9, true));
                scenicList.push(new Scenery("pineTree", -32299 , 2885, 3.7, true));
                scenicList.push(new Scenery("pineTree", -32483, 3180, 7.15, true));
                scenicList.push(new Scenery("pineTree", -32599 , 3580, 2.242, true));
                scenicList.push(new Scenery("pineTree", -32450 , 3898, -6, true));
                scenicList.push(new Scenery("pineTree", -32386 , 4502, 11, true));
                scenicList.push(new Scenery("pineTree", -32585 , 4910, 13, true));
                scenicList.push(new Scenery("pineTree", -32929 , 4656, -8, true));
                scenicList.push(new Scenery("pineTree", -32824 , 5229, -4.46, true));
                scenicList.push(new Scenery("pineTree", -32491 , 5555, 5, true));
                scenicList.push(new Scenery("pineTree", -33030 , 5448, -3.8, true));
                scenicList.push(new Scenery("pineTree", -33516 , 5174, -17, true));
                scenicList.push(new Scenery("pineTree", -32700 , 5990, -9, true));
                scenicList.push(new Scenery("pineTree", -32391 , 6232, 3.4, true));
                scenicList.push(new Scenery("pineTree", -32478 , 6524, -5.443, true));
                scenicList.push(new Scenery("pineTree", -32925 , 6310, 7.75, true));
                scenicList.push(new Scenery("pineTree", -33352 , 6480, -3.95, true));
                scenicList.push(new Scenery("pineTree", -33239 , 6077, -2.39239, true));
                scenicList.push(new Scenery("pineTree", -33706 , 6188, 10.45, true));
                scenicList.push(new Scenery("pineTree", -33551 , 5652, 12.85, true));
                scenicList.push(new Scenery("pineTree", -32851 , 5714, -13.1, true));
                scenicList.push(new Scenery("pineTree", -33178 , 5018, -4.4545, true));
                scenicList.push(new Scenery("pineTree", -33491 , 4775, -1.45, true));
                scenicList.push(new Scenery("pineTree", -33333 , 4425, 3.33333333, true));
                scenicList.push(new Scenery("pineTree", -33649 , 4107, -12.85, true));
                scenicList.push(new Scenery("pineTree", -33146 , 4131, 18, true));
                scenicList.push(new Scenery("pineTree", -33000 , 3767, 13.11, true));
                scenicList.push(new Scenery("pineTree", -32609 , 4195, 15.55, true));
                scenicList.push(new Scenery("pineTree", -33035 , 1713, 15.55, true));
                scenicList.push(new Scenery("pineTree", -33397 , 1567, 0, true));
                scenicList.push(new Scenery("pineTree", -33787 , 1495, 1.2, true));
                scenicList.push(new Scenery("pineTree", -33003 , 2122, 2.2, true));
                scenicList.push(new Scenery("pineTree", -33203 , 2407, 3.2, true));
                scenicList.push(new Scenery("pineTree", -33365 , 1910, 1.1, true));
                scenicList.push(new Scenery("pineTree", -33611 , 2246, 5.5, true));
                scenicList.push(new Scenery("pineTree", -33541 , 2684, 6.2, true));
                scenicList.push(new Scenery("pineTree", -33010 , 2814, -7.2, true));
                scenicList.push(new Scenery("pineTree", -32714 , 2946, -8.2, true));
                scenicList.push(new Scenery("pineTree", -32963 , 3282, 0, true));
                scenicList.push(new Scenery("pineTree", -33268 , 3074, -1, true));
                scenicList.push(new Scenery("pineTree", -33510 , 3432, -2.3, true));
                scenicList.push(new Scenery("pineTree", -33795 , 3727, -5, true));
                scenicList.push(new Scenery("pineTree", -33381 , 3837, -1, true));





                //central trees
                scenicList.push(new Scenery("pineTree", -25204 , -2656, 5, true));
                scenicList.push(new Scenery("pineTree", -25237 , -2351, 1, true));
                scenicList.push(new Scenery("pineTree", -25655 , -2247, 3, true));
                scenicList.push(new Scenery("pineTree", -24941 , -2154, 4, true));
                scenicList.push(new Scenery("pineTree", -25050 , -1895, 2.2, true));
                scenicList.push(new Scenery("pineTree", -25317 , -2092, 4.2, true));
                scenicList.push(new Scenery("pineTree", -25822 , -1999, 5.2, true));
                scenicList.push(new Scenery("pineTree", -25736 , -1697, 4, true));
                scenicList.push(new Scenery("pineTree", -25259 , -1301, 5.7, true));
                scenicList.push(new Scenery("pineTree", -25640 , -1423, 2.3, true));
                scenicList.push(new Scenery("pineTree", -26168 , -1820, 5.9, true));
                scenicList.push(new Scenery("pineTree", -25414 , -1788, 3.5, true));
                scenicList.push(new Scenery("pineTree", -26057 , -1518, 1.4, true));
                scenicList.push(new Scenery("pineTree", -25969 , -1188, 4.6, true));
                scenicList.push(new Scenery("pineTree", -26490 , -1286, 2, true));
                scenicList.push(new Scenery("pineTree", -26765 , -1572, 5.4, true));
                scenicList.push(new Scenery("pineTree", -25553 , -928, 1.7, true));
                scenicList.push(new Scenery("pineTree", -26273 , -897, 5.6, true));
                scenicList.push(new Scenery("pineTree", -25228 , -641, 3.9, true));
                scenicList.push(new Scenery("pineTree", -25994 , -548, 3.5, true));
                scenicList.push(new Scenery("pineTree", -26877 , -2671, 2, true));
                scenicList.push(new Scenery("pineTree", -26386 , -2470, 5, true));
                scenicList.push(new Scenery("pineTree", -26813 , -2315, 1.7, true));
                scenicList.push(new Scenery("pineTree", -26135 , -2224, 9, true));
                scenicList.push(new Scenery("pineTree", -26558 , -2027, 2.4, true));
                scenicList.push(new Scenery("pineTree", -26969 , -2030, 3.8, true));
                scenicList.push(new Scenery("pineTree", -27305 , -2619, 4, true));
                scenicList.push(new Scenery("pineTree", -27182 , -2246, 1.8, true));
                scenicList.push(new Scenery("pineTree", -27134 , -1739, 7, true));
                scenicList.push(new Scenery("pineTree", -26430 , -1599, 2, true));
                scenicList.push(new Scenery("pineTree", -27330 , -1967, 6.2, true));
                scenicList.push(new Scenery("pineTree", -27577 , -2339, 0.4, true));
                scenicList.push(new Scenery("pineTree", -27691 , -2683, 5, true));
                scenicList.push(new Scenery("pineTree", -27630 , -2051, 3.3, true));
                scenicList.push(new Scenery("pineTree", -27518 , -1652, 4, true));
                scenicList.push(new Scenery("pineTree", -27225 , -1388, 2.1, true));
                scenicList.push(new Scenery("pineTree", -26889 , -1183, 3.7, true));
                scenicList.push(new Scenery("pineTree", -26661 , -958, 5.3, true));
                scenicList.push(new Scenery("pineTree", -26965 , -907, 1.9, true));
                scenicList.push(new Scenery("pineTree", -27278 , -1065, 5, true));
                scenicList.push(new Scenery("pineTree", -27583 , -1300, 4.2, true));
                scenicList.push(new Scenery("pineTree", -26686 , -688, 0.6, true));
                scenicList.push(new Scenery("pineTree", -27675 , -946, 6, true));
                scenicList.push(new Scenery("pineTree", -27218 , -785, 5.3, true));
                scenicList.push(new Scenery("pineTree", -26994 , -519, 1.1, true));
                scenicList.push(new Scenery("pineTree", -26499 , -449, 9, true));
                scenicList.push(new Scenery("pineTree", -25844 , -162, 1, true));
                scenicList.push(new Scenery("pineTree", -26510 , -126, 3.4, true));
                scenicList.push(new Scenery("pineTree", -26150 , -152, 2, true));
                scenicList.push(new Scenery("pineTree", -25096 , -230, 1, true));
                scenicList.push(new Scenery("pineTree", -25499 , -318, 4.9, true));
                scenicList.push(new Scenery("pineTree", -25825 , 373, 7.3, true));
                scenicList.push(new Scenery("pineTree", -26829 , -288, 3, true));
                scenicList.push(new Scenery("pineTree", -27417 , -501, 1, true));
                scenicList.push(new Scenery("pineTree", -27180 , -293, 3.8, true));
                scenicList.push(new Scenery("pineTree", -26848 , 39, 0.3, true));
                scenicList.push(new Scenery("pineTree", -25716 , 804, 1, true));
                scenicList.push(new Scenery("pineTree", -25341 , 1032, 5, true));
                scenicList.push(new Scenery("pineTree", -26540 , 245, 6, true));
                scenicList.push(new Scenery("pineTree", -26261 , 581, 2, true));
                scenicList.push(new Scenery("pineTree", -26696 , 483, 4, true));
                scenicList.push(new Scenery("pineTree", -26568 , 750, 3.4, true));
                scenicList.push(new Scenery("pineTree", -26171 , 919, 2.4, true));
                scenicList.push(new Scenery("pineTree", -25785 , 1082, 5, true));
                scenicList.push(new Scenery("pineTree", -27058 , 272, 1.2, true));
                scenicList.push(new Scenery("pineTree", -27555 , -730, 8, true));
                scenicList.push(new Scenery("pineTree", -27651 , -56, 3, true));
                scenicList.push(new Scenery("pineTree", -27182 , -17, 4, true));
                scenicList.push(new Scenery("pineTree", -27441 , 397, 3.1, true));
                scenicList.push(new Scenery("pineTree", -27105 , 734, 1, true));
                scenicList.push(new Scenery("pineTree", -26903 , 954, 5.2, true));
                scenicList.push(new Scenery("pineTree", -26551 , 1054, 4.5, true));
                scenicList.push(new Scenery("pineTree", -26145 , 150, 3, true));
                scenicList.push(new Scenery("pineTree", -27570 , 799, 5, true));
                scenicList.push(new Scenery("pineTree", -27421 , 1062, 2.6, true));
                scenicList.push(new Scenery("pineTree", -28021 , 991, 4.6, true));
                scenicList.push(new Scenery("pineTree", -28006 , 597, 1, true));
                scenicList.push(new Scenery("pineTree", -28091 , 282, 5, true));
                scenicList.push(new Scenery("pineTree", -27795 , -374, 8.4, true));
                scenicList.push(new Scenery("pineTree", -27951 , -639, 5.3, true));
                scenicList.push(new Scenery("pineTree", -28483 , 839, 4, true));
                scenicList.push(new Scenery("pineTree", -28598 , 501, 2.3, true));
                scenicList.push(new Scenery("pineTree", -28673 , 147, 7, true));
                scenicList.push(new Scenery("pineTree", -28171 , -88, 4.33, true));
                scenicList.push(new Scenery("pineTree", -28120 , -337, 1, true));
                scenicList.push(new Scenery("pineTree", -28078 , -896, 3, true));
                scenicList.push(new Scenery("pineTree", -27981 , -1188, 4.9, true));
                scenicList.push(new Scenery("pineTree", -28624 , -242, 1.3, true));
                scenicList.push(new Scenery("pineTree", -28416 , -575, 1.8, true));
                scenicList.push(new Scenery("pineTree", -28632 , -860, 2, true));
                scenicList.push(new Scenery("pineTree", -28545 , -1205, 6, true));
                scenicList.push(new Scenery("pineTree", -28116 , -1485, 5.3, true));
                scenicList.push(new Scenery("pineTree", -28544 , 1745, 3.7, true));
                scenicList.push(new Scenery("pineTree", -28118 , -1847, 3, true));
                scenicList.push(new Scenery("pineTree", -28041 , -2230, 10, true));
                scenicList.push(new Scenery("pineTree", -28372 , -2490, 1.5, true));
                scenicList.push(new Scenery("pineTree", -28088 , -2700, 7, true));
                scenicList.push(new Scenery("pineTree", -29172 , -84, 3, true));
                scenicList.push(new Scenery("pineTree", -29040 , -510, 2, true));
                scenicList.push(new Scenery("pineTree", -29631 , -312, 6, true));
                scenicList.push(new Scenery("pineTree", -29613 , -715, 4, true));
                scenicList.push(new Scenery("pineTree", -29136 , -1005, 2.5, true));
                scenicList.push(new Scenery("pineTree", -29071 , -1384, 5, true));
                scenicList.push(new Scenery("pineTree", -28694 , -1613, 3, true));
                scenicList.push(new Scenery("pineTree", -28697 , -2057, 2, true));
                scenicList.push(new Scenery("pineTree", -29296 , -1813, 6, true));
                scenicList.push(new Scenery("pineTree", -29253 , -2365, 1, true));
                scenicList.push(new Scenery("pineTree", -28972 , -2716, 4.6, true));
                scenicList.push(new Scenery("pineTree", -29753 , -2642, 3, true));
                scenicList.push(new Scenery("pineTree", -29747 , -2076, 8, true));
                scenicList.push(new Scenery("pineTree", -30253 , -2326, 2, true));
                scenicList.push(new Scenery("pineTree", -29876 , -1592, 6, true));
                scenicList.push(new Scenery("pineTree", -29783 , -1192, 3, true));
                scenicList.push(new Scenery("pineTree", -29099 , 1015, 4, true));
                scenicList.push(new Scenery("pineTree", -29379 , 665, 2.1, true));
                scenicList.push(new Scenery("pineTree", -29258 , 324, 7, true));
                scenicList.push(new Scenery("pineTree", -29693 , 115, 3, true));
                scenicList.push(new Scenery("pineTree", -30175 , 654, 2, true));
                scenicList.push(new Scenery("pineTree", -29857 , 1048, 9, true));
                scenicList.push(new Scenery("pineTree", -30805 , -2442, 2.7, true));
                scenicList.push(new Scenery("pineTree", -30455 , -1826, 2.6, true));
                scenicList.push(new Scenery("pineTree", -30972 , -2029, 5.3, true));
                scenicList.push(new Scenery("pineTree", -31469 , -2262, 3,7, true));
                scenicList.push(new Scenery("pineTree", -30480 , -1318, 1, true));
                scenicList.push(new Scenery("pineTree", -31019 , -1512, 1.8, true));
                scenicList.push(new Scenery("pineTree", -31395 , -1809, 2.4, true));
                scenicList.push(new Scenery("pineTree", -31912 , -2517, 3, true));
                scenicList.push(new Scenery("pineTree", -31835 , -1971, 2.1, true));
                scenicList.push(new Scenery("pineTree", -32151 , -1387, 4.2, true));
                scenicList.push(new Scenery("pineTree", -31636 , -1478, 1.4, true));
                scenicList.push(new Scenery("pineTree", -31308 , -1050, 3, true));
                scenicList.push(new Scenery("pineTree", -30376 , -875, 2, true));
                scenicList.push(new Scenery("pineTree", -30171 , -479, 1, true));
                scenicList.push(new Scenery("pineTree", -30393 , -39, 6, true));
                scenicList.push(new Scenery("pineTree", -30608 , 354, 2.8, true));
                scenicList.push(new Scenery("pineTree", -30653 , 986, 0.3, true));
                scenicList.push(new Scenery("pineTree", -30966 , 772, 7, true));
                scenicList.push(new Scenery("pineTree", -32234 , 1066, 2, true));
                scenicList.push(new Scenery("pineTree", -32053 , 608, 1.4, true));
                scenicList.push(new Scenery("pineTree", -31731 , 901, 9.1, true));
                scenicList.push(new Scenery("pineTree", -32191 , -374, 6, true));
                scenicList.push(new Scenery("pineTree", -32243 , -788, 3.7, true));
                scenicList.push(new Scenery("pineTree", -32283 , 285, 2.3, true));
                scenicList.push(new Scenery("pineTree", -31906 , 90, 0.4, true));
                scenicList.push(new Scenery("pineTree", -31939 , -1095, 6, true));
                scenicList.push(new Scenery("pineTree", -31292 , 1047, 2.1, true));
                scenicList.push(new Scenery("pineTree", -31455 , 550, 1, true));
                scenicList.push(new Scenery("pineTree", -31165 , 329, 4, true));
                scenicList.push(new Scenery("pineTree", -31042 , 11, 1.8, true));
                scenicList.push(new Scenery("pineTree", -31493 , 138, 5, true));
                scenicList.push(new Scenery("pineTree", -31619 , -361, 4.8, true));
                scenicList.push(new Scenery("pineTree", -31398 , -126, 2.3, true));
                scenicList.push(new Scenery("pineTree", -30746 , -369, 3, true));
                scenicList.push(new Scenery("pineTree", -31164 , -595, 0.8, true));
                scenicList.push(new Scenery("pineTree", -30878 , -1099, 2.1, true));
                scenicList.push(new Scenery("pineTree", -32482 , 774, 3, true));
                scenicList.push(new Scenery("pineTree", -31768 , -753, 0, true));
                scenicList.push(new Scenery("pineTree", -26557 , 5405, 2, true));
                scenicList.push(new Scenery("pineTree", -26078 , 5599, 1, true));
                scenicList.push(new Scenery("pineTree", -26173 , 5301, 3, true));
                scenicList.push(new Scenery("pineTree", -25907 , 5028, 2.9, true));
                scenicList.push(new Scenery("pineTree", -26244 , 4886, 4.3, true));
                scenicList.push(new Scenery("pineTree", -26078 , 5599, 5.7, true));
                scenicList.push(new Scenery("pineTree", -26144 , 4613, 6.7, true));
                scenicList.push(new Scenery("pineTree", -26617 , 5116, 3.5, true));
                scenicList.push(new Scenery("pineTree", -26863 , 5634, 1.2, true));
                scenicList.push(new Scenery("pineTree", -27067 , 5354, 2, true));
                scenicList.push(new Scenery("pineTree", -27088 , 4970, 4.5, true));
                scenicList.push(new Scenery("pineTree", -26783 , 4724, 3.1, true));
                scenicList.push(new Scenery("pineTree", -25889 , 4230, 5.2, true));
                scenicList.push(new Scenery("pineTree", -25456 , 3979, 1, true));
                scenicList.push(new Scenery("pineTree", -25913 , 3874, 3.7, true));
                scenicList.push(new Scenery("pineTree", -25573 , 3553, 1.8, true));
                scenicList.push(new Scenery("pineTree", -25404 , 3290, 8, true));
                scenicList.push(new Scenery("pineTree", -25933 , 3244, 4, true));
                scenicList.push(new Scenery("pineTree", -25653 , 2925, 3, true));
                scenicList.push(new Scenery("pineTree", -25379 , 2570, 1.2, true));
                scenicList.push(new Scenery("pineTree", -26057 , 1695, 2.8, true));
                scenicList.push(new Scenery("pineTree", -25706 , 1977, 1.1, true));
                scenicList.push(new Scenery("pineTree", -25303 , 2042, 5.7, true));
                scenicList.push(new Scenery("pineTree", -25658 , 2315, 3.6, true));
                scenicList.push(new Scenery("pineTree", -26112 , 2155, 6, true));
                scenicList.push(new Scenery("pineTree", -25965 , 2597, 2.5, true));
                scenicList.push(new Scenery("pineTree", -26236 , 3530, 5, true));
                scenicList.push(new Scenery("pineTree", -26344 , 3816, 2, true));
                scenicList.push(new Scenery("pineTree", -26433 , 4271, 0.4, true));
                scenicList.push(new Scenery("pineTree", -26861 , 4349, 1, true));
                scenicList.push(new Scenery("pineTree", -26743 , 3611, 4.2, true));
                scenicList.push(new Scenery("pineTree", -26619 , 3343, 1.3, true));
                scenicList.push(new Scenery("pineTree", -26388 , 3053, 0, true));
                scenicList.push(new Scenery("pineTree", -26022 , 2979, 6, true));
                scenicList.push(new Scenery("pineTree", -26428 , 2753, 3, true));
                scenicList.push(new Scenery("pineTree", -26407 , 2462, 2, true));
                scenicList.push(new Scenery("pineTree", -26619 , 2193, 1, true));
                scenicList.push(new Scenery("pineTree", -26369 , 1919, 5.7, true));
                scenicList.push(new Scenery("pineTree", -26664 , 1603, 2.2, true));
                scenicList.push(new Scenery("pineTree", -26850 , 3095, 3, true));
                scenicList.push(new Scenery("pineTree", -26984 , 3440, 2.7, true));
                scenicList.push(new Scenery("pineTree", -27202 , 3243, 1, true));
                scenicList.push(new Scenery("pineTree", -26798 , 2575, 6, true));
                scenicList.push(new Scenery("pineTree", -27000 , 2398, 3, true));
                scenicList.push(new Scenery("pineTree", -27056 , 2125, 2, true));
                scenicList.push(new Scenery("pineTree", -26873 , 1908, 5, true));
                scenicList.push(new Scenery("pineTree", -27201 , 1728, 3, true));
                scenicList.push(new Scenery("pineTree", -26929 , 2853, 0, true));
                scenicList.push(new Scenery("pineTree", -27207 , 2671, 5.6, true));
                scenicList.push(new Scenery("pineTree", -27421 , 2359, 1.4, true));
                scenicList.push(new Scenery("pineTree", -27443 , 1923, 3.3, true));
                scenicList.push(new Scenery("pineTree", -27667 , 1617, 0.3, true));
                scenicList.push(new Scenery("pineTree", -26786 , 4018, 2.5, true));
                scenicList.push(new Scenery("pineTree", -28165 , 1576, 6, true));
                scenicList.push(new Scenery("pineTree", -28023 , 1822, 2, true));
                scenicList.push(new Scenery("pineTree", -27850 , 2081, 3, true));
                scenicList.push(new Scenery("pineTree", -28313 , 2071, 5.2, true));
                scenicList.push(new Scenery("pineTree", -27955 , 2461, 1, true));
                scenicList.push(new Scenery("pineTree", -27712 , 2756, 0.1, true));
                scenicList.push(new Scenery("pineTree", -27424 , 2976, 4, true));
                scenicList.push(new Scenery("pineTree", -27721 , 3250, 2, true));
                scenicList.push(new Scenery("pineTree", -27483 , 3535, 2.9, true));
                scenicList.push(new Scenery("pineTree", -27217 , 3870, 5, true));
                scenicList.push(new Scenery("pineTree", -27219 , 4623, 1, true));
                scenicList.push(new Scenery("pineTree", -27286 , 4183, 0.7, true));
                scenicList.push(new Scenery("pineTree", -27705 , 4011, 3, true));
                scenicList.push(new Scenery("pineTree", -27816 , 3726, 0, true));
                scenicList.push(new Scenery("pineTree", -28143 , 3578, 1, true));
                scenicList.push(new Scenery("pineTree", -28199 , 3904, 6, true));
                scenicList.push(new Scenery("pineTree", -27725 , 5595, 2, true));
                scenicList.push(new Scenery("pineTree", -25080 , 679, 1.8, true));
                scenicList.push(new Scenery("pineTree", -29000 , 2500, 0, true));
                scenicList.push(new Scenery("pineTree", -28393 , 5561, 0.1, true));
                scenicList.push(new Scenery("pineTree", -27571 , 5235, 6, true));
                scenicList.push(new Scenery("pineTree", -28914 , 5421, 2.1, true));
                scenicList.push(new Scenery("pineTree", -29267 , 5639, 3, true));
                scenicList.push(new Scenery("pineTree", -29763 , 5491, 1.1, true));
                scenicList.push(new Scenery("pineTree", -30222 , 5446, 4, true));
                scenicList.push(new Scenery("pineTree", -30635 , 5633, 2.8, true));
                scenicList.push(new Scenery("pineTree", -31094 , 5492, 5.1, true));
                scenicList.push(new Scenery("pineTree", -31591 , 5590, 0.1, true));
                scenicList.push(new Scenery("pineTree", -32011 , 5451, 6, true));
                scenicList.push(new Scenery("pineTree", -32249 , 5176, 2.1, true));
                scenicList.push(new Scenery("pineTree", -29055 , 1643, 4, true));
                scenicList.push(new Scenery("pineTree", -28965 , 2022, 5.3, true));
                scenicList.push(new Scenery("pineTree", -28493 , 2457, 3.1, true));
                scenicList.push(new Scenery("pineTree", -28268 , 2751, 0, true));
                scenicList.push(new Scenery("pineTree", -28043 , 3053, 1, true));
                scenicList.push(new Scenery("pineTree", -28320 , 3252, 2, true));
                scenicList.push(new Scenery("pineTree", -28613 , 2992, 3, true));
                scenicList.push(new Scenery("pineTree", -29008 , 2896, 6, true));
                scenicList.push(new Scenery("pineTree", -29444 , 1889, 4, true));
                scenicList.push(new Scenery("pineTree", -29368 , 2233, 2.5, true));
                scenicList.push(new Scenery("pineTree", -29366 , 2769, 3, true));
                scenicList.push(new Scenery("pineTree", -29652 , 1573, 5, true));
                scenicList.push(new Scenery("pineTree", -27667 , 4399, 0.4, true));
                scenicList.push(new Scenery("pineTree", -27537 , 4935, 2, true));
                scenicList.push(new Scenery("pineTree", -27755 , 4688, 4, true));
                scenicList.push(new Scenery("pineTree", -31610 , 5257, 1, true));
                scenicList.push(new Scenery("pineTree", -30665 , 5272, 3, true));
                scenicList.push(new Scenery("pineTree", -27287 , 5659, 0, true));
                scenicList.push(new Scenery("pineTree", -28102 , 5319, 2, true));
                scenicList.push(new Scenery("pineTree", -27945 , 5043, 4, true));
                scenicList.push(new Scenery("pineTree", -28087 , 4495, 5, true));
                scenicList.push(new Scenery("pineTree", -28353 , 4798, 0.8, true));
                scenicList.push(new Scenery("pineTree", -28632 , 5130, 4.3, true));
                scenicList.push(new Scenery("pineTree", -29348 , 5309, 0, true));
                scenicList.push(new Scenery("pineTree", -29069 , 5020, 6, true));
                scenicList.push(new Scenery("pineTree", -28748 , 4753, 2, true));
                scenicList.push(new Scenery("pineTree", -28601 , 4417, 1, true));
                scenicList.push(new Scenery("pineTree", -28290 , 4262, 3, true));
                scenicList.push(new Scenery("pineTree", -28759 , 4099, 4, true));
                scenicList.push(new Scenery("pineTree", -29940 , 1863, 5, true));
                scenicList.push(new Scenery("pineTree", -29760 , 2135, 0, true));
                scenicList.push(new Scenery("pineTree", -29599 , 2515, 2, true));
                scenicList.push(new Scenery("pineTree", -30370 , 1636, 1.3, true));
                scenicList.push(new Scenery("pineTree", -28732 , 3321, 4, true));
                scenicList.push(new Scenery("pineTree", -28655 , 3695, 3, true));
                scenicList.push(new Scenery("pineTree", -29071 , 4507, 5, true));
                scenicList.push(new Scenery("pineTree", -29406 , 4145, 0.7, true));
                scenicList.push(new Scenery("pineTree", -29219 , 3847, 2, true));
                scenicList.push(new Scenery("pineTree", -29866 , 5074, 0, true));
                scenicList.push(new Scenery("pineTree", -29494 , 4879, 7, true));
                scenicList.push(new Scenery("pineTree", -29617 , 4529, 3, true));
                scenicList.push(new Scenery("pineTree", -29185 , 3535, 4, true));
                scenicList.push(new Scenery("pineTree", -29407 , 3203, 1, true));
                scenicList.push(new Scenery("pineTree", -29648 , 3473, 0.6, true));
                scenicList.push(new Scenery("pineTree", -29626 , 3804, 4.7, true));
                scenicList.push(new Scenery("pineTree", -29981 , 4258, 3, true));
                scenicList.push(new Scenery("pineTree", -30023 , 4768, 1.3, true));
                scenicList.push(new Scenery("pineTree", -30335 , 5101, 5, true));
                scenicList.push(new Scenery("pineTree", -29871 , 3130, 0.2, true));
                scenicList.push(new Scenery("pineTree", -29981 , 2766, 4, true));
                scenicList.push(new Scenery("pineTree", -30424 , 1945, 3, true));
                scenicList.push(new Scenery("pineTree", -30108 , 2456, 1, true));
                scenicList.push(new Scenery("pineTree", -30821 , 1718, 2, true));
                scenicList.push(new Scenery("pineTree", -30499 , 2284, 5, true));
                scenicList.push(new Scenery("pineTree", -30449 , 2683, 0, true));
                scenicList.push(new Scenery("pineTree", -30336 , 3023, 0.9, true));
                scenicList.push(new Scenery("pineTree", -30175 , 3412, 6, true));
                scenicList.push(new Scenery("pineTree", -29952 , 4002, 4, true));
                scenicList.push(new Scenery("pineTree", -30255 , 3735, 1.6, true));
                scenicList.push(new Scenery("pineTree", -30901 , 2069, 5.1, true));
                scenicList.push(new Scenery("pineTree", -30324 , 4523, 1, true));
                scenicList.push(new Scenery("pineTree", -30565 , 4837, 5.6, true));
                scenicList.push(new Scenery("pineTree", -30490 , 4198, 0.2, true));
                scenicList.push(new Scenery("pineTree", -31192 , 1553, 3, true));
                scenicList.push(new Scenery("pineTree", -31321 , 1879, 2, true));
                scenicList.push(new Scenery("pineTree", -31656 , 1619, 5, true));
                scenicList.push(new Scenery("pineTree", -32036 , 1765, 7, true));
                scenicList.push(new Scenery("pineTree", -31869 , 2032, 0, true));
                scenicList.push(new Scenery("pineTree", -31491 , 2270, 1, true));
                scenicList.push(new Scenery("pineTree", -31015 , 2418, 3, true));
                scenicList.push(new Scenery("pineTree", -30872 , 2680, 4.6, true));
                scenicList.push(new Scenery("pineTree", -30822 , 4522, 2, true));
                scenicList.push(new Scenery("pineTree", -31103 , 5111, 4, true));
                scenicList.push(new Scenery("pineTree", -31876 , 5007, 0.8, true));
                scenicList.push(new Scenery("pineTree", -31077 , 4821, 1, true));
                scenicList.push(new Scenery("pineTree", -31598 , 4783, 2, true));
                scenicList.push(new Scenery("pineTree", -32053 , 4733, 0, true));
                scenicList.push(new Scenery("pineTree", -31946 , 2554, 5, true));
                scenicList.push(new Scenery("pineTree", -31520 , 2564, 6, true));
                scenicList.push(new Scenery("pineTree", -31294 , 2862, 2, true));
                scenicList.push(new Scenery("pineTree", -30821 , 3007, 1, true));
                scenicList.push(new Scenery("pineTree", -30685 , 3332, 4, true));
                scenicList.push(new Scenery("pineTree", -31814 , 2861, 0.4, true));
                scenicList.push(new Scenery("pineTree", -31976 , 3290, 3, true));
                scenicList.push(new Scenery("pineTree", -31310 , 3196, 5.2, true));
                scenicList.push(new Scenery("pineTree", -31300 , 4496, 1, true));
                scenicList.push(new Scenery("pineTree", -31123 , 3593, 0, true));
                scenicList.push(new Scenery("pineTree", -30712 , 3717, 1.8, true));
                scenicList.push(new Scenery("pineTree", -30888 , 3990, 4, true));
                scenicList.push(new Scenery("pineTree", -31379 , 4093, 5, true));
                scenicList.push(new Scenery("pineTree", -31811 , 4373, 6, true));
                scenicList.push(new Scenery("pineTree", -31967 , 4049, 0.7, true));
                scenicList.push(new Scenery("pineTree", -31419 , 3812, 2, true));
                scenicList.push(new Scenery("pineTree", -31892 , 3756, 3, true));
                scenicList.push(new Scenery("pineTree", -32197 , 3614, 1, true));
                scenicList.push(new Scenery("pineTree", -31604 , 3529, 5.3, true));

                //beasts of the wuntol woods
                ArtificialIntelligenceAccess.push(new Unit(-26262 , 3589, "Shehid", true, "Ulugla"));
                ArtificialIntelligenceAccess.push(new Unit(-26356 , 3728, "Shehid", false, "Ulukla"));
                ArtificialIntelligenceAccess.push(new Unit(-25373 , 1556, "Shehid", false, "omgluka"));


                //Plants of the wuntol woods
                scenicList.push(new Scenery("neprilnePlant", -25835 , 4096, -3.8, true));
                scenicList.push(new Scenery("neprilnePlant", -30852 , -2947, 8.8, true));
                scenicList.push(new Scenery("neprilnePlant", -29688 , 435, 2.11, true));
                scenicList.push(new Scenery("neprilnePlant", -25260 , 2293, -5.1, true));
                scenicList.push(new Scenery("neprilnePlant", -29025 , 5615, 5.9, true));
                scenicList.push(new Scenery("neprilnePlant", -27313 , 3382, 1.111, true));
                scenicList.push(new Scenery("pluttPlant", -26283 , 3675, 1.4, true));
                scenicList.push(new Scenery("pluttPlant", -29571 , 589, 2.3, true));
                scenicList.push(new Scenery("pluttPlant", -31154 , 4155, 8.101010101, true));
                scenicList.push(new Scenery("culprisPlant", -26995 , 2600, -4.5, true));
                scenicList.push(new Scenery("culprisPlant", -27410 , 2111, 0.12, true));
                scenicList.push(new Scenery("culprisPlant", -29127 , 2450, 2.7, true));
                scenicList.push(new Scenery("culprisPlant", -32098 , 1106, 5.3, true));
                scenicList.push(new Scenery("culprisPlant", -28822 , -2817, -2.2, true));
                scenicList.push(new Scenery("stomwikPlant", -25310 , 3144, 5, true));
                scenicList.push(new Scenery("stomwikPlant", -25778 , -1544, -9, true));
                scenicList.push(new Scenery("akerPlant", -28603 , 1695, -1.5, true));
                scenicList.push(new Scenery("akerPlant", -32353 , -2381, 3, true));
                scenicList.push(new Scenery("akerPlant", -25849 , -3101, 9.4, true));
                scenicList.push(new Scenery("akerPlant", -28241 , -1223, 14, true));
                scenicList.push(new Scenery("akerPlant", -28265 , 3003, -18, true));
                scenicList.push(new Scenery("akerPlant", -28375 , 3376, 20, true));
                scenicList.push(new Scenery("glinPlant", -28055 , 329, -10.54321, true));
                scenicList.push(new Scenery("glinPlant", -26608 , -1987, -12.24, true));
                scenicList.push(new Scenery("glinPlant", -25223 , -2741, 10, true));
                scenicList.push(new Scenery("glinPlant", -26298 , -558, -0.11, true));
                scenicList.push(new Scenery("glinPlant", -26268 , 3805, 7, true));
                scenicList.push(new Scenery("glinPlant", -26161 , 3535, 12, true));
                scenicList.push(new Scenery("glinPlant", -26200 , 3631, -10.10101, true));
                scenicList.push(new Scenery("glinPlant", -25296 , 1568, 1, true));
                scenicList.push(new Scenery("glinPlant", -30045 , 5911, -10.5, true));
                scenicList.push(new Scenery("glinPlant", -26545 , 3380, 2, true));
                scenicList.push(new Scenery("glinPlant", -26066 , 3152, 10.65, true));
                scenicList.push(new Scenery("glinPlant", -24958 , -1167, 0.61, true));
                scenicList.push(new Scenery("wyrPlant", -32224 , -2656, 1.9, true));
                scenicList.push(new Scenery("wyrPlant", -30055 , -26, 2.486, true));
                scenicList.push(new Scenery("wyrPlant", -30412 , 4928, 3.33, true));
                scenicList.push(new Scenery("cyrinthilimPlant", -32415 , -2877, 2.9, true));
                scenicList.push(new Scenery("cyrinthilimPlant", -26923 , 3407, 19, true));
                scenicList.push(new Scenery("halcifPlant", -27512 , -3081, -1.9, true));
                //scenicList.push(new Scenery("ogardPlant", -16292 , -2231, 0, true)); //this does not spawn in this part of the forrest

                //scenery
                if (Math.random() > 0.65)
                {
                    scenicList.push(new Scenery("temperatePondFishingSpot", -25825, -2623, 0.65, false)); //unique and self deletes on depleation
                }

                //events
                    //forager campout (nirwaden)
                if (Math.random() > 0.7)
                {
                    scenicList.push(new Scenery("tent", -25452, -2416, -1/5 * Math.PI, true));
                    if (Math.random() > 0.45)
                    {
                        scenicList.push(new Scenery("nirwadenGoods", -25516, -2417, 6, 1));
                    }
                    else
                    {
                        scenicList.push(new Scenery("nirwadenGoods", -25405, -2440, 5.4, 1));
                    }
                    scenicList.push(new Scenery("pluttPlant", -25337 , -2570, 3, "picked"));
                    scenicList.push(new Scenery("pluttPlant", -25349 , -2660, -5.5, "picked"));
                    if (Math.random() > 0.55)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-25528, -2509, "Person", false, "Forager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["none", [0.2, 0.25], 0, 0, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 3, patrolLoop: true, route:[[-25507, -2485], [-25387, -2608], [-25580, -2673]]}));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-25496, -2480, "Person", false, "Forager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["none", [0.2, 0.25], 0, 0, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-25516, -2492]]}));
                    }
                }
                else
                {
                    if (Math.random() > 0.6)
                    {
                        scenicList.push(new Scenery("pluttPlant", -25337 , -2570, 3, "picked"));
                        scenicList.push(new Scenery("pluttPlant", -25349 , -2660, -5.5, true));
                        ArtificialIntelligenceAccess.push(new Unit(-25408 , -2560, "BlackBear", false, "Ursa"));
                    }
                    else
                    {
                        if (Math.random() > 0.4)
                        {
                            scenicList.push(new Scenery("pluttPlant", -25337 , -2570, 3, true));
                            scenicList.push(new Scenery("pluttPlant", -25349 , -2660, -5.5, true));
                        }
                        else
                        {
                            scenicList.push(new Scenery("pluttPlant", -25337 , -2570, 3, "picked"));
                            scenicList.push(new Scenery("pluttPlant", -25349 , -2660, -5.5, "picked"));
                            ArtificialIntelligenceAccess.push(new Unit(-25512 , -2619, "BlackBear", true, "Ursula"));
                        }
                    }
                }
                //bandit attack!
                if (uniqueChars.nelgrefLDS)
                {
                    if (Math.random() > 0.79)
                    {
                        if (Math.random() > 0.495)
                        {

                            ArtificialIntelligenceAccess.push(new Unit(-30777, 1321, "Soldier", false, "Nelgref Bandit Scout", {race: "Freynor", faction: "hostile", con: 6, speed: 1.9, outfit: ["blackBearLeatherArmour", 4.25], weapon: ["freydicSword", [9, 4], 0, 17, 1.4], ranged: [false, "steelBolt", 11, 2250, 18, 40 /3, 0, "none", 7], patrolStops: 0, patrolLoop: true, route:[[3071, 314]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-30697, 1242, "Soldier", false, "Nelgref Bandit Scout", {race: "Freynor", faction: "hostile", con: 5, speed: 1.96, outfit: ["blackBearLeatherArmour", 4.4], weapon: ["freydicSword", [8, 5], 0, 17, 1.65], ranged: [false, "steelBolt", 11, 2250, 18, 40 /3, 0, "none", 7], patrolStops: 1, patrolLoop: true, route:[[-30591, 1235]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-31602, 1937, "Soldier", false, "Nelgref Bandit Scout", {race: "Freynor", faction: "hostile", con: 6, speed: 1.9, outfit: ["blackBearLeatherArmour", 4.25], weapon: ["freydicSword", [9, 4], 0, 17, 1.4], ranged: [false, "steelBolt", 11, 2250, 18, 40 /3, 0, "none", 7], patrolStops: 1, patrolLoop: true, route:[[-31577, 1902]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-24976, 864, "Soldier", false, "Nelgref Bandit Scout", {race: "Freynor", faction: "hostile", con: 5, speed: 1.96, outfit: ["blackBearLeatherArmour", 4.4], weapon: ["freydicSword", [8, 5], 0, 17, 1.65], ranged: [false, "steelBolt", 11, 2250, 18, 40 /3, 0, "none", 7], patrolStops: 1, patrolLoop: true, route:[[-24973, 891]]}));
                        }
                    }
                }

                //n-1 e-4 trees
                scenicList.push(new Scenery("pineTree", -34992 , 6702, 6, true));
                scenicList.push(new Scenery("pineTree", -34384, 6421, 5.3, true));

                change = "e3";
            }
        }
        else if (region == "e4") //atalin bridge
        {
            if (change != "e4")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                generator2(9786217, 193249, 242531, 33632203, 8967556824000, 1, -33912, 6507, true);
                cropper(-33912, 6507, -35953, 1571, true, true);

                generator2(2436217, 56679, 21, 3, 894000, 1, -33923, 1056, true);
                cropper(-33923, 1056, -35952, -3576, true, true);

                generator2(897, 27418911, 421534281, 8548903, 119, 1, -44150, -3266, true);
                cropper(-44150, -3266, -45175, -3598, true, true);

                for (var i = scenicList.length -1; i >= 0; i--)
                {
                    if (scenicList[i].type != "pineTree")
                    {
                        scenicList.splice(i, 1);
                    }
                }

                generator2(194838973478567290593490753765777, 874189889999927462711, 21264612647782889982392365641534281, 4291914929422375482332503, 3339769, 1, -40882, 3192, true);
                cropper(-40882, -3192, -44012, -3634, true, true);

                generator2(53765777, 99, 213974281, 332503, 100101000, 1, -33959, -3720, true);
                cropper(-40435, -3624, -44055, -4521, true, true);

                //s-1-e-5
                generator2(789678567456345678, 87675674567589, 23453467578, 87967857598607, 775764427, 1, -44316, -3916, true);
                cropper(-44316, -3916, -44316 - 800, -3916 - 800, true, true); //shortened

                //e-3 trees (west)
                scenicList.push(new Scenery("pineTree", -32545 , -2522, 1, true));
                scenicList.push(new Scenery("pineTree", -32334 , -2205, 5.2, true));
                scenicList.push(new Scenery("pineTree", -32482 , -1700, 3.8, true));
                scenicList.push(new Scenery("pineTree", -33350 , -2564, 7.1, true));
                scenicList.push(new Scenery("pineTree", -32946 , -2242, 2.242, true));
                scenicList.push(new Scenery("pineTree", -33498 , -2098, -6, true));
                scenicList.push(new Scenery("pineTree", -33081 , -1820, 11, true));
                scenicList.push(new Scenery("pineTree", -32842 , -1483, 13, true));
                scenicList.push(new Scenery("pineTree", -32604 , -3450, -8, true));
                scenicList.push(new Scenery("pineTree", -32995 , -3536, -4.46, true));
                scenicList.push(new Scenery("pineTree", -32750 , -3092, 2, true));
                scenicList.push(new Scenery("pineTree", -32392 , -2822, -3.8, true));
                scenicList.push(new Scenery("pineTree", -32906 , -2767, 5, true));
                scenicList.push(new Scenery("pineTree", -33156 , -3023, 6, true));
                scenicList.push(new Scenery("pineTree", -33499 , -3322, -5.3, true));
                scenicList.push(new Scenery("pineTree", -33213 , -3006, -7.73, true));
                scenicList.push(new Scenery("pineTree", -32906 , -2767, 3.8, true));
                scenicList.push(new Scenery("pineTree", -33703 , -2805, 9, true));
                scenicList.push(new Scenery("pineTree", -33660 , -1621, -10, true));
                scenicList.push(new Scenery("pineTree", -33703 , -2805, 9, true));
                scenicList.push(new Scenery("pineTree", -33267 , -1180, 14, true));
                scenicList.push(new Scenery("pineTree", -32553 , -1309, -15.5, true));
                scenicList.push(new Scenery("pineTree", -32309 , -1088, 2.198983648723, true));
                scenicList.push(new Scenery("pineTree", -32706 , -958, 3, true));
                scenicList.push(new Scenery("pineTree", -33801 , -776, 1, true));
                scenicList.push(new Scenery("pineTree", -33304 , -701, -2.35, true));
                scenicList.push(new Scenery("pineTree", -32913 , -478, 0, true));
                scenicList.push(new Scenery("pineTree", -32599 , -25, -1, true));
                scenicList.push(new Scenery("pineTree", -33579 , -320, -20, true));
                scenicList.push(new Scenery("pineTree", -33386 , 65, 0, true));
                scenicList.push(new Scenery("pineTree", -33027 , -159, 2, true));
                scenicList.push(new Scenery("pineTree", -32772, 449, 0, true));
                scenicList.push(new Scenery("pineTree", -32772 , 449, 13.321, true));
                scenicList.push(new Scenery("pineTree", -33143 , 337, 1.4, true));
                scenicList.push(new Scenery("pineTree", -32819 , 1063, -8.214, true));
                scenicList.push(new Scenery("pineTree", -32985 , 749, -1.88, true));
                scenicList.push(new Scenery("pineTree", -33323 , 940, 11, true));
                scenicList.push(new Scenery("pineTree", -33654 , 1025, 0.5, true));
                scenicList.push(new Scenery("pineTree", -33799 , 288, 10, true));
                scenicList.push(new Scenery("pineTree", -33408 , 631, 1.6, true));
                scenicList.push(new Scenery("pineTree", -32438 , 1616, 0.25, true));
                scenicList.push(new Scenery("pineTree", -32630 , 1940, -0.75, true));
                scenicList.push(new Scenery("pineTree", -32312 , 2303, -12.55555, true));
                scenicList.push(new Scenery("pineTree", -32736 , 2532, 3.9, true));
                scenicList.push(new Scenery("pineTree", -32299 , 2885, 3.7, true));
                scenicList.push(new Scenery("pineTree", -32483, 3180, 7.15, true));
                scenicList.push(new Scenery("pineTree", -32599 , 3580, 2.242, true));
                scenicList.push(new Scenery("pineTree", -32450 , 3898, -6, true));
                scenicList.push(new Scenery("pineTree", -32386 , 4502, 11, true));
                scenicList.push(new Scenery("pineTree", -32585 , 4910, 13, true));
                scenicList.push(new Scenery("pineTree", -32929 , 4656, -8, true));
                scenicList.push(new Scenery("pineTree", -32824 , 5229, -4.46, true));
                scenicList.push(new Scenery("pineTree", -32491 , 5555, 5, true));
                scenicList.push(new Scenery("pineTree", -33030 , 5448, -3.8, true));
                scenicList.push(new Scenery("pineTree", -33516 , 5174, -17, true));
                scenicList.push(new Scenery("pineTree", -32700 , 5990, -9, true));
                scenicList.push(new Scenery("pineTree", -32391 , 6232, 3.4, true));
                scenicList.push(new Scenery("pineTree", -32478 , 6524, -5.443, true));
                scenicList.push(new Scenery("pineTree", -32925 , 6310, 7.75, true));
                scenicList.push(new Scenery("pineTree", -33352 , 6480, -3.95, true));
                scenicList.push(new Scenery("pineTree", -33239 , 6077, -2.39239, true));
                scenicList.push(new Scenery("pineTree", -33706 , 6188, 10.45, true));
                scenicList.push(new Scenery("pineTree", -33551 , 5652, 12.85, true));
                scenicList.push(new Scenery("pineTree", -32851 , 5714, -13.1, true));
                scenicList.push(new Scenery("pineTree", -33178 , 5018, -4.4545, true));
                scenicList.push(new Scenery("pineTree", -33491 , 4775, -1.45, true));
                scenicList.push(new Scenery("pineTree", -33333 , 4425, 3.33333333, true));
                scenicList.push(new Scenery("pineTree", -33649 , 4107, -12.85, true));
                scenicList.push(new Scenery("pineTree", -33146 , 4131, 18, true));
                scenicList.push(new Scenery("pineTree", -33000 , 3767, 13.11, true));
                scenicList.push(new Scenery("pineTree", -32609 , 4195, 15.55, true));
                scenicList.push(new Scenery("pineTree", -33035 , 1713, 15.55, true));
                scenicList.push(new Scenery("pineTree", -33397 , 1567, 0, true));
                scenicList.push(new Scenery("pineTree", -33787 , 1495, 1.2, true));
                scenicList.push(new Scenery("pineTree", -33003 , 2122, 2.2, true));
                scenicList.push(new Scenery("pineTree", -33203 , 2407, 3.2, true));
                scenicList.push(new Scenery("pineTree", -33365 , 1910, 1.1, true));
                scenicList.push(new Scenery("pineTree", -33611 , 2246, 5.5, true));
                scenicList.push(new Scenery("pineTree", -33541 , 2684, 6.2, true));
                scenicList.push(new Scenery("pineTree", -33010 , 2814, -7.2, true));
                scenicList.push(new Scenery("pineTree", -32714 , 2946, -8.2, true));
                scenicList.push(new Scenery("pineTree", -32963 , 3282, 0, true));
                scenicList.push(new Scenery("pineTree", -33268 , 3074, -1, true));
                scenicList.push(new Scenery("pineTree", -33510 , 3432, -2.3, true));
                scenicList.push(new Scenery("pineTree", -33795 , 3727, -5, true));
                scenicList.push(new Scenery("pineTree", -33381 , 3837, -1, true));
                cropper(-33450, 6570, -34189, -3636, true, true);

                //n-1 e-4 trees
                scenicList.push(new Scenery("pineTree", -34992 , 6702, 6, true));
                scenicList.push(new Scenery("pineTree", -34384, 6421, 5.3, true));

                //REGION CREATION
                //Build AI Units

                //fishing
                scenicList.push(new Scenery("temperateFishingSpot", -39438, 2114, 10, true));
                scenicList.push(new Scenery("temperateFishingSpot", -38296, 2004, 7, true));
                scenicList.push(new Scenery("temperateFishingSpot", -39109, -260, 1, true));
                scenicList.push(new Scenery("temperateFishingSpot", -39910, -171, 2, true));
                scenicList.push(new Scenery("temperateFishingSpot", -36838, 357, 5, true));
                scenicList.push(new Scenery("temperateFishingSpot", -37862, 4628, 4, true));

                //Duendes
                if (quests.duendeInfestationKillCount < 9 && quests.duendeInfestationDuendeLoad == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44751, -2175, "Duende", true, "arena2"));
                    ArtificialIntelligenceAccess.push(new Unit(-44659, -2187, "Duende", true, "arena2"));
                    ArtificialIntelligenceAccess.push(new Unit(-44706, -2228, "Duende", true, "arena2"));
                    ArtificialIntelligenceAccess.push(new Unit(-44644, -2262, "Duende", true, "arena2"));
                    ArtificialIntelligenceAccess.push(new Unit(-44965, -2336, "Duende", true, "arena2"));
                    ArtificialIntelligenceAccess.push(new Unit(-44918, -2255, "Duende", true, "arena2"));
                    ArtificialIntelligenceAccess.push(new Unit(-44724, -2328, "Duende", true, "arena2"));
                    ArtificialIntelligenceAccess.push(new Unit(-44760, -2286, "Duende", true, "arena2"));
                    ArtificialIntelligenceAccess.push(new Unit(-44858, -2195, "Duende", true, "arena2"));
                }

                if (uniqueChars.sebastianLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Harbourmaster Sebastian")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-40579, 2721, "Person", false, "Harbourmaster Sebastian", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.1, 0.4], 0, 0, 1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-40582, 2725]], merchant: true, merchandise: [[new Item("coins", false, false), 250], [new Item("boat", false, false), 5], [new Item("fishingpole", false, false), 3]]}));
                    }
                }
                if (uniqueChars.ilimoLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Customs Master Ilimo")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-40552, -63, "Person", false, "Customs Master Ilimo", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.15, 0.3], 0, 0, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-40552, -73]]}));
                    }
                }

                if (uniqueChars.jorgeLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Jorge the Killer")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-41301, 707, "Soldier", false, "Jorge the Killer", {race: "Nirwaden", faction: "EstolGang", con: 6, speed: 1.35, outfit: ["sealSkinClothing", 0], weapon: ["nirineseSabre", [8, 9], 0, 20, 1.15], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 1, patrolLoop: true, route:[[-41301, 717]]}));
                    }
                }

                if (uniqueChars.feniglioLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Feniglio")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-41070, 2787, "Person", false, "Feniglio", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["varnFurClothing", 0], weapon: ["none", [0.15, 0.3], 0, 0, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-41065, 2793]]}));
                    }
                }

                if (uniqueChars.micaelLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Micael the Banker")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-41174, 2067, "Person", false, "Micael the Banker", {race: "Orgell", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.2, 0.25], 0, 1, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-41174, 2055]], banker: true}));
                    }
                }

                if (uniqueChars.joaquinLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Joaquin the Barkeep")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        if (player.gamemode == "protagonist")
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-41317, 987, "Person", false, "Sir Elmo, the Carrot Guardian", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.1, 0.4], 0, 0, 1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-41320, 993]], merchant: true, merchandise: [[new Item("carrot", false, false), 20000]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-41317, 987, "Person", false, "Joaquin the Barkeep", {race: "Nirwaden", faction: "EstolGang", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.1, 0.4], 0, 0, 1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-41320, 993]], merchant: true, merchandise: [[new Item("coins", false, false), 25], [new Item("harstAle", false, false), 13], [new Item("harstBread", false, false), 2]]}));
                        }
                    }
                }

                if (uniqueChars.jimenaLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Jimena the Tailor")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-41369, 1725, "Person", false, "Jimena the Tailor", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.1, 0.4], 0, 0, 1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-41370, 1754]], merchant: true, merchandise: [[new Item("coins", false, false), 233], [new Item("nirwadenClothingM", false, false), 2], [new Item("nirwadenClothingF", false, false), 2], [new Item("frichFurClothing", false, false), 3], [new Item("frichFurMittens", false, false), 4], [new Item("nirwadenGambeson", false, false), 5], [new Item("varnFurClothing", false, false), 1], [new Item("varnFurCloak", false, false), 3], [new Item("varnFurDress", false, false), 2]]}));
                    }
                }

                if (uniqueChars.cedricoLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Cedrico the Carpenter")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-41287, 76, "Person", false, "Cedrico the Carpenter", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.1, 0.4], 0, 0, 1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: false, route:[[-41370, 1754]]}));
                    }
                }

                if (uniqueChars.ernestoLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Ernesto the Engineer")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-41687, -201, "Person", false, "Ernesto the Engineer", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["engineerOutfit", 1.8], weapon: ["none", [0.1, 0.4], 0, 0, 1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-41687, -223]]}));
                    }
                }

                if (uniqueChars.ernestoLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Hugo the Inventor")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-41362, 2789, "Person", false, "Hugo the Inventor", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["engineerOutfit", 2.2], weapon: ["hammer", [2, 1], 1, 12, 1.5], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-41317, 2811]]}));
                    }
                }

                if (uniqueChars.ergokuLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Ergoku")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-40868, 1120, "Person", false, "Ergoku", {race: "Orgell", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.3, 0.3], 0, 0, 1.5], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-40869, 1091]]}));
                    }
                }

                if (uniqueChars.hermanLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Herman the Butcher")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-41526, 228, "Person", false, "Herman the Butcher", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["meatCleaver", [2, 2], 1, 11, 1.6], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: false, route:[[-41370, 1754]]}));
                    }
                }

                if (uniqueChars.agustinLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Agustin the Doctor")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-41296, 2415, "Person", false, "Agustin the Doctor", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["doctorOutfit", 0], weapon: ["none", [0.1, 0.4], 0, 0, 1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-41296, 2444]], merchant: true, merchandise: [[new Item("coins", false, false), 100], [new Item("culprisBandage", false, false), 18], [new Item("healingSalve", false, false), 3], [new Item("wyrExtract", false, false), 2], [new Item("wobeaExtract", false, false), 5]]}));
                    }
                }

                if (uniqueChars.ilihimLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Ilihim")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-40866, 906, "Person", false, "Ihilim", {race: "Orgell", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.3, 0.2], 0, 80, 1.25], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-40874, 940]]}));
                    }
                }

                //ArtificialIntelligenceAccess.push(new Unit(-41851, 2067, "Soldier", false, "Doppelganger", {patrolStops: 0, patrolLoop: true, route:[[-41301, 717]]}));

                if (uniqueChars.leonLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Leon the Toll Master")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-36100, 1334, "Soldier", false, "Leon the Toll Master", {race: "Nirwaden", faction: "Nirwaden", con: 12, speed: 1.2, outfit: ["nirwadenPlateArmour", 17.5], weapon: ["nirineseSabre", [11, 11], 0, 22, 1.25], ranged: [false, "steelBolt", 17, 2350, 20, 17 /3, 0, "none", 2.75], patrolStops: 1, patrolLoop: true, route:[[-36090, 1334]]}));
                    }
                }

                //soldiers
                ArtificialIntelligenceAccess.push(new Unit(-41075, 1693, "Soldier", false, "Prison Guard", {race: "Nirwaden", faction: "Nirwaden", con: 6, speed: 1.5, outfit: ["nirwadenGambeson", 1.5], weapon: ["nirineseSabre", [7, 6], 0, 19, 1.2], ranged: [false, "steelBolt", 15, 2200, 18, 16 /3, 0, "none", 3], patrolStops: 1, patrolLoop: false, route:[[-41065, 1693]]}));
                ArtificialIntelligenceAccess.push(new Unit(-36237, 1449, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 6, speed: 1.5, outfit: ["nirwadenMorionArmour", 12.5], weapon: ["nirineseSabre", [9, 9], 0, 21, 1.2], ranged: [false, "steelBolt", 15, 2200, 18, 16 /3, 0, "none", 3], patrolStops: 1, patrolLoop: false, route:[[-36206, 1444]]}));
                ArtificialIntelligenceAccess.push(new Unit(-36241, 1195, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 8, speed: 1.3, outfit: ["nirwadenMorionArmour", 13], weapon: ["nirineseSabre", [9, 10], 0, 21, 1.2], ranged: [false, "steelBolt", 16, 2200, 18, 16 /3, 0, "none", 3.5], patrolStops: 1, patrolLoop: false, route:[[-36206, 1195]]}));

                ArtificialIntelligenceAccess.push(new Unit(-40371, 1452, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 6, speed: 1.5, outfit: ["nirwadenMorionArmour", 12.5], weapon: ["nirineseSabre", [10, 10], 0, 21, 1.2], ranged: [false, "steelBolt", 15.5, 2200, 19, 16 /3, 0, "none", 3.25], patrolStops: 1, patrolLoop: false, route:[[-40371, 1441]]}));
                ArtificialIntelligenceAccess.push(new Unit(-40371, 1177, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 8, speed: 1.3, outfit: ["nirwadenMorionArmour", 13], weapon: ["nirineseSabre", [9, 11], 0, 21, 1.2], ranged: [false, "steelBolt", 14, 2200, 17, 16 /3, 0, "none", 3.35], patrolStops: 1, patrolLoop: false, route:[[-40371, 1195]]}));

                //civvies
                ArtificialIntelligenceAccess.push(new Unit(-40509, 2891, "Person", false, "Nirwaden Fisherman", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["none", [0.15, 0.3], 0, 0, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-40504, 2891]]}));
                ArtificialIntelligenceAccess.push(new Unit(-39893, 2431, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["none", [0.15, 0.3], 0, 0, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 6, patrolLoop: true, route:[[-39893, 2431], [-40654, 2423], [-40695, 1374], [-46061, 1330], [-40695, 1374], [-40654, 2423]]}));
                ArtificialIntelligenceAccess.push(new Unit(-39863, 679, "Person", false, "Nirwaden Dockworker", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["varnFurClothing", 0], weapon: ["crateLight", [0.15, 0.3], 0, 0, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 6, patrolLoop: true, route:[[-40547, 677], [-40540, 40], [-40810, 29], [-40804, -173], [-40675, 684], [-39863, 679]]}));
                ArtificialIntelligenceAccess.push(new Unit(-39899, 790, "Person", false, "Nirwaden Dockworker", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["crateDark", [0.15, 0.3], 0, 0, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 6, patrolLoop: true, route:[[-40993, 786], [-40997, -317], [-40837, -321], [-40997, -317], [-40993, 786], [-39899, 790]]}));
                ArtificialIntelligenceAccess.push(new Unit(-40150, 2425, "Person", false, "Nirwaden Delivery Worker", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["varnFurClothing", 0], weapon: ["basketLight", [0.15, 0.3], 0, 0, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 10, patrolLoop: true, route:[[-40146, 2500], [-41017, 2635], [-41819, 2587],[-41734, 1410], [-45031, 1422], [-41734, 1410],[-41819, 2587], [-41017, 2635], [-40146, 2500], [-40150, 2425]]}));
                ArtificialIntelligenceAccess.push(new Unit(-40170, 226, "Person", false, "Nirwaden Dockworker", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["crateLight", [0.15, 0.3], 0, 0, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 7, patrolLoop: true, route:[[-40172, 137], [-40897, 34], [-40936, -227], [-41012, -228], [-41061, 73], [-40097, 90], [-40170, 226]]}));
                ArtificialIntelligenceAccess.push(new Unit(-40783, 1651, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["none", [0.2, 0.35], 0, 0, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 8, patrolLoop: true, route:[[40788, 1896], [-41197, 1896], [-41222, 1256], [-46007, 1236], [-41222, 1256], [-41197, 1896], [40788, 1896], [-40783, 1651]]}));

                var vendorName = "Shady Vendor";
                if (player.title == "Nobility" || player.title == "Royalty" || player.title == "Highfolk") //rich folks don't have the street smarts to spot gang members on the street
                {
                    vendorName = "Street Vendor";
                }
                ArtificialIntelligenceAccess.push(new Unit(-41381, 933, "Person", false, vendorName, {race: "Nirwaden", faction: "EstolGang", personality: "calculated", outfit: ["none", 0], weapon: ["basketDark", [0.1, 0.4], 0, 0, 1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-41381, 930]], merchant: true, merchandise: [[new Item("coins", false, false), 18], [new Item("kolumPowder", false, false), 6]]}));

                if (Math.random() > 0.6)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-39838, 2636, "Person", false, "Nirwaden Fisherman", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["fishingpole", [0.1, 0.2], 0, 80, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-39829, 2653]]}));
                }
                else
                {
                    if (Math.random() > 0.75)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-39838, 2636, "Person", false, "Nirwaden Fisherman", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["fishingpole", [0.1, 0.2], 0, 80, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-39829, 2653]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-39852, 2530, "Person", false, "Nirwaden Fisherman", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["fishingpole", [0.1, 0.2], 0, 80, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-39848, 2530]]}));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-39852, 2530, "Person", false, "Nirwaden Fisherman", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["fishingpole", [0.1, 0.2], 0, 80, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-39848, 2530]]}));
                    }
                }

                if (Math.random() > 0.5)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-40478, 2130, "Person", false, "Nirwaden Fisherman", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["none", [0.1, 0.2], 0, 80, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-40472, 2124]]}));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(-40089, 1817, "Person", false, "Nirwaden Fisherman", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["fishingpole", [0.1, 0.2], 0, 80, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-40080, 1800]]}));
                }

                if (change == "e3" || change == "s1e3" || change == "n1e3")
                {
                    quests.atalinToll = false;
                }
                scenicList.push(new Scenery("event", -40565, 1344, 0, "atalinTollBridgeValidation"));
                //PROPS

                //scenicList.push(new Scenery("skeleton", -19230, 5008, 5.12, 1.75));

                //CREATURES
                //ArtificialIntelligenceAccess.push(new Unit(-13935, 2270, "Grib", false, "docile"));
                //ArtificialIntelligenceAccess.push(new Unit(-14477, 1925, "Viper", false, "Slib"));
                //ArtificialIntelligenceAccess.push(new Unit(-14087, 1359, "Lizard", true, "Lib"));
                //ArtificialIntelligenceAccess.push(new Unit(-14501, 3283, "BlackBear", false, "Clib"));
                //ArtificialIntelligenceAccess.push(new Unit(-15119, 2314, "Varn", true, "Flib"));
                //ArtificialIntelligenceAccess.push(new Unit(-13713, 5329, "Narthwarp", false, "silwil"));
                //scenicList.push(new Scenery("ulgoyPlant", -16488, 3908, 4.9, 7));
                //ArtificialIntelligenceAccess.push(new Unit(-16473, 3885, "Ulgoy", "giant", "The Really Big Plant"));
                //ArtificialIntelligenceAccess.push(new Unit(-16247, 3330, "Boar", true, "Tambor"));
                //ArtificialIntelligenceAccess.push(new Unit(-14353, 3844, "Shehid", true, "sheta"));
                //scenicList.push(new Scenery("beeHive", -15375 , -2055, 4.5, true));

                //Build Scenery

                //trees in the wuntol woods.
                scenicList.push(new Scenery("pineTree", -13696, 1772, 1.3, true));

                //Plants of the wuntol woods
                //scenicList.push(new Scenery("neprilnePlant", -17425 , 3993, -5.8, true));
                //scenicList.push(new Scenery("pluttPlant", -16685 , 4251, 2.4, true));
                //scenicList.push(new Scenery("culprisPlant", -21156 , 617, -3.5, true));
                //scenicList.push(new Scenery("stomwikPlant", -18732 , -2343, 6, true));
                //scenicList.push(new Scenery("akerPlant", -14491 , 5755, 1, true));
                //scenicList.push(new Scenery("glinPlant", -15944 , -2502, -7.789, true));
                //scenicList.push(new Scenery("ogardPlant", -16292 , -2231, 0, true));
                //scenicList.push(new Scenery("wyrPlant", -15134 , 2399, 2.8, true));
                //scenicList.push(new Scenery("cyrinthilimPlant", -21038 , -2478, 4, true));

                //buildings
                    //dock
                scenicList.push(new Scenery("floatingBoat", -40085, 2701, -2, true));
                scenicList.push(new Scenery("floatingBoat", -39940, 2336, -0.8, true));
                scenicList.push(new Scenery("blood", -40460, 2114, 9.22, 5, 0.3));
                scenicList.push(new Scenery("nirwadenGoods", -40443, 2145, 1, 8));
                scenicList.push(new Scenery("nirwadenGoods", -40435, 2119, 1, 20));
                scenicList.push(new Scenery("floatingBoat", -39815, 2119, -0.35, true));
                scenicList.push(new Scenery("floatingBoat", -40237, 1726, -2.79, true));
                scenicList.push(new Scenery("item", -40425, 2173, 0, "nirwaden", ["bucketOfWater", 1, -4]));
                scenicList.push(new Scenery("nirwadenPump", -40433, 2266, -1/2 * Math.PI, true));
                scenicList.push(new Scenery("nirwadenPump", -40433, 387, -1/2 * Math.PI, true));
                scenicList.push(new Scenery("floatingBoat", -40106, 917, 0.55, true));
                scenicList.push(new Scenery("floatingBoat", -39926, 524, 2.5, true));
                scenicList.push(new Scenery("floatingBoat", -39899, 323, -6.65, true));
                scenicList.push(new Scenery("floatingBoat", -40116, 309, 7.8, true));
                scenicList.push(new Scenery("basket", -40152, 2391, -1.1, 1, [1]));
                    //harbor shop
                scenicList.push(new Scenery("nirwadenBuilding1", -40547, 2837, 0, true));
                scenicList.push(new Scenery("boat", -40712, 2720, 0.6, true));
                scenicList.push(new Scenery("boat", -40704, 2931, -0.4, true));
                scenicList.push(new Scenery("nirwadenMueble", -40600, 2753, 0, 1));
                scenicList.push(new Scenery("nirwadenMueble", -40465, 2860, 1/2 * Math.PI, 7));
                scenicList.push(new Scenery("nirwadenMueble", -40478, 2860, 1/2 * Math.PI, 7));
                scenicList.push(new Scenery("item", -40473, 2823, 0, "nirwaden", ["fishingpole", 1, -5]));
                scenicList.push(new Scenery("item", -40471, 2889, 0, "nirwaden", ["fishingpole", 1, -5]));
                    //customs house
                scenicList.push(new Scenery("nirwadenBuilding1", -40547, -173, 0, true));
                scenicList.push(new Scenery("nirwadenMueble", -40552, -104, 0, 1, 1.15));
                scenicList.push(new Scenery("item", -40531, -103, 2, "nirwaden", ["paperwork", 1, -9]));
                scenicList.push(new Scenery("item", -40565, -105, 0, "nirwaden", ["paperwork", 1, -9]));
                scenicList.push(new Scenery("item", -40548, -104, 0, "nirwaden", ["paperwork", 1, -9]));
                scenicList.push(new Scenery("crate", -40495, -259, -6.5/4 * Math.PI, 1, [1.2]));
                scenicList.push(new Scenery("crate", -40541, -278, 1/5 * Math.PI, 1, [1.2]));
                scenicList.push(new Scenery("crate", -40599, -221, 2.3, 2, [1.2]));
                scenicList.push(new Scenery("crate", -40488, -157, 6.6, 1, [1.55]));
                scenicList.push(new Scenery("crate", -40699, -270, -10, 1, [1.33]));
                scenicList.push(new Scenery("crate", -40769, -319, 11, 1, [1.2]));
                scenicList.push(new Scenery("crate", -40844, -243, 17, 2, [1.25]));
                scenicList.push(new Scenery("crate", -40707, -96, -19, 2, [1.4]));
                scenicList.push(new Scenery("crate", -40462, 484, -7.14, 2, [1.1]));
                scenicList.push(new Scenery("crate", -40437, 568, 8.1, 2, [1.2]));
                scenicList.push(new Scenery("crate", -40342, 243, 20, 1, [1.2]));
                scenicList.push(new Scenery("crate", -40253, 231, -1.67, 2, [1.6]));
                scenicList.push(new Scenery("crate", -40126, 604, 0.9, 1, [1.15]));
                    //storage warehouse
                scenicList.push(new Scenery("nirwadenBuilding2", -41119, 2831, 0, true));
                if (quests.atalinStoragePurchased)
                {
                    scenicList.push(new Scenery("crate", -41061, 2917, 1, 4, [1.6, "atalinStorageCrate1", 5, [], false, 0]));
                }
                else
                {
                    scenicList.push(new Scenery("crate", -41061, 2917, 1, 2, [1.6]));
                }
                scenicList.push(new Scenery("crate", -41153, 2912, 6.66666, 1, [1.55]));
                scenicList.push(new Scenery("crate", -41134, 2826, 4.891231345, 1, [1.41]));
                scenicList.push(new Scenery("crate", -41173, 2745, 2.4444, 2, [1.65]));
                scenicList.push(new Scenery("crate", -41117, 2781, 3.3332, 1, [1.1]));
                scenicList.push(new Scenery("crate", -41058, 2742, 5.1, 2, [1.2]));
                    //Atalin City Bank
                scenicList.push(new Scenery("nirwadenBuilding3", -41123, 2088, 0, true));
                scenicList.push(new Scenery("nirwadenMueble", -41181, 2034, 0, 1));
                scenicList.push(new Scenery("basket", -41278, 2132, -1.2, 2, [1.4]));
                scenicList.push(new Scenery("basket", -41243, 2132, 3.9, 1, [1.44]));
                scenicList.push(new Scenery("basket", -41208, 2132, 2.2, 2, [1.425]));
                scenicList.push(new Scenery("basket", -41173, 2132, 4.5, 1, [1.43]));
                scenicList.push(new Scenery("crate", -41065, 2006, 7.66666, 1, [1.45]));
                scenicList.push(new Scenery("crate", -40977, 2001, 5.891231345, 1, [1.3]));
                scenicList.push(new Scenery("crate", -40971, 2070, -1.4444, 2, [1.7]));
                scenicList.push(new Scenery("crate", -40976, 2170, -2.3332, 1, [1.2]));
                scenicList.push(new Scenery("crate", -41032, 2057, -2.1, 2, [1.26]));
                scenicList.push(new Scenery("crate", -41038, 2142, 3.55, 2, [1.2]));
                scenicList.push(new Scenery("nirwadenGoods", -41110, 2139, 5, 9));
                scenicList.push(new Scenery("nirwadenGoods", -41114, 2170, 8, 9));
                scenicList.push(new Scenery("nirwadenGoods", -41111, 2199, 4.21, 9));
                scenicList.push(new Scenery("nirwadenGoods", -41020, 2195, 7, 9));
                scenicList.push(new Scenery("nirwadenGoods", -41063, 2202, 1.61, 9));
                //dock buildings
                scenicList.push(new Scenery("nirwadenBuilding1", -41360, 2416, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -41025, 1697, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -41028, 2378, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -40548, 1634, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding4", -40780, 1017, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding4", -41431, 1039, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -41245, 808, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -41245, 121, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -41377, 1697, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -41345, 2831, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -41607, -172, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -41593, 230, 0, true));
                    //estolGang hq
                scenicList.push(new Scenery("trapdoor", -41189, 724, 0 * Math.PI, [955, 331], "atalinDrugLab"));
                scenicList.push(new Scenery("crate", -41274, 872, -4.3332, 1, [1.2]));
                scenicList.push(new Scenery("crate", -41185, 899, -2.9, 2, [1]));
                scenicList.push(new Scenery("crate", -41177, 809, 3.78, 1, [1.1]));
                    //brindis: bar and brothel
                scenicList.push(new Scenery("bed", -41479, 1140, -1/2 * Math.PI, false));
                scenicList.push(new Scenery("bed", -41565, 935, 1/2 * Math.PI, false));
                scenicList.push(new Scenery("nirwadenMueble", -41258, 1138, 1.2, 6));
                scenicList.push(new Scenery("nirwadenMueble", -41334, 1139, 1.9, 6));
                scenicList.push(new Scenery("nirwadenMueble", -41299, 1140, 0, 2));
                scenicList.push(new Scenery("nirwadenMueble", -41347, 1015, 0, 7));
                scenicList.push(new Scenery("barrel", -41397, 992, 1 * Math.PI, 0.9));
                scenicList.push(new Scenery("item", -41282, 1126, 0, "nirwaden", ["harstAle", 1, -2]));
                ArtificialIntelligenceAccess.push(new Unit(-41258, 1138, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.15, 0.55], 0, 0, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[-41562, 1135]]}));
                    //riverfront barracks
                scenicList.push(new Scenery("bed", -40516, 1730, -1/2 * Math.PI, false));
                scenicList.push(new Scenery("bed", -40516, 1680, 1/2 * Math.PI, false));
                scenicList.push(new Scenery("bed", -40516, 1630, -1/2 * Math.PI, false));
                scenicList.push(new Scenery("bed", -40516, 1580, 1/2 * Math.PI, false));
                scenicList.push(new Scenery("crate", -40484, 1537, 0.16, 1, [1.3]));
                    //Atalin City Prison
                scenicList.push(new Scenery("trapdoor", -41071, 1774, 0 * Math.PI, [764, 513], "atalinCityPrison"));
                scenicList.push(new Scenery("nirwadenMueble", -41047, 1598, 0, 3));
                scenicList.push(new Scenery("item", -41069, 1597, 0, "nirwaden", ["harstAle", 1, -4]));
                scenicList.push(new Scenery("item", -41017, 1598, 0, "nirwaden", ["harstBread", 1, -7]));
                scenicList.push(new Scenery("item", -41042, 1608, 0, "nirwaden", ["pluttBerries", 1, -4]));
                scenicList.push(new Scenery("crate", -40976, 1774, 1.54, 2, [1.6]));
                scenicList.push(new Scenery("crate", -40959, 1597, 9.3, 1, [0.95]));
                    //riverfront outfitter's
                scenicList.push(new Scenery("nirwadenMueble", -41309, 1755, 1/2 * Math.PI, 3));
                scenicList.push(new Scenery("nirwadenMueble", -41309, 1636, 1/2 * Math.PI, 3));
                scenicList.push(new Scenery("nirwadenMueble", -41442, 1800, 0, 2));
                scenicList.push(new Scenery("nirwadenMueble", -41368, 1756, 0.23, 6));
                scenicList.push(new Scenery("loom", -41371, 1798, -0.1, true));
                scenicList.push(new Scenery("nirwadenMueble", -41402, 1583, 0, 7));
                scenicList.push(new Scenery("nirwadenMueble", -41390, 1583, 0, 7));
                scenicList.push(new Scenery("item", -41453, 1614, 0, "nirwaden", ["bucketOfWater", 1, -5]));
                scenicList.push(new Scenery("item", -41450, 1584, 0, "nirwaden", ["frichPelt", 2, -4]));
                scenicList.push(new Scenery("item", -41420, 1584, 0, "nirwaden", ["frichPelt", 2, -4]));
                scenicList.push(new Scenery("item", -41390, 1584, 0, "nirwaden", ["frichPelt", 2, -4]));
                scenicList.push(new Scenery("item", -41358, 1586, 0, "nirwaden", ["varnPelt", 2, -4]));
                scenicList.push(new Scenery("item", -41325, 1586, 0, "nirwaden", ["cloth", 4, -11]));
                scenicList.push(new Scenery("item", -41300, 1586, 0, "nirwaden", ["cloth", 4, -11]));
                scenicList.push(new Scenery("item", -41307, 1657, 0, "nirwaden", ["nirwadenClothingM", 1, -25]));
                scenicList.push(new Scenery("item", -41305, 1749, 0, "nirwaden", ["nirwadenClothingF", 1, -28]));
                scenicList.push(new Scenery("item", -41441, 1807, 0, "nirwaden", ["frichFurMittens", 1, -9]));
                scenicList.push(new Scenery("item", -41437, 1794, 0, "nirwaden", ["frichFurMittens", 1, -9]));
                scenicList.push(new Scenery("item", -41445, 1781, 0, "nirwaden", ["frichFurMittens", 1, -9]));
                ArtificialIntelligenceAccess.push(new Unit(-41427, 1609, "Person", false, "Wash Boy", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["varnFurClothing", 0], weapon: ["none", [0.1, 0.05], 0, 0, 1.1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], kid: true, patrolStops: 0, patrolLoop: true, route:[[-41562, 1135]]}));
                    //medical clinic
                scenicList.push(new Scenery("lab", -41297, 2478, 0, true));
                scenicList.push(new Scenery("nirwadenMueble", -41337, 2520, 0, 3));
                scenicList.push(new Scenery("nirwadenMueble", -41443, 2305, 0, 6));
                scenicList.push(new Scenery("nirwadenMueble", -41297, 2320, 0, 2));
                scenicList.push(new Scenery("item", -41277, 2318, 0, "nirwaden", ["culprisBandage", 4, -24]));
                scenicList.push(new Scenery("item", -41280, 2331, 0, "nirwaden", ["vialOfWater", 1, -2]));
                scenicList.push(new Scenery("item", -41290, 2327, 0, "nirwaden", ["vialOfWater", 1, -2]));
                scenicList.push(new Scenery("item", -41300, 2310, 0, "nirwaden", ["culprisLeaf", 2, -10]));
                scenicList.push(new Scenery("item", -41277, 2306, 0, "nirwaden", ["culprisLeaf", 1, -5]));
                scenicList.push(new Scenery("item", -41314, 2314, 0, "nirwaden", ["wyrLeaf", 2, -12]));
                scenicList.push(new Scenery("item", -41310, 2327, 0, "nirwaden", ["erguerPaste", 2, -11]));
                scenicList.push(new Scenery("item", -41443, 2307, 0, "nirwaden", ["healingSalve", 1, -25]));
                    //carpentry (furniture store)
                scenicList.push(new Scenery("nirwadenMueble", -41243, 180, 0, 3)); //long table
                scenicList.push(new Scenery("nirwadenMueble", -41183, 21, 1/2 * Math.PI, 2)); //square table
                scenicList.push(new Scenery("nirwadenMueble", -41328, 35, 1/2 * Math.PI, 1)); //short bench
                scenicList.push(new Scenery("nirwadenMueble", -41328, 80, 1/2 * Math.PI, 1)); //short bench
                scenicList.push(new Scenery("item", -41281, 184, 0, "nirwaden", ["woodenBowl", 2, -2]));
                scenicList.push(new Scenery("item", -41298, 165, 0, "nirwaden", ["woodenBowl", 1, -1]));
                scenicList.push(new Scenery("item", -41216, 188, 0, "nirwaden", ["staff", 1, -4]));
                scenicList.push(new Scenery("item", -41243, 181, 0, "nirwaden", ["longbow", 1, -7]));
                scenicList.push(new Scenery("nirwadenMueble", -41234, 23, 1.38, 6));
                scenicList.push(new Scenery("boat", -41228, -75, -0.55, true));
                scenicList.push(new Scenery("crate", -41348, -54, 12, 1, [1.16]));
                scenicList.push(new Scenery("crate", -41282, -43, 9.53, 2, [1.02]));
                scenicList.push(new Scenery("item", -41328, 14, 0, "nirwaden", ["adhesive", 2, -5]));
                scenicList.push(new Scenery("item", -41328, 39, 0, "nirwaden", ["adhesive", 2, -5]));
                scenicList.push(new Scenery("item", -41328, 61, 0, "nirwaden", ["wood", 3, -7]));
                scenicList.push(new Scenery("item", -41328, 83, 0, "nirwaden", ["wood", 3, -7]));
                scenicList.push(new Scenery("item", -41328, 108, 0, "nirwaden", ["wood", 3, -7]));
                scenicList.push(new Scenery("item", -41195, 170, 0, "nirwaden", ["wood", 2, -5]));
                scenicList.push(new Scenery("item", -41188, 33, 0, "nirwaden", ["hammer", 1, -8]));
                    //butcher's
                scenicList.push(new Scenery("nirwadenMueble", -41550, 338, 0, 1)); //short bench
                scenicList.push(new Scenery("nirwadenMueble", -41600, 338, 0, 1)); //short bench
                scenicList.push(new Scenery("nirwadenMueble", -41670, 312, 1/2 * Math.PI, 1)); //short bench
                scenicList.push(new Scenery("nirwadenMueble", -41650, 312, 1/2 * Math.PI, 1)); //short bench
                scenicList.push(new Scenery("blood", -41586, 157, 10, 4, 2.3));
                scenicList.push(new Scenery("deadNaaprid", -41578, 175, 8, 2));
                scenicList.push(new Scenery("blood", -41578, 175, 2, 2, 0.9));
                scenicList.push(new Scenery("item", -41525, 339, 0, "nirwaden", ["rawNaapridFlesh", 2, -11]));
                scenicList.push(new Scenery("item", -41545, 339, 0, "nirwaden", ["rawNaapridFlesh", 2, -11]));
                scenicList.push(new Scenery("item", -41565, 339, 0, "nirwaden", ["rawNaapridFlesh", 2, -11]));
                scenicList.push(new Scenery("item", -41585, 339, 0, "nirwaden", ["rawNaapridFlesh", 2, -11]));
                scenicList.push(new Scenery("item", -41605, 339, 0, "nirwaden", ["rawNaapridFlesh", 2, -11]));
                scenicList.push(new Scenery("item", -41625, 339, 0, "nirwaden", ["rawNaapridFlesh", 2, -11]));
                scenicList.push(new Scenery("item", -41660, 345, 0, "nirwaden", ["rawPorkbelly", 1, -14]));
                scenicList.push(new Scenery("item", -41660, 325, 0, "nirwaden", ["rawPorkbelly", 1, -14]));
                scenicList.push(new Scenery("item", -41650, 300, 0, "nirwaden", ["rawBacon", 1, -6]));
                scenicList.push(new Scenery("item", -41675, 297, 0, "nirwaden", ["rawBacon", 1, -6]));
                scenicList.push(new Scenery("item", -41659, 288, 0, "nirwaden", ["rawBacon", 1, -6]));
                    //engineer place (south)
                scenicList.push(new Scenery("forger", -41665, -270, -1/2 * Math.PI, true));
                scenicList.push(new Scenery("nirwadenMueble", -41664, -171, 0, 1)); //short bench
                scenicList.push(new Scenery("nirwadenMueble", -41686, -224, 0.0002, 6)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -41528, -252, -1/2 * Math.PI, 1)); //short bench
                scenicList.push(new Scenery("nirwadenMueble", -41538, -71, Math.PI, 2)); //square table
                scenicList.push(new Scenery("item", -41687, -172, 0, "nirwaden", ["copperWire", 1, -9]));
                scenicList.push(new Scenery("item", -41667, -172, 0, "nirwaden", ["copperWire", 1, -9]));
                scenicList.push(new Scenery("item", -41647, -172, 0, "nirwaden", ["iron", 2, -9]));
                scenicList.push(new Scenery("item", -41526, -275, 0, "nirwaden", ["copperWire", 1, -9]));
                scenicList.push(new Scenery("item", -41526, -255, 0, "nirwaden", ["salt", 3, -15]));
                scenicList.push(new Scenery("item", -41526, -235, 0, "nirwaden", ["adhesive", 5, -20]));
                scenicList.push(new Scenery("item", -41552, -281, 0, "nirwaden", ["bucketOfWater", 1, -7]));
                scenicList.push(new Scenery("item", -41525, -81, 0, "nirwaden", ["coal", 1, -8]));
                scenicList.push(new Scenery("item", -41543, -64, 0, "nirwaden", ["shotShooter", 1, -18]));
                scenicList.push(new Scenery("item", -41555, -70, 0, "nirwaden", ["bullet", 8, -5]));
                    //engineer place (north)
                scenicList.push(new Scenery("forger", -41285, 2925, 0, true));
                scenicList.push(new Scenery("nirwadenMueble", -41293, 2724 + 40, 0, 1)); //short bench
                scenicList.push(new Scenery("nirwadenMueble", -41333, 2724 + 40, 0, 1)); //short bench
                scenicList.push(new Scenery("nirwadenMueble", -41373, 2724 + 40, 0, 1)); //short bench

                scenicList.push(new Scenery("nirwadenMueble", -41290, 2873, 0, 1)); //short bench
                scenicList.push(new Scenery("nirwadenMueble", -41429, 2910, 1/2 * Math.PI, 1)); //short bench
                scenicList.push(new Scenery("cauldron", -41279, 2723, 3.15, true));
                scenicList.push(new Scenery("anvil", -41282, 2813, 1/2 * Math.PI, true));
                scenicList.push(new Scenery("item", -41271, 2764, 0, "nirwaden", ["copperWire", 1, -9]));
                scenicList.push(new Scenery("item", -41293, 2764, 0, "nirwaden", ["copperWire", 1, -9]));
                scenicList.push(new Scenery("item", -41316, 2764, 0, "nirwaden", ["coal", 2, -16]));
                scenicList.push(new Scenery("item", -41350, 2764, 0, "nirwaden", ["coal", 2, -16]));
                scenicList.push(new Scenery("item", -41370, 2764, 0, "nirwaden", ["iron", 3, -15]));
                scenicList.push(new Scenery("item", -41396, 2764, 0, "nirwaden", ["iron", 3, -15]));
                scenicList.push(new Scenery("item", -41303, 2871, 0, "nirwaden", ["steel", 1, -12]));
                scenicList.push(new Scenery("item", -41275, 2873, 0, "nirwaden", ["steel", 1, -12]));
                scenicList.push(new Scenery("item", -41428, 2936 + 9, 0, "nirwaden", ["copper", 1, -11]));
                scenicList.push(new Scenery("item", -41428, 2916 + 9, 0, "nirwaden", ["copper", 1, -11]));
                scenicList.push(new Scenery("item", -41428, 2896 + 9, 0, "nirwaden", ["copper", 1, -11]));
                scenicList.push(new Scenery("item", -41428, 2873 + 9, 0, "nirwaden", ["copperDust", 2, -19]));
                    //Arcus Mineral Co. HQ
                scenicList.push(new Scenery("nirwadenMueble", -40867, 1053, Math.PI, 2)); //square table
                scenicList.push(new Scenery("nirwadenMueble", -40867, 1020, Math.PI, 2)); //square table
                scenicList.push(new Scenery("nirwadenMueble", -40867, 980, Math.PI, 2)); //square table
                scenicList.push(new Scenery("nirwadenMueble", -40921, 1015, -0.0012, 6)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -40921, 974, 0.0016, 6)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -40912, 1053, -0.0008, 6)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -40867, 1094, 0.0023, 6)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -40871, 938, 0.0013, 6)); //stool
                scenicList.push(new Scenery("item", -40870, 1060, 0, "nirwaden", ["paperwork", 1, -9]));
                scenicList.push(new Scenery("item", -40875, 1051, 0, "nirwaden", ["paperwork", 1, -9]));
                scenicList.push(new Scenery("item", -40886, 969, 0, "nirwaden", ["paperwork", 1, -9]));
                scenicList.push(new Scenery("item", -40869, 991, 0, "nirwaden", ["copper", 1, -10]));
                scenicList.push(new Scenery("item", -40867, 1021, 0, "nirwaden", ["pickaxe", 1, -8]));
                scenicList.push(new Scenery("nirwadenMueble", -40636, 967, 0, 1)); //short bench
                scenicList.push(new Scenery("nirwadenMueble", -40670, 967, 0, 1)); //short bench
                scenicList.push(new Scenery("nirwadenMueble", -40719, 967, 0, 1)); //short bench
                scenicList.push(new Scenery("nirwadenMueble", -40723, 1066, 0, 1)); //short bench
                scenicList.push(new Scenery("item", -40610, 969, 0, "nirwaden", ["copper", 1, -12]));
                scenicList.push(new Scenery("item", -40632, 969, 0, "nirwaden", ["copper", 1, -12]));
                scenicList.push(new Scenery("item", -40655, 969, 0, "nirwaden", ["rawGold", 1, -22]));
                scenicList.push(new Scenery("item", -40680, 969, 0, "nirwaden", ["ironOre", 1, -7]));
                scenicList.push(new Scenery("item", -40706, 969, 0, "nirwaden", ["ironOre", 1, -7]));
                scenicList.push(new Scenery("item", -40728, 969, 0, "nirwaden", ["coal", 1, -9]));
                scenicList.push(new Scenery("item", -40750, 969, 0, "nirwaden", ["coal", 1, -9]));


                //signs
                scenicList.push(new Scenery("sign", -40635, 1167, Math.PI, 3, "Arcus Mineral Co. HQ"));
                scenicList.push(new Scenery("sign", -41712, 139, -1/2 * Math.PI, 3, "Butchery Shop"));
                scenicList.push(new Scenery("sign", -41127, 184, 1/2 * Math.PI, 3, "Wooden Wonders"));
                scenicList.push(new Scenery("sign", -41000, 2886, 1/2 * Math.PI, 3, "Riverfront Storage"));
                scenicList.push(new Scenery("sign", -40664, 2772, -1/2 * Math.PI, 3, "Harbour Office"));
                scenicList.push(new Scenery("sign", -40662, -89, -1/2 * Math.PI, 3, "Atalin Customs House"));
                scenicList.push(new Scenery("sign", -41234, 1942, 0, 3, "Atalin City Bank"));
                scenicList.push(new Scenery("sign", -40666, 1716, -1/2 * Math.PI, 3, "Atalin Barracks: Riverfront"));
                scenicList.push(new Scenery("sign", -40906, 1624, 1/2 * Math.PI, 3, "Atalin City Prison"));
                scenicList.push(new Scenery("sign", -41493, 1627, -1/2 * Math.PI, 3, "Riverfront Outfitter's"));
                scenicList.push(new Scenery("sign", -41476, 2351, -1/2 * Math.PI, 3, "The Atalin Medical Clinic"));

                if (player.gamemode == "protagonist" || player.matureContentFilter == true)
                {
                    if (player.gamemode == "protagonist")
                    {
                        scenicList.push(new Scenery("sign", -41290, 1187, Math.PI, 3, "The Super Buddy Fun House")); //owned by estol gang
                        ArtificialIntelligenceAccess.push(new Unit(-41501, 998, "Person", false, "Buddy", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["northernClothing", 0], weapon: ["none", [0.35, 0.6], 0, 1, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[-41562, 1135]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-41562, 1139, "Person", false, "Buddy", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.15, 0.3], 0, 0, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: true, route:[[-41562, 1135]]}));

                    }
                    else
                    {
                        scenicList.push(new Scenery("sign", -41290, 1187, Math.PI, 3, "The Riverfront Inn")); //owned by estol gang
                        ArtificialIntelligenceAccess.push(new Unit(-41501, 998, "Person", false, "Traveler", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["northernClothing", 0], weapon: ["none", [0.35, 0.6], 0, 1, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[-41562, 1135]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-41562, 1139, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.15, 0.3], 0, 0, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: true, route:[[-41562, 1135]]}));

                    }
                }
                else
                {
                    if (Math.random() > 0.5)
                    {
                        if (Math.random() > 0.5)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-41501, 998, "Person", false, "John", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["varnFurClothing", 0], weapon: ["none", [0.3, 0.55], 0, 1, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[-41562, 1135]]}));
                        }
                        else
                        {
                            if (Math.random() > 0.5)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(-41501, 998, "Person", false, "John", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["frichFurClothing", 0], weapon: ["none", [0.3, 0.55], 0, 1, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[-41562, 1135]]}));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(-41501, 998, "Soldier", false, "John", {race: "Nirwaden", faction: "EstolGang", con: 9, speed: 1.4, outfit: ["blackBearLeatherArmour", 3], weapon: ["nirineseSabre", [9, 10], 0, 21, 1.3], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[813, 325]]}));
                            }
                        }
                    }
                    else
                    {
                        if (Math.random() > 0.5)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-41501, 998, "Person", false, "John", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["frichFurClothing", 0], weapon: ["none", [0.25, 0.55], 0, 1, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[-41562, 1135]]}));
                        }
                        else
                        {
                            if (Math.random() > 0.5)
                            {
                                if (Math.random() > 0.5)
                                {
                                    ArtificialIntelligenceAccess.push(new Unit(-41501, 998, "Person", false, "John", {race: "Freynor", faction: "Freynor", personality: "calculated", outfit: ["northernClothing", 0], weapon: ["none", [0.35, 0.6], 0, 1, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: true, route:[[-41562, 1135]]}));
                                }
                                else
                                {
                                    ArtificialIntelligenceAccess.push(new Unit(-41501, 998, "Soldier", false, "John", {race: "Nirwaden", faction: "EstolGang", con: 3, speed: 1.2, outfit: ["varnFurClothing", 0], weapon: ["hammer", [2, 3], 0, 10, 1.15], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[921, 480]]}));
                                }
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(-41501, 998, "Soldier", false, "John", {race: "Nirwaden", faction: "Nirwaden", con: 8, speed: 1.5, outfit: ["chainArmour", 7], weapon: ["nirineseSabre", [7, 8], 0, 19, 0.9], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: true, route:[]}));
                            }
                        }
                    }
                    ArtificialIntelligenceAccess.push(new Unit(-41562, 1139, "Person", false, "Hooker", {race: "Nirwaden", faction: "EstolGang", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.15, 0.3], 0, 0, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: true, route:[[-41562, 1135]]}));
                    scenicList.push(new Scenery("sign", -41290, 1187, Math.PI, 3, "Brindis: Bar and Brothel")); //owned by estol gang
                }


                //events
                    //boat fishing 1
                if (Math.random() > 0.5)
                {
                    scenicList.push(new Scenery("floatingBoat", -39460, 3091, 0.15, true));
                    ArtificialIntelligenceAccess.push(new Unit(-39460, 3091, "Person", false, "Nirwaden Fisherman", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["fishingpole", [0.1, 0.2], 0, 80, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-39464, 3093]]}));
                }
                else
                {
                    scenicList.push(new Scenery("floatingBoat", -38873, 2620, 3.1, true));
                    ArtificialIntelligenceAccess.push(new Unit(-38872, 2656, "Person", false, "Nirwaden Fisherman", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["fishingpole", [0.1, 0.2], 0, 80, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-38868, 2641]]}));
                }
                    //boat fishing 2
                if (Math.random() > 0.5)
                {
                    scenicList.push(new Scenery("floatingBoat", -39252, 1904, 4.45, true));
                    ArtificialIntelligenceAccess.push(new Unit(-39278, 1903, "Person", false, "Nirwaden Fisherman", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["fishingpole", [0.1, 0.2], 0, 80, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-39265, 1911]]}));
                }
                else
                {
                    scenicList.push(new Scenery("floatingBoat", -38707, 2329, 5.1, true));
                    ArtificialIntelligenceAccess.push(new Unit(-38721, 2335, "Person", false, "Nirwaden Fisherman", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["fishingpole", [0.1, 0.2], 0, 80, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-38723, 2324]]}));
                }
                    //boat fishing 3
                if (Math.random() > 0.5)
                {
                    scenicList.push(new Scenery("floatingBoat", -39585, -540, 6, true));
                    ArtificialIntelligenceAccess.push(new Unit(-39577, -561, "Person", false, "Nirwaden Fisherman", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["fishingpole", [0.1, 0.2], 0, 80, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-39591, -550]]}));
                }
                else
                {
                    scenicList.push(new Scenery("floatingBoat", -38476, -2267, -4.45, true));
                    ArtificialIntelligenceAccess.push(new Unit(-38440, -2256, "Person", false, "Nirwaden Fisherman", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["fishingpole", [0.1, 0.2], 0, 80, 0.5 + (Math.floor(Math.random() * 6) / 10)], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-38461, -2262]]}));
                }
                    //generic traveling merchant with escort
                if (Math.random() > 0.75)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-42558, 1305, "Person", false, "Nirwaden Merchant", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.1, 0.4], 0, 0, 1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 7, patrolLoop: false, route:[[-19029, 1273], [-19023, 1343], [-18339, 1346], [-18357, 1254], [2709, 1351], [2722, 1501], [2722, 1491]], merchant: true, merchandise: [[new Item("coins", false, false), 65], [new Item("harstGrain", false, false), 13], [new Item("redBelliedFalder", false, false), 5], [new Item("garlic", false, false), 2], [new Item("polyapaFruit", false, false), 6], [new Item("chonaFruit", false, false), 5], [new Item("glinMushrooms", false, false), 3], [new Item("curedPork", false, false), 7]]}));
                    var merccSPD = 2;
                    for (var ii = 0; ii < ArtificialIntelligenceAccess.length; ii++)
                    {
                        if (ArtificialIntelligenceAccess[ii].ID == "Nirwaden Merchant")
                        {
                            ArtificialIntelligenceAccess[ii].speed += 0.2;
                            merccSPD = ArtificialIntelligenceAccess[ii].speed;
                            break;
                        }
                    }
                    ArtificialIntelligenceAccess.push(new Unit(-42510, 1305, "Soldier", false, "Hired Blade", {race: "Nirwaden", faction: "Nirwaden", con: 8, speed: merccSPD, outfit: ["chainArmour", 7], weapon: ["nirineseSabre", [7, 8], 0, 19, 0.9], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 3, patrolLoop: true, route:[[-19029, 1273], [-19023, 1343], [-18339, 1346], [-18357, 1254], [2709, 1351], [2774, 1499], [2774, 1484]]}));
                }

                //city orchards
                //row 1
                scenicList.push(new Scenery("polyapaTree", -42049 , 2522, 3, true));
                scenicList.push(new Scenery("polyapaTree", -42353 , 2522, 5, true));
                scenicList.push(new Scenery("polyapaTree", -42654 , 2522, 0, true));
                scenicList.push(new Scenery("polyapaTree", -42950 , 2522, 1.5, true));
                scenicList.push(new Scenery("polyapaTree", -43245 , 2522, -2.5, true));
                scenicList.push(new Scenery("polyapaTree", -43552 , 2522, 4.1233, true));
                scenicList.push(new Scenery("polyapaTree", -43850 , 2522, 8.55, true));
                //row 2
                scenicList.push(new Scenery("chonaTree", -42049 , 2221, 2, true));
                scenicList.push(new Scenery("chonaTree", -42353 , 2221, 10, true));
                scenicList.push(new Scenery("chonaTree", -42654 , 2221, 0.5, true));
                scenicList.push(new Scenery("chonaTree", -42950 , 2221, 7.5, true));
                scenicList.push(new Scenery("chonaTree", -43245 , 2221, -6.5, true));
                scenicList.push(new Scenery("chonaTree", -43552 , 2221, 2.9233, true));
                scenicList.push(new Scenery("chonaTree", -43850 , 2221, 1.55, true));
                //row 3
                scenicList.push(new Scenery("chonaTree", -42049 , 1922, 6, true));
                scenicList.push(new Scenery("chonaTree", -42353 , 1922, 9, true));
                scenicList.push(new Scenery("chonaTree", -42654 , 1922, 2, true));
                scenicList.push(new Scenery("chonaTree", -42950 , 1922, 0, true));
                scenicList.push(new Scenery("chonaTree", -43245 , 1922, -1, true));
                scenicList.push(new Scenery("chonaTree", -43552 , 1922, -4.1233, true));
                scenicList.push(new Scenery("chonaTree", -43850 , 1922, -8.55, true));
                //row 4
                scenicList.push(new Scenery("polyapaTree", -42049 , 1619, -3, true));
                scenicList.push(new Scenery("polyapaTree", -42353 , 1619, -5, true));
                scenicList.push(new Scenery("polyapaTree", -42654 , 1619, 11, true));
                scenicList.push(new Scenery("polyapaTree", -42950 , 1619, 15, true));
                scenicList.push(new Scenery("polyapaTree", -43245 , 1619, 5.2, true));
                scenicList.push(new Scenery("polyapaTree", -43552 , 1619, -7.32233, true));
                scenicList.push(new Scenery("polyapaTree", -43850 , 1619, 14.72, true));

                //----------------------------------------------------------------------- mainroad

                //row 5
                scenicList.push(new Scenery("polyapaTree", -42049 , 1019, -8.8, true));
                scenicList.push(new Scenery("polyapaTree", -42353 , 1019, -7, true));
                scenicList.push(new Scenery("polyapaTree", -42654 , 1019, -1.25, true));
                scenicList.push(new Scenery("polyapaTree", -42950 , 1019, 3.89, true));
                scenicList.push(new Scenery("polyapaTree", -43245 , 1019, 6.2, true));
                scenicList.push(new Scenery("polyapaTree", -43552 , 1019, 2.3, true));
                scenicList.push(new Scenery("polyapaTree", -43850 , 1019, -9, true));

                //row 6
                scenicList.push(new Scenery("chonaTree", -42049 , 717, 10.1, true));
                scenicList.push(new Scenery("chonaTree", -42353 , 717, 11, true));
                scenicList.push(new Scenery("chonaTree", -42654 , 717, 12.5, true));
                scenicList.push(new Scenery("chonaTree", -42950 , 717, 13, true));
                scenicList.push(new Scenery("chonaTree", -43245 , 717, 0.5, true));
                scenicList.push(new Scenery("chonaTree", -43552 , 717, 4.811, true));
                scenicList.push(new Scenery("chonaTree", -43850 , 717, 3.245, true));

                //row 7
                scenicList.push(new Scenery("chonaTree", -42049 , 414, 15.1, true));
                scenicList.push(new Scenery("chonaTree", -42353 , 414, 12, true));
                scenicList.push(new Scenery("chonaTree", -42654 , 414, 11.66, true));
                scenicList.push(new Scenery("chonaTree", -42950 , 414, 13.97, true));
                scenicList.push(new Scenery("chonaTree", -43245 , 414, 7, true));
                scenicList.push(new Scenery("chonaTree", -43552 , 414, -1.9, true));
                scenicList.push(new Scenery("chonaTree", -43850 , 414, -10.2, true));

                //row 8
                scenicList.push(new Scenery("polyapaTree", -42049 , 119, 5.5, true));
                scenicList.push(new Scenery("polyapaTree", -42353 , 119, -6.3, true));
                scenicList.push(new Scenery("polyapaTree", -42654 , 119, -9.9, true));
                scenicList.push(new Scenery("polyapaTree", -42950 , 119, 10.7, true));
                scenicList.push(new Scenery("polyapaTree", -43245 , 119, 7.1, true));
                scenicList.push(new Scenery("polyapaTree", -43552 , 119, -3.4, true));
                scenicList.push(new Scenery("polyapaTree", -43850 , 119, -5, true));

                //e_5 west side
                scenicList.push(new Scenery("nirwadenBuilding4", -44859, -2875, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -44276, -2872, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -44119, -2456, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -44613, -2497, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding3", -44807, -2234, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -45278, -2760, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -45200, -2470, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -45127, -2109, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -45505, -2414, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -45430, -2121, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -44336, -2207, 0, true));
                scenicList.push(new Scenery("nirwadenTiendaD", -44521, -2300, 0, 1));
                scenicList.push(new Scenery("nirwadenTiendaD", -44521, -2200, 0, 0));
                scenicList.push(new Scenery("nirwadenTiendaD", -44521, -2130, 0, 1));
                scenicList.push(new Scenery("nirwadenBuilding3", -45430, -1658, 0, true));
                scenicList.push(new Scenery("nirwadenTiendaU", -44922, -2111, 0, 4));
                scenicList.push(new Scenery("nirwadenTiendaR", -44085, -1873, 0, 0));
                scenicList.push(new Scenery("nirwadenTiendaR", -44091, -1630, 0, 1));
                scenicList.push(new Scenery("nirwadenTiendaD", -44382, -1858, 0, 3));
                scenicList.push(new Scenery("nirwadenTiendaL", -44979, -1661, 0, 5));
                scenicList.push(new Scenery("nirwadenTiendaU", -44677, -1863, 0, 2));
                scenicList.push(new Scenery("nirwadenTiendaD", -44113, -1197, 0, 0));
                scenicList.push(new Scenery("nirwadenTiendaD", -44524, -1582, 0, 0));
                scenicList.push(new Scenery("nirwadenTiendaL", -44696, -1306, 0, 1));
                scenicList.push(new Scenery("nirwadenTiendaR", -44113, -928, 0, 2));
                scenicList.push(new Scenery("nirwadenTiendaU", -44765, -1153, 0, 3));
                scenicList.push(new Scenery("nirwadenTiendaR", -44817, -1296, 0, 2));
                scenicList.push(new Scenery("nirwadenTiendaL", -45265, -1407, 0, 1));
                scenicList.push(new Scenery("nirwadenTiendaR", -45399, -1414, 0, 0));
                scenicList.push(new Scenery("nirwadenTiendaD", -45239, -1103, 0, 5));
                scenicList.push(new Scenery("nirwadenTiendaD", -44536, -791, 0, 0));
                scenicList.push(new Scenery("nirwadenTiendaU", -45234, -985, 0, 2));
                scenicList.push(new Scenery("nirwadenTiendaR", -44897, -666, 0, 1));
                scenicList.push(new Scenery("nirwadenTiendaL", -44484, -647, 0, 1));
                scenicList.push(new Scenery("nirwadenTiendaR", -44592, -646, 0, 3));
                scenicList.push(new Scenery("nirwadenTiendaL", -45590, -896, 0, 0));
                scenicList.push(new Scenery("nirwadenTiendaD", -44099, -519, 0, 5));
                scenicList.push(new Scenery("nirwadenTiendaU", -44097, -406, 0, 2));
                scenicList.push(new Scenery("nirwadenTiendaD", -44722, -365, 0, 0));
                scenicList.push(new Scenery("nirwadenTiendaL", -45236, -511, 0, 2));
                scenicList.push(new Scenery("nirwadenTiendaD", -45282, -648, 0, 3));
                    //stuff
                        //berry stand
                scenicList.push(new Scenery("nirwadenMueble", -44488, -796, Math.PI, 2)); //square table
                scenicList.push(new Scenery("nirwadenGoods", -44536, -777, 6.5, 1)); //plutt
                scenicList.push(new Scenery("nirwadenGoods", -44562, -761, 8, 0)); //aker
                scenicList.push(new Scenery("nirwadenGoods", -44587, -769, 9, 26)); //iema
                scenicList.push(new Scenery("nirwadenGoods", -44611, -776, -12, 26)); //iema
                scenicList.push(new Scenery("item", -44503, -788, 0, "nirwaden", ["akerBerries", 3, -7]));
                scenicList.push(new Scenery("item", -44480, -791, 0, "nirwaden", ["pluttBerries", 3, -7]));
                scenicList.push(new Scenery("item", -44490, -802, 0, "nirwaden", ["iemaBerries", 3, -7]));
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Berry Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44568, -796, "Person", false, "Berry Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.1, 0.3], 0, 0, 1.1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-44568, -801]], merchant: true, merchandise: [[new Item("coins", false, false), 22], [new Item("iemaBerries", false, false), 28], [new Item("akerBerries", false, false), 17], [new Item("pluttBerries", false, false), 13]]}));
                }

                        //mushroom stand
                scenicList.push(new Scenery("nirwadenMueble", -44140, -931, -1/2 * Math.PI, 1));//bench
                scenicList.push(new Scenery("item", -44141, -898, 0, "nirwaden", ["glinMushrooms", 2, -6]));
                scenicList.push(new Scenery("item", -44141, -908, 0, "nirwaden", ["glinMushrooms", 2, -6]));
                scenicList.push(new Scenery("item", -44141, -918, 0, "nirwaden", ["glinMushrooms", 2, -6]));
                scenicList.push(new Scenery("item", -44141, -938, 0, "nirwaden", ["halgomMushrooms", 2, -8]));
                scenicList.push(new Scenery("item", -44141, -958, 0, "nirwaden", ["halgomMushrooms", 2, -8]));
                scenicList.push(new Scenery("nirwadenGoods", -44075, -907, 0, 21)); //glin
                scenicList.push(new Scenery("nirwadenGoods", -44077, -951, 1, 25)); //halgom
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Fungus Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44100, -930, "Person", false, "Fungus Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.1, 0.3], 0, 0, 1.1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-44112, -930]], merchant: true, merchandise: [[new Item("coins", false, false), 17], [new Item("halgomMushrooms", false, false), 15], [new Item("glinMushrooms", false, false), 14]]}));
                }
                        //fuel stand
                scenicList.push(new Scenery("nirwadenMueble", -44143, -1198, 0.25 + Math.PI, 2)); //square table
                scenicList.push(new Scenery("item", -44129, -1205, 0, "nirwaden", ["coal", 2, -9]));
                scenicList.push(new Scenery("item", -44140, -1188, 0, "nirwaden", ["jarOfOil", 1, -10]));
                scenicList.push(new Scenery("item", -44163, -1192, 0, "nirwaden", ["wood", 1, -4]));
                scenicList.push(new Scenery("item", -44156, -1212, 0, "nirwaden", ["wood", 1, -4]));
                scenicList.push(new Scenery("crate", -44033, -1192, 1.9, 2, [1.15]));
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Combustibles Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44086, -1165, "Person", false, "Combustibles Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.1, 0.3], 0, 0, 1.1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-44086, -1180]], merchant: true, merchandise: [[new Item("coins", false, false), 40], [new Item("coal", false, false), 11], [new Item("jarOfOil", false, false), 5], [new Item("wood", false, false), 23]]}));
                }
                        //bee stand
                scenicList.push(new Scenery("nirwadenMueble", -44101, -527, 0.1 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("item", -44101, -527, 0, "nirwaden", ["honey", 1, -8]));
                scenicList.push(new Scenery("item", -44125, -536, 0, "nirwaden", ["honey", 1, -8]));
                scenicList.push(new Scenery("item", -44114, -533, 0, "nirwaden", ["honey", 1, -8]));
                scenicList.push(new Scenery("item", -44077, -521, 0, "nirwaden", ["beesWax", 2, -9]));
                scenicList.push(new Scenery("crate", -44033, -508, 1.777, 1, [1.2]));
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Honey Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44055, -546, "Person", false, "Honey Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.1, 0.3], 0, 0, 1.1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-44055, -539]], merchant: true, merchandise: [[new Item("coins", false, false), 14], [new Item("honey", false, false), 6], [new Item("beesWax", false, false), 8]]}));
                }
                        //spice stand
                scenicList.push(new Scenery("nirwadenMueble", -44103, -394, 0.057 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("item", -44101, -394, 0, "nirwaden", ["salt", 1, -5]));
                scenicList.push(new Scenery("item", -44114, -394, 0, "nirwaden", ["ogard", 1, -10]));
                scenicList.push(new Scenery("item", -44089, -393, 0, "nirwaden", ["apotlPepper", 1, -9]));
                scenicList.push(new Scenery("item", -44080, -395, 0, "nirwaden", ["garlic", 2, -8]));
                scenicList.push(new Scenery("item", -44070, -386, 0, "nirwaden", ["garlic", 2, -8]));
                scenicList.push(new Scenery("nirwadenGoods", -44046, -427, -1.5, 19)); //ogard
                scenicList.push(new Scenery("nirwadenGoods", -44075, -441, 4, 13)); //garlic
                scenicList.push(new Scenery("nirwadenGoods", -44042, -395, 2.25, 13)); //garlic
                //scenicList.push(new Scenery("crate", -44081, -436, 8, 0, [0.9]));
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Spice Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44091, -431, "Person", false, "Spice Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.1, 0.3], 0, 0, 1.1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-44091, -415]], merchant: true, merchandise: [[new Item("coins", false, false), 50], [new Item("ogard", false, false), 3], [new Item("apotlPepper", false, false), 2], [new Item("salt", false, false), 7], [new Item("garlic", false, false), 9]]}));
                }
                        //tialo stand
                scenicList.push(new Scenery("nirwadenMueble", -44597, -615, 0.012 * Math.PI, 2)); //square table
                scenicList.push(new Scenery("item", -44603, -583, 0, "nirwaden", ["bucketOfWater", 1, -7]));
                scenicList.push(new Scenery("item", -44576, -580, 0, "nirwaden", ["bucketOfWater", 1, -7]));
                scenicList.push(new Scenery("item", -44583, -610, 0, "nirwaden", ["tialoFrond", 1, -4]));
                scenicList.push(new Scenery("item", -44578, -627, 0, "nirwaden", ["tialoFrond", 1, -4]));
                scenicList.push(new Scenery("item", -44602, -612, 0, "nirwaden", ["tialoFrond", 1, -4]));
                scenicList.push(new Scenery("item", -44604, -624, 0, "nirwaden", ["tialoFrond", 1, -4]));
                scenicList.push(new Scenery("item", -44595, -620, 0, "nirwaden", ["tialoFrond", 1, -4]));
                scenicList.push(new Scenery("item", -44617, -618, 0, "nirwaden", ["tialoFrond", 1, -4]));
                scenicList.push(new Scenery("nirwadenGoods", -44568, -656, -1.1, 28)); //tialo
                scenicList.push(new Scenery("nirwadenGoods", -44565, -681, 3, 28)); //tialo
                scenicList.push(new Scenery("nirwadenGoods", -44572, -709, 5.2, 28)); //tialo
                //scenicList.push(new Scenery("crate", -44081, -436, 8, 1, [0.9]));
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Tialo Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44573, -659, "Person", false, "Tialo Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.1, 0.3], 0, 0, 1.1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-44609, -659]], merchant: true, merchandise: [[new Item("coins", false, false), 20], [new Item("tialoFrond", false, false), 30]]}));
                }
                        //techi stand
                scenicList.push(new Scenery("nirwadenMueble", -44470, -648, 0.5016 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("item", -44470, -648, 0, "nirwaden", ["techiLeaf", 1, -1]));
                scenicList.push(new Scenery("item", -44470, -657, 0, "nirwaden", ["techiLeaf", 1, -1]));
                scenicList.push(new Scenery("item", -44470, -638, 0, "nirwaden", ["techiLeaf", 1, -1]));
                scenicList.push(new Scenery("item", -44470, -630, 0, "nirwaden", ["techiLeaf", 1, -1]));
                scenicList.push(new Scenery("item", -44470, -665, 0, "nirwaden", ["techiLeaf", 1, -1]));
                scenicList.push(new Scenery("nirwadenGoods", -44507, -711, 2.96, 22)); //techi
                scenicList.push(new Scenery("nirwadenGoods", -44516, -663, 6, 22)); //techi
                scenicList.push(new Scenery("nirwadenGoods", -44519, -617, -1, 22)); //techi
                scenicList.push(new Scenery("crate", -44487, -581, 8, 2, [0.9]));
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Techi Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44525, -641, "Person", false, "Techi Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.1, 0.3], 0, 0, 1.1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-44496, -643]], merchant: true, merchandise: [[new Item("coins", false, false), 36], [new Item("techiLeaf", false, false), 15], [new Item("driedTechiLeaf", false, false), 33]]}));
                }
                //fruit stand
                //scenicList.push(new Scenery("nirwadenMueble", -44470, -648, 0.5016 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("nirwadenGoods", -44677, -343, 9, 7)); //empty
                scenicList.push(new Scenery("nirwadenGoods", -44710, -343, -3.43, 7)); //empty
                scenicList.push(new Scenery("nirwadenGoods", -44655, -371, -2, 7)); //empty
                scenicList.push(new Scenery("nirwadenGoods", -44655, -398, 0, 7)); //empty
                scenicList.push(new Scenery("nirwadenGoods", -44762, -345, 0, 3)); //ogo
                scenicList.push(new Scenery("nirwadenGoods", -44785, -360, 0, 4)); //polyapa
                scenicList.push(new Scenery("nirwadenGoods", -44792, -382, 0, 11)); //empty
                scenicList.push(new Scenery("item", -44792, -380, 0, "nirwaden", ["chonaFruit", 4, -7]));
                scenicList.push(new Scenery("item",-44788, -383, 0, "nirwaden", ["chonaFruit", 4, -7]));
                scenicList.push(new Scenery("item",-44785, -381, 0, "nirwaden", ["chonaFruit", 4, -7]));

                scenicList.push(new Scenery("item", -44792 - 9, -380, 0, "nirwaden", ["chonaFruit", 4, -7]));
                scenicList.push(new Scenery("item",-44788 - 9, -383, 0, "nirwaden", ["chonaFruit", 4, -7]));
                scenicList.push(new Scenery("item",-44785 - 9, -381, 0, "nirwaden", ["chonaFruit", 4, -7]));
                scenicList.push(new Scenery("item",-44710, -345, 0, "nirwaden", ["bequonFruit", 1, -14]));
                scenicList.push(new Scenery("item",-44678, -344, 0, "nirwaden", ["karmFruit", 2, -12]));
                scenicList.push(new Scenery("item",-44656, -372, 0, "nirwaden", ["kwomFruit", 1, -10]));
                scenicList.push(new Scenery("item",-44657, -398, 0, "nirwaden", ["suuliMelon", 3, -21]));

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Fruit Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44717, -338, "Person", false, "Fruit Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.1, 0.3], 0, 0, 1.1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-44717, -389]], merchant: true, merchandise: [[new Item("coins", false, false), 61], [new Item("chonaFruit", false, false), 25], [new Item("polyapaFruit", false, false), 28], [new Item("suuliMelon", false, false), 8], [new Item("bequonFruit", false, false), 2], [new Item("ogoFruit", false, false), 10], [new Item("karmFruit", false, false), 3], [new Item("kwomFruit", false, false), 2]]}));
                }
                    //trapping stand
                scenicList.push(new Scenery("nirwadenMueble", -44726, -1860, 0.5075 * Math.PI, 2)); //square table
                scenicList.push(new Scenery("item", -44726, -1860, 0, "nirwaden", ["jacks", 3, -12]));
                scenicList.push(new Scenery("item", -44711, -1874, 0, "nirwaden", ["jacks", 3, -12]));
                scenicList.push(new Scenery("item", -44710, -1850, 0, "nirwaden", ["beartrap", 1, -11]));
                scenicList.push(new Scenery("item", -44731, -1876, 0, "nirwaden", ["beartrap", 1, -11]));
                scenicList.push(new Scenery("item", -44728, -1841, 0, "nirwaden", ["beartrap", 1, -11]));
                scenicList.push(new Scenery("crate", -44663, -1898, 9.2, 1, [1.15]));

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Trap Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44655, -1862, "Person", false, "Trap Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["blackBearFurClothing", 0.25], weapon: ["crossbow", [0.1, 0.3], 0, 0, 13], ranged: [true, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44655, -1850]], merchant: true, merchandise: [[new Item("coins", false, false), 18], [new Item("jacks", false, false), 13], [new Item("beartrap", false, false), 3]]}));
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Trap Vendor")
                        {
                            ArtificialIntelligenceAccess[i].healthMAX = 24;
                            ArtificialIntelligenceAccess[i].health = 24;
                        }
                    }
                }
                    //brews stand
                scenicList.push(new Scenery("barrel", -44331, -1837, 1.5, 1));
                scenicList.push(new Scenery("barrel", -44366, -1832, -5.25, 1));
                scenicList.push(new Scenery("nirwadenGoods", -44417, -1836, 0, 23)); //hops
                scenicList.push(new Scenery("nirwadenGoods", -44443, -1860, 0, 23)); //hops
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Brew Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44404, -1840, "Person", false, "Brew Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.2, 0.3], 0, 2, 1.2], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-44394, -1862]], merchant: true, merchandise: [[new Item("coins", false, false), 54], [new Item("barrelOfHarstAle", false, false), 1], [new Item("barrelOfSanthAle", false, false), 1], [new Item("hops", false, false), 29]]}));
                }
                    //naaprid stand
                scenicList.push(new Scenery("hayPile", -44060, -2075, 2, 1.7));
                scenicList.push(new Scenery("hayPile", -44078, -2141, 7, 1.6));
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Naaprid Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44049, -1876, "Person", false, "Naaprid Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.3, 0.25], 0, 2, 1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-44082, -1878]]}));
                }
                ArtificialIntelligenceAccess.push(new Unit(-44085, -1834, "Naaprid", "baby", "Ebilita"));
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Ebilita")
                    {
                        ArtificialIntelligenceAccess[i].baseTeam = "Nirwaden";
                        ArtificialIntelligenceAccess[i].speed = 1;
                        ArtificialIntelligenceAccess[i].tamable = false;
                    }
                }
                    //brewery
                scenicList.push(new Scenery("brew", -44268, -2112, 4 + Math.PI, true));
                scenicList.push(new Scenery("barrel", -44328, -2106, 1.5, 1));
                scenicList.push(new Scenery("barrel", -44360, -2098, 3.1, 1));
                scenicList.push(new Scenery("barrel", -44416, -2103, 5.4, 2));
                        //grain stomping
                for (var i = 0; i < 11; i++)
                {
                    scenicList.push(new Scenery("item", -44335 + (63 - 126 * Math.random()), -2246 + (63 - 126 * Math.random()), 0, "nirwaden", ["harstGrain", 1, -1]));
                }
                scenicList.push(new Scenery("nirwadenGoods", -44279, -2312, 9, 23)); //hops
                scenicList.push(new Scenery("nirwadenGoods", -44306, -2312, 6.5, 23)); //hops
                scenicList.push(new Scenery("barrel", -44377, -2317, 4.5, 2));
                scenicList.push(new Scenery("sign", -44221, -2145, 1/2 * Math.PI, 3, "Atalin Brewery"));
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Brewer")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44390, -2097, "Person", false, "Brewer", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.25, 0.25], 0, 2, 1.1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-44384, -2131]], merchant: true, merchandise: [[new Item("coins", false, false), 62], [new Item("barrelOfHarstAle", false, false), 4], [new Item("hops", false, false), 8]]}));
                }
                    //fabric stand
                scenicList.push(new Scenery("nirwadenMueble", -44115, -1637, 0.4961 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("item", -44116, -1610, 0, "nirwaden", ["cloth", 2, -10]));
                scenicList.push(new Scenery("item", -44116, -1630, 0, "nirwaden", ["cloth", 2, -10]));
                scenicList.push(new Scenery("item", -44116, -1659, 0, "nirwaden", ["cloth", 2, -10]));

                scenicList.push(new Scenery("crate", -44102, -1571, 9.2, 2, [1.365]));
                scenicList.push(new Scenery("nirwadenGoods", -44063, -1594, 6.5, 12)); //horsehair
                scenicList.push(new Scenery("nirwadenGoods", -44050, -1621, 10, 12)); //horsehair

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Fabric Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44083, -1636, "Person", false, "Fabric Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.1, 0.1], 0, 0, 2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-44655, -1850]], merchant: true, merchandise: [[new Item("coins", false, false), 24], [new Item("cloth", false, false), 33], [new Item("horseHair", false, false), 19]]}));
                }
                    //grain stand
                scenicList.push(new Scenery("item", -44463, -1566, 0, "nirwaden", ["bagOfHarstFlour", 1, -19]));
                scenicList.push(new Scenery("item", -44508, -1564, 0, "nirwaden", ["bagOfHarstFlour", 1, -19]));
                scenicList.push(new Scenery("item", -44449, -1596, 0, "nirwaden", ["bagOfHarstFlour", 1, -19]));
                scenicList.push(new Scenery("item", -44554, -1554, 0, "nirwaden", ["bagOfSanthFlour", 1, -31]));
                scenicList.push(new Scenery("item", -44589, -1574, 0, "nirwaden", ["bagOfSanthFlour", 1, -31]));
                scenicList.push(new Scenery("crate", -44584, -1604, 11, 2, [1.23]));


                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Flour and Grain Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44520, -1548, "Person", false, "Flour and Grain Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["none", 0], weapon: ["none", [0.125, 0.15], 0, 0, 0.9], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44519, -1584]], merchant: true, merchandise: [[new Item("coins", false, false), 40], [new Item("bagOfHarstFlour", false, false), 5], [new Item("bagOfSanthFlour", false, false), 2], [new Item("harstGrain", false, false), 46], [new Item("santhGrain", false, false), 19]]}));
                }
                    //pork stand
                scenicList.push(new Scenery("nirwadenMueble", -44686, -1298, -1/2 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("crate", -44735, -1267, 5, 2, [1.26]));
                scenicList.push(new Scenery("item", -44688, -1273, 0, "nirwaden", ["boarMeat", 1, -25]));
                scenicList.push(new Scenery("item", -44684, -1300 + 5, 0, "nirwaden", ["curedPork", 3, -8]));
                scenicList.push(new Scenery("item", -44685, -1316 + 5, 0, "nirwaden", ["curedPork", 3, -8]));
                scenicList.push(new Scenery("item", -44682, -1332 + 5, 0, "nirwaden", ["curedPork", 4, -11]));


                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Cured Pork Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44735, -1298, "Person", false, "Cured Pork Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.6, 0.35], 0, 0, 1.24], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44718, -1297]], merchant: true, merchandise: [[new Item("coins", false, false), 95], [new Item("boarMeat", false, false), 3], [new Item("curedPork", false, false), 24]]}));
                }
                    //fish stand
                scenicList.push(new Scenery("nirwadenMueble", -44792, -1148, 1.02 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("nirwadenMueble", -44729, -1149, 0.98 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("crate", -44758, -1194, -1.45, 2, [1.111]));
                scenicList.push(new Scenery("item", -44711, -1142, 0, "nirwaden", ["rawRedBelliedFalder", 2, -8]));
                scenicList.push(new Scenery("item", -44711, -1154, 0, "nirwaden", ["rawRedBelliedFalder", 2, -8]));
                scenicList.push(new Scenery("item", -44724, -1150, 0, "nirwaden", ["crawdid", 3, -17]));
                scenicList.push(new Scenery("item", -44760, -1153, 0, "nirwaden", ["rawSalmon", 2, -26]));
                scenicList.push(new Scenery("item", -44739, -1147, 0, "nirwaden", ["crawdid", 3, -17]));
                scenicList.push(new Scenery("item", -44806, -1155, 0, "nirwaden", ["rawDuskfish", 2, -12]));
                scenicList.push(new Scenery("item", -44806, -1144, 0, "nirwaden", ["rawDuskfish", 2, -12]));
                scenicList.push(new Scenery("item", -44785, -1142, 0, "nirwaden", ["rawSlol", 2, -16]));
                scenicList.push(new Scenery("crate", -44723, -1189, -4.08, 2, [0.88]));


                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Fish Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44802, -1207, "Person", false, "Fish Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.22], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44786, -1174]], merchant: true, merchandise: [[new Item("coins", false, false), 34], [new Item("rawRedBelliedFalder", false, false), 5], [new Item("rawSlol", false, false), 3], [new Item("rawSalmon", false, false), 2], [new Item("crawdid", false, false), 7], [new Item("rawDuskfish", false, false), 4]]}));
                }

                //marketgoers
                    //
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinMarketGoer1")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44120, -1292, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.22], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 13, patrolLoop: true, route:[[-44247, -1635], [-44150, -1624], [-44260, -1991], [-44909, -1987], [-45061, -1853], [-45727, -1845], [-45726, -1409], [-45446, -1402], [-45449, -1453], [-45645, -1215], [-44880, -1302], [-44893, -1725], [-44207, -1701]], altID: "atalinMarketGoer1"}));
                }
                    //
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinMarketGoer2")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-45278, -729, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.22], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 13, patrolLoop: true, route:[[-44536, -942], [-44534, -829], [-44412, -945], [-44167, -931], [-44127, -572], [-44136, -646], [-44447, -653], [-44404, -474], [-45194, -497], [-45074, -522], [-45063, -806], [-45265, -803], [-45278, -729]], altID: "atalinMarketGoer2"}));
                }
                    //
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinMarketGoer3")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44732, -536, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.22], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 10, patrolLoop: true, route:[[-44732, -536], [-44730, -428], [-44712, -465], [-44274, -441], [-44280, -285], [-44097, -283], [-44099, -364], [-44804, -579], [-44274, -441], [-44801, -797]], altID: "atalinMarketGoer3"}));
                }
                    //
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinMarketGoer4")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-45120, -2689, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.2, 0.25], 0, 0, 1.22], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 19, patrolLoop: true, route:[[-45120, -2700], [-45120, -2689], [-45050, -2689], [-45053, -2287], [-45349, -2293], [-45354, -2589], [-45670, -2588], [-45668, -2238], [-46003, -2231], [-46017, -1862], [-45797, -1851], [-45810, -1418], [-45554, -1409], [-45556, -1237], [-44989, -1197], [-44524, -1785], [-44477, -2028], [-44460, -2692], [-45120, -2689]], altID: "atalinMarketGoer4"}));
                }
                    //
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinMarketGoer5")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44675, -1780, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.22], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 12, patrolLoop: true, route:[[-44522, -1623], [-44519, -1950], [-44172, -1943], [-44162, -1635], [-44144, -1633], [-44162, -1635], [-44269, -448], [-45064, -447], [-45043, -1460], [-44342, -1459], [-44334, -1780], [-44675, -1780]], altID: "atalinMarketGoer5"}));
                }
                    //
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinMarketGoer6")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44801, -2864, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.5, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 35, patrolLoop: true, route:[[-44809, -2693], [-44442, -2676], [-44431, -2980], [-44599, -2987], [-44431, -2980], [-44583, -2705], [-44453, -2690], [-44465, -2484], [-44465, -2033], [-44555, -1715], [-45237, -1223], [-45241, -1141], [-45236, -1284], [-45423, -1288], [-45434, -829], [-45048, -817], [-45018, -669], [-44952, -667], [-45000, -671], [-44985, -483], [-44693, -492], [-44683, -1010], [-44363, -1288], [-44892, -1709], [-44879, -1849], [-45275, -1857], [-45275, -2291], [-45349, -2298], [-45349, -2582], [-45438, -2582], [-45433, -2959], [-45110, -2939], [-45110, -2682], [-44806, -2682], [-44801, -2864]], altID: "atalinMarketGoer6"}));
                }

                //midclass housing (interior)
                //
                scenicList.push(new Scenery("fineBed", -44886, -2953, 1 * Math.PI, false, 1)); //white
                scenicList.push(new Scenery("drawerA", -45031, -2974, 1 * Math.PI, 1, [1.5])); //light
                scenicList.push(new Scenery("nirwadenMueble", -44886, -2779, 1 * Math.PI, 2)); //sml table
                scenicList.push(new Scenery("nirwadenMueble", -44941, -2781, 0.754 * Math.PI, 6)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -45031, -2912, -0.5 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("stove", -44814, -2936, Math.PI, false));
                scenicList.push(new Scenery("furRug", -44758, -2837, 3.5, 2.8, 1));
                //
                scenicList.push(new Scenery("stove", -45134, -2591, Math.PI, "lit"));
                //
                scenicList.push(new Scenery("hearth", -44043, -2517, -1/2 * Math.PI, "lit"));
                //
                scenicList.push(new Scenery("stove", -44212, -2992, Math.PI, "lit"));
                //Marketside Lodge (player ownable home)
                scenicList.push(new Scenery("event", -44732, -2239, 0, "atalinDuendeHouse"));
                if (quests.atalinHomeOwned == true)
                {
                    scenicList.push(new Scenery("stove", -44777, -2362, Math.PI, true));
                    scenicList.push(new Scenery("fineBed", -44670, -2135, 1/2 * Math.PI, true, 2)); //blue
                    scenicList.push(new Scenery("nirwadenMueble", -44688, -2340, 1 * Math.PI, 3)); //llongtable
                    scenicList.push(new Scenery("nirwadenMueble", -44635, -2277, 1/2 * Math.PI, 1)); //bench
                    scenicList.push(new Scenery("drawerA", -44630, -2215, 0, 3, [1.55, "atalinHomeDrawer1", 6, [], false, 0])); //light
                    scenicList.push(new Scenery("drawerA", -44751.5, -2114, 1/2 * Math.PI, 3, [2.04, "atalinHomeDrawer2", 12, [], false, 0])); //light
                    scenicList.push(new Scenery("nirwadenMueble", -44798, -2149, -1/2 * Math.PI, 0)); //long bench
                    scenicList.push(new Scenery("furRug", -44901, -2281, -4, 2.5, 2));
                    scenicList.push(new Scenery("nirwadenMueble", -44885, -2188, -1 * Math.PI, 0)); //long bench
                    scenicList.push(new Scenery("nirwadenMueble", -44929, -2188, -1 * Math.PI, 0)); //long bench
                    scenicList.push(new Scenery("nirwadenMueble", -44966, -2336, 1 * Math.PI, 2)); //sqrtable
                    scenicList.push(new Scenery("nirwadenMueble", -44927, -2336, 1.078 * Math.PI, 6)); //stool
                    scenicList.push(new Scenery("nirwadenMueble", -44970, -2298, 0.97 * Math.PI, 6)); //stool
                    scenicList.push(new Scenery("sign", -44917, -2381, 0, 3, "Market Lodge"));
                }
                else
                {
                    scenicList.push(new Scenery("stove", -44777, -2362, Math.PI, false));
                    scenicList.push(new Scenery("fineBed", -44670, -2135, 1/2 * Math.PI, false, 2)); //blue
                    scenicList.push(new Scenery("nirwadenMueble", -44688, -2340, 1 * Math.PI, 3)); //llongtable
                    scenicList.push(new Scenery("nirwadenMueble", -44635, -2277, 1/2 * Math.PI, 1)); //bench
                    scenicList.push(new Scenery("drawerA", -44630, -2215, 0, 1, [1.55])); //light
                    scenicList.push(new Scenery("drawerA", -44751.5, -2114, 1/2 * Math.PI, 1, [2.04])); //light
                    scenicList.push(new Scenery("nirwadenMueble", -44798, -2149, -1/2 * Math.PI, 0)); //long bench
                    scenicList.push(new Scenery("furRug", -44901, -2281, -4, 2.5, 2));
                    scenicList.push(new Scenery("nirwadenMueble", -44885, -2188, -1 * Math.PI, 0)); //long bench
                    scenicList.push(new Scenery("nirwadenMueble", -44929, -2188, -1 * Math.PI, 0)); //long bench
                    scenicList.push(new Scenery("nirwadenMueble", -44966, -2336, 1 * Math.PI, 2)); //sqrtable
                    scenicList.push(new Scenery("nirwadenMueble", -44927, -2336, 1.078 * Math.PI, 6)); //stool
                    scenicList.push(new Scenery("nirwadenMueble", -44970, -2298, 0.97 * Math.PI, 6)); //stool
                    if (quests.duendeInfestationCompletionStyle != "royalException")
                    {
                        scenicList.push(new Scenery("sign", -44917, -2381, 0, 3, "Sale Postponed - until further notice"));
                    }
                }


                //westOnly housing interiors
                scenicList.push(new Scenery("fineBed", -44158, -2358, 1/2 * Math.PI, false, 1)); //white
                scenicList.push(new Scenery("drawerA", -44050, -2343, 1/2 * Math.PI, 1, [1.4])); //light
                scenicList.push(new Scenery("furRug", -44131, -2483, 8.21, 2.3, 2));
                //
                scenicList.push(new Scenery("fineBed", -44340, -2949, -1 * Math.PI, false, 1)); //white
                scenicList.push(new Scenery("crate", -44341, -2775, 1.6, 1, [1.29]));
                scenicList.push(new Scenery("nirwadenMueble", -44197, -2788, 0.5 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("furRug", -44247, -2907, -3, 1.78, 2));
                //
                scenicList.push(new Scenery("furRug", -44608, -2498, -1/2 * Math.PI, 3.1, 1));
                scenicList.push(new Scenery("fineBed", -44659, -2400, -1/2 * Math.PI, false, 1)); //white
                scenicList.push(new Scenery("drawerA", -44544, -2383, 1/2 * Math.PI, 1, [1.6])); //light
                scenicList.push(new Scenery("nirwadenMueble", -44649, -2610, 0 * Math.PI, 0)); //long bench
                //squatter warehouse
                if (quests.atalinE4Items == true)
                {
                    quests.atalinE4Items = false;
                    worldItems.push([new Item("kolumPowder", -40976, 2283), 1]);
                }
                scenicList.push(new Scenery("skeleton", -41005, 2299, 9, 1.67));
                scenicList.push(new Scenery("crate", -41012, 2470, 2, 1, [1.14]));
                scenicList.push(new Scenery("crate", -41019, 2343, 2.23, 1, [1.3]));
                scenicList.push(new Scenery("crate", -41091, 2398, 5, 2, [1.01]));


                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Homeless Squatter")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinHomeless1")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-40958, 2478, "Person", false, "Homeless Squatter", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["frichFurClothing", 0], weapon: ["none", [0.5, 0.4], 0, 0, 0.75], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-40942, 2251]], altID: "atalinHomeless1"}));
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Homeless Squatter")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinHomeless1")
                                {
                                    ArtificialIntelligenceAccess[i].disdained = true;
                                }
                            }
                        }
                    }
                }

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Homeless Squatter")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinHomeless2")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-41094, 2481, "Person", false, "Homeless Squatter", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["frichFurClothing", 0], weapon: ["none", [0.5, 0.4], 0, 0, 0.7], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-41075, 2478]], altID: "atalinHomeless2"}));
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Homeless Squatter")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinHomeless2")
                                {
                                    ArtificialIntelligenceAccess[i].disdained = true;
                                }
                            }
                        }
                    }
                }

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Homeless Squatter")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinHomeless3")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-41084, 2280, "Person", false, "Homeless Squatter", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["frichFurClothing", 0], weapon: ["none", [0.5, 0.4], 0, 0, 0.7], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-41076, 2307]], altID: "atalinHomeless3"}));
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Homeless Squatter")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinHomeless3")
                                {
                                    ArtificialIntelligenceAccess[i].disdained = true;
                                }
                            }
                        }
                    }
                }

                ArtificialIntelligenceAccess.push(new Unit(-40937, 976, "Person", false, "Company Associate", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.3, 0.2], 0, 80, 1.25], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-40922, 972]]}));
                ArtificialIntelligenceAccess.push(new Unit(-40947, 1055, "Person", false, "Company Associate", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.3, 0.2], 0, 80, 1.25], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-40909, 1052]]}));
                ArtificialIntelligenceAccess.push(new Unit(-40957, 1017, "Person", false, "Company Associate", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.3, 0.2], 0, 80, 1.25], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-40922, 1015]]}));
                ArtificialIntelligenceAccess.push(new Unit(-40725, 1002, "Person", false, "Arcus Co Representative", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.3, 0.2], 0, 80, 1.25], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-40723, 1045]]}));

                //poor residential area
                scenicList.push(new Scenery("nirwadenBuilding1", -41112, -1500, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -41483, -1373, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding3", -41580, -1791, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -41676, -2070, 0, true));
                scenicList.push(new Scenery("nirwadenMuebleOver", -41637, -1929, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -41579, -1975, 1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("trapdoor", -41733, -1760, 0 * Math.PI, [4563, -2378], "estolTunnel"));
                scenicList.push(new Scenery("well", -41104, -1729, -2.7, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -41112, -1965, 0, true));
                scenicList.push(new Scenery("nirwadenMuebleOver", -41013, -1680, 1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -41013, -1770, 1/2 * Math.PI, 0)); //long bench
                barrierList.push(new Barrier(-41030, -1818, 180, 29, true));
                barrierList.push(new Barrier(-41024, -3021, 914, 29, true));
                barrierList.push(new Barrier(-43120, -3021, 29, 2100, true));
                scenicList.push(new Scenery("nirwadenMuebleOver", -41013, -2156, 1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -41013, -2266, 1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -41013, -2376, 1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -41013, -2486, 1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -41013, -2596, 1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -41013, -2706, 1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -41013, -2816, 1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -41013, -2926, 1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -41013, -2972, 1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenBuilding1", -41212, -2330, 0, true));
                scenicList.push(new Scenery("nirwadenMuebleOver", -41075, -3014, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -41185, -3014, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -41295, -3014, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -41405, -3014, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -41515, -3014, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -41625, -3014, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -41735, -3014, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -41845, -3014, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -41955, -3014, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -42065, -3014, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -42175, -3014, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -42285, -3014, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -42395, -3014, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -42505, -3014, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -42615, -3014, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -42725, -3014, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -42835, -3014, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -42945, -3014, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -43055, -3014, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenBuilding1", -41212, -2730, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -41553, -2870, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -41553, -2474, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -41889, -2755, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -41871, -2267, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -41877, -2514, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -41690, -1381, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -42040, -1479, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -42040, -1879, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -42268, -1677, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -42225, -2766, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -42563, -2879, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -42563, -2648, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -42334, -2482, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -42350, -2105, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -42464, -1888, 0, true));
                barrierList.push(new Barrier(-42719, -1250, 29, 960, true));
                scenicList.push(new Scenery("nirwadenMuebleOver", -42680, -1237, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -42570, -1237, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -42460, -1237, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -42350, -1237, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -42240, -1237, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -42130, -1237, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -42020, -1237, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -41910, -1237, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -41800, -1237, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -41690, -1237, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMueble", -41580, -1237, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenBuilding2", -42620, -1383, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -42473, -1674, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -42661, -2090, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -42661, -2275, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -42873, -2565, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -42873, -2775, 0, true));
                barrierList.push(new Barrier(-43102, -2718, 900, 29, true));
                scenicList.push(new Scenery("nirwadenMuebleOver", -43088, -2668, -1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -43088, -2558, -1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -43088, -2448, -1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -43088, -2338, -1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -43088, -2228, -1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -43088, -2118, -1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -43088, -2008, -1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -43088, -1898, -1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -43088, -1788, -1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -43088, -1678, -1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMuebleOver", -43088, -1568, -1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenBuilding1", -42961, -1663, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -42759, -1739, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -42982, -2187, 0, true));

                scenicList.push(new Scenery("nirwadenBuilding2", -45484, 1336, 0, true));

                scenicList.push(new Scenery("nirwadenBuilding1", -44115, 153, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -44422, 812, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -44651, 808, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding3", -44741, 524, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -44537, 1090, 0, true));

                //poor res interiors

                //plaza buildings interiors
                scenicList.push(new Scenery("sign", -44226, 82, -1/2 * Math.PI, 3, "Atalin Barracks: Market"));
                scenicList.push(new Scenery("bed", -44160, 261, 1/2 *  Math.PI, false));
                scenicList.push(new Scenery("bed", -44066, 46, -1/2 *  Math.PI, false));
                scenicList.push(new Scenery("bed", -44190, 75, 1 *  Math.PI, false));
                scenicList.push(new Scenery("bed", -44040, 234, 0 *  Math.PI, false));
                scenicList.push(new Scenery("crate", -44047, 129, 1.3, 2, [1.342]));

                //player shop in atalin
                scenicList.push(new Scenery("nirwadenMueble", -44633, 632, 1 * Math.PI, 0)); // long bench
                scenicList.push(new Scenery("nirwadenMueble", -44569, 589, 1/2 * Math.PI, 0)); // long bench
                scenicList.push(new Scenery("nirwadenMueble", -44620, 416, 0 * Math.PI, 0)); // long bench
                scenicList.push(new Scenery("nirwadenMueble", -44620, 436, 0 * Math.PI, 0)); // long bench
                scenicList.push(new Scenery("nirwadenMueble", -44858, 438, 1/2 * Math.PI, 1)); //bench
                if (quests.atalinShopOwned == true)
                {
                    scenicList.push(new Scenery("crate", -44717, 421, 0.1, 4, [1.4, "atalinShopCrate", 15, [], false, 0]));
                    scenicList.push(new Scenery("sign", -44873, 376, 0 * Math.PI, 3, "The Atalin Supply"));
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Shopkeeper")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinPlayerShopkeeper")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-44910, 444, "Person", false, "Shopkeeper", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.3, 0.3], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44897, 444]], altID: "atalinPlayerShopkeeper"}));
                    }
                }
                else
                {
                    scenicList.push(new Scenery("crate", -44717, 421, 0.1, 2, [1.4]));
                    scenicList.push(new Scenery("sign", -44873, 376, 0 * Math.PI, 3, "Shop for sale: 19000 coins"));
                }
                //
                scenicList.push(new Scenery("nirwadenMueble", -44645, 737, 1 * Math.PI, 1)); //bench

                if (uniqueChars.manoloLDS)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Guild Master Manolo")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-44646, 702, "Person", false, "Guild Master Manolo", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44649, 722]]}));
                    }
                }
                scenicList.push(new Scenery("nirwadenGoods", -44584, 713, -4.56, 9));
                scenicList.push(new Scenery("nirwadenGoods", -44570, 748, -8.146, 9));
                scenicList.push(new Scenery("crate", -44614, 881, 10, 1, [1.5]));
                scenicList.push(new Scenery("crate", -44701, 904, 12, 2, [1.1]));
                scenicList.push(new Scenery("crate", -44682, 875, 13, 2, [0.87]));
                //
                scenicList.push(new Scenery("nirwadenMueble", -44510, 1145, 1 * Math.PI, 5)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -44510, 1100, 1.1 * Math.PI, 5)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -44510, 1055, 1.3 * Math.PI, 5)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -44510, 1010, 1.8 * Math.PI, 5)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -44468, 1098, -1/2 * Math.PI, 3)); //rect table
                scenicList.push(new Scenery("nirwadenMueble", -44468, 1053, -1/2 * Math.PI, 3)); //rect table
                scenicList.push(new Scenery("crate", -44595, 1182, 3.14159, 2, [1.55]));
                if (uniqueChars.manoloLDS == true)
                {
                    scenicList.push(new Scenery("item", -44470, 1008, 2, "nirwaden", ["paperwork", 3, -18]));
                    scenicList.push(new Scenery("item", -44485, 1146, 2, "nirwaden", ["paperwork", 2, -13]));
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Merchant's Guild Accountant")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "merchGuild1")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-44565, 1145, "Person", false, "Merchant's Guild Accountant", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.3, 0.3], 0, 0, 1.45], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44511, 1146]], altID: "merchGuild1"}));
                    }
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Merchant's Guild Accountant")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "merchGuild2")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-44585, 1006, "Person", false, "Merchant's Guild Accountant", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.3, 0.3], 0, 0, 1.45], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44511, 1010]], altID: "merchGuild2"}));
                    }
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Merchant's Guild Member")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "merchGuild3")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-44464, 806, "Person", false, "Merchant's Guild Member", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.35], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44436, 805]], altID: "merchGuild3"}));
                    }
                }
                scenicList.push(new Scenery("nirwadenMueble", -44353, 909, -1/2 * Math.PI, 2)); //sqr table
                scenicList.push(new Scenery("nirwadenMueble", -44489, 713, -1/2 * Math.PI, 2)); //sqr table

                scenicList.push(new Scenery("sign", -44417, 660, 0 * Math.PI, 3, "The Atalin Merchant's Guild"));
                scenicList.push(new Scenery("sign", -45587, 682, 0 * Math.PI, 3, "Silver Keep Banking"));

                scenicList.push(new Scenery("nirwadenStadium", -45043, 2535, 0, true));
                scenicList.push(new Scenery("nirwadenStadiumCanopy", -45043, 2885, 0, true));

                if (player.raceName != "Nirwaden" || player.title != "Nobility" && player.title != "Royalty")
                {
                    scenicList.push(new Scenery("polyapaTree", -45646, 1617, 1.5, "nirwaden"));
                    scenicList.push(new Scenery("polyapaTree", -45646, 1917, -8, "nirwaden"));

                    scenicList.push(new Scenery("chonaTree", -45346, 1617, 6.5, "nirwaden"));
                    scenicList.push(new Scenery("chonaTree", -45346, 1917, -4.75, "nirwaden"));

                    scenicList.push(new Scenery("chonaTree", -44746, 1617, -2.5, "nirwaden"));
                    scenicList.push(new Scenery("chonaTree", -44746, 1917, 5.5, "nirwaden"));

                    scenicList.push(new Scenery("polyapaTree", -44446, 1617, 3.5, "nirwaden"));
                    scenicList.push(new Scenery("polyapaTree", -44446, 1917, 1.67, "nirwaden"));

                    for (var poop = 0; poop < 16; poop++)
                    {
                        scenicList.push(new Scenery("rosePlant", -44452, 3119 + 300 * poop, 3.78 * 2 * Math.cos(poop * poop), "nirwaden"));
                        scenicList.push(new Scenery("yellowStetriliPlant", -44571, 3004 + 300 * poop, 3.78 * 2 * Math.sin(poop * poop), "nirwaden"));
                        scenicList.push(new Scenery("redStetriliPlant", -44327, 3244 + 300 * poop, 3.78 * 2 * Math.cos(poop + 3 * poop), "nirwaden"));
                    }
                    for (var poop = 0; poop < 15; poop++)
                    {
                        if (poop < 3 || poop > 5)
                        {
                            scenicList.push(new Scenery("yellowStetriliPlant", -44870, 3304 + 300 * poop, 3.78 * 3 * Math.cos(poop * poop), "nirwaden"));
                            scenicList.push(new Scenery("rosePlant", -44752, 3419 + 300 * poop, 5.2 * poop * Math.sin(poop * 8), "nirwaden"));
                            scenicList.push(new Scenery("redStetriliPlant", -44630, 3304 + 300 * poop, 3.78 * 3 * Math.sin(poop + 4 * poop), "nirwaden"));
                        }
                    }
                }
                else
                {
                    scenicList.push(new Scenery("polyapaTree", -45646, 1617, 1.5, true));
                    scenicList.push(new Scenery("polyapaTree", -45646, 1917, -8, true));

                    scenicList.push(new Scenery("chonaTree", -45346, 1617, 6.5, true));
                    scenicList.push(new Scenery("chonaTree", -45346, 1917, -4.75, true));

                    scenicList.push(new Scenery("chonaTree", -44746, 1617, -2.5, true));
                    scenicList.push(new Scenery("chonaTree", -44746, 1917, 5.5, true));

                    scenicList.push(new Scenery("polyapaTree", -44446, 1617, 3.5, true));
                    scenicList.push(new Scenery("polyapaTree", -44446, 1917, 1.67, true));

                    for (var poop = 0; poop < 16; poop++)
                    {
                        scenicList.push(new Scenery("rosePlant", -44452, 3119 + 300 * poop, 3.78 * 2 * Math.cos(poop * poop), true));
                        scenicList.push(new Scenery("yellowStetriliPlant", -44571, 3004 + 300 * poop, 3.78 * 2 * Math.sin(poop * poop), true));
                        scenicList.push(new Scenery("redStetriliPlant", -44327, 3244 + 300 * poop, 3.78 * 2 * Math.cos(poop + 3 * poop), true));
                    }
                    for (var poop = 0; poop < 15; poop++)
                    {
                        if (poop < 3 || poop > 5)
                        {
                            scenicList.push(new Scenery("yellowStetriliPlant", -44870, 3304 + 300 * poop, 3.78 * 3 * Math.cos(poop * poop), true));
                            scenicList.push(new Scenery("rosePlant", -44752, 3419 + 300 * poop, 5.2 * poop * Math.sin(poop * 8), true));
                            scenicList.push(new Scenery("redStetriliPlant", -44630, 3304 + 300 * poop, 3.78 * 3 * Math.sin(poop + 4 * poop), true));
                        }
                    }
                }

                scenicList.push(new Scenery("stillFountain", -45055, 4620, 0, 0, 2));

                if (player.raceName == "Nirwaden" && player.title == "Nobility" || player.raceName == "Nirwaden" && player.title == "Royalty")
                {
                    for (var poop = 0; poop < 9; poop++)
                    {
                        scenicList.push(new Scenery("polyapaTree", -41448 - 300 * poop, -483, 8 * 3 * Math.cos(poop + 5 * poop), true));
                        scenicList.push(new Scenery("chonaTree", -41448 - 300 * poop, -783, 8 * 3 * Math.sin(poop + 7 * poop), true));
                        scenicList.push(new Scenery("polyapaTree", -41448 - 300 * poop, -1083, 8 * 3 * Math.cos(poop + 9 * poop * poop), true));
                    }
                }
                else
                {
                    for (var poop = 0; poop < 9; poop++)
                    {
                        scenicList.push(new Scenery("polyapaTree", -41448 - 300 * poop, -483, 8 * 3 * Math.cos(poop + 5 * poop), "nirwaden"));
                        scenicList.push(new Scenery("chonaTree", -41448 - 300 * poop, -783, 8 * 3 * Math.sin(poop + 7 * poop), "nirwaden"));
                        scenicList.push(new Scenery("polyapaTree", -41448 - 300 * poop, -1083, 8 * 3 * Math.cos(poop + 9 * poop * poop), "nirwaden"));
                    }
                }

                if (player.raceName == "Nirwaden" && player.title == "Nobility" || player.raceName == "Nirwaden" && player.title == "Royalty")
                {
                    for (var poop = 0; poop < 4; poop++)
                    {
                        scenicList.push(new Scenery("chonaTree", -43249, -1684 - 300 * poop, 8 * 3 * Math.sin(poop + 2 * poop * poop), true));
                        scenicList.push(new Scenery("polyapaTree", -43549, -1684 - 300 * poop, 8 * 3 * Math.cos(poop + 5 * poop * poop), true));
                        scenicList.push(new Scenery("chonaTree", -43849, -1684 - 300 * poop, 8 * 6 * Math.sin(poop + 12 * poop), true));
                    }
                }
                else
                {
                    for (var poop = 0; poop < 4; poop++)
                    {
                        scenicList.push(new Scenery("chonaTree", -43249, -1684 - 300 * poop, 8 * 3 * Math.sin(poop + 2 * poop * poop), "nirwaden"));
                        scenicList.push(new Scenery("polyapaTree", -43549, -1684 - 300 * poop, 8 * 3 * Math.cos(poop + 5 * poop * poop), "nirwaden"));
                        scenicList.push(new Scenery("chonaTree", -43849, -1684 - 300 * poop, 8 * 6 * Math.sin(poop + 12 * poop), "nirwaden"));
                    }
                }

                if (quests.duendeInfestationCompletionStyle == "royalException")
                {
                    scenicList.push(new Scenery("skeleton", -44696, -2241, 3.45, 1.55));
                    scenicList.push(new Scenery("skeleton", -44776, -2266, 1.1, 0.91));
                }

                //low res interiors
                scenicList.push(new Scenery("bed", -42831, -2876, -0.13 + Math.PI / 2, false));
                scenicList.push(new Scenery("bed", -42918, -2766, -0.05, false));
                scenicList.push(new Scenery("bed", -42839, -2488, 0.19 + Math.PI / 2, false));
                scenicList.push(new Scenery("bed", -42503, -2952, -0.05 + Math.PI, false));
                scenicList.push(new Scenery("bed", -42570, -2890, -0.21 -1/2 * Math.PI, false));
                scenicList.push(new Scenery("bed", -42607, -2326, 0.3, false));
                scenicList.push(new Scenery("bed", -42686, -2065, 0.421 + Math.PI, false));
                scenicList.push(new Scenery("bed", -42294, -2158, -0.23, false));
                scenicList.push(new Scenery("bed", -42381, -2193, -0.312 + 1/2 * Math.PI, false));
                scenicList.push(new Scenery("bed", -42289, -2581, 0.012 - 1/2 * Math.PI, false));
                scenicList.push(new Scenery("bed", -42371, -2424, 0.2, false));
                scenicList.push(new Scenery("bed", -41864, -2344, 0.0091 - 1/2 * Math.PI, false));
                scenicList.push(new Scenery("bed", -42591, -2708, 0.0891 + 1/2 * Math.PI, false));
                scenicList.push(new Scenery("bed", -42174, -2708, -0.1291 + 1 * Math.PI, false));
                scenicList.push(new Scenery("bed", -42240, -2861, -0.2441 + 1/2 * Math.PI, false));
                scenicList.push(new Scenery("bed", -41848, -2694, -0.0448 - 1/2 * Math.PI, false));
                scenicList.push(new Scenery("bed", -41942, -2792, -0.0248 - 0 * Math.PI, false));

                scenicList.push(new Scenery("nirwadenMueble", -42927, -2601, 0 * Math.PI, 2)); //sqr table
                scenicList.push(new Scenery("nirwadenMueble", -42882, -2607, 3.33389 * Math.PI, 5)); //stool
                scenicList.push(new Scenery("barrel", -42210, -2606, 3.843, 0)); //no tap
                scenicList.push(new Scenery("barrel", -42692, -2981, 5.223, 0)); //no tap
                scenicList.push(new Scenery("nirwadenMueble", -42741, -2355, -0.12 + -1/2 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("nirwadenMueble", -42300, -2048, -2.89 + -1/2 * Math.PI, 6)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -42636, -1981, 0.055 + 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMueble", -42306, -2019, 0.013 + 2 * Math.PI, 2)); //sqr table
                scenicList.push(new Scenery("nirwadenMueble", -42396, -2050, 0.04 + 1 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("nirwadenMueble", -42510, -2810, -0.022 + 1 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("nirwadenMueble", -42252, -2404, 0.0345 + 1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMueble", -42388, -2528, 2.99 + -1/2 * Math.PI, 6)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -42380, -2571, 0.143 + 2 * Math.PI, 2)); //sqr table
                scenicList.push(new Scenery("nirwadenMueble", -42304, -2685, 0.08 + -1/2 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("nirwadenMueble", -41875, -2842, 2.99 + -1/2 * Math.PI, 5)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -41835, -2845, 0.343 + 2 * Math.PI, 2)); //sqr table

                scenicList.push(new Scenery("nirwadenMueble", -41843, -2205, -9.37786 + -1/2 * Math.PI, 5)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -41894, -2198, -7.223786 + -1/2 * Math.PI, 5)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -41843, -2163, -0.022 + 2 * Math.PI, 4)); //super long table
                scenicList.push(new Scenery("nirwadenMueble", -42536, -2541, -0.0056 + 1 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("crate", -42013, -2343, 2.4, 1, [1.31]));
                scenicList.push(new Scenery("crate", -41637, -1679, 1.32, 2, [1.7569]));

                scenicList.push(new Scenery("nirwadenMueble", -41635, -2946, -0.035 + 1/2 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("nirwadenMueble", -41636, -2788, -0.015 - 1/2 * Math.PI, 1)); //bench

                scenicList.push(new Scenery("oilLamp", -41647, -2717, -2.53947818541137 * Math.PI, true, [1000, 2]));
                scenicList.push(new Scenery("barrel", -41680, -2719, 6.5, 0)); //no tap
                scenicList.push(new Scenery("barrel", -42334, -1941, 5.5555, 0)); //no tap
                scenicList.push(new Scenery("oilLamp", -42334, -1941, -9.23247818541132 * Math.PI, true, [1000, 2]));
                scenicList.push(new Scenery("barrel", -42134, -1646, 6.5534, 0)); //no tap
                scenicList.push(new Scenery("barrel", -42108, -1640, 7.1532, 0)); //no tap
                scenicList.push(new Scenery("barrel", -42485, -1274, 8.2525, 0)); //no tap
                scenicList.push(new Scenery("bed", -41494, -2408, 0.023 - 1 * Math.PI, false));
                scenicList.push(new Scenery("bed", -41486, -2517, 0.014 - 0 * Math.PI, false));
                scenicList.push(new Scenery("nirwadenMueble", -41611, -2581, -2.122222 + 1/2 * Math.PI, 6)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -41611, -2532, 0.0089 + -1/2 * Math.PI, 2)); //sqr table
                scenicList.push(new Scenery("nirwadenMueble", -41601, -2364, -0.092 - 2 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("bed", -41225, -2650, 0.025 + 1/2 * Math.PI, false));
                scenicList.push(new Scenery("nirwadenMueble", -41152, -2779, -0.017 + 1/2 * Math.PI, 3)); //rect tbl
                scenicList.push(new Scenery("lab", -41247, -2853, -0.016 + 1 * Math.PI, true)); //rect tbl
                scenicList.push(new Scenery("bed", -41859, -2458, 0.125 + 1/2 * Math.PI, false));
                scenicList.push(new Scenery("bed", -41884, -2580, 0.225 - 1/2 * Math.PI, false));
                scenicList.push(new Scenery("nirwadenMueble", -41900, -2524, -1.111125 + 1/2 * Math.PI, 6)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -41939, -2520, 0.0029 - 1/2 * Math.PI, 2)); //sqr table
                scenicList.push(new Scenery("bed", -41283, -2412, -0.009 - 0 * Math.PI, false));
                scenicList.push(new Scenery("bed", -41212, -2252, -0.018 + 1/2 * Math.PI, false));
                scenicList.push(new Scenery("bed", -41167, -2370, 0.3 - 1 * Math.PI, false));
                scenicList.push(new Scenery("bed", -41651, -1985, 0.216 + 1/2 * Math.PI, false));
                scenicList.push(new Scenery("bed", -41717, -2065, 2.19 - 1/2 * Math.PI, false));
                scenicList.push(new Scenery("nirwadenMueble", -41690, -2165, -5.122222 + 1/2 * Math.PI, 6)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -41741, -2120, 4.122222 + 1/2 * Math.PI, 6)); //stool
                scenicList.push(new Scenery("barrel", -41545, -1957, 11, 0)); //no tap
                scenicList.push(new Scenery("barrel", -41503, -1953, 11, 0)); //no tap
                scenicList.push(new Scenery("bed", -41052, -1888, 0.011 - 1 * Math.PI, false));
                scenicList.push(new Scenery("bed", -41176, -2042, -0.0321 - 0 * Math.PI, false));
                scenicList.push(new Scenery("bed", -41139, -1419, -0.0351 - 1/2 * Math.PI, false));
                scenicList.push(new Scenery("bed", -41075, -1548, -0.0521 - 2 * Math.PI, false));
                scenicList.push(new Scenery("nirwadenMueble", -41443, -1259, -0.011 + 1 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMueble", -41194, -1576, -0.035 + 1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMueble", -41401, -1299, -0.025 + 1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("bed", -41504, -1457, -0.0851 + 1/2 * Math.PI, false));
                scenicList.push(new Scenery("bed", -42080, -1797, -0.4962 + 1/2 * Math.PI, false));
                scenicList.push(new Scenery("bed", -41980, -1810, -0.0062 + 0 * Math.PI, false));
                scenicList.push(new Scenery("bed", -42419, -1837, -0.0022 - 1/2 * Math.PI, false));
                scenicList.push(new Scenery("nirwadenMueble", -42411, -1948, -0.019 - 2 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("nirwadenMueble", -42508, -1945, 3.23323322 + 1/2 * Math.PI, 5)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -42503, -1977, 0.029 - 2 * Math.PI, 2)); //sqr tbl
                scenicList.push(new Scenery("bed", -42037, -1949, -0.01221 + 1/2 * Math.PI, false));
                scenicList.push(new Scenery("bed", -42008, -1562, -0.25221 + 1/2 * Math.PI, false));
                scenicList.push(new Scenery("bed", -42098, -1517, -0.15221 + 1 * Math.PI, false));
                scenicList.push(new Scenery("nirwadenMueble", -41995, -1365, -0.01 + 1 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("bed", -42782, -1832, -0.162314 - 1/2 * Math.PI, false));
                scenicList.push(new Scenery("nirwadenMueble", -42836, -1668, 0.023 + 1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMueble", -42708, -1824, 0.04 - 1 * Math.PI, 2)); //sqr tbl
                scenicList.push(new Scenery("nirwadenMueble", -42516, -1728, -0.005 + 1 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMueble", -42445, -1729, -0.005 + 1 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMueble", -42390, -1730, -0.005 + 1 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("bed", -42436, -1627, -0.555454 - 1/2 * Math.PI, false));
                scenicList.push(new Scenery("barrel", -41807, -2101, 12.12, 0)); //no tap

                scenicList.push(new Scenery("nirwadenMueble", -42665, -1298, 6.2366622 + 1/2 * Math.PI, 5)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -42567, -1307, 1.23323322 - 1/2 * Math.PI, 5)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -42616, -1309, 0.06666 + 1/2 * Math.PI, 2)); //sqr tbl

                scenicList.push(new Scenery("bed", -42685, -1464, -0.015454 - 1 * Math.PI, false));
                scenicList.push(new Scenery("bed", -42575, -1482, -0.010454 - 1/2 * Math.PI, false));

                if (uniqueChars.matildaLDS)
                {
                    scenicList.push(new Scenery("item", -41153, -2825, 0, false, ["kofkeLeaves", 2, 0, "Matilda"]));
                    scenicList.push(new Scenery("item", -41148, -2812, 0, false, ["mofuFoot", 3, 0, "Matilda"]));
                    scenicList.push(new Scenery("item", -41153, -2788, 0, false, ["honey", 1, 0, "Matilda"]));
                    scenicList.push(new Scenery("item", -41160, -2801, 0, false, ["lizardTail", 6, 0, "Matilda"]));
                    scenicList.push(new Scenery("item", -41146, -2770, 0, false, ["tylunFlower", 1, 0, "Matilda"]));
                    scenicList.push(new Scenery("item", -41153, -2748, 0, false, ["glassJar", 1, 0, "Matilda"]));
                    scenicList.push(new Scenery("item", -41160, -2726, 0, false, ["glassJar", 3, 0, "Matilda"]));
                }

                if (uniqueChars.giomardoLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Giomardo")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-42562, -2979, "Person", false, "Giomardo", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["varnFurClothing", 0], weapon: ["none", [0.3, 0.35], 0, 0, 1.225], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-42579, -2960]]}));
                    }
                }

                if (uniqueChars.elmaLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Elma")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-42826, -2733, "Person", false, "Elma", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["frichFurClothing", 0], weapon: ["none", [0.2, 0.25], 0, 0, 1.225], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-42823, -2748]]}));
                    }
                }

                if (uniqueChars.nataliaLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Natalia")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-42755, -2956, "Person", false, "Natalia", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["varnFurClothing", 0], weapon: ["none", [0.015, 0.015], 0, 0, 1.1], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 2, patrolLoop: true, route:[[-42755, -2970], [-42702, -2934]], kid: true}));
                    }
                }
                scenicList.push(new Scenery("stove", -42968, -2880, 1/2 * Math.PI, "lit"));

                if (uniqueChars.ebaroLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Ebaro")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-42914, -2882, "Person", false, "Ebaro", {race: "Nirwaden", faction: "Nirwaden", personality: "none", outfit: ["none", 0], weapon: ["none", [0.005, 0.005], 0, 0, 80], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-42939, -2882]], kid: true}));
                    }
                }

                if (uniqueChars.matildaLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Matilda")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-41225, -2746, "Soldier", false, "Matilda", {race: "Nirwaden", faction: "Nirwaden", con: 5, speed: 5, outfit: ["nirwadenClothingF", 0], weapon: ["burningHands", [5, 5], 3, 3, 0.55], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: true, route:[[-41301, 717]], merchant: true, merchandise: [[new Item("coins", false, false), 3], [new Item("waterwalkingPotion", false, false), 1], [new Item("vialOfGojiiPoison", false, false), 2], [new Item("energyPotionII", false, false), 1]]}));
                    }
                }

                //muggers
                if (Math.random() > 0.8)
                {
                    if (timeOfDay == "Dusk" || timeOfDay == "Night" || timeOfDay == "Dawn")
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-42125, -2733, "Person", false, "Mugger", {race: "Nirwaden", faction: "arena4", personality: "violent", outfit: ["frichFurClothing", 0], weapon: ["sickle", [3.5, 1.5], 0, 23, 1.25], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-42110, -1694]]}));
                    }
                }
                if (Math.random() < 0.2)
                {
                    if (Math.random() > 0.46)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-42031, -2392, "Person", false, "Mugger", {race: "Nirwaden", faction: "arena4", personality: "violent", outfit: ["none", 0], weapon: ["sickle", [2, 2], 0, 22, 1], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-42823, -2748]]}));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-42031, -2392, "Person", false, "Mugger", {race: "Nirwaden", faction: "arena4", personality: "violent", outfit: ["frichFurClothing", 0], weapon: ["sickle", [3, 2], 0, 22, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-42823, -2748]]}));
                    }

                }
                if (Math.random() < 0.2)
                {
                    if (timeOfDay == "Dusk" || timeOfDay == "Night" || timeOfDay == "Dawn")
                    {
                        if (Math.random() > 0.4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-41065, -2940, "Person", false, "Mugger", {race: "Nirwaden", faction: "arena4", personality: "violent", outfit: ["none", 0], weapon: ["sickle", [4, 3], 0, 22, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-42823, -2748]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-41065, -2940, "Person", false, "Mugger", {race: "Nirwaden", faction: "arena4", personality: "violent", outfit: ["none", 0], weapon: ["timberAxe", [6, 5], 0, 28, 2.1], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-42823, -2748]]}));
                        }

                    }
                }
                if (Math.random() < 0.2) //
                {
                    if (timeOfDay == "Dusk" || timeOfDay == "Day" || timeOfDay == "Dawn")
                    {
                        if (Math.random() > 0.4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-42430, -1461, "Person", false, "Mugger", {race: "Nirwaden", faction: "arena4", personality: "violent", outfit: ["none", 0], weapon: ["sickle", [5, 2], 0, 22, 1.26], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-42823, -2748]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-41863, -1312, "Person", false, "Mugger", {race: "Nirwaden", faction: "arena4", personality: "violent", outfit: ["frichFurClothing", 0], weapon: ["sickle", [4, 4], 0, 21, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-42823, -2748]]}));
                        }

                    }
                }
                if (Math.random() < 0.2)
                {
                    if (timeOfDay == "Dusk" || timeOfDay == "Night" || timeOfDay == "Dawn")
                    {
                        if (Math.random() > 0.55)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-42052, -2970, "Person", false, "Mugger", {race: "Nirwaden", faction: "arena4", personality: "violent", outfit: ["frichFurClothing", 0], weapon: ["longbow", [3, 3], 0, 24, 1.15], ranged: [true, "arrow", 5.5, 900, 4, 6, 0, "none", 1.92], patrolStops: 1, patrolLoop: false, route:[[-42054, -2950]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-42052, -2970, "Person", false, "Mugger", {race: "Nirwaden", faction: "arena4", personality: "violent", outfit: ["frichFurClothing", 0], weapon: ["sickle", [3, 3], 0, 24, 1.15], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-42054, -2950]]}));
                        }
                    }
                }

                if (Math.random() < 0.2)
                {
                    if (timeOfDay == "Dusk" || timeOfDay == "Night" || timeOfDay == "Day")
                    {
                        if (Math.random() > 0.7)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-41704, -2958, "Soldier", false, "Estol Thug", {race: "Nirwaden", faction: "EstolGang3", con: 5, speed: 1, outfit: ["none", 0], weapon: ["nirineseSabre", [5, 5], 0, 26, 0.8], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-41704, -2958], [-41700, -2955]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-41700, -2955, "Soldier", false, "Estol Thug", {race: "Nirwaden", faction: "EstolGang3", con: 8, speed: 1, outfit: ["boarArmour", 4.5], weapon: ["nirineseSabre", [8, 6], 0, 25, 0.9], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 2, patrolLoop: true, route:[[-42381, -2951], [-41700, -2955]]}));
                        }
                    }
                }
                if (Math.random() < 0.2)
                {
                    if (timeOfDay == "Dawn" || timeOfDay == "Night" || timeOfDay == "Day")
                    {
                        if (Math.random() > 0.46)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-41609, -2710, "Soldier", false, "Estol Thug", {race: "Nirwaden", faction: "EstolGang3", con: 2, speed: 1.2, outfit: ["nirwadenGambeson", 2.5], weapon: ["nirineseSabre", [7, 5.5], 0, 24, 0.95], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-41610, -2697]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-41676, -2807, "Soldier", false, "Estol Thug", {race: "Nirwaden", faction: "EstolGang3", con: 2.5, speed: 1.2, outfit: ["nirwadenGambeson", 2], weapon: ["nirineseSabre", [9, 4.5], 0, 22, 1.1], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-41683, -2807]]}));
                        }
                    }
                }

                var vendorName = "Shady Vendor";
                if (player.title == "Nobility" || player.title == "Royalty" || player.title == "Highfolk") //rich folks don't have the street smarts to spot gang members on the street
                {
                    vendorName = "Street Vendor";
                }
                if (Math.random() > 0.89)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-41521, -2778, "Person", false, vendorName, {race: "Vardan", faction: "EstolGang", personality: "scared", outfit: ["nirwadenGambeson", 2.5], weapon: ["basketDark", [0.1, 0.4], 0, 0, 1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-41536, -2800]], merchant: true, merchandise: [[new Item("coins", false, false), 26], [new Item("kolumPowder", false, false), 3]]}));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(-41472, -2926, "Person", false, vendorName, {race: "Nirwaden", faction: "EstolGang", personality: "scared", outfit: ["none", 2.5], weapon: ["basketDark", [0.1, 0.4], 0, 0, 1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 0, patrolLoop: false, route:[[-41536, -2800]], merchant: true, merchandise: [[new Item("coins", false, false), 13], [new Item("kolumPowder", false, false), 5]]}));
                }

                if (Math.random() > 0.22)
                {
                    if (Math.random() > 0.49)
                    {
                        scenicList.push(new Scenery("item", -42599, -1308, 0, "nirwaden", ["steamedTialo", 1, -3]));
                    }
                    //
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "slums18")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-42574, -1311, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["none", [0.4, 0.45], 0, 0, 1.25], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-42761, -1709]], kid: true, altID: "slums18"}));
                    }

                    //
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "slums17")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-42619, -1437, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["none", [0.4, 0.45], 0, 0, 1.25], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-42595, -1415]], altID: "slums17"}));
                    }
                }

                if (Math.random() > 0.8)
                {
                    //
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "slums16")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-42458, -1667, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["none", 0], weapon: ["none", [0.35, 0.75], 0, 0, 1.15], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-42761, -1709]], altID: "slums16"}));
                    }
                }

                if (Math.random() > 0.68)
                {
                    //
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "slums15")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-42789, -1695, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.25, 0.25], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-42761, -1709]], altID: "slums15"}));
                    }
                }

                if (Math.random() > 0.9)
                {
                    //
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "slums14")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-42025, -1855, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.15, 0.15], 0, 0, 1.1], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-41509, -1356]], altID: "slums14"}));
                    }
                }

                if (Math.random() > 0.24)
                {

                    //
                    if (Math.random() > 0.73)
                    {
                        if (Math.random() > 0.61)
                        {
                            if (Math.random() > 0.37)
                            {
                                scenicList.push(new Scenery("item", -42491, -1968, 0, "nirwaden", ["steamedTialo", 1, -3]));
                                scenicList.push(new Scenery("item", -42491, -1968, 0, "nirwaden", ["frichMeat", 1, -2]));

                                if (Math.random() > 0.8)
                                {
                                    scenicList.push(new Scenery("item", -42508, -1973, 0, "nirwaden", ["iemaBerries", 1, -4]));
                                }
                            }
                            else
                            {
                                scenicList.push(new Scenery("item", -42491, -1968, 0, "nirwaden", ["steamedTialo", 1, -3]));
                                scenicList.push(new Scenery("item", -42491, -1968, 0, "nirwaden", ["varnMeat", 1, -5]));

                                if (Math.random() > 0.9)
                                {
                                    scenicList.push(new Scenery("item", -42508, -1973, 0, "nirwaden", ["akerBerries", 1, -2]));
                                }
                                else
                                {
                                    if (Math.random() > 0.8)
                                    {
                                        scenicList.push(new Scenery("item", -42508, -1973, 0, "nirwaden", ["iemaBerries", 1, -4]));
                                    }
                                }
                            }
                        }
                        else
                        {
                            if (Math.random() > 0.79)
                            {
                                scenicList.push(new Scenery("item", -42493, -1968, 0, "nirwaden", ["steamedTialo", 1, -3]));
                            }
                        }


                        var hits = 0;
                        for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                        {
                            if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                            {
                                if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                                {
                                    if (ArtificialIntelligenceAccess[i].ultra.altID == "slums13")
                                    {
                                        hits += 1;
                                        break;
                                    }
                                }
                            }
                        }
                        if (hits == 0)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-42509, -1932, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-42508, -1946]], altID: "slums13"}));
                        }
                    }
                    else
                    {
                        var hits = 0;
                        for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                        {
                            if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                            {
                                if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                                {
                                    if (ArtificialIntelligenceAccess[i].ultra.altID == "slums13")
                                    {
                                        hits += 1;
                                        break;
                                    }
                                }
                            }
                        }
                        if (hits == 0)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-42530, -1846, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-42511, -1867]], altID: "slums13"}));
                        }
                    }
                }

                if (Math.random() > 0.55)
                {
                    //
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "slums12")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-41540, -1327, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-41509, -1356]], altID: "slums12"}));
                    }
                }

                if (Math.random() > 0.7)
                {
                    //
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "slums11")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-41060, -2024, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-41741, -2126]], altID: "slums11"}));
                    }
                }


                if (Math.random() > 0.6)
                {
                    if (Math.random() > 0.6)
                    {
                        scenicList.push(new Scenery("item", -41740, -2151, 0, "nirwaden", ["frichMeat", 1, -2]));
                    }

                    //
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "slums10")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-41740, -2089, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["frichFurClothing", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-41741, -2126]], altID: "slums10"}));
                    }
                }

                if (Math.random() > 0.36)
                {
                    scenicList.push(new Scenery("item", -41929, -2520, 0, "nirwaden", ["steamedTialo", 1, -3]));

                    //
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "slums9")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-41812, -2598, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["frichFurClothing", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-41812, -2580]], kid: true, altID: "slums9"}));
                    }

                    //
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "slums8")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-41906, -2524, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["none", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-41611, -2578]], altID: "slums8"}));
                    }
                }

                if (Math.random() > 0.25)
                {
                    scenicList.push(new Scenery("item", -41605, -2552, 0, "nirwaden", ["steamedTialo", 1, -3]));

                    //
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "slums7")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-41611, -2591, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["frichFurClothing", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-41611, -2578]], altID: "slums7"}));
                    }
                }

                if (Math.random() > 0.4)
                {
                    scenicList.push(new Scenery("item", -41850, -2843, 0, "nirwaden", ["steamedTialo", 1, -3]));
                    scenicList.push(new Scenery("item", -41850, -2843, 0, "nirwaden", ["varnMeat", 1, -5]));
                    //
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "slums6")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-41890, -2839, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["varnFurClothing", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-41875, -2842]], altID: "slums6"}));
                    }
                }
                if (Math.random() > 0.25)
                {
                    scenicList.push(new Scenery("item", -41605, -2552, 0, "nirwaden", ["steamedTialo", 1, -3]));

                    //
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "slums7")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-41611, -2591, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["frichFurClothing", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-41611, -2578]], altID: "slums7"}));
                    }
                }

                if (Math.random() > 0.4)
                {
                    scenicList.push(new Scenery("item", -41850, -2843, 0, "nirwaden", ["steamedTialo", 1, -3]));
                    scenicList.push(new Scenery("item", -41850, -2843, 0, "nirwaden", ["varnMeat", 1, -5]));
                    //
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "slums6")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-41890, -2839, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["varnFurClothing", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-41875, -2842]], altID: "slums6"}));
                    }
                }
                if (Math.random() > 0.75)
                {

                    //
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "slums5")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-42619, -2572, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["frichFurClothing", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-42595, -2585]], altID: "slums5"}));
                    }
                }
                if (Math.random() > 0.15)
                {
                    if (Math.random() < 0.19)
                    {
                        scenicList.push(new Scenery("item", -41847, -2179, 0, "nirwaden", ["kolumPowder", 1, -19]));
                    }
                    else
                    {
                        scenicList.push(new Scenery("item", -41847, -2179, 0, "nirwaden", ["varnMeat", 1, -5]));
                    }
                    //
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "slums4")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-41845, -2230, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["frichFurClothing", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-41845, -2205]], altID: "slums4"}));
                    }
                }

                if (Math.random() > 0.6)
                {
                    scenicList.push(new Scenery("item", -42386, -2565, 0, "nirwaden", ["steamedTialo", 1, -3]));
                    scenicList.push(new Scenery("item", -42386, -2565, 0, "nirwaden", ["frichMeat", 1, -2]));
                    //
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "slums3")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-42388, -2510, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["varnFurClothing", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-42388, -2528]], altID: "slums3"}));
                    }
                }

                if (Math.random() > 0.3)
                {
                    scenicList.push(new Scenery("item", -42915, -2613, 0, "nirwaden", ["steamedTialo", 1, -3]));
                    //
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "slums1")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-42882, -2607, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["frichFurClothing", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-44809, -2693]], altID: "slums1"}));
                    }
                }
                if (Math.random() > 0.2)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "slums2")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-42331, -2127, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["frichFurClothing", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-44809, -2693]], altID: "slums2"}));
                    }
                }

                var hits = -1;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].type == "Peacock" && ArtificialIntelligenceAccess[i].ID == "flagabili")
                    {
                        hits = i;
                    }
                }
                if (hits == -1)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44458, 3242, "Peacock", false, "flagabili"));
                }

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinPed1")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    if (timeOfDay == "Day")
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-45095, 3156, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.3, 0.3], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 7, patrolLoop: true, route:[[-45118, 4266], [-45349, 4695], [-45108, 5059], [-44645, 4819], [-44983, 4187], [-44977, 3183], [-45095, 3156]], altID: "atalinPed1"}));
                    }
                }

                //boar fight viewers
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinBF1")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    if (timeOfDay == "Day" || timeOfDay == "Dawn")
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-44390, 2537, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.3, 0.3], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44393, 2537]], altID: "atalinBF1"}));
                    }
                }
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinBF2")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    if (timeOfDay == "Day" || timeOfDay == "Dawn")
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-44307, 2693, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.3, 0.3], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44334, 2689]], altID: "atalinBF2"}));
                    }
                }
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinBF3")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    if (timeOfDay == "Day" || timeOfDay == "Dawn")
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-44777, 2107, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.3, 0.3], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44778, 2144]], altID: "atalinBF3"}));
                    }
                }
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinBF4")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    if (timeOfDay == "Day" || timeOfDay == "Dawn")
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-44875, 2057, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.3, 0.3], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44877, 2086]], altID: "atalinBF4"}));
                    }
                }
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinBF5")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    if (timeOfDay == "Day" || timeOfDay == "Dawn")
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-45600, 2052, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.3, 0.3], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45583, 2092]], altID: "atalinBF5"}));
                    }
                }
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinBF6")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    if (timeOfDay == "Day" || timeOfDay == "Dawn")
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-45747, 2421, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.3, 0.3], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45716, 2433]], altID: "atalinBF6"}));
                    }
                }

                if (uniqueChars.eduardoLDS)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Hidalgo Eduardo the Commissioner")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-45111, 2079, "Soldier", false, "Hidalgo Eduardo the Commissioner", {race: "Nirwaden", faction: "Nirwaden", con: 20, speed: 1.15, outfit: ["matadorOutfit", 0], weapon: ["nirineseSabre", [12, 11], 0, 25, 1.25], ranged: [false, "steelBolt", 14, 2200, 17, 16 /3, 0, "none", 3.35], patrolStops: 1, patrolLoop: false, route:[[-45101, 2053]]}));
                    }
                }

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinPed2")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    if (timeOfDay == "Day" || timeOfDay == "Dusk" || timeOfDay == "Dawn")
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-44124, 1351, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.3, 0.3], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 13, patrolLoop: true, route:[[-45046, 1341], [-45072, 527], [-46096, 498], [-46110, 1414], [-47019, 1410], [-47028, 1131], [-47250, 1122], [-47245, 272], [-47361, 260], [-44337, 245], [-44351, 487], [-44176, 495], [-44124, 1351]], altID: "atalinPed2"}));
                    }
                }

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Altezor Soldier")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "gardenGuard2")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44140, 7902, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 9, speed: 1.34, outfit: ["nirwadenMorionArmour", 12], weapon: ["nirineseSabre", [9, 9], 0, 22, 1], ranged: [false, "steelBolt", 14, 2200, 15, 16 /3, 0, "none", 3], patrolStops: 2, patrolLoop: true, route:[[-44140, 3009], [-44140, 7902]], altID: "gardenGuard2"}));
                }

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Altezor Soldier")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "centreGuard2")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-45144, 1067, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 8, speed: 1.2, outfit: ["nirwadenMorionArmour", 11], weapon: ["nirineseSabre", [10, 10], 0, 23, 1.2], ranged: [false, "steelBolt", 16, 2250, 16, 17 /3, 0, "none", 3], patrolStops: 5, patrolLoop: true, route:[[-46043, 1056], [-45964, 2756], [-45964, 459], [-45144, 459], [-45144, 1067]], altID: "centreGuard2"}));
                }

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Altezor Soldier")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "centreGuard3")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44058, -715, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 9, speed: 1.3, outfit: ["nirwadenMorionArmour", 12], weapon: ["nirineseSabre", [9, 9], 0, 25, 1.25], ranged: [false, "steelBolt", 14, 2250, 19, 18 /3, 0, "none", 3], patrolStops: 0, patrolLoop: false, route:[[-45458, -1070]], altID: "centreGuard3"}));
                }
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Altezor Soldier")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "woodsGuard1")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-43227, -2825, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 8, speed: 1.25, outfit: ["nirwadenMorionArmour", 11], weapon: ["nirineseSabre", [9, 9], 0, 24, 1.3], ranged: [false, "steelBolt", 15, 2250, 17, 17 /3, 0, "none", 3.15], patrolStops: 2, patrolLoop: true, route:[[-44081, -2825], [-43227, -2825]], altID: "woodsGuard1"}));
                }

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Altezor Soldier")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "orchardGuard1")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-41770, 2839, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 6, speed: 1.15, outfit: ["nirwadenMorionArmour", 10], weapon: ["nirineseSabre", [8, 8], 0, 24, 1.35], ranged: [false, "steelBolt", 15, 2250, 17, 17 /3, 0, "none", 3.15], patrolStops: 4, patrolLoop: true, route:[[-44177, 2826], [-44128, 1311], [-41736, 1321], [-41770, 2839]], altID: "orchardGuard1"}));
                }


                change = "e4";
            }
        }
        else if (region == "e5") //Atalin City
        {
            if (change != "e5")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                generator2(897, 27418911, 421534281, 8548903, 119, 1, -44150, -3266, true);
                cropper(-44150, -3266, -45175, -3598, true, true);

                for (var i = scenicList.length -1; i >= 0; i--)
                {
                    if (scenicList[i].type != "pineTree")
                    {
                        scenicList.splice(i, 1);
                    }
                }

                //s-1-e-5
                generator2(789678567456345678, 87675674567589, 23453467578, 87967857598607, 775764427, 1, -44316, -3916, true);
                cropper(-44316, -3916, -46384, -13818, true, true);

                generator2(194838973478567290593490753765777, 874189889999927462711, 21264612647782889982392365641534281, 4291914929422375482332503, 3339769, 1, -40882, 3192, true);
                cropper(-40882, -3192, -44012, -3634, true, true);

                generator2(53765777, 99, 213974281, 332503, 100101000, 1, -33959, -3720, true);
                cropper(-40435, -3624, -44055, -13911, true, true);

                //e - 5 east plains
                generator(865, 32636879, 341351, 76543332, 327689, 2, -47650, 6003); //eastern grasslands in map e-5
                cropper(-47650, 6003, -53392, -3104, true, true);

                for (var i = ArtificialIntelligenceAccess.length -1; i >= 0; i--)
                {
                    if (ArtificialIntelligenceAccess[i].type == "Peacock")
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                    }
                }

                //generator(998194838973478567290593490753765777, 893156183774189889999927462711, 212646126477828899823923656415326758196327583974281, 6688395285999999892194291914929422375482332503, 1111111111009836537010101010010100000011110010 , 1, -44194, 6496);

                //REGION CREATION
                //Build AI Units

                //PROPS
                //scenicList.push(new Scenery("skeleton", -19230, 5008, 5.12, 1.75));

                //CREATURES
                //ArtificialIntelligenceAccess.push(new Unit(-13935, 2270, "Grib", false, "docile"));
                //ArtificialIntelligenceAccess.push(new Unit(-14477, 1925, "Viper", false, "Slib"));
                //ArtificialIntelligenceAccess.push(new Unit(-14087, 1359, "Lizard", true, "Lib"));
                //ArtificialIntelligenceAccess.push(new Unit(-14501, 3283, "BlackBear", false, "Clib"));
                //ArtificialIntelligenceAccess.push(new Unit(-15119, 2314, "Varn", true, "Flib"));
                //ArtificialIntelligenceAccess.push(new Unit(-13713, 5329, "Narthwarp", false, "silwil"));
                //scenicList.push(new Scenery("ulgoyPlant", -16488, 3908, 4.9, 7));
                //ArtificialIntelligenceAccess.push(new Unit(-16473, 3885, "Ulgoy", "giant", "The Really Big Plant"));
                //ArtificialIntelligenceAccess.push(new Unit(-16247, 3330, "Boar", true, "Tambor"));
                //ArtificialIntelligenceAccess.push(new Unit(-14353, 3844, "Shehid", true, "sheta"));
                //scenicList.push(new Scenery("beeHive", -15375 , -2055, 4.5, true));

                //Duendes
                if (quests.duendeInfestationKillCount < 9 && quests.duendeInfestationDuendeLoad == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44751, -2175, "Duende", true, "arena2"));
                    ArtificialIntelligenceAccess.push(new Unit(-44659, -2187, "Duende", true, "arena2"));
                    ArtificialIntelligenceAccess.push(new Unit(-44706, -2228, "Duende", true, "arena2"));
                    ArtificialIntelligenceAccess.push(new Unit(-44644, -2262, "Duende", true, "arena2"));
                    ArtificialIntelligenceAccess.push(new Unit(-44965, -2336, "Duende", true, "arena2"));
                    ArtificialIntelligenceAccess.push(new Unit(-44918, -2255, "Duende", true, "arena2"));
                    ArtificialIntelligenceAccess.push(new Unit(-44724, -2328, "Duende", true, "arena2"));
                    ArtificialIntelligenceAccess.push(new Unit(-44760, -2286, "Duende", true, "arena2"));
                    ArtificialIntelligenceAccess.push(new Unit(-44858, -2195, "Duende", true, "arena2"));
                }

                if (quests.imaginaryFriendQuest == true)
                {
                    if (uniqueChars.boggartLezarLDS)
                    {
                        var hits = 0;
                        for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                        {
                            if (ArtificialIntelligenceAccess[i].ID == "Lezar" && ArtificialIntelligenceAccess[i].type == "Boggart")
                            {
                                hits += 1;
                                break;
                            }
                        }
                        if (hits == 0)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-46191, -1284, "Boggart", true, "Lezar"));//boggart
                        }
                    }
                }

                if (player.raceName != "Nirwaden" || player.title != "Nobility" && player.title != "Royalty")
                {
                    scenicList.push(new Scenery("polyapaTree", -45646, 1617, 1.5, "nirwaden"));
                    scenicList.push(new Scenery("polyapaTree", -45646, 1917, -8, "nirwaden"));

                    scenicList.push(new Scenery("chonaTree", -45346, 1617, 6.5, "nirwaden"));
                    scenicList.push(new Scenery("chonaTree", -45346, 1917, -4.75, "nirwaden"));

                    scenicList.push(new Scenery("chonaTree", -44746, 1617, -2.5, "nirwaden"));
                    scenicList.push(new Scenery("chonaTree", -44746, 1917, 5.5, "nirwaden"));

                    scenicList.push(new Scenery("polyapaTree", -44446, 1617, 3.5, "nirwaden"));
                    scenicList.push(new Scenery("polyapaTree", -44446, 1917, 1.67, "nirwaden"));

                    for (var poop = 0; poop < 16; poop++)
                    {
                        scenicList.push(new Scenery("rosePlant", -44452, 3119 + 300 * poop, 3.78 * 2 * Math.cos(poop * poop), "nirwaden"));
                        scenicList.push(new Scenery("yellowStetriliPlant", -44571, 3004 + 300 * poop, 3.78 * 2 * Math.sin(poop * poop), "nirwaden"));
                        scenicList.push(new Scenery("redStetriliPlant", -44327, 3244 + 300 * poop, 3.78 * 2 * Math.cos(poop + 3 * poop), "nirwaden"));
                    }
                    for (var poop = 0; poop < 15; poop++)
                    {
                        if (poop < 3 || poop > 5)
                        {
                            scenicList.push(new Scenery("yellowStetriliPlant", -44870, 3304 + 300 * poop, 3.78 * 3 * Math.cos(poop * poop), "nirwaden"));
                            scenicList.push(new Scenery("rosePlant", -44752, 3419 + 300 * poop, 5.2 * poop * Math.sin(poop * 8), "nirwaden"));
                            scenicList.push(new Scenery("redStetriliPlant", -44630, 3304 + 300 * poop, 3.78 * 3 * Math.sin(poop + 4 * poop), "nirwaden"));
                        }
                    }

                    for (var poop = 0; poop < 16; poop++)
                    {
                        scenicList.push(new Scenery("yellowStetriliPlant", -45528, 3004 + 300 * poop, 3.78 * 2 * Math.cos(poop * poop), "nirwaden"));
                        scenicList.push(new Scenery("rosePlant", -45652, 3119 + 300 * poop, 3.78 * 2 * Math.sin(poop * poop), "nirwaden"));
                        scenicList.push(new Scenery("redStetriliPlant", -45776, 3244 + 300 * poop, 3.78 * 2 * Math.cos(poop + 3 * poop), "nirwaden"));
                    }

                    for (var poop = 0; poop < 15; poop++)
                    {
                        if (poop < 3 || poop > 5)
                        {
                            scenicList.push(new Scenery("yellowStetriliPlant", -45228, 3304 + 300 * poop, 3.78 * 3 * Math.sin(poop * poop), "nirwaden"));
                            scenicList.push(new Scenery("rosePlant", -45352, 3419 + 300 * poop, 5.2 * poop * Math.cos(poop * 8), "nirwaden"));
                            scenicList.push(new Scenery("redStetriliPlant", -45471, 3304 + 300 * poop, 3.78 * 3 * Math.cos(poop + 4 * poop), "nirwaden"));
                        }
                    }
                }
                else
                {
                    scenicList.push(new Scenery("polyapaTree", -45646, 1617, 1.5, true));
                    scenicList.push(new Scenery("polyapaTree", -45646, 1917, -8, true));

                    scenicList.push(new Scenery("chonaTree", -45346, 1617, 6.5, true));
                    scenicList.push(new Scenery("chonaTree", -45346, 1917, -4.75, true));

                    scenicList.push(new Scenery("chonaTree", -44746, 1617, -2.5, true));
                    scenicList.push(new Scenery("chonaTree", -44746, 1917, 5.5, true));

                    scenicList.push(new Scenery("polyapaTree", -44446, 1617, 3.5, true));
                    scenicList.push(new Scenery("polyapaTree", -44446, 1917, 1.67, true));

                    for (var poop = 0; poop < 16; poop++)
                    {
                        scenicList.push(new Scenery("rosePlant", -44452, 3119 + 300 * poop, 3.78 * 2 * Math.cos(poop * poop), true));
                        scenicList.push(new Scenery("yellowStetriliPlant", -44571, 3004 + 300 * poop, 3.78 * 2 * Math.sin(poop * poop), true));
                        scenicList.push(new Scenery("redStetriliPlant", -44327, 3244 + 300 * poop, 3.78 * 2 * Math.cos(poop + 3 * poop), true));
                    }
                    for (var poop = 0; poop < 15; poop++)
                    {
                        if (poop < 3 || poop > 5)
                        {
                            scenicList.push(new Scenery("yellowStetriliPlant", -44870, 3304 + 300 * poop, 3.78 * 3 * Math.cos(poop * poop), true));
                            scenicList.push(new Scenery("rosePlant", -44752, 3419 + 300 * poop, 5.2 * poop * Math.sin(poop * 8), true));
                            scenicList.push(new Scenery("redStetriliPlant", -44630, 3304 + 300 * poop, 3.78 * 3 * Math.sin(poop + 4 * poop), true));
                        }
                    }

                    for (var poop = 0; poop < 16; poop++)
                    {
                        scenicList.push(new Scenery("yellowStetriliPlant", -45528, 3004 + 300 * poop, 3.78 * 2 * Math.cos(poop * poop), true));
                        scenicList.push(new Scenery("rosePlant", -45652, 3119 + 300 * poop, 3.78 * 2 * Math.sin(poop * poop), true));
                        scenicList.push(new Scenery("redStetriliPlant", -45776, 3244 + 300 * poop, 3.78 * 2 * Math.cos(poop + 3 * poop), true));
                    }

                    for (var poop = 0; poop < 15; poop++)
                    {
                        if (poop < 3 || poop > 5)
                        {
                            scenicList.push(new Scenery("yellowStetriliPlant", -45228, 3304 + 300 * poop, 3.78 * 3 * Math.sin(poop * poop), true));
                            scenicList.push(new Scenery("rosePlant", -45352, 3419 + 300 * poop, 5.2 * poop * Math.cos(poop * 8), true));
                            scenicList.push(new Scenery("redStetriliPlant", -45471, 3304 + 300 * poop, 3.78 * 3 * Math.cos(poop + 4 * poop), true));
                        }
                    }
                }

                scenicList.push(new Scenery("stillFountain", -45055, 4620, 0, 0, 2));


                //Build Scenery
                scenicList.push(new Scenery("nirwadenStadium", -45043, 2535, 0, true));
                scenicList.push(new Scenery("nirwadenStadiumCanopy", -45043, 2885, 0, true));

                scenicList.push(new Scenery("nirwadenStableD", -46576, 1573, 0, true));
                scenicList.push(new Scenery("nirwadenStableD", -46903, 1573, 0, true));
                scenicList.push(new Scenery("hayPile", -46476, 1591, 4, 1.62));
                scenicList.push(new Scenery("hayPile", -46940, 1578, 9, 1.333));
                scenicList.push(new Scenery("nirwadenStableD", -46912, -1625, 0, true));

                ArtificialIntelligenceAccess.push(new Unit(-46606, 1571, "Horse", true, "Elbelico"));
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Elbelico")
                    {
                        ArtificialIntelligenceAccess[i].baseTeam = "Nirwaden";
                        ArtificialIntelligenceAccess[i].tamable = false;
                    }
                }

                //main plaza east
                scenicList.push(new Scenery("nirwadenBuilding7", -46876, -1217, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding4", -46104, -1264, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding5", -47088, 39, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding6", -46759, 898, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -47185, 1331, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1",-46267, 1223 , 0, true));
                scenicList.push(new Scenery("pyre", -45904, 39, 0, true));
                scenicList.push(new Scenery("well", -47164, -1414, 5.15, true));
                scenicList.push(new Scenery("nirwadenBuilding3", -45615, 828, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1",-45695, 1332, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -45484, 1336, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -44115, 153, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -44422, 812, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -44651, 808, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding3", -44741, 524, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -44537, 1090, 0, true));

                //middle class residential east Atalin (westside of map)
                scenicList.push(new Scenery("nirwadenBuilding4", -44859, -2875, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -44276, -2872, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -44119, -2456, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -44613, -2497, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding3", -44807, -2234, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -45278, -2760, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -45200, -2470, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -45127, -2109, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -45505, -2414, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding1", -45430, -2121, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -44336, -2207, 0, true));
                scenicList.push(new Scenery("nirwadenTiendaD", -44521, -2300, 0, 1));
                scenicList.push(new Scenery("nirwadenTiendaD", -44521, -2200, 0, 0));
                scenicList.push(new Scenery("nirwadenTiendaD", -44521, -2130, 0, 1));
                scenicList.push(new Scenery("nirwadenBuilding3", -45430, -1658, 0, true));
                scenicList.push(new Scenery("nirwadenTiendaU", -44922, -2111, 0, 4));
                scenicList.push(new Scenery("nirwadenTiendaR", -44085, -1873, 0, 0));
                scenicList.push(new Scenery("nirwadenTiendaR", -44091, -1630, 0, 1));
                scenicList.push(new Scenery("nirwadenTiendaD", -44382, -1858, 0, 3));
                scenicList.push(new Scenery("nirwadenTiendaL", -44979, -1661, 0, 5));
                scenicList.push(new Scenery("nirwadenTiendaU", -44677, -1863, 0, 2));
                scenicList.push(new Scenery("nirwadenTiendaD", -44113, -1197, 0, 0));
                scenicList.push(new Scenery("nirwadenTiendaD", -44524, -1582, 0, 0));
                scenicList.push(new Scenery("nirwadenTiendaL", -44696, -1306, 0, 1));
                scenicList.push(new Scenery("nirwadenTiendaR", -44113, -928, 0, 2));
                scenicList.push(new Scenery("nirwadenTiendaU", -44765, -1153, 0, 3));
                scenicList.push(new Scenery("nirwadenTiendaR", -44817, -1296, 0, 2));
                scenicList.push(new Scenery("nirwadenTiendaL", -45265, -1407, 0, 1));
                scenicList.push(new Scenery("nirwadenTiendaR", -45399, -1414, 0, 0));
                scenicList.push(new Scenery("nirwadenTiendaD", -45239, -1103, 0, 5));
                scenicList.push(new Scenery("nirwadenTiendaD", -44536, -791, 0, 0));
                scenicList.push(new Scenery("nirwadenTiendaU", -45234, -985, 0, 2));
                scenicList.push(new Scenery("nirwadenTiendaR", -44897, -666, 0, 1));
                scenicList.push(new Scenery("nirwadenTiendaL", -44484, -647, 0, 1));
                scenicList.push(new Scenery("nirwadenTiendaR", -44592, -646, 0, 3));
                scenicList.push(new Scenery("nirwadenTiendaL", -45590, -896, 0, 0));
                scenicList.push(new Scenery("nirwadenTiendaD", -44099, -519, 0, 5));
                scenicList.push(new Scenery("nirwadenTiendaU", -44097, -406, 0, 2));
                scenicList.push(new Scenery("nirwadenTiendaD", -44722, -365, 0, 0));
                scenicList.push(new Scenery("nirwadenTiendaL", -45236, -511, 0, 2));
                scenicList.push(new Scenery("nirwadenTiendaD", -45282, -648, 0, 3));

                scenicList.push(new Scenery("hayPile", -44060, -2075, 2, 1.7));
                scenicList.push(new Scenery("hayPile", -44078, -2141, 7, 1.6));

                //wine stand
                scenicList.push(new Scenery("nirwadenMueble", -45279, -668, 0 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("barrel", -45342, -638, 3.333, 1));
                scenicList.push(new Scenery("item", -45310, -671, 0, "nirwaden", ["glassBottleOfErguerWine", 1, -30]));
                scenicList.push(new Scenery("item", -45294, -672, 0, "nirwaden", ["glassBottleOfErguerWine", 1, -30]));
                scenicList.push(new Scenery("item", -45278, -670, 0, "nirwaden", ["glassBottleOfErguerWine", 1, -30]));
                scenicList.push(new Scenery("item", -45262, -668, 0, "nirwaden", ["glassBottleOfErguerWine", 1, -30]));
                scenicList.push(new Scenery("item", -45249, -670, 0, "nirwaden", ["erguerPaste", 2, -6]));
                scenicList.push(new Scenery("item", -45246, -675, 0, "nirwaden", ["erguerPaste", 2, -6]));
                scenicList.push(new Scenery("item", -45248, -666, 0, "nirwaden", ["erguerPaste", 2, -6]));
                scenicList.push(new Scenery("nirwadenGoods", -45234, -633, 4, 27)); //erguer
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Wine Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-45280, -627, "Person", false, "Wine Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.1, 0.3], 0, 0, 1.1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-45280, -645]], merchant: true, merchandise: [[new Item("coins", false, false), 60], [new Item("glassBottleOfErguerWine", false, false), 9], [new Item("erguerPaste", false, false), 15]]}));
                }
                //lights stand
                scenicList.push(new Scenery("nirwadenMueble", -45234, -467, 1.7, 2)); //square table
                scenicList.push(new Scenery("item", -45223, -449, 0, "nirwaden", ["oilLanternEmpty", 1, -25]));
                scenicList.push(new Scenery("item", -45225, -475, 0, "nirwaden", ["oilLampEmpty", 1, -15]));
                scenicList.push(new Scenery("item", -45242, -472, 0, "nirwaden", ["jarOfOil", 1, -10]));
                scenicList.push(new Scenery("item", -45242, -450, 0, "nirwaden", ["fireStarter", 1, -8]));
                scenicList.push(new Scenery("barrel", -45267, -557, 5.3, 0));
                scenicList.push(new Scenery("crate", -45213, -569, 2.4, 1, [1.02]));
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Lights Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-45280, -524, "Person", false, "Lights Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.1, 0.3], 0, 0, 1.1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-45238, -519]], merchant: true, merchandise: [[new Item("coins", false, false), 16], [new Item("oilLantern", false, false), 2], [new Item("oilLamp", false, false), 2], [new Item("jarOfOil", false, false), 3], [new Item("fireStarter", false, false), 3]]}));
                }
                //dairy stand
                scenicList.push(new Scenery("nirwadenMueble", -44924, -674, 1/2 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("item", -44880, -617, 0, "nirwaden", ["bucketOfNaapridMilk", 1, -19]));
                scenicList.push(new Scenery("item", -44906, -601, 0, "nirwaden", ["bucketOfNaapridMilk", 1, -19]));
                scenicList.push(new Scenery("item", -44929, -706, 0, "nirwaden", ["naapridButter", 2, -15]));
                scenicList.push(new Scenery("item", -44928, -698, 0, "nirwaden", ["mofuEgg", 3, -5]));
                scenicList.push(new Scenery("item", -44921, -688, 0, "nirwaden", ["mofuEgg", 3, -5]));
                scenicList.push(new Scenery("item", -44923, -678, 0, "nirwaden", ["mofuEgg", 3, -5]));
                scenicList.push(new Scenery("item", -44926, -694, 0, "nirwaden", ["mofuEgg", 3, -5]));
                scenicList.push(new Scenery("item", -44927, -690, 0, "nirwaden", ["mofuEgg", 3, -5]));
                scenicList.push(new Scenery("item", -44920, -704, 0, "nirwaden", ["mofuEgg", 3, -5]));
                scenicList.push(new Scenery("item", -44926, -645, 0, "nirwaden", ["naapricha", 1, -40]));
                scenicList.push(new Scenery("item", -44925, -662, 0, "nirwaden", ["naaprichaWedge", 1, -10]));
                scenicList.push(new Scenery("item", -44925, -674, 0, "nirwaden", ["naaprichaWedge", 1, -10]));
                scenicList.push(new Scenery("crate", -44882, -727, 2.832, 1, [1.3]));
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Dairy Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44858, -672, "Person", false, "Dairy Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.1, 0.3], 0, 0, 1.1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-44897, -672]], merchant: true, merchandise: [[new Item("coins", false, false), 35], [new Item("naapricha", false, false), 2], [new Item("naaprichaWedge", false, false), 5], [new Item("bucketOfNaapridMilk", false, false), 2], [new Item("naapridButter", false, false), 4], [new Item("mofuEgg", false, false), 42]]}));
                }

                //fruit stand
                //scenicList.push(new Scenery("nirwadenMueble", -44470, -648, 0.5016 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("nirwadenGoods", -44677, -343, 9, 7)); //empty
                scenicList.push(new Scenery("nirwadenGoods", -44710, -343, -3.43, 7)); //empty
                scenicList.push(new Scenery("nirwadenGoods", -44655, -371, -2, 7)); //empty
                scenicList.push(new Scenery("nirwadenGoods", -44655, -398, 0, 7)); //empty
                scenicList.push(new Scenery("nirwadenGoods", -44762, -345, 0, 3)); //ogo
                scenicList.push(new Scenery("nirwadenGoods", -44785, -360, 0, 4)); //polyapa
                scenicList.push(new Scenery("nirwadenGoods", -44792, -382, 0, 11)); //empty
                scenicList.push(new Scenery("item", -44792, -380, 0, "nirwaden", ["chonaFruit", 4, -7]));
                scenicList.push(new Scenery("item",-44788, -383, 0, "nirwaden", ["chonaFruit", 4, -7]));
                scenicList.push(new Scenery("item",-44785, -381, 0, "nirwaden", ["chonaFruit", 4, -7]));

                scenicList.push(new Scenery("item", -44792 - 9, -380, 0, "nirwaden", ["chonaFruit", 4, -7]));
                scenicList.push(new Scenery("item",-44788 - 9, -383, 0, "nirwaden", ["chonaFruit", 4, -7]));
                scenicList.push(new Scenery("item",-44785 - 9, -381, 0, "nirwaden", ["chonaFruit", 4, -7]));
                scenicList.push(new Scenery("item",-44710, -345, 0, "nirwaden", ["bequonFruit", 1, -14]));
                scenicList.push(new Scenery("item",-44678, -344, 0, "nirwaden", ["karmFruit", 2, -12]));
                scenicList.push(new Scenery("item",-44656, -372, 0, "nirwaden", ["kwomFruit", 1, -10]));
                scenicList.push(new Scenery("item",-44657, -398, 0, "nirwaden", ["suuliMelon", 3, -21]));

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Fruit Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44717, -338, "Person", false, "Fruit Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.1, 0.3], 0, 0, 1.1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-44717, -389]], merchant: true, merchandise: [[new Item("coins", false, false), 61], [new Item("chonaFruit", false, false), 25], [new Item("polyapaFruit", false, false), 28], [new Item("suuliMelon", false, false), 8], [new Item("bequonFruit", false, false), 2], [new Item("ogoFruit", false, false), 10], [new Item("karmFruit", false, false), 3], [new Item("kwomFruit", false, false), 2]]}));
                }
                        //mineral stand
                scenicList.push(new Scenery("nirwadenMueble", -45602, -932, 0.5039 * Math.PI, 2)); //square table
                scenicList.push(new Scenery("item", -45611, -916, 0, "nirwaden", ["rawGold", 1, -25]));
                scenicList.push(new Scenery("item", -45610, -930, 0, "nirwaden", ["rawSilver", 1, -25]));
                scenicList.push(new Scenery("item", -45609, -946, 0, "nirwaden", ["ironOre", 1, -4]));
                scenicList.push(new Scenery("item", -45590, -936, 0, "nirwaden", ["copperOre", 2, -14]));
                scenicList.push(new Scenery("nirwadenGoods", -45600, -878, 1, 14)); //
                scenicList.push(new Scenery("item",-45592, -915, 0, "nirwaden", ["copperDust", 5, -12]));
                scenicList.push(new Scenery("crate", -45586, -833, -8.6321, 1, [1.4]));

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Arcus Co Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-45615, -884, "Person", false, "Arcus Co Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.1, 0.3], 0, 0, 1.1], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[-45560, -878]], merchant: true, merchandise: [[new Item("coins", false, false), 70], [new Item("copperOre", false, false), 19], [new Item("copperDust", false, false), 6], [new Item("rawGold", false, false), 3], [new Item("rawSilver", false, false), 5], [new Item("ironOre", false, false), 17]]}));
                }
                        //nirwaden mercenaries enclave
                if (uniqueChars.loLDS)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Sellsword" && ArtificialIntelligenceAccess[i].type == "Soldier")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.sellswordID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.sellswordID == "Martin")
                                {
                                    hits += 1;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-44888, -2127, "Soldier", false, "Sellsword", {race: "Nirwaden", faction: "EstolGang", con: 4, speed: 1.1, outfit: ["nirwadenGambeson", 2.5], weapon: ["nirineseSabre", [6, 6], 0, 20, 1.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 1, patrolLoop: true, route:[[-44888, -2097]], sellswordID: "Martin", sightRadius: 600, hirePrice: 90}));
                    }
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Sellsword" && ArtificialIntelligenceAccess[i].type == "Soldier")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.sellswordID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.sellswordID == "David")
                                {
                                    hits += 1;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-44996, -2129, "Soldier", false, "Sellsword", {race: "Nirwaden", faction: "EstolGang", con: 3, speed: 1.435, outfit: ["varnFurClothing", 0], weapon: ["crossbow", [0.1, 0.3], 0, 0, 11], ranged: [true, "steelBolt", 17, 2330, 18, 11 /3, 0, "none", 11], patrolStops: 1, patrolLoop: true, route:[[-44979, -2106]], sellswordID: "David", sightRadius: 1150, hirePrice: 174}));
                    }
                }
                    //trapping stand
                scenicList.push(new Scenery("nirwadenMueble", -44726, -1860, 0.5075 * Math.PI, 2)); //square table
                scenicList.push(new Scenery("item", -44726, -1860, 0, "nirwaden", ["jacks", 3, -12]));
                scenicList.push(new Scenery("item", -44711, -1874, 0, "nirwaden", ["jacks", 3, -12]));
                scenicList.push(new Scenery("item", -44710, -1850, 0, "nirwaden", ["beartrap", 1, -11]));
                scenicList.push(new Scenery("item", -44731, -1876, 0, "nirwaden", ["beartrap", 1, -11]));
                scenicList.push(new Scenery("item", -44728, -1841, 0, "nirwaden", ["beartrap", 1, -11]));
                scenicList.push(new Scenery("crate", -44663, -1898, 9.2, 1, [1.15]));

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Trap Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44655, -1862, "Person", false, "Trap Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["blackBearFurClothing", 0.25], weapon: ["crossbow", [0.1, 0.3], 0, 0, 13], ranged: [true, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44655, -1850]], merchant: true, merchandise: [[new Item("coins", false, false), 18], [new Item("jacks", false, false), 13], [new Item("beartrap", false, false), 3]]}));
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Trap Vendor")
                        {
                            ArtificialIntelligenceAccess[i].healthMAX = 24;
                            ArtificialIntelligenceAccess[i].health = 24;
                        }
                    }
                }
                    //pastry stand
                scenicList.push(new Scenery("nirwadenMueble", -45419, -1418, 0.51 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("item", -45420, -1385, 0, "nirwaden", ["iemaTart", 2, -9]));
                scenicList.push(new Scenery("item", -45419, -1400, 0, "nirwaden", ["iemaTart", 2, -9]));
                scenicList.push(new Scenery("item", -45418, -1413, 0, "nirwaden", ["polyapaTart", 2, -9]));
                scenicList.push(new Scenery("item", -45417, -1424, 0, "nirwaden", ["polyapaTart", 2, -9]));
                scenicList.push(new Scenery("item", -45420, -1436, 0, "nirwaden", ["chonaTart", 2, -9]));
                scenicList.push(new Scenery("item", -45415, -1446, 0, "nirwaden", ["chonaTart", 2, -9]));

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Pastry Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-45390, -1413, "Person", false, "Pastry Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.125, 0.15], 0, 0, 0.9], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-44655, -1850]], merchant: true, merchandise: [[new Item("coins", false, false), 56], [new Item("iemaTart", false, false), 9], [new Item("polyapaTart", false, false), 16], [new Item("chonaTart", false, false), 18]]}));
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Pastry Vendor")
                        {
                            ArtificialIntelligenceAccess[i].speed = 1.525;
                            ArtificialIntelligenceAccess[i].healthMAX = 3;
                            ArtificialIntelligenceAccess[i].health = 3;
                        }
                    }
                }

                //flower stand
                scenicList.push(new Scenery("nirwadenMueble", -45262, -1407, 0.4962 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("item", -45265, -1382, 0, "nirwaden", ["volaFlowers", 1, -16]));
                scenicList.push(new Scenery("item", -45263, -1377, 0, "nirwaden", ["rilthasiaFlower", 1, -8]));
                scenicList.push(new Scenery("item", -45262, -1392, 0, "nirwaden", ["rilthasiaFlower", 1, -8]));
                scenicList.push(new Scenery("item", -45261, -1410, 0, "nirwaden", ["galloshFlower", 1, -15]));
                scenicList.push(new Scenery("item", -45261, -1424, 0, "nirwaden", ["erguerFlower", 3, -9]));
                scenicList.push(new Scenery("item", -45256, -1431, 0, "nirwaden", ["erguerFlower", 3, -9]));
                scenicList.push(new Scenery("crate", -45301, -1364, 6.56 + Math.PI, 1, [1.14]));


                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Flower Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-45327, -1410, "Person", false, "Flower Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.125, 0.15], 0, 0, 0.9], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45286, -1408]], merchant: true, merchandise: [[new Item("coins", false, false), 10], [new Item("rilthasiaFlower", false, false), 6], [new Item("volaFlowers", false, false), 3], [new Item("galloshFlower", false, false), 4], [new Item("erguerFlower", false, false), 22]]}));
                }

                    //hides and pelts stand
                scenicList.push(new Scenery("nirwadenMueble", -44975, -1707, 0.5 * Math.PI, 2)); //table sml square
                scenicList.push(new Scenery("nirwadenMueble", -44978, -1614, 0.512 * Math.PI, 2)); //table sml square
                scenicList.push(new Scenery("crate", -45020, -1617, 0 + Math.PI, 1, [1.14]));
                scenicList.push(new Scenery("item", -44984, -1612, 0, "nirwaden", ["molteHide", 1, -20]));
                scenicList.push(new Scenery("item", -44974, -1624, 0, "nirwaden", ["smlBlackBearPelt", 1, -8]));
                scenicList.push(new Scenery("item", -44973, -1689, 0, "nirwaden", ["varnPelt", 1, -3]));
                scenicList.push(new Scenery("item", -44978, -1704, 0, "nirwaden", ["frichPelt", 1, -1]));
                scenicList.push(new Scenery("item", -44964, -1705, 0, "nirwaden", ["frichPelt", 1, -1]));
                scenicList.push(new Scenery("item", -44972, -1722, 0, "nirwaden", ["ardilPelt", 2, -8]));
                scenicList.push(new Scenery("item", -44979, -1598, 0, "nirwaden", ["varnPelt", 1, -3]));


                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Furs Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-45017, -1659, "Person", false, "Furs Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["none", 0], weapon: ["none", [0.125, 0.15], 0, 0, 0.9], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44986, -1658]], merchant: true, merchandise: [[new Item("coins", false, false), 37], [new Item("molteHide", false, false), 3], [new Item("medBlackBearPelt", false, false), 4], [new Item("varnPelt", false, false), 7], [new Item("frichPelt", false, false), 5], [new Item("ardilPelt", false, false), 2]]}));
                }
                    //root vegetable stand
                scenicList.push(new Scenery("nirwadenMueble", -45242, -1113, Math.PI, 1)); //bench
                scenicList.push(new Scenery("crate", -45192, -1070, 8.2 + Math.PI, 1, [1.03]));
                scenicList.push(new Scenery("item", -45214, -1115, 0, "nirwaden", ["palntRoot", 2, -5]));
                scenicList.push(new Scenery("item", -45226, -1113, 0, "nirwaden", ["palntRoot", 2, -5]));
                scenicList.push(new Scenery("item", -45231, -1117, 0, "nirwaden", ["carrot", 2, -4]));
                scenicList.push(new Scenery("item", -45244, -1115, 0, "nirwaden", ["carrot", 2, -4]));
                scenicList.push(new Scenery("item", -45261, -1112, 0, "nirwaden", ["potato", 1, -1]));
                scenicList.push(new Scenery("item", -45277, -1121, 0, "nirwaden", ["potato", 2, -2]));


                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Vegetable Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-45242, -1059, "Person", false, "Vegetable Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.45], 0, 0, 1.06], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45234, -1085]], merchant: true, merchandise: [[new Item("coins", false, false), 25], [new Item("carrot", false, false), 20], [new Item("palntRoot", false, false), 19], [new Item("potato", false, false), 14]]}));
                }
                    //homeware stand
                scenicList.push(new Scenery("nirwadenMueble", -45235, -977, 0, 1)); //bench
                scenicList.push(new Scenery("crate", -45188, -1020, 3.4, 2, [1.35]));
                scenicList.push(new Scenery("item", -45166, -983, 0, "nirwaden", ["bucket", 1, -6]));
                scenicList.push(new Scenery("item", -45164, -958, 0, "nirwaden", ["bucket", 1, -6]));
                scenicList.push(new Scenery("item", -45282, -1025, 0, "nirwaden", ["barrel", 1, -18]));
                scenicList.push(new Scenery("item", -45264, -979, 0, "nirwaden", ["glassBottle", 1, -4]));
                scenicList.push(new Scenery("item", -45252, -972, 0, "nirwaden", ["glassBottle", 1, -4]));
                scenicList.push(new Scenery("item", -45239, -977, 0, "nirwaden", ["pintGlass", 2, -2]));
                scenicList.push(new Scenery("item", -45223, -984, 0, "nirwaden", ["pintGlass", 2, -2]));
                scenicList.push(new Scenery("item", -45206, -972, 0, "nirwaden", ["woodenBowl", 3, -7]));
                scenicList.push(new Scenery("item", -45205, -985, 0, "nirwaden", ["woodenBowl", 2, -5]));
                scenicList.push(new Scenery("item", -45225, -973, 0, "nirwaden", ["pintGlass", 2, -2]));
                scenicList.push(new Scenery("barrel", -45293, -989, -3.55555, 1));


                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Homeware Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-45229, -1032, "Person", false, "Homeware Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.1, 0.1], 0, 0, 1.14], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45236, -998]], merchant: true, merchandise: [[new Item("coins", false, false), 69], [new Item("barrel", false, false), 2], [new Item("bucket", false, false), 6], [new Item("glassBottle", false, false), 10], [new Item("pintGlass", false, false), 26], [new Item("woodenBowl", false, false), 19]]}));
                }
                    //meat stand
                scenicList.push(new Scenery("nirwadenMueble", -44686, -1298, -1/2 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("crate", -44735, -1267, 5, 2, [1.26]));
                scenicList.push(new Scenery("item", -44688, -1273, 0, "nirwaden", ["boarMeat", 1, -25]));
                scenicList.push(new Scenery("item", -44684, -1300 + 5, 0, "nirwaden", ["curedPork", 3, -8]));
                scenicList.push(new Scenery("item", -44685, -1316 + 5, 0, "nirwaden", ["curedPork", 3, -8]));
                scenicList.push(new Scenery("item", -44682, -1332 + 5, 0, "nirwaden", ["curedPork", 4, -11]));


                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Cured Pork Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44735, -1298, "Person", false, "Cured Pork Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.6, 0.35], 0, 0, 1.24], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44718, -1297]], merchant: true, merchandise: [[new Item("coins", false, false), 95], [new Item("boarMeat", false, false), 3], [new Item("curedPork", false, false), 24]]}));
                }
                //meat stand
                scenicList.push(new Scenery("nirwadenMueble", -44817, -1303, 0.511 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("nirwadenMueble", -44827, -1304, 0.511 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("crate", -44779, -1330, 1.3, 1, [1.15]));
                scenicList.push(new Scenery("item", -44815, -1333, 0, "nirwaden", ["rawNaapridFlesh", 2, -12]));
                scenicList.push(new Scenery("item", -44818, -1271, 0, "nirwaden", ["rawBearFlesh", 2, -20]));
                scenicList.push(new Scenery("item", -44821, -1294, 0, "nirwaden", ["rawBoarChunks", 1, -10]));
                scenicList.push(new Scenery("item", -44830, -1278, 0, "nirwaden", ["rawBoarChunksSmall", 1, -4]));
                scenicList.push(new Scenery("item", -44815, -1296, 0, "nirwaden", ["rawPorkbelly", 1, -24]));
                scenicList.push(new Scenery("item", -44821, -1310, 0, "nirwaden", ["rawBoarFlesh", 1, -17]));
                scenicList.push(new Scenery("item", -44828, -1325, 0, "nirwaden", ["rawVarnFlesh", 3, -9]));


                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Meat Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44769, -1293, "Person", false, "Meat Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.22], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44789, -1292]], merchant: true, merchandise: [[new Item("coins", false, false), 73], [new Item("rawBoarFlesh", false, false), 2], [new Item("rawBoarChunks", false, false), 2], [new Item("rawBoarChunksSmall", false, false), 4], [new Item("rawPorkbelly", false, false), 1], [new Item("rawNaapridFlesh", false, false), 6], [new Item("rawBearFlesh", false, false), 5], [new Item("rawVarnFlesh", false, false), 8]]}));
                }
                //fish stand
                scenicList.push(new Scenery("nirwadenMueble", -44792, -1148, 1.02 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("nirwadenMueble", -44729, -1149, 0.98 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("crate", -44758, -1194, -1.45, 2, [1.111]));
                scenicList.push(new Scenery("item", -44711, -1142, 0, "nirwaden", ["rawRedBelliedFalder", 2, -8]));
                scenicList.push(new Scenery("item", -44711, -1154, 0, "nirwaden", ["rawRedBelliedFalder", 2, -8]));
                scenicList.push(new Scenery("item", -44724, -1150, 0, "nirwaden", ["crawdid", 3, -17]));
                scenicList.push(new Scenery("item", -44760, -1153, 0, "nirwaden", ["rawSalmon", 2, -26]));
                scenicList.push(new Scenery("item", -44739, -1147, 0, "nirwaden", ["crawdid", 3, -17]));
                scenicList.push(new Scenery("item", -44806, -1155, 0, "nirwaden", ["rawDuskfish", 2, -12]));
                scenicList.push(new Scenery("item", -44806, -1144, 0, "nirwaden", ["rawDuskfish", 2, -12]));
                scenicList.push(new Scenery("item", -44785, -1142, 0, "nirwaden", ["rawSlol", 2, -16]));
                scenicList.push(new Scenery("crate", -44723, -1189, -4.08, 2, [0.88]));


                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Fish Vendor")
                    {
                        hits += 1;
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44802, -1207, "Person", false, "Fish Vendor", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.22], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44786, -1174]], merchant: true, merchandise: [[new Item("coins", false, false), 34], [new Item("rawRedBelliedFalder", false, false), 5], [new Item("rawSlol", false, false), 3], [new Item("rawSalmon", false, false), 2], [new Item("crawdid", false, false), 7], [new Item("rawDuskfish", false, false), 4]]}));
                }

                //marketgoers
                //
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinMarketGoer1")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44120, -1292, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.22], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 13, patrolLoop: true, route:[[-44247, -1635], [-44150, -1624], [-44260, -1991], [-44909, -1987], [-45061, -1853], [-45727, -1845], [-45726, -1409], [-45446, -1402], [-45449, -1453], [-45645, -1215], [-44880, -1302], [-44893, -1725], [-44207, -1701]], altID: "atalinMarketGoer1"}));
                }
                //
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinMarketGoer2")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-45278, -729, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.22], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 13, patrolLoop: true, route:[[-44536, -942], [-44534, -829], [-44412, -945], [-44167, -931], [-44127, -572], [-44136, -646], [-44447, -653], [-44404, -474], [-45194, -497], [-45074, -522], [-45063, -806], [-45265, -803], [-45278, -729]], altID: "atalinMarketGoer2"}));
                }
                //
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinMarketGoer3")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44732, -536, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.22], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 10, patrolLoop: true, route:[[-44732, -536], [-44730, -428], [-44712, -465], [-44274, -441], [-44280, -285], [-44097, -283], [-44099, -364], [-44804, -579], [-44274, -441], [-44801, -797]], altID: "atalinMarketGoer3"}));
                }
                //
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinMarketGoer4")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-45120, -2689, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.2, 0.25], 0, 0, 1.22], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 19, patrolLoop: true, route:[[-45120, -2700], [-45120, -2689], [-45050, -2689], [-45053, -2287], [-45349, -2293], [-45354, -2589], [-45670, -2588], [-45668, -2238], [-46003, -2231], [-46017, -1862], [-45797, -1851], [-45810, -1418], [-45554, -1409], [-45556, -1237], [-44989, -1197], [-44524, -1785], [-44477, -2028], [-44460, -2692], [-45120, -2689]], altID: "atalinMarketGoer4"}));
                }
                //
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinMarketGoer5")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44675, -1780, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.25], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 12, patrolLoop: true, route:[[-44522, -1623], [-44519, -1950], [-44172, -1943], [-44162, -1635], [-44144, -1633], [-44162, -1635], [-44269, -448], [-45064, -447], [-45043, -1460], [-44342, -1459], [-44334, -1780], [-44675, -1780]], altID: "atalinMarketGoer5"}));
                }
                //
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinMarketGoer6")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44801, -2864, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.5, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 35, patrolLoop: true, route:[[-44809, -2693], [-44442, -2676], [-44431, -2980], [-44599, -2987], [-44431, -2980], [-44583, -2705], [-44453, -2690], [-44465, -2484], [-44465, -2033], [-44555, -1715], [-45237, -1223], [-45241, -1141], [-45236, -1284], [-45423, -1288], [-45434, -829], [-45048, -817], [-45018, -669], [-44952, -667], [-45000, -671], [-44985, -483], [-44693, -492], [-44683, -1010], [-44363, -1288], [-44892, -1709], [-44879, -1849], [-45275, -1857], [-45275, -2291], [-45349, -2298], [-45349, -2582], [-45438, -2582], [-45433, -2959], [-45110, -2939], [-45110, -2682], [-44806, -2682], [-44801, -2864]], altID: "atalinMarketGoer6"}));
                }

                //midclass housing (interior)
                    //
                scenicList.push(new Scenery("fineBed", -44886, -2953, 1 * Math.PI, false, 1)); //white
                scenicList.push(new Scenery("drawerA", -45031, -2974, 1 * Math.PI, 1, [1.5])); //light
                scenicList.push(new Scenery("nirwadenMueble", -44886, -2779, 1 * Math.PI, 2)); //sml table
                scenicList.push(new Scenery("nirwadenMueble", -44941, -2781, 0.754 * Math.PI, 6)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -45031, -2912, -0.5 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("stove", -44814, -2936, Math.PI, false));
                scenicList.push(new Scenery("furRug", -44758, -2837, 3.5, 2.8, 1));
                //
                scenicList.push(new Scenery("stove", -45134, -2591, Math.PI, "lit"));
                //
                scenicList.push(new Scenery("hearth", -44043, -2517, -1/2 * Math.PI, "lit"));
                //
                scenicList.push(new Scenery("stove", -44212, -2992, Math.PI, "lit"));
                //Marketside Lodge (player ownable home)
                scenicList.push(new Scenery("event", -44732, -2239, 0, "atalinDuendeHouse"));
                if (quests.atalinHomeOwned == true)
                {
                    scenicList.push(new Scenery("stove", -44777, -2362, Math.PI, true));
                    scenicList.push(new Scenery("fineBed", -44670, -2135, 1/2 * Math.PI, true, 2)); //blue
                    scenicList.push(new Scenery("nirwadenMueble", -44688, -2340, 1 * Math.PI, 3)); //llongtable
                    scenicList.push(new Scenery("nirwadenMueble", -44635, -2277, 1/2 * Math.PI, 1)); //bench
                    scenicList.push(new Scenery("drawerA", -44630, -2215, 0, 3, [1.55, "atalinHomeDrawer1", 6, [], false, 0])); //light
                    scenicList.push(new Scenery("drawerA", -44751.5, -2114, 1/2 * Math.PI, 3, [2.04, "atalinHomeDrawer2", 12, [], false, 0])); //light
                    scenicList.push(new Scenery("nirwadenMueble", -44798, -2149, -1/2 * Math.PI, 0)); //long bench
                    scenicList.push(new Scenery("furRug", -44901, -2281, -4, 2.5, 2));
                    scenicList.push(new Scenery("nirwadenMueble", -44885, -2188, -1 * Math.PI, 0)); //long bench
                    scenicList.push(new Scenery("nirwadenMueble", -44929, -2188, -1 * Math.PI, 0)); //long bench
                    scenicList.push(new Scenery("nirwadenMueble", -44966, -2336, 1 * Math.PI, 2)); //sqrtable
                    scenicList.push(new Scenery("nirwadenMueble", -44927, -2336, 1.078 * Math.PI, 6)); //stool
                    scenicList.push(new Scenery("nirwadenMueble", -44970, -2298, 0.97 * Math.PI, 6)); //stool
                    scenicList.push(new Scenery("sign", -44917, -2381, 0, 3, "Market Lodge"));
                }
                else
                {
                    scenicList.push(new Scenery("stove", -44777, -2362, Math.PI, false));
                    scenicList.push(new Scenery("fineBed", -44670, -2135, 1/2 * Math.PI, false, 2)); //blue
                    scenicList.push(new Scenery("nirwadenMueble", -44688, -2340, 1 * Math.PI, 3)); //llongtable
                    scenicList.push(new Scenery("nirwadenMueble", -44635, -2277, 1/2 * Math.PI, 1)); //bench
                    scenicList.push(new Scenery("drawerA", -44630, -2215, 0, 1, [1.55])); //light
                    scenicList.push(new Scenery("drawerA", -44751.5, -2114, 1/2 * Math.PI, 1, [2.04])); //light
                    scenicList.push(new Scenery("nirwadenMueble", -44798, -2149, -1/2 * Math.PI, 0)); //long bench
                    scenicList.push(new Scenery("furRug", -44901, -2281, -4, 2.5, 2));
                    scenicList.push(new Scenery("nirwadenMueble", -44885, -2188, -1 * Math.PI, 0)); //long bench
                    scenicList.push(new Scenery("nirwadenMueble", -44929, -2188, -1 * Math.PI, 0)); //long bench
                    scenicList.push(new Scenery("nirwadenMueble", -44966, -2336, 1 * Math.PI, 2)); //sqrtable
                    scenicList.push(new Scenery("nirwadenMueble", -44927, -2336, 1.078 * Math.PI, 6)); //stool
                    scenicList.push(new Scenery("nirwadenMueble", -44970, -2298, 0.97 * Math.PI, 6)); //stool
                    if (quests.duendeInfestationCompletionStyle != "royalException")
                    {
                        scenicList.push(new Scenery("sign", -44917, -2381, 0, 3, "Sale Postponed - until further notice"));
                    }
                }

                //
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinMidClass1")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-45200, -2463, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.2, 0.1], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45182, -2506]], altID: "atalinMidClass1"}));
                }
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinMidClass2")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-45827, -2771, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.5, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45829, -2742]], altID: "atalinMidClass2"}));
                }


                //middle class residental east "     "
                scenicList.push(new Scenery("nirwadenBuilding3", -45688, -2764, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -45990, -2448, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding4", -45728, -2050, 0, true));
                scenicList.push(new Scenery("well", -45617, -2202, -1, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -45985, -1667, 0, true));

                //interiors
                scenicList.push(new Scenery("bed", -45245, -2574, 1/2 * Math.PI, false));
                scenicList.push(new Scenery("nirwadenMueble", -45197, -2373, 1 * Math.PI, 2)); //sml table
                scenicList.push(new Scenery("nirwadenMueble", -45253, -2378, 1 * Math.PI, 5)); //sml stool
                scenicList.push(new Scenery("nirwadenMueble", -45150, -2378, 1 * Math.PI, 5)); //sml stool
                //
                scenicList.push(new Scenery("trapdoor", -45178, -2199, 0 * Math.PI, [851, 496], "estolTunnel"));
                scenicList.push(new Scenery("crate", -45120, -2192, 1.9, 2, [1.2]));
                scenicList.push(new Scenery("crate", -45140, -2122, -3, 2, [1.3]));
                scenicList.push(new Scenery("crate", -45086, -2041, -7, 2, [1.5]));
                scenicList.push(new Scenery("crate", -45194, -2013, 0, 2, [1.45]));
                if (player.estolgangFaction < 50)
                {
                    scenicList.push(new Scenery("crate", -45063, -2208, 9, 4, [0.8, "estolEvidenceCrate", 3, [[new Item("estolProof", false, false), 1], [new Item("kolumPowder", false, false), 19], [new Item("magicMissiles", false, false), 1]], "estolGang", -100]));
                }
                else
                {
                    scenicList.push(new Scenery("crate", -45063, -2208, 9, 2, [0.8]));
                }
                //
                scenicList.push(new Scenery("furRug", -45500, -2384, -9.45, 2.25, 1));
                scenicList.push(new Scenery("bed", -45555, -2308, -1/2 * Math.PI, false));
                scenicList.push(new Scenery("drawerA", -45435, -2301, 1/2 * Math.PI, 1, [1.5])); //light
                scenicList.push(new Scenery("nirwadenMueble", -45515, -2503, 1.2 * Math.PI, 5)); //sml stool
                scenicList.push(new Scenery("nirwadenMueble", -45478, -2490, 1.11 * Math.PI, 5)); //sml stool
                scenicList.push(new Scenery("nirwadenMueble", -45504, -2465, 1 * Math.PI, 2)); //sml table
                //
                scenicList.push(new Scenery("furRug", -46000, -2442, -3.34, 2.35, 1));
                scenicList.push(new Scenery("bed", -45915, -2359, 0 * Math.PI, false));
                scenicList.push(new Scenery("nirwadenMueble", -45956, -2557, 1 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("stove", -46051, -2574, Math.PI, false));
                //
                scenicList.push(new Scenery("fineBed", -45845, -2841, 0 * Math.PI, 0)); //black
                scenicList.push(new Scenery("stove", -45732, -2700, 0, "lit"));
                scenicList.push(new Scenery("nirwadenMueble", -45780, -2749, 0.8 * Math.PI, 5)); //sml stool
                scenicList.push(new Scenery("nirwadenMueble", -45830, -2743, 1.32 * Math.PI, 5)); //sml stool
                scenicList.push(new Scenery("nirwadenMueble", -45809, -2712, 1 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("furRug", -45601, -2763, 1.5, 3.6, 2));
                scenicList.push(new Scenery("crate", -45575, -2678, -7, 2, [1.6]));
                scenicList.push(new Scenery("crate", -45652, -2672, -10, 1, [1.2]));
                scenicList.push(new Scenery("nirwadenMueble", -45648, -2877, 1 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("nirwadenGoods", -45832, -2712, 0, 8)); //placemat light
                scenicList.push(new Scenery("item", -45832, -2712, 0, "nirwaden", ["boarChunksSmall", 1, -6]));
                //
                scenicList.push(new Scenery("furRug", -45286, -2739, 1/2 * Math.PI, 3.1, 1));
                scenicList.push(new Scenery("bed", -45324, -2864, -1/2 * Math.PI, false));
                scenicList.push(new Scenery("nirwadenMueble", -45201, -2682, 1/2 * Math.PI, 0)); //long bench
                //
                scenicList.push(new Scenery("trapdoor", -45375, -2205, 0 * Math.PI, [251, 496], "estolTunnel"));
                //
                scenicList.push(new Scenery("furRug", -45969, -1690, 1/2 * Math.PI, 3.2, 2));
                scenicList.push(new Scenery("bed", -45937, -1560, 1/2 * Math.PI, false));
                scenicList.push(new Scenery("nirwadenMueble", -46066, -1588, 1/2 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("nirwadenMueble", -46066, -1608, 1/2 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("stove", -46079, -1774, 1/2 * Math.PI, false));
                //
                scenicList.push(new Scenery("furRug", -45826, -2086, 0.789486568, 2.4, 1));
                scenicList.push(new Scenery("stove", -45539, -1949, -1/2 * Math.PI, "lit"));
                scenicList.push(new Scenery("fineBed", -45574, -2071, 1 * Math.PI, false, 1)); //white
                scenicList.push(new Scenery("nirwadenMueble", -45658, -2098, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("drawerA", -45555, -1997, 0 * Math.PI, 1, [1.65])); //light
                scenicList.push(new Scenery("nirwadenMueble", -45739, -2137, 1/2 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMueble", -45786, -2159, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMueble", -45786, -2176, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("nirwadenMueble", -45856, -1985, 2.324243 * Math.PI, 6)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -45783, -1984, 0.3298 * Math.PI, 6)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -45818, -1988, 1.023 * Math.PI, 2)); //square table
                //
                scenicList.push(new Scenery("fineBed", -45404, -1576, 0 * Math.PI, false)); //black
                scenicList.push(new Scenery("drawerA", -45343, -1545, 1/2 * Math.PI, 1, [1.61])); //light
                scenicList.push(new Scenery("drawerA", -45298, -1545, 1/2 * Math.PI, 1, [1.61])); //light
                scenicList.push(new Scenery("nirwadenMueble", -45260, -1583, -1/2 * Math.PI, 0)); //bench
                scenicList.push(new Scenery("nirwadenMueble", -45262, -1666, -1/2 * Math.PI, 2)); //sqr table
                scenicList.push(new Scenery("hearth", -45339, -1774, 1 * Math.PI, "lit"));
                scenicList.push(new Scenery("nirwadenMueble", -45503, -1613, -1 * Math.PI, 0)); //bench
                scenicList.push(new Scenery("drawerA", -45585, -1608, 1/2 * Math.PI, 1, [1.7])); //light
                scenicList.push(new Scenery("nirwadenMueble", -45545, -1758, -1/2 * Math.PI, 5)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -45584, -1726, 1/2 * Math.PI, 6)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -45587, -1753, -1/2 * Math.PI, 2)); //sqr table



                if (uniqueChars.loLDS)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Lo")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-45093, -2149, "Soldier", false, "Lo", {race: "Nirwaden", faction: "EstolGang", con: 5, speed: 1.55, outfit: ["nirwadenClothingF", 0], weapon: ["nirineseSabre", [7, 6], 0, 19, 1.1], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 1, patrolLoop: false, route:[[-45073, -2179]]}));
                    }
                }

                if (uniqueChars.tirbutinLDS)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Tirbutin the Tax Officiator")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        if (quests.pireVictim == "Tirbutin the Tax Officiator")
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-45906, 41, "Person", false, "Tirbutin the Tax Officiator", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.5, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45708, 1335]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-45666, 1337, "Person", false, "Tirbutin the Tax Officiator", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.5, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45708, 1335]]}));
                        }
                    }
                }
                else
                {
                    if (player.gender == "Female" && player.title == "Nobility" && player.raceName == "Nirwaden")
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-45666, 1337, "Person", false, "Atalin Tax Officiator", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.5, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45708, 1335]]}));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-45666, 1337, "Person", false, "Atalin Tax Officiator", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.5, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45708, 1335]]}));
                    }
                }

                if (quests.pireVictim == "Marta the Cook")
                {
                    if (uniqueChars.martaLDS == true)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-45906, 41, "Person", false, "Marta the Cook", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.2, 0.2], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45708, 1335]]}));
                    }
                }
                else if (quests.pireVictim == "Suspected Regicide")
                {
                    if (uniqueChars.altezorInfiltratorLDS == true)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-45906, 41, "Person", false, "Suspected Regicide", {race: "Nirwaden", faction: "EstolGang", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.7, 0.5], 0, 0, 1], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45708, 1335]]}));
                    }
                }
                else if (quests.pireVictim == "Belgos")
                {
                    if (uniqueChars.belgosLDS == true)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-45906, 41, "Person", false, "Ser Belgos of Atalin", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["none", 0], weapon: ["none", [0.7, 0.5], 0, 0, 1], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45708, 1335]]}));
                    }
                }
                else if (quests.pireVictim == "Lelaila")
                {
                    if (uniqueChars.lelailaLDS == true)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-45906, 41, "Person", false, "Lelaila", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.015, 0.015], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45708, 1335]]}));
                    }
                }

                if (uniqueChars.francilLDS)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Francil the Stablemaster")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-46436, 1502, "Person", false, "Francil the Stablemaster", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.4, 0.4], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45708, 1335]]}));
                    }
                }

                //
                scenicList.push(new Scenery("sign", -44221, -2145, 1/2 * Math.PI, 3, "Atalin Brewery"));
                scenicList.push(new Scenery("sign", -44226, 82, -1/2 * Math.PI, 3, "Atalin Barracks: Market"));
                scenicList.push(new Scenery("sign", -46743, 1464, 0 * Math.PI, 3, "Atalin Stables"));

                scenicList.push(new Scenery("nirwadenMueble", -45726, 1343, 1/2 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("nirwadenGoods", -45634, 1428, 18, 9));
                scenicList.push(new Scenery("nirwadenGoods", -45651, 1234, -6, 9));
                scenicList.push(new Scenery("nirwadenGoods", -45636, 1326, 7, 9));

                scenicList.push(new Scenery("crate", -45425, 1424, -11, 2, [1.25]));
                scenicList.push(new Scenery("crate", -45523, 1401, 14.4, 1, [1.34]));
                scenicList.push(new Scenery("crate", -45514, 1304, 7.1, 2, [1.15]));
                scenicList.push(new Scenery("crate", -45529, 1248, -15, 1, [1.21]));
                scenicList.push(new Scenery("crate", -45523, 1401, 14.4, 1, [1.34]));
                scenicList.push(new Scenery("crate", -45435, 1251, 16, 2, [1.06]));

                //player shop in atalin
                scenicList.push(new Scenery("nirwadenMueble", -44633, 632, 1 * Math.PI, 0)); // long bench
                scenicList.push(new Scenery("nirwadenMueble", -44569, 589, 1/2 * Math.PI, 0)); // long bench
                scenicList.push(new Scenery("nirwadenMueble", -44620, 416, 0 * Math.PI, 0)); // long bench
                scenicList.push(new Scenery("nirwadenMueble", -44620, 436, 0 * Math.PI, 0)); // long bench
                scenicList.push(new Scenery("nirwadenMueble", -44858, 438, 1/2 * Math.PI, 1)); //bench
                if (quests.atalinShopOwned == true)
                {
                    scenicList.push(new Scenery("crate", -44717, 421, 0.1, 4, [1.4, "atalinShopCrate", 15, [], false, 0]));
                    scenicList.push(new Scenery("sign", -44873, 376, 0 * Math.PI, 3, "The Atalin Supply"));
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Shopkeeper")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinPlayerShopkeeper")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-44910, 444, "Person", false, "Shopkeeper", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.3, 0.3], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44897, 444]], altID: "atalinPlayerShopkeeper"}));
                    }
                }
                else
                {
                    scenicList.push(new Scenery("crate", -44717, 421, 0.1, 2, [1.4]));
                    scenicList.push(new Scenery("sign", -44873, 376, 0 * Math.PI, 3, "Shop for sale: 19000 coins"));
                }

                //
                scenicList.push(new Scenery("nirwadenMueble", -44645, 737, 1 * Math.PI, 1)); //bench

                if (uniqueChars.manoloLDS)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Guild Master Manolo")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-44646, 702, "Person", false, "Guild Master Manolo", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44649, 722]]}));
                    }
                }
                scenicList.push(new Scenery("nirwadenGoods", -44584, 713, -4.56, 9));
                scenicList.push(new Scenery("nirwadenGoods", -44570, 748, -8.146, 9));
                scenicList.push(new Scenery("crate", -44614, 881, 10, 1, [1.5]));
                scenicList.push(new Scenery("crate", -44701, 904, 12, 2, [1.1]));
                scenicList.push(new Scenery("crate", -44682, 875, 13, 2, [0.87]));

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Silver Keep Banker")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "skBanker1")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-45668, 810, "Person", false, "Silver Keep Banker", {race: "Orgell", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.5, 0.4], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45668, 771]], altID: "skBanker1"}));
                }

                scenicList.push(new Scenery("nirwadenMueble", -45668, 747, 1 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("nirwadenGoods", -45583, 725, -9, 9));
                scenicList.push(new Scenery("nirwadenGoods", -45475, 751, 8, 9));
                scenicList.push(new Scenery("nirwadenGoods", -45495, 834, -2.45, 9));
                scenicList.push(new Scenery("nirwadenGoods", -45448, 907, 3.24, 9));
                scenicList.push(new Scenery("nirwadenGoods", -45557, 904, 1, 9));

                scenicList.push(new Scenery("forger", -47115, 1431, 0, true));
                scenicList.push(new Scenery("anvil", -47244, 1410, 5, true));
                scenicList.push(new Scenery("crate", -47118, 1231, 3.2, 2, [1.19]));
                scenicList.push(new Scenery("nirwadenMueble", -47253, 1281, -1/2 * Math.PI, 3)); //rect table
                scenicList.push(new Scenery("nirwadenMueble", -47207, 1227, 1 * Math.PI, 3)); //rect table

                scenicList.push(new Scenery("sign", -44417, 660, 0 * Math.PI, 3, "The Atalin Merchant's Guild"));
                scenicList.push(new Scenery("sign", -45587, 682, 0 * Math.PI, 3, "Silver Keep Banking"));

                if (uniqueChars.quixoteLDS)
                {
                    scenicList.push(new Scenery("item", -47163, 1220, 0, "nirwaden", ["nirineseSabre", 1, -30]));
                    scenicList.push(new Scenery("item", -47178, 1220, 0, "nirwaden", ["nirineseSabre", 1, -30]));
                    scenicList.push(new Scenery("item", -47194, 1220, 0, "nirwaden", ["nirineseSabre", 1, -30]));
                    scenicList.push(new Scenery("item", -47208, 1220, 0, "nirwaden", ["nirineseSabre", 1, -30]));
                    scenicList.push(new Scenery("item", -47221, 1220, 0, "nirwaden", ["nirineseSabre", 1, -30]));
                    scenicList.push(new Scenery("item", -47254, 1227, 0, "nirwaden", ["crossbow", 1, -39]));
                    scenicList.push(new Scenery("nirwadenGoods", -47254, 1252, 3, 16));
                    scenicList.push(new Scenery("nirwadenGoods", -47254, 1272, 3.55, 16));
                    scenicList.push(new Scenery("nirwadenGoods", -47254, 1280, 3.05, 16));
                    scenicList.push(new Scenery("nirwadenGoods", -47254, 1305, 3.45, 16));
                    scenicList.push(new Scenery("nirwadenGoods", -47254, 1325, 3.1, 16));
                    scenicList.push(new Scenery("item", -47255, 1334, 0, "nirwaden", ["steelBolt", 9, -27]));

                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Master Blacksmith Quixote")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-47207, 1318, "Person", false, "Master Blacksmith Quixote", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingM", 0], weapon: ["hammer", [4, 3], 2.5, 10, 1.5], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-47164, 1319]], merchant: true, merchandise: [[new Item("coins", false, false), 150], [new Item("nirineseSabre", false, false), 8], [new Item("crossbow", false, false), 6], [new Item("steelBolt", false, false), 110], [new Item("estoc", false, false), 2], [new Item("nirwadenSabreAndShield", false, false), 1], [new Item("nirineseSpear", false, false), 5], [new Item("mace", false, false), 2], [new Item("sickle", false, false), 3], [new Item("hammer", false, false), 2], [new Item("timberAxe", false, false), 1], [new Item("spade", false, false), 3], [new Item("pickaxe", false, false), 4], [new Item("nirwadenLance", false, false), 1], [new Item("chainArmour", false, false), 2], [new Item("nirwadenMorionArmour", false, false), 6], [new Item("nirwadenPlateArmour", false, false), 3], [new Item("steelHorseArmour", false, false), 1], [new Item("horseArmourRemover", false, false), 4]]}));
                    }
                }

                if (uniqueChars.cristobalLDS)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Cristobal the Innkeeper")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-46807, -946, "Person", false, "Cristobal the Innkeeper", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.4], 0, 0, 1.25], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46802, -960]], merchant: true, merchandise: [[new Item("coins", false, false), 83], [new Item("santhAle", false, false), 72], [new Item("harstAle", false, false), 19], [new Item("erguerWine", false, false), 3], [new Item("searedFalder", false, false), 6], [new Item("searedSalmon", false, false), 4], [new Item("garlicTialoPork", false, false), 2], [new Item("butteredSanthBread", false, false), 1], [new Item("santhBread", false, false), 2], [new Item("butteredHarstBread", false, false), 1], [new Item("harstBread", false, false), 1]]}));
                    }
                }

                if (uniqueChars.luceliusLDS)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Hidalgo Lucelius")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-46936, -1065, "Person", false, "Hidalgo Lucelius", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.45, 0.4], 0, 0, 1.15], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-46802, -960]]}));
                    }
                }

                if (uniqueChars.velaLDS)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Vela the Baker")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        if (uniqueChars.lelailaLDS)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-46028, -1303, "Person", false, "Vela the Baker", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.2, 0.2], 0, 0, 1.5], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46028, -1239]], merchant: true, merchandise: [[new Item("coins", false, false), 16], [new Item("santhBread", false, false), 7], [new Item("harstBread", false, false), 5]]}));
                        }
                        else
                        {
                            if (quests.imaginaryFriendCompletionStyle == "burntChild")
                            {
                                ArtificialIntelligenceAccess.push(new Unit(-46028, -1303, "Person", false, "Vela the Baker", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.2, 0.2], 0, 0, 1.5], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46028, -1239]]}));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(-46028, -1303, "Person", false, "Vela the Baker", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.2, 0.2], 0, 0, 1.5], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46028, -1239]], merchant: true, merchandise: [[new Item("coins", false, false), 1], [new Item("santhBread", false, false), 3], [new Item("harstBread", false, false), 2]]}));
                            }
                        }
                    }
                }

                if (uniqueChars.lelailaLDS && quests.pireVictim != "Lelaila")
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Lelaila")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        if (quests.imaginaryFriendAdopted == true && player.title != "Nobility" || quests.imaginaryFriendAdopted == true && player.raceName != "Nirwaden")
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-44926, -2264, "Person", false, "Lelaila", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.05, 0.05], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45940, -1301]], kid: true}));
                        }
                        else if (quests.imaginaryFriendAdopted == false)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-45938, -1312, "Person", false, "Lelaila", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.05, 0.05], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45940, -1301]], kid: true}));
                        }
                    }
                }

                if (uniqueChars.emmanuelLDS)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Bishop Emmanuel")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-47260, 41, "Person", false, "Bishop Emmanuel", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["nirwadenPriestRobes", 0], weapon: ["none", [0.06, 0.06], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-47220, 45]]}));
                    }
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Bishop Emmanuel")
                        {
                            ArtificialIntelligenceAccess[i].healthMAX = 26;
                            ArtificialIntelligenceAccess[i].health = 26;
                            ArtificialIntelligenceAccess[i].magicalResistance = 6;
                            break;
                        }
                    }
                }

                scenicList.push(new Scenery("crate", -46330, 1125, 0, 2, [1.55]));
                scenicList.push(new Scenery("crate", -46230, 1285, 5.6, 2, [1.4]));
                scenicList.push(new Scenery("crate", -46313, 1310, -8.2, 1, [1.25]));
                scenicList.push(new Scenery("trapdoor", -46251, 1177, 0.2 * Math.PI, [900, 400], "atalinTortureChamber"));

                scenicList.push(new Scenery("nirwadenMueble", -46782, -1010, 1.34 * Math.PI, 6)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -46811, -1008, 2.54 * Math.PI, 5)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -46841, -1011, 3.44 * Math.PI, 5)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -46805, -985, 1 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("barrel", -46765, -945, -5/3 * Math.PI, 1));

                scenicList.push(new Scenery("nirwadenMueble", -46939, -1065, 6.34 * Math.PI, 6)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -46974, -1030, -2.54 * Math.PI, 5)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -46977, -1099, -7 * Math.PI, 6)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -46970, -1239, -3.1 * Math.PI, 5)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -46938, -1273, 9.1 * Math.PI, 5)); //stool

                scenicList.push(new Scenery("nirwadenMueble", -46778, -1149, 1/2 * Math.PI, 7)); //rect bench
                scenicList.push(new Scenery("nirwadenMueble", -46855.5, -1149, 1/2 * Math.PI, 7)); //rect bench
                scenicList.push(new Scenery("nirwadenMueble", -46818, -1149, 1/2 * Math.PI, 3)); //rect table
                scenicList.push(new Scenery("nirwadenMueble", -46972, -1274.5, 1/2 * Math.PI, 2)); //sqr table
                scenicList.push(new Scenery("nirwadenMueble", -46974, -1063, 0 * Math.PI, 2)); //sqr table

                scenicList.push(new Scenery("fineBed", -47065, -1263, -1/2 * Math.PI, false, 1)); //white
                scenicList.push(new Scenery("fineBed", -46777, -1366, 0 * Math.PI, false, 1)); //white
                scenicList.push(new Scenery("fineBed", -46691, -1161, 1/2 * Math.PI, false, 1)); //white

                scenicList.push(new Scenery("nirwadenMueble", -46595, -1371, 0 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("nirwadenMueble", -46620, -1371, 0 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("nirwadenMueble", -46650, -1371, 0 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("nirwadenMueble", -46678, -1371, 0 * Math.PI, 1)); //bench
                scenicList.push(new Scenery("nirwadenMueble", -46722, -1346, 1/2 * Math.PI, 1)); //bench

                scenicList.push(new Scenery("nirwadenMueble", -47150, -1077, 8.89 * Math.PI, 6)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -47081, -1080, -2.12 * Math.PI, 5)); //stool
                scenicList.push(new Scenery("nirwadenMueble", -47113, -1072, 1/2 * Math.PI, 2)); //sqr table

                scenicList.push(new Scenery("hearth", -47187, -1181, 1/2 * Math.PI, "lit"));
                scenicList.push(new Scenery("furRug", -46645, -1273, 0.8979686 * Math.PI, 2.3, 1));

                scenicList.push(new Scenery("hearth", -46960, -1334, 0 * Math.PI, "lit"));
                scenicList.push(new Scenery("furRug", -46884, -1412, -6.2656543527847 * Math.PI, 2.5, 1));

                scenicList.push(new Scenery("hearth", -46565, -1255, -1/2 * Math.PI, "lit"));
                scenicList.push(new Scenery("furRug", -47109, -1167, 3.912 * Math.PI, 2.1, 1));

                scenicList.push(new Scenery("nirwadenMueble", -46812, -1491, 0 * Math.PI, 0)); //long bench


                scenicList.push(new Scenery("nirwadenMueble", -46262, -1211, -1/2 * Math.PI, 3)); //rect table
                scenicList.push(new Scenery("nirwadenMueble", -46154, -1381, 0 * Math.PI, 0)); //long bench

                scenicList.push(new Scenery("stove", -46273, -1397, 1 * Math.PI, "lit"));
                scenicList.push(new Scenery("stove", -46227, -1397, 1 * Math.PI, "lit"));

                scenicList.push(new Scenery("nirwadenMueble", -46030, -1212, 0 * Math.PI, 0)); //long bench
                scenicList.push(new Scenery("crate", -46130, -1168, 0.0019, 2, [1.76]));

                scenicList.push(new Scenery("spiritBasin", -47358, 47, 0, true));

                scenicList.push(new Scenery("item", -46229, -1153, 0, "nirwaden", ["bucketOfWater", 1, -5]));
                scenicList.push(new Scenery("item", -46258, -1160, 0, "nirwaden", ["santhFlour", 4, -16]));
                scenicList.push(new Scenery("item", -46269, -1168, 0, "nirwaden", ["santhFlour", 4, -16]));
                scenicList.push(new Scenery("item", -46258, -1193, 0, "nirwaden", ["harstFlour", 4, -10]));
                scenicList.push(new Scenery("item", -46264, -1197, 0, "nirwaden", ["harstFlour", 4, -10]));
                scenicList.push(new Scenery("item", -46262, -1232, 0, "nirwaden", ["kellishSanthDough", 2, -18]));
                scenicList.push(new Scenery("item", -46264, -1256, 0, "nirwaden", ["harstDough", 1, -3]));
                scenicList.push(new Scenery("item", -46266, -1258, 0, "nirwaden", ["harstDough", 1, -3]));
                scenicList.push(new Scenery("item", -46263, -1257, 0, "nirwaden", ["harstDough", 1, -3]));
                scenicList.push(new Scenery("item", -46186, -1379, 0, "nirwaden", ["harstBread", 1, -11]));
                scenicList.push(new Scenery("item", -46156, -1381, 0, "nirwaden", ["harstBread", 1, -11]));
                scenicList.push(new Scenery("item", -46131, -1381, 0, "nirwaden", ["santhBread", 1, -20]));
                scenicList.push(new Scenery("item", -46105, -1379, 0, "nirwaden", ["santhBread", 1, -20]));
                scenicList.push(new Scenery("item", -46261, -1214, 0, "nirwaden", ["nirwadenPastryDough", 2, -21]));

                scenicList.push(new Scenery("item", -46064, -1214, 0, "nirwaden", ["santhBread", 1, -22]));
                scenicList.push(new Scenery("item", -46040, -1213, 0, "nirwaden", ["santhBread", 1, -22]));
                scenicList.push(new Scenery("item", -46018, -1215, 0, "nirwaden", ["harstBread", 1, -12]));
                scenicList.push(new Scenery("item", -45997, -1212, 0, "nirwaden", ["harstBread", 1, -12]));


                scenicList.push(new Scenery("sign", -47071, 1392, 1/2 * Math.PI, 3, "The Atalin City Smithy"));
                scenicList.push(new Scenery("sign", -46346, 714, 1/2 * Math.PI, 3, "The Royal Order of the Inquisition"));
                scenicList.push(new Scenery("sign", -46874, -29, 1/2 * Math.PI, 3, "The Church of the Everlasting Spirit"));
                scenicList.push(new Scenery("sign", -46380, 1293, -1/2 * Math.PI, 3, "Property of the Inquisition: entry restricted"));
                scenicList.push(new Scenery("sign", -46880, -912, 1 * Math.PI, 3, "Eastover Inn"));
                scenicList.push(new Scenery("sign", -45977, -1119, 1 * Math.PI, 3, "Marketside Bakery"));


                if (Math.random() > 0.21)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-46779, -1127, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-46149, -151]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-46784, -1203, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-46149, -151]]}));

                    if (Math.random() > 0.52)
                    {
                        scenicList.push(new Scenery("item", -46805, -1128, 0, "nirwaden", ["pintGlass", 1, -1]));
                        scenicList.push(new Scenery("item", -46806, -1185, 0, "nirwaden", ["pintGlass", 1, -1]));
                    }
                    else
                    {
                        if (Math.random() > 0.58)
                        {
                            scenicList.push(new Scenery("item", -46805, -1128, 0, "nirwaden", ["harstAle", 1, -3]));
                            scenicList.push(new Scenery("item", -46806, -1185, 0, "nirwaden", ["harstAle", 1, -3]));
                        }
                        else
                        {
                            scenicList.push(new Scenery("item", -46805, -1128, 0, "nirwaden", ["santhAle", 1, -5]));
                            scenicList.push(new Scenery("item", -46806, -1185, 0, "nirwaden", ["pintGlass", 1, -1]));
                        }
                    }
                }
                else
                {
                    if (Math.random() > 0.18)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-46779, -1100, "Person", false, "Nirwaden Villager", {race: "Orgell", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-46149, -151]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-46779, -1127, "Person", false, "Nirwaden Villager", {race: "Orgell", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-46149, -151]], kid: true}));
                        ArtificialIntelligenceAccess.push(new Unit(-46784, -1203, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-46149, -151]]}));

                        scenicList.push(new Scenery("nirwadenGoods", -46804, -1098, 0, 8)); //placemat light
                        scenicList.push(new Scenery("item", -46804, -1098, 0, "nirwaden", ["searedSalmon", 1, -9]));
                        scenicList.push(new Scenery("item", -46806, -1185, 0, "nirwaden", ["santhAle", 1, -5]));
                    }
                }

                if (Math.random() > 0.2)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-46936, -1274, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-46149, -151]]}));
                }

                if (Math.random() > 0.35)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-46974, -1135, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46977, -1101]]}));
                }
                if (Math.random() > 0.7)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-46913, -1197, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46853, -1198]]}));
                }

                if (Math.random() > 0.41)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-46839, -1064, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46840, -1010]]}));
                }

                if (Math.random() > 0.9)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-46810, -1072, "Person", false, "Traveler", {race: "Freynor", faction: "Freynor", personality: "scared", outfit: ["northernClothing", 0], weapon: ["none", [0.55, 0.45], 0, 0, 1.15], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46813, -1010]]}));
                }
                else
                {
                    if (Math.random() > 0.25)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-46970, -990, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46974, -1030]]}));
                    }
                }

                if (Math.random() > 0.2)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-46912, -1149, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46857, -1151]]}));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(-46912, -1149, "Person", false, "Vardanian Refugee", {race: "Vardan", faction: "arena2", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46857, -1151]]}));
                }
                if (Math.random() > 0.15)
                {
                    if (Math.random > 0.55)
                    {
                        if (Math.random > 0.65)
                        {
                            scenicList.push(new Scenery("nirwadenGoods", -46777, -986, 2, 8)); //placemat light
                            scenicList.push(new Scenery("item", -46777, -986, 0, "nirwaden", ["garlicTialoPork", 1, -15]));
                        }
                        else
                        {
                            scenicList.push(new Scenery("nirwadenGoods", -46777, -986, 2, 8)); //placemat light
                            scenicList.push(new Scenery("item", -46777, -986, 0, "nirwaden", ["searedFalder", 1, -6]));
                        }
                    }
                    ArtificialIntelligenceAccess.push(new Unit(-46775, -1065, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46780, -1011]]}));
                }


                //trees in the wuntol woods.
                //scenicList.push(new Scenery("pineTree", -13696, 1772, 1.3, true));


                //Plants of the wuntol woods
                //scenicList.push(new Scenery("neprilnePlant", -17425 , 3993, -5.8, true));
                //scenicList.push(new Scenery("pluttPlant", -16685 , 4251, 2.4, true));
                //scenicList.push(new Scenery("culprisPlant", -21156 , 617, -3.5, true));
                //scenicList.push(new Scenery("stomwikPlant", -18732 , -2343, 6, true));
                //scenicList.push(new Scenery("akerPlant", -14491 , 5755, 1, true));
                //scenicList.push(new Scenery("glinPlant", -15944 , -2502, -7.789, true));
                //scenicList.push(new Scenery("ogardPlant", -16292 , -2231, 0, true));
                //scenicList.push(new Scenery("wyrPlant", -15134 , 2399, 2.8, true));
                //scenicList.push(new Scenery("cyrinthilimPlant", -21038 , -2478, 4, true));

                //pyreGathering
                if (change == "pireGathering")
                {
                    if (Math.random() > 0.49)
                    {
                        if (Math.random() >= 0.5)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-46195, -180, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46149, -151]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-46118, -307, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46029, -147]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45972, -367, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45935, -233]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45703, -343, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45813, -149]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45547, -119, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45603, -94]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45518, 16, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45724, 20]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45605, 192, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45709, 139]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45768, 366, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45798, 282]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45900, 408, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45895, 221]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-46186, 265, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46099, 193]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-46181, -56, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46142, -41]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-46503, 211, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46201, 116]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-46080, 409, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45982, 162]], kid: true}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-46195, -180, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46149, -151]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-46118, -307, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46029, -147]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45972, -367, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45935, -233]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45703, -343, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45813, -149]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45547, -119, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45603, -94]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45518, 16, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45724, 20]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45605, 192, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45709, 139]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45768, 366, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45798, 282]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45900, 408, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45895, 221]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-46186, 265, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46099, 193]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-46181, -56, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46142, -41]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-46503, 211, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46201, 116]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-46080, 409, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45982, 162]]}));

                        }
                    }
                    else
                    {
                        if (Math.random() >= 0.5)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-46195, -180, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46149, -151]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-46118, -307, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46029, -147]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45972, -367, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45935, -233]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45703, -343, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45813, -149]], kid: true}));
                            ArtificialIntelligenceAccess.push(new Unit(-45547, -119, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45603, -94]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45518, 16, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45724, 20]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45605, 192, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45709, 139]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45768, 366, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45798, 282]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45900, 408, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45895, 221]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-46186, 265, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46099, 193]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-46181, -56, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46142, -41]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-46503, 211, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46201, 116]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-46080, 409, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45982, 162]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-46195, -180, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46149, -151]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-46118, -307, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46029, -147]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45972, -367, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45935, -233]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45703, -343, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45813, -149]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45547, -119, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45603, -94]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45518, 16, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45724, 20]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45605, 192, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45709, 139]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45768, 366, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45798, 282]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-45900, 408, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45895, 221]], kid: true}));
                            ArtificialIntelligenceAccess.push(new Unit(-46186, 265, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46099, 193]], kid: true}));
                            ArtificialIntelligenceAccess.push(new Unit(-46181, -56, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46142, -41]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-46503, 211, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-46201, 116]]}));
                            ArtificialIntelligenceAccess.push(new Unit(-46080, 409, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45982, 162]]}));
                        }
                    }
                }
                else
                {
                    if (Math.random() >= 0.5)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-46937, 130, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-46149, -151]], kid: true}));
                        ArtificialIntelligenceAccess.push(new Unit(-46940, 97, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-46029, -147]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-46940, -16, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45935, -233]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-46941, -53, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45813, -149]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-46996, -18, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45603, -94]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-47002, 129, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45724, 20]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-47004, 102, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45709, 139]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-47058, 124, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45798, 282]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-47108, 96, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-46142, -41]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-47109, 129, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45982, 162]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-47114, -10, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-46201, 116]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-47112, -54, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45813, -149]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-47057, -55, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45813, -149]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-47057, 97, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45724, 20]], kid: true}));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-46937, 130, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-46149, -151]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-46940, 97, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-46029, -147]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-46940, -16, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45935, -233]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-46941, -53, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45813, -149]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-46996, -18, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45603, -94]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-47002, 129, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45724, 20]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-47004, 102, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45709, 139]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-47058, 124, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45798, 282]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-47111, -38, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45895, 221]], kid: true}));
                        ArtificialIntelligenceAccess.push(new Unit(-47112, -58, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-46099, 193]], kid: true}));
                        ArtificialIntelligenceAccess.push(new Unit(-47108, 96, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-46142, -41]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-47109, 129, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45982, 162]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-47114, -10, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-46201, 116]]}));

                    }
                }

                if (uniqueChars.belgosLDS && quests.aFeastForFewerBelgos == "disgraced" || uniqueChars.belgosLDS && quests.aFeastForFewerBelgos == "forgiven")
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Belgos the Disgraced" || ArtificialIntelligenceAccess[i].ID == "Belgos")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        if (quests.aFeastForFewerBelgos == "disgraced")
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-47221, 134, "Person", false, "Belgos the Disgraced", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["nirwadenPriestRobes", 0], weapon: ["none", [0.75, 0.75], 0, 0, 0.9], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-47205, 131]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-47221, 134, "Person", false, "Belgos", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["nirwadenPriestRobes", 0], weapon: ["none", [0.75, 0.75], 0, 0, 0.9], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-47205, 131]]}));
                        }
                    }
                }

                if (player.raceName == "Nirwaden" && player.title == "Nobility")
                {
                    if (seasonOfYear != quests.atalinTournySeason)
                    {
                        quests.atalinTournySeason = seasonOfYear;
                        if (quests.atalinTourny > 0)
                        {
                            quests.atalinTourny -= 1;
                            quests.atalinTournyHosted = true;
                        }
                        else
                        {
                            quests.atalinTournyHosted = false;
                        }
                    }
                }
                else if (seasonOfYear == "Bright")
                {
                    quests.atalinTournyHosted = true;
                }

                if (quests.duendeInfestationCompletionStyle == "royalException")
                {
                    scenicList.push(new Scenery("skeleton", -44696, -2241, 3.45, 1.55));
                    scenicList.push(new Scenery("skeleton", -44776, -2266, 1.1, 0.91));
                }

                //birds in the garden
                var hits = -1;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].type == "Peacock" && ArtificialIntelligenceAccess[i].ID == "flagabili")
                    {
                        hits = i;
                    }
                }
                if (hits == -1)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44458, 3242, "Peacock", false, "flagabili"));
                }

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinPed1")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    if (timeOfDay == "Day")
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-45095, 3156, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.3, 0.3], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 7, patrolLoop: true, route:[[-45118, 4266], [-45349, 4695], [-45108, 5059], [-44645, 4819], [-44983, 4187], [-44977, 3183], [-45095, 3156]], altID: "atalinPed1"}));
                    }
                }

                //boar fight viewers
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinBF1")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    if (timeOfDay == "Day" || timeOfDay == "Dawn")
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-44390, 2537, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.3, 0.3], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44393, 2537]], altID: "atalinBF1"}));
                    }
                }
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinBF2")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    if (timeOfDay == "Day" || timeOfDay == "Dawn")
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-44307, 2693, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.3, 0.3], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44334, 2689]], altID: "atalinBF2"}));
                    }
                }
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinBF3")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    if (timeOfDay == "Day" || timeOfDay == "Dawn")
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-44777, 2107, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["none", 0], weapon: ["none", [0.3, 0.3], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44778, 2144]], altID: "atalinBF3"}));
                    }
                }
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinBF4")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    if (timeOfDay == "Day" || timeOfDay == "Dawn")
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-44875, 2057, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.3, 0.3], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44877, 2086]], altID: "atalinBF4"}));
                    }
                }
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinBF5")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    if (timeOfDay == "Day" || timeOfDay == "Dawn")
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-45600, 2052, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.3, 0.3], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45583, 2092]], altID: "atalinBF5"}));
                    }
                }
                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinBF6")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    if (timeOfDay == "Day" || timeOfDay == "Dawn")
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-45747, 2421, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.3, 0.3], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45716, 2433]], altID: "atalinBF6"}));
                    }
                }

                if (uniqueChars.eduardoLDS)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Hidalgo Eduardo the Commissioner")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-45111, 2079, "Soldier", false, "Hidalgo Eduardo the Commissioner", {race: "Nirwaden", faction: "Nirwaden", con: 20, speed: 1.15, outfit: ["matadorOutfit", 0], weapon: ["nirineseSabre", [12, 11], 0, 25, 1.25], ranged: [false, "steelBolt", 14, 2200, 17, 16 /3, 0, "none", 3.35], patrolStops: 1, patrolLoop: false, route:[[-45101, 2053]]}));
                    }
                }

                if (change == "matador")
                {
                    var matadorNumRand = Math.random();

                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Matador")
                        {
                            if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                            {
                                if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinMatador")
                                {
                                    hits += 1;
                                    break;
                                }
                            }
                        }
                    }
                    if (hits == 0)
                    {
                        if (timeOfDay == "Day" || timeOfDay == "Dawn")
                        {
                            if (matadorNumRand > 0.5)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(-44849, 2498, "Soldier", false, "Matador", {race: "Nirwaden", faction: "Nirwaden", con: 20, speed: 1.15, outfit: ["matadorOutfit", 0], weapon: ["silkAndDagger", [7, 7], 0, 19, 1], ranged: [false, "steelBolt", 14, 2200, 17, 16 /3, 0, "none", 3.35], patrolStops: 0, patrolLoop: false, route:[[0, 0]], altID: "atalinMatador"}));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(-45348, 2480, "Soldier", false, "Matador", {race: "Nirwaden", faction: "Nirwaden", con: 20, speed: 1.15, outfit: ["matadorOutfit", 0], weapon: ["silkAndDagger", [7, 7], 0, 19, 1], ranged: [false, "steelBolt", 14, 2200, 17, 16 /3, 0, "none", 3.35], patrolStops: 1, patrolLoop: false, route:[[-45305, 2481]], altID: "atalinMatador"}));
                            }
                        }
                    }

                    //boar fight
                    //naaprid fight

                    if (matadorNumRand > 0.5)
                    {
                        if (Math.random())
                        {
                            if (Math.random())
                            {
                                ArtificialIntelligenceAccess.push(new Unit(-45309, 2438, "Boar", true, "matado"));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(-45385, 2452, "Boar", true, "matado"));
                            }
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-45348, 2510, "Naaprid", true, "matado"));
                        }
                    }
                    else
                    {
                        if (Math.random())
                        {
                            if (Math.random())
                            {
                                ArtificialIntelligenceAccess.push(new Unit(-44654, 2347, "Boar", true, "matado"));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(-44576, 2508, "Boar", true, "matado"));
                            }
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-44737, 2443, "Naaprid", true, "matado"));
                        }
                    }
                }

                if (change == "matar")
                {
                    for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "matado" || ArtificialIntelligenceAccess[i].ID == "Matador")
                        {
                            ArtificialIntelligenceAccess.splice(i, 1);
                        }
                    }

                    var matadorNumRand = Math.random();


                        if (timeOfDay == "Day" || timeOfDay == "Dawn")
                        {
                            player.blinded = true;
                            player.blindedStoreTime = new Date().getTime();
                            player.blindedTime = 1;
                            if (matadorNumRand > 0.5)
                            {
                                X = -44849;
                                Y = 2498;
                            }
                            else
                            {
                                X = -45305;
                                Y = 2481;
                            }
                        }

                    //boar fight
                    //naaprid fight

                    if (matadorNumRand > 0.5)
                    {
                        if (Math.random())
                        {
                            if (Math.random())
                            {
                                ArtificialIntelligenceAccess.push(new Unit(-45309, 2438, "Boar", true, "arena5"));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(-45385, 2452, "Boar", true, "arena5"));
                            }
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-45348, 2510, "Naaprid", true, "arena5"));
                        }
                    }
                    else
                    {
                        if (Math.random())
                        {
                            if (Math.random())
                            {
                                ArtificialIntelligenceAccess.push(new Unit(-44654, 2347, "Boar", true, "arena5"));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(-44576, 2508, "Boar", true, "arena5"));
                            }
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-44737, 2443, "Naaprid", true, "arena5"));
                        }
                    }
                }

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Nirwaden Villager")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "atalinPed2")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    if (timeOfDay == "Day" || timeOfDay == "Dusk" || timeOfDay == "Dawn")
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-44124, 1351, "Person", false, "Nirwaden Villager", {race: "Nirwaden", faction: "Nirwaden", personality: "calculated", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.3, 0.3], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 13, patrolLoop: true, route:[[-45046, 1341], [-45072, 527], [-46096, 498], [-46110, 1414], [-47019, 1410], [-47028, 1131], [-47250, 1122], [-47245, 272], [-47361, 260], [-44337, 245], [-44351, 487], [-44176, 495], [-44124, 1351]], altID: "atalinPed2"}));
                    }
                }

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Altezor Soldier")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "centreGuard1")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-46636, -1010, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 7, speed: 1.4, outfit: ["nirwadenMorionArmour", 11], weapon: ["nirineseSabre", [9, 10], 0, 21, 1.3], ranged: [false, "steelBolt", 14, 2200, 15, 16 /3, 0, "none", 3], patrolStops: 13, patrolLoop: true, route:[[-45458, -1070], [-45421, -289], [-45035, -352], [-45036, -952], [-44367, -1000], [-44364, -1737], [-44858, -1738], [-44865, -1863], [-45757, -1846], [-45735, -1469], [-46417, -1470], [-46420, -1007], [-46636, -1010]], altID: "centreGuard1"}));
                }

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Altezor Soldier")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "centreGuard2")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-45144, 1067, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 8, speed: 1.2, outfit: ["nirwadenMorionArmour", 11], weapon: ["nirineseSabre", [10, 10], 0, 23, 1.2], ranged: [false, "steelBolt", 16, 2250, 16, 17 /3, 0, "none", 3], patrolStops: 5, patrolLoop: true, route:[[-46043, 1056], [-45964, 2756], [-45964, 459], [-45144, 459], [-45144, 1067]], altID: "centreGuard2"}));
                }

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Altezor Soldier")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "centreGuard3")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44058, -715, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 9, speed: 1.3, outfit: ["nirwadenMorionArmour", 12], weapon: ["nirineseSabre", [9, 9], 0, 25, 1.25], ranged: [false, "steelBolt", 14, 2250, 19, 18 /3, 0, "none", 3], patrolStops: 0, patrolLoop: false, route:[[-45458, -1070]], altID: "centreGuard3"}));
                }

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Altezor Soldier")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "gardenGuard1")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-45952, 3009, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 8, speed: 1.4, outfit: ["nirwadenMorionArmour", 10], weapon: ["nirineseSabre", [10, 10], 0, 23, 1.2], ranged: [false, "steelBolt", 16, 2200, 19, 17 /3, 0, "none", 3.6], patrolStops: 2, patrolLoop: true, route:[[-45952, 7902], [-45952, 3009]], altID: "gardenGuard1"}));
                }

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Altezor Soldier")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "gardenGuard2")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44140, 7902, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 9, speed: 1.34, outfit: ["nirwadenMorionArmour", 12], weapon: ["nirineseSabre", [9, 9], 0, 22, 1], ranged: [false, "steelBolt", 14, 2200, 15, 16 /3, 0, "none", 3], patrolStops: 2, patrolLoop: true, route:[[-44140, 3009], [-44140, 7902]], altID: "gardenGuard2"}));
                }

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Altezor Soldier")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "woodsGuard1")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-43227, -2825, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 8, speed: 1.25, outfit: ["nirwadenMorionArmour", 11], weapon: ["nirineseSabre", [9, 9], 0, 24, 1.3], ranged: [false, "steelBolt", 15, 2250, 17, 17 /3, 0, "none", 3.15], patrolStops: 2, patrolLoop: true, route:[[-44081, -2825], [-43227, -2825]], altID: "woodsGuard1"}));
                }

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Altezor Soldier")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "orchardGuard1")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-41770, 2839, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 6, speed: 1.15, outfit: ["nirwadenMorionArmour", 10], weapon: ["nirineseSabre", [8, 8], 0, 24, 1.35], ranged: [false, "steelBolt", 15, 2250, 17, 17 /3, 0, "none", 3.15], patrolStops: 4, patrolLoop: true, route:[[-44177, 2826], [-44128, 1311], [-41736, 1321], [-41770, 2839]], altID: "orchardGuard1"}));
                }

                if (uniqueChars.gesuldoLDS == true)
                {
                    if (quests.torturedSpiritQuest == true)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-48144, 130, "Phantom", true, "Gesuldo"));
                        scenicList.push(new Scenery("grave", -48144, 130, 1/2 * Math.PI, 0, ["nirwaden", "Gesuldo"]));
                    }
                }
                else
                {
                    scenicList.push(new Scenery("grave", -48144, 130, 1/2 * Math.PI, 6, ["nirwaden", "Gesuldo"]));
                }

                scenicList.push(new Scenery("grave", -47559, 14, 1/2 * Math.PI, 2, ["nirwaden", false]));
                scenicList.push(new Scenery("grave", -47827, -401, 1/2 * Math.PI, 2, ["nirwaden", false]));
                scenicList.push(new Scenery("grave", -48286, -437, 1/2 * Math.PI, 2, ["nirwaden", false]));
                scenicList.push(new Scenery("grave", -48377, -254, 1/2 * Math.PI, 0, ["nirwaden", false]));
                scenicList.push(new Scenery("grave", -48116, -25, 1/2 * Math.PI, 2, ["nirwaden", false]));
                scenicList.push(new Scenery("grave", -48234, 245, 1/2 * Math.PI, 0, ["nirwaden", false]));
                scenicList.push(new Scenery("grave", -47927, 293, 1/2 * Math.PI, 2, ["nirwaden", false]));

                for (var i = 0; i < 19; i++)
                {
                    scenicList.push(new Scenery("tombstone", -47604 - 900 * seeded(1 + (i * 8.65) + 3.9), 356 - 900 * seeded(i * 2.69 + 8.9), 1/2 * Math.PI, Math.floor(seeded((Math.sin(i * i) + 1.7) * (i + 2.1) + 2) * 11), Math.max(1, seeded((Math.cos(i + 9) + 1) * 4.5) * 1.5)));
                }
                scenicList.push(new Scenery("tombstone", -47943, -399, 1/2 * Math.PI, Math.floor(seeded((Math.sin(30 * 30) + 1.7) * (30 + 2.1) + 2) * 11), Math.max(1, seeded((Math.cos(30 + 9) + 1) * 4.5) * 1.5)));

                scenicList.push(new Scenery("furRug", -46532, 776, 0 * Math.PI, 5, 1));
                scenicList.push(new Scenery("furRug", -46606, 777, 1 * Math.PI, 5, 1));

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Inquisition Emprendor")
                    {
                        hits = true;
                        break;
                    }
                }
                if (hits == 0)
                {
                    if (player.inquisitionRank == "none")
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-46403, 860, "Soldier", false, "Inquisition Emprendor", {race: "Nirwaden", faction: "Nirwaden", con: 8, speed: 1.4, outfit: ["inquisitionOutfit", 11], weapon: ["nirineseSabre", [8, 8], 0, 22, 1.15], ranged: [false, "steelBolt", 14, 2200, 15, 16 /3, 0, "none", 3], patrolStops: 1, patrolLoop: false, route:[[-46409, 849]]}));
                    }
                    else if (player.inquisitionRank == "Initiate")
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-46403, 860, "Soldier", false, "Inquisition Emprendor", {race: "Nirwaden", faction: "Nirwaden", con: 8, speed: 1.4, outfit: ["inquisitionOutfit", 11], weapon: ["nirineseSabre", [8, 8], 0, 22, 1.15], ranged: [false, "steelBolt", 14, 2200, 15, 16 /3, 0, "none", 3], patrolStops: 1, patrolLoop: false, route:[[-46409, 849]], merchant: true, merchandise: [[new Item("coins", false, false), 100], [new Item("witchHunterOutfit", false, false), 1]]}));
                    }
                    else if (player.inquisitionRank != "none")
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-46403, 860, "Soldier", false, "Inquisition Emprendor", {race: "Nirwaden", faction: "Nirwaden", con: 8, speed: 1.4, outfit: ["inquisitionOutfit", 11], weapon: ["nirineseSabre", [8, 8], 0, 22, 1.15], ranged: [false, "steelBolt", 14, 2200, 15, 16 /3, 0, "none", 3], patrolStops: 1, patrolLoop: false, route:[[-46409, 849]], merchant: true, merchandise: [[new Item("coins", false, false), 200], [new Item("witchHunterOutfit", false, false), 1], [new Item("silkAndDagger", false, false), 1], [new Item("inquisitorsBeastManual", false, false), 1]]}));
                    }
                }

                if (uniqueChars.gavilioLDS)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Inquisitor Gavilio")
                        {
                            hits = true;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        if (player.inquisitionRank != "none" && player.inquisitionRank != "Initiate")
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-46829, 687, "Soldier", false, "Inquisitor Gavilio", {race: "Nirwaden", faction: "Nirwaden", con: 8, speed: 1.5, outfit: ["inquisitionOutfit", 2.5], weapon: ["nirineseSabre", [8, 8], 0, 22, 1], ranged: [false, "steelBolt", 20, 2200, 20, 20 /3, 0, "none", 2.5], patrolStops: 1, patrolLoop: false, route:[[-46834, 707]], merchant: true, merchandise: [[new Item("iron", false, false), 25], [new Item("silverStake", false, false), 5]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-46829, 687, "Soldier", false, "Inquisitor Gavilio", {race: "Nirwaden", faction: "Nirwaden", con: 8, speed: 1.5, outfit: ["inquisitionOutfit", 2.5], weapon: ["nirineseSabre", [8, 8], 0, 22, 1], ranged: [false, "steelBolt", 20, 2200, 20, 20 /3, 0, "none", 2.5], patrolStops: 1, patrolLoop: false, route:[[-46834, 707]], merchant: false, merchandise: []}));
                        }
                    }
                }

                if (uniqueChars.voraelLDS)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Inquisitor Vorael")
                        {
                            hits = true;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-46659, 1024, "Soldier", false, "Inquisitor Vorael", {race: "Nirwaden", faction: "Nirwaden", con: 10, speed: 1.39, outfit: ["inquisitionOutfit", 2.5], weapon: ["silkAndDagger", [7, 6], 6, 20, 1.1], ranged: [false, "steelBolt", 20, 2200, 20, 20 /3, 0, "none", 2.5], patrolStops: 0, patrolLoop: false, route:[[-46834, 707]], merchant: true, merchandise: []}));
                    }
                }

                scenicList.push(new Scenery("furRug", -46862, 1001, 1/2 * Math.PI, 3, 1));
                scenicList.push(new Scenery("furRug", -46862, 911, 1/2 * Math.PI, 3, 1));

                scenicList.push(new Scenery("nirwadenMueble", -46700, 672, 0, 0));
                scenicList.push(new Scenery("nirwadenMueble", -46397, 674, 0, 2));
                scenicList.push(new Scenery("nirwadenMueble", -46439, 681, 3, 5));
                scenicList.push(new Scenery("nirwadenMueble", -46396, 717, 2.1, 5));

                scenicList.push(new Scenery("nirwadenMueble", -46749, 876, 1/2 * Math.PI, 2));

                scenicList.push(new Scenery("nirwadenMueble", -46938, 722, -1/2 * Math.PI, 3));

                scenicList.push(new Scenery("molteTrophy", -46861, 1129, 1/2 * Math.PI, 5));

                scenicList.push(new Scenery("nirwadenMueble", -46700, 672, 0, 0));
                scenicList.push(new Scenery("hyelingSkeleton", -46938, 714, 0.95, 0, 1.1));

                scenicList.push(new Scenery("item", -46665, 672, 0, "nirwaden", ["changelingSkull", 1, -90]));
                scenicList.push(new Scenery("item", -46691, 673, 0, "nirwaden", ["neevFur", 1, -90]));
                scenicList.push(new Scenery("item", -46736.5, 672.5, 0, "nirwaden", ["peacockFeather", 1, -30]));
                scenicList.push(new Scenery("item", -46747, 874, 0, "nirwaden", ["chupacabrasHead", 1, -90]));
                scenicList.push(new Scenery("item", -46932, 773, 0, "nirwaden", ["hyelingClaws", 2, -50]));
                scenicList.push(new Scenery("item", -46932, 666, 0, "nirwaden", ["mofuFeather", 3, -15]));
                scenicList.push(new Scenery("item", -46649, 670, 0, "nirwaden", ["balkurFang", 2, -60]));

                scenicList.push(new Scenery("oilLantern", -46388, 666, 9.17 * Math.PI, true, [1000, 2]));

                scenicList.push(new Scenery("nirwadenMueble", -46602, 1080, 8, 5));
                scenicList.push(new Scenery("nirwadenMueble", -47141, 855, 0.046, 5));
                scenicList.push(new Scenery("nirwadenMueble", -47140, 941, -0.246, 5));

                scenicList.push(new Scenery("nirwadenMueble", -46601, 1120, 1 * Math.PI, 2));


                scenicList.push(new Scenery("nirwadenMueble", -47143, 900, 1/2 * Math.PI, 2));

                scenicList.push(new Scenery("nirwadenMueble", -47037, 1025, 0, 0));

                scenicList.push(new Scenery("item", -46589, 1129, 0, "nirwaden", ["berulnSkull", 1, -90]));
                scenicList.push(new Scenery("item", -47007, 1026.5, 0, "nirwaden", ["utTentacle", 2, -40]));
                scenicList.push(new Scenery("item", -47046, 1028, 0, "nirwaden", ["grushFur", 3, -40]));
                scenicList.push(new Scenery("item", -47072, 1028, 0, "nirwaden", ["walrusTusks", 1, -90]));

                scenicList.push(new Scenery("oilLantern", -46614, 1112, 8.15 * Math.PI, true, [1000, 2]));
                scenicList.push(new Scenery("oilLantern", -47148, 902, -1.4 * Math.PI, true, [1000, 2]));

                scenicList.push(new Scenery("hearth", -47047, 796, 1 * Math.PI, "lit"));

                scenicList.push(new Scenery("crate", -46600, 949, 1.5, 3, [1.4, "trash", 1, [], false, 0])); //trash crate for magical items

                change = "e5";
            }
        }
        else if (region == "n1e5") //Atalin City (castle)
        {
            if (change != "n1e5")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                generator2(77, 893156183774189889999927462711, 54, 6688395285999999892194291914929422375482332503, 11 , 2, -47555, 9583);
                cropper(-47555, 9583, -53158, 7506, true, true);
                scenicList.push(new Scenery("wobeaPlant", -48954, 9749, 5.9, true));
                ArtificialIntelligenceAccess.push(new Unit(-47725, 9724, "Frich", true, "Flioo"));
                ArtificialIntelligenceAccess.push(new Unit(-52909, 9881, "Peacock", false, "nirwaden"));
                ArtificialIntelligenceAccess.push(new Unit(-43765, 10174, "Peacock", true, "nirwaden"));

                //REGION CREATION
                //Build AI Units

                //PROPS
                //scenicList.push(new Scenery("skeleton", -19230, 5008, 5.12, 1.75));

                //CREATURES
                //ArtificialIntelligenceAccess.push(new Unit(-13935, 2270, "Grib", false, "docile"));
                //ArtificialIntelligenceAccess.push(new Unit(-14477, 1925, "Viper", false, "Slib"));
                //ArtificialIntelligenceAccess.push(new Unit(-14087, 1359, "Lizard", true, "Lib"));
                //ArtificialIntelligenceAccess.push(new Unit(-14501, 3283, "BlackBear", false, "Clib"));
                //ArtificialIntelligenceAccess.push(new Unit(-15119, 2314, "Varn", true, "Flib"));
                //ArtificialIntelligenceAccess.push(new Unit(-13713, 5329, "Narthwarp", false, "silwil"));
                //scenicList.push(new Scenery("ulgoyPlant", -16488, 3908, 4.9, 7));
                //ArtificialIntelligenceAccess.push(new Unit(-16473, 3885, "Ulgoy", "giant", "The Really Big Plant"));
                //ArtificialIntelligenceAccess.push(new Unit(-16247, 3330, "Boar", true, "Tambor"));
                //ArtificialIntelligenceAccess.push(new Unit(-14353, 3844, "Shehid", true, "sheta"));
                //scenicList.push(new Scenery("beeHive", -15375 , -2055, 4.5, true));

                //birds in the garden
                if (Math.random())
                {
                    ArtificialIntelligenceAccess.push(new Unit(-45519 + spacer(190), 7037 + spacer(86), "Peacock", true, "altezor"));
                    ArtificialIntelligenceAccess.push(new Unit(-44768 + spacer(60), 6800 + spacer(50), "Peacock", false, "altezor"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(-45695 + spacer(40), 7253 + spacer(40), "Peacock", false, "altezor"));
                }

                if (quests.aFeastForFewerQuest == false && player.fame >= 11 || quests.aFeastForFewerQuest == false && player.nirwadenFaction >= 500)
                {
                    if (uniqueChars.basilioAltezorLDS == true && uniqueChars.liboLDS && uniqueChars.martaLDS)
                    {
                        quests.aFeastForFewerQuest = true;
                        quests.activeQuests.push({name: "A Feast for Fewer", description: "One of the high lord's of Nirwaden has been assassinated with poison. Found out who is behind it."});
                    }
                }

                //Build Scenery
                if (player.raceName != "Nirwaden" || player.title != "Nobility" && player.title != "Royalty")
                {
                    for (var poop = 0; poop < 16; poop++)
                    {
                        scenicList.push(new Scenery("rosePlant", -44452, 3119 + 300 * poop, 3.78 * 2 * Math.cos(poop * poop), "nirwaden"));
                        scenicList.push(new Scenery("yellowStetriliPlant", -44571, 3004 + 300 * poop, 3.78 * 2 * Math.sin(poop * poop), "nirwaden"));
                        scenicList.push(new Scenery("redStetriliPlant", -44327, 3244 + 300 * poop, 3.78 * 2 * Math.cos(poop + 3 * poop), "nirwaden"));
                    }
                    for (var poop = 0; poop < 15; poop++)
                    {
                        if (poop < 3 || poop > 5)
                        {
                            scenicList.push(new Scenery("yellowStetriliPlant", -44870, 3304 + 300 * poop, 3.78 * 3 * Math.cos(poop * poop), "nirwaden"));
                            scenicList.push(new Scenery("rosePlant", -44752, 3419 + 300 * poop, 5.2 * poop * Math.sin(poop * 8), "nirwaden"));
                            scenicList.push(new Scenery("redStetriliPlant", -44630, 3304 + 300 * poop, 3.78 * 3 * Math.sin(poop + 4 * poop), "nirwaden"));
                        }
                    }

                    for (var poop = 0; poop < 16; poop++)
                    {
                        scenicList.push(new Scenery("yellowStetriliPlant", -45528, 3004 + 300 * poop, 3.78 * 2 * Math.cos(poop * poop), "nirwaden"));
                        scenicList.push(new Scenery("rosePlant", -45652, 3119 + 300 * poop, 3.78 * 2 * Math.sin(poop * poop), "nirwaden"));
                        scenicList.push(new Scenery("redStetriliPlant", -45776, 3244 + 300 * poop, 3.78 * 2 * Math.cos(poop + 3 * poop), "nirwaden"));
                    }

                    for (var poop = 0; poop < 15; poop++)
                    {
                        if (poop < 3 || poop > 5)
                        {
                            scenicList.push(new Scenery("yellowStetriliPlant", -45228, 3304 + 300 * poop, 3.78 * 3 * Math.sin(poop * poop), "nirwaden"));
                            scenicList.push(new Scenery("rosePlant", -45352, 3419 + 300 * poop, 5.2 * poop * Math.cos(poop * 8), "nirwaden"));
                            scenicList.push(new Scenery("redStetriliPlant", -45471, 3304 + 300 * poop, 3.78 * 3 * Math.cos(poop + 4 * poop), "nirwaden"));
                        }
                    }
                }
                else
                {
                    for (var poop = 0; poop < 16; poop++)
                    {
                        scenicList.push(new Scenery("rosePlant", -44452, 3119 + 300 * poop, 3.78 * 2 * Math.cos(poop * poop), true));
                        scenicList.push(new Scenery("yellowStetriliPlant", -44571, 3004 + 300 * poop, 3.78 * 2 * Math.sin(poop * poop), true));
                        scenicList.push(new Scenery("redStetriliPlant", -44327, 3244 + 300 * poop, 3.78 * 2 * Math.cos(poop + 3 * poop), true));
                    }
                    for (var poop = 0; poop < 15; poop++)
                    {
                        if (poop < 3 || poop > 5)
                        {
                            scenicList.push(new Scenery("yellowStetriliPlant", -44870, 3304 + 300 * poop, 3.78 * 3 * Math.cos(poop * poop), true));
                            scenicList.push(new Scenery("rosePlant", -44752, 3419 + 300 * poop, 5.2 * poop * Math.sin(poop * 8), true));
                            scenicList.push(new Scenery("redStetriliPlant", -44630, 3304 + 300 * poop, 3.78 * 3 * Math.sin(poop + 4 * poop), true));
                        }
                    }

                    for (var poop = 0; poop < 16; poop++)
                    {
                        scenicList.push(new Scenery("yellowStetriliPlant", -45528, 3004 + 300 * poop, 3.78 * 2 * Math.cos(poop * poop), true));
                        scenicList.push(new Scenery("rosePlant", -45652, 3119 + 300 * poop, 3.78 * 2 * Math.sin(poop * poop), true));
                        scenicList.push(new Scenery("redStetriliPlant", -45776, 3244 + 300 * poop, 3.78 * 2 * Math.cos(poop + 3 * poop), true));
                    }

                    for (var poop = 0; poop < 15; poop++)
                    {
                        if (poop < 3 || poop > 5)
                        {
                            scenicList.push(new Scenery("yellowStetriliPlant", -45228, 3304 + 300 * poop, 3.78 * 3 * Math.sin(poop * poop), true));
                            scenicList.push(new Scenery("rosePlant", -45352, 3419 + 300 * poop, 5.2 * poop * Math.cos(poop * 8), true));
                            scenicList.push(new Scenery("redStetriliPlant", -45471, 3304 + 300 * poop, 3.78 * 3 * Math.cos(poop + 4 * poop), true));
                        }
                    }
                }

                //people/soldiers
                if (uniqueChars.basilioAltezorLDS == true || uniqueChars.emyliaLDS == true || uniqueChars.lailionaLDS == true || player.raceName == "Nirwaden" && player.title == "Nobility" || quests.aFeastForFewerQuest == true)
                {
                    if (quests.aFeastForFewerQuest == true)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-45112, 9472, "Soldier", false, "Nirwaden Knight", {race: "Nirwaden", faction: "Nirwaden", con: 14, speed: 1.25, outfit: ["nirwadenPlateArmour", 18], weapon: ["none", [0.6, 0.6], 0, 0, 1.16], ranged: [false, "steelBolt", 13, 2200, 16, 15 /3, 0, "none", 3.55], patrolStops: 1, patrolLoop: false, route:[[-45082, 9472]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-44825, 9330, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 8, speed: 1.37, outfit: ["nirwadenMorionArmour", 12], weapon: ["nirineseSabre", [10, 9], 0, 22, 1.25], ranged: [false, "steelBolt", 14, 2200, 17, 16 /3, 0, "none", 3.35], patrolStops: 1, patrolLoop: false, route:[[-44886, 9377]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-45335, 9400, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 7, speed: 1.42, outfit: ["nirwadenMorionArmour", 13.5], weapon: ["nirineseSabre", [12, 9], 0, 22, 1.25], ranged: [false, "steelBolt", 13, 2200, 14, 14 /3, 0, "none", 3.25], patrolStops: 1, patrolLoop: false, route:[[-45209, 9436]]}));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-45282, 9397, "Soldier", false, "Nirwaden Knight", {race: "Nirwaden", faction: "Nirwaden", con: 14, speed: 1.25, outfit: ["nirwadenPlateArmour", 18], weapon: ["nirineseSabre", [10, 10], 0, 22, 1.3], ranged: [false, "steelBolt", 13, 2200, 16, 15 /3, 0, "none", 3.55], patrolStops: 1, patrolLoop: false, route:[[-45235, 9343]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-45243, 9031, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 8, speed: 1.37, outfit: ["nirwadenMorionArmour", 12], weapon: ["nirineseSabre", [10, 9], 0, 22, 1.25], ranged: [false, "steelBolt", 14, 2200, 17, 16 /3, 0, "none", 3.35], patrolStops: 1, patrolLoop: false, route:[[-45233, 9030]]}));
                        ArtificialIntelligenceAccess.push(new Unit(-44911, 9031, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 7, speed: 1.42, outfit: ["nirwadenMorionArmour", 13.5], weapon: ["nirineseSabre", [12, 9], 0, 22, 1.25], ranged: [false, "steelBolt", 13, 2200, 14, 14 /3, 0, "none", 3.25], patrolStops: 1, patrolLoop: false, route:[[-44929, 9031]]}));
                    }

                    ArtificialIntelligenceAccess.push(new Unit(-44516, 8126, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 11, speed: 1.25, outfit: ["nirwadenMorionArmour", 13], weapon: ["nirineseSabre", [11, 11], 0, 21, 1.25], ranged: [false, "steelBolt", 14, 2200, 17, 16 /3, 0, "none", 3.35], patrolStops: 4, patrolLoop: true, route:[[-45603, 8126], [-45600, 9692], [-44494, 9697], [-44516, 8126]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-45189, 7856, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 9, speed: 1.34, outfit: ["nirwadenMorionArmour", 13], weapon: ["nirineseSabre", [10, 10], 0, 21, 1.15], ranged: [false, "steelBolt", 14, 2200, 17, 16 /3, 0, "none", 3.35], patrolStops: 1, patrolLoop: false, route:[[-45189, 7846]]}));
                    ArtificialIntelligenceAccess.push(new Unit(-44907, 7856, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 9, speed: 1.34, outfit: ["nirwadenMorionArmour", 13], weapon: ["nirineseSabre", [10, 10], 0, 21, 1.15], ranged: [false, "steelBolt", 14, 2200, 17, 16 /3, 0, "none", 3.35], patrolStops: 1, patrolLoop: false, route:[[-44907, 7846]]}));
                }

                if (quests.aFeastForFewerQuest == true)
                {
                    uniqueChars.basilioAltezorLDS = false;
                }

                if (uniqueChars.basilioAltezorLDS)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "High Lord Basilio Altezor")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-45064, 9476, "Person", false, "High Lord Basilio Altezor", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenNobleOutfit", 0], weapon: ["none", [0.6, 0.5], 0, 2, 1], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45065, 9451]]}));
                    }
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "High Lord Basilio Altezor")
                        {
                            ArtificialIntelligenceAccess[i].healthMAX = 55;
                            ArtificialIntelligenceAccess[i].health = 55;
                            break;
                        }
                    }
                }

                if (uniqueChars.mecheloLDS)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Mechelo the Steward")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        if (quests.aFeastForFewerQuest == true)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-44916, 9437, "Person", false, "Mechelo the Steward", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.3, 0.35], 0, 0, 1.5], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45065, 9451]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-44761, 9276, "Person", false, "Mechelo the Steward", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.3, 0.35], 0, 0, 1.5], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-45065, 9451]]}));
                        }
                    }
                }

                if (uniqueChars.belgosLDS && quests.aFeastForFewerBelgos != "disgraced")
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Ser Belgos of Atalin")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        if (quests.aFeastForFewerQuest == true)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-45009, 9481, "Soldier", false, "Ser Belgos of Atalin", {race: "Nirwaden", faction: "Nirwaden", con: 20, speed: 1.2, outfit: ["nirwadenPlateArmour", 21], weapon: ["none", [0.7, 0.6], 0, 0, 1.09], ranged: [false, "steelBolt", 14, 2200, 17, 16 /3, 0, "none", 3.35], patrolStops: 0, patrolLoop: false, route:[[-45138, 9448]]}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-44838, 9375, "Soldier", false, "Ser Belgos of Atalin", {race: "Nirwaden", faction: "Nirwaden", con: 20, speed: 1.2, outfit: ["nirwadenPlateArmour", 21], weapon: ["estoc", [8, 9], 20, 19, 1.9], ranged: [false, "steelBolt", 14, 2200, 17, 16 /3, 0, "none", 3.35], patrolStops: 1, patrolLoop: false, route:[[-44900, 9335]]}));
                        }
                    }
                }
                if (uniqueChars.emyliaLDS && quests.atalinSisterJarl == false)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "High Dame Emylia Altezor")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-45141, 9476, "Person", false, "High Dame Emylia Altezor", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenLadyPointyCap", 0], weapon: ["none", [0.15, 0.15], 0, 0, 2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45138, 9448]]}));
                    }
                }
                if (uniqueChars.lailionaLDS && quests.atalinSisterJarl == false)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Lailiona")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-45175, 9486, "Person", false, "Lailiona", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenLadyPointyCap", 0], weapon: ["none", [0.04, 0.05], 0, 0, 2], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-45168, 9449]], kid: true}));
                    }
                }
                if (uniqueChars.liboLDS)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Libo the Servant Boy")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-44732, 8535, "Person", false, "Libo the Servant Boy", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["frichFurClothing", 0], weapon: ["none", [0.06, 0.06], 0, 0, 1.1], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 1, patrolLoop: false, route:[[-44735, 8551]], kid: true}));
                    }
                }
                if (uniqueChars.martaLDS)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Marta the Cook")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-44792, 8372, "Person", false, "Marta the Cook", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.16, 0.16], 0, 0, 1.3], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[[-44735, 8551]]}));
                    }
                }
                if (quests.aFeastForFewerQuest == true)
                {
                    if (uniqueChars.altezorInfiltratorLDS == true)
                    {
                        var hits = 0;
                        for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                        {
                            if (ArtificialIntelligenceAccess[i].ID == "Off Duty Altezor Soldier" || ArtificialIntelligenceAccess[i].ID == "Suspected Regicide")
                            {
                                hits += 1;
                                break;
                            }
                        }
                        if (hits == 0)
                        {
                            if (quests.aFeastForFewerInfiltrator == true)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(-44430, 8096, "Soldier", false, "Suspected Regicide", {race: "Nirwaden", faction: "EstolGang", con: 6, speed: 1.22, outfit: ["nirwadenMorionArmour", 11], weapon: ["nirineseSabre", [9, 9], 0, 21, 1.2], ranged: [false, "steelBolt", 14, 2200, 17, 16 /3, 0, "none", 3.35], patrolStops: 1, patrolLoop: false, route:[[-44441, 8112]]}));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(-44430, 8096, "Soldier", false, "Off Duty Altezor Soldier", {race: "Nirwaden", faction: "EstolGang", con: 6, speed: 1.22, outfit: ["nirwadenMorionArmour", 11], weapon: ["nirineseSabre", [9, 9], 0, 21, 1.2], ranged: [false, "steelBolt", 14, 2200, 17, 16 /3, 0, "none", 3.35], patrolStops: 1, patrolLoop: false, route:[[-44441, 8112]]}));
                            }
                        }
                    }
                }

                //Altezor Castle
                scenicList.push(new Scenery("nirwadenBuilding1", -44746, 8466, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding4", -44875, 8671, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding2", -45344, 8466, 0, true));
                scenicList.push(new Scenery("nirwadenBuilding8", -45056, 9248, 0, true));
                scenicList.push(new Scenery("nirwadenCastle1", -45066, 8915, 0, true));
                scenicList.push(new Scenery("nirwadenCastleDoor", -45048, 8040, 0, true));
                scenicList.push(new Scenery("nirwadenCastleDoor", -45048, 8315, 0, true));
                scenicList.push(new Scenery("well", -45360, 9146, 2.2, true));
                    //the lord's hall
                scenicList.push(new Scenery("nirwadenMueble", -45066, 9452, 0, 8));
                if (quests.aFeastForFewerQuest == true)
                {
                    scenicList.push(new Scenery("deadBody", -45039, 9483, 2.5 + Math.PI, 1, 1)); //nirwaden
                }
                scenicList.push(new Scenery("nirwadenMueble", -45066, 9409, 0, 4));
                scenicList.push(new Scenery("hearth", -45066, 9507, 0 * Math.PI, "lit"));
                scenicList.push(new Scenery("furRug", -45068, 9240, -1/2 * Math.PI, 4, 1));
                scenicList.push(new Scenery("furRug", -45079, 9117, 0 * Math.PI, 5, 1));
                    //kitchen
                if (player.title == "Nobility" && player.raceName == "Nirwaden" || player.title == "Royalty" && player.raceName == "Nirwaden")
                {
                    scenicList.push(new Scenery("stove", -44845, 8367, 1/2 * Math.PI, "flame"));
                }
                else
                {
                    scenicList.push(new Scenery("stove", -44845, 8367, 1/2 * Math.PI, "lit"));
                }


                if (quests.aFeastForFewerQuest == true) //feast
                {
                    scenicList.push(new Scenery("item", -45074, 9400, 0, "nirwaden", ["boarChunks", 1, 0]));
                    scenicList.push(new Scenery("item", -45090, 9404, 0, "nirwaden", ["boarChunks", 1, 0]));

                    scenicList.push(new Scenery("item", -45070, 9428, 0, "nirwaden", ["pintGlass", 1, 0]));
                    scenicList.push(new Scenery("item", -45101, 9425, 0, "nirwaden", ["glassBottleOfErguerWine", 1, 0]));

                    scenicList.push(new Scenery("item", -45049, 9414, 0, "nirwaden", ["searedFalder", 1, 0]));
                    //scenicList.push(new Scenery("item", -45057, 9427, 0, "nirwaden", ["searedSalmon", 1, 0]));

                    scenicList.push(new Scenery("item", -45086, 9430, 0, "nirwaden", ["pintGlass", 1, 0]));

                    scenicList.push(new Scenery("item", -45121, 9397, 0, "nirwaden", ["porkbelly", 1, 0]));
                    scenicList.push(new Scenery("item", -45014, 9392, 0, "nirwaden", ["boarMeat", 1, 0]));
                    scenicList.push(new Scenery("item", -45115, 9412, 0, "nirwaden", ["bacon", 3, 0]));
                    scenicList.push(new Scenery("item", -45110, 9404, 0, "nirwaden", ["bacon", 3, 0]));
                    scenicList.push(new Scenery("item", -45120, 9403, 0, "nirwaden", ["bacon", 3, 0]));
                    scenicList.push(new Scenery("item", -45037, 9427, 0, "nirwaden", ["porkAndHalgom", 1, 0]));
                    scenicList.push(new Scenery("item", -45017, 9420, 0, "nirwaden", ["naaprichaWedge", 1, 0]));
                    scenicList.push(new Scenery("item", -45022, 9401, 0, "nirwaden", ["curedPork", 2, 0]));
                    scenicList.push(new Scenery("item", -45032, 9410, 0, "nirwaden", ["curedPork", 2, 0]));
                    scenicList.push(new Scenery("item", -45032, 9420, 0, "nirwaden", ["curedPork", 2, 0]));
                    scenicList.push(new Scenery("item", -45037, 9399, 0, "nirwaden", ["naapricha", 1, 0]));
                    scenicList.push(new Scenery("item", -45048, 9388, 0, "nirwaden", ["naapricha", 1, 0]));

                    scenicList.push(new Scenery("item", -45021, 9410, 0, "nirwaden", ["naaprichaWedge", 1, 0]));

                    scenicList.push(new Scenery("item", -45016, 9429, 0, "nirwaden", ["pintGlass", 1, 0]));

                    scenicList.push(new Scenery("item", -45137, 9424, 0, "nirwaden", ["garlicTialoPork", 1, 0]));
                    scenicList.push(new Scenery("item", -45133, 9412, 0, "nirwaden", ["garlicTialoPork", 1, 0]));
                    scenicList.push(new Scenery("item", -45161, 9411, 0, "nirwaden", ["searedSalmon", 1, 0]));
                    scenicList.push(new Scenery("item", -45144, 9417, 0, "nirwaden", ["roastedHalgomMushrooms", 1, 0]));
                    scenicList.push(new Scenery("item", -45118, 9424, 0, "nirwaden", ["glassBottleOfErguerWine", 1, 0]));

                    scenicList.push(new Scenery("item", -45160, 9427, 0, "nirwaden", ["searedSalmon", 1, 0]));
                    scenicList.push(new Scenery("item", -45181, 9423, 0, "nirwaden", ["porkAndHalgom", 1, 0]));
                    scenicList.push(new Scenery("item", -45172, 9419, 0, "nirwaden", ["searedFalder", 1, 0]));

                    scenicList.push(new Scenery("item", -45178, 9405, 0, "nirwaden", ["steamedTialo", 3, 0]));
                    scenicList.push(new Scenery("item", -45166, 9390, 0, "nirwaden", ["steamedTialo", 3, 0]));

                    scenicList.push(new Scenery("item", -45146, 9392, 0, "nirwaden", ["porkbelly", 1, 0]));
                    scenicList.push(new Scenery("item", -45176, 9394, 0, "nirwaden", ["salmon", 1, 0]));
                    scenicList.push(new Scenery("item", -44995, 9425, 0, "nirwaden", ["iemaPork", 1, 0]));
                    scenicList.push(new Scenery("item", -45002, 9407, 0, "nirwaden", ["pintGlass", 1, 0]));

                    scenicList.push(new Scenery("item", -44946, 9412, 0, "nirwaden", ["polyapaTart", 2, 0]));
                    scenicList.push(new Scenery("item", -44960, 9410, 0, "nirwaden", ["chonaTart", 2, 0]));
                    scenicList.push(new Scenery("item", -44957, 9413, 0, "nirwaden", ["iemaTart", 2, 0]));

                    scenicList.push(new Scenery("item", -44944, 9425, 0, "nirwaden", ["polyapaTart", 2, 0]));
                    scenicList.push(new Scenery("item", -44964, 9421, 0, "nirwaden", ["chonaTart", 2, 0]));
                    scenicList.push(new Scenery("item", -44954, 9424, 0, "nirwaden", ["iemaTart", 2, 0]));

                    scenicList.push(new Scenery("item", -44978, 9425, 0, "nirwaden", ["erguerWine", 1, 0]));

                    scenicList.push(new Scenery("item", -44975, 9412, 0, "nirwaden", ["erguerPaste", 2, 0]));
                    scenicList.push(new Scenery("item", -44983, 9418, 0, "nirwaden", ["erguerPaste", 3, 0]));

                    scenicList.push(new Scenery("item", -44986, 9401, 0, "nirwaden", ["iemaBerries", 4, 0]));
                    scenicList.push(new Scenery("item", -44979, 9393, 0, "nirwaden", ["iemaBerries", 4, 0]));

                    scenicList.push(new Scenery("item", -44971, 9401, 0, "nirwaden", ["polyapaTart", 2, 0]));
                    scenicList.push(new Scenery("item", -44945, 9403, 0, "nirwaden", ["iemaTart", 2, 0]));
                    scenicList.push(new Scenery("item", -44956, 9398, 0, "nirwaden", ["chonaTart", 2, 0]));
                    scenicList.push(new Scenery("item", -44972, 9394, 0, "nirwaden", ["chonaFruit", 2, 0]));
                    scenicList.push(new Scenery("item", -44960, 9388, 0, "nirwaden", ["polyapaFruit", 2, 0]));
                    scenicList.push(new Scenery("item", -44942, 9391, 0, "nirwaden", ["chonaFruit", 2, 0]));
                    scenicList.push(new Scenery("item", -44948, 9388, 0, "nirwaden", ["polyapaFruit", 2, 0]));
                    scenicList.push(new Scenery("item", -44991, 9385, 0, "nirwaden", ["polyapaFruit", 2, 0]));
                }
                else if (Math.random() > 0.55) //feast
                {
                    if (player.title == "Nobility" && player.raceName == "Nirwaden" || player.title == "Royalty" && player.raceName == "Nirwaden")
                    {
                        scenicList.push(new Scenery("item", -45074, 9400, 0, "nirwaden", ["boarChunks", 1, 0]));
                        scenicList.push(new Scenery("item", -45090, 9404, 0, "nirwaden", ["boarChunks", 1, 0]));

                        scenicList.push(new Scenery("item", -45070, 9428, 0, "nirwaden", ["erguerWine", 1, 0]));
                        scenicList.push(new Scenery("item", -45101, 9425, 0, "nirwaden", ["glassBottleOfErguerWine", 1, 0]));

                        scenicList.push(new Scenery("item", -45049, 9414, 0, "nirwaden", ["searedFalder", 1, 0]));
                        scenicList.push(new Scenery("item", -45057, 9427, 0, "nirwaden", ["searedSalmon", 1, 0]));

                        scenicList.push(new Scenery("item", -45086, 9430, 0, "nirwaden", ["pintGlass", 1, 0]));

                        scenicList.push(new Scenery("item", -45121, 9397, 0, "nirwaden", ["porkbelly", 1, 0]));
                        scenicList.push(new Scenery("item", -45014, 9392, 0, "nirwaden", ["boarMeat", 1, 0]));
                        scenicList.push(new Scenery("item", -45115, 9412, 0, "nirwaden", ["bacon", 3, 0]));
                        scenicList.push(new Scenery("item", -45110, 9404, 0, "nirwaden", ["bacon", 3, 0]));
                        scenicList.push(new Scenery("item", -45120, 9403, 0, "nirwaden", ["bacon", 3, 0]));
                        scenicList.push(new Scenery("item", -45037, 9427, 0, "nirwaden", ["porkAndHalgom", 1, 0]));
                        scenicList.push(new Scenery("item", -45017, 9420, 0, "nirwaden", ["naaprichaWedge", 1, 0]));
                        scenicList.push(new Scenery("item", -45022, 9401, 0, "nirwaden", ["curedPork", 2, 0]));
                        scenicList.push(new Scenery("item", -45032, 9410, 0, "nirwaden", ["curedPork", 2, 0]));
                        scenicList.push(new Scenery("item", -45032, 9420, 0, "nirwaden", ["curedPork", 2, 0]));
                        scenicList.push(new Scenery("item", -45037, 9399, 0, "nirwaden", ["naapricha", 1, 0]));
                        scenicList.push(new Scenery("item", -45048, 9388, 0, "nirwaden", ["naapricha", 1, 0]));

                        scenicList.push(new Scenery("item", -45021, 9410, 0, "nirwaden", ["naaprichaWedge", 1, 0]));

                        scenicList.push(new Scenery("item", -45016, 9429, 0, "nirwaden", ["erguerWine", 1, 0]));

                        scenicList.push(new Scenery("item", -45137, 9424, 0, "nirwaden", ["garlicTialoPork", 1, 0]));
                        scenicList.push(new Scenery("item", -45133, 9412, 0, "nirwaden", ["garlicTialoPork", 1, 0]));
                        scenicList.push(new Scenery("item", -45161, 9411, 0, "nirwaden", ["searedSalmon", 1, 0]));
                        scenicList.push(new Scenery("item", -45144, 9417, 0, "nirwaden", ["roastedHalgomMushrooms", 1, 0]));
                        scenicList.push(new Scenery("item", -45118, 9424, 0, "nirwaden", ["glassBottleOfErguerWine", 1, 0]));

                        scenicList.push(new Scenery("item", -45160, 9427, 0, "nirwaden", ["searedSalmon", 1, 0]));
                        scenicList.push(new Scenery("item", -45181, 9423, 0, "nirwaden", ["porkAndHalgom", 1, 0]));
                        scenicList.push(new Scenery("item", -45172, 9419, 0, "nirwaden", ["searedFalder", 1, 0]));

                        scenicList.push(new Scenery("item", -45178, 9405, 0, "nirwaden", ["steamedTialo", 3, 0]));
                        scenicList.push(new Scenery("item", -45166, 9390, 0, "nirwaden", ["steamedTialo", 3, 0]));

                        scenicList.push(new Scenery("item", -45146, 9392, 0, "nirwaden", ["porkbelly", 1, 0]));
                        scenicList.push(new Scenery("item", -45176, 9394, 0, "nirwaden", ["salmon", 1, 0]));
                        scenicList.push(new Scenery("item", -44995, 9425, 0, "nirwaden", ["iemaPork", 1, 0]));
                        scenicList.push(new Scenery("item", -45002, 9407, 0, "nirwaden", ["pintGlass", 1, 0]));

                        scenicList.push(new Scenery("item", -44946, 9412, 0, "nirwaden", ["polyapaTart", 2, 0]));
                        scenicList.push(new Scenery("item", -44960, 9410, 0, "nirwaden", ["chonaTart", 2, 0]));
                        scenicList.push(new Scenery("item", -44957, 9413, 0, "nirwaden", ["iemaTart", 2, 0]));

                        scenicList.push(new Scenery("item", -44944, 9425, 0, "nirwaden", ["polyapaTart", 2, 0]));
                        scenicList.push(new Scenery("item", -44964, 9421, 0, "nirwaden", ["chonaTart", 2, 0]));
                        scenicList.push(new Scenery("item", -44954, 9424, 0, "nirwaden", ["iemaTart", 2, 0]));

                        scenicList.push(new Scenery("item", -44978, 9425, 0, "nirwaden", ["erguerWine", 1, 0]));

                        scenicList.push(new Scenery("item", -44975, 9412, 0, "nirwaden", ["erguerPaste", 2, 0]));
                        scenicList.push(new Scenery("item", -44983, 9418, 0, "nirwaden", ["erguerPaste", 3, 0]));

                        scenicList.push(new Scenery("item", -44986, 9401, 0, "nirwaden", ["iemaBerries", 4, 0]));
                        scenicList.push(new Scenery("item", -44979, 9393, 0, "nirwaden", ["iemaBerries", 4, 0]));

                        scenicList.push(new Scenery("item", -44971, 9401, 0, "nirwaden", ["polyapaTart", 2, 0]));
                        scenicList.push(new Scenery("item", -44945, 9403, 0, "nirwaden", ["iemaTart", 2, 0]));
                        scenicList.push(new Scenery("item", -44956, 9398, 0, "nirwaden", ["chonaTart", 2, 0]));
                        scenicList.push(new Scenery("item", -44972, 9394, 0, "nirwaden", ["chonaFruit", 2, 0]));
                        scenicList.push(new Scenery("item", -44960, 9388, 0, "nirwaden", ["polyapaFruit", 2, 0]));
                        scenicList.push(new Scenery("item", -44942, 9391, 0, "nirwaden", ["chonaFruit", 2, 0]));
                        scenicList.push(new Scenery("item", -44948, 9388, 0, "nirwaden", ["polyapaFruit", 2, 0]));
                        scenicList.push(new Scenery("item", -44991, 9385, 0, "nirwaden", ["polyapaFruit", 2, 0]));

                    }
                    else
                    {
                        scenicList.push(new Scenery("item", -45074, 9400, 0, "nirwaden", ["boarChunks", 1, -35]));
                        scenicList.push(new Scenery("item", -45090, 9404, 0, "nirwaden", ["boarChunks", 1, -35]));
                        scenicList.push(new Scenery("item", -45049, 9414, 0, "nirwaden", ["searedFalder", 1, -25]));
                        scenicList.push(new Scenery("item", -45057, 9427, 0, "nirwaden", ["searedSalmon", 1, -25]));
                        scenicList.push(new Scenery("item", -45070, 9428, 0, "nirwaden", ["erguerWine", 1, -15]));
                        scenicList.push(new Scenery("item", -45101, 9425, 0, "nirwaden", ["glassBottleOfErguerWine", 1, -45]));
                        scenicList.push(new Scenery("item", -45086, 9430, 0, "nirwaden", ["pintGlass", 1, -5]));
                        scenicList.push(new Scenery("item", -45121, 9397, 0, "nirwaden", ["porkbelly", 1, -40]));
                        scenicList.push(new Scenery("item", -45014, 9392, 0, "nirwaden", ["boarMeat", 1, -55]));
                        scenicList.push(new Scenery("item", -45115, 9412, 0, "nirwaden", ["bacon", 3, -33]));
                        scenicList.push(new Scenery("item", -45110, 9404, 0, "nirwaden", ["bacon", 3, -33]));
                        scenicList.push(new Scenery("item", -45120, 9403, 0, "nirwaden", ["bacon", 3, -33]));
                        scenicList.push(new Scenery("item", -45037, 9427, 0, "nirwaden", ["porkAndHalgom", 1, -40]));
                        scenicList.push(new Scenery("item", -45017, 9420, 0, "nirwaden", ["naaprichaWedge", 1, -20]));
                        scenicList.push(new Scenery("item", -45022, 9401, 0, "nirwaden", ["curedPork", 2, -20]));
                        scenicList.push(new Scenery("item", -45032, 9410, 0, "nirwaden", ["curedPork", 2, -20]));
                        scenicList.push(new Scenery("item", -45032, 9420, 0, "nirwaden", ["curedPork", 2, -20]));
                        scenicList.push(new Scenery("item", -45037, 9399, 0, "nirwaden", ["naapricha", 1, -50]));
                        scenicList.push(new Scenery("item", -45048, 9388, 0, "nirwaden", ["naapricha", 1, -50]));
                        scenicList.push(new Scenery("item", -45021, 9410, 0, "nirwaden", ["naaprichaWedge", 1, -20]));
                        scenicList.push(new Scenery("item", -45016, 9429, 0, "nirwaden", ["erguerWine", 1, -15]));
                        scenicList.push(new Scenery("item", -45137, 9424, 0, "nirwaden", ["garlicTialoPork", 1, -30]));
                        scenicList.push(new Scenery("item", -45133, 9412, 0, "nirwaden", ["garlicTialoPork", 1, -30]));
                        scenicList.push(new Scenery("item", -45161, 9411, 0, "nirwaden", ["searedSalmon", 1, -25]));
                        scenicList.push(new Scenery("item", -45144, 9417, 0, "nirwaden", ["roastedHalgomMushrooms", 1, -15]));
                        scenicList.push(new Scenery("item", -45118, 9424, 0, "nirwaden", ["glassBottleOfErguerWine", 1, -45]));
                        scenicList.push(new Scenery("item", -45160, 9427, 0, "nirwaden", ["searedSalmon", 1, -25]));
                        scenicList.push(new Scenery("item", -45181, 9423, 0, "nirwaden", ["porkAndHalgom", 1, -35]));
                        scenicList.push(new Scenery("item", -45172, 9419, 0, "nirwaden", ["searedFalder", 1, -25]));
                        scenicList.push(new Scenery("item", -45178, 9405, 0, "nirwaden", ["steamedTialo", 3, -20]));
                        scenicList.push(new Scenery("item", -45166, 9390, 0, "nirwaden", ["steamedTialo", 3, -20]));
                        scenicList.push(new Scenery("item", -45146, 9392, 0, "nirwaden", ["porkbelly", 1, -50]));
                        scenicList.push(new Scenery("item", -45176, 9394, 0, "nirwaden", ["salmon", 1, -15]));
                        scenicList.push(new Scenery("item", -44995, 9425, 0, "nirwaden", ["iemaPork", 1, -35]));
                        scenicList.push(new Scenery("item", -45002, 9407, 0, "nirwaden", ["pintGlass", 1, -10]));
                        scenicList.push(new Scenery("item", -44946, 9412, 0, "nirwaden", ["polyapaTart", 2, -20]));
                        scenicList.push(new Scenery("item", -44960, 9410, 0, "nirwaden", ["chonaTart", 2, -20]));
                        scenicList.push(new Scenery("item", -44957, 9413, 0, "nirwaden", ["iemaTart", 2, -20]));
                        scenicList.push(new Scenery("item", -44944, 9425, 0, "nirwaden", ["polyapaTart", 2, -20]));
                        scenicList.push(new Scenery("item", -44964, 9421, 0, "nirwaden", ["chonaTart", 2, -20]));
                        scenicList.push(new Scenery("item", -44954, 9424, 0, "nirwaden", ["iemaTart", 2, -20]));
                        scenicList.push(new Scenery("item", -44978, 9425, 0, "nirwaden", ["erguerWine", 1, -15]));
                        scenicList.push(new Scenery("item", -44975, 9412, 0, "nirwaden", ["erguerPaste", 2, -20]));
                        scenicList.push(new Scenery("item", -44983, 9418, 0, "nirwaden", ["erguerPaste", 3, -20]));
                        scenicList.push(new Scenery("item", -44986, 9401, 0, "nirwaden", ["iemaBerries", 4, -20]));
                        scenicList.push(new Scenery("item", -44979, 9393, 0, "nirwaden", ["iemaBerries", 4, -20]));

                        scenicList.push(new Scenery("item", -44971, 9401, 0, "nirwaden", ["polyapaTart", 2, -20]));
                        scenicList.push(new Scenery("item", -44945, 9403, 0, "nirwaden", ["iemaTart", 2, -20]));
                        scenicList.push(new Scenery("item", -44956, 9398, 0, "nirwaden", ["chonaTart", 2, -20]));
                        scenicList.push(new Scenery("item", -44972, 9394, 0, "nirwaden", ["chonaFruit", 2, -20]));
                        scenicList.push(new Scenery("item", -44960, 9388, 0, "nirwaden", ["polyapaFruit", 2, -20]));
                        scenicList.push(new Scenery("item", -44942, 9391, 0, "nirwaden", ["chonaFruit", 2, -20]));
                        scenicList.push(new Scenery("item", -44948, 9388, 0, "nirwaden", ["polyapaFruit", 2, -20]));
                        scenicList.push(new Scenery("item", -44991, 9385, 0, "nirwaden", ["polyapaFruit", 2, -20]));
                    }

                }
                else
                {

                }

                if (uniqueChars.lelailaLDS && quests.imaginaryFriendAdopted == true && player.title == "Nobility" && player.raceName == "Nirwaden")
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Lelaila")
                        {
                            hits += 1;
                            break;
                        }
                    }
                    if (hits == 0)
                    {
                        var randbutt = Math.random();
                        if (randbutt > 0.7)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-44738, 9319, "Person", false, "Lelaila", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["basketDark", [0.05, 0.05], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[], kid: true}));
                        }
                        else if (randbutt > 0.4)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-44700, 8449, "Person", false, "Lelaila", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["basketLight", [0.05, 0.05], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 0, patrolLoop: false, route:[], kid: true}));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(-44771, 9141, "Person", false, "Lelaila", {race: "Nirwaden", faction: "Nirwaden", personality: "scared", outfit: ["nirwadenClothingF", 0], weapon: ["none", [0.05, 0.05], 0, 0, 1.4], ranged: [false, "steelBolt", 19, 2214, 20, 10 /3, 0, "none", 13], patrolStops: 5, patrolLoop: true, route:[[-44771, 9141], [-44774, 8877], [-45240, 8875], [-45253, 8673], [-44814, 8867]], kid: true}));
                        }
                    }
                }

                scenicList.push(new Scenery("nirwadenMueble", -44750, 8576, 1 * Math.PI, 1));
                scenicList.push(new Scenery("nirwadenMueble", -44775, 8576, 1 * Math.PI, 1));
                scenicList.push(new Scenery("nirwadenMueble", -44826, 8553, 1/2 * Math.PI, 1));
                scenicList.push(new Scenery("nirwadenMueble", -44826, 8544, 1/2 * Math.PI, 1));
                scenicList.push(new Scenery("item", -44699.5, 8576, 0, "nirwaden", ["bucketOfWater", 1, -7]));

                if (quests.aFeastForFewerQuest == true)
                {
                    if (quests.altezorCastleItems == true)
                    {
                        quests.altezorCastleItems = false;
                        worldItems.push([new Item("emptyVialOfGojiiPoison", -44726, 8575), 1]);
                        worldItems.push([new Item("vomit", -45062, 9484), 1]);
                    }
                }



                //trees in the wuntol woods.
                //scenicList.push(new Scenery("pineTree", -13696, 1772, 1.3, true));


                //Plants of the wuntol woods
                //scenicList.push(new Scenery("neprilnePlant", -17425 , 3993, -5.8, true));
                //scenicList.push(new Scenery("pluttPlant", -16685 , 4251, 2.4, true));
                //scenicList.push(new Scenery("culprisPlant", -21156 , 617, -3.5, true));
                //scenicList.push(new Scenery("stomwikPlant", -18732 , -2343, 6, true));
                //scenicList.push(new Scenery("akerPlant", -14491 , 5755, 1, true));
                //scenicList.push(new Scenery("glinPlant", -15944 , -2502, -7.789, true));
                //scenicList.push(new Scenery("ogardPlant", -16292 , -2231, 0, true));
                //scenicList.push(new Scenery("wyrPlant", -15134 , 2399, 2.8, true));
                //scenicList.push(new Scenery("cyrinthilimPlant", -21038 , -2478, 4, true));

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Altezor Soldier")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "gardenGuard1")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-45952, 3009, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 8, speed: 1.4, outfit: ["nirwadenMorionArmour", 10], weapon: ["nirineseSabre", [10, 10], 0, 23, 1.2], ranged: [false, "steelBolt", 16, 2200, 19, 17 /3, 0, "none", 3.6], patrolStops: 2, patrolLoop: true, route:[[-45952, 7902], [-45952, 3009]], altID: "gardenGuard1"}));
                }

                var hits = 0;
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    if (ArtificialIntelligenceAccess[i].ID == "Altezor Soldier")
                    {
                        if (typeof(ArtificialIntelligenceAccess[i].ultra.altID) != "undefined")
                        {
                            if (ArtificialIntelligenceAccess[i].ultra.altID == "gardenGuard2")
                            {
                                hits += 1;
                                break;
                            }
                        }
                    }
                }
                if (hits == 0)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-44140, 7902, "Soldier", false, "Altezor Soldier", {race: "Nirwaden", faction: "Nirwaden", con: 9, speed: 1.34, outfit: ["nirwadenMorionArmour", 12], weapon: ["nirineseSabre", [9, 9], 0, 22, 1], ranged: [false, "steelBolt", 14, 2200, 15, 16 /3, 0, "none", 3], patrolStops: 2, patrolLoop: true, route:[[-44140, 3009], [-44140, 7902]], altID: "gardenGuard2"}));
                }

                if (player.title == "Nobility" && player.raceName == "Nirwaden")
                {
                    scenicList.push(new Scenery("furRug", -44950, 8655, 3.5, 2.4, 0));
                    scenicList.push(new Scenery("furRug", -44772, 8712, 3.5 + Math.PI, 1.67, 0));
                    scenicList.push(new Scenery("fineBed", -44929, 8766, -1/2 * Math.PI, true, 0)); //black
                    scenicList.push(new Scenery("drawerA", -45015, 8785, 1/2 * Math.PI, 3, [2.4, "atalinNobleDrawer1", 20, [], false, 0])); //light
                    scenicList.push(new Scenery("nirwadenMueble", -44929, 8558, 0 * Math.PI, 0)); //long bench
                    scenicList.push(new Scenery("nirwadenMueble", -45006, 8558, 0 * Math.PI, 0)); //long bench
                    scenicList.push(new Scenery("nirwadenMueble", -45045, 8621, 1/2 * Math.PI, 0)); //long bench

                    scenicList.push(new Scenery("nirwadenMueble", -44813, 8623, 1 * Math.PI, 1)); //bench
                    scenicList.push(new Scenery("nirwadenMueble", -44760, 8623, 1 * Math.PI, 1)); //bench
                    scenicList.push(new Scenery("nirwadenMueble", -44710, 8623, 1 * Math.PI, 1)); //bench

                    scenicList.push(new Scenery("nirwadenMueble", -44707, 8639, -1/2 * Math.PI, 2)); //sqr tbl

                    if (player.gender == "Male")
                    {
                        scenicList.push(new Scenery("drawerA", -44700, 8770, 0 * Math.PI, 3, [1.6, "atalinNobleDrawer2", 7, [], false, 0])); //light
                        scenicList.push(new Scenery("hearth", -44698, 8704, -1/2 * Math.PI, "flame"));
                    }
                    else
                    {
                        scenicList.push(new Scenery("loom", -44711, 8769, -1/4 * Math.PI, true));
                        scenicList.push(new Scenery("drawerA", -44865.54, 8621, 0 * Math.PI, 3, [1.6, "atalinNobleDrawer2", 7, [], false, 0])); //light
                        scenicList.push(new Scenery("hearth", -45065, 8723, 1/2 * Math.PI, "flame"));
                    }
                }
                else
                {
                    scenicList.push(new Scenery("furRug", -44950, 8655, 3.5, 2.4, 0));
                    scenicList.push(new Scenery("furRug", -44772, 8712, 3.5 + Math.PI, 1.67, 0));
                    scenicList.push(new Scenery("fineBed", -44929, 8766, -1/2 * Math.PI, false, 0)); //black
                    scenicList.push(new Scenery("drawerA", -45015, 8785, 1/2 * Math.PI, 1, [2.4])); //light
                    scenicList.push(new Scenery("nirwadenMueble", -44929, 8558, 0 * Math.PI, 0)); //long bench
                    scenicList.push(new Scenery("nirwadenMueble", -45006, 8558, 0 * Math.PI, 0)); //long bench
                    scenicList.push(new Scenery("nirwadenMueble", -45045, 8621, 1/2 * Math.PI, 0)); //long bench

                    scenicList.push(new Scenery("nirwadenMueble", -44813, 8623, 1 * Math.PI, 1)); //bench
                    scenicList.push(new Scenery("nirwadenMueble", -44760, 8623, 1 * Math.PI, 1)); //bench
                    scenicList.push(new Scenery("nirwadenMueble", -44710, 8623, 1 * Math.PI, 1)); //bench

                    scenicList.push(new Scenery("nirwadenMueble", -44707, 8639, -1/2 * Math.PI, 2)); //sqr tbl

                    scenicList.push(new Scenery("drawerA", -44700, 8770, 0 * Math.PI, 1, [1.6])); //light
                }

                scenicList.push(new Scenery("bed", -45273, 8540, 0 * Math.PI, 1));
                scenicList.push(new Scenery("bed", -45397, 8540, 1 * Math.PI, 1));
                scenicList.push(new Scenery("bed", -45301, 8366, -1/2 * Math.PI, 1));

                scenicList.push(new Scenery("nirwadenMueble", -45399, 8418, 1.54 * Math.PI, 6)); //stool

                scenicList.push(new Scenery("nirwadenMueble", -45398, 8370, 1/2 * Math.PI, 2)); //sqr tbl

                scenicList.push(new Scenery("nirwadenMueble", -45334.54, 8578, 0 * Math.PI, 1)); //bench


                //snowy part
                ArtificialIntelligenceAccess.push(new Unit(-44778.89090749908, 16050.63183659932, "WinterWolf", false, "esttlfo1"));
                ArtificialIntelligenceAccess.push(new Unit(-44949.00581225769, 15955.98507169797, "WinterWolf", false, "esttlfo2"));
                ArtificialIntelligenceAccess.push(new Unit(-45909.27793815426, 12171.79992305773, "WinterWolf", false, "wintwfs1"));
                ArtificialIntelligenceAccess.push(new Unit(-46149.726572592524, 12088.344781109347, "WinterWolf", false, "wintwfs2"));
                ArtificialIntelligenceAccess.push(new Unit(-46236.19803859372, 12189.689286936253, "WinterWolf", false, "wintwfs3"));
                ArtificialIntelligenceAccess.push(new Unit(-48918.232524670515, 11313.689343791651, "WinterWolf", false, "wintwlvs1"));
                ArtificialIntelligenceAccess.push(new Unit(-49021.27215027349, 11475.049344367611, "WinterWolf", false, "wintwlvs2"));
                ArtificialIntelligenceAccess.push(new Unit(-48719.056264085695, 11350.662271519552, "WinterWolf", false, "wintwlvs3"));
                ArtificialIntelligenceAccess.push(new Unit(-48923.09232073978, 11408.63300823097, "WinterWolf", false, "wintwlvs4"));
                ArtificialIntelligenceAccess.push(new Unit(-53300.62406899323, 15861.137348609482, "WinterWolf", false, "wintsnw1"));
                ArtificialIntelligenceAccess.push(new Unit(-53553.93453473464, 15688.81046625415, "WinterWolf", false, "wintsnw2"));
                ArtificialIntelligenceAccess.push(new Unit(-50025.32521446383, 16148.47473602882, "WinterWolf", false, "wintsnuow1"));
                ArtificialIntelligenceAccess.push(new Unit(-50190.83921564556, 16078.814599475903, "WinterWolf", false, "wintsnuow2"));
                ArtificialIntelligenceAccess.push(new Unit(-50253.86647356398, 16172.92512864752, "WinterWolf", false, "wintsnuow3"));
                ArtificialIntelligenceAccess.push(new Unit(-49800.1372298296, 15388.377167705858, "WinterWolf", false, "wintsnuow4"));
                ArtificialIntelligenceAccess.push(new Unit(-49555.314108521015, 15302.821497857667, "WinterWolf", false, "wintsnuow5"));
                ArtificialIntelligenceAccess.push(new Unit(-49768.76713223927, 15478.343706394438, "WinterWolf", false, "wintsnuow6"));
                ArtificialIntelligenceAccess.push(new Unit(-49743.98766164748, 15209.294193136671, "WinterWolf", false, "wintsnuow7"));
                ArtificialIntelligenceAccess.push(new Unit(-49915.15328707777, 15801.072859665657, "WinterWolf", true, "wintsnuowmo8"));
                ArtificialIntelligenceAccess.push(new Unit(-51693.72751000763, 11165.52208724039, "WinterWolf", false, "wintsnuo1"));
                ArtificialIntelligenceAccess.push(new Unit(-51460.09090432031, 11309.035925584392, "WinterWolf", false, "wintsnuow2"));

                ArtificialIntelligenceAccess.push(new Unit(-44508.51949468403, 13569.176770965978, "Waanti", false, "hrnlitle1"));
                ArtificialIntelligenceAccess.push(new Unit(-44339.21562505046, 13508.824059220144, "Waanti", true, "hrnlitle2"));
                ArtificialIntelligenceAccess.push(new Unit(-44563.2002370857, 13486.03546596161, "Waanti", "baby", "hrnlitle3"));
                ArtificialIntelligenceAccess.push(new Unit(-53243.542557603134, 11484.73167660017, "Waanti", false, "gotherdltle1"));
                ArtificialIntelligenceAccess.push(new Unit(-53064.980418982836, 11381.831488108997, "Waanti", true, "gotherdltle2"));
                ArtificialIntelligenceAccess.push(new Unit(-53188.35536208498, 11570.874026610583, "Waanti", false, "gotherdltle3"));
                ArtificialIntelligenceAccess.push(new Unit(-47296.52456586396, 15774.570352640741, "Waanti", true, "gotherdltd1"));
                ArtificialIntelligenceAccess.push(new Unit(-47114.313709203634, 15855.647955603401, "Waanti", false, "gotherdltd2"));
                ArtificialIntelligenceAccess.push(new Unit(-48175.79249422268, 14064.635710570932, "Waanti", false, "gotherdlt1"));
                ArtificialIntelligenceAccess.push(new Unit(-48069.6773419207, 14105.585611599185, "Waanti", "baby", "gotherdlt2"));
                ArtificialIntelligenceAccess.push(new Unit(-48302.99573508171, 14144.438885942229, "Waanti", true, "gotherdlt3"));

                ArtificialIntelligenceAccess.push(new Unit(-52734.94922675921, 13725.349695710329, "Glutid", false, "ozeee1"));

                scenicList.push(new Scenery("bushkaPlant", -46167.80733178159, 13920.265150960618, 3, true));
                scenicList.push(new Scenery("bushkaPlant", -51851.18409951113, 13673.32426675777, 1, true));
                scenicList.push(new Scenery("bushkaPlant", -49278.8343094348, 11936.216851145005, 3, true));

                scenicList.push(new Scenery("wightBloomPlant", -50198.85019888117, 15590.392350238697, 3, true));


                change = "n1e5";
            }
        }
        else if (region == "s16") //Inochtihikli Village
        {
            if (change != "s16")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                //Animals
                ArtificialIntelligenceAccess.push(new Unit(-2305, -166222, "Yioshk", true, "Bilter"));
                ArtificialIntelligenceAccess.push(new Unit(-1117, -163587, "Yioshk", false, "Biltukin"));

                ArtificialIntelligenceAccess.push(new Unit(-844, -158511, "Yioshk", false, "Binutu"));

                if (change != "s17")
                {
                    if (Math.round(Math.random()))
                    {
                        ArtificialIntelligenceAccess.push(new Unit(2213, -166458, "Yioshk", false, "Bintunin"));
                    }
                }
                else
                {
                    if (Math.round(Math.random()))
                    {
                        ArtificialIntelligenceAccess.push(new Unit(5196, -164759, "Yioshk", true, "Bintunini"));
                    }
                }

                ArtificialIntelligenceAccess.push(new Unit(-1765, -157266, "Yioshk", Math.round(Math.random()), "Biltu"));
                if (Math.round(Math.random()))
                {
                    ArtificialIntelligenceAccess.push(new Unit(6264, -160310, "Rhinoceros", false, "Cagatl"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(6301, -159706, "Taipan", false, "Sapatli"));
                }

                //people

                if (uniqueChars.hamduLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Hamdu the Banker")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(2024, -159004, "Person", false, "Hamdu the Banker", {race: "Orgell", faction: "Freynor", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.35, 0.35], 0, 0, 1.1], ranged: [false, "arrow", 8, 2000, 1, 6, 0, "none", 0.95], patrolStops: 1, patrolLoop: false, route:[[2024, -159010]], banker: true}));
                    }

                    ArtificialIntelligenceAccess.push(new Unit(1875, -158844, "Naaprid", true, "Abelt"));
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Abelt")
                        {
                            ArtificialIntelligenceAccess[i].baseTeam = "Freynor";
                            ArtificialIntelligenceAccess[i].speed = 0;
                            ArtificialIntelligenceAccess[i].tamable = false;
                        }
                    }
                }

                if (uniqueChars.sorvaldLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Sorvald the Merchant")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(1987, -159402, "Person", false, "Sorvald the Merchant", {race: "Freynor", faction: "Freynor", personality: "scared", outfit: ["none", 0], weapon: ["none", [0.25, 0.25], 0, 0, 1.25], ranged: [false, "arrow", 8, 2000, 1, 6, 0, "none", 0.95], patrolStops: 1, patrolLoop: false, route:[[1984, -159344]], merchant: true, merchandise: [[new Item("coins", false, false), 100], [new Item("iron", false, false), 15], [new Item("wood", false, false), 21], [new Item("barrelOfHarstAle", false, false), 1], [new Item("akerBerries", false, false), 12], [new Item("pluttBerries", false, false), 3], [new Item("beesWax", false, false), 7], [new Item("oilLamp", false, false), 1], [new Item("jarOfOil", false, false), 1], [new Item("fishingpole", false, false), 1], [new Item("fireStarter", false, false), 1]]}));
                    }

                    ArtificialIntelligenceAccess.push(new Unit(1809, -159530, "Naaprid", true, "Abilt"));
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Abilt")
                        {
                            ArtificialIntelligenceAccess[i].baseTeam = "Freynor";
                            ArtificialIntelligenceAccess[i].speed = 0;
                            ArtificialIntelligenceAccess[i].tamable = false;
                        }
                    }
                }

                ArtificialIntelligenceAccess.push(new Unit(2602, -158899, "Soldier", false, "Alzkwaya Warrior", {race: "Kel", faction: "Kel", con: 6, speed: 1.5, outfit: ["mofuTribalWear", 0], weapon: ["kellishSpear", [7, 3], 4, 16, 1.1], ranged: [false, "steelBolt", 16, 2200, 19, 17 /3, 0, "none", 3.6], patrolStops: 10, patrolLoop: true, route:[[2602, -158899], [2594, -159109], [2267, -159092], [3003, -159391], [3021, -159111], [3488, -159174], [3455, -159549], [2988, -160099], [3014, -159125], [2594, -159109]]}));

                ArtificialIntelligenceAccess.push(new Unit(3132, -159781, "Soldier", false, "Alzkwaya Warrior", {race: "Kel", faction: "Kel", con: 5, speed: 1.55, outfit: ["mofuTribalWear", 0], weapon: ["kellishSpear", [6, 3], 3.5, 16, 1.1], ranged: [false, "steelBolt", 16, 2200, 19, 17 /3, 0, "none", 3.6], patrolStops: 4, patrolLoop: true, route:[[3132, -159781], [3244, -160521], [2231, -160769], [3244, -160521]]}));

                ArtificialIntelligenceAccess.push(new Unit(2347, -159341, "Soldier", false, "Alzkwaya Warrior", {race: "Kel", faction: "Kel", con: 4, speed: 1.57, outfit: ["mofuTribalWear", 0], weapon: ["kellishSword", [6, 5], 0, 18, 1.25], ranged: [false, "steelBolt", 16, 2200, 19, 17 /3, 0, "none", 3.6], patrolStops: 1, patrolLoop: false, route:[[2308, -159335]]}));

                ArtificialIntelligenceAccess.push(new Unit(3099, -160672, "Soldier", false, "Alzkwaya Warrior", {race: "Kel", faction: "Kel", con: 3, speed: 1.6, outfit: ["mofuTribalWear", 0], weapon: ["kellishSpear", [5, 5], 4, 17, 0.9], ranged: [false, "steelBolt", 16, 2200, 19, 17 /3, 0, "none", 3.6], patrolStops: 4, patrolLoop: true, route:[[3099, -160672], [3101, -160944], [2803, -160944], [2803, -160693]]}));

                if (uniqueChars.iplalaLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Iplala the Warrior Elder")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(3287, -160912, "Soldier", false, "Iplala the Warrior Elder", {race: "Kel", faction: "Kel", con: 3, speed: 1, outfit: ["mofuTribalWear", 0], weapon: ["kellishSword", [4, 6], 0, 17, 1.4], ranged: [false, "steelBolt", 16, 2200, 19, 17 /3, 0, "none", 3.6], patrolStops: 1, patrolLoop: false, route:[[3304, -160884]]}));
                    }
                }

                if (uniqueChars.ehitliLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Ehitli")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(2402, -160021, "Soldier", false, "Ehitli", {race: "Kel", faction: "Kel", con: 0.5, speed: 1.45, outfit: ["mofuTribalWear", 0], weapon: ["kellishSpear", [1.7, 0.85], 0, 8, 2], ranged: [false, "steelBolt", 16, 2200, 19, 17 /3, 0, "none", 3.6], patrolStops: 1, patrolLoop: false, route:[[2301, -160018]], kid: true}));
                    }
                }

                if (uniqueChars.muktuLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Muktu the Artisan")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(2920, -160235, "Person", false, "Muktu the Artisan", {race: "Kel", faction: "Kel", personality: "scared", outfit: ["mofuTribalWear", 0], weapon: ["none", [0.2, 0.2], 0, 0, 2], ranged: [false, "arrow", 8, 2000, 1, 6, 0, "none", 0.95], patrolStops: 1, patrolLoop: false, route:[[2964, -160210]], merchant: true, merchandise: [[new Item("coins", false, false), 6], [new Item("clayBowl", false, false), 25], [new Item("naapridDrinkinghorn", false, false), 8], [new Item("kellishClayPot", false, false), 6]]}));
                    }
                }

                ArtificialIntelligenceAccess.push(new Unit(3639, -160235, "Person", false, "Alzkwaya Farmer", {race: "Kel", faction: "Kel", personality: "scared", outfit: ["mofuTribalWear", 0], weapon: ["none", [0.2, 0.2], 0, 0, 2], ranged: [false, "arrow", 8, 2000, 1, 6, 0, "none", 0.95], patrolStops: 1, patrolLoop: false, route:[[3657, -159553]]}));
                ArtificialIntelligenceAccess.push(new Unit(3065, -158801, "Person", false, "Alzkwaya Farmer", {race: "Kel", faction: "Kel", personality: "scared", outfit: ["mofuTribalWear", 0], weapon: ["none", [0.2, 0.2], 0, 0, 2], ranged: [false, "arrow", 8, 2000, 1, 6, 0, "none", 0.95], patrolStops: 1, patrolLoop: false, route:[[2962, -158822]]}));

                if (uniqueChars.imatlLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Imatl the Tailor")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(3170, -159308, "Person", false, "Imatl the Tailor", {race: "Kel", faction: "Kel", personality: "scared", outfit: ["mofuTribalWear", 0], weapon: ["none", [0.2, 0.2], 0, 0, 2], ranged: [false, "arrow", 8, 2000, 1, 6, 0, "none", 0.95], patrolStops: 1, patrolLoop: false, route:[[3151, -159308]], merchant: true, merchandise: [[new Item("coins", false, false), 10], [new Item("mofuTribalWear", false, false), 3], [new Item("mofuRunnerOutfit", false, false), 2], [new Item("mofuFive", false, false), 4]]}));
                    }
                }

                if (uniqueChars.ritlaktlLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Feastmaker Ritlaktl")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(3373, -159891, "Person", false, "Feastmaker Ritlaktl", {race: "Kel", faction: "Kel", personality: "scared", outfit: ["mofuTribalWear", 0], weapon: ["none", [0.2, 0.2], 0, 0, 2], ranged: [false, "arrow", 8, 2000, 1, 6, 0, "none", 0.95], patrolStops: 1, patrolLoop: false, route:[[3333, -159916]], merchant: true, merchandise: [[new Item("coins", false, false), 2], [new Item("rawMofuFlesh", false, false), 6], [new Item("maizeHusk", false, false), 68], [new Item("roastedAktaltlRoot", false, false), 8]]}));
                    }
                }

                if (uniqueChars.ehelteppLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Eheltepp the Blacksmith")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(2707, -159729, "Person", false, "Eheltepp the Blacksmith", {race: "Kel", faction: "Kel", personality: "calculated", outfit: ["mofuTribalWear", 0], weapon: ["hammer", [2, 1], 0.5, 9, 1], ranged: [false, "arrow", 8, 2000, 1, 6, 0, "none", 0.95], patrolStops: 1, patrolLoop: false, route:[[2698, -159742]], merchant: true, merchandise: [[new Item("coins", false, false), 33], [new Item("kellishSpear", false, false), 6], [new Item("kellishSword", false, false), 3]]}));
                    }
                }

                if (uniqueChars.ximataLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Matriarch Ximata")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(3363, -160667, "Person", false, "Matriarch Ximata", {race: "Kel", faction: "Kel", personality: "violent", outfit: ["mofuMatriarchHeaddress", 0], weapon: ["kellishSpear", [5, 6], 5, 34, 1.35], ranged: [false, "arrow", 8, 2000, 1, 6, 0, "none", 0.95], patrolStops: 1, patrolLoop: false, route:[[3365, -160683]], merchant: true, merchandise: [[new Item("coins", false, false), 890], [new Item("mofuTamal", false, false), 12], [new Item("tamal", false, false), 9], [new Item("naapridDrinkinghorn", false, false), 3], [new Item("boiledFrijols", false, false), 2], [new Item("latuku", false, false), 5], [new Item("aktaltlSoup", false, false), 6], [new Item("boiledAktaltlFrond", false, false), 15], [new Item("mazorca", false, false), 30], [new Item("frijols", false, false), 28], [new Item("apotlPepper", false, false), 22], [new Item("aktaltlFrond", false, false), 18], [new Item("aktaltlRoot", false, false), 45], [new Item("lelBerries", false, false), 16], [new Item("pochalPods", false, false), 8], [new Item("yeolWood", false, false), 19]]}));
                    }

                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Matriarch Ximata")
                        {
                            ArtificialIntelligenceAccess[i].healthMAX = 25;
                            ArtificialIntelligenceAccess[i].health = 25;
                        }
                    }
                }

                //Scenery
                scenicList.push(new Scenery("yeolTree", 1805 , -157838, -Math.PI * 3, false));
                scenicList.push(new Scenery("yeolTree", -108 , -158970, -Math.PI * 25, false));
                scenicList.push(new Scenery("yeolTree", 6282 , -158637, -1, false));
                scenicList.push(new Scenery("yeolTree", 2440 , -157733, 2.6, false));
                scenicList.push(new Scenery("yeolTree", 1263 , -160197, 5.6, false));

                for (var l = 0; l < 14; l++)
                {
                    scenicList.push(new Scenery("yeolTree", 2370 + 2800 * seeder(l * (l + 5)) - 1400, -163832 + 2800 * seeder(l + (l + 6)) - 1400, Math.random() * (2* Math.PI), "Kel"));
                }
                ArtificialIntelligenceAccess.push(new Unit(2105, -163958, "Mugmul", false, "Patpatlak"));
                ArtificialIntelligenceAccess.push(new Unit(1676, -164759, "Taipan", true, "Sapatli"));

                ArtificialIntelligenceAccess.push(new Unit(-2420, -164339, "Taipan", false, "Sapatlin"));

                for (var l = 0; l < 30; l++)
                {
                    scenicList.push(new Scenery("maizePlant", 3677 , -158757 + -81 * l, Math.random() * (2* Math.PI), "Kel"));
                }
                for (var l = 0; l < 28; l++)
                {
                    scenicList.push(new Scenery("frijolPlant", 3677 - 81 , -158757 - 81 + -81 * l, Math.random() * (2* Math.PI), "Kel"));
                }
                for (var l = 0; l < 18; l++)
                {
                    scenicList.push(new Scenery("maizePlant", (3677 - 81) - 81 * l , -158757, Math.random() * (2* Math.PI), "Kel"));
                }
                for (var l = 0; l < 18; l++)
                {
                    scenicList.push(new Scenery("frijolPlant", (3677 - 81) - 81 * l , -158757 - 81, Math.random() * (2* Math.PI), "Kel"));
                }
                for (var l = 0; l < 18; l++)
                {
                    scenicList.push(new Scenery("frijolPlant", (3677 - 81) - 81 * l , -158757 - 81 * 28, Math.random() * (2* Math.PI), "Kel"));
                }
                for (var l = 0; l < 18; l++)
                {
                    scenicList.push(new Scenery("maizePlant", (3677 - 81) - 81 * l , -158757 - 81 * 29, Math.random() * (2* Math.PI), "Kel"));
                }

                //huts
                scenicList.push(new Scenery("alzkwayaBuilding5", 3365, -160795, 0, true));
                scenicList.push(new Scenery("alzkwayaBuilding1", 3401, -160371, 0, true));
                scenicList.push(new Scenery("alzkwayaBuilding4", 3435, -160186, 0, true));
                scenicList.push(new Scenery("alzkwayaBuilding1", 2939, -160807, 0, true));
                scenicList.push(new Scenery("well", 2939, -160807, 5.3, true));
                scenicList.push(new Scenery("alzkwayaBuilding3", 2659, -160920, 0, true));
                scenicList.push(new Scenery("alzkwayaBuilding2", 2474, -160919, 0, true));

                scenicList.push(new Scenery("alzkwayaBuilding2", 2372, -159496, 0, true));
                scenicList.push(new Scenery("alzkwayaBuilding4", 2360, -159698, 0, true));
                scenicList.push(new Scenery("alzkwayaBuilding3", 2653, -159637, 0, true));

                scenicList.push(new Scenery("alzkwayaBuilding1", 3471, -158954, 0, true));
                scenicList.push(new Scenery("alzkwayaBuilding1", 3193, -158926, 0, true));
                scenicList.push(new Scenery("alzkwayaBuilding4", 2923, -158957, 0, true));
                scenicList.push(new Scenery("alzkwayaBuilding3", 2299, -158943, 0, true));

                scenicList.push(new Scenery("alzkwayaBuilding4", 3261, -159287, 0, true));

                scenicList.push(new Scenery("alzkwayaBuilding2", 2505, -159372, 0, true));
                scenicList.push(new Scenery("alzkwayaBuilding4", 3167, -159640, 0, true));
                scenicList.push(new Scenery("alzkwayaBuilding1", 3429, -159790, 0, true));
                scenicList.push(new Scenery("alzkwayaBuilding3", 2592, -160242, 0, true));
                scenicList.push(new Scenery("alzkwayaBuilding3", 2381, -160522, 0, true));
                scenicList.push(new Scenery("alzkwayaBuilding2", 2903, -160324, 0, true));

                scenicList.push(new Scenery("propWagon", 2088, -159416, 0.5, true));
                scenicList.push(new Scenery("crate", 2092, -159416, 1, 1, [1.25]));
                scenicList.push(new Scenery("barrel", 2113, -159387, 0.5, 0));

                scenicList.push(new Scenery("dryMudSlab", 3005, -160237, 1.05 + 1/2 * Math.PI, 2, 1.5));
                scenicList.push(new Scenery("dryMudSlab", 2990, -160186, 1 + Math.PI, 2, 3));

                scenicList.push(new Scenery("dryMudSlab", 3293, -159933, 0.2, 4, 3));

                scenicList.push(new Scenery("propWagon", 2067, -158928, 1.4, true));
                scenicList.push(new Scenery("crate", 2067, -158928, 1.45, 1, [1.32]));
                scenicList.push(new Scenery("crate", 2067, -158892, 1.31, 2, [0.76]));
                scenicList.push(new Scenery("loom", 3264, -159244, 0.12, true));
                scenicList.push(new Scenery("dryMudSlab", 3311, -159284, 0, 1.5, 1.5));

                scenicList.push(new Scenery("dryMudSlab", 3361, -160799, 0, 2.5, 1.5));

                scenicList.push(new Scenery("yeolCampFire", 3361, -160840, 2*Math.PI * Math.random(), "permaLit"));
                scenicList.push(new Scenery("yeolCampFire", 3397, -160800, 2*Math.PI * Math.random(), "permaLit"));
                scenicList.push(new Scenery("yeolCampFire", 3326, -160799, 2*Math.PI * Math.random(), "permaLit"));

                scenicList.push(new Scenery("forge", 2634, -159730, 3 + Math.PI, true));
                scenicList.push(new Scenery("anvil", 2686, -159770, 2.6, true));
                scenicList.push(new Scenery("dryMudSlab", 2778, -159805, 1.25 + Math.PI, 1.5, 3.5));
                scenicList.push(new Scenery("dryMudSlab", 2849, -159750, 1.25 + Math.PI - 1/2 * Math.PI, 1.5, 3.5));

                scenicList.push(new Scenery("dryMudSlab", 3112, -159293, Math.PI, 2.25, 2.25));

                scenicList.push(new Scenery("mugmulMat", 2368, -159680, 4, 2));
                scenicList.push(new Scenery("mugmulMat", 2351, -159729, 6.1, 2.2));
                scenicList.push(new Scenery("mugmulMat", 3429, -159794, 1, 3));
                scenicList.push(new Scenery("mugmulMat", 2903, -160329, 2, 2.8));
                scenicList.push(new Scenery("mugmulMat", 2655, -159634, 3, 2.9));

                if (player.raceName != "Kel" || player.gender != "Female" || player.title != "Nobility")
                {
                    scenicList.push(new Scenery("item", 2963, -160169, 0, false, ["kellishClayPot", 1, -9, "Kel"]));
                    scenicList.push(new Scenery("item", 2976, -160180, 0, false, ["kellishClayPot", 1, -9, "Kel"]));
                    scenicList.push(new Scenery("item", 2994, -160188, 0, false, ["kellishClayPot", 1, -9, "Kel"]));
                    scenicList.push(new Scenery("item", 3009, -160197, 0, false, ["naapridDrinkinghorn", 1, -10, "Kel"]));
                    scenicList.push(new Scenery("item", 3024, -160205, 0, false, ["naapridDrinkinghorn", 1, -10, "Kel"]));

                    scenicList.push(new Scenery("item", 3293 + 7, -159933 - 2, 0, false, ["maizeFlour", 2, -5, "Kel"]));
                    scenicList.push(new Scenery("item", 3293 - 6, -159933 + 1, 0, false, ["maizeFlour", 2, -5, "Kel"]));
                    scenicList.push(new Scenery("item", 3293 + 2, -159933 + 5, 0, false, ["maizeFlour", 2, -5, "Kel"]));
                    scenicList.push(new Scenery("item", 3293 - 3, -159933 - 4, 0, false, ["maizeFlour", 2, -5, "Kel"]));

                    scenicList.push(new Scenery("item", 3278 - 3, -159902 - 6, 0, false, ["maize", 1, -3, "Kel"]));
                    scenicList.push(new Scenery("item", 3278 - 14, -159902 - 1, 0, false, ["maize", 1, -3, "Kel"]));
                    scenicList.push(new Scenery("item", 3278 + 12, -159902 + 2, 0, false, ["maize", 1, -3, "Kel"]));
                    scenicList.push(new Scenery("item", 3278 + 1, -159902 + 7, 0, false, ["maize", 1, -3, "Kel"]));

                    scenicList.push(new Scenery("item", 3283, -159974, 0, false, ["kellishClayPotOfWater", 1, -10, "Kel"]));
                    scenicList.push(new Scenery("item", 3316, -159954, 0, false, ["masa", 2, -12, "Kel"]));
                    scenicList.push(new Scenery("item", 3307, -159967, 0, false, ["masa", 2, -12, "Kel"]));

                    scenicList.push(new Scenery("item", 3014, -160221, 0, false, ["clayBowl", 4, -6, "Kel"]));
                    scenicList.push(new Scenery("item", 3009, -160234, 0, false, ["clayBowl", 4, -6, "Kel"]));
                    scenicList.push(new Scenery("item", 3002, -160253, 0, false, ["clayBowl", 4, -6, "Kel"]));

                    scenicList.push(new Scenery("item", 2995, -160873, 0, false, ["kellishClayPot", 1, -8, "Kel"]));
                    scenicList.push(new Scenery("item", 3020, -160850, 0, false, ["kellishClayPot", 1, -8, "Kel"]));
                    scenicList.push(new Scenery("item", 3305, -159277, 0, false, ["mofuFeather", 3, -9, "Kel"]));
                    scenicList.push(new Scenery("item", 3305, -159286, 0, false, ["mofuFeather", 3, -9, "Kel"]));

                    scenicList.push(new Scenery("item", 3361, -160799, 0, false, ["lelBerries", 8, -20, "Kel"]));
                    scenicList.push(new Scenery("item", 3367, -160798, 0, false, ["lelBerries", 8, -20, "Kel"]));
                    scenicList.push(new Scenery("item", 3366, -160803, 0, false, ["lelBerries", 8, -20, "Kel"]));
                    scenicList.push(new Scenery("item", 3355, -160804, 0, false, ["lelBerries", 8, -20, "Kel"]));
                    scenicList.push(new Scenery("item", 3355, -160797, 0, false, ["lelBerries", 8, -20, "Kel"]));

                    scenicList.push(new Scenery("item", 2977, -160793, 0, false, ["itlinBranch", 1, -20, "Kel"]));

                    scenicList.push(new Scenery("mugmulSleepingMat", 3188, -159604, 0, false));
                    scenicList.push(new Scenery("mugmulSleepingMat", 3467, -160159, 1/2 * Math.PI + 0.12, false));
                    scenicList.push(new Scenery("mugmulSleepingMat", 3348, -160364, 1/2 * Math.PI + 0.18, false));
                    scenicList.push(new Scenery("mugmulSleepingMat", 2637, -160921, Math.PI + 0.05, false));
                    scenicList.push(new Scenery("mugmulSleepingMat", 2509, -160918, 0 + 0.07, false));

                    scenicList.push(new Scenery("mugmulSleepingMat", 2400, -160489, 0 + 0.02, false));
                    scenicList.push(new Scenery("mugmulSleepingMat", 2558, -160228, 1/2 * Math.PI - 0.19, false));

                    scenicList.push(new Scenery("item", 2368, -159680, 0, false, ["mofuFeather", 3, -6, "Kel"]));
                    scenicList.push(new Scenery("item", 2368 + 7, -159680 + 9, 0, false, ["mofuFeather", 3, -6, "Kel"]));
                    scenicList.push(new Scenery("item", 2368 -7, -159680 + 6, 0, false, ["mofuFeather", 3, -6, "Kel"]));
                    scenicList.push(new Scenery("item", 2368 + 8, -159680 -5, 0, false, ["mofuFeather", 3, -6, "Kel"]));
                    scenicList.push(new Scenery("item", 2368 -10, -159680 -8, 0, false, ["mofuFeather", 3, -6, "Kel"]));
                    scenicList.push(new Scenery("item", 2368 -3, -159680 + 3, 0, false, ["mofuFeather", 3, -6, "Kel"]));
                    scenicList.push(new Scenery("item", 2368 -6, -159680 - 6, 0, false, ["mofuFoot", 6, -6, "Kel"]));

                    scenicList.push(new Scenery("item", 2351, -159729 - 9, 0, false, ["rawSaskriit", 1, -9, "Kel"]));
                    scenicList.push(new Scenery("item", 2351 + 6, -159729, 0, false, ["rawRiulpo", 2, -14, "Kel"]));
                    scenicList.push(new Scenery("item", 2351 - 10, -159729 + 8, 0, false, ["rawRiulpo", 1, -7, "Kel"]));

                    scenicList.push(new Scenery("mugmulSleepingMat", 2372, -159510, Math.PI - 0.26, false));
                    scenicList.push(new Scenery("mugmulSleepingMat", 2539, -159371, -1/2 * Math.PI - 0.14, false));
                    scenicList.push(new Scenery("crate", 2291, -158924, 3.25/4 * Math.PI, 1, [1.25]));

                    scenicList.push(new Scenery("mugmulSleepingMat", 2951, -158970, -1/2 * Math.PI - 0.2, false));
                    scenicList.push(new Scenery("mugmulSleepingMat", 3174, -158905, Math.PI + 0.3, false));
                    scenicList.push(new Scenery("mugmulSleepingMat", 3507, -158944, 1/2 * Math.PI, false));
                }
                else
                {
                    scenicList.push(new Scenery("item", 2963, -160169, 0, false, ["kellishClayPot", 1, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 2976, -160180, 0, false, ["kellishClayPot", 1, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 2994, -160188, 0, false, ["kellishClayPot", 1, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 3009, -160197, 0, false, ["naapridDrinkinghorn", 1, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 3024, -160205, 0, false, ["naapridDrinkinghorn", 1, 0, "Kel"]));

                    scenicList.push(new Scenery("item", 3293 + 7, -159933 - 2, 0, false, ["maizeFlour", 2, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 3293 - 6, -159933 + 1, 0, false, ["maizeFlour", 2, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 3293 + 2, -159933 + 5, 0, false, ["maizeFlour", 2, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 3293 - 3, -159933 - 4, 0, false, ["maizeFlour", 2, 0, "Kel"]));

                    scenicList.push(new Scenery("item", 3278 - 3, -159902 - 6, 0, false, ["maize", 1, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 3278 - 14, -159902 - 1, 0, false, ["maize", 1, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 3278 + 12, -159902 + 2, 0, false, ["maize", 1, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 3278 + 1, -159902 + 7, 0, false, ["maize", 1, 0, "Kel"]));

                    scenicList.push(new Scenery("item", 3283, -159974, 0, false, ["kellishClayPotOfWater", 1, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 3316, -159954, 0, false, ["masa", 2, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 3307, -159967, 0, false, ["masa", 2, 0, "Kel"]));

                    scenicList.push(new Scenery("item", 3014, -160221, 0, false, ["clayBowl", 4, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 3009, -160234, 0, false, ["clayBowl", 4, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 3002, -160253, 0, false, ["clayBowl", 4, 0, "Kel"]));

                    scenicList.push(new Scenery("item", 2995, -160873, 0, false, ["kellishClayPot", 1, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 3020, -160850, 0, false, ["kellishClayPot", 1, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 3305, -159277, 0, false, ["mofuFeather", 3, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 3305, -159286, 0, false, ["mofuFeather", 3, 0, "Kel"]));

                    scenicList.push(new Scenery("item", 3361, -160799, 0, false, ["lelBerries", 8, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 3367, -160798, 0, false, ["lelBerries", 8, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 3366, -160803, 0, false, ["lelBerries", 8, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 3355, -160804, 0, false, ["lelBerries", 8, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 3355, -160797, 0, false, ["lelBerries", 8, 0, "Kel"]));

                    scenicList.push(new Scenery("item", 2977, -160793, 0, false, ["itlinBranch", 1, -10, "Kel"]));

                    scenicList.push(new Scenery("mugmulSleepingMat", 3188, -159604, 0, true));
                    scenicList.push(new Scenery("mugmulSleepingMat", 3467, -160159, 1/2 * Math.PI + 0.12, true));
                    scenicList.push(new Scenery("mugmulSleepingMat", 3348, -160364, 1/2 * Math.PI + 0.18, true));
                    scenicList.push(new Scenery("mugmulSleepingMat", 2637, -160921, Math.PI + 0.05, true));
                    scenicList.push(new Scenery("mugmulSleepingMat", 2509, -160918, 0 + 0.07, true));

                    scenicList.push(new Scenery("mugmulSleepingMat", 2400, -160489, 0 + 0.02, true));
                    scenicList.push(new Scenery("mugmulSleepingMat", 2558, -160228, 1/2 * Math.PI - 0.19, true));

                    scenicList.push(new Scenery("item", 2368, -159680, 0, false, ["mofuFeather", 3, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 2368 + 7, -159680 + 9, 0, false, ["mofuFeather", 3, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 2368 -7, -159680 + 6, 0, false, ["mofuFeather", 3, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 2368 + 8, -159680 -5, 0, false, ["mofuFeather", 3, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 2368 -10, -159680 -8, 0, false, ["mofuFeather", 3, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 2368 -3, -159680 + 3, 0, false, ["mofuFeather", 3, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 2368 -6, -159680 - 6, 0, false, ["mofuFoot", 6, 0, "Kel"]));

                    scenicList.push(new Scenery("item", 2351, -159729 - 9, 0, false, ["rawSaskriit", 1, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 2351 + 6, -159729, 0, false, ["rawRiulpo", 2, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 2351 - 10, -159729 + 8, 0, false, ["rawRiulpo", 1, 0, "Kel"]));

                    scenicList.push(new Scenery("mugmulSleepingMat", 2372, -159510, Math.PI - 0.26, true));
                    scenicList.push(new Scenery("mugmulSleepingMat", 2539, -159371, -1/2 * Math.PI - 0.14, true));

                    scenicList.push(new Scenery("crate", 2291, -158924, 3.25/4 * Math.PI, 3, [1.25, "inochtihikliCrate1", 7, [], false, 0]));

                    scenicList.push(new Scenery("mugmulSleepingMat", 2951, -158970, -1/2 * Math.PI - 0.2, true));
                    scenicList.push(new Scenery("mugmulSleepingMat", 3174, -158905, Math.PI + 0.3, true));
                    scenicList.push(new Scenery("mugmulSleepingMat", 3507, -158944, 1/2 * Math.PI, true));
                }

                if (player.raceName != "Kel" || player.gender != "Female" || player.title != "Nobility")
                {
                    scenicList.push(new Scenery("item", 2778, -159805, 0, false, ["kellishSpear", 1, -24, "Kel"]));
                    scenicList.push(new Scenery("item", 2850, -159753, 0, false, ["kellishSword", 1, -26, "Kel"]));
                    scenicList.push(new Scenery("item", 2740, -159791, 0, false, ["hammer", 1, -13, "Kel"]));
                    scenicList.push(new Scenery("item", 3112, -159293, 0, false, ["mofuTribalWear", 1, -30, "Kel"]));
                }
                else
                {
                    scenicList.push(new Scenery("item", 2778, -159805, 0, false, ["kellishSpear", 1, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 2850, -159753, 0, false, ["kellishSword", 1, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 2740, -159791, 0, false, ["hammer", 1, 0, "Kel"]));
                    scenicList.push(new Scenery("item", 3112, -159293, 0, false, ["mofuTribalWear", 1, 0, "Kel"]));
                }

                scenicList.push(new Scenery("darkStone", 462 , -164353, 2, 1, 3));
                scenicList.push(new Scenery("darkStone", 1210 , -165349, 7, 1.5, 3));

                ArtificialIntelligenceAccess.push(new Unit(6107, -157621, "Mofu", Math.round(Math.random()), "Fletho"));
                ArtificialIntelligenceAccess.push(new Unit(-1981, -161913, "Mofu", Math.round(Math.random()), "Fletho"));
                ArtificialIntelligenceAccess.push(new Unit(-1523, -161219, "Mofu", Math.round(Math.random()), "Fletho"));
                ArtificialIntelligenceAccess.push(new Unit(-2238, -166431, "Mofu", Math.round(Math.random()), "Fletho"));
                for (var l = 0; l < 9; l++)
                {
                    var sdedX = 3645 + (1400 * seeder(l * 9) - 700);
                    var sdedY = -158099 + (800 * seeder(l * 17) - 400);
                    if (Math.random() > 0.56)
                    {
                        scenicList.push(new Scenery("mofuNest", sdedX, sdedY, Math.random() * (2* Math.PI), Math.random() + 0.6));
                        ArtificialIntelligenceAccess.push(new Unit(sdedX, sdedY, "Mofu", Math.round(Math.random()), "Flethy"));
                    }
                    else
                    {
                        if (Math.random() > 0.6)
                        {
                            scenicList.push(new Scenery("mofuNest", sdedX, sdedY, Math.random() * (2* Math.PI), Math.random() + 0.6));
                            ArtificialIntelligenceAccess.push(new Unit(sdedX + 350 * Math.random() - 175, sdedY + 350 * Math.random() - 175, "Mofu", Math.round(Math.random()), "Flethy"));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(sdedX + 500 * Math.random() - 250, sdedY + 400 * Math.random() - 200, "Mofu", "baby", "Flethu"));
                        }
                    }
                }

                //mofu nest area
                for (var l = 0; l < 14; l++)
                {
                    var sdedX = -223 + (1600 * seeder((l + 1) * 23) - 800);
                    var sdedY = -165430 + (1000 * seeder((l * 3) + 17) - 500);
                    if (Math.random() > 0.56)
                    {
                        scenicList.push(new Scenery("mofuNest", sdedX, sdedY, Math.random() * (2* Math.PI), Math.random() + 0.6));
                        ArtificialIntelligenceAccess.push(new Unit(sdedX, sdedY, "Mofu", Math.round(Math.random()), "Flethy"));
                    }
                    else
                    {
                        if (Math.random() > 0.6)
                        {
                            scenicList.push(new Scenery("mofuNest", sdedX, sdedY, Math.random() * (2* Math.PI), Math.random() + 0.6));
                            ArtificialIntelligenceAccess.push(new Unit(sdedX + 350 * Math.random() - 175, sdedY + 350 * Math.random() - 175, "Mofu", Math.round(Math.random()), "Flethy"));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(sdedX + 500 * Math.random() - 250, sdedY + 400 * Math.random() - 200, "Mofu", "baby", "Flethu"));
                        }
                    }
                }

                //Plants
                scenicList.push(new Scenery("aktaltlPlant", 2180 , -158186, 7, true));
                scenicList.push(new Scenery("aktaltlPlant", -101 , -159578, 5, true));

                scenicList.push(new Scenery("hracklePlant", -990 , -157472, 6, true));
                scenicList.push(new Scenery("hracklePlant", -1574 , -164956, 0.5, true));

                scenicList.push(new Scenery("lelPlant", -2253 , -157661, 0, true));

                scenicList.push(new Scenery("apotlPlant", -299 , -158322, 11, true));
                scenicList.push(new Scenery("apotlPlant", -98 , -160562, 1.5, true));

                scenicList.push(new Scenery("pochalPlant", -1658 , -161677, 5.53, true));
                scenicList.push(new Scenery("pochalPlant", 4819 , -164680, 6.35, true));

                scenicList.push(new Scenery("kwomPlant", 855 , -165126, 5.5, true));

                change = "s16";
            }
        }
        else if (region == "s18")
        {
            if (change != "s18")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                //fishing
                scenicList.push(new Scenery("southFishingSpot", 4100, -180775, 0, true));

                scenicList.push(new Scenery("southFishingSpot", 3545, -179861, 8, true));

                scenicList.push(new Scenery("southFishingSpot", 1636, -179556, 10, true));

                scenicList.push(new Scenery("southFishingSpot", 5851, -182586, 6, true));

                scenicList.push(new Scenery("southFishingSpot", 4845, -180477, 2, true));

                if (quests.lostHuntressQuest == true)
                {
                    scenicList.push(new Scenery("deadDrileQST", 4995, -179625, 2, 1.1));
                    scenicList.push(new Scenery("deadBody", 5020, -179715, 2, 2, 1));
                }

                //Animals
                ArtificialIntelligenceAccess.push(new Unit(6266, -182359, "Drile", true, "Applejack"));
                ArtificialIntelligenceAccess.push(new Unit(6439, -182933, "Drile", false, "AppleBiter"));
                ArtificialIntelligenceAccess.push(new Unit(6040, -183168, "Drile", false, "Applebee"));
                ArtificialIntelligenceAccess.push(new Unit(5335, -181345, "Drile", false, "Applebritz"));
                ArtificialIntelligenceAccess.push(new Unit(6151, -179837, "Drile", true, "Apparee"));
                ArtificialIntelligenceAccess.push(new Unit(4690, -180665, "Drile", false, "Apperbritz"));
                ArtificialIntelligenceAccess.push(new Unit(5155, -180070, "Drile", false, "Alper"));
                ArtificialIntelligenceAccess.push(new Unit(4449, -179738, "Drile", false, "Alparz"));
                ArtificialIntelligenceAccess.push(new Unit(3743, -181656, "Drile", false, "Alparitz"));
                ArtificialIntelligenceAccess.push(new Unit(3286, -180572, "Drile", true, "Alpa"));
                ArtificialIntelligenceAccess.push(new Unit(4014, -180560, "Drile", false, "Alitz"));
                ArtificialIntelligenceAccess.push(new Unit(2881, -179958, "Drile", false, "Alitzer"));
                ArtificialIntelligenceAccess.push(new Unit(2545, -182017, "Drile", false, "Altzer"));
                ArtificialIntelligenceAccess.push(new Unit(2058, -181783, "Drile", false, "Altzir"));
                ArtificialIntelligenceAccess.push(new Unit(1782, -180781, "Drile", false, "Altzor"));
                ArtificialIntelligenceAccess.push(new Unit(2417, -178862, "Drile", false, "Altzar"));
                ArtificialIntelligenceAccess.push(new Unit(1554, -178866, "Drile", true, "Altzarar"));
                ArtificialIntelligenceAccess.push(new Unit(396, -179761, "Drile", true, "Altzirar"));
                ArtificialIntelligenceAccess.push(new Unit(-817, -180135, "Drile", false, "Altzara"));
                ArtificialIntelligenceAccess.push(new Unit(-655, -178249, "Drile", false, "Altzari"));
                ArtificialIntelligenceAccess.push(new Unit(-1804, -179253, "Drile", true, "Altziri"));
                ArtificialIntelligenceAccess.push(new Unit(-1583, -181208, "Drile", true, "Altiriz"));
                ArtificialIntelligenceAccess.push(new Unit(-2472, -180849, "Drile", false, "Alikir"));
                ArtificialIntelligenceAccess.push(new Unit(-2364, -179989, "Drile", false, "Alira"));

                ArtificialIntelligenceAccess.push(new Unit(5505, -177772, "Yioshk", false, "Balsh"));
                ArtificialIntelligenceAccess.push(new Unit(-2008, -178288, "Yioshk", false, "Balish"));
                ArtificialIntelligenceAccess.push(new Unit(-2414, -177863, "Yioshk", true, "Balchis"));
                ArtificialIntelligenceAccess.push(new Unit(-1937, -182918, "Yioshk", true, "Balcho"));
                ArtificialIntelligenceAccess.push(new Unit(677, -183163, "Yioshk", false, "Balich"));
                ArtificialIntelligenceAccess.push(new Unit(1583, -186318, "Yioshk", false, "Balishk"));

                if (Math.round(Math.random()))
                {
                    ArtificialIntelligenceAccess.push(new Unit(3536, -179225, "Zarbu", true, "Seper"));
                    ArtificialIntelligenceAccess.push(new Unit(3487, -178520, "Zarbu", false, "Sepol"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(1817, -177871, "Zarbu", true, "Seper"));
                    ArtificialIntelligenceAccess.push(new Unit(2342, -177751, "Zarbu", false, "Sepol"));
                }

                ArtificialIntelligenceAccess.push(new Unit(-835, -185870, "Zarbu", true, "Sepera"));
                ArtificialIntelligenceAccess.push(new Unit(-494, -186085, "Zarbu", false, "Sepola"));
                ArtificialIntelligenceAccess.push(new Unit(-1138, -186253, "Zarbu", false, "Sepoal"));
                ArtificialIntelligenceAccess.push(new Unit(-1413, -186505, "Zarbu", "baby", "Sepa"));
                ArtificialIntelligenceAccess.push(new Unit(-739, -186444, "Zarbu", false, "Sepalo"));
                ArtificialIntelligenceAccess.push(new Unit(-2058, -185035, "Zarbu", true, "Sepalero"));

                ArtificialIntelligenceAccess.push(new Unit(3764, -183526, "Rhinoceros", true, "Kagher"));
                ArtificialIntelligenceAccess.push(new Unit(3370, -182583, "Rhinoceros", false, "Cagar"));
                ArtificialIntelligenceAccess.push(new Unit(5217, -184077, "Rhinoceros", false, "Cagath"));

                ArtificialIntelligenceAccess.push(new Unit(5598, -186753, "Mugmul", false, "Pikk"));
                ArtificialIntelligenceAccess.push(new Unit(6144, -186277, "Mugmul", false, "Pokk"));
                ArtificialIntelligenceAccess.push(new Unit(4067, -184050, "Mugmul", false, "Pelkk"));

                ArtificialIntelligenceAccess.push(new Unit(1261, -184745, "Taipan", true, "Tatl"));
                ArtificialIntelligenceAccess.push(new Unit(-2044, -182211, "Taipan", false, "Tletl"));

                ArtificialIntelligenceAccess.push(new Unit(2735, -179265, "Mofu", false, "Tabbo"));
                ArtificialIntelligenceAccess.push(new Unit(2562, -179180, "Mofu", false, "Taib"));
                ArtificialIntelligenceAccess.push(new Unit(801, -178707, "Mofu", false, "Talbo"));

                ArtificialIntelligenceAccess.push(new Unit(1234, -177869, "Mofu", true, "Tabbo"));
                scenicList.push(new Scenery("mofuNest", 1234, -177869, -2.1, 1.315));
                ArtificialIntelligenceAccess.push(new Unit(1056, -177963, "Mofu", false, "Taib"));
                scenicList.push(new Scenery("mofuNest", 1056, -177963, -2.1, 1.066));
                ArtificialIntelligenceAccess.push(new Unit(1160, -178188, "Mofu", true, "Talbo"));
                scenicList.push(new Scenery("mofuNest", 1160, -178188, -2.1, 1.291));
                ArtificialIntelligenceAccess.push(new Unit(1397, -178118, "Mofu", "baby", "Tabbo"));
                ArtificialIntelligenceAccess.push(new Unit(1624, -178071, "Mofu", "baby", "Talbo"));

                ArtificialIntelligenceAccess.push(new Unit(3923, -184757, "Mofu", false, "Taibi"));
                scenicList.push(new Scenery("mofuNest", 3923, -184757, -2.1, 1.175));
                ArtificialIntelligenceAccess.push(new Unit(3694, -184887, "Mofu", true, "Talba"));
                scenicList.push(new Scenery("mofuNest", 3694, -184887, -2.1, 1.325));
                ArtificialIntelligenceAccess.push(new Unit(4128, -185222, "Mofu", false, "Taibi"));
                ArtificialIntelligenceAccess.push(new Unit(3785, -185011, "Mofu", "baby", "Talbo"));

                if (Math.round(Math.random()))
                {
                    ArtificialIntelligenceAccess.push(new Unit(659, -181621, "Mofu", true, "Talbo"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(659, -181621, "Mofu", false, "Talbo"));
                }

                //Scenery
                scenicList.push(new Scenery("yeolTree", 6188 , -186461, -Math.PI * 1.5, false));
                scenicList.push(new Scenery("yeolTree", 5996 , -185962, 0, false));
                scenicList.push(new Scenery("yeolTree", 5807 , -186332, -3.65, false));
                scenicList.push(new Scenery("yeolTree", 5886 , -185774, 5.8, false));
                scenicList.push(new Scenery("yeolTree", 5164 , -186885, -7.14, false));
                scenicList.push(new Scenery("yeolTree", 4809 , -186340, 6, false));
                scenicList.push(new Scenery("yeolTree", 4506 , -183947, 9, false));
                scenicList.push(new Scenery("yeolTree", 4024 , -184303, -7.14, false));
                scenicList.push(new Scenery("yeolTree", 3365 , -184004, 1, false));
                scenicList.push(new Scenery("yeolTree", 1042 , -184619, 15, false));
                scenicList.push(new Scenery("yeolTree", -1078 , -184161, -8.2, false));
                scenicList.push(new Scenery("yeolTree", -2036 , -185952, 2.7, false));
                scenicList.push(new Scenery("yeolTree", 4003 , -178178, -3, false));

                //Plants
                scenicList.push(new Scenery("aktaltlPlant", 6114 , -178816, 4.5, true));
                scenicList.push(new Scenery("aktaltlPlant", 3910 , -177484, 7, true));
                scenicList.push(new Scenery("aktaltlPlant", 1936 , -177426, -1.1, true));
                scenicList.push(new Scenery("aktaltlPlant", -1309 , -183269, 6, true));
                scenicList.push(new Scenery("aktaltlPlant", 2378 , -183006, 9.8, true));

                scenicList.push(new Scenery("hracklePlant", 4945 , -179214, -5.5, true));
                scenicList.push(new Scenery("hracklePlant", 3026 , -183633, -1.5, true));
                scenicList.push(new Scenery("hracklePlant", 5629 , -183791, 2.55, true));

                scenicList.push(new Scenery("lelPlant", 411 , -178046, 3, true));
                scenicList.push(new Scenery("lelPlant", -321 , -182515, 1.75, true));
                scenicList.push(new Scenery("lelPlant", 1967 , -186193, 45, true));

                scenicList.push(new Scenery("pochalPlant", -2022 , -177636, 0, true));
                scenicList.push(new Scenery("pochalPlant", -2070 , -184268, 0, true));
                scenicList.push(new Scenery("pochalPlant", 2712 , -185440, 0, true));

                scenicList.push(new Scenery("volaPlant", -73 , -185409, -4, true));
                scenicList.push(new Scenery("volaPlant", 99 , -186460, 0, true));
                scenicList.push(new Scenery("volaPlant", -1812 , -186742, 1, true));
                scenicList.push(new Scenery("volaPlant", 4570 , -183369, 0.6, true));
                scenicList.push(new Scenery("volaPlant", 6149 , -184901, 32, true));

                scenicList.push(new Scenery("apotlPlant", 659 , -185334, 4, true));
                scenicList.push(new Scenery("apotlPlant", 5322 , -186129, 5, true));

                scenicList.push(new Scenery("kwomPlant", 123 , -186606, 0, true));
                scenicList.push(new Scenery("kwomPlant", -2045 , -182210, -3.3, true));

                change = "s18";
            }
        }
        else if (region == "s24") //Jungla first of the jungle
        {
            if (change != "s24")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units
                //ArtificialIntelligenceAccess.push(new Unit(3000, 2500, "ZafBeetle", true, "Tzalit"));
                //scenicList.push(new Scenery("vinePatch", 3500, 2500, 0, 1));
                //scenicList.push(new Scenery("cerebrisPlant", 3500, 2500, 0, 1));
                //scenicList.push(new Scenery("gojiiPlant", 3500, 2500, 0, true));
                //scenicList.push(new Scenery("bahabPlant", 3500, 2500, 0, true));
                //scenicList.push(new Scenery("araneaDen", 3500, 2500, 0, false, true));
                //ArtificialIntelligenceAccess.push(new Unit(3000, 2500, "Gorgon", false, "Gra"));
                //ArtificialIntelligenceAccess.push(new Unit(3000, 2500, "Cruorcca", "massive", "Cruor"));
                //scenicList.push(new Scenery("athergmPlant", 3990, 2500, 0, 1));
                //scenicList.push(new Scenery("decipulaBasePlant", 3670, 2500, 0, "massive"));
                //ArtificialIntelligenceAccess.push(new Unit(3500, 2500, "Zancudo", false, "proboscis"));
                //ArtificialIntelligenceAccess.push(new Unit(3550, 2500, "Venandi", true, "hunter"));
                //ArtificialIntelligenceAccess.push(new Unit(3570, 2500, "EtyrVenandi", true, "scout"));
                //ArtificialIntelligenceAccess.push(new Unit(3570, 2500, "AraneaVenandi", true, "tank"));
                //scenicList.push(new Scenery("valumPlant", 3990, 2500, 0, 1));
                //scenicList.push(new Scenery("decipulaPlant", 3670, 2500, 0, true));
                //ArtificialIntelligenceAccess.push(new Unit(3613, -240174, "Gorgon", false, "Gra"));
                //ArtificialIntelligenceAccess.push(new Unit(3700, 2500, "Boa", false, "constricto"));
                //ArtificialIntelligenceAccess.push(new Unit(3600, 2500, "PoisonDartFrog", true, "coqui"));
                //scenicList.push(new Scenery("sonjaTree", 3600, 2500, 0, true));
                //scenicList.push(new Scenery("crilkPlant", 3600, 2500, 3.2, true));
                //ArtificialIntelligenceAccess.push(new Unit(3500, 2500, "BlackTroll", false, "Brufga"));
                //scenicList.push(new Scenery("overVines", 3600, 2500, 0, 4, 1));
                //scenicList.push(new Scenery("webVictim", 3600, 2500, 0, 3, 1));
                //scenicList.push(new Scenery("jungleStuff", 3600, 2500, 0.23, 2, 1));
                //scenicList.push(new Scenery("selvaTree", 3600, 2500, 0, 0));
                //ArtificialIntelligenceAccess.push(new Unit(2000, -240000, "Gulfrey", true, "Guld"));
                //ArtificialIntelligenceAccess.push(new Unit(5012, -240944, "Torper", true, "Shankstripes"));
                //ArtificialIntelligenceAccess.push(new Unit(1194, -240231, "Etyr", true, "Blackeye"));
                //scenicList.push(new Scenery("blilPlant", 2389 , -239760, 6.78, true));
                //scenicList.push(new Scenery("vinePatch", 3500, 2500, 0, 1));
                //ArtificialIntelligenceAccess.push(new Unit(3550, 2500, "Venandi", true, "hunter"));
                //ArtificialIntelligenceAccess.push(new Unit(3570, 2500, "EtyrVenandi", true, "scout"));
                //ArtificialIntelligenceAccess.push(new Unit(3570, 2500, "AraneaVenandi", true, "tank"));
                //ArtificialIntelligenceAccess.push(new Unit(3500, 2500, "Borea", true, "Ipskwich"));
                //ArtificialIntelligenceAccess.push(new Unit(3500, 2500, "Salisea", false, "Digit"));
                //ArtificialIntelligenceAccess.push(new Unit(3600, 2500, "Crenid", "massive", "Bulgg"));
                //ArtificialIntelligenceAccess.push(new Unit(3908, 2500, "Kigarii", true, "Apex"));
                //scenicList.push(new Scenery("matnaWeb", 3600, 2500, 0, 2.1));
                //ArtificialIntelligenceAccess.push(new Unit(3600, 2500, "Matna", false, "deathByter"));
                //ArtificialIntelligenceAccess.push(new Unit(3600, 2500, "Babosa", true, "Glubber", {patrolStops: 3, patrolLoop: true, route:[[3600, 2500], [3500, 2550], [3650, 2600]]}));
                //scenicList.push(new Scenery("pyromothWeb", 3700, 2500, 0, 1, true));
                //ArtificialIntelligenceAccess.push(new Unit(3700, 2500, "Pyromoth", true, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[3600, 2500], [3500, 2550], [3650, 2600]]}));

                scenicList.push(new Scenery("sonjaTree", -2456.78593620105, -248801.27862364124, 2.574108183118155, 0));

                //Animals
                ArtificialIntelligenceAccess.push(new Unit(-2701.542966220163, -245858.1033030152, "Torper", true, "Shankstripes"));

                ArtificialIntelligenceAccess.push(new Unit(1888.6496216028988, -242342.6411600595, "Kigarii", true, "Apex"));

                ArtificialIntelligenceAccess.push(new Unit(-1986.3322101698857, -239048.15965944892, "ZafBeetle", true, "Tzalit"));
                ArtificialIntelligenceAccess.push(new Unit(-2306.0071735889064, -238785.56241521638, "ZafBeetle", false, "Tzalit"));

                ArtificialIntelligenceAccess.push(new Unit(224.229675788752, -244603.08694509583, "ZafBeetle", false, "Tzalit"));

                ArtificialIntelligenceAccess.push(new Unit(4837.174124647745, -244294.43742840842, "ZafBeetle", false, "Tzalit"));

                ArtificialIntelligenceAccess.push(new Unit(361.8898504429123, -243717.50370834634, "Babosa", true, "Glubber", {patrolStops: 4, patrolLoop: true, route:[[493.3310901368377, -244084.52938908868], [974.6238089242177, -243990.00852774867], [866.1740983040546, -243624.65612768027], [361.8898504429123, -243717.50370834634]]}));

                scenicList.push(new Scenery("valumPlant", 971.4284363969192, -244098.48029564953, 9, 1));

                scenicList.push(new Scenery("valumPlant", -2025.496136794272, -246183.12328148994, 8, 1));

                scenicList.push(new Scenery("valumPlant", 3390.628544267893, -242964.31933951873, 3.1145, 1));

                scenicList.push(new Scenery("valumPlant", 5259.983763674923, -244403.4049940566, 4.1145, 1));

                scenicList.push(new Scenery("vinePatch", 4118.912740983204, -241740.55246108412, 1.2, 3.2));
                scenicList.push(new Scenery("vinePatch", 4369.528703000384, -241729.2183489983, 6.9, 2.4));

                scenicList.push(new Scenery("vinePatch", 4258.947670416234, -241757.3109800963, 0, 3.3));
                scenicList.push(new Scenery("vinePatch", 4374.930834056472, -241631.40937086873, 11, 3.1));
                scenicList.push(new Scenery("vinePatch", 4408.50341447103, -241813.3549501695, 1, 3.15));
                scenicList.push(new Scenery("vinePatch", 4015.5842028955703, -241755.71342704885, 4.5, 3.2));
                scenicList.push(new Scenery("vinePatch", 3955.148741529449, -241646.73379721347, 7, 3.4));
                scenicList.push(new Scenery("vinePatch", 3840.93940831602, -241747.6408760964, 8.1, 3.25));
                scenicList.push(new Scenery("vinePatch", 3710.7740142107086, -241747.35077592882, 9.6, 3.2));
                scenicList.push(new Scenery("vinePatch", 3789.5746949322042, -241599.208859603, 1.1, 3.5));
                scenicList.push(new Scenery("vinePatch", 4069.90019231637, -241616.65687350018, 5.5555, 3.37));

                ArtificialIntelligenceAccess.push(new Unit(723, -238917, "Gulfrey", true, "Guld"));

                ArtificialIntelligenceAccess.push(new Unit(5120.401016896999, -243629.25564790957, "ZafBeetle", false, "Tzalit"));

                ArtificialIntelligenceAccess.push(new Unit(-2224.5275917414156, -240563.0799279693, "Gulfrey", false, "Guld"));
                ArtificialIntelligenceAccess.push(new Unit(-2230.0395542507013, -240850.89572205293, "Gulfrey", false, "Guld"));
                ArtificialIntelligenceAccess.push(new Unit(-2704.5583475165017, -240422.87691745395, "Gulfrey", true, "Guld"));
                ArtificialIntelligenceAccess.push(new Unit(-2374.215591599104, -240218.94532102827, "Gulfrey", false, "Guld"));

                ArtificialIntelligenceAccess.push(new Unit(6122.265832915254, -244157.07240777736, "Gulfrey", true, "Guld"));
                ArtificialIntelligenceAccess.push(new Unit(6171.241639138863, -243954.63809955204, "Gulfrey", false, "Guld"));

                scenicList.push(new Scenery("decipulaBasePlant", 485.64321995948876, -240452.5744509864, 1.2, "massive"));
                ArtificialIntelligenceAccess.push(new Unit(3613, -240174, "Gorgon", false, "Gra"));
                scenicList.push(new Scenery("matnaWeb", 2428.8820710318187, -239195.96170697408, 0.16, 2.4));
                scenicList.push(new Scenery("matnaWeb", 2641, -239213, 0, 2.1));
                scenicList.push(new Scenery("matnaWeb", 2596.485296878123, -239321.8511173763, 2, 2));
                scenicList.push(new Scenery("matnaWeb", 2512.4565346955665, -239252.2712367844, 25, 1.8));
                scenicList.push(new Scenery("matnaWeb", 2468, -239323, 1, 1.9));
                scenicList.push(new Scenery("matnaWeb", 2533.715428174531, -239308.84623092462, 2, 2));
                scenicList.push(new Scenery("matnaWeb", 2516.5131000689303, -239104.6219665395, 1.4, 3));
                scenicList.push(new Scenery("matnaWeb", 2552.4885169199424, -239188.5678700674, 6.8, 1.5));
                scenicList.push(new Scenery("matnaWeb", 2438.7424398070857, -239282.82710745448, 5, 1.5));
                scenicList.push(new Scenery("matnaWeb", 2743.882997029583, -239326.8355721349, 4.2, 3.2));
                scenicList.push(new Scenery("matnaWeb", 2648.833704799415, -239390.36244164268, 3, 1.7));
                scenicList.push(new Scenery("matnaWeb", 2761.8485040445357, -239454.29495895532, 5.5, 2.3));
                scenicList.push(new Scenery("matnaWeb", 2757.47689604678, -239558.80489901893, 0, 1.6));
                scenicList.push(new Scenery("matnaWeb", 2557.9306910888286, -239004.45977414536, 2.57, 2.2));
                ArtificialIntelligenceAccess.push(new Unit(2641, -239213, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(2500, -239248, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(2538, -239273, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(2457, -239322, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(2534, -239312, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(2425, -239202, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(2643, -239386, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(2491, -239045, "Matna", true, "deathByter"));

                scenicList.push(new Scenery("matnaWeb", 1733.139970267189, -243701.86731566204, 2, 2.05));
                scenicList.push(new Scenery("matnaWeb", 1779.7196267953334, -243812.11840635465, 3, 1.75));
                scenicList.push(new Scenery("matnaWeb", 1676.3182323429482, -243841.03246523344, 4, 1.9));
                scenicList.push(new Scenery("matnaWeb", 1711.0245236719834, -243777.80949413104, 8, 2.4));
                scenicList.push(new Scenery("matnaWeb", 1754.944476076132, -243866.0054734262, 1, 1.8));
                scenicList.push(new Scenery("matnaWeb", 1642.0856267908248, -243659.68631489633, 0.1, 2));
                ArtificialIntelligenceAccess.push(new Unit(1764.510897838429, -243814.81194049114, "Matna", true, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(1744.1268700722678, -243746.359146024, "Matna", true, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(1704.7683599171646, -243789.50241960527, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(1734.1076090271786, -243873.97932920814, "Matna", false, "deathByter"));

                scenicList.push(new Scenery("matnaWeb", 5265.153514763114, -242834.64549078967, 14, 2.2));
                scenicList.push(new Scenery("matnaWeb", 5437.887594299024, -242851.85670377366, 10, 2));
                scenicList.push(new Scenery("matnaWeb", 15467.871736774355, -242992.5855018553, 1, 1.95));
                scenicList.push(new Scenery("matnaWeb", 5294.151710244983, -243114.38619152355, 0.5, 2.3));
                scenicList.push(new Scenery("matnaWeb", 5157.572293766633, -243012.89992280834, 9.7, 2.25));
                scenicList.push(new Scenery("matnaWeb", 5160.16487122213, -242880.83501056608, 2.75, 2.35));

                scenicList.push(new Scenery("matnaWeb", 5263.950305668896, -243012.13760837255, 11, 2));
                scenicList.push(new Scenery("matnaWeb", 5234.770770733334, -242943.5601836496, 3, 1.95));
                scenicList.push(new Scenery("matnaWeb", 5348.509840269273, -242859.81811449726, 4.54, 2.3));
                scenicList.push(new Scenery("matnaWeb", 5430.273954398269, -242945.0673261498, 10.3, 2.25));
                scenicList.push(new Scenery("matnaWeb", 5386.001477337873, -243017.61116330072, -4.48, 2.35));
                scenicList.push(new Scenery("matnaWeb", 5279.402536128675, -243048.3349555243, 11.2, 2.25));

                ArtificialIntelligenceAccess.push(new Unit(5258.864808862059, -243005.63059800607, "Matna", true, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(5205.099668091057, -242934.84765971664, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(5255.028671870866, -242863.7121397698, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(5403.143477990687, -242886.88305560712, "Matna", true, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(5435.28664549205, -243003.6342988933, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(5324.4607114099435, -243090.84379356133, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(5335.038621737645, -243000.54924547198, "Matna", false, "deathByter"));

                ArtificialIntelligenceAccess.push(new Unit(3502.7875551930447, -242854.8910955257, "BlackTroll", false, "Brufga"));
                ArtificialIntelligenceAccess.push(new Unit(4025.506433483409, -242825.3965412578, "BlackTroll", true, "Brufga"));
                ArtificialIntelligenceAccess.push(new Unit(3300.244139278479, -241982.95355700157, "BlackTroll", false, "Brufga"));

                scenicList.push(new Scenery("araneaDen", 3826.5477806501094, -246756.12780209514, 6, false, true));

                ArtificialIntelligenceAccess.push(new Unit(3026, -238984, "Lizard", true, "Lib"));
                ArtificialIntelligenceAccess.push(new Unit(-985.9161924139584, -240052.76827072116, "Lizard", false, "Lib"));
                ArtificialIntelligenceAccess.push(new Unit(2547.010371220929, -240495.06988889643, "PetraBeetle", true, "Iga"));
                ArtificialIntelligenceAccess.push(new Unit(1727, -240860, "PoisonDartFrog", false, "Iga"));
                ArtificialIntelligenceAccess.push(new Unit(-162, -239220, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(1255, -238864, "Zancudo", true, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(-638, -241387, "PetraBeetle", false, "Iga"));
                ArtificialIntelligenceAccess.push(new Unit(2948.4683475615493, -241446.2458594295, "PetraBeetle", true, "Iga"));
                ArtificialIntelligenceAccess.push(new Unit(-2308.967270092436, -239789.538683309, "PetraBeetle", true, "Iga"));

                ArtificialIntelligenceAccess.push(new Unit(1772.1262013701078, -241480.3109326768, "PetraBeetle", false, "Iga"));

                ArtificialIntelligenceAccess.push(new Unit(1755.1374712463244, -241822.93491774224, "PoisonDartFrog", true, "Iga"));

                ArtificialIntelligenceAccess.push(new Unit(3943.848345780836, -247539.13188217962, "Zancudo", false, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(3134.0087745909127, -247945.03324801143, "Zancudo", false, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(416.1834723607373, -241352.2196912796, "Zancudo", false, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(-384.8373761236428, -240796.68230211906, "Etyr", true, "Blackeye"));
                ArtificialIntelligenceAccess.push(new Unit(-589.3495063734284, -240775.48875206447, "Etyr", false, "Blackeye"));
                ArtificialIntelligenceAccess.push(new Unit(-1012.3875408130549, -240772.5779532194, "Etyr", false, "Blackeye"));

                ArtificialIntelligenceAccess.push(new Unit(-1846.9951373837232, -244855.41116514278, "Etyr", true, "poop"));
                ArtificialIntelligenceAccess.push(new Unit(-2107.928124825418, -245105.656963485, "Etyr", false, "poop"));
                ArtificialIntelligenceAccess.push(new Unit(-1873.991342947854, -245206.25233043605, "Etyr", false, "poop"));
                ArtificialIntelligenceAccess.push(new Unit(-1575.6826746224524, -245116.7472505272, "Etyr", true, "poop"));
                ArtificialIntelligenceAccess.push(new Unit(-1668.3820383134612, -245393.0306556481, "Etyr", false, "poop"));

                ArtificialIntelligenceAccess.push(new Unit(6165.102304191104, -244566.84256187215, "Etyr", false, "poop"));
                ArtificialIntelligenceAccess.push(new Unit(6484.911675640824, -244426.59753911346, "Etyr", false, "poop"));
                ArtificialIntelligenceAccess.push(new Unit(6771.9587610103745, -244530.67620787537, "Etyr", false, "poop"));
                ArtificialIntelligenceAccess.push(new Unit(6412.505139942507, -244761.216677198, "Etyr", false, "poop"));
                ArtificialIntelligenceAccess.push(new Unit(6198.873798119403, -245060.6393265651, "Etyr", true, "poop"));
                ArtificialIntelligenceAccess.push(new Unit(5746.677407159321, -245128.05561910843, "Etyr", false, "poop"));

                ArtificialIntelligenceAccess.push(new Unit(1474.8686650178968, -246078.49747376118, "Babosa", false, "Glubber", {patrolStops: 5, patrolLoop: true, route:[[1459.5013054630888, -246451.7866154296], [1027.1605832950631, -246511.64659574907], [937.6755136277003, -246370.20276352883], [983.7838020997377, -246082.44762056053], [1474.8686650178968, -246078.49747376118]]}));

                ArtificialIntelligenceAccess.push(new Unit(-608.3537947092788, -244630.919666402, "Zancudo", false, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(1204.2613832398104, -245172.61770782014, "Zancudo", false, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(-1736.0582039346468, -244367.9580484865, "Zancudo", false, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(2745.2080450447, -243115.6838265531, "Zancudo", false, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(4948.831571340287, -245334.32924613977, "Zancudo", false, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(1326.5732822485265, -242945.32281432793, "Zancudo", false, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(4467.774919036949, -242429.64277466357, "Zancudo", false, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(2598.8807456798013, -244216.91517310613, "Zancudo", false, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(4114.112462205032, -243364.84397429784, "Zancudo", true, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(1641.9232111066099, -244456.055540826, "PoisonDartFrog", false, "Iga"));

                ArtificialIntelligenceAccess.push(new Unit(2959.869604039108, -244625.67656328378, "PoisonDartFrog", true, "Iga"));

                ArtificialIntelligenceAccess.push(new Unit(483.869565174845, -244974.59123597702, "Cruorcca", "massive", "Cruor"));

                ArtificialIntelligenceAccess.push(new Unit(-58.61041417592261, -245297.53708851297, "Zancudo", true, "proboscis"));

                scenicList.push(new Scenery("decipulaBasePlant", -326.0166892520984, -245480.51021128724, -1.1, true));

                scenicList.push(new Scenery("decipulaBasePlant", 3440.401080249614, -244181.14699437658, 0.5, true));

                ArtificialIntelligenceAccess.push(new Unit(-366.28813773746066, -246103.19182478715, "PetraBeetle", false, "Iga"));

                ArtificialIntelligenceAccess.push(new Unit(-371.80033725548105, -244759.13677314817, "PetraBeetle", true, "Iga"));

                ArtificialIntelligenceAccess.push(new Unit(-78.50762966859162, -245946.7156401473, "Lizard", false, "docile"));

                scenicList.push(new Scenery("bahabPlant", 146.47863653523274, -245963.45390874983, 8, true));

                scenicList.push(new Scenery("bahabPlant", 88.30576503957869, -246118.1329761419, 2.2, true));
                scenicList.push(new Scenery("bahabPlant", 507.6617801479168, -246518.99545781812, 3.9, true));

                scenicList.push(new Scenery("bahabPlant", 14.487440114974543, -247892.43183491525, -5.63, true));

                scenicList.push(new Scenery("bahabPlant", 4909.339541664249, -242538.30185691811, 8.5, true));

                scenicList.push(new Scenery("araneaDen", 118.2473684902781, -246473.70111611462, -20, true, true));

                scenicList.push(new Scenery("araneaDen", 3273.368739334276, -243878.22515547532, -2.24, false, false)); //no spider

                scenicList.push(new Scenery("bahabPlant", -1800.501688873129, -240399.71213120717, 10.26, true));

                scenicList.push(new Scenery("bahabPlant", 3610.075801300234, -243495.81808164864, 14.25, true));

                scenicList.push(new Scenery("bahabPlant", 2963.391456535867, -245969.15350088495, 3, true));

                ArtificialIntelligenceAccess.push(new Unit(5753.053873591727, -239054.53550365265, "Cruorcca", false, "Cruor"));


                ArtificialIntelligenceAccess.push(new Unit(-1355.5226248321576, -241711.2464268875, "Zancudo", false, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(-1454.925970996786, -242066.53000595584, "Zancudo", false, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(-616.4568890673052, -246356.7154078495, "Cruorcca", true, "Cruor"));
                ArtificialIntelligenceAccess.push(new Unit(-716.860621501376, -246416.57575510704, "Cruorcca", false, "Cruor"));
                ArtificialIntelligenceAccess.push(new Unit(-890.560393625148, -246190.73560639576, "Cruorcca", true, "Cruor"));

                ArtificialIntelligenceAccess.push(new Unit(-461.0344946295871, -246027.3962194965, "PetraBeetle", true, "Iga"));

                scenicList.push(new Scenery("valumPlant", -1213.657136278171, -246402.09345634351, 0, 1));

                ArtificialIntelligenceAccess.push(new Unit(754.0021674802783, -241586.42576424105, "Gorgon", false, "Gra"));

                ArtificialIntelligenceAccess.push(new Unit(6130.083306380039, -240484.84310828746, "Gorgon", true, "Graga"));

                ArtificialIntelligenceAccess.push(new Unit(453.5587398957185, -241986.08539707685, "Zancudo", true, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(480.3946111451097, -242288.7024032443, "Zancudo", false, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(4894.4571580465, -240371.19795566858, "Zancudo", false, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(5935.077766463176, -246381.1068626814, "Zancudo", true, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(2261.2031023021395, -247987.51139406243, "Zancudo", true, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(-621.4578416843605, -242222.6663007408, "Boa", true, "constricto"));

                ArtificialIntelligenceAccess.push(new Unit(5002.518638038544, -247264.54737765098, "Boa", false, "constricto"));

                ArtificialIntelligenceAccess.push(new Unit(-1601.3167050489865, -242960.70234213638, "Crenid", "massive", "Bulgg", {patrolStops: 4, patrolLoop: true, route:[[-2348.150317250757, -242640.9404797037], [-2633.9104560150745, -243504.1377813835], [-1812.1588780601687, -243534.68003095812], [-1601.3167050489865, -242960.70234213638]]}));
                ArtificialIntelligenceAccess.push(new Unit(-2118.369340708121, -243396.67524898695, "Crenid", true, "bulggob"));

                ArtificialIntelligenceAccess.push(new Unit(-1734.7833830734955, -247002.36313512595, "ZafBeetle", false, "Tzalit"));

                ArtificialIntelligenceAccess.push(new Unit(-759.8924322144177, -247786.89577948616, "Kigarii", false, "batter"));
                ArtificialIntelligenceAccess.push(new Unit(2616.7560880016235, -247091.3863405396, "Kigarii", false, "budder"));

                scenicList.push(new Scenery("pyromothWeb", 3693.380471304596, -244919.83519692242, 2, 2, true));
                scenicList.push(new Scenery("pyromothWeb", 3733.7532052408933, -244931.34914915895, 0, 2.5, false));
                ArtificialIntelligenceAccess.push(new Unit(3693.380471304596, -244919.83519692242, "Pyromoth", false, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[2708.5760149387365, -245338.49080831103], [3489.6885731456105, -244501.76449667182], [3693.380471304596, -244919.83519692242]]}));
                ArtificialIntelligenceAccess.push(new Unit(3693.380471304596, -244919.83519692242, "Pyromoth", false, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[3231.9505384576096, -244247.44146962088], [3507.4682778610254, -244271.97939413332], [3693.380471304596, -244919.83519692242]]}));
                scenicList.push(new Scenery("pyromothWeb", 3914.25025171928, -244974.52733858736, 1.3, 4, true));
                scenicList.push(new Scenery("pyromothWeb", 3848.625503218877, -245022.71653676726, 5, 2.5, false));
                scenicList.push(new Scenery("pyromothWeb", 3852.6458503024433, -244969.7444963315, 9, 2, false));
                scenicList.push(new Scenery("pyromothWeb", 3843.50483059997, -244912.94545172522, 13.89, 2.6, true));
                ArtificialIntelligenceAccess.push(new Unit(3868.2378372750286, -244973.60856161983, "Pyromoth", true, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[4194.7049936265585, -243978.58775834437], [3032.171917721282, -244136.0402525356], [3868.2378372750286, -244973.60856161983]]}));

                //Scenery
                scenicList.push(new Scenery("overVines", -1232.2009440245467, -239919.25623572944, -0.4, 4, 2.4));
                scenicList.push(new Scenery("overVines", 442.68248383835265, -246458.89964775322, 2.8, 2, 1.1));
                scenicList.push(new Scenery("overVines", 28.695154724657137, -246462.64475974796, -2.8 + 1/2 * Math.PI, 3, 3.6));
                scenicList.push(new Scenery("overVines", -702.4528057696499, -246293.13616576235, 2.3 + Math.PI, 2, 0.59));
                scenicList.push(new Scenery("overVines", -1950.5453639734114, -240427.3172697648, 2.6, 1, 2.2));
                scenicList.push(new Scenery("overVines", -1857.394352689028, -240209.93659257033, 4.3, 1, 1.6));
                scenicList.push(new Scenery("overVines", -1245.3142302566098, -247126.5811549231, 3.8 + 1/2 * Math.PI, 2, 1.3));
                scenicList.push(new Scenery("overVines", -376.14812830589125, -247795.3992537127, 4 + 1/2 * Math.PI, 1, 2.3));
                scenicList.push(new Scenery("overVines", 3119.2755228302726, -245117.25885910573, 2.5 * Math.PI, 2, 2.2));
                scenicList.push(new Scenery("overVines", 3119.2755228302726, -244960.25885910573, -1, 4, 3.5));
                scenicList.push(new Scenery("overVines", 3390.098498769934, -244725.56880440938, -3, 3, 3.7));
                scenicList.push(new Scenery("overVines", 4608.099696743946, -246608.6943991763, -2.76, 1, 1.4));
                scenicList.push(new Scenery("overVines", 4389.143910552105, -246668.20988485732, -2.76 + 1/2 * Math.PI, 1, 1.2));
                scenicList.push(new Scenery("overVines", 4844.398902672602, -240097.04462310983, -2.55 + 1/2 * Math.PI, 1, 1.14));
                scenicList.push(new Scenery("overVines", 5992.067607134684, -238964.46479396315, 3.55, 2, 0.85));
                scenicList.push(new Scenery("overVines", 5998.067607134684, -238962.45479396382, 3.6 + Math.PI, 2, 1.75));
                scenicList.push(new Scenery("overVines", 6430.447222260217, -239767.81738261197, -2.55 + 1/2 * Math.PI, 1, 1.62));

                //Plants
                scenicList.push(new Scenery("sonjaTree", 5802.338804284937, -240763.69844355193, 15.34, 0));
                scenicList.push(new Scenery("sonjaTree", 5932.462697390982, -243056.57973383623, 1.9, 0));
                scenicList.push(new Scenery("sonjaTree", 4628.3338663629565, -242910.0054822778, 5.2, 0));
                scenicList.push(new Scenery("sonjaTree", 1834.7048864407086, -243734.3655863148, 18.47, 0));
                scenicList.push(new Scenery("sonjaTree", 703.8912499471572, -243864.94025258106, 0.66, 0));
                scenicList.push(new Scenery("sonjaTree", 604.1571393367584, -244246.77754110345, 20, 0));
                scenicList.push(new Scenery("sonjaTree", 265.5838313359285, -240274.07179468567, 1, 0));
                scenicList.push(new Scenery("sonjaTree", 1643.1097050424617, -241842.96783745894, 0, 0));
                scenicList.push(new Scenery("sonjaTree", 3513.8925297545206, -242573.2127253556, 3, 0));
                scenicList.push(new Scenery("sonjaTree", 4236.550084153989, -243854.06363121638, 4.4, 0));
                scenicList.push(new Scenery("sonjaTree", 5121.159619872858, -244851.74103157478, 7.9, 0));
                scenicList.push(new Scenery("sonjaTree", 3886.925202196208, -245890.56400321916, 1.2, 0));
                scenicList.push(new Scenery("sonjaTree", 1104.8090943721538, -246793.10239318456, 1.45, 0));
                scenicList.push(new Scenery("sonjaTree", 682.614314662967, -248008.46330477277, 9, 0));
                scenicList.push(new Scenery("sonjaTree", 3043.568384847559, -247417.1758426731, 6.64, 0));

                scenicList.push(new Scenery("selvaTree", 6456, -238578, 0.38, 0));
                scenicList.push(new Scenery("selvaTree", 5285.7337473321495, -242131.0147369607, 2.38, 0));
                scenicList.push(new Scenery("selvaTree", 5639.1670486389785, -241282.22204374208, 5.38, 0));
                scenicList.push(new Scenery("selvaTree", 6251.096760490781, -240587.52638151028, 10.38, 0));
                scenicList.push(new Scenery("selvaTree", 5672.28761531128, -239961.42129432445, 1.38, 0));
                scenicList.push(new Scenery("selvaTree", 6127.054852197596, -239481.1128481666, 0.25, 0));
                scenicList.push(new Scenery("selvaTree", 5687.632046935739, -238507.84678797744, 3, 0));
                scenicList.push(new Scenery("selvaTree", 5282.9813701041385, -239101.70421127227, 6.5, 0));
                scenicList.push(new Scenery("selvaTree", 6689.905495504767, -240157.0777269516, 7.112, 0));
                scenicList.push(new Scenery("selvaTree", 6822.499115974482, -241846.48509209338, 4.5, 0));
                scenicList.push(new Scenery("selvaTree", 6509.397760320005, -243045.90491297498, 9.2, 0));
                scenicList.push(new Scenery("selvaTree", 5794.569111948266, -243606.48747543432, 1.8, 0));
                scenicList.push(new Scenery("selvaTree", 4075.6982166349076, -243292.91416034597, 11.2, 0));
                scenicList.push(new Scenery("selvaTree", 2891.754625303147, -242213.10071268727, 0.39, 0));
                scenicList.push(new Scenery("selvaTree", 3020.5349845464107, -240712.9563343046, 0.34, 0));
                scenicList.push(new Scenery("selvaTree", 1979.2129789627868, -239547.3284225103, 0, 0));
                scenicList.push(new Scenery("selvaTree", 16.905844863973503, -239223.29097119722, 1, 0));
                scenicList.push(new Scenery("selvaTree", 1001.1523946130909, -238607.04309654268, 2, 0));
                scenicList.push(new Scenery("selvaTree", 4383.912791172222, -240826.066333647, 3.47, 0));
                scenicList.push(new Scenery("selvaTree", 3632.308221233352, -240044.90954222184, 3.8, 0));
                scenicList.push(new Scenery("selvaTree", 4127.987549152959, -239194.4666602631, 4.4444, 0));
                scenicList.push(new Scenery("selvaTree", 2580.993032265319, -238901.6326995298, 5.115, 0));
                scenicList.push(new Scenery("selvaTree", 834.9877291606588, -240179.9422305032, 7.621, 0));
                scenicList.push(new Scenery("selvaTree", -340.33512995840766, -240722.9305987402, 10, 0));
                scenicList.push(new Scenery("selvaTree", -2531.0391560857474, -240317.51649775237, 4, 0));
                scenicList.push(new Scenery("selvaTree", -2375.632782131061, -238617.4969161959, 5, 0));
                scenicList.push(new Scenery("selvaTree", -2222.5461132141963, -246630.2678241724, 8, 0));
                scenicList.push(new Scenery("selvaTree", 1082.2655522230637, -241466.2472777203, 7.5, 0));
                scenicList.push(new Scenery("selvaTree", 2350.62466049103, -241475.81513439413, 6.3, 0));
                scenicList.push(new Scenery("selvaTree", 4198.765804068302, -242376.1314146828, 4.6, 0));
                scenicList.push(new Scenery("selvaTree", 4819.315081964422, -244065.55889126693, 2.81, 0));
                scenicList.push(new Scenery("selvaTree", 3343.2734654036017, -245432.78980159728, 1.23, 0));
                scenicList.push(new Scenery("selvaTree", 1532.149357124841, -245599.34797576012, 3.45, 0));
                scenicList.push(new Scenery("selvaTree", -12.853386513940821, -245096.05378252122, 0.9, 0));
                scenicList.push(new Scenery("selvaTree", -929.2189276625737, -246648.54793274103, 0.8, 0));
                scenicList.push(new Scenery("selvaTree", -14.17310801951131, -248169.42741023542, 0.38, 0));
                scenicList.push(new Scenery("selvaTree", 4720.280197602496, -247644.48583324312, 0.37, 0));
                scenicList.push(new Scenery("selvaTree", 496.5417140164455, -240873.9981759643, 0, 0));
                scenicList.push(new Scenery("selvaTree", -301.64947871242316, -241632.19826234225, 2, 0));
                scenicList.push(new Scenery("selvaTree", 548.2621020602651, -242395.25588283688, 5, 0));
                scenicList.push(new Scenery("selvaTree", 1571.26211643719, -242574.4046303734, 6, 0));
                scenicList.push(new Scenery("selvaTree", 2859.1862763713652, -242997.37562752527, 9, 0));
                scenicList.push(new Scenery("selvaTree", 6405.998430223518, -244973.84248527046, 12, 0));
                scenicList.push(new Scenery("selvaTree", 4986.7636096886545, -246791.2699525836, 12.45, 0));
                scenicList.push(new Scenery("selvaTree", 2772.03695199235, -246527.79620419204, 3.12, 0));
                scenicList.push(new Scenery("selvaTree", 1349.2937988197102, -248043.62475449298, 4.08, 0));
                scenicList.push(new Scenery("selvaTree", 159.9171830618803, -247011.34813553034, 5.11, 0));
                scenicList.push(new Scenery("selvaTree", -311.8839287289242, -245953.94293292792, 7.7, 0));
                scenicList.push(new Scenery("selvaTree", -1772.073357443293, -245275.657164538, 8.8, 0));
                scenicList.push(new Scenery("selvaTree", -2312.607074824722, -243317.19110557012, 11.11, 0));
                scenicList.push(new Scenery("selvaTree", -790.973291627211, -247595.14250034437, 12.12, 0));
                scenicList.push(new Scenery("selvaTree", -2806.209043696943, -247573.01113856363, 4, 0));
                scenicList.push(new Scenery("selvaTree", -2621.7156154234267, -245687.57827824142, 5, 0));
                scenicList.push(new Scenery("selvaTree", -1477.276324957529, -245992.50154016947, 0, 0));
                scenicList.push(new Scenery("selvaTree", -859.3556505924802, -244473.85590628439, 6, 0));
                scenicList.push(new Scenery("selvaTree", 1338.679611609283, -243605.7574058495, 5.328, 0));
                scenicList.push(new Scenery("selvaTree", 3820.676680159974, -244290.3893929381, 9.24, 0));
                scenicList.push(new Scenery("selvaTree", 6709.79091237593, -244408.6126286546, 5, 0));
                scenicList.push(new Scenery("selvaTree", 6200.7743255507, -246322.54257297606, 5, 0));
                scenicList.push(new Scenery("selvaTree", 4621.544364409696, -238546.04183270253, 5, 0));
                scenicList.push(new Scenery("selvaTree", -1607.7395778002597, -239817.2542038627, 6, 0));
                scenicList.push(new Scenery("selvaTree", -1435.136628894679, -241861.64049213254, 1, 0));
                scenicList.push(new Scenery("selvaTree", 1719.450369914336, -240723.65060469595, 0.12, 0));
                scenicList.push(new Scenery("selvaTree", 2190.0020348047005, -243414.1413170709, 14, 0));
                scenicList.push(new Scenery("selvaTree", 3277.7836155109358, -243694.4829159613, 11.56, 0));
                scenicList.push(new Scenery("selvaTree", 4479.28416167602, -245087.61800240714, 5.611, 0));
                scenicList.push(new Scenery("selvaTree", 3713.1760775417993, -246811.96044488635, 6.1516, 0));
                scenicList.push(new Scenery("selvaTree", 6340.251648868997, -247506.5788508865, 8.234, 0));
                scenicList.push(new Scenery("selvaTree", 5618.187260497818, -244521.67687374435, 1.2345, 0));
                scenicList.push(new Scenery("selvaTree", 4445.452822093404, -241705.13404711435, 6.7891011, 0));
                scenicList.push(new Scenery("selvaTree", 3710.911174049878, -241624.41802194578, 2, 0));
                scenicList.push(new Scenery("selvaTree", 513.9925070774623, -241738.15991459895, 7.75, 0));
                scenicList.push(new Scenery("selvaTree", 362.8104101898042, -241467.85540237074, 17.75, 0));
                scenicList.push(new Scenery("selvaTree", -364.50349918089574, -240075.3645833058, 18.65, 0));
                scenicList.push(new Scenery("selvaTree", 1154.9641762946176, -239511.72961036672, 20.19, 0));
                scenicList.push(new Scenery("selvaTree", 1847.0919853353873, -238827.94306016766, 20.04, 0));
                scenicList.push(new Scenery("selvaTree", 3609.163662697182, -238684.98384033298, 1, 0));
                scenicList.push(new Scenery("selvaTree", 2752.6628220848634, -239617.81567987523, 0, 0));
                scenicList.push(new Scenery("selvaTree", 5317.987095558602, -242940.51506757847, 7.95, 0));
                scenicList.push(new Scenery("selvaTree", 6190.145191821316, -242301.50564924965, 0.35, 0));
                scenicList.push(new Scenery("selvaTree", 3382.244826728069, -246162.03936654262, 5.553, 0));
                scenicList.push(new Scenery("selvaTree", 4391.8700587779085, -247069.6896482014, 3.53, 0));
                scenicList.push(new Scenery("selvaTree", 3811.755233551301, -247661.63401348126, 7.68, 0));
                scenicList.push(new Scenery("selvaTree", 4194.025451212907, -248270.51235209382, 8.67, 0));
                scenicList.push(new Scenery("selvaTree", 5825.818948536411, -248092.84296576318, 6.87, 0));
                scenicList.push(new Scenery("selvaTree", 5517.9647447045745, -247355.35267588682, 2.1, 0));
                scenicList.push(new Scenery("selvaTree", 6804.664603363222, -246899.51965900866, 3.2, 0));
                scenicList.push(new Scenery("selvaTree", 5707.844189013861, -245359.35473131938, 5.3, 0));
                scenicList.push(new Scenery("selvaTree", 4977.104122026086, -245739.86426634854, 0, 0));
                scenicList.push(new Scenery("selvaTree", 4219.329181282226, -246348.2796595728, 0.36, 0));
                scenicList.push(new Scenery("selvaTree", 5523.507749227142, -246343.09297169498, 5.77, 0));
                scenicList.push(new Scenery("selvaTree", 6655.739331802637, -245890.36666388914, 10, 0));
                scenicList.push(new Scenery("selvaTree", 5736.0893216942695, -245402.44114301255, 13, 0));
                scenicList.push(new Scenery("selvaTree", 3778.6594897286213, -244984.666642242, 15.5, 0));
                scenicList.push(new Scenery("selvaTree", 3984.771900049937, -245438.0730094797, 11.38, 0));
                scenicList.push(new Scenery("selvaTree", 2456.006932861691, -247232.50100017362, 2.38, 0));
                scenicList.push(new Scenery("selvaTree", 1696.78814238276, -247014.2366869056, 4.38, 0));
                scenicList.push(new Scenery("selvaTree", 1918.901699082147, -246205.52753925687, 6.38, 0));
                scenicList.push(new Scenery("selvaTree", 585.2520583868948, -245855.38097379054, 1, 0));
                scenicList.push(new Scenery("selvaTree", 915.9106521366455, -244770.9174283337, 8.38, 0));
                scenicList.push(new Scenery("selvaTree", 190.25957878765638, -243357.72394548383, 3.6, 0));
                scenicList.push(new Scenery("selvaTree", -956.8170881053126, -242652.05044110955, 7.1153, 0));
                scenicList.push(new Scenery("selvaTree", -2253.8312954571948, -241531.5084733122, 9.1187, 0));
                scenicList.push(new Scenery("selvaTree", -2863.1139273079693, -242413.35456492705, 4.352523, 0));
                scenicList.push(new Scenery("selvaTree", -2677.4792207790156, -244088.24827687975, 8.923469, 0));
                scenicList.push(new Scenery("selvaTree", -2625.6782685361627, -244910.1774952185, 8.67234, 0));
                scenicList.push(new Scenery("selvaTree", -2924.7818779664885, -246845.01589868555, 1.24, 0));
                scenicList.push(new Scenery("selvaTree", -1808.0757082211057, -247490.81468709942, 2.34, 0));
                scenicList.push(new Scenery("selvaTree", 2342.274877637182, -248183.47576047684, 4.591, 0));
                scenicList.push(new Scenery("selvaTree", 3144.8831675220435, -248073.05052506196, 0.6757, 0));
                scenicList.push(new Scenery("selvaTree", 1871.5098412583213, -247649.5939742833, 1, 0));
                scenicList.push(new Scenery("selvaTree", 2229.171853544727, -246710.74920642783, 2, 0));
                scenicList.push(new Scenery("selvaTree", 2496.989911431438, -245866.4772063263, 1.23, 0));
                scenicList.push(new Scenery("selvaTree", 2471.196741172797, -245168.46782505477, 3.345, 0));
                scenicList.push(new Scenery("selvaTree", 1691.6542462826915, -244781.90641457014, 4.45, 0));
                scenicList.push(new Scenery("selvaTree", 2498.1726625143883, -243958.19438320186, 5.6, 0));
                scenicList.push(new Scenery("selvaTree", 903.116351607017, -243013.45390727234, 9.1012, 0));
                scenicList.push(new Scenery("selvaTree", -294.8447844327525, -242817.22058449572, 14.14, 0));
                scenicList.push(new Scenery("selvaTree", -901.9112855105662, -243608.03734120153, 16.88, 0));
                scenicList.push(new Scenery("selvaTree", -218.4703120014234, -244126.0548650673, 2.13, 0));
                scenicList.push(new Scenery("selvaTree", -1767.7533496705148, -244180.41714561015, 3.14, 0));
                scenicList.push(new Scenery("selvaTree", -2003.2864012911693, -244701.5522684866, 1.81, 0));
                scenicList.push(new Scenery("selvaTree", -836.0157752728684, -245164.0832514188, 6.4, 0));
                scenicList.push(new Scenery("selvaTree", -1095.837109391663, -238770.385976248, 1, 0));
                scenicList.push(new Scenery("selvaTree", -513.943089987409, -239497.24675195228, 0.11, 0));
                scenicList.push(new Scenery("selvaTree", -631.8808599704063, -239184.95928489495, 6, 0));
                scenicList.push(new Scenery("selvaTree", -1029.0127492166332, -239513.0153414186, 5.1, 0));
                scenicList.push(new Scenery("selvaTree", -953.4228835367135, -240279.73607356867, 6, 0));
                scenicList.push(new Scenery("selvaTree", -1484.0628603318098, -240632.4664907059, 5.9, 0));
                scenicList.push(new Scenery("selvaTree", -1136.1206320547199, -241331.52633024848, 2.45, 0));
                scenicList.push(new Scenery("selvaTree", -2353.0132799549724, -240960.573803547, 8, 0));
                scenicList.push(new Scenery("selvaTree", -2812.433282926892, -239608.21262043435, 8.9, 0));
                scenicList.push(new Scenery("selvaTree", -2300.019910465406, -239616.0759585277, 8.8, 0));
                scenicList.push(new Scenery("selvaTree", -2997.102997645877, -239068.50927834702, 8.76, 0));
                scenicList.push(new Scenery("selvaTree", -2957.990835461984, -238550.7498541408, 0, 0));
                scenicList.push(new Scenery("selvaTree", -2869.9900527137156, -241336.72894486817, 0.5, 0));
                scenicList.push(new Scenery("selvaTree", -2023.6972896741252, -242200.42456114184, 4.9, 0));
                scenicList.push(new Scenery("selvaTree", -1481.513064274133, -243191.10371818222, 6.38, 0));
                scenicList.push(new Scenery("selvaTree", -737.0582826565646, -242083.6380271347, 7.38, 0));
                scenicList.push(new Scenery("selvaTree", -37.07430092217156, -242223.12585688048, 10, 0));
                scenicList.push(new Scenery("selvaTree", 2315.866789677687, -242478.1332270324, 5, 0));
                scenicList.push(new Scenery("selvaTree", 1635.5289444553694, -244193.62643802853, 2, 0));
                scenicList.push(new Scenery("selvaTree", 2859.8178456615724, -244512.4803130248, 1.5, 0));
                scenicList.push(new Scenery("selvaTree", 5157.8436203160745, -248172.52417872986, 2.4, 0));
                scenicList.push(new Scenery("selvaTree", 6765.422213264215, -248214.792477134, 11.7, 0));
                scenicList.push(new Scenery("selvaTree", 6632.054691606536, -243677.52975788052, 8.1, 0));
                scenicList.push(new Scenery("selvaTree", 6935.149721349768, -242557.2884320633, 2.5, 0));
                scenicList.push(new Scenery("selvaTree", 6526.089965662541, -241194.6368579918, 3.85, 0));
                scenicList.push(new Scenery("selvaTree", 6711.723527318879, -239174.41360222807, 9, 0));
                scenicList.push(new Scenery("selvaTree", 5023.193112053758, -241392.58243667398, 0, 0));
                scenicList.push(new Scenery("selvaTree", 5192.021855731398, -240777.51489964078, 15, 0));
                scenicList.push(new Scenery("selvaTree", 5102.529883070127, -240374.44389658392, 11.6667, 0));
                scenicList.push(new Scenery("selvaTree", 4376.200294507602, -240142.09049503895, 9.24, 0));
                scenicList.push(new Scenery("selvaTree", 4795.194960567286, -239634.66279956672, 10.4444, 0));
                scenicList.push(new Scenery("selvaTree", 666.5078766733278, -239234.0786898618, 16.7, 0));
                scenicList.push(new Scenery("selvaTree", 238.54078903048904, -238534.22047766793, 19, 0));
                scenicList.push(new Scenery("selvaTree", 3403.0543813799195, -239351.896601178, 0.1, 0));
                scenicList.push(new Scenery("selvaTree", -791.9428674261518, -248318.3501637582, 1.9056373382564638, 0));
                scenicList.push(new Scenery("selvaTree", -1551.951546360286, -248136.4984184328, 1.7471011433011883, 0));
                scenicList.push(new Scenery("selvaTree", -2305.4754696275263, -248192.8325672096, 4.121459841633852, 0));
                scenicList.push(new Scenery("selvaTree", -2638.6193485421327, -248420.97341832952, 0.7162704646806648, 0));

                scenicList.push(new Scenery("athergmPlant", 2202.590992967346, -240500.20666563866, 0, 1));
                scenicList.push(new Scenery("athergmPlant", 2618.4363846095093, -240142.1658317146, 0.38, 1));
                scenicList.push(new Scenery("athergmPlant", 2709.838659526797, -240988.83908227834, 3, 1));

                scenicList.push(new Scenery("athergmPlant", 228.01889420659413, -247699.98558177773, 6.38, 1));
                scenicList.push(new Scenery("athergmPlant", 557.5120851598692, -247525.4744416334, 1, 1));

                scenicList.push(new Scenery("athergmPlant", 1193.052376594624, -247377.10316842966, 4.9, 1));
                scenicList.push(new Scenery("athergmPlant", 665.6490828931286, -247120.70555726934, 6.1, 1));

                scenicList.push(new Scenery("valumPlant", 3256.67679138896, -240496.09256270886, 1.1, 1));
                scenicList.push(new Scenery("valumPlant", 782.7767384061933, -239726.7574430189, 2.4, 1));

                scenicList.push(new Scenery("blilPlant", -629 , -241201, 4.3, true));
                scenicList.push(new Scenery("decipulaPlant", -1323, -239981, 2.6 + Math.PI, true));

                scenicList.push(new Scenery("decipulaPlant", 1791.708232684256, -246655.8523586797, 3.77, true));

                scenicList.push(new Scenery("cerebrisPlant", -1289.1308411625598, -239142.629934201, 0, 1));

                scenicList.push(new Scenery("cerebrisPlant", 5420.431412145341, -245796.91911657373, 10.333, 1));
                scenicList.push(new Scenery("cerebrisPlant", 5979.663708737669, -245845.11515259114, 7.7, 1));

                scenicList.push(new Scenery("cerebrisPlant", 5792.8254346266185, -246870.08210748536, 8.16, 1));

                scenicList.push(new Scenery("crilkPlant", -2540.5489729129827, -239294.12830824347, 3.2, true));

                scenicList.push(new Scenery("morshPlant", 1459, -239101, 5, true));
                scenicList.push(new Scenery("gojiiPlant", 1319, -240356, 1, true));

                scenicList.push(new Scenery("morshPlant", 4047.517101092634, -246815.64396131947, 0, true));

                scenicList.push(new Scenery("morshPlant", 4789.333471429053, -240683.90064321287, 0, true));

                scenicList.push(new Scenery("bahabPlant", 5343.077332872674, -246642.27904940248, 3.94, true));

                scenicList.push(new Scenery("bahabPlant", 1883.4155400404993, -243042.30049318518, 2.25, true));

                scenicList.push(new Scenery("bahabPlant", 5022.778166176467, -246997.88650586124, 5.95, true));

                scenicList.push(new Scenery("crilkPlant", 1364.033523306689, -244187.53808791225, 5.5, true));

                scenicList.push(new Scenery("blilPlant", 517 , -246180, 6, true));
                scenicList.push(new Scenery("morshPlant", -145.95728090279195, -246676.0339873085, 1.5, true));

                scenicList.push(new Scenery("crilkPlant", 317.18631662864516, -242090.94949824386, 9.22, true));

                scenicList.push(new Scenery("crilkPlant", 5128.139989304042, -247589.67382914858, 7.18, true));

                scenicList.push(new Scenery("decipulaPlant", -1794.7372566519043, -241146.02033215828, -1.7, true));

                scenicList.push(new Scenery("gojiiPlant", -1484.5286675069713, -242533.41192800153, 5, true));

                scenicList.push(new Scenery("morshPlant", -2053.3582349959493, -243865.72140990268, 3.6, true));

                scenicList.push(new Scenery("morshPlant", -2005.818658347035, -245907.54409386084, 11, true));

                scenicList.push(new Scenery("blilPlant", -1408.5532788560126, -246907.1659089539, -7, true));

                scenicList.push(new Scenery("morshPlant", 3928.416412747804, -242826.3302977449, 2.6, true));

                scenicList.push(new Scenery("blilPlant", 4079.7498854508076, -241935.28153899303, -7, true));

                scenicList.push(new Scenery("gojiiPlant", 5835.200517339243, -242551.81618917012, 5.4, true));

                scenicList.push(new Scenery("blilPlant", 1950.5740942843556, -247490.63680387524, 6, true));

                scenicList.push(new Scenery("selvaTree", 5090.882229517125, -248935.64101073495,1.6631828091169625, 0)); //copied s-25
                scenicList.push(new Scenery("selvaTree", 4313.909380364811, -249300.76406192544,1.777593614719195, 0)); //copied s-25
                scenicList.push(new Scenery("selvaTree", 3234.905809361743, -248874.6292523385,4.815745248560966, 0)); //copied s-25
                scenicList.push(new Scenery("selvaTree", 2247.057198526093, -249187.3423271902,4.061362306635107, 0)); //copied s-25
                scenicList.push(new Scenery("selvaTree", 901.5011723226429, -248895.56789294642,4.067032549336555, 0)); //copied s-25
                scenicList.push(new Scenery("selvaTree", -997.4836287844123, -249083.2136230363,0.32406910450872894, 0)); //copied s-25
                scenicList.push(new Scenery("selvaTree", -103.3258636602553, -249000.52010732685,1.5135845233641347, 0)); //copied s-25
                scenicList.push(new Scenery("selvaTree", -1640.2836796449317, -248882.00728436347,4.41044832880805, 0)); //copied s-25
                scenicList.push(new Scenery("selvaTree", -2893.3079477813358, -249217.25807991243, 3.3887366644230754, 0));
                scenicList.push(new Scenery("selvaTree", -2164.013565809134, -249227.69333148532, 5.7925465854427385, 0));
                scenicList.push(new Scenery("selvaTree", 6622.151615906367, -248846.46983164927, 2.7042163926678184, 0));
                scenicList.push(new Scenery("selvaTree", 5947.447797538148, -248893.47880538003, 4.880465579811383, 0));
                scenicList.push(new Scenery("bahabPlant", 3830.131335971431, -248739.98899903114, 10.2, true));

                change = "s24";
            }
        }
        else if (region == "s25") //Selva second of the jungle
        {
            if (change != "s25")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        //console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        //console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                scenicList.push(new Scenery("sonjaTree", -2456.78593620105, -248801.27862364124, 2.574108183118155, 0));

                scenicList.push(new Scenery("bahabPlant", 14.487440114974543, -247892.43183491525,-5.63, true)); //copied s-24
                scenicList.push(new Scenery("overVines", -376.14812830589125, -247795.3992537127,5.570796326794897, 1, 2.3)); //copied s-24
                scenicList.push(new Scenery("sonjaTree", 682.614314662967, -248008.46330477277,9, 0)); //copied s-24
                scenicList.push(new Scenery("selvaTree", -14.17310801951131, -248169.42741023542,0.38, 0)); //copied s-24
                scenicList.push(new Scenery("selvaTree", 1349.2937988197102, -248043.62475449298,4.08, 0)); //copied s-24
                scenicList.push(new Scenery("selvaTree", 4194.025451212907, -248270.51235209382,8.67, 0)); //copied s-24
                scenicList.push(new Scenery("selvaTree", 5825.818948536411, -248092.84296576318,6.87, 0)); //copied s-24
                scenicList.push(new Scenery("selvaTree", 2342.274877637182, -248183.47576047684,4.591, 0)); //copied s-24
                scenicList.push(new Scenery("selvaTree", 3144.8831675220435, -248073.05052506196,0.6757, 0)); //copied s-24
                scenicList.push(new Scenery("selvaTree", 5157.8436203160745, -248172.52417872986,2.4, 0)); //copied s-24
                scenicList.push(new Scenery("selvaTree", 6765.422213264215, -248214.792477134,11.7, 0)); //copied s-24
                scenicList.push(new Scenery("selvaTree", -791.9428674261518, -248318.3501637582, 1.9056373382564638, 0));
                scenicList.push(new Scenery("selvaTree", -1551.951546360286, -248136.4984184328, 1.7471011433011883, 0));
                scenicList.push(new Scenery("selvaTree", -2305.4754696275263, -248192.8325672096, 4.121459841633852, 0));
                scenicList.push(new Scenery("selvaTree", -2638.6193485421327, -248420.97341832952, 0.7162704646806648, 0));

                //trees
                scenicList.push(new Scenery("selvaTree", -2893.3079477813358, -249217.25807991243, 3.3887366644230754, 0));
                scenicList.push(new Scenery("selvaTree", -2164.013565809134, -249227.69333148532, 5.7925465854427385, 0));
                scenicList.push(new Scenery("selvaTree", 6622.151615906367, -248846.46983164927, 2.7042163926678184, 0));
                scenicList.push(new Scenery("selvaTree", 5947.447797538148, -248893.47880538003, 4.880465579811383, 0));

                scenicList.push(new Scenery("sonjaTree", 6219.791649845992, -257474.8550366464, 0.706021572736711, 0));
                scenicList.push(new Scenery("sonjaTree", 4410.018675717904, -255460.80802709347, 0.7689508535417491, 0));
                scenicList.push(new Scenery("sonjaTree", 3685.859834014434, -255134.6638926526, 5.3199911215917215, 0));
                scenicList.push(new Scenery("sonjaTree", 2522.917929139925, -255017.52998886802, 1.5080744270487496, 0));
                scenicList.push(new Scenery("sonjaTree", 2000.1245364243011, -252251.0944879308, 4.128904419714854, 0));
                scenicList.push(new Scenery("sonjaTree", 1732.6960734731376, -251965.32025520757, 2.67259442162036, 0));
                scenicList.push(new Scenery("sonjaTree", 2718.10606596515, -249651.22032839572, 1.904675762083304, 0));
                scenicList.push(new Scenery("sonjaTree", 2781.032459959664, -249170.9674638133, 2.973786750520736, 0));
                scenicList.push(new Scenery("sonjaTree", 3739.989949748861, -249157.69957225243, 3.685699734957355, 0));
                scenicList.push(new Scenery("sonjaTree", 6233.842471561437, -249366.8206644325, 0.7980779603955188, 0));
                scenicList.push(new Scenery("sonjaTree", 6096.203186232579, -250553.04459464742, 0.767515353828836, 0));
                scenicList.push(new Scenery("sonjaTree", 6683.3510639275355, -250709.55944555908, 1.6315792205478519, 0));
                scenicList.push(new Scenery("sonjaTree", 5133.3848004521615, -251063.86972006265, 1.1653550258607526, 0));
                scenicList.push(new Scenery("sonjaTree", -251.35007637310707, -249476.7752843701, 5.692984967113837, 0));

                scenicList.push(new Scenery("selvaTree", 5090.882229517125, -248935.64101073495, 1.6631828091169625, 0));
                scenicList.push(new Scenery("selvaTree", 4313.909380364811, -249300.76406192544, 1.777593614719195, 0));
                scenicList.push(new Scenery("selvaTree", 3234.905809361743, -248874.6292523385, 4.815745248560966, 0));
                scenicList.push(new Scenery("selvaTree", 2247.057198526093, -249187.3423271902, 4.061362306635107, 0));
                scenicList.push(new Scenery("selvaTree", 901.5011723226429, -248895.56789294642, 4.067032549336555, 0));
                scenicList.push(new Scenery("selvaTree", -2407.4359204468665, -249931.9305955926, 5.602860570534958, 0));
                scenicList.push(new Scenery("selvaTree", -2014.7978081393028, -250684.6155164156, 0.26368785217387025, 0));
                scenicList.push(new Scenery("selvaTree", -1469.9899249009668, -251656.53159830565, 0.13703777332160658, 0));
                scenicList.push(new Scenery("selvaTree", -1554.5493059960081, -250063.29149557507, 3.169689152863309, 0));
                scenicList.push(new Scenery("selvaTree", -997.4836287844123, -249083.2136230363, 0.32406910450872894, 0));
                scenicList.push(new Scenery("selvaTree", -103.3258636602553, -249000.52010732685, 1.5135845233641347, 0));
                scenicList.push(new Scenery("selvaTree", 405.68316970091246, -249544.69831855153, 4.119591051346397, 0));
                scenicList.push(new Scenery("selvaTree", 1556.6450441445902, -249761.19330030715, 5.12384022798858, 0));
                scenicList.push(new Scenery("selvaTree", 2461.8537368537122, -250190.92446319674, 0.0023425167856815643, 0));
                scenicList.push(new Scenery("selvaTree", 3607.332295968785, -249768.77804474672, 3.2677378872373, 0));
                scenicList.push(new Scenery("selvaTree", 5596.086140763397, -249704.16331706205, 5.069685836906301, 0));
                scenicList.push(new Scenery("selvaTree", 6404.713813875322, -249947.914320473, 6.178723811628474, 0));
                scenicList.push(new Scenery("selvaTree", 6029.398660027026, -251112.7146116738, 0.7353039139207319, 0));
                scenicList.push(new Scenery("selvaTree", 6716.146936527519, -252171.00250662427, 4.003126823194302, 0));
                scenicList.push(new Scenery("selvaTree", 5453.670216072348, -252625.20249941794, 0.710615307197029, 0));
                scenicList.push(new Scenery("selvaTree", 4990.627366777751, -253465.40649339661, 5.863810099379903, 0));
                scenicList.push(new Scenery("selvaTree", 6122.80013938354, -253567.2323635857, 5.508802081204333, 0));
                scenicList.push(new Scenery("selvaTree", 6794.241649750445, -253341.81239133916, 1.6210515041230358, 0));
                scenicList.push(new Scenery("selvaTree", 6320.390106191334, -252784.30689760033, 6.019843587478099, 0));
                scenicList.push(new Scenery("selvaTree", 5932.418744776398, -251847.2014405917, 3.6176854358910826, 0));
                scenicList.push(new Scenery("selvaTree", 6863.7281592132895, -251480.0875125397, 3.017384115249953, 0));
                scenicList.push(new Scenery("selvaTree", 5236.14203323123, -251566.77284066126, 1.5162133594778828, 0));
                scenicList.push(new Scenery("selvaTree", 5386.151545500521, -250527.65873308308, 0.15913167938906364, 0));
                scenicList.push(new Scenery("selvaTree", 4651.479437512672, -249964.120086485, 2.46964909448599, 0));
                scenicList.push(new Scenery("selvaTree", 3625.7502571159066, -250679.04500498762, 1.5064759550443632, 0));
                scenicList.push(new Scenery("selvaTree", 2352.0813278971154, -251107.4054797834, 2.598763992848308, 0));
                scenicList.push(new Scenery("selvaTree", 1069.8091957198228, -250530.09093826512, 5.4594924833370815, 0));
                scenicList.push(new Scenery("selvaTree", -257.378859067263, -250445.02969634187, 5.156010080606603, 0));
                scenicList.push(new Scenery("selvaTree", -948.690789942673, -250912.5891959957, 0.9657062912512381, 0));
                scenicList.push(new Scenery("selvaTree", -307.0850787544956, -251890.89926420923, 1.8683439374321589, 2));
                scenicList.push(new Scenery("selvaTree", 706.9839311266094, -252557.45592018284, 3.1647993295543686, 0));
                scenicList.push(new Scenery("selvaTree", -190.95549822165242, -253050.6357957332, 0.5899717032920413, 0));
                scenicList.push(new Scenery("selvaTree", -1823.7758264481643, -252925.74044153522, 4.408260734851363, 0));
                scenicList.push(new Scenery("selvaTree", -3049.604784478791, -252218.1739823773, 4.910242297993053, 0));
                scenicList.push(new Scenery("selvaTree", -2423.057559449246, -251566.96854259112, 1.6262029639451845, 0));
                scenicList.push(new Scenery("selvaTree", 197.33774134412525, -251112.58002820116, 3.8659458156330584, 0));
                scenicList.push(new Scenery("selvaTree", 1508.5550961701279, -251467.9984103211, 5.342769117422882, 0));
                scenicList.push(new Scenery("selvaTree", 1116.5382804765861, -252034.02163801444, 2.157308320833525, 0));
                scenicList.push(new Scenery("selvaTree", 1551.524834392135, -252571.70377895224, 5.526595698797244, 0));
                scenicList.push(new Scenery("selvaTree", 1062.4807974051032, -253196.8034440021, 0.8756296721033254, 0));
                scenicList.push(new Scenery("selvaTree", 513.3889023296906, -253359.3063426218, 4.936924587985385, 0));
                scenicList.push(new Scenery("selvaTree", -115.23454667985274, -253794.79259779505, 3.8104791370996067, 0));
                scenicList.push(new Scenery("selvaTree", -1021.6476081934732, -253248.17216137846, 0.36691874192525203, 0));
                scenicList.push(new Scenery("selvaTree", -1611.6697186222168, -253897.26363386263, 3.5238204236219386, 0));
                scenicList.push(new Scenery("selvaTree", -2666.410016692173, -253092.93173552558, 1.5724645133149582, 0));
                scenicList.push(new Scenery("selvaTree", -1954.8682076984107, -254161.07529017673, 3.5694131426516633, 0));
                scenicList.push(new Scenery("selvaTree", -1172.0616128413224, -255049.35686806918, 2.722020415715492, 0));
                scenicList.push(new Scenery("selvaTree", -76.49265834334504, -255167.97431730368, 1.9818022544335405, 0));
                scenicList.push(new Scenery("selvaTree", 1191.71587775936, -255042.4918986043, 5.507979505570198, 0));
                scenicList.push(new Scenery("selvaTree", 2620.365594324132, -254489.95568001323, 5.773633888025186, 0));
                scenicList.push(new Scenery("selvaTree", 3571.1314464254024, -253900.73038478885, 3.414045490509168, 0));
                scenicList.push(new Scenery("selvaTree", 3007.336246352626, -253057.1106318503, 6.043877104229595, 0));
                scenicList.push(new Scenery("selvaTree", 3108.614704593234, -252315.87515262308, 1.5220300765871984, 0));
                scenicList.push(new Scenery("selvaTree", 3735.730807235009, -251482.15964986433, 0.4079643792227268, 0));
                scenicList.push(new Scenery("selvaTree", 3087.2310583473036, -251526.44544775903, 0.8363891229204039, 0));
                scenicList.push(new Scenery("selvaTree", 4580.973585243788, -250882.50018668317, 5.195985692458598, 0));
                scenicList.push(new Scenery("selvaTree", 6495.772953830459, -254340.19621687033, 5.312691666282804, 0));
                scenicList.push(new Scenery("selvaTree", 5722.799273221719, -254934.92444984714, 3.7433006997825298, 0));
                scenicList.push(new Scenery("selvaTree", 6385.775809154995, -255706.03648594135, 5.990083052947872, 0));
                scenicList.push(new Scenery("selvaTree", 6683.087468342642, -256404.1330817209, 3.8311265308925315, 0));
                scenicList.push(new Scenery("selvaTree", 5735.189360733252, -257159.73169702923, 3.6880057475577, 0));
                scenicList.push(new Scenery("selvaTree", 5979.992737801118, -258200.9576693212, 3.6143684631721746, 0));
                scenicList.push(new Scenery("selvaTree", 6853.248715529339, -258479.30797243607, 5.0301668878086065, 0));
                scenicList.push(new Scenery("selvaTree", 6644.429422501719, -257852.05915022007, 3.667066461151423, 0));
                scenicList.push(new Scenery("selvaTree", 6780.462118799346, -257264.10421755473, 2.4045713735564975, 2));
                scenicList.push(new Scenery("selvaTree", 6251.381815202852, -256772.17798497836, 6.218968242224176, 0));
                scenicList.push(new Scenery("selvaTree", 5293.7453700761, -256519.6035050023, 2.4841741258915837, 0));
                scenicList.push(new Scenery("selvaTree", 5748.219368819785, -256150.25798686338, 1.6906653857174694, 0));
                scenicList.push(new Scenery("selvaTree", 6581.258380564351, -255008.4291945751, 6.1939711267894, 0));
                scenicList.push(new Scenery("selvaTree", 5880.146959704902, -254443.8412385178, 6.275351198675648, 0));
                scenicList.push(new Scenery("selvaTree", 5278.438912100954, -254508.7727106601, 0.5928788509446048, 0));
                scenicList.push(new Scenery("selvaTree", 5552.377867774384, -253925.26415812355, 1.0879219082461542, 0));
                scenicList.push(new Scenery("selvaTree", 4773.905894029834, -252894.55506110092, 5.8236599923803425, 0));
                scenicList.push(new Scenery("selvaTree", 4281.256522625675, -252355.82451762698, 2.7842691254072, 0));
                scenicList.push(new Scenery("selvaTree", 3657.8439480619827, -252811.2788044237, 4.866959414562605, 0));
                scenicList.push(new Scenery("selvaTree", 4432.625214848347, -251543.19419915098, 3.71591081322966, 0));
                scenicList.push(new Scenery("selvaTree", 4097.542379833448, -251126.92640577685, 3.748635836162227, 0));
                scenicList.push(new Scenery("selvaTree", 2351.5588488907097, -251838.21134829673, 1.748302869366682, 0));
                scenicList.push(new Scenery("selvaTree", 2520.2237166755126, -252502.70469679424, 0.8304432838982438, 0));
                scenicList.push(new Scenery("selvaTree", 1944.3748887867112, -253111.70161893242, 1.0404580081469756, 0));
                scenicList.push(new Scenery("selvaTree", 836.7429869063333, -251180.51635720683, 2.04362930746369, 0));
                scenicList.push(new Scenery("selvaTree", 383.66032668124694, -250604.27956991768, 1.4914536200199955, 0));
                scenicList.push(new Scenery("selvaTree", 940.3718964269797, -249944.58416288398, 5.114512051611714, 0));
                scenicList.push(new Scenery("selvaTree", -669.0349044816282, -249796.5937283346, 4.0650954565945066, 0));
                scenicList.push(new Scenery("selvaTree", -1001.6203807781359, -250375.42180243335, 5.855305559784621, 0));
                scenicList.push(new Scenery("selvaTree", -1558.214790028353, -249414.61841771886, 2.830623268590036, 0));
                scenicList.push(new Scenery("selvaTree", -1640.2836796449317, -248882.00728436347, 4.41044832880805, 0));
                scenicList.push(new Scenery("selvaTree", -2797.8563631159227, -250497.43235436414, 5.313701603170505, 0));
                scenicList.push(new Scenery("selvaTree", -2964.113153322586, -251031.88136294368, 4.205408403524591, 0));
                scenicList.push(new Scenery("selvaTree", -847.0083036833544, -252466.88438610133, 4.088978776219057, 0));
                scenicList.push(new Scenery("selvaTree", -1240.3430270179103, -252199.7698296474, 2.734741508135528, 0));
                scenicList.push(new Scenery("selvaTree", -1565.4419864911195, -252508.05747775204, 4.201009509655514, 0));
                scenicList.push(new Scenery("selvaTree", -2219.2343402667975, -252288.4143330023, 2.936113051832877, 0));
                scenicList.push(new Scenery("selvaTree", -2484.611584705608, -253735.49680790384, 6.051023754544802, 0));
                scenicList.push(new Scenery("selvaTree", -2711.7953666003473, -254463.96180157148, 6.231811809769001, 0));
                scenicList.push(new Scenery("selvaTree", -2981.95164312666, -254986.07125880112, 2.75879333463681, 0));
                scenicList.push(new Scenery("selvaTree", -1970.4308175696663, -254953.95089603803, 4.377511707181976, 0));
                scenicList.push(new Scenery("selvaTree", -1645.0651961120136, -255812.83142353798, 5.3202428936557995, 0));
                scenicList.push(new Scenery("selvaTree", -2531.3426646404178, -255981.00428622327, 4.63660578831834, 0));
                scenicList.push(new Scenery("selvaTree", -3160.0512409300145, -255582.39474332813, 5.536628683002516, 0));
                scenicList.push(new Scenery("selvaTree", -2806.765202106457, -256949.1098443605, 3.9656334643693536, 0));
                scenicList.push(new Scenery("selvaTree", -2323.8201389538617, -257902.73363788665, 1.030051127820196, 0));
                scenicList.push(new Scenery("selvaTree", -1522.3415049533646, -257676.0440359007, 0.15333814375925334, 0));
                scenicList.push(new Scenery("selvaTree", -919.9767854956742, -258428.79092357602, 4.259632473459805, 0));
                scenicList.push(new Scenery("selvaTree", -437.26093120608044, -257871.5191858341, 1.7352982380205602, 0));
                scenicList.push(new Scenery("selvaTree", 379.3614769688877, -257899.49792318614, 4.001777123643534, 0));
                scenicList.push(new Scenery("selvaTree", 921.801123874908, -258407.16747822537, 5.3278178307299076, 0));
                scenicList.push(new Scenery("selvaTree", 1525.3081747557903, -257839.0107228158, 3.5285453936068847, 0));
                scenicList.push(new Scenery("selvaTree", 2416.702320984506, -258102.51764896244, 0.6539298207764518, 0));
                scenicList.push(new Scenery("selvaTree", 2915.1137847166337, -258542.57340941636, 4.216784513681946, 0));
                scenicList.push(new Scenery("selvaTree", 3607.804465228051, -258272.5057290578, 5.9899570242983735, 0));
                scenicList.push(new Scenery("selvaTree", 3312.7676228725186, -257312.43941299466, 5.425313393356877, 0));
                scenicList.push(new Scenery("selvaTree", -11.154031571499306, -258448.9695590165, 4.241159964302481, 0));
                scenicList.push(new Scenery("selvaTree", -1775.5406782773439, -258446.49589804508, 0.4469256511075874, 0));
                scenicList.push(new Scenery("selvaTree", -2829.0657055766433, -258280.83066773097, 1.4298305427164388, 0));
                scenicList.push(new Scenery("selvaTree", -2026.6513666785193, -257178.52166551055, 3.737290537199293, 0));
                scenicList.push(new Scenery("selvaTree", -810.4397795237, -256450.83375941883, 5.082355695005325, 0));
                scenicList.push(new Scenery("selvaTree", 401.4382729426939, -256566.01844203332, 0.6519850977159178, 0));
                scenicList.push(new Scenery("selvaTree", 1934.3012146606823, -256640.86999290177, 2.818992567444041, 0));
                scenicList.push(new Scenery("selvaTree", 3458.2455956828394, -256439.03980358364, 4.997132686016105, 0));
                scenicList.push(new Scenery("selvaTree", 5259.589449380638, -257888.63355777654, 3.7509529725290394, 0));
                scenicList.push(new Scenery("selvaTree", 4693.57009867238, -256932.10305935098, 5.983825998514841, 0));
                scenicList.push(new Scenery("selvaTree", 4349.2935851881875, -256079.5235209511, 5.474264896846488, 0));
                scenicList.push(new Scenery("selvaTree", 5411.662495403029, -255608.30902634596, 1.605208877153785, 0));
                scenicList.push(new Scenery("selvaTree", 4157.988241023094, -254761.31110168734, 5.396809844276266, 0));
                scenicList.push(new Scenery("selvaTree", 4292.846614542767, -253794.7916161354, 4.522167859292947, 0));
                scenicList.push(new Scenery("selvaTree", 3407.8776477125134, -254762.02197002296, 5.103113156484063, 0));
                scenicList.push(new Scenery("selvaTree", 2858.7320079762108, -255431.64613256385, 4.011280105526692, 0));
                scenicList.push(new Scenery("selvaTree", 2071.6354182480013, -255277.34453505388, 2.3034788776811315, 0));
                scenicList.push(new Scenery("selvaTree", 1772.1769386152368, -255979.31065963057, 0.7057635143372247, 0));
                scenicList.push(new Scenery("selvaTree", 790.7630514011614, -255619.2474215526, 4.720270758235706, 0));
                scenicList.push(new Scenery("selvaTree", -830.8413145282921, -256078.52038297386, 0.03599938818758201, 0));
                scenicList.push(new Scenery("selvaTree", -452.65804407418386, -254411.95945744685, 0.5578103103928148, 0));
                scenicList.push(new Scenery("selvaTree", 339.82684825893625, -254605.67290348347, 5.364243907670214, 0));
                scenicList.push(new Scenery("selvaTree", -2165.233353209309, -257301.67536599791, 4.551691457135184, 0));
                scenicList.push(new Scenery("selvaTree", -224.4036165698901, -257162.76058616757, 0.6178868297950785, 0));
                scenicList.push(new Scenery("selvaTree", -1338.6898182706725, -257000.4192380961, 4.262882663405007, 0));
                scenicList.push(new Scenery("selvaTree", -1466.5934257866659, -256520.47007394148, 4.224729806457121, 0));
                scenicList.push(new Scenery("selvaTree", -2190.82388547088, -256502.240680529, 0.9809760812987186, 0));
                scenicList.push(new Scenery("selvaTree", -650.8505784190479, -255457.74277390743, 4.312794019132185, 0));
                scenicList.push(new Scenery("selvaTree", 78.03078634584824, -255873.14277192435, 3.3056161325748272, 0));
                scenicList.push(new Scenery("selvaTree", 976.7883780019133, -256179.7199937865, 5.3914640460607925, 0));
                scenicList.push(new Scenery("selvaTree", 1341.3086803582783, -256441.20790689997, 4.610750046778052, 0));
                scenicList.push(new Scenery("selvaTree", 847.6463186551164, -257125.72592789866, 0.24266495878962646, 0));
                scenicList.push(new Scenery("selvaTree", 1464.4447322181618, -257204.9252860935, 1.862843119775707, 0));
                scenicList.push(new Scenery("selvaTree", 2375.070585781404, -257387.87136956127, 5.449333053615748, 0));
                scenicList.push(new Scenery("selvaTree", 2616.310090594589, -256005.13107198256, 2.545096246873428, 0));
                scenicList.push(new Scenery("selvaTree", 3771.79325819661, -255686.49984086704, 3.1612825837645326, 0));
                scenicList.push(new Scenery("selvaTree", 4923.661411710811, -255073.8037705303, 3.3849108862986417, 0));
                scenicList.push(new Scenery("selvaTree", 4539.611573644943, -258401.71391000625, 4.624821054779157, 0));
                scenicList.push(new Scenery("selvaTree", 4060.6594417627352, -257627.64298973643, 4.455939803303608, 0));
                scenicList.push(new Scenery("selvaTree", 4570.913961285334, -257570.75512882433, 2.175442127499705, 0));
                scenicList.push(new Scenery("selvaTree", 5173.565741541433, -257216.388037263, 0.5154356130459489, 0));
                scenicList.push(new Scenery("selvaTree", 2492.0217240155794, -253515.79111471755, 3.226144426159153, 0));
                scenicList.push(new Scenery("selvaTree", 3492.9033647295464, -253387.40890089457, 4.43681953741826, 0));
                scenicList.push(new Scenery("selvaTree", 2925.5267709789828, -253854.51577974224, 3.6760241889916005, 0));
                scenicList.push(new Scenery("selvaTree", 2100.7714974759383, -254015.91840768256, 1.0082848725070124, 0));
                scenicList.push(new Scenery("selvaTree", 1518.6944396959886, -253800.06003913673, 0.8485666859534432, 0));
                scenicList.push(new Scenery("selvaTree", 1270.7985545294525, -254324.38393538282, 0.7803160602114233, 0));
                scenicList.push(new Scenery("selvaTree", 1692.4187846840275, -255029.02818113635, 1.4539349165214335, 0));
                scenicList.push(new Scenery("selvaTree", 891.668274960994, -253781.34757587212, 5.25398524971118, 0));

                scenicList.push(new Scenery("selvaTree", 5979.992737801118, -258200.9576693212,3.6143684631721746, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", 6853.248715529339, -258479.30797243607,5.0301668878086065, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", -919.9767854956742, -258428.79092357602,4.259632473459805, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", 921.801123874908, -258407.16747822537,5.3278178307299076, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", 2416.702320984506, -258102.51764896244,0.6539298207764518, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", 2915.1137847166337, -258542.57340941636,4.216784513681946, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", 3607.804465228051, -258272.5057290578,5.9899570242983735, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", -11.154031571499306, -258448.9695590165,4.241159964302481, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", -1775.5406782773439, -258446.49589804508,0.4469256511075874, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", -2829.0657055766433, -258280.83066773097,1.4298305427164388, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", 4539.611573644943, -258401.71391000625,4.624821054779157, 0)); //copied s26
                scenicList.push(new Scenery("sonjaTree", 1796.7330490860352, -259412.53188916622,4.783685892220547, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", 2195.9792397866295, -258917.38816438202,1.929201977244369, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", 1585.840513707371, -258787.2264802032,3.04496646735412, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", 1166.029724666294, -259115.99156716684,0.2503730382105351, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", 487.4156375361485, -258987.29414101288,5.6561580355329495, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", -72.76207677549083, -259320.22938236475,3.1431809928550973, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", -733.835451698978, -259097.47640020883,2.4627269283360884, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", -1604.0624165881934, -259397.4150237329,2.3302344673672097, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", -1305.7886021416164, -258971.5209969915,4.7257891178084455, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", -2227.119582785373, -259146.0457605493,0.4213303857460939, 2)); //copied s26
                scenicList.push(new Scenery("selvaTree", -2729.148938242257, -258917.05425394422,4.261604606767215, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", 2742.4755207244225, -259346.0407465731,0.4518031817824075, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", 3683.4309832288473, -258934.04032359438,1.479930222072101, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", 4397.34231952278, -259169.7430568225,1.470462915751245, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", 5490.944903023085, -258846.48858048374,1.512365552174078, 0)); //copied s26
                scenicList.push(new Scenery("selvaTree", 5186.1909211948305, -259455.42418295806,5.462872230197226, 0)); //copied s26


                //REGION CREATION
                //Build AI Units
                //ArtificialIntelligenceAccess.push(new Unit(3000, 2500, "ZafBeetle", true, "Tzalit"));
                //scenicList.push(new Scenery("vinePatch", 3500, 2500, 0, 1));
                //scenicList.push(new Scenery("cerebrisPlant", 3500, 2500, 0, 1));
                //scenicList.push(new Scenery("gojiiPlant", 3500, 2500, 0, true));
                //scenicList.push(new Scenery("bahabPlant", 3500, 2500, 0, true));
                //scenicList.push(new Scenery("araneaDen", 3500, 2500, 0, false, true));
                //ArtificialIntelligenceAccess.push(new Unit(3000, 2500, "Gorgon", false, "Gra"));
                //ArtificialIntelligenceAccess.push(new Unit(3000, 2500, "Cruorcca", "massive", "Cruor"));
                //ArtificialIntelligenceAccess.push(new Unit(3908, 2500, "Kigarii", true, "Apex"));
                //ArtificialIntelligenceAccess.push(new Unit(3600, 2500, "Crenid", "massive", "Bulgg"));
                //scenicList.push(new Scenery("athergmPlant", 3990, 2500, 0, 1));
                //scenicList.push(new Scenery("decipulaBasePlant", 3670, 2500, 0, "massive"));
                //ArtificialIntelligenceAccess.push(new Unit(4522.335247873034, -249275.47102745296, "Zancudo", false, "proboscis"));
                //ArtificialIntelligenceAccess.push(new Unit(3550, 2500, "Venandi", true, "hunter"));
                //ArtificialIntelligenceAccess.push(new Unit(3570, 2500, "EtyrVenandi", true, "scout"));
                //ArtificialIntelligenceAccess.push(new Unit(3570, 2500, "AraneaVenandi", true, "tank"));
                //scenicList.push(new Scenery("valumPlant", 3990, 2500, 0, 1));
                //scenicList.push(new Scenery("decipulaPlant", 3670, 2500, 0, true));
                //ArtificialIntelligenceAccess.push(new Unit(3613, -240174, "Gorgon", false, "Gra"));
                //ArtificialIntelligenceAccess.push(new Unit(3700, 2500, "Boa", false, "constricto"));
                //ArtificialIntelligenceAccess.push(new Unit(3600, 2500, "PoisonDartFrog", true, "coqui"));
                //scenicList.push(new Scenery("sonjaTree", 3600, 2500, 0, true));
                //scenicList.push(new Scenery("matnaWeb", 3600, 2500, 0, 2.1));
                //ArtificialIntelligenceAccess.push(new Unit(3600, 2500, "Matna", false, "deathByter"));
                //ArtificialIntelligenceAccess.push(new Unit(3600, 2500, "Babosa", true, "Glubber", {patrolStops: 3, patrolLoop: true, route:[[3600, 2500], [3500, 2550], [3650, 2600]]}));
                //scenicList.push(new Scenery("pyromothWeb", 3700, 2500, 0, 1, true));
                //ArtificialIntelligenceAccess.push(new Unit(3700, 2500, "Pyromoth", true, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[3600, 2500], [3500, 2550], [3650, 2600]]}));
                //scenicList.push(new Scenery("crilkPlant", 3600, 2500, 3.2, true));
                //ArtificialIntelligenceAccess.push(new Unit(3500, 2500, "BlackTroll", false, "Brufga"));
                //scenicList.push(new Scenery("overVines", 3600, 2500, 0, 4, 1));
                //scenicList.push(new Scenery("webVictim", 3600, 2500, 0, 3, 1));
                //scenicList.push(new Scenery("jungleStuff", 3600, 2500, 0.23, 2, 1));
                //scenicList.push(new Scenery("selvaTree", 3600, 2500, 0, 0));
                //ArtificialIntelligenceAccess.push(new Unit(2000, -240000, "Gulfrey", true, "Guld"));
                //ArtificialIntelligenceAccess.push(new Unit(5012, -240944, "Torper", true, "Shankstripes"));
                //ArtificialIntelligenceAccess.push(new Unit(1194, -240231, "Etyr", true, "Blackeye"));
                //scenicList.push(new Scenery("blilPlant", 2389 , -239760, 6.78, true));
                //scenicList.push(new Scenery("vinePatch", 3500, 2500, 0, 1));
                //ArtificialIntelligenceAccess.push(new Unit(3550, 2500, "Venandi", true, "hunter"));
                //ArtificialIntelligenceAccess.push(new Unit(3570, 2500, "EtyrVenandi", true, "scout"));
                //ArtificialIntelligenceAccess.push(new Unit(3570, 2500, "AraneaVenandi", true, "tank"));
                //ArtificialIntelligenceAccess.push(new Unit(3500, 2500, "Borea", true, "Ipskwich"));
                //ArtificialIntelligenceAccess.push(new Unit(3500, 2500, "Salisea", false, "Digit"));

                //Animals
                ArtificialIntelligenceAccess.push(new Unit(3445.9937948417128, -248811.02452374334, "Etyr", true, "Blackeye"));
                ArtificialIntelligenceAccess.push(new Unit(3378.2560697414783, -248735.71879514208, "Etyr", false, "Blackeye"));
                ArtificialIntelligenceAccess.push(new Unit(3064.6843568289005, -248797.19562605474, "Etyr", false, "Blackeye"));
                ArtificialIntelligenceAccess.push(new Unit(3218.5853797684417, -249040.96146032837, "Etyr", false, "Blackeye"));

                ArtificialIntelligenceAccess.push(new Unit(2210.2339904839855, -251923.15386484528, "Etyr", true, "Blackeye"));
                ArtificialIntelligenceAccess.push(new Unit(2083.5565302200207, -251749.87536716665, "Etyr", false, "Blackeye"));

                ArtificialIntelligenceAccess.push(new Unit(4522.335247873034, -249275.47102745296, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(5245.7840475599, -249002.26318939513, "Zancudo", true, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(5988.993678357919, -248986.18119487033, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(5974.264268155306, -258414.9150131341, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(4369.517375014708, -257765.9490706217, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(2484.9103005752104, -257916.8672380956, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(4227.771846210647, -256040.4862948412, "Zancudo", false, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(3927.249698799146, -255717.7173744563, "Zancudo", false, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(-2386.4575874353795, -256403.94779749378, "Zancudo", false, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(-1286.9892407217499, -256522.78946112926, "Zancudo", false, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(968.6318177409056, -253842.36825434677, "Zancudo", true, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(-2534.7791468696405, -252960.60059629858, "Zancudo", true, "proboscis"));

                ArtificialIntelligenceAccess.push(new Unit(2818.7042154681976, -255153.2935205221, "EtyrVenandi", true, "scout"));
                ArtificialIntelligenceAccess.push(new Unit(2671.2164891909074, -255292.1012346063, "EtyrVenandi", false, "scout"));
                ArtificialIntelligenceAccess.push(new Unit(2902.816047285979, -255315.77430001108, "EtyrVenandi", false, "scout"));
                ArtificialIntelligenceAccess.push(new Unit(3177.707680906615, -254822.9671098343, "EtyrVenandi", false, "scout"));

                ArtificialIntelligenceAccess.push(new Unit(1431.1862403622229, -253429.89739009054, "EtyrVenandi", true, "scout"));
                ArtificialIntelligenceAccess.push(new Unit(1725.3126188806943, -253119.98011757596, "EtyrVenandi", false, "scout"));

                scenicList.push(new Scenery("decipulaPlant", 4601.666005180314, -256350.75173208362, 6, true));

                scenicList.push(new Scenery("decipulaPlant", 2906.6841954716224, -252647.1057315692, -0.1, true));

                scenicList.push(new Scenery("decipulaBasePlant", 4917.808613483976, -253960.67848881765, 2.2, true));

                scenicList.push(new Scenery("decipulaBasePlant", 4839.920247166196, -254157.50239975366, 0.68, false));

                scenicList.push(new Scenery("decipulaBasePlant", 4042.1620365485305, -254329.32969166574, -1, true));

                scenicList.push(new Scenery("decipulaBasePlant", 3135.7316836046625, -252679.282199154, 1.56, false));

                scenicList.push(new Scenery("blilPlant", 928.805225433131, -251603.64983384093, 19, true));

                scenicList.push(new Scenery("blilPlant", -470.9390016003971, -251318.1865111086, 19, true));

                scenicList.push(new Scenery("gojiiPlant", 2770.1966475281256, -250765.70181540382, 6.4, true));


                ArtificialIntelligenceAccess.push(new Unit(6287.677962858545, -251578.3457090744, "Gulfrey", false, "Guld"));

                ArtificialIntelligenceAccess.push(new Unit(6150.954646791944, -252941.79522302054, "Gulfrey", true, "Guld"));

                ArtificialIntelligenceAccess.push(new Unit(5818.499268977176, -250152.70102112732, "Boa", false, "constricto"));
                ArtificialIntelligenceAccess.push(new Unit(401.5755647431258, -251827.83444990648, "Boa", false, "constricto"));
                ArtificialIntelligenceAccess.push(new Unit(-1983.983267393181, -253414.0857372819, "Boa", true, "constricto"));

                ArtificialIntelligenceAccess.push(new Unit(4446.374237409595, -250096.0665275809, "PoisonDartFrog", false, "coqui"));
                ArtificialIntelligenceAccess.push(new Unit(4918.865336039311, -249334.1191245097, "PetraBeetle", true, "Iga"));
                ArtificialIntelligenceAccess.push(new Unit(5330.174224406059, -254656.35830746597, "PetraBeetle", false, "Iga"));
                ArtificialIntelligenceAccess.push(new Unit(5486.8931539221985, -255208.8046815171, "PoisonDartFrog", true, "coqui"));
                ArtificialIntelligenceAccess.push(new Unit(3527.6287857059256, -258051.18387233923, "PoisonDartFrog", false, "coqui"));

                ArtificialIntelligenceAccess.push(new Unit(-42.148252494938475, -252465.82709270593, "PetraBeetle", true, "Iga"));

                ArtificialIntelligenceAccess.push(new Unit(3797.647283318696, -254603.4638844468, "PoisonDartFrog", true, "coqui"));

                ArtificialIntelligenceAccess.push(new Unit(5976.562842027705, -254038.84765659654, "Gorgon", false, "Grag"));

                ArtificialIntelligenceAccess.push(new Unit(5596.29590266698, -253308.6296209968, "Cruorcca", "massive", "Cruor"));
                ArtificialIntelligenceAccess.push(new Unit(5805.461467183113, -253548.12888844643, "Cruorcca", true, "Cruor"));
                ArtificialIntelligenceAccess.push(new Unit(5349.276018270936, -253561.84237107344, "Cruorcca", "massive", "Cruor"));

                ArtificialIntelligenceAccess.push(new Unit(3052.6837105219765, -257981.83504572362, "BlackTroll", false, "Brufga"));
                ArtificialIntelligenceAccess.push(new Unit(3034.4679006244737, -257752.88075363528, "BlackTroll", true, "Brufga"));
                ArtificialIntelligenceAccess.push(new Unit(2759.784596878349, -257604.03156693772, "BlackTroll", false, "Brufga"));

                ArtificialIntelligenceAccess.push(new Unit(4047.070363262499, -257008.74193077037, "BlackTroll", false, "Brufga"));
                ArtificialIntelligenceAccess.push(new Unit(3654.3046109881698, -256870.5277052209, "BlackTroll", true, "Brufga"));

                ArtificialIntelligenceAccess.push(new Unit(4579.118372694415, -254090.37668813663, "ZafBeetle", false, "Tzalit"));

                ArtificialIntelligenceAccess.push(new Unit(-1941.9101368561446, -249734.0552648165, "ZafBeetle", true, "Tzalit"));

                scenicList.push(new Scenery("matnaWeb", -1248.7928445856437, -250229.13664057758, 0, 3));
                scenicList.push(new Scenery("matnaWeb", -1192.7041202125167, -250331.19437722332, 5, 2.25));
                scenicList.push(new Scenery("matnaWeb", -1302.3371301321313, -250171.2990506931, 10, 1.9));
                ArtificialIntelligenceAccess.push(new Unit(-1248.7928445856437, -250229.13664057758, "Matna", true, "donh"));
                ArtificialIntelligenceAccess.push(new Unit(-1258.7928445856437, -250220.13664057758, "Matna", false, "gonh"));
                ArtificialIntelligenceAccess.push(new Unit(-1240.7928445856437, -250230.13664057758, "Matna", false, "lohn"));

                //vines
                scenicList.push(new Scenery("overVines", 4176.211064004871, -249875.37758651574, -0.6, 4, 5));
                scenicList.push(new Scenery("overVines", 4205.041307447935, -249877.0530990496, -0.2 + 1/2 * Math.PI, 2, 1.8));
                scenicList.push(new Scenery("overVines", 5993.105890889222, -249986.53550639257, 4 + 1/2 * Math.PI, 3, 3));
                scenicList.push(new Scenery("overVines", 3692.4781160015277, -257875.72605335293, 13.55, 1, 1.15));
                scenicList.push(new Scenery("overVines", 3584.177606416626, -257667.2203066686, 13.55, 2, 0.9));
                scenicList.push(new Scenery("overVines", 3584.177606416626, -257650.2003066686, 14, 2, 1));
                scenicList.push(new Scenery("overVines", -1225.4959841553357, -255930.28946210223, 9.2, 4, 2.1));

                scenicList.push(new Scenery("overVines", 4153.253896170796, -251844.3766493973, 11.2, 1, 2.22));

                scenicList.push(new Scenery("overVines", 1317.3641263230081, -250944.46659946014, 1, 2, 1));

                scenicList.push(new Scenery("vinePatch", 3761.8477439753106, -257934.4524329317, 2, 2.5));
                scenicList.push(new Scenery("vinePatch", 3752.9309638174295, -257853.31446300584, 1, 2.6));
                scenicList.push(new Scenery("vinePatch", 3647.598629428478, -257928.13561149355, 0.7, 2.4));

                scenicList.push(new Scenery("vinePatch", 4497.97218409932, -254863.509567, 8, 2.2));
                scenicList.push(new Scenery("vinePatch", 4643.781255676743, -254890.77543502665, 9.8, 2.1));
                scenicList.push(new Scenery("vinePatch", 4559.684842958875, -254895.29172090703, 3, 3));
                scenicList.push(new Scenery("vinePatch", 4777.977832666722, -254960.24345582732, 5, 3.2));

                scenicList.push(new Scenery("vinePatch", 4360.092795484291, -254721.6548654766, 11.5, 4));

                scenicList.push(new Scenery("vinePatch", 4653.225034382625, -254971.5894830742, 7, 2.1));
                scenicList.push(new Scenery("vinePatch", 4420.359198118161, -254805.85273277925, 6, 2.3));
                scenicList.push(new Scenery("vinePatch", 4209.195042176571, -254715.18097234968, 4.3, 2.9));
                scenicList.push(new Scenery("vinePatch", 4841.87246986231, -255054.28928447817, 2.1, 2.5));
                scenicList.push(new Scenery("vinePatch", 4902.939307001633, -254971.56741410802, 46, 2.8));
                scenicList.push(new Scenery("vinePatch", 4528.985418810061, -255017.30237312702, 22, 2.7));
                scenicList.push(new Scenery("vinePatch", 4640.544381816028, -255067.68225871224, 1, 3.1));

                //Plants
                scenicList.push(new Scenery("blilPlant", 4079.2539998820657, -249674.53841142682, 8.78, true));
                scenicList.push(new Scenery("valumPlant", 5439.078259634222, -249399.13330422374, 2.5, 1));

                scenicList.push(new Scenery("valumPlant", 4677.80333582715, -255519.53964371927, 5, 1));

                scenicList.push(new Scenery("athergmPlant", 5765.898095030428, -252421.8849911782, 9, 1));

                scenicList.push(new Scenery("athergmPlant", -1983.6863734291167, -256165.1402124825, 1.111, 1));

                scenicList.push(new Scenery("blilPlant", 938.544314569325, -255619.89714910672, 7.04, true));

                scenicList.push(new Scenery("gojiiPlant", 5398.362051521597, -256930.91767361204, 2.7, true));

                scenicList.push(new Scenery("gojiiPlant", -547.4516230096013, -257483.6529623042, 9.15, true));

                ArtificialIntelligenceAccess.push(new Unit(5769.236799809854, -257690.7503437623, "Borea", true, "tigi"));
                ArtificialIntelligenceAccess.push(new Unit(1976.8678403753383, -253607.6456871002, "Borea", false, "tigi"));

                ArtificialIntelligenceAccess.push(new Unit(-437.1812190299004, -252671.83320459694, "Borea", true, "tigi"));

                ArtificialIntelligenceAccess.push(new Unit(4983.8322071547955, -257472.749373676, "Lizard", true, "Lib"));

                scenicList.push(new Scenery("cerebrisPlant", 3192.3747333010974, -254330.58311550645, 9, 1));

                scenicList.push(new Scenery("morshPlant", 4076.326185347622, -256705.3338885674, 1.7, true));

                scenicList.push(new Scenery("morshPlant", -957.3711897922115, -253463.12969949513, 7.7, true));

                scenicList.push(new Scenery("cerebrisPlant", 3199.7340465856455, -256030.34867801843, 5.4, 1));

                scenicList.push(new Scenery("morshPlant", -1004.7625750646035, -257582.76304277914, 1.7, true));

                scenicList.push(new Scenery("cerebrisPlant", 3377.7663867284036, -255775.4374193447, 5.4, 1));

                ArtificialIntelligenceAccess.push(new Unit(5185.783411503336, -256236.1306402805, "Salisea", false, "Digit"));

                ArtificialIntelligenceAccess.push(new Unit(5303.405695744353, -256043.20809766892, "Salisea", true, "Digit"));

                ArtificialIntelligenceAccess.push(new Unit(5237.064608913608, -255812.2882042722, "Salisea", false, "Digit"));

                ArtificialIntelligenceAccess.push(new Unit(4813.402884277566, -256136.27847603254, "Salisea", false, "Digit"));

                ArtificialIntelligenceAccess.push(new Unit(4983.040380913248, -255852.3231301714, "Salisea", true, "Digit"));

                ArtificialIntelligenceAccess.push(new Unit(4920.851429815205, -254796.42544913423, "Salisea", false, "Digit"));

                ArtificialIntelligenceAccess.push(new Unit(1332.7272896363847, -252534.48254372375, "Salisea", false, "Digit"));

                ArtificialIntelligenceAccess.push(new Unit(1143.2746294494034, -251623.0470016015, "Salisea", false, "Digit"));

                scenicList.push(new Scenery("crilkPlant", 4601.2533009915505, -254422.26613629196, 5.5, true));

                scenicList.push(new Scenery("cerebrisPlant", 3332.4252864554933, -255358.86283795183, 2, 1));

                scenicList.push(new Scenery("cerebrisPlant", 2927.2769639881544, -254921.36930091857, 0.43, 1));

                scenicList.push(new Scenery("araneaDen", 3134.5020319808045, -254327.52477417636, Math.PI, true, true));

                scenicList.push(new Scenery("crilkPlant", 2060.8792587665985, -251568.2397045376, 7.65, true));

                scenicList.push(new Scenery("morshPlant", 3140.35175226548, -253585.08383289012, -2.9, true));

                scenicList.push(new Scenery("cerebrisPlant", 2565.746574414494, -254012.01188481625, 3.3, 1));

                scenicList.push(new Scenery("cerebrisPlant", 2169.3137742613694, -253661.561882547, 10, 1));

                scenicList.push(new Scenery("cerebrisPlant", 3849.1438243434254, -252338.24101279047, 10.2, 1));

                scenicList.push(new Scenery("cerebrisPlant", 1876.0305538267555, -253488.38386774098, 13, 1));

                scenicList.push(new Scenery("araneaDen", -1150.8835197182443, -254445.83047639337, Math.PI, false, true));

                scenicList.push(new Scenery("crilkPlant", -240.64530807585157, -254825.4569521544, 5.5, true));

                scenicList.push(new Scenery("bahabPlant", -390.03545873242507, -255335.15816940938, 0, true));

                scenicList.push(new Scenery("bahabPlant", -611.85006520677, -255250.87910371964, 0, true));

                scenicList.push(new Scenery("bahabPlant", 484.32995323706837, -256078.03564881184, 0, true));

                scenicList.push(new Scenery("bahabPlant", -341.0186570461173, -256642.96210773356, 0, true));

                scenicList.push(new Scenery("blilPlant", 3788.235695272241, -252193.8129117763, 9.04, true));

                scenicList.push(new Scenery("blilPlant", 4788.8583005135715, -251296.63073078293, 13.1, true));

                scenicList.push(new Scenery("bahabPlant", 3830.131335971431, -248739.98899903114, 10.2, true));


                ArtificialIntelligenceAccess.push(new Unit(-811.139112670939, -256655.17619560743, "Salisea", true, "Digit"));

                ArtificialIntelligenceAccess.push(new Unit(-676.8786353866498, -256529.3197564452, "Salisea", false, "Digit"));

                ArtificialIntelligenceAccess.push(new Unit(-383.77554895651366, -257091.94101076867, "Salisea", false, "Digit"));

                change = "s25";
            }
        }
        else if (region == "s26") //Silvestre third of the jungle
        {
            if (change != "s26")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        //console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        //console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                scenicList.push(new Scenery("selvaTree", 5979.992737801118, -258200.9576693212,3.6143684631721746, 0)); //copied s25
                scenicList.push(new Scenery("selvaTree", 6853.248715529339, -258479.30797243607,5.0301668878086065, 0)); //copied s25
                scenicList.push(new Scenery("selvaTree", -919.9767854956742, -258428.79092357602,4.259632473459805, 0)); //copied s25
                scenicList.push(new Scenery("selvaTree", 921.801123874908, -258407.16747822537,5.3278178307299076, 0)); //copied s25
                scenicList.push(new Scenery("selvaTree", 2416.702320984506, -258102.51764896244,0.6539298207764518, 0)); //copied s25
                scenicList.push(new Scenery("selvaTree", 2915.1137847166337, -258542.57340941636,4.216784513681946, 0)); //copied s25
                scenicList.push(new Scenery("selvaTree", 3607.804465228051, -258272.5057290578,5.9899570242983735, 0)); //copied s25
                scenicList.push(new Scenery("selvaTree", -11.154031571499306, -258448.9695590165,4.241159964302481, 0)); //copied s25
                scenicList.push(new Scenery("selvaTree", -1775.5406782773439, -258446.49589804508,0.4469256511075874, 0)); //copied s25
                scenicList.push(new Scenery("selvaTree", -2829.0657055766433, -258280.83066773097,1.4298305427164388, 0)); //copied s25
                scenicList.push(new Scenery("selvaTree", 4539.611573644943, -258401.71391000625,4.624821054779157, 0)); //copied s25

                //trees
                scenicList.push(new Scenery("sonjaTree", -1098.8326396219063, -265409.766106384, 1.04399899646541, 0));
                scenicList.push(new Scenery("sonjaTree", 169.5603609401237, -264915.143796942, 5.179040164905984, 0));
                scenicList.push(new Scenery("sonjaTree", 595.0142411826399, -264373.1834101587, 0.6351892933526592, 0));
                scenicList.push(new Scenery("sonjaTree", -102.65235021448, -263884.67728246556, 3.828615755005252, 0));
                scenicList.push(new Scenery("sonjaTree", 1522.7793042570115, -259770.6733800629, 2.265286473977714, 0));
                scenicList.push(new Scenery("sonjaTree", 1796.7330490860352, -259412.53188916622, 4.783685892220547, 0));
                scenicList.push(new Scenery("sonjaTree", 2303.9855199505414, -259538.0573479494, 2.178774366738636, 0));
                scenicList.push(new Scenery("sonjaTree", 4532.352337890427, -260697.91337492247, 2.743562556174455, 0));
                scenicList.push(new Scenery("sonjaTree", 6731.827842214851, -264194.5234148736, 0.8609703310231208, 0));
                scenicList.push(new Scenery("sonjaTree", 5487.2730912011475, -265407.7385954542, 1.2531468967053414, 0));
                scenicList.push(new Scenery("sonjaTree", -970.5323870141946, -267358.07602774317, 3.0825778088635296, 0));
                scenicList.push(new Scenery("sonjaTree", -664.1342136168482, -266556.22634653246, 3.667525535952872, 0));

                scenicList.push(new Scenery("selvaTree", 2195.9792397866295, -258917.38816438202, 1.929201977244369, 0));
                scenicList.push(new Scenery("selvaTree", 1585.840513707371, -258787.2264802032, 3.04496646735412, 0));
                scenicList.push(new Scenery("selvaTree", 1166.029724666294, -259115.99156716684, 0.2503730382105351, 0));
                scenicList.push(new Scenery("selvaTree", 487.4156375361485, -258987.29414101288, 5.6561580355329495, 0));
                scenicList.push(new Scenery("selvaTree", -72.76207677549083, -259320.22938236475, 3.1431809928550973, 0));
                scenicList.push(new Scenery("selvaTree", -733.835451698978, -259097.47640020883, 2.4627269283360884, 0));
                scenicList.push(new Scenery("selvaTree", -657.4099706646189, -259744.16544638426, 5.329386854868633, 0));
                scenicList.push(new Scenery("selvaTree", -1604.0624165881934, -259397.4150237329, 2.3302344673672097, 0));
                scenicList.push(new Scenery("selvaTree", -1305.7886021416164, -258971.5209969915, 4.7257891178084455, 0));
                scenicList.push(new Scenery("selvaTree", -2227.119582785373, -259146.0457605493, 0.4213303857460939, 2));
                scenicList.push(new Scenery("selvaTree", -2729.148938242257, -258917.05425394422, 4.261604606767215, 0));
                scenicList.push(new Scenery("selvaTree", -2955.1451727362264, -259579.6696669299, 3.143475802037798, 0));
                scenicList.push(new Scenery("selvaTree", -2294.5803932316953, -259915.13087924625, 5.141149209522408, 0));
                scenicList.push(new Scenery("selvaTree", -1620.735900639366, -259743.70595801243, 0.9056041504563416, 0));
                scenicList.push(new Scenery("selvaTree", -1082.3333258781488, -260387.2133453761, 0.8124307967770156, 0));
                scenicList.push(new Scenery("selvaTree", -1675.3003374339028, -260834.14584176347, 3.9644923734411597, 0));
                scenicList.push(new Scenery("selvaTree", -2548.568669590788, -260760.16905577588, 0.049527291900146986, 0));
                scenicList.push(new Scenery("selvaTree", -2975.805353970352, -260375.85734601214, 2.672386186360749, 0));
                scenicList.push(new Scenery("selvaTree", -2900.6311058416063, -261447.08099986077, 3.9139048070357463, 0));
                scenicList.push(new Scenery("selvaTree", -2155.746198373544, -261726.01235957563, 5.351693887914114, 0));
                scenicList.push(new Scenery("selvaTree", -2036.7530590218414, -261328.49060768672, 1.6208975132838346, 0));
                scenicList.push(new Scenery("selvaTree", -1173.1651313004215, -261303.8793797694, 0.8023825304804122, 0));
                scenicList.push(new Scenery("selvaTree", -1533.8696185176452, -261723.9033373287, 5.78524774913039, 0));
                scenicList.push(new Scenery("selvaTree", -773.1688844389653, -261763.96006876862, 3.686776383363518, 0));
                scenicList.push(new Scenery("selvaTree", -918.086015407789, -262307.1031630312, 0.5608473894171453, 0));
                scenicList.push(new Scenery("selvaTree", -1540.8656829741747, -262507.9311626861, 4.866721221852842, 0));
                scenicList.push(new Scenery("selvaTree", -2271.241509527436, -262291.7133104595, 5.673464397605758, 0));
                scenicList.push(new Scenery("selvaTree", -2279.955160732297, -262755.75894354755, 1.9544858299244123, 2));
                scenicList.push(new Scenery("selvaTree", -2835.6799284682106, -262501.6341247694, 5.928443838057688, 0));
                scenicList.push(new Scenery("selvaTree", -2792.598026084228, -262986.68339242047, 5.7262682637746884, 0));
                scenicList.push(new Scenery("selvaTree", -2314.7029050915453, -263211.08955057274, 1.6674937664452665, 0));
                scenicList.push(new Scenery("selvaTree", -2862.1936003800065, -263579.98291476804, 4.9941032116784125, 0));
                scenicList.push(new Scenery("selvaTree", -2265.829694508109, -263926.63532153337, 2.238118919761368, 0));
                scenicList.push(new Scenery("selvaTree", -1498.5512674497948, -263725.737770605, 5.859181368012981, 0));
                scenicList.push(new Scenery("selvaTree", -752.9552137474772, -263198.57951664436, 5.107292222377767, 0));
                scenicList.push(new Scenery("selvaTree", 81.77008161971911, -262625.5039468659, 2.4113325715625056, 0));
                scenicList.push(new Scenery("selvaTree", 541.6161371544656, -261770.18622387212, 2.7469704230885075, 0));
                scenicList.push(new Scenery("selvaTree", 385.00896118790956, -260512.40219183837, 4.626128706949016, 0));
                scenicList.push(new Scenery("selvaTree", -249.9453050862809, -260934.70197677647, 3.9541916672416186, 0));
                scenicList.push(new Scenery("selvaTree", -976.4784781592388, -260672.22493010416, 5.254764732277487, 0));
                scenicList.push(new Scenery("selvaTree", -240.06973123881247, -260137.83986909877, 4.696881376688082, 0));
                scenicList.push(new Scenery("selvaTree", 727.2615148503612, -259787.8994778215, 0.29750725155190333, 0));
                scenicList.push(new Scenery("selvaTree", 1535.9778920823885, -260453.37157566941, 3.4976888284266208, 0));
                scenicList.push(new Scenery("selvaTree", 2447.032251075087, -260077.37240400948, 0.7296087246631235, 0));
                scenicList.push(new Scenery("selvaTree", 2742.4755207244225, -259346.0407465731, 0.4518031817824075, 0));
                scenicList.push(new Scenery("selvaTree", 3683.4309832288473, -258934.04032359438, 1.479930222072101, 0));
                scenicList.push(new Scenery("selvaTree", 4397.34231952278, -259169.7430568225, 1.470462915751245, 0));
                scenicList.push(new Scenery("selvaTree", 5490.944903023085, -258846.48858048374, 1.512365552174078, 0));
                scenicList.push(new Scenery("selvaTree", 5186.1909211948305, -259455.42418295806, 5.462872230197226, 0));
                scenicList.push(new Scenery("selvaTree", 4579.517911967057, -259970.51385643327, 1.7393494494076132, 0));
                scenicList.push(new Scenery("selvaTree", 3871.313252317325, -260454.20085676538, 3.57640683582189, 0));
                scenicList.push(new Scenery("selvaTree", 3458.507824274936, -259888.07357225116, 2.0492513280821933, 0));
                scenicList.push(new Scenery("selvaTree", 3160.477886702632, -260575.8608624016, 0.44185684939648306, 0));
                scenicList.push(new Scenery("selvaTree", 3572.212111452034, -261027.54438953943, 5.860048721300801, 0));
                scenicList.push(new Scenery("selvaTree", 2922.4122508034006, -261392.0687900657, 2.7489559690175023, 0));
                scenicList.push(new Scenery("selvaTree", 2286.7759195560543, -260840.81899290948, 2.1301483586601133, 0));
                scenicList.push(new Scenery("selvaTree", 1506.4337710204748, -261467.98367176123, 1.2994988918542658, 0));
                scenicList.push(new Scenery("selvaTree", 677.8480334259341, -261130.16679790607, 2.4485711294733314, 2));
                scenicList.push(new Scenery("selvaTree", -256.4030096225395, -261320.19168795348, 0.7432677313228816, 0));
                scenicList.push(new Scenery("selvaTree", 6119.175267859392, -260235.54987266872, 0.06977083489696345, 0));
                scenicList.push(new Scenery("selvaTree", 6551.521269377119, -260899.30902816795, 5.317558814973565, 0));
                scenicList.push(new Scenery("selvaTree", 5848.803867836289, -261425.24655735516, 4.039578553812557, 0));
                scenicList.push(new Scenery("selvaTree", 5245.14244312392, -260772.04948815829, 4.637777287894734, 0));
                scenicList.push(new Scenery("selvaTree", 4322.76355421948, -261370.7246174034, 0.008037030533136275, 0));
                scenicList.push(new Scenery("selvaTree", 5111.288352480252, -261836.33314591256, 3.7190742316532677, 0));
                scenicList.push(new Scenery("selvaTree", 6088.737769204111, -262283.7459615118, 4.317310202927329, 0));
                scenicList.push(new Scenery("selvaTree", 6688.565814340128, -261988.08218684152, 4.566412448690218, 0));
                scenicList.push(new Scenery("selvaTree", 6602.266478240653, -262698.400026396, 2.5060778617117796, 0));
                scenicList.push(new Scenery("selvaTree", 6208.593256983087, -263031.61151572026, 1.1758949895451105, 0));
                scenicList.push(new Scenery("selvaTree", 6660.3952033480655, -263146.6844888692, 4.7886084999445115, 0));
                scenicList.push(new Scenery("selvaTree", 5871.427300351798, -263710.4076032107, 5.8484739560919525, 0));
                scenicList.push(new Scenery("selvaTree", 6492.541199503315, -263732.4509544618, 5.200480716761086, 0));
                scenicList.push(new Scenery("selvaTree", 6137.57736694447, -264304.16455201106, 5.903531958944568, 0));
                scenicList.push(new Scenery("selvaTree", 5463.886116651516, -264118.0005034292, 4.912074975443793, 0));
                scenicList.push(new Scenery("selvaTree", 5001.951871273673, -263574.7347059865, 1.9528587409735927, 0));
                scenicList.push(new Scenery("selvaTree", 5435.317324358327, -263108.58645778155, 5.039526171414164, 0));
                scenicList.push(new Scenery("selvaTree", 5613.459878791194, -262503.0193697893, 2.0709090964143213, 0));
                scenicList.push(new Scenery("selvaTree", 4638.944135500057, -262654.02022634214, 2.5899347124001735, 0));
                scenicList.push(new Scenery("selvaTree", 4014.300757466076, -263618.8346500672, 3.969252972777593, 0));
                scenicList.push(new Scenery("selvaTree", 4487.327696237593, -264746.02763862076, 6.03700211977033, 0));
                scenicList.push(new Scenery("selvaTree", 5057.131157014005, -265218.6701767484, 5.8077094875877835, 0));
                scenicList.push(new Scenery("selvaTree", 5745.406068444243, -265904.53787284874, 5.502683183032824, 0));
                scenicList.push(new Scenery("selvaTree", 6404.459619699003, -266363.74055466056, 1.1702395382367137, 0));
                scenicList.push(new Scenery("selvaTree", 6332.347041264317, -265288.8916103807, 2.040181133275652, 0));
                scenicList.push(new Scenery("selvaTree", 6874.90159077363, -265804.3147937464, 5.525290724238231, 0));
                scenicList.push(new Scenery("selvaTree", 6733.221467170367, -264671.27227349876, 4.531561161399204, 0));
                scenicList.push(new Scenery("selvaTree", 5639.175504776973, -264960.03320192144, 4.312664036560091, 0));
                scenicList.push(new Scenery("selvaTree", 5092.515481753799, -264422.06510359934, 2.789500125291215, 0));
                scenicList.push(new Scenery("selvaTree", 4523.156003325847, -263976.67648764665, 1.8023495674307668, 0));
                scenicList.push(new Scenery("selvaTree", 3571.838584821447, -264501.20891578513, 3.1916499383460204, 0));
                scenicList.push(new Scenery("selvaTree", 2264.897987727676, -264455.96273346903, 0.41468709641936596, 0));
                scenicList.push(new Scenery("selvaTree", 2726.8334088208003, -265138.15177702735, 2.6968643164269612, 0));
                scenicList.push(new Scenery("selvaTree", 3204.590335277873, -265599.175614802, 1.3569860853585614, 0));
                scenicList.push(new Scenery("selvaTree", 3903.4409400798163, -266119.5012552104, 3.706503178242424, 0));
                scenicList.push(new Scenery("selvaTree", 4811.939540112596, -265575.1141148433, 0.6153717687611788, 0));
                scenicList.push(new Scenery("selvaTree", 4964.7527926936045, -266503.7416819134, 3.9689711456578616, 0));
                scenicList.push(new Scenery("selvaTree", 5129.344908516842, -267324.82652437326, 2.086668473587247, 0));
                scenicList.push(new Scenery("selvaTree", 4200.997484704929, -267558.8004470021, 0.9985497080540024, 0));
                scenicList.push(new Scenery("selvaTree", 3751.2084480606354, -266917.3542916353, 3.463146626753227, 0));
                scenicList.push(new Scenery("selvaTree", 3050.754221916511, -267596.48217134096, 4.367100083902059, 0));
                scenicList.push(new Scenery("selvaTree", 2301.644797649274, -266984.07552949473, 1.2728049397282413, 0));
                scenicList.push(new Scenery("selvaTree", 1502.69803035736, -267536.1606983817, 3.430588517005139, 0));
                scenicList.push(new Scenery("selvaTree", 3846.5162846180087, -262788.2214589846, 3.0057998246884474, 0));
                scenicList.push(new Scenery("selvaTree", 3533.3534643038065, -262375.08263073384, 2.7594553458878788, 0));
                scenicList.push(new Scenery("selvaTree", 4458.27769123422, -261980.11932220386, 2.4622093670429415, 0));
                scenicList.push(new Scenery("selvaTree", 3566.085467960932, -261840.76320357758, 5.711024179710387, 0));
                scenicList.push(new Scenery("selvaTree", 2890.739191648622, -262083.49462209851, 4.778595568699873, 0));
                scenicList.push(new Scenery("selvaTree", 3392.05720553415, -263350.2116975718, 0.16459417583673308, 0));
                scenicList.push(new Scenery("selvaTree", 2936.747982215133, -263040.6958357287, 4.020177823851078, 0));
                scenicList.push(new Scenery("selvaTree", 2788.5844153575404, -262510.63603433047, 5.83674234961262, 0));
                scenicList.push(new Scenery("selvaTree", 2212.803410974614, -261962.8982445264, 0.8249788548313579, 0));
                scenicList.push(new Scenery("selvaTree", 1736.565760620534, -262197.7703338114, 2.447769444924464, 0));
                scenicList.push(new Scenery("selvaTree", 2331.2024767847356, -262559.62509677134, 4.686128586222074, 0));
                scenicList.push(new Scenery("selvaTree", 1777.8917673143512, -262583.7530012652, 3.597086354026544, 0));
                scenicList.push(new Scenery("selvaTree", 1881.4436468243161, -263059.1397706429, 5.079778033829544, 0));
                scenicList.push(new Scenery("selvaTree", 2380.0342813422944, -263398.65771282325, 3.8301883843353637, 0));
                scenicList.push(new Scenery("selvaTree", 3039.5204215209915, -263787.7458511174, 2.915532758109828, 0));
                scenicList.push(new Scenery("selvaTree", 3500.243711254988, -263920.99899824033, 0.3398904740753809, 0));
                scenicList.push(new Scenery("selvaTree", 2892.4798575492214, -264140.3920522426, 5.576164692732073, 0));
                scenicList.push(new Scenery("selvaTree", 2986.2031932446603, -264614.1019554205, 4.469734688682991, 0));
                scenicList.push(new Scenery("selvaTree", 2447.557668050421, -263954.9313741805, 1.0871018705623459, 0));
                scenicList.push(new Scenery("selvaTree", 1840.3597350255902, -263805.2865622326, 0.2824391117134053, 0));
                scenicList.push(new Scenery("selvaTree", 1154.2868083617604, -263519.75539335964, 5.690261190913494, 0));
                scenicList.push(new Scenery("selvaTree", 1180.0666437493644, -262749.63472240965, 3.4633838556469807, 0));
                scenicList.push(new Scenery("selvaTree", 607.187744201223, -263073.0294876144, 2.3840715442923903, 0));
                scenicList.push(new Scenery("selvaTree", 378.1676004666942, -263669.5866871042, 0.447698621585481, 0));
                scenicList.push(new Scenery("selvaTree", 958.3832163017858, -264056.13668259076, 0.6626796035084762, 0));
                scenicList.push(new Scenery("selvaTree", 1387.6744456753133, -264588.91731051623, 2.3845219648086604, 0));
                scenicList.push(new Scenery("selvaTree", 2008.1595321678224, -265554.9031335616, 1.0571983108191207, 0));
                scenicList.push(new Scenery("selvaTree", 2470.817594893622, -266076.24177549424, 5.543013961356903, 0));
                scenicList.push(new Scenery("selvaTree", 3290.904588453677, -266336.8982159453, 1.7682576667841288, 0));
                scenicList.push(new Scenery("selvaTree", 2991.2671833612776, -266932.0697059559, 5.8777223850912925, 0));
                scenicList.push(new Scenery("selvaTree", 2361.3788713585477, -266413.87529288745, 3.281227009950665, 0));
                scenicList.push(new Scenery("selvaTree", 1655.2226136996496, -266015.21998869925, 5.120827327812088, 0));
                scenicList.push(new Scenery("selvaTree", 1439.448048187563, -266494.92253773706, 1.404480749045944, 0));
                scenicList.push(new Scenery("selvaTree", 1129.3113088406258, -266904.5607551442, 3.6699467397107477, 0));
                scenicList.push(new Scenery("selvaTree", 690.3340163299883, -267244.5524908962, 4.73136416281165, 0));
                scenicList.push(new Scenery("selvaTree", 699.6505547236782, -267881.4171040223, 1.846348037616708, 0));
                scenicList.push(new Scenery("selvaTree", 1360.789639033819, -268160.4928341862, 5.280632040823476, 0));
                scenicList.push(new Scenery("selvaTree", 2407.4516326516623, -267724.8361890759, 3.6993568366985303, 0));
                scenicList.push(new Scenery("selvaTree", 2424.2655008453175, -268352.7386287463, 2.2373573067777355, 0));
                scenicList.push(new Scenery("selvaTree", 3841.143585296995, -268042.40774943837, 4.3994824313173835, 0));
                scenicList.push(new Scenery("selvaTree", 4286.132593382943, -268600.4061528521, 5.098674499387533, 0));
                scenicList.push(new Scenery("selvaTree", 5270.955312454512, -268329.875679584, 5.821434552101014, 0));
                scenicList.push(new Scenery("selvaTree", 5003.03510338266, -267922.0368438612, 0.7741629109155723, 0));
                scenicList.push(new Scenery("selvaTree", 6047.753858105574, -267466.03237681254, 4.950535944978795, 0));
                scenicList.push(new Scenery("selvaTree", 5806.649842990189, -266726.1249391452, 3.77507397627468, 0));
                scenicList.push(new Scenery("selvaTree", 6462.495337128649, -267133.31192974927, 2.1226033235397557, 0));
                scenicList.push(new Scenery("selvaTree", 6695.253175854426, -267925.7087083112, 2.745276652810543, 0));
                scenicList.push(new Scenery("selvaTree", 6341.502541087451, -268532.45661210926, 2.1261645006385272, 0));
                scenicList.push(new Scenery("selvaTree", 6862.277480314462, -268320.4794127339, 3.6725797699518337, 0));
                scenicList.push(new Scenery("selvaTree", 5006.948263767332, -268773.12199122086, 6.0080415676905545, 0));
                scenicList.push(new Scenery("selvaTree", 3381.59148970668, -268727.46520231414, 4.604495057228546, 0));
                scenicList.push(new Scenery("selvaTree", 3044.38194043022, -268245.59296575456, 2.6290420812945774, 0));
                scenicList.push(new Scenery("selvaTree", 1766.9677519466345, -268657.1414941285, 5.988219849444361, 0));
                scenicList.push(new Scenery("selvaTree", 760.5222001191379, -268441.8725537625, 2.787429914838643, 0));
                scenicList.push(new Scenery("selvaTree", -181.97701292878932, -268211.3505414967, 2.3877602170962766, 0));
                scenicList.push(new Scenery("selvaTree", -794.4820545108985, -268669.8711261764, 5.6432382510178485, 0));
                scenicList.push(new Scenery("selvaTree", 1108.645349268474, -265399.4802672543, 0.7121449334135266, 0));
                scenicList.push(new Scenery("selvaTree", 761.9106520397322, -264946.09261481784, 3.769588946837442, 0));
                scenicList.push(new Scenery("selvaTree", -3.450868946841762, -264441.56905112334, 2.4606930547109527, 0));
                scenicList.push(new Scenery("selvaTree", -333.0266666087658, -265202.53166197153, 1.0333093209528272, 0));
                scenicList.push(new Scenery("selvaTree", -987.0206070107897, -264801.8861833819, 5.7492146422027135, 0));
                scenicList.push(new Scenery("selvaTree", -748.5564830221575, -264112.3422632782, 0.3512013992568732, 0));
                scenicList.push(new Scenery("selvaTree", 75.73513093672543, -263270.6352642482, 5.484871176270266, 0));
                scenicList.push(new Scenery("selvaTree", -1951.4739852501802, -264694.9628576743, 3.376502630303439, 0));
                scenicList.push(new Scenery("selvaTree", -1739.1972305191723, -265515.02261665685, 1.3628181117572553, 0));
                scenicList.push(new Scenery("selvaTree", -2156.0799554498217, -266329.2475606782, 5.132502572327114, 0));
                scenicList.push(new Scenery("selvaTree", -825.6277262778805, -265926.97280421, 0.4089587953363858, 0));
                scenicList.push(new Scenery("selvaTree", -273.86493541149787, -265927.65472366364, 1.583498252820528, 0));
                scenicList.push(new Scenery("selvaTree", 423.983720930312, -265404.27526982996, 5.872017060676609, 0));
                scenicList.push(new Scenery("selvaTree", 662.0226386227325, -266174.65576708905, 3.449290225871697, 0));
                scenicList.push(new Scenery("selvaTree", -301.7527123763473, -267112.5218960844, 0.23640144246860084, 0));
                scenicList.push(new Scenery("selvaTree", -1222.7493770391654, -267984.78121151373, 4.177092067817911, 0));
                scenicList.push(new Scenery("selvaTree", -2372.885049209108, -268568.55214114126, 3.4274451461131776, 0));
                scenicList.push(new Scenery("selvaTree", -2763.701663323263, -267962.6045127618, 3.9019535922953037, 0));
                scenicList.push(new Scenery("selvaTree", -1786.0623266754817, -267500.08765410486, 0.9328870261023595, 0));
                scenicList.push(new Scenery("selvaTree", -2709.847801933497, -267149.4379632595, 5.489144215335178, 0));
                scenicList.push(new Scenery("selvaTree", -1424.6460863524933, -266737.5754357933, 4.067358715365895, 0));
                scenicList.push(new Scenery("selvaTree", -2555.8613062455197, -266599.82227354636, 1.6724669262416307, 0));
                scenicList.push(new Scenery("selvaTree", -2929.5839311338, -265867.1175774097, 1.7727935960376784, 0));
                scenicList.push(new Scenery("selvaTree", -2451.3656452452487, -265226.05617234146, 2.9854376973772228, 0));
                scenicList.push(new Scenery("selvaTree", -2853.9784081309253, -264694.27677322977, 5.754516301307423, 0));
                scenicList.push(new Scenery("selvaTree", -1486.8848340119018, -266256.0594092661, 2.253063667510842, 0));
                scenicList.push(new Scenery("selvaTree", -1356.0883489185437, -264340.7824212701, 0.9916645424191155, 1));


                //REGION CREATION
                //Build AI Units
                //ArtificialIntelligenceAccess.push(new Unit(3000, 2500, "ZafBeetle", true, "Tzalit"));
                //scenicList.push(new Scenery("vinePatch", 3500, 2500, 0, 1));
                //scenicList.push(new Scenery("cerebrisPlant", 3500, 2500, 0, 1));
                //scenicList.push(new Scenery("gojiiPlant", 3500, 2500, 0, true));
                //scenicList.push(new Scenery("bahabPlant", 3500, 2500, 0, true));
                //scenicList.push(new Scenery("araneaDen", 3500, 2500, 0, false, true));
                //ArtificialIntelligenceAccess.push(new Unit(3000, 2500, "Gorgon", false, "Gra"));
                //ArtificialIntelligenceAccess.push(new Unit(3000, 2500, "Cruorcca", "massive", "Cruor"));
                //ArtificialIntelligenceAccess.push(new Unit(3908, 2500, "Kigarii", true, "Apex"));
                //ArtificialIntelligenceAccess.push(new Unit(3600, 2500, "Crenid", "massive", "Bulgg"));
                //scenicList.push(new Scenery("athergmPlant", 3990, 2500, 0, 1));
                //scenicList.push(new Scenery("decipulaBasePlant", 3670, 2500, 0, "massive"));
                //ArtificialIntelligenceAccess.push(new Unit(3500, 2500, "Zancudo", false, "proboscis"));
                //ArtificialIntelligenceAccess.push(new Unit(3550, 2500, "Venandi", true, "hunter"));
                //ArtificialIntelligenceAccess.push(new Unit(3570, 2500, "EtyrVenandi", true, "scout"));
                //ArtificialIntelligenceAccess.push(new Unit(3570, 2500, "AraneaVenandi", true, "tank"));
                //scenicList.push(new Scenery("valumPlant", 3990, 2500, 0, 1));
                //scenicList.push(new Scenery("decipulaPlant", 3670, 2500, 0, true));
                //ArtificialIntelligenceAccess.push(new Unit(3613, -240174, "Gorgon", false, "Gra"));
                //ArtificialIntelligenceAccess.push(new Unit(3700, 2500, "Boa", false, "constricto"));
                //ArtificialIntelligenceAccess.push(new Unit(3600, 2500, "PoisonDartFrog", true, "coqui"));
                //scenicList.push(new Scenery("sonjaTree", 3600, 2500, 0, true));
                //ArtificialIntelligenceAccess.push(new Unit(3600, 2500, "Babosa", true, "Glubber", {patrolStops: 3, patrolLoop: true, route:[[3600, 2500], [3500, 2550], [3650, 2600]]}));
                //scenicList.push(new Scenery("crilkPlant", 3600, 2500, 3.2, true));
                //ArtificialIntelligenceAccess.push(new Unit(3500, 2500, "BlackTroll", false, "Brufga"));
                //scenicList.push(new Scenery("overVines", 3600, 2500, 0, 4, 1));
                //scenicList.push(new Scenery("webVictim", 3600, 2500, 0, 3, 1));
                //scenicList.push(new Scenery("jungleStuff", 3600, 2500, 0.23, 2, 1));
                //scenicList.push(new Scenery("selvaTree", 3600, 2500, 0, 0));
                //ArtificialIntelligenceAccess.push(new Unit(2000, -240000, "Gulfrey", true, "Guld"));
                //ArtificialIntelligenceAccess.push(new Unit(5012, -240944, "Torper", true, "Shankstripes"));
                //ArtificialIntelligenceAccess.push(new Unit(1194, -240231, "Etyr", true, "Blackeye"));
                //scenicList.push(new Scenery("blilPlant", 2389 , -239760, 6.78, true));
                //scenicList.push(new Scenery("vinePatch", 3500, 2500, 0, 1));
                //ArtificialIntelligenceAccess.push(new Unit(3550, 2500, "Venandi", true, "hunter"));
                //ArtificialIntelligenceAccess.push(new Unit(3570, 2500, "EtyrVenandi", true, "scout"));
                //ArtificialIntelligenceAccess.push(new Unit(3570, 2500, "AraneaVenandi", true, "tank"));
                //ArtificialIntelligenceAccess.push(new Unit(3500, 2500, "Borea", true, "Ipskwich"));
                //ArtificialIntelligenceAccess.push(new Unit(3500, 2500, "Salisea", false, "Digit"));
                //ArtificialIntelligenceAccess.push(new Unit(4918.865336039311, -249334.1191245097, "PetraBeetle", true, "Iga"));
                //scenicList.push(new Scenery("matnaWeb", 3600, 2500, 0, 2.1));
                //ArtificialIntelligenceAccess.push(new Unit(3600, 2500, "Matna", false, "deathByter"));
                //scenicList.push(new Scenery("pyromothWeb", 3700, 2500, 0, 1, true));
                //ArtificialIntelligenceAccess.push(new Unit(3700, 2500, "Pyromoth", true, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[3600, 2500], [3500, 2550], [3650, 2600]]}));


                //Animals

                //mosquitos
                ArtificialIntelligenceAccess.push(new Unit(4269.803829079993, -259402.49298615917, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(4640.5994572750615, -260188.46422221122, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(6050.452565452965, -260423.85140678284, "Zancudo", true, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(6487.141985411079, -261021.3462442532, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(5229.448078868083, -261797.7259446977, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(4997.406973334392, -263461.79535097996, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(5525.359712849768, -263144.50176342984, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(6140.201406803113, -262995.80003570893, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(5643.802587693002, -264073.46328313876, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(5744.659770027101, -264921.8995393215, "Zancudo", true, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(6620.76239403375, -264694.8411742891, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(5814.380816211047, -265793.2685654835, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(3973.868818197966, -267621.1970594778, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(2318.334495932765, -267812.92024736974, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(1350.1467852270307, -267344.58490628743, "Zancudo", true, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(553.9233177106274, -267237.8639792498, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(-1454.303564053199, -266170.2498388885, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(-2703.358251204129, -267819.0300121837, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(-2372.7427788453433, -265452.5293690334, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(-2418.170902612062, -262137.14472565943, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(-1544.9040357892588, -260777.55224930847, "Zancudo", false, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(-1160.32352465748, -260196.2153157505, "Zancudo", true, "proboscis"));
                ArtificialIntelligenceAccess.push(new Unit(-146.34275012765815, -261315.07523048948, "Zancudo", false, "proboscis"));

                //silk web
                scenicList.push(new Scenery("pyromothWeb", 5202.023520843928, -260833.07256089375, 8.5, 1.9, false));
                scenicList.push(new Scenery("pyromothWeb", 5182.136724292073, -260785.982217097, 7.5, 1.8, true));
                scenicList.push(new Scenery("pyromothWeb", 5158.422840688663, -260825.88973776187, 6.5, 1.9, true));
                scenicList.push(new Scenery("pyromothWeb", 5258.99306798978, -260833.2027562627, 5.5, 2, false));
                scenicList.push(new Scenery("pyromothWeb", 5298.442788298497, -260731.52624619586, 4.5, 1.7, false));
                scenicList.push(new Scenery("pyromothWeb", 5264.170028115285, -260700.4416497506, 3.5, 1.8, false));
                scenicList.push(new Scenery("pyromothWeb", 5211.229102850447, -260699.35828365778, 2.5, 1.9, false));
                scenicList.push(new Scenery("pyromothWeb", 5170.5033567710725, -260745.01868992025, 1.5, 2, true));
                scenicList.push(new Scenery("pyromothWeb", 5143.032854180979, -260710.8404205633, 9.5, 1.75, false));
                scenicList.push(new Scenery("pyromothWeb", 5296.686449568767, -260848.64319283568, 8, 1.8, true));
                scenicList.push(new Scenery("pyromothWeb", 5311.063733571117, -260815.75325317343, 7, 1.9, false));
                scenicList.push(new Scenery("pyromothWeb", 5299.660138768576, -260777.6740378878, 6, 1.95, true));
                scenicList.push(new Scenery("pyromothWeb", 4551.934820275825, -260758.67111553557, 5, 1.8, true));
                scenicList.push(new Scenery("pyromothWeb", 4581.494906726502, -260800.7331911931, 4, 1.85, false));
                scenicList.push(new Scenery("pyromothWeb", 4530.106667814906, -260792.25479197147, 3, 1.9, true));
                scenicList.push(new Scenery("pyromothWeb", 4506.47432640891, -260762.88901003014, 2, 2, true));
                scenicList.push(new Scenery("pyromothWeb", 4451.5896311881015, -260717.87271330494, 1, 1.7, true));
                scenicList.push(new Scenery("pyromothWeb", 4458.46649773349, -260668.25852880118, 0.5, 1.9, false));
                scenicList.push(new Scenery("pyromothWeb", 4452.422758581761, -260757.80441214546, 0, 2, true));
                scenicList.push(new Scenery("pyromothWeb", 3918.41489431579, -260508.81309724104, -0.7, 1.8, true));
                scenicList.push(new Scenery("pyromothWeb", 3864.0719498386466, -260524.2248782942, -1.4, 1.9, false));
                scenicList.push(new Scenery("pyromothWeb", 3895.0204501630105, -260542.5891355048, -2.1, 1.75, false));
                scenicList.push(new Scenery("pyromothWeb", 3811.808954041577, -260483.02839307464, -2.8, 1.85, false));
                scenicList.push(new Scenery("pyromothWeb", 3788.7776735522157, -260510.68076117907, -3.5, 1.75, false));
                scenicList.push(new Scenery("pyromothWeb", 3760.4770005349046, -260464.77632556806, -4.2, 2, true));
                scenicList.push(new Scenery("pyromothWeb", 3793.094719549204, -260425.04454722404, -4.9, 1.85, true));
                scenicList.push(new Scenery("pyromothWeb", 3862.662288976458, -260390.0944646811, -5.6, 1.95, false));
                scenicList.push(new Scenery("pyromothWeb", 3819.97072194999, -260370.10920510124, -3.9, 1.8, true));
                scenicList.push(new Scenery("pyromothWeb", 3921.188777754823, -260419.1351399643, -1.6, 1.95, false));
                scenicList.push(new Scenery("pyromothWeb", 4312.120159829035, -261301.57696800862, -3.9, 1.9, true));
                scenicList.push(new Scenery("pyromothWeb", 4371.441248855981, -261315.92113270587, -5.6, 1.85, false));
                scenicList.push(new Scenery("pyromothWeb", 4380.495774003381, -261409.73840081284, -8.9, 1.75, false));
                scenicList.push(new Scenery("pyromothWeb", 3827.4147826693106, -260400.2289419662, 6.9, 2.75, true));
                scenicList.push(new Scenery("pyromothWeb", 4400.999836714025, -261349.1692851699, -0.6, 1.95, false));
                scenicList.push(new Scenery("pyromothWeb", 4358.528431264525, -261276.1720661907, -9.9, 1.7, true));
                scenicList.push(new Scenery("pyromothWeb", 3795.6154465364084, -260455.2055675528, 2.7, 1.5, false));
                scenicList.push(new Scenery("pyromothWeb", 4672.456563232898, -262591.8058631848, -11.6, 2, false));

                ArtificialIntelligenceAccess.push(new Unit(4374.728023183254, -261415.35004280598, "Pyromoth", false, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[4922.445925120089, -261026.2655011074], [4506.597658258431, -260350.37489392216], [4149.878672801568, -260864.9347136809]]}));
                ArtificialIntelligenceAccess.push(new Unit(4394.823321652654, -261333.1368335051, "Pyromoth", true, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[4550.341057338279, -260941.87179168887], [4016.108937472709, -260997.13360568523], [3993.9633039078526, -261516.5915724642]]}));
                ArtificialIntelligenceAccess.push(new Unit(4319.678262080488, -261303.33490210754, "Pyromoth", true, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[4151.282795156203, -261299.63946977316], [3979.708519668682, -261709.84116105735], [3684.429078173389, -261420.879853775]]}));

                ArtificialIntelligenceAccess.push(new Unit(5184.504782107487, -260832.6973276676, "Pyromoth", false, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[4974.235655369779, -261124.95518088088], [5307.611436219217, -261277.4034525869], [4645.741225175337, -261473.76560163402]]}));
                ArtificialIntelligenceAccess.push(new Unit(5253.3502661986295, -260835.86647344328, "Pyromoth", true, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[4741.469415701861, -261131.11144564595], [5421.834971317158, -261730.3968234436], [5461.545977679089, -261224.25088178954]]}));
                ArtificialIntelligenceAccess.push(new Unit(5298.083142955871, -260817.22857961434, "Pyromoth", false, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[5611.7859234652715, -261019.32175247726], [6121.1496458209895, -261106.2493947143], [5769.121356645528, -260466.25092043405]]}));
                ArtificialIntelligenceAccess.push(new Unit(5291.869666961932, -260718.15617282162, "Pyromoth", false, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[4546.644349951893, -260381.17730118326], [4775.482882549208, -260841.90504963204], [5478.0444532949405, -260264.7822467209]]}));
                ArtificialIntelligenceAccess.push(new Unit(5207.958530509781, -260709.25814285572, "Pyromoth", false, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[5800.777368185567, -260749.78155517075], [5509.371166282503, -260409.4154859872], [6198.200449054615, -260688.08995164733]]}));
                ArtificialIntelligenceAccess.push(new Unit(5158.581149883719, -260730.669250966, "Pyromoth", true, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[5915.3221553954945, -261014.01991720678], [5615.106243463765, -260811.06990347864], [6122.132268836255, -260506.69678383946]]}));

                ArtificialIntelligenceAccess.push(new Unit(4578.237204976154, -260798.95256848686, "Pyromoth", false, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[5005.884610895907, -260281.8007114303], [4299.889577541493, -260510.66687177605], [4699.512020654861, -260646.34560513575]]}));
                ArtificialIntelligenceAccess.push(new Unit(4455.070741707775, -260755.79914846263, "Pyromoth", true, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[4249.150714738456, -260755.80772346357], [4411.667710333483, -260920.39524799833], [3990.5402356082955, -260935.20883123297]]}));
                ArtificialIntelligenceAccess.push(new Unit(4468.328456353887, -260664.04912215698, "Pyromoth", false, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[4186.536949523978, -260889.7661673509], [4198.330803892696, -260199.6481215158], [4863.098966069076, -260702.47782578264]]}));

                ArtificialIntelligenceAccess.push(new Unit(3880.2099511304427, -260537.71420784152, "Pyromoth", true, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[4858.8745732619, -261344.96719190184], [4795.094213375881, -260975.58214203647], [3921.146974911236, -261128.0391471937]]}));
                ArtificialIntelligenceAccess.push(new Unit(3796.222223179316, -260498.88083170346, "Pyromoth", false, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[3719.46065286578, -260194.97883554798], [3135.3482200001486, -260290.0246022686], [3621.5924678014258, -260439.91707741917]]}));
                ArtificialIntelligenceAccess.push(new Unit(3807.8929479269436, -260425.39626269587, "Pyromoth", false, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[3965.3203729060247, -259895.10984053308], [4431.55612725956, -259635.42894726185], [4378.905267895647, -260597.64032882694]]}));
                ArtificialIntelligenceAccess.push(new Unit(3864.0135715823308, -260385.35607701517, "Pyromoth", false, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[4074.4800994295288, -260846.82011348286], [3387.497267235249, -260433.3771734148], [4101.357965126312, -259733.9229455689]]}));
                ArtificialIntelligenceAccess.push(new Unit(3928.2247837641194, -260425.0654886384, "Pyromoth", true, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[4175.925417882983, -260794.4589853232], [4889.896859681867, -260920.245736022], [4666.79422965094, -260170.44459246914]]}));

                ArtificialIntelligenceAccess.push(new Unit(4672.456563232898, -262591.8058631848, "Pyromoth", false, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[5081.806843452209, -262780.1729005377], [4564.993859715438, -263183.1684683729], [4053.6180234121575, -261991.23967912197]]}));


                scenicList.push(new Scenery("matnaWeb", 711.542791121957, -263579.33285234094, 1, 3));
                scenicList.push(new Scenery("matnaWeb", 622.4310944685602, -263484.61812568345, 2, 2.1));
                scenicList.push(new Scenery("matnaWeb", 717.8131847174468, -263499.78367504396, 2, 1.5));
                scenicList.push(new Scenery("matnaWeb", 580.7184096288204, -263602.76293653465, 1, 1.9));
                scenicList.push(new Scenery("matnaWeb", 536.4051778949428, -263527.6440234545, 3, 2.6));
                scenicList.push(new Scenery("matnaWeb", 686.9354530300573, -263419.61888618063, 4, 3.1));
                scenicList.push(new Scenery("matnaWeb", 795.9227540840594, -263562.2678825696, 5, 2.9));
                scenicList.push(new Scenery("matnaWeb", 914.4349987097538, -263526.5261301833, 33, 2.2));
                scenicList.push(new Scenery("matnaWeb", 826.9549964194061, -263476.34285308665, 3, 1.4));
                scenicList.push(new Scenery("matnaWeb", 882.3842484621052, -263392.71320729563, 5, 1.6));
                scenicList.push(new Scenery("matnaWeb", 968.8630214771075, -263443.60972203605, 66, 2.7));
                scenicList.push(new Scenery("matnaWeb", 1028.2505752744592, -263529.1151277369, 7, 2.8));
                scenicList.push(new Scenery("matnaWeb", 1100.9290436079295, -263456.83351561567, 0, 2.5));
                scenicList.push(new Scenery("matnaWeb", 771.4640113417272, -263406.83072160115, 9, 1.6));
                scenicList.push(new Scenery("matnaWeb", 695.7359712278537, -263308.13663959666, 11, 1.85));
                scenicList.push(new Scenery("matnaWeb", 622.7632423346347, -263359.7432071138, 21, 1.92));
                scenicList.push(new Scenery("matnaWeb", 528.8287404780706, -263438.6432445237, 67, 2.14));
                scenicList.push(new Scenery("matnaWeb", 475.88649103291823, -263343.98739320785, 2, 2.1));
                scenicList.push(new Scenery("matnaWeb", 540.7860069207203, -263267.2683510292, 3, 2));
                scenicList.push(new Scenery("matnaWeb", 635.5701390156975, -263244.7838079651, 0.67, 1.4));
                scenicList.push(new Scenery("matnaWeb", 743.8359227800343, -263234.25597781234, 4, 1.2));
                scenicList.push(new Scenery("matnaWeb", 686.9390001841505, -263173.7981361192, 2, 1.5));
                scenicList.push(new Scenery("matnaWeb", 566.0041032894562, -263191.72345454973, 2, 1.8));
                scenicList.push(new Scenery("matnaWeb", 632.0216973631896, -263140.1515477885, 0.1, 1.99));
                scenicList.push(new Scenery("matnaWeb", 433.6132368306281, -263276.67379784584, 56, 1.9));
                scenicList.push(new Scenery("matnaWeb", 306.8324539824556, -263335.6015095918, 5, 1.66));
                scenicList.push(new Scenery("matnaWeb", 244.52545539304478, -263260.7272336817, 43, 1.7));
                scenicList.push(new Scenery("matnaWeb", 175.8463238675142, -263354.7269512563, 1, 2.6));
                scenicList.push(new Scenery("matnaWeb", 137.57483881085466, -263300.64936496585, 2.1, 2.75));
                scenicList.push(new Scenery("matnaWeb", 308.16115879706666, -263441.05610475765, 4.17, 2.98));
                scenicList.push(new Scenery("matnaWeb", 385.0920909931817, -263386.82583657483, 5, 2.9));
                scenicList.push(new Scenery("matnaWeb", 448.15417010684143, -263470.57531964773, 33, 2.2));
                scenicList.push(new Scenery("matnaWeb", 829.1804533274257, -263351.5973188615, 3, 1.4));
                scenicList.push(new Scenery("matnaWeb", 775.7791490667593, -263315.57039734453, 5, 1.6));
                scenicList.push(new Scenery("matnaWeb", 874.503077514828, -263252.9937439104, 66, 2.7));
                scenicList.push(new Scenery("matnaWeb", 928.6791037908768, -263318.84671164036, 7, 2.8));
                scenicList.push(new Scenery("matnaWeb", 1046.3775128394716, -263359.68811176583, 0, 2.5));
                scenicList.push(new Scenery("matnaWeb", 1031.0512840634924, -263255.45508793194, 9, 1.6));
                scenicList.push(new Scenery("matnaWeb", 941.0139890467383, -263171.806323363, 11, 1.85));
                scenicList.push(new Scenery("matnaWeb", 1029.6404556198443, -263177.2062473451, 21, 1.92));
                scenicList.push(new Scenery("matnaWeb", 1031.1490567093165, -263106.0313124439, 67, 2.14));
                scenicList.push(new Scenery("matnaWeb", 1105.6387713669037, -263132.0639932609, 21, 1.92));
                scenicList.push(new Scenery("matnaWeb", 1181.8989556367424, -263206.5786088367, 67, 2.14));
                scenicList.push(new Scenery("matnaWeb", 1158.8235833241233, -263304.31259127497, 2, 2.1));
                scenicList.push(new Scenery("matnaWeb", 1235.6789309882074, -263260.0266665673, 3, 2));
                scenicList.push(new Scenery("matnaWeb", 1266.615424174856, -263334.43279491964, 0.67, 1.4));
                scenicList.push(new Scenery("matnaWeb", 1350.0479721039858, -263399.05268500006, 4, 1.2));
                scenicList.push(new Scenery("matnaWeb", 1349.4893252673476, -263333.91830807674, 2, 1.5));
                scenicList.push(new Scenery("matnaWeb", 830.056603313503, -263418.3498298618, 2, 1));
                scenicList.push(new Scenery("matnaWeb", 868.7933517049055, -263437.34446271637, 3, 1));
                scenicList.push(new Scenery("matnaWeb", 815.657634663721, -263276.9782133386, 0.67, 1));
                scenicList.push(new Scenery("matnaWeb", 860.8282486174146, -263155.19459974277, 4, 1));
                scenicList.push(new Scenery("matnaWeb", 967.6879057156928, -263224.621975865, 2, 1));

                ArtificialIntelligenceAccess.push(new Unit(1032.9660053006135, -263115.4608290161, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(1014.0173636268543, -263169.4380993793, "Matna", true, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(1118.766797249022, -263183.04560599226, "Matna", true, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(1172.9854999820404, -263296.3527932676, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(1220.825250700848, -263235.66330487415, "Matna", true, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(1344.0127806786927, -263356.83001403237, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(698.0986005709826, -263595.0055318976, "Matna", true, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(722.8944596456432, -263516.5251154429, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(826.7813420071186, -263478.9238307368, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(982.552768433982, -263511.5076168161, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(1046.3190363160475, -263469.24064900534, "Matna", true, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(1114.8038971241826, -263443.59412550565, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(1022.0074786773441, -263391.4674044189, "Matna", true, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(931.7894683332206, -263383.4502535763, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(888.2097264947794, -263287.11762673594, "Matna", true, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(709.5025297812775, -263315.99423762586, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(638.297014942165, -263413.86385921616, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(595.1271037550013, -263311.903073869, "Matna", true, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(630.8358982071026, -263238.8489896462, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(612.4161692465699, -263160.4082050187, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(367.021370527228, -263370.637738837, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(461.69277986821504, -263472.52273422375, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(239.05260378584137, -263365.26638325996, "Matna", true, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(172.41457131042188, -263307.43722878327, "Matna", false, "deathByter"));
                ArtificialIntelligenceAccess.push(new Unit(152.73476290372764, -263361.8274339532, "Matna", false, "deathByter"));


                ArtificialIntelligenceAccess.push(new Unit(5749.104938630086, -260663.86369006475, "PoisonDartFrog", true, "coqui"));
                ArtificialIntelligenceAccess.push(new Unit(1571.8385731948845, -259159.26898569742, "PoisonDartFrog", false, "coqui"));
                ArtificialIntelligenceAccess.push(new Unit(-82.08277258699725, -260969.4431342987, "PoisonDartFrog", false, "coqui"));
                ArtificialIntelligenceAccess.push(new Unit(-601.3444679231691, -267700.7618114963, "PoisonDartFrog", false, "coqui"));


                ArtificialIntelligenceAccess.push(new Unit(5954.342494364304, -260864.16158235632, "PetraBeetle", true, "Iga"));
                ArtificialIntelligenceAccess.push(new Unit(1969.4050327679272, -259305.16013501878, "PetraBeetle", false, "Iga"));
                ArtificialIntelligenceAccess.push(new Unit(1900.6741474198823, -265034.6693848448, "PetraBeetle", false, "Iga"));

                ArtificialIntelligenceAccess.push(new Unit(3519.971668998765, -259074.1381384746, "Salisea", true, "Digit"));

                ArtificialIntelligenceAccess.push(new Unit(-2151.961149498817, -260754.7825341946, "Boa", false, "constricto"));


                ArtificialIntelligenceAccess.push(new Unit(5803.68815106469, -262841.29015757603, "Crenid", "massive", "Bulgg"));
                ArtificialIntelligenceAccess.push(new Unit(6186.1168581740585, -263183.26607095165, "Crenid", "massive", "Bulge"));
                ArtificialIntelligenceAccess.push(new Unit(5979.061660353685, -263592.6013487039, "Crenid", true, "Bulge"));
                ArtificialIntelligenceAccess.push(new Unit(5218.220871651891, -263066.2531396759, "Crenid", false, "Bulge"));
                ArtificialIntelligenceAccess.push(new Unit(2625.928981133707, -267360.80492916645, "Crenid", "massive", "Bulge"));
                ArtificialIntelligenceAccess.push(new Unit(1685.7013354430953, -266920.35869494855, "Crenid", false, "Bulge"));

                ArtificialIntelligenceAccess.push(new Unit(4896.868345686636, -263228.3306215461, "Cruorcca", true, "Cruor"));
                ArtificialIntelligenceAccess.push(new Unit(4373.050912052841, -263012.739660678, "Cruorcca", true, "Cruor"));
                ArtificialIntelligenceAccess.push(new Unit(4126.112722467591, -263537.56575281324, "Cruorcca", false, "Cruor"));
                ArtificialIntelligenceAccess.push(new Unit(3973.5069740881104, -259713.1713679376, "Cruorcca", false, "Cruor"));
                ArtificialIntelligenceAccess.push(new Unit(-1966.2414667769106, -267972.678436393, "Cruorcca", false, "Cruor"));

                ArtificialIntelligenceAccess.push(new Unit(2872.489557301989, -262517.36951612675, "Etyr", false, "Blackeye"));
                ArtificialIntelligenceAccess.push(new Unit(2920.1932794411227, -262397.52715489984, "Etyr", false, "Blackeye"));
                ArtificialIntelligenceAccess.push(new Unit(2762.1757767036625, -262292.1605769792, "Etyr", true, "Blackeye"));
                ArtificialIntelligenceAccess.push(new Unit(2795.895428820782, -261996.55846261748, "Etyr", false, "Blackeye"));
                ArtificialIntelligenceAccess.push(new Unit(2629.538517597956, -262610.19645110046, "Etyr", false, "Blackeye"));
                ArtificialIntelligenceAccess.push(new Unit(2774.037949184009, -262835.4393097099, "Etyr", false, "Blackeye"));
                ArtificialIntelligenceAccess.push(new Unit(3046.4502538592556, -263028.65987455426, "Etyr", false, "Blackeye"));
                ArtificialIntelligenceAccess.push(new Unit(2994.7392416544717, -263193.5776723688, "Etyr", false, "Blackeye"));
                ArtificialIntelligenceAccess.push(new Unit(3463.352064962917, -263210.952834816, "EtyrVenandi", true, "scout"));

                ArtificialIntelligenceAccess.push(new Unit(2460.8061318824825, -261621.07362082347, "Babosa", false, "Glubber", {patrolStops: 5, patrolLoop: true, route:[[1990.933324790878, -261565.7587326989], [1843.5548941994662, -261415.22998687538], [2459.42299509663, -261473.89863432117], [2306.5928925290405, -261493.6128657583], [2460.8061318824825, -261621.07362082347]]}));
                ArtificialIntelligenceAccess.push(new Unit(-1905.7374218792677, -262040.60500600297, "Babosa", true, "Glubber", {patrolStops: 5, patrolLoop: true, route:[[-1820.6933792104232, -262215.1927815059], [-1597.6116374879293, -262095.21717143196], [-1321.5314174366042, -262185.9122657355], [-1185.9624774260874, -261859.4728084011], [-1905.7374218792677, -262040.60500600297]]}));

                ArtificialIntelligenceAccess.push(new Unit(1681.3558238292387, -260249.83237899176, "Gulfrey", true, "Guld"));

                ArtificialIntelligenceAccess.push(new Unit(273.1374574797518, -260001.55880512673, "Kigarii", false, "Apex"));
                ArtificialIntelligenceAccess.push(new Unit(4635.879759575706, -266955.67214333516, "Kigarii", true, "Apex"));

                //vines
                scenicList.push(new Scenery("overVines", 5554.70967462545, -261093.6262693448, 2.4 + 1/2 * Math.PI, 2, 0.4));
                scenicList.push(new Scenery("overVines", 5523.293297024121, -261102.3185662407, 2.5 + 1/2 * Math.PI, 2, 0.4));
                scenicList.push(new Scenery("overVines", 5556.438227465363, -261060.105011923, 2.35 + 1/2 * Math.PI, 2, 0.5));
                scenicList.push(new Scenery("overVines", -1154.8052791815055, -259713.7124840554, 1.5 + 1/2 * Math.PI, 4, 1.7));
                scenicList.push(new Scenery("overVines", -1205.2599470496466, -259651.91496844456, 2.8 + 1/2 * Math.PI, 1, 0.6));
                scenicList.push(new Scenery("overVines", -1080.2061069410247, -259502.03842091028, 4.04 + 1/2 * Math.PI, 1, 3));
                scenicList.push(new Scenery("overVines", -2519.136923852883, -260266.0014857257, 2.04 + 1/2 * Math.PI, 1, 1.5));
                scenicList.push(new Scenery("overVines", -2519.136923852883, -260266.0014857257, 2.9, 2, 0.9));
                scenicList.push(new Scenery("overVines", -95.35357001196743, -261965.29728880405, 0.06 + 1/2 * Math.PI, 2, 1.4));
                scenicList.push(new Scenery("overVines", 4282.638579192958, -265747.6624170115, 3.7 + 1/2 * Math.PI, 2, 1.12));

                scenicList.push(new Scenery("vinePatch", 6034.193221243634, -261368.41499466178, 1.15, 3.26));
                scenicList.push(new Scenery("vinePatch", 3728.4846229260806, -262491.8521197386, 2.15, 4.34));
                scenicList.push(new Scenery("vinePatch", -1258.5491353322884, -259575.76926021616, 1.56, 1.56));

                //Plants
                scenicList.push(new Scenery("morshPlant", 4857.5664245748985, -261269.01242977037, 2.5, true));
                scenicList.push(new Scenery("morshPlant", 4417.549886880482, -263411.75912739703, 4.5, true));
                scenicList.push(new Scenery("morshPlant", -762.3181761627527, -260927.56723164715, 9.56, true));

                scenicList.push(new Scenery("crilkPlant", 2093.7695372243134, -260470.7285480992, 4.8, true));
                scenicList.push(new Scenery("crilkPlant", 821.7739269763672, -259317.56604620256, -1.2, true));
                scenicList.push(new Scenery("crilkPlant", -2488.8960647483004, -261359.02182588534, -5.7, true));
                scenicList.push(new Scenery("crilkPlant", -1672.3505703738972, -262193.6903354082, -4.3, true));
                scenicList.push(new Scenery("crilkPlant", 4176.357599035673, -267269.9730521145, 4.5, true));
                scenicList.push(new Scenery("crilkPlant", 5585.88890123568, -264488.9056430031, -7.5, true));

                scenicList.push(new Scenery("blilPlant", 2346.043596218452, -261328.39220413272, 8.88, true));
                scenicList.push(new Scenery("blilPlant", 1380.2852001620563, -260850.31617402995, 4.88, true));
                scenicList.push(new Scenery("blilPlant", -1736.455523960932, -260275.34195776194, 5, true));
                scenicList.push(new Scenery("blilPlant", 4306.632953414962, -266485.32116305706, 1.5, true));

                scenicList.push(new Scenery("bahabPlant", 5999.7624171702555, -260972.48364782424, 2, true));
                scenicList.push(new Scenery("bahabPlant", 5653.314646302119, -260850.06088074943, 2.3, true));
                scenicList.push(new Scenery("bahabPlant", 5805.835355466302, -260779.29937380587, 5, true));
                scenicList.push(new Scenery("bahabPlant", 6131.793424524885, -260723.38847668347, 5.6, true));
                scenicList.push(new Scenery("bahabPlant", 5865.6681777282065, -260645.9338969951, 0, true));
                scenicList.push(new Scenery("bahabPlant", 5638.719117251768, -260528.9867876961, 0.9, true));
                scenicList.push(new Scenery("bahabPlant", -1881.2392243768063, -263713.54323973635, 30, true));

                scenicList.push(new Scenery("valumPlant", 5197.36655843433, -260077.98141034157, 6, 1));
                scenicList.push(new Scenery("valumPlant", 5670.036562739987, -259818.15665452258, 6, 1));
                scenicList.push(new Scenery("valumPlant", 3667.409576084825, -261422.51652893538, 10, 1));
                scenicList.push(new Scenery("valumPlant", -1266.4313024867424, -263351.62063255266, 70, 1));
                scenicList.push(new Scenery("valumPlant", 4566.965924971434, -265920.3841465193, 77, 1));

                scenicList.push(new Scenery("decipulaPlant", 5704.174722008882, -262056.70815647295, 3.25, false));
                scenicList.push(new Scenery("decipulaPlant", -492.3976455081914, -259353.24163151486, 5.1, false));
                scenicList.push(new Scenery("decipulaBasePlant", 5035.561597248472, -262296.12855861, 7, "massive"));
                scenicList.push(new Scenery("decipulaBasePlant", 4476.410637304893, -267949.47278123914, 7, true));

                scenicList.push(new Scenery("cerebrisPlant", 3748.8113172177254, -263283.6676830767, -2.4, 1));
                scenicList.push(new Scenery("cerebrisPlant", 3459.441933864003, -263020.7364963823, 2.4, 1));
                scenicList.push(new Scenery("cerebrisPlant", 3487.9209162300917, -262849.0209283592, 2.2, 1));
                scenicList.push(new Scenery("cerebrisPlant", 3156.66356280045, -262734.195309178, -5.5, 1));
                scenicList.push(new Scenery("cerebrisPlant", 3204.699991902742, -262368.24199241673, 5.7, 1));
                scenicList.push(new Scenery("cerebrisPlant", 3642.7302521290762, -265745.26268771803, 51, 1));
                scenicList.push(new Scenery("cerebrisPlant", 4113.005688852541, -265543.5853202275, 3, 1));
                scenicList.push(new Scenery("cerebrisPlant", 4472.061069942149, -265910.2877904976, 52, 1));
                scenicList.push(new Scenery("cerebrisPlant", 4324.726609849201, -265131.86851691984, 45, 1));
                scenicList.push(new Scenery("cerebrisPlant", 4653.077527968725, -265149.5236375416, 5.7, 1));
                scenicList.push(new Scenery("cerebrisPlant", 3801.002046538707, -265369.94011823204, 21, 1));
                scenicList.push(new Scenery("cerebrisPlant", 3238.787192213151, -265202.9821096797, 9, 1));
                scenicList.push(new Scenery("cerebrisPlant", 3556.075601987135, -265077.69826522435, 0.78, 1));
                scenicList.push(new Scenery("cerebrisPlant", 4006.550472690758, -264966.2220356442, 51, 1));
                scenicList.push(new Scenery("cerebrisPlant", 4059.1333561037177, -264509.955307244, 3, 1));
                scenicList.push(new Scenery("cerebrisPlant", 4047.283844540133, -264120.67130639387, 52, 1));
                scenicList.push(new Scenery("cerebrisPlant", 4714.301922883041, -264379.5992574575, 46, 1));
                scenicList.push(new Scenery("cerebrisPlant", 5317.4881918805995, -266221.0355849394, 5.7, 1));
                scenicList.push(new Scenery("cerebrisPlant", 4537.9043783956, -267191.590341996, 11, 1));
                scenicList.push(new Scenery("cerebrisPlant", 4815.740698655899, -267020.7035083028, 35, 1));
                scenicList.push(new Scenery("cerebrisPlant", 4544.77596073842, -266831.6108425615, 32, 1));
                scenicList.push(new Scenery("cerebrisPlant", 6030.741485589818, -268183.41342025285, 22, 1));
                scenicList.push(new Scenery("cerebrisPlant", 5539.154241483463, -267901.619250499, 23, 1));

                scenicList.push(new Scenery("gojiiPlant", 3332.017448849407, -267062.0654235848, 70, true));


                scenicList.push(new Scenery("athergmPlant", 3145.216724887294, -261751.03192985064, 3.6, 1));
                scenicList.push(new Scenery("athergmPlant", -2042.6088585103491, -259548.9460585754, 4.1, 1));

                change = "s26";
            }
        }
        else if (region == "s26w1") //Silvestre third of the jungle, but a little bit to the left of that actually
        {
            if (change != "s26w1")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        //console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        //console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                scenicList.push(new Scenery("selvaTree", 5979.992737801118, -258200.9576693212,3.6143684631721746, 0, undefined)); //copied s26
                scenicList.push(new Scenery("selvaTree", 6853.248715529339, -258479.30797243607,5.0301668878086065, 0, undefined)); //copied s26
                scenicList.push(new Scenery("sonjaTree", 6731.827842214851, -264194.5234148736,0.8609703310231208, 0, undefined)); //copied s26
                scenicList.push(new Scenery("sonjaTree", 5487.2730912011475, -265407.7385954542,1.2531468967053414, 0, undefined)); //copied s26
                scenicList.push(new Scenery("selvaTree", 5490.944903023085, -258846.48858048374,1.512365552174078, 0, undefined)); //copied s26
                scenicList.push(new Scenery("selvaTree", 6119.175267859392, -260235.54987266872,0.06977083489696345, 0, undefined)); //copied s26
                scenicList.push(new Scenery("selvaTree", 6551.521269377119, -260899.30902816795,5.317558814973565, 0, undefined)); //copied s26
                scenicList.push(new Scenery("selvaTree", 5848.803867836289, -261425.24655735516,4.039578553812557, 0, undefined)); //copied s26
                scenicList.push(new Scenery("selvaTree", 6088.737769204111, -262283.7459615118,4.317310202927329, 0, undefined)); //copied s26
                scenicList.push(new Scenery("selvaTree", 6688.565814340128, -261988.08218684152,4.566412448690218, 0, undefined)); //copied s26
                scenicList.push(new Scenery("selvaTree", 6602.266478240653, -262698.400026396,2.5060778617117796, 0, undefined)); //copied s26
                scenicList.push(new Scenery("selvaTree", 6208.593256983087, -263031.61151572026,1.1758949895451105, 0, undefined)); //copied s26
                scenicList.push(new Scenery("selvaTree", 6660.3952033480655, -263146.6844888692,4.7886084999445115, 0, undefined)); //copied s26
                scenicList.push(new Scenery("selvaTree", 5871.427300351798, -263710.4076032107,5.8484739560919525, 0, undefined)); //copied s26
                scenicList.push(new Scenery("selvaTree", 6492.541199503315, -263732.4509544618,5.200480716761086, 0, undefined)); //copied s26
                scenicList.push(new Scenery("selvaTree", 6137.57736694447, -264304.16455201106,5.903531958944568, 0, undefined)); //copied s26
                scenicList.push(new Scenery("selvaTree", 5613.459878791194, -262503.0193697893,2.0709090964143213, 0, undefined)); //copied s26
                scenicList.push(new Scenery("selvaTree", 5745.406068444243, -265904.53787284874,5.502683183032824, 0, undefined)); //copied s26
                scenicList.push(new Scenery("selvaTree", 6404.459619699003, -266363.74055466056,1.1702395382367137, 0, undefined)); //copied s26
                scenicList.push(new Scenery("selvaTree", 6332.347041264317, -265288.8916103807,2.040181133275652, 0, undefined)); //copied s26
                scenicList.push(new Scenery("selvaTree", 6874.90159077363, -265804.3147937464,5.525290724238231, 0, undefined)); //copied s26
                scenicList.push(new Scenery("selvaTree", 6733.221467170367, -264671.27227349876,4.531561161399204, 0, undefined)); //copied s26
                scenicList.push(new Scenery("selvaTree", 5639.175504776973, -264960.03320192144,4.312664036560091, 0, undefined)); //copied s26
                scenicList.push(new Scenery("selvaTree", 6047.753858105574, -267466.03237681254,4.950535944978795, 0, undefined)); //copied s26
                scenicList.push(new Scenery("selvaTree", 5806.649842990189, -266726.1249391452,3.77507397627468, 0, undefined)); //copied s26
                scenicList.push(new Scenery("selvaTree", 6462.495337128649, -267133.31192974927,2.1226033235397557, 0, undefined)); //copied s26
                scenicList.push(new Scenery("selvaTree", 6695.253175854426, -267925.7087083112,2.745276652810543, 0, undefined)); //copied s26
                scenicList.push(new Scenery("selvaTree", 6341.502541087451, -268532.45661210926,2.1261645006385272, 0, undefined)); //copied s26
                scenicList.push(new Scenery("selvaTree", 6862.277480314462, -268320.4794127339,3.6725797699518337, 0, undefined)); //copied s26
                scenicList.push(new Scenery("overVines", 5554.70967462545, -261093.6262693448,3.9707963267948965, 2, 0.4)); //copied s26
                scenicList.push(new Scenery("overVines", 5523.293297024121, -261102.3185662407,4.070796326794897, 2, 0.4)); //copied s26
                scenicList.push(new Scenery("overVines", 5556.438227465363, -261060.105011923,3.9207963267948966, 2, 0.5)); //copied s26
                scenicList.push(new Scenery("vinePatch", 6034.193221243634, -261368.41499466178,1.15, 3.26, undefined)); //copied s26
                scenicList.push(new Scenery("crilkPlant", 5585.88890123568, -264488.9056430031,-7.5, true, undefined)); //copied s26
                scenicList.push(new Scenery("bahabPlant", 5999.7624171702555, -260972.48364782424,2, true, undefined)); //copied s26
                scenicList.push(new Scenery("bahabPlant", 5653.314646302119, -260850.06088074943,2.3, true, undefined)); //copied s26
                scenicList.push(new Scenery("bahabPlant", 5805.835355466302, -260779.29937380587,5, true, undefined)); //copied s26
                scenicList.push(new Scenery("bahabPlant", 6131.793424524885, -260723.38847668347,5.6, true, undefined)); //copied s26
                scenicList.push(new Scenery("bahabPlant", 5865.6681777282065, -260645.9338969951,0, true, undefined)); //copied s26
                scenicList.push(new Scenery("bahabPlant", 5638.719117251768, -260528.9867876961,0.9, true, undefined)); //copied s26
                scenicList.push(new Scenery("valumPlant", 5670.036562739987, -259818.15665452258,6, 1, undefined)); //copied s26
                scenicList.push(new Scenery("decipulaPlant", 5704.174722008882, -262056.70815647295,3.25, false, undefined)); //copied s26
                scenicList.push(new Scenery("cerebrisPlant", 6030.741485589818, -268183.41342025285,22, 1, undefined)); //copied s26
                scenicList.push(new Scenery("cerebrisPlant", 5539.154241483463, -267901.619250499,23, 1, undefined)); //copied s26

                //scenicList.push(new Scenery("selvaTree", 5979.992737801118, -258200.9576693212,3.6143684631721746, 0)); //copied s25

                //REGION CREATION
                //Build AI Units
                //ArtificialIntelligenceAccess.push(new Unit(3000, 2500, "ZafBeetle", true, "Tzalit"));
                //scenicList.push(new Scenery("vinePatch", 3500, 2500, 0, 1));
                //scenicList.push(new Scenery("cerebrisPlant", 3500, 2500, 0, 1));
                //scenicList.push(new Scenery("gojiiPlant", 3500, 2500, 0, true));
                //scenicList.push(new Scenery("bahabPlant", 3500, 2500, 0, true));
                //scenicList.push(new Scenery("araneaDen", 3500, 2500, 0, false, true));
                //ArtificialIntelligenceAccess.push(new Unit(3000, 2500, "Gorgon", false, "Gra"));
                //ArtificialIntelligenceAccess.push(new Unit(3000, 2500, "Cruorcca", "massive", "Cruor"));
                //ArtificialIntelligenceAccess.push(new Unit(3908, 2500, "Kigarii", true, "Apex"));
                //ArtificialIntelligenceAccess.push(new Unit(3600, 2500, "Crenid", "massive", "Bulgg"));
                //scenicList.push(new Scenery("athergmPlant", 3990, 2500, 0, 1));
                //scenicList.push(new Scenery("decipulaBasePlant", 3670, 2500, 0, "massive"));
                //ArtificialIntelligenceAccess.push(new Unit(3500, 2500, "Zancudo", false, "proboscis"));
                //ArtificialIntelligenceAccess.push(new Unit(3550, 2500, "Venandi", true, "hunter"));
                //ArtificialIntelligenceAccess.push(new Unit(3570, 2500, "EtyrVenandi", true, "scout"));
                //ArtificialIntelligenceAccess.push(new Unit(3570, 2500, "AraneaVenandi", true, "tank"));
                //scenicList.push(new Scenery("valumPlant", 3990, 2500, 0, 1));
                //scenicList.push(new Scenery("decipulaPlant", 3670, 2500, 0, true));
                //ArtificialIntelligenceAccess.push(new Unit(3613, -240174, "Gorgon", false, "Gra"));
                //ArtificialIntelligenceAccess.push(new Unit(3700, 2500, "Boa", false, "constricto"));
                //ArtificialIntelligenceAccess.push(new Unit(3600, 2500, "PoisonDartFrog", true, "coqui"));
                //scenicList.push(new Scenery("sonjaTree", 3600, 2500, 0, true));
                //ArtificialIntelligenceAccess.push(new Unit(3600, 2500, "Babosa", true, "Glubber", {patrolStops: 3, patrolLoop: true, route:[[3600, 2500], [3500, 2550], [3650, 2600]]}));
                //scenicList.push(new Scenery("crilkPlant", 3600, 2500, 3.2, true));
                //ArtificialIntelligenceAccess.push(new Unit(3500, 2500, "BlackTroll", false, "Brufga"));
                //scenicList.push(new Scenery("overVines", 3600, 2500, 0, 4, 1));
                //scenicList.push(new Scenery("webVictim", 3600, 2500, 0, 3, 1));
                //scenicList.push(new Scenery("jungleStuff", 3600, 2500, 0.23, 2, 1));
                //scenicList.push(new Scenery("selvaTree", 3600, 2500, 0, 0));
                //ArtificialIntelligenceAccess.push(new Unit(2000, -240000, "Gulfrey", true, "Guld"));
                //ArtificialIntelligenceAccess.push(new Unit(5012, -240944, "Torper", true, "Shankstripes"));
                //ArtificialIntelligenceAccess.push(new Unit(1194, -240231, "Etyr", true, "Blackeye"));
                //scenicList.push(new Scenery("blilPlant", 2389 , -239760, 6.78, true));
                //scenicList.push(new Scenery("vinePatch", 3500, 2500, 0, 1));
                //ArtificialIntelligenceAccess.push(new Unit(3550, 2500, "Venandi", true, "hunter"));
                //ArtificialIntelligenceAccess.push(new Unit(3570, 2500, "EtyrVenandi", true, "scout"));
                //ArtificialIntelligenceAccess.push(new Unit(3570, 2500, "AraneaVenandi", true, "tank"));
                //ArtificialIntelligenceAccess.push(new Unit(3500, 2500, "Borea", true, "Ipskwich"));
                //ArtificialIntelligenceAccess.push(new Unit(3500, 2500, "Salisea", false, "Digit"));
                //ArtificialIntelligenceAccess.push(new Unit(4918.865336039311, -249334.1191245097, "PetraBeetle", true, "Iga"));
                //scenicList.push(new Scenery("matnaWeb", 3600, 2500, 0, 2.1));
                //ArtificialIntelligenceAccess.push(new Unit(3600, 2500, "Matna", false, "deathByter"));
                //scenicList.push(new Scenery("pyromothWeb", 3700, 2500, 0, 1, true));
                //ArtificialIntelligenceAccess.push(new Unit(3700, 2500, "Pyromoth", true, "Palomilla de Brasas", {patrolStops: 3, patrolLoop: true, route:[[3600, 2500], [3500, 2550], [3650, 2600]]}));

                scenicList.push(new Scenery("sonjaTree", 8711.759693586524, -265484.6668942399, 2.8028181717422687, 0));
                scenicList.push(new Scenery("sonjaTree", 8118.968304427456, -265063.4618833693, 2.7310827269693725, 0));
                scenicList.push(new Scenery("sonjaTree", 9089.09714556853, -264917.2595228358, 0.10720668678271154, 0));
                scenicList.push(new Scenery("sonjaTree", 10796.864971883875, -268585.4332180695, 3.5456236307634477, 0));
                scenicList.push(new Scenery("sonjaTree", 7722.1637219309205, -261816.73430376174, 0.7501313289643081, 0));
                scenicList.push(new Scenery("sonjaTree", 9499.655805334625, -260057.58234240967, 5.931540224559284, 0));

                scenicList.push(new Scenery("selvaTree", 7298.891098694153, -259471.22391159387, 0.67666, 0));
                scenicList.push(new Scenery("selvaTree", 7855.447256456343, -258977.84061635702, 6.935, 0));
                scenicList.push(new Scenery("selvaTree", 7963.095355301206, -259558.35014350052, 4.334968935848048, 0));
                scenicList.push(new Scenery("selvaTree", 7733.601254721195, -260557.67285110857, 5.067580513596619, 0));
                scenicList.push(new Scenery("selvaTree", 8334.23133896276, -260079.91520713078, 4.022513505883732, 0));
                scenicList.push(new Scenery("selvaTree", 8385.836706922822, -260528.6265365491, 2.110331623371533, 0));
                scenicList.push(new Scenery("selvaTree", 8779.343586104473, -260312.74695905723, 1.9713165441741822, 0));
                scenicList.push(new Scenery("selvaTree", 8070.647431231623, -261171.76919261494, 4.694989629392563, 0));
                scenicList.push(new Scenery("selvaTree", 7445.329611336628, -261310.08448146618, 5.579102251760134, 0));
                scenicList.push(new Scenery("selvaTree", 9766.73913397866, -259322.87085972854, 4.170360787482448, 0));
                scenicList.push(new Scenery("selvaTree", 10163.599850351002, -260465.39204030682, 2.4804855201072833, 0));
                scenicList.push(new Scenery("selvaTree", 9781.37557258111, -261830.98623076064, 4.747463804769836, 0));
                scenicList.push(new Scenery("selvaTree", 10928.897350088644, -263074.9272230674, 0.7673284487296281, 0));
                scenicList.push(new Scenery("selvaTree", 9644.866599626133, -264607.72658969887, 2.8937150247632957, 0));
                scenicList.push(new Scenery("selvaTree", 8470.483152762263, -266523.4430572679, 2.6311324970413734, 0));
                scenicList.push(new Scenery("selvaTree", 7533.81903074728, -267125.8831318959, 0.36941014485234325, 0));
                scenicList.push(new Scenery("selvaTree", 8317.28770379971, -268192.95585087617, 4.42937124852401, 0));
                scenicList.push(new Scenery("selvaTree", 10154.321761230269, -267157.11768295, 0.38410354226790694, 0));
                scenicList.push(new Scenery("selvaTree", 13038.253532729965, -266382.3310561237, 2.713798524999263, 0));
                scenicList.push(new Scenery("selvaTree", 15346.656849077017, -264124.96776692854, 4.540307688964474, 0));
                scenicList.push(new Scenery("selvaTree", 15158.450653024469, -261818.69211588884, 5.380989591927817, 0));
                scenicList.push(new Scenery("selvaTree", 16723.036722076406, -259459.72894471488, 5.338238751573885, 0));
                scenicList.push(new Scenery("selvaTree", 14318.352583732283, -258951.42892433234, 2.9279983703786305, 0));
                scenicList.push(new Scenery("selvaTree", 12492.511321483395, -259615.08149555363, 4.148438580375659, 0));
                scenicList.push(new Scenery("selvaTree", 13602.172217138987, -262017.64708037575, 1.8250647682670713, 0));
                scenicList.push(new Scenery("selvaTree", 9516.88920786571, -263804.2701267916, 0.9435891183845264, 0));
                scenicList.push(new Scenery("selvaTree", 9819.02450505561, -266237.2566008081, 1.508202009307841, 0));
                scenicList.push(new Scenery("selvaTree", 10171.213635592008, -266711.5583250037, 2.6096656774647125, 0));
                scenicList.push(new Scenery("selvaTree", 9461.103558235081, -266613.8640471758, 3.7723741481539723, 0));
                scenicList.push(new Scenery("selvaTree", 11849.253277103033, -267722.1336945848, 2.7133331639345695, 0));
                scenicList.push(new Scenery("selvaTree", 12087.796519547599, -266222.0422947857, 1.420816286243595, 0));
                scenicList.push(new Scenery("selvaTree", 12667.441726546298, -265991.7063602207, 1.2146949396586941, 0));
                scenicList.push(new Scenery("selvaTree", 13444.467065890405, -265896.1872030175, 1.3399800266316055, 0));
                scenicList.push(new Scenery("selvaTree", 14290.182081453506, -266386.9775915988, 5.829838377064181, 0));
                scenicList.push(new Scenery("selvaTree", 14620.732412920715, -267082.86215876864, 4.916584403701245, 0));
                scenicList.push(new Scenery("selvaTree", 15364.272835978503, -267895.73031756043, 1.423759607789905, 0));
                scenicList.push(new Scenery("selvaTree", 16326.177506945507, -268338.9286566301, 4.063671877283582, 0));
                scenicList.push(new Scenery("selvaTree", 14343.374246809872, -268236.34874592314, 3.467209274959934, 0));
                scenicList.push(new Scenery("selvaTree", 12952.761649332659, -268363.78781632805, 1.9802314439167343, 0));
                scenicList.push(new Scenery("selvaTree", 11039.20990940252, -268115.48940273025, 4.1614504189194035, 0));
                scenicList.push(new Scenery("selvaTree", 10079.747643253637, -268268.8788426893, 0.09894172817961085, 0));
                scenicList.push(new Scenery("selvaTree", 15734.128260829762, -266754.54677287414, 4.31203186544025, 0));
                scenicList.push(new Scenery("selvaTree", 16202.246608726913, -267676.97459807765, 1.7985610692837626, 0));
                scenicList.push(new Scenery("selvaTree", 16715.346779265157, -266668.2381529121, 2.7522519865684036, 0));
                scenicList.push(new Scenery("selvaTree", 15030.857913741898, -265987.8107914039, 0.4757118874299355, 0));
                scenicList.push(new Scenery("selvaTree", 14825.384092767625, -264744.50612092466, 2.1774832286351393, 0));
                scenicList.push(new Scenery("selvaTree", 13204.61781063624, -267911.92212335, 1.1691212697687623, 0));
                scenicList.push(new Scenery("selvaTree", 11861.720321665136, -268567.1688273417, 2.356504486943683, 0));
                scenicList.push(new Scenery("selvaTree", 9326.335968269968, -268549.0060525843, 4.55648943551902, 0));
                scenicList.push(new Scenery("selvaTree", 9179.246946967074, -266942.43491850037, 1.5572230491919252, 0));
                scenicList.push(new Scenery("selvaTree", 7409.330594159564, -267971.5362204457, 4.377901377420078, 0));
                scenicList.push(new Scenery("selvaTree", 7612.730226842353, -267523.5183535672, 4.614761507493678, 0));
                scenicList.push(new Scenery("selvaTree", 8214.69064059637, -267690.8397091003, 3.339908875369401, 0));
                scenicList.push(new Scenery("selvaTree", 7657.881984005219, -268475.63249523565, 3.9956031179745035, 0));
                scenicList.push(new Scenery("selvaTree", 8794.277541044163, -268568.22864898376, 4.086397875712299, 0));
                scenicList.push(new Scenery("selvaTree", 8852.02218444405, -268302.4981506884, 3.3877116237608726, 0));
                scenicList.push(new Scenery("selvaTree", 8954.015391368657, -267844.5961222039, 0.44301579682972325, 0));
                scenicList.push(new Scenery("selvaTree", 10302.697327632857, -267566.8733381212, 3.0603361307950654, 0));
                scenicList.push(new Scenery("selvaTree", 9494.984449263426, -267482.91029149597, 2.261015636797855, 0));
                scenicList.push(new Scenery("selvaTree", 9837.989298464476, -267630.68991449254, 0.2947647985898849, 0));
                scenicList.push(new Scenery("selvaTree", 9468.650465733057, -268008.8701166224, 1.0717171615396315, 0));
                scenicList.push(new Scenery("selvaTree", 8622.094666771312, -267346.3991130437, 2.107783613760992, 0));
                scenicList.push(new Scenery("selvaTree", 8971.912318183602, -267258.84082448203, 5.641349648282927, 0));
                scenicList.push(new Scenery("selvaTree", 8140.971109315111, -266118.9578685666, 4.461797836231368, 0));
                scenicList.push(new Scenery("selvaTree", 8535.953763040767, -266236.22133431747, 1.6553783632148018, 0));
                scenicList.push(new Scenery("selvaTree", 8660.005246561352, -266394.77241532627, 4.046965578844028, 0));
                scenicList.push(new Scenery("selvaTree", 8463.370497613429, -266033.8452104547, 2.861803690686344, 0));
                scenicList.push(new Scenery("selvaTree", 8807.715848200354, -265982.7223552534, 5.035976530319316, 0));
                scenicList.push(new Scenery("selvaTree", 7523.031312653906, -264965.4000852782, 4.098184974427386, 0));
                scenicList.push(new Scenery("selvaTree", 7542.52216015692, -264280.32781347155, 4.677346359434924, 0));
                scenicList.push(new Scenery("selvaTree", 7264.559742933161, -263802.4592216272, 4.395171051515943, 0));
                scenicList.push(new Scenery("selvaTree", 8012.966512625111, -264051.6435438879, 4.689597174081305, 0));
                scenicList.push(new Scenery("selvaTree", 9122.285316725585, -264105.0400768167, 4.072636841791005, 0));
                scenicList.push(new Scenery("selvaTree", 8779.300053418661, -263203.7898802193, 1.8609949269404291, 0));
                scenicList.push(new Scenery("selvaTree", 8662.706682778853, -261553.73190029463, 4.6306921086824975, 0));
                scenicList.push(new Scenery("selvaTree", 9394.766225282236, -261177.31414214266, 2.8351007272852775, 0));
                scenicList.push(new Scenery("selvaTree", 9482.057310942402, -260548.16268889385, 0.2813465915570385, 0));
                scenicList.push(new Scenery("selvaTree", 9005.955651724464, -259899.09249790525, 1.1263696136149013, 0));
                scenicList.push(new Scenery("selvaTree", 8853.5302080568, -259056.56039649423, 4.447955093664571, 0));
                scenicList.push(new Scenery("selvaTree", 11827.026207325538, -259151.6827338902, 6.240290541624467, 0));
                scenicList.push(new Scenery("selvaTree", 11617.999036246638, -260188.45324061278, 5.462420763072754, 0));
                scenicList.push(new Scenery("selvaTree", 13526.361356247917, -261474.01441717386, 5.057847048460877, 0));
                scenicList.push(new Scenery("selvaTree", 10214.365155077858, -265068.67544060154, 2.7036957720830923, 0));
                scenicList.push(new Scenery("selvaTree", 11146.308874023029, -266822.99984714796, 1.1961094463738704, 0));
                scenicList.push(new Scenery("selvaTree", 11121.526996917532, -267352.7003722346, 5.182615887034737, 0));
                scenicList.push(new Scenery("selvaTree", 12393.108714092834, -267987.34876638703, 5.709600362154308, 0));
                scenicList.push(new Scenery("selvaTree", 13465.287886862538, -267304.2129693943, 5.346978781795018, 0));
                scenicList.push(new Scenery("selvaTree", 14072.426622915658, -267563.25994336343, 3.791909426112557, 0));
                scenicList.push(new Scenery("selvaTree", 15116.209974002983, -268521.04888405633, 0.8819160038813987, 0));
                scenicList.push(new Scenery("selvaTree", 16979.35704722781, -267957.2270450506, 5.664765304496606, 0));
                scenicList.push(new Scenery("selvaTree", 16736.27357384789, -267271.7355756341, 4.4661832198379265, 0));
                scenicList.push(new Scenery("selvaTree", 16196.831182171725, -267101.4029762362, 0.09078667333708801, 0));
                scenicList.push(new Scenery("selvaTree", 16283.063058322234, -265110.2087107139, 2.572095281110116, 0));
                scenicList.push(new Scenery("selvaTree", 16665.82378303784, -265646.9738624431, 4.0290383202887226, 0));
                scenicList.push(new Scenery("selvaTree", 16145.507077630793, -266166.19332466426, 2.3285671009424815, 0));
                scenicList.push(new Scenery("selvaTree", 16099.717179302943, -265764.23851044377, 3.9865750501018016, 0));
                scenicList.push(new Scenery("selvaTree", 16717.313092162043, -264911.6225548765, 5.9576488819099875, 0));
                scenicList.push(new Scenery("selvaTree", 16536.911475182817, -263432.6733845043, 0.35494314399600285, 0));
                scenicList.push(new Scenery("selvaTree", 16295.517696287088, -261640.14955963462, 2.782575748692246, 0));
                scenicList.push(new Scenery("selvaTree", 15777.875840829458, -261241.014792843, 6.023447212525011, 0));
                scenicList.push(new Scenery("selvaTree", 16537.762658142805, -260715.01002866472, 5.3419253941271885, 0));
                scenicList.push(new Scenery("selvaTree", 15880.445400133562, -260121.07718097835, 2.121356124600052, 0));
                scenicList.push(new Scenery("selvaTree", 15079.779347744763, -258999.75381892917, 5.186497178590096, 0));
                scenicList.push(new Scenery("selvaTree", 14470.331607306745, -259721.3907702262, 1.7833936846388327, 0));
                scenicList.push(new Scenery("selvaTree", 13625.430043443535, -259408.22436279192, 1.1279880784682448, 0));
                scenicList.push(new Scenery("selvaTree", 13292.917761924495, -258897.1631740735, 3.165465924378559, 0));
                scenicList.push(new Scenery("selvaTree", 12728.648200877336, -259022.93391906723, 5.83840423043384, 0));
                scenicList.push(new Scenery("selvaTree", 12407.127463273615, -258693.4305854976, 1.6928320210890222, 0));
                scenicList.push(new Scenery("selvaTree", 11163.31097858257, -258940.63828563027, 2.7747105884543886, 0));
                scenicList.push(new Scenery("selvaTree", 10317.879649909932, -258854.40718396308, 2.1616887030388785, 0));
                scenicList.push(new Scenery("selvaTree", 7422.534809538577, -262122.1784324811, 2.2355390737574425, 0));
                scenicList.push(new Scenery("selvaTree", 8328.114672284852, -262755.45958705334, 0.06258679738968677, 0));
                scenicList.push(new Scenery("selvaTree", 8573.578242706873, -262365.612954953, 5.315332069349272, 0));
                scenicList.push(new Scenery("selvaTree", 11497.487866916092, -261337.237554089, 2.7869387896838216, 0));
                scenicList.push(new Scenery("selvaTree", 12607.712116311535, -262438.57926212106, 0.8961137210316908, 0));
                scenicList.push(new Scenery("selvaTree", 13255.647349194933, -263383.97131796175, 0.6085004331875216, 0));
                scenicList.push(new Scenery("selvaTree", 14114.330618522254, -264271.05628597405, 1.4485698796853053, 0));
                scenicList.push(new Scenery("selvaTree", 14572.955071715965, -263789.7705666104, 0.6976996673592829, 0));
                scenicList.push(new Scenery("selvaTree", 15657.030203322285, -263131.21646957914, 1.392516829438134, 0));
                scenicList.push(new Scenery("selvaTree", 16398.649996825658, -264361.73819559853, 1.158280707867918, 0));
                scenicList.push(new Scenery("selvaTree", 15991.468624138111, -262058.18592774647, 2.715837317876232, 0));
                scenicList.push(new Scenery("selvaTree", 16841.731562567315, -261343.90779616253, 0.6723802947570248, 0));
                scenicList.push(new Scenery("selvaTree", 16811.208106778122, -262505.62513958564, 2.8031646813342173, 0));
                scenicList.push(new Scenery("selvaTree", 16318.364351438033, -262905.93512021063, 3.4610592621218608, 0));
                scenicList.push(new Scenery("selvaTree", 14561.141040427681, -262788.404197379, 5.796065750593366, 0));
                scenicList.push(new Scenery("selvaTree", 8254.664825501672, -264574.04875710886, 4.1419358532976833, 0));
                scenicList.push(new Scenery("selvaTree", 9469.15224314182, -265161.8105874146, 0, 0));
                scenicList.push(new Scenery("selvaTree", 7336.266345603575, -263088.545959501, 3.9384050569662707, 0));
                scenicList.push(new Scenery("selvaTree", 7565.362182217615, -262705.5250887462, 0.6623338183972799, 0));
                scenicList.push(new Scenery("selvaTree", 7897.526779500769, -263460.11535209307, 0.6035601130175139, 0));
                scenicList.push(new Scenery("selvaTree", 9619.319561431184, -263116.77141959086, 5.264291864905394, 0));
                scenicList.push(new Scenery("selvaTree", 10179.294487970208, -264117.46750793315, 0.11894862300755776, 0));
                scenicList.push(new Scenery("selvaTree", 10859.79911729273, -264479.1342564319, 1.8297448404684127, 0));
                scenicList.push(new Scenery("selvaTree", 11035.434728659226, -263904.55814832746, 1.0175203926455672, 0));
                scenicList.push(new Scenery("selvaTree", 11566.63330780876, -264565.5328990744, 5.2308201345148015, 0));
                scenicList.push(new Scenery("selvaTree", 10553.896771195588, -265914.22664469376, 1.0736013086914753, 0));
                scenicList.push(new Scenery("selvaTree", 10771.648067936769, -265411.62521580665, 4.087540381915418, 0));
                scenicList.push(new Scenery("selvaTree", 11124.440514090944, -265802.76973605185, 2.718560452774538, 0));
                scenicList.push(new Scenery("selvaTree", 12484.831527461412, -267249.28940431, 2.1861137736109644, 0));
                scenicList.push(new Scenery("selvaTree", 11929.846294113915, -266952.0460613652, 0.5655959048774044, 0));
                scenicList.push(new Scenery("selvaTree", 12939.254019215625, -265361.76713243994, 4.144685930280296, 0));
                scenicList.push(new Scenery("selvaTree", 14494.550829246826, -265483.4159227844, 2.724427924625283, 0));
                scenicList.push(new Scenery("selvaTree", 14075.81868685736, -265831.8277113604, 0.7176633328416602, 0));
                scenicList.push(new Scenery("selvaTree", 13748.099925736504, -265278.22921683907, 5.050896000240836, 0));
                scenicList.push(new Scenery("selvaTree", 14132.942288506298, -264869.7492428329, 0.8280262276383623, 0));
                scenicList.push(new Scenery("selvaTree", 13382.26599663818, -264587.0069670729, 4.475584494516093, 0));
                scenicList.push(new Scenery("selvaTree", 14052.235573731192, -263267.7376232223, 2.8563315019651005, 0));
                scenicList.push(new Scenery("selvaTree", 13694.688468462042, -262954.52693444415, 3.687342707297833, 0));
                scenicList.push(new Scenery("selvaTree", 13988.070689565951, -262486.25748469145, 5.93981752391926, 0));
                scenicList.push(new Scenery("selvaTree", 14491.868982423173, -262087.29755053957, 5.9856250360151, 0));
                scenicList.push(new Scenery("selvaTree", 14456.79886301681, -261075.06654326702, 2.189516708563887, 0));
                scenicList.push(new Scenery("selvaTree", 15062.71950295081, -260355.26772904705, 6.049340659812883, 0));
                scenicList.push(new Scenery("selvaTree", 15355.562146733848, -259501.35982063657, 1.2549154461959207, 0));
                scenicList.push(new Scenery("selvaTree", 16203.329189301698, -259288.38791032755, 3.1178376811683877, 0));
                scenicList.push(new Scenery("selvaTree", 15313.721464361754, -260781.60801350343, 3.1492719039262527, 0));
                scenicList.push(new Scenery("selvaTree", 14986.06623941337, -261205.6111788682, 5.393874268018411, 0));
                scenicList.push(new Scenery("selvaTree", 13216.471639922942, -260053.99865720188, 1.4792860347282626, 0));
                scenicList.push(new Scenery("selvaTree", 12986.087762897863, -260371.79139822867, 0.054756675140377485, 0));
                scenicList.push(new Scenery("selvaTree", 13329.091322146478, -260617.14777752783, 3.6095074121048483, 0));
                scenicList.push(new Scenery("selvaTree", 10517.481410864057, -261228.48707531826, 1.450970441050025, 0));
                scenicList.push(new Scenery("selvaTree", 10001.258072082539, -261276.22665629452, 5.091131383555768, 0));
                scenicList.push(new Scenery("selvaTree", 9626.889144362534, -262586.76858549926, 2.5778922035842036, 0));
                scenicList.push(new Scenery("selvaTree", 11855.32845625729, -263917.8961912834, 2.178244372351786, 0));
                scenicList.push(new Scenery("selvaTree", 12656.318064119536, -264187.64745672385, 4.536007262714684, 0));
                scenicList.push(new Scenery("selvaTree", 12669.013074810004, -263642.80635793094, 2.834304384213943, 0));
                scenicList.push(new Scenery("selvaTree", 11973.062236275133, -263389.4539065085, 5.010204528462767, 0));
                scenicList.push(new Scenery("selvaTree", 10374.180716843466, -262557.62629910937, 3.0282020567201644, 0));
                scenicList.push(new Scenery("selvaTree", 10473.670087253033, -262054.28026409625, 1.19594603876247, 0));
                scenicList.push(new Scenery("selvaTree", 10942.729165155035, -261765.94030210236, 3.5424671196318815, 0));
                scenicList.push(new Scenery("selvaTree", 11534.741558810249, -262066.71639783075, 5.4510608043221005, 0));
                scenicList.push(new Scenery("selvaTree", 11479.421799881384, -262531.50435840257, 0.9112553916581501, 0));
                scenicList.push(new Scenery("selvaTree", 10913.038385415966, -262306.72621978994, 2.066395004949104, 0));
                scenicList.push(new Scenery("selvaTree", 12236.526125227761, -262846.63726531295, 0.4353894046036031, 0));
                scenicList.push(new Scenery("selvaTree", 11640.209888234414, -263051.09143507393, 6.27468610428313, 0));
                scenicList.push(new Scenery("selvaTree", 12547.94925750651, -263262.4263145156, 5.0172434936882375, 0));
                scenicList.push(new Scenery("selvaTree", 12151.245071136069, -265314.4130835, 3.119987511952034, 0));
                scenicList.push(new Scenery("selvaTree", 11996.506854870267, -265693.3177033798, 4.992856536604676, 0));
                scenicList.push(new Scenery("selvaTree", 11360.27911813424, -265276.74129268463, 1.6865569114911643, 0));
                scenicList.push(new Scenery("selvaTree", 12070.439059415574, -264793.7923355237, 5.55241236315139, 0));
                scenicList.push(new Scenery("selvaTree", 12685.001491799992, -264555.83757350047, 5.3591377538753235, 0));
                scenicList.push(new Scenery("selvaTree", 12135.605107116995, -264357.3374979211, 4.769329267183254, 0));
                scenicList.push(new Scenery("selvaTree", 11496.612002106447, -263547.0824641573, 1.821664817023068, 0));
                scenicList.push(new Scenery("selvaTree", 10773.067124245916, -262618.5514176373, 1.9533804068742433, 0));
                scenicList.push(new Scenery("selvaTree", 10515.671163848012, -259756.4802480603, 3.093792538217778, 0));
                scenicList.push(new Scenery("selvaTree", 11235.383909739525, -259596.1991867478, 4.432176090094036, 0));
                scenicList.push(new Scenery("selvaTree", 10580.365742746246, -259351.01207067657, 1.9689192469858874, 0));
                scenicList.push(new Scenery("selvaTree", 12476.390326823594, -260671.40480929086, 4.60594112795178, 0));
                scenicList.push(new Scenery("selvaTree", 12255.971863455718, -261138.01237086256, 5.521956338615777, 0));
                scenicList.push(new Scenery("selvaTree", 12815.85022351355, -260999.99566497427, 4.2268048297857534, 0));
                scenicList.push(new Scenery("selvaTree", 13963.910546740826, -260345.11845618437, 3.5168082346755827, 0));
                scenicList.push(new Scenery("selvaTree", 14557.012585900458, -260251.3799596852, 0.8108306029328022, 0));
                scenicList.push(new Scenery("selvaTree", 16650.135392236803, -260129.77693556607, 1.5322556324398384, 0));
                scenicList.push(new Scenery("selvaTree", 16068.799385521143, -260612.62544100944, 3.564971745343455, 0));
                scenicList.push(new Scenery("selvaTree", 15750.586733355723, -260710.33150420772, 1.2331387098631388, 0));
                scenicList.push(new Scenery("selvaTree", 14050.245555633985, -260811.8862292912, 5.779256831616923, 0));
                scenicList.push(new Scenery("selvaTree", 10824.50451580737, -260501.31338247392, 5.97511147532847, 0));
                scenicList.push(new Scenery("selvaTree", 11177.181810707165, -260836.24115496903, 0.1023934857594481, 0));
                scenicList.push(new Scenery("selvaTree", 11202.184258525223, -260466.13466057205, 5.860816437999176, 0));
                scenicList.push(new Scenery("selvaTree", 10799.863730347268, -260109.17605701508, 2.9009741984506165, 0));
                scenicList.push(new Scenery("selvaTree", 15308.449767054182, -267389.729584087, 1.2992822765791465, 0));
                scenicList.push(new Scenery("selvaTree", 14905.60741663066, -267770.9352937627, 1.171316493320412, 0));
                scenicList.push(new Scenery("selvaTree", 13601.520764909183, -268641.87711113406, 3.6435147932498984, 0));
                scenicList.push(new Scenery("selvaTree", 15331.013340541382, -265056.73557295545, 0.6197480228399992, 0));
                scenicList.push(new Scenery("selvaTree", 15234.640652810456, -263277.27079180535, 2.763002057042003, 0));
                scenicList.push(new Scenery("selvaTree", 15518.933475714206, -262719.05046122236, 2.2742887293013414, 0));
                scenicList.push(new Scenery("selvaTree", 13466.897426920734, -263752.33114030294, 3.1832331701337884, 0));

                scenicList.push(new Scenery("overVines", 9092.396755124813, -266385.9445682527, -0.4, 3, 2.2));
                scenicList.push(new Scenery("overVines", 7489.944914379406, -265873.89025202894, 1.4, 2, 1.7));
                scenicList.push(new Scenery("overVines", 10542.432317719056, -264760.02682787157, -2.4, 4, 1.4));
                scenicList.push(new Scenery("overVines", 11027.088643639112, -264881.6308179798, 2, 1, 2.4));
                scenicList.push(new Scenery("overVines", 11244.590565445727, -264931.2517064566, 0.8, 2, 1.4));
                scenicList.push(new Scenery("overVines", 11200.479581887515, -264960.2187059047, -0.8, 3, 1.7));
                scenicList.push(new Scenery("overVines", 9140.396795226952, -263455.2752914885, 0.6, 2, 1))
                scenicList.push(new Scenery("overVines", 9630.844680631593, -261512.8668367236, 0.3, 4, 2.1));
                scenicList.push(new Scenery("overVines", 9635.844680631593, -261512.8668367236, -0.3, 1, 2.1));
                scenicList.push(new Scenery("overVines", 11320.910951676728, -263186.7988993511, 0.3, 3, 1.5));
                scenicList.push(new Scenery("overVines", 14667.614303214876, -266144.47208521084, 0.3, 1, 1.4));
                scenicList.push(new Scenery("overVines", 14651.29191561787, -265847.1018638777, -1, 3, 1.8));
                scenicList.push(new Scenery("overVines", 15374.942488142076, -261301.6341999169, -2, 1, 2.3));
                scenicList.push(new Scenery("overVines", 14832.209756628974, -260840.10768614244, 0.8, 1, 2));
                scenicList.push(new Scenery("overVines", 8020.3648553651665, -260813.47254190818, 1.8, 1, 2.3));
                scenicList.push(new Scenery("overVines", 10895.367531640872, -261152.506145356, 1, 3, 2));
                scenicList.push(new Scenery("overVines", 10208.692709186924, -260880.2330594544, 2, 1, 1.4));
                scenicList.push(new Scenery("overVines", 10429.46446496851, -260824.6625031607, 2.1, 2, 0.7));

                scenicList.push(new Scenery("vinePatch", 11181.64867751626, -264750.658691312, 0, 2));
                scenicList.push(new Scenery("vinePatch", 11403.063902072787, -264779.15124836273, 3, 4));
                scenicList.push(new Scenery("vinePatch", 11883.969670590219, -264739.5867877793, 2, 4));
                scenicList.push(new Scenery("vinePatch", 11718.017846147262, -264336.10970630357, 2.8, 3));
                scenicList.push(new Scenery("vinePatch", 11873.813343234086, -264968.5892990154, 2.3, 4.7));
                scenicList.push(new Scenery("vinePatch", 11970.619238848964, -264847.9769431622, 1, 1.7));
                scenicList.push(new Scenery("vinePatch", 11950.485725493469, -264226.69113301724, 3, 4));
                scenicList.push(new Scenery("vinePatch", 12403.189973093557, -264015.870586033, 1.88, 4));
                scenicList.push(new Scenery("vinePatch", 11169.337136588972, -264598.81201898045, 7.8, 3.8));
                scenicList.push(new Scenery("vinePatch", 10603.04248068927, -261927.62675692685, 2.82, 4.5));
                scenicList.push(new Scenery("vinePatch", 11034.05213516014, -261886.8172584766, 1.742, 4.9));
                scenicList.push(new Scenery("vinePatch", 13063.965411532323, -260762.88747569197, 6.642, 4));
                scenicList.push(new Scenery("vinePatch", 13258.939319324472, -260720.0969404855, 4.942, 2));
                scenicList.push(new Scenery("vinePatch", 14931.051775354885, -263596.86761962064, 3.2, 4));
                scenicList.push(new Scenery("vinePatch", 14738.585119896237, -263698.076737645, 2.2, 4));
                scenicList.push(new Scenery("vinePatch", 15364.899136604447, -263369.1493115895, 1.638, 3));
                scenicList.push(new Scenery("vinePatch", 15079.10994209798, -263922.5740664194, 5.638, 3.8));
                scenicList.push(new Scenery("vinePatch", 14194.876654698437, -263425.91584557726, 3.678, 4.8));
                scenicList.push(new Scenery("vinePatch", 14196.796870735056, -263611.1608702216, 2.378, 4.2));
                scenicList.push(new Scenery("vinePatch", 15127.234429064754, -263087.5701661889, 6.3444, 2.8));
                scenicList.push(new Scenery("vinePatch", 15183.517747794745, -264257.1880169198, 2.34433, 4.8));
                scenicList.push(new Scenery("vinePatch", 15311.55506084946, -262828.80448826606, 3.222, 1.6));
                scenicList.push(new Scenery("vinePatch", 14798.334342076674, -263574.1519997594, 3.1122, 1.7));
                scenicList.push(new Scenery("vinePatch", 15333.329970209586, -263523.7984436697, 1.772, 2.4));
                scenicList.push(new Scenery("vinePatch", 14465.1109537708, -263105.92137773085, 5.172, 3.4));
                scenicList.push(new Scenery("vinePatch", 14566.653863438616, -263614.8000359796, 3.152, 1.8));
                scenicList.push(new Scenery("vinePatch", 14802.784656070926, -263887.2882558304, 1.99, 2.6));
                scenicList.push(new Scenery("vinePatch", 14578.17826067941, -263693.1934106192, 4.99, 2.8));
                scenicList.push(new Scenery("vinePatch", 14361.26937070187, -263003.42346738285, 1, 1.5));
                scenicList.push(new Scenery("vinePatch", 8853.60944937611, -260190.8191253849, 6.3, 2.9));
                scenicList.push(new Scenery("vinePatch", 8821.79668529295, -259925.01979483943, 2.7, 3.2));
                scenicList.push(new Scenery("vinePatch", 8642.232117260792, -260089.06712309286, 1.8, 4.6));
                scenicList.push(new Scenery("vinePatch", 9008.937191398447, -260067.53656018732, 9.4, 2.2));
                scenicList.push(new Scenery("vinePatch", 8819.54513281647, -260458.8871097564, 0.7, 2.5));
                scenicList.push(new Scenery("vinePatch", 9109.404389331561, -260097.01946753636, 1.11, 3.1));
                scenicList.push(new Scenery("vinePatch", 8575.748381585512, -260100.06376703002, 5.9, 1.85));
                scenicList.push(new Scenery("vinePatch", 14753.434771892189, -261305.7302926744, 4.9, 3.15));
                scenicList.push(new Scenery("vinePatch", 15069.955623593745, -261335.5238653951, 3.6, 1.75));
                scenicList.push(new Scenery("vinePatch", 15052.270451563812, -261528.816530763, 2.1, 3.888));
                scenicList.push(new Scenery("vinePatch", 14941.517636042341, -261450.3486602399, 8.4, 3.445));
                scenicList.push(new Scenery("vinePatch", 14593.990699538997, -261252.92901200487, 2.6, 4.215));
                scenicList.push(new Scenery("vinePatch", 15209.929744600771, -261358.34244788365, 7.88, 3.115));
                scenicList.push(new Scenery("vinePatch", 15212.837368350512, -261508.59540557483, 4.3, 3.0765));
                scenicList.push(new Scenery("vinePatch", 15176.573460964988, -261094.9685638637, 1.33, 2.15));
                scenicList.push(new Scenery("vinePatch", 9200.48849606757, -267102.04389805737, 2.23, 2.95));
                scenicList.push(new Scenery("vinePatch", 9090.354364261078, -267219.50834061287, 5.73, 3.35));
                scenicList.push(new Scenery("vinePatch", 9343.654525751563, -267337.36726667656, 1.83, 1.75));
                scenicList.push(new Scenery("vinePatch", 9081.151960226329, -267324.36609290174, 5.93, 2.85));
                scenicList.push(new Scenery("vinePatch", 9512.97250949908, -266900.5123404455, 1.223, 4.35));
                scenicList.push(new Scenery("vinePatch", 9327.670268254016, -266829.43819126155, 6.113, 4.15));
                scenicList.push(new Scenery("vinePatch", 9568.02851212449, -266774.69966391777, 8.33, 1.85));
                scenicList.push(new Scenery("vinePatch", 9447.43691280791, -267309.67562762526, 2.13, 2.45));
                scenicList.push(new Scenery("vinePatch", 15106.857412793108, -260953.70848151887, 1.13, 3.15));
                scenicList.push(new Scenery("vinePatch", 15220.144180953681, -261008.78486364157, 7.77, 1.45));

                scenicList.push(new Scenery("decipulaPlant", 10622.474045522491, -265746.484853591, 2.7, true));
                scenicList.push(new Scenery("decipulaPlant", 12362.62755423448, -263622.4689356883, 1.86, true));
                scenicList.push(new Scenery("decipulaPlant", 9331.844420603202, -264607.78080155066, 0.33, true));

                scenicList.push(new Scenery("athergmPlant", 12233.297683562216, -261938.46358263204, 1.8, 1));
                scenicList.push(new Scenery("athergmPlant", 12838.101517560226, -262122.85542392873, 5.3, 1));
                scenicList.push(new Scenery("athergmPlant", 12617.331920551565, -261769.8981087213, 7.111, 1));
                scenicList.push(new Scenery("athergmPlant", 12979.235296218849, -261553.96283353996, 2.23, 1));
                scenicList.push(new Scenery("athergmPlant", 12001.741105529285, -261590.1251024435, 0.3, 1));
                scenicList.push(new Scenery("athergmPlant", 12328.730505326848, -266760.061614842, 2.94, 1));
                scenicList.push(new Scenery("athergmPlant", 9023.344694947724, -262097.7464619297, 8.54, 1));
                scenicList.push(new Scenery("athergmPlant", 9143.827547210123, -261766.42184481566, 6.14, 1));
                scenicList.push(new Scenery("athergmPlant", 8146.610015590998, -262085.7550126895, 1.24, 1));
                scenicList.push(new Scenery("athergmPlant", 8909.059113851175, -262680.34785851615, 5.34, 1));
                scenicList.push(new Scenery("athergmPlant", 9212.773791923937, -262383.5354415221, 0.334, 1));

                scenicList.push(new Scenery("cerebrisPlant", 12984.911223132383, -259668.3276431325, 6.8, 1));
                scenicList.push(new Scenery("cerebrisPlant", 13155.56096923165, -259382.38796084648, 2.3, 1));
                scenicList.push(new Scenery("cerebrisPlant", 11700.336133719538, -268154.9642229551, 1.6, 1));
                scenicList.push(new Scenery("cerebrisPlant", 11941.776284780664, -259749.24415041457, 2.6, 1));
                scenicList.push(new Scenery("cerebrisPlant", 11267.014430725807, -268566.9232051612, 7.1, 1));
                scenicList.push(new Scenery("cerebrisPlant", 12424.763779347584, -260119.10624457884, 2.55, 1));

                scenicList.push(new Scenery("crilkPlant", 8618.308552981265, -259856.7972556402, 1.2, true));
                scenicList.push(new Scenery("crilkPlant", 10877.98345242653, -261831.9881642188, 4.21, true));
                scenicList.push(new Scenery("crilkPlant", 11509.643897535108, -267710.8560916306, 3.55, true));
                scenicList.push(new Scenery("crilkPlant", 15107.586978278896, -265576.5738216444, 2.99, true));
                scenicList.push(new Scenery("crilkPlant", 15857.44142369725, -268318.8720238119, 4.11, true));

                scenicList.push(new Scenery("gojiiPlant", 15040.010445213393, -263790.8078423967, 1.4, true));
                scenicList.push(new Scenery("gojiiPlant", 15138.118354360178, -261433.52472764827, 2.1, true));

                scenicList.push(new Scenery("blilPlant", 14006.408338926072, -259821.63567460768, 2.78, true));
                scenicList.push(new Scenery("blilPlant", 7935.436453946449, -260077.53029660246, 6.228, true));
                scenicList.push(new Scenery("blilPlant", 13385.644323276052, -266614.20120580494, 1.278, true));

                scenicList.push(new Scenery("morshPlant", 15744.47064728149, -266238.42067687155, 3.558, true));
                scenicList.push(new Scenery("morshPlant", 13223.856575307347, -262595.2547825084, 2.453, true));
                scenicList.push(new Scenery("morshPlant", 11411.305703141463, -263917.4693907451, 4.852, true));
                scenicList.push(new Scenery("morshPlant", 10882.59713503384, -265091.62493487063, 0.116, true));
                scenicList.push(new Scenery("morshPlant", 7891.414705686507, -268134.42402750737, 6.716, true));

                scenicList.push(new Scenery("yaihefPlant", 9026.652997012077, -263476.1066182719, 1.557, true));
                scenicList.push(new Scenery("yaihefPlant", 8383.197415282806, -264963.27346899646, 2.337, true));
                scenicList.push(new Scenery("yaihefPlant", 11696.843822524646, -266587.88970407646, 7.1, true));
                scenicList.push(new Scenery("yaihefPlant", 9321.114262746958, -267222.47522105806, 6.24, true));
                scenicList.push(new Scenery("yaihefPlant", 12115.015105102917, -260038.70276564945, 1.1, true));

                scenicList.push(new Scenery("valumPlant", 12431.602493279623, -265639.049038204, 1, 1));
                scenicList.push(new Scenery("valumPlant", 12970.097826891773, -264740.8962113991, 1.85, 1));

                scenicList.push(new Scenery("bahabPlant", 10136.24945045726, -263610.2437818904, 3.1, 1));
                scenicList.push(new Scenery("bahabPlant", 10596.039062863894, -263373.45699277706, 4.31, 1));
                scenicList.push(new Scenery("bahabPlant", 10416.644313833453, -263022.83191768965, 2.33, 1));
                scenicList.push(new Scenery("bahabPlant", 9858.135813102786, -263356.34333727014, 7.22, 1));
                scenicList.push(new Scenery("bahabPlant", 10776.180708104273, -263499.78553123167, 0.32, 1));
                scenicList.push(new Scenery("bahabPlant", 10231.514519649627, -263186.607980672, 2.86, 1));
                scenicList.push(new Scenery("bahabPlant", 10333.133529028635, -263451.0206626281, 4.74, 1));
                scenicList.push(new Scenery("bahabPlant", 10617.071349011463, -263701.23644453194, 1.24, 1));
                scenicList.push(new Scenery("bahabPlant",  12688.526286048895, -267562.3997860501, 7.11, 1));

                ArtificialIntelligenceAccess.push(new Unit(10574.64000786938, -263491.1957839496, "Babosa", false, "Glubbe1", {patrolStops: 0, patrolLoop: false}));
                ArtificialIntelligenceAccess.push(new Unit(10087.258292159162, -263349.41056650697, "Babosa", true, "Glubbe2", {patrolStops: 0, patrolLoop: false}));
                ArtificialIntelligenceAccess.push(new Unit(10217.725783186905, -263829.71720088925, "Babosa", true, "Glubbe3", {patrolStops: 0, patrolLoop: false}));
                ArtificialIntelligenceAccess.push(new Unit(10308.15849079612, -262800.9996245034, "Babosa", false, "Glubbe4", {patrolStops: 0, patrolLoop: false}));
                ArtificialIntelligenceAccess.push(new Unit(10364.284829470225, -263234.1030887562, "Babosa", true, "Glubbe5", {patrolStops: 0, patrolLoop: false}));
                ArtificialIntelligenceAccess.push(new Unit(9929.45578924369, -263504.3737019781, "Babosa", false, "Glubbe6", {patrolStops: 0, patrolLoop: false}));
                ArtificialIntelligenceAccess.push(new Unit(10768.19056068868, -263184.7482197102, "Babosa", true, "Glubbe7", {patrolStops: 0, patrolLoop: false}));

                ArtificialIntelligenceAccess.push(new Unit(15111.46777343692, -261382.1240304371, "Salisea", true, "snykatck1"));
                ArtificialIntelligenceAccess.push(new Unit(15665.910929845579, -260596.82827313323, "Salisea", false, "snykatck2"));
                ArtificialIntelligenceAccess.push(new Unit(16645.428941010407, -262257.3378418423, "Salisea", false, "snykatck3"));

                ArtificialIntelligenceAccess.push(new Unit(15776.988081320656, -267433.528607218, "Gorgon", false, "Grakhungy1"));
                ArtificialIntelligenceAccess.push(new Unit(16608.1765892983, -267598.05527810345, "Gorgon", true, "Grakhungy1"));

                ArtificialIntelligenceAccess.push(new Unit(14558.571130733391, -265592.52555436204, "Boa", false, "constrictohno1"));
                ArtificialIntelligenceAccess.push(new Unit(13771.387974653959, -260688.10939423591, "Boa", true, "constrictohno2"));
                ArtificialIntelligenceAccess.push(new Unit(7531.09665538414, -264517.64925672096, "Boa", false, "constrictohno3"));
                ArtificialIntelligenceAccess.push(new Unit( 7644.811016898702, -268224.94299835566, "Boa", false, "constrictohno4"));

                ArtificialIntelligenceAccess.push(new Unit(9357.205014983192, -267657.58414374886, "Gulfrey", true, "Guldylcks1"));
                ArtificialIntelligenceAccess.push(new Unit(9717.838307813578, -267446.1854944727, "Gulfrey", false, "Guldylcks2"));
                ArtificialIntelligenceAccess.push(new Unit(9687.457896865346, -267755.60776622704, "Gulfrey", false, "Guldylcks3"));
                ArtificialIntelligenceAccess.push(new Unit(9212.712333083262, -267964.6747618307, "Gulfrey", false, "Guldylcks4"));
                ArtificialIntelligenceAccess.push(new Unit(9573.13637470697, -268085.03740932187, "Gulfrey", false, "Guldylcks5"));
                ArtificialIntelligenceAccess.push(new Unit(10217.08961870549, -267732.133603679, "Gulfrey", false, "Guldylcks6"));
                ArtificialIntelligenceAccess.push(new Unit(8967.304933946261, -265054.4370074765, "Gulfrey", true, "Guldylcks7"));
                ArtificialIntelligenceAccess.push(new Unit(9319.593326557713, -265001.41086767684, "Gulfrey", false, "Guldylcks8"));
                ArtificialIntelligenceAccess.push(new Unit(9246.648558825347, -265302.63533262, "Gulfrey", false, "Guldylcks9"));
                ArtificialIntelligenceAccess.push(new Unit(9110.92818820392, -265195.4838334933, "Gulfrey", false, "Guldylcks10"));
                ArtificialIntelligenceAccess.push(new Unit(9002.773590501285, -264847.68177530705, "Gulfrey", true, "Guldylcks11"));
                ArtificialIntelligenceAccess.push(new Unit(9521.252054169665, -265080.9637190942, "Gulfrey", false, "Guldylcks12"));
                ArtificialIntelligenceAccess.push(new Unit(9470.785582288285, -264693.7486704398, "Gulfrey", false, "Guldylcks13"));

                ArtificialIntelligenceAccess.push(new Unit(11054.194525864845, -266259.0706794641, "Etyr", false, "Drklrd1"));
                ArtificialIntelligenceAccess.push(new Unit(10990.548840085405, -266094.3703855444, "Etyr", false, "Drklrd2"));
                ArtificialIntelligenceAccess.push(new Unit(11189.087402308412, -265939.5092572754, "Etyr", true, "Drklrd3"));
                ArtificialIntelligenceAccess.push(new Unit(10857.507134176734, -265968.03658349224, "Etyr", false, "Drklrd4"));
                ArtificialIntelligenceAccess.push(new Unit(11111.81605300366, -266049.57804886694, "Etyr", true, "Drklrd5"));
                ArtificialIntelligenceAccess.push(new Unit(11202.75490078686, -266130.4210907603, "Etyr", false, "Drklrd6"));
                ArtificialIntelligenceAccess.push(new Unit(11832.130051750893, -268093.0302679188, "Etyr", true, "Drklrd7"));
                ArtificialIntelligenceAccess.push(new Unit(8931.170490102828, -260317.72517571176, "Etyr", true, "Drklrd8"));
                ArtificialIntelligenceAccess.push(new Unit(9047.333837748867, -260191.56096221053, "Etyr", false, "Drklrd9"));
                ArtificialIntelligenceAccess.push(new Unit(8632.601101435463, -260294.43697107647, "Etyr", false, "Drklrd10"));
                ArtificialIntelligenceAccess.push(new Unit(8838.136528074592, -260066.36138308284, "Etyr", false, "Drklrd11"));
                ArtificialIntelligenceAccess.push(new Unit(9110.686020172883, -259967.92369488487, "Etyr", false, "Drklrd12"));
                ArtificialIntelligenceAccess.push(new Unit(9207.674663103584, -260130.03332831952, "Etyr", false, "Drklrd13"));
                ArtificialIntelligenceAccess.push(new Unit(9237.820883292277, -260014.8157141747, "Etyr", true, "Drklrd14"));
                ArtificialIntelligenceAccess.push(new Unit(7565.3214453481705, -262237.978166962, "Etyr", true, "Drklrd15"));
                ArtificialIntelligenceAccess.push(new Unit(7468.912900493372, -262023.06739213396, "Etyr", false, "Drklrd16"));
                ArtificialIntelligenceAccess.push(new Unit(7582.77723347888, -262080.18288772344, "Etyr", true, "Drklrd17"));
                ArtificialIntelligenceAccess.push(new Unit(7592.228306115385, -261984.82506715693, "Etyr", false, "Drklrd18"));
                ArtificialIntelligenceAccess.push(new Unit(7667.611383384234, -262093.984236759, "Etyr", true, "Drklrd19"));
                ArtificialIntelligenceAccess.push(new Unit(11427.700108593737, -268414.55090000166, "Etyr", true, "Drklrd20"));
                ArtificialIntelligenceAccess.push(new Unit(11419.58347973275, -268522.5869624863, "Etyr", false, "Drklrd21"));
                ArtificialIntelligenceAccess.push(new Unit( 11611.076176977043, -268269.5568997218, "Etyr", false, "Drklrd22"));

                scenicList.push(new Scenery("araneaDen", 13642.341462007116, -267852.6330985055, 5, false, true));
                scenicList.push(new Scenery("araneaDen", 13156.819352147464, -267106.4592356964, 2, true, true));
                scenicList.push(new Scenery("araneaDen", 11521.580052156994, -260820.1803501116, 4, true, true));
                scenicList.push(new Scenery("araneaDen", 12820.656736800915, -262873.87929264025, 3, false, false));
                scenicList.push(new Scenery("araneaDen", 12615.184264565847, -267354.70592107286, 7, false, false));
                scenicList.push(new Scenery("araneaDen", 13076.378559698149, -267805.40266324236, 3.6, false, false));
                scenicList.push(new Scenery("araneaDen", 13850.917659335306, -267112.0853428192, 0.6, false, false));
                scenicList.push(new Scenery("araneaDen", 13782.663124959712, -266610.8830396189, 2.33, false, false));
                scenicList.push(new Scenery("araneaDen", 14065.967666995053, -267653.79478533135, 1.677, false, false));

                ArtificialIntelligenceAccess.push(new Unit(10219.355801230648, -262145.1745211579, "Kigarii", true, "dthbyspks1"));
                ArtificialIntelligenceAccess.push(new Unit(8149.772203264102, -262953.0908328691, "Kigarii", false, "dthbyspks2"));
                ArtificialIntelligenceAccess.push(new Unit(10311.122154199265, -259802.26036809065, "Kigarii", true, "dthbyspks3"));

                ArtificialIntelligenceAccess.push(new Unit(13407.076332005872, -264885.75235160213, "Cruorcca", "massive", "Cruorpony1"));
                ArtificialIntelligenceAccess.push(new Unit(13547.802204458649, -265067.73484071565, "Cruorcca", true, "Cruorpony2"));
                ArtificialIntelligenceAccess.push(new Unit(13172.743883753083, -265003.54742638784, "Cruorcca", false, "Cruorpony3"));
                ArtificialIntelligenceAccess.push(new Unit(12882.469281407119, -264914.5728721215, "Cruorcca", true, "Cruorpony4"));
                ArtificialIntelligenceAccess.push(new Unit(7576.738083100537, -261212.41313602283, "Cruorcca", false, "Cruorpony5"));
                ArtificialIntelligenceAccess.push(new Unit(7352.42778885247, -261179.59803518566, "Cruorcca", "massive", "Cruorpony6"));
                ArtificialIntelligenceAccess.push(new Unit(7179.112115976527, -261073.12875143855, "Cruorcca", false, "Cruorpony7"));
                ArtificialIntelligenceAccess.push(new Unit(7142.10169497471, -261229.47129122025, "Cruorcca", true, "Cruorpony8"));

                ArtificialIntelligenceAccess.push(new Unit(14533.748773652856, -263383.7596063055, "BlackTroll", false, "munsa1"));
                ArtificialIntelligenceAccess.push(new Unit(14838.437282051354, -263219.347717657, "BlackTroll", true, "munsa2"));
                ArtificialIntelligenceAccess.push(new Unit(15274.744287141517, -263810.8714818898, "BlackTroll", false, "munsa3"));

                ArtificialIntelligenceAccess.push(new Unit(15815.87914705492, -259544.2365119846, "Torper", false, "brbqueruinr1"));
                ArtificialIntelligenceAccess.push(new Unit(11698.395105319241, -264549.04729594884, "Torper", true, "brbqueruinr2"));

                ArtificialIntelligenceAccess.push(new Unit(13454.33746893602, -265563.6287313538, "Zancudo", false, "quidprosquito1"));
                ArtificialIntelligenceAccess.push(new Unit(14853.465539339519, -268355.89688496466, "Zancudo", false, "quidprosquito2"));
                ArtificialIntelligenceAccess.push(new Unit(16041.935112443842, -266411.7632636614, "Zancudo", true, "quidprosquito3"));
                ArtificialIntelligenceAccess.push(new Unit(13162.067859181256, -264519.4073174745, "Zancudo", false, "quidprosquito4"));
                ArtificialIntelligenceAccess.push(new Unit(9473.68801462125, -262741.17772873444, "Zancudo", false, "quidprosquito5"));
                ArtificialIntelligenceAccess.push(new Unit(12952.96740188501, -261092.76842385603, "Zancudo", false, "quidprosquito6"));
                ArtificialIntelligenceAccess.push(new Unit(8389.0933678695, -264044.2384706077, "Zancudo", false, "quidprosquito7"));
                ArtificialIntelligenceAccess.push(new Unit(8467.803276285118, -268347.13190396415, "Zancudo", true, "quidprosquito8"));
                ArtificialIntelligenceAccess.push(new Unit(9833.065291502115, -268399.30392241635, "Zancudo", false, "quidprosquito9"));

                ArtificialIntelligenceAccess.push(new Unit(8432.821191225508, -263926.53788440174, "PoisonDartFrog", true, "poisnisnotgdforyrhealth1"));
                ArtificialIntelligenceAccess.push(new Unit(15424.798205458388, -265577.19875071244, "PoisonDartFrog", false, "poisnisnotgdforyrhealth2"));
                ArtificialIntelligenceAccess.push(new Unit(13179.664748782603, -264127.8734556595, "PoisonDartFrog", false, "poisnisnotgdforyrhealth3"));

                ArtificialIntelligenceAccess.push(new Unit(8094.138286839379, -259038.31827610638, "ZafBeetle", false, "smthinginthewy1"));
                ArtificialIntelligenceAccess.push(new Unit(11799.945043762069, -262299.1659078734, "ZafBeetle", false, "smthinginthewy2"));
                ArtificialIntelligenceAccess.push(new Unit(8205.306356461097, -265922.30402330164, "ZafBeetle", false, "smthinginthewy3"));

                ArtificialIntelligenceAccess.push(new Unit(12765.457436660341, -265466.07548573153, "Lizard", true, "thetaledone1"));
                ArtificialIntelligenceAccess.push(new Unit(11688.784638504694, -262958.5833832433, "Lizard", false, "thetaledone2"));
                ArtificialIntelligenceAccess.push(new Unit(8885.722488187437, -261194.21454069152, "Lizard", false, "thetaledone3"));

                scenicList.push(new Scenery("decipulaBasePlant", 8227.866611609063, -261541.1101852539, 2.2, "massive"));

                change = "s26w1";
            }
        }
        else if (region == "s4")
        {
            if (change != "s4")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                generator2(998194838973478567290593490753765777, 893156183774189889999927462711, 212646126477828899823923656415326758196327583974281, 6688395285999999892194291914929422375482332503, 1111111111009836537010101010010100000011110010 , 0, 6997, -34734);
                trimmer(434.61849699811074, -44423.834101181696, 284.8898175850846, -44507.41441065698, false);
                trimmer(-806.7417209570492, -34633.92173035913, -1060.7593222988721, -38254.921303375566, false);

                change = "s4";
            }
        }
        else if (region == "s5")
        {
            if (change != "s5")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                generator2(5736809278362490038293, 918929, 2392365641532675817348289600124772911, 66897437318899912746321004929422375, 27138463725763667236888366664 , 0, 6712, -45024);
                trimmer(6706.511984252476, -46639.560260598635, 6586.768919842608, -46711.23408554718, false);
                trimmer(5997.574834492017, -52847.19909806379, 5717.451997282227, -53038.20435162931, false);

                change = "s5";
            }
        }
        else if (region == "s6")
        {
            if (change != "s6")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                generator2(19298741243437438992, 9274652547777276453, 7428457849984359745, 66897439835628573277771, 37899910280830 , 0, 6703, -54922);


                change = "s6";
            }
        }
        else if (region == "s7")
        {
            if (change != "s7")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                generator2(29530258, 90, 72, 3258295, 102938219982, 0, 6702, -65155);


                change = "s7";
            }
        }
        else if (region == "s8")
        {
            if (change != "s8")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                generator2(829427148172141, 920883248418247, 2733294217, 7420383218, 348919421, 0, 6702, -75322);


                change = "s8";
            }
        }
        else if (region == "s9")
        {
            if (change != "s9")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                generator2(232239741218412, 98124912914, 903814729794, 11829144012, 1213249, 0, 6589, -87613);


                change = "s9";
            }
        }
        else if (region == "s10")
        {
            if (change != "s10")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                generator2(432492005292412, 232435923599384100, 128321492394420300012, 12314294993281923192, 3485124912, 0, 6775, -95695);
                trimmer(2740, -98131, 2534, -98413, false);

                change = "s10";
            }
        }
        else if (region == "s11")
        {
            if (change != "s11")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                generator2(3427925020108480120421, 22333339235043853496, 232389333858603333, 523323213198492334333334, 8333397129741365, 0, 6725, -105895);

                for (var i = scenicList.length - 1; i >= 0; i--)
                {
                    if (scenicList[i].X < 2802 && scenicList[i].X > 2501)
                    {
                        scenicList.splice(i, 1);
                    }
                }


                change = "s11";
            }
        }
        else if (region == "s12")
        {
            if (change != "s12")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                generator2(77216413742348524795734, 557765, 8412977777914721, 67763481412, 2937777349372358, 0, 6729, -116124);

                for (var i = scenicList.length - 1; i >= 0; i--)
                {
                    if (scenicList[i].X < 2802 && scenicList[i].X > 2501)
                    {
                        scenicList.splice(i, 1);
                    }
                }


                change = "s12";
            }
        }
        else if (region == "s13")
        {
            if (change != "s13")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                generator2(41421321742348524795734, 523523685563431242342, 3341425464573235536241721, 745221412, 2836632675290991358, 0, 6692, -126326);

                for (var i = scenicList.length - 1; i >= 0; i--)
                {
                    if (scenicList[i].X < 2806 && scenicList[i].X > 2501)
                    {
                        scenicList.splice(i, 1);
                    }
                }


                change = "s13";
            }
        }
        else if (region == "s14")
        {
            if (change != "s14")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                generator(56, 5, 33, 45, 135, 0, 6738, -136459);

                change = "s14";
            }
        }
        else if (region == "s15")
        {
            if (change != "s15")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                generator(11124, 34, 92, 110, 22340, 0, 6679, -146718);
                trimmer(809, -155022, 704, -155128, false);
                trimmer(6940, -155987, -3197, -156973, false);
                scenicList.push(new Scenery("sign", 1008, -146856, -1/2 * Math.PI, 0, "Inochtihikli Village - 46 sectors"));

                change = "s15";
            }
        }
        else if (region == "s17")
        {
            if (change != "s17")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures
                //todo when structures are created add their list's refresh sequence here.

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                //Build AI Units

                //Animals
                ArtificialIntelligenceAccess.push(new Unit(4223, -169078, "Mugmul", false, "Pkotpaht"));
                ArtificialIntelligenceAccess.push(new Unit(5256, -170128, "Mugmul", false, "Pkotpahti"));
                ArtificialIntelligenceAccess.push(new Unit(5979, -168026, "Mugmul", false, "Pkotpahti"));
                ArtificialIntelligenceAccess.push(new Unit(4259, -169683, "Mugmul", true, "Pkatpoht"));
                ArtificialIntelligenceAccess.push(new Unit(3850, -170690, "Taipan", false, "Sapatli"));

                ArtificialIntelligenceAccess.push(new Unit(2570, -171420, "Taipan", true, "Sapatli"));
                ArtificialIntelligenceAccess.push(new Unit(2721, -171094, "Taipan", true, "Sapatli"));
                ArtificialIntelligenceAccess.push(new Unit(2222, -171501, "Taipan", false, "Sapatli"));
                ArtificialIntelligenceAccess.push(new Unit(2846, -171256, "Taipan", false, "Sapatli"));

                for (var l = 0; l < 8; l++)
                {
                    var sdedX = 1317 + (1400 * seeder(l * 12) - 700);
                    var sdedY = -174630 + (1400 * seeder(l * 15) - 700);
                    if (Math.random() > 0.56)
                    {
                        scenicList.push(new Scenery("mofuNest", sdedX, sdedY, Math.random() * (2* Math.PI), Math.random() + 0.8));
                        ArtificialIntelligenceAccess.push(new Unit(sdedX, sdedY, "Mofu", Math.round(Math.random()), "Flethy"));
                    }
                    else
                    {
                        if (Math.random() > 0.6)
                        {
                            scenicList.push(new Scenery("mofuNest", sdedX, sdedY, Math.random() * (2* Math.PI), Math.random() + 0.8));
                            ArtificialIntelligenceAccess.push(new Unit(sdedX + 350 * Math.random() - 175, sdedY + 350 * Math.random() - 175, "Mofu", Math.round(Math.random()), "Flethy"));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(sdedX + 500 * Math.random() - 250, sdedY + 400 * Math.random() - 200, "Mofu", "baby", "Flethu"));
                        }
                    }
                }

                ArtificialIntelligenceAccess.push(new Unit(1853, -169373, "Yioshk", true, "Biltir"));
                ArtificialIntelligenceAccess.push(new Unit(-1506, -173266, "Yioshk", false, "Biltor"));
                ArtificialIntelligenceAccess.push(new Unit(672, -175776, "Yioshk", false, "Biltar"));
                ArtificialIntelligenceAccess.push(new Unit(5986, -174729, "Yioshk", true, "Biltirin"));
                ArtificialIntelligenceAccess.push(new Unit(4783, -176294, "Rhinoceros", false, "Cacaletp"));

                ArtificialIntelligenceAccess.push(new Unit(5882, -169442, "Zarbu", false, "zabiido"));
                ArtificialIntelligenceAccess.push(new Unit(4985, -169270, "Zarbu", false, "zabiidu"));
                ArtificialIntelligenceAccess.push(new Unit(6250, -170008, "Zarbu", "baby", "zabiida"));
                ArtificialIntelligenceAccess.push(new Unit(6036, -170808, "Zarbu", true, "zabiidin"));

                ArtificialIntelligenceAccess.push(new Unit(5788, -172535, "Taipan", false, "Sapatli"));

                ArtificialIntelligenceAccess.push(new Unit(4126, -174209, "Zarbu", false, "zabiidu"));
                ArtificialIntelligenceAccess.push(new Unit(3644, -174756, "Zarbu", "baby", "zabiida"));

                ArtificialIntelligenceAccess.push(new Unit(3930, -173373, "Yioshk", false, "Biltar"));

                scenicList.push(new Scenery("yeolTree", 6100 , -172371, 10.5, false));
                scenicList.push(new Scenery("yeolTree", 3153 , -175028, 14, false));

                ArtificialIntelligenceAccess.push(new Unit(2991, -175363, "Mofu", Math.round(Math.random()), "Flethy"));
                ArtificialIntelligenceAccess.push(new Unit(3240, -176626, "Mofu", Math.round(Math.random()), "Flethy"));
                ArtificialIntelligenceAccess.push(new Unit(5054, -169154, "Mofu", Math.round(Math.random()), "Flethy"));

                //Scenery
                for (var l = 0; l < 18; l++)
                {
                    scenicList.push(new Scenery("yeolTree", 4700 + 3000 * seeder(l + (l + 99)) - 1500, -169200 + 3000 * seeder(l * (l * 20)) - 1500, Math.random() * (2* Math.PI), true));
                }
                scenicList.push(new Scenery("darkStone", 2758 , -171183, 6, 2, 1));
                scenicList.push(new Scenery("yeolTree", 2209 , -171535, 8, false));
                scenicList.push(new Scenery("kwomPlant", 3313 , -172394, 7, true));
                scenicList.push(new Scenery("apotlPlant", 1252 , -172151, 5, true));
                scenicList.push(new Scenery("yeolTree", 11 , -174015, -2.9, false));
                scenicList.push(new Scenery("pochalPlant", -882 , -174683, 10, true));
                scenicList.push(new Scenery("hracklePlant", -1994 , -171679, 0.5, true));
                scenicList.push(new Scenery("hracklePlant", 228 , -170877, 0, true));
                scenicList.push(new Scenery("hracklePlant", 2033 , -176060, 2.5, true));
                scenicList.push(new Scenery("aktaltlPlant", 4940 , -176674, 6.7, true));
                scenicList.push(new Scenery("aktaltlPlant", 4715 , -172609, 13.1, true));
                scenicList.push(new Scenery("kwomPlant", 3829 , -175155, 9, true));
                scenicList.push(new Scenery("darkStone", 5624 , -167429, 8, 1, 2));
                scenicList.push(new Scenery("apotlPlant", 5735 , -174626, 2.2, true));
                scenicList.push(new Scenery("hracklePlant", 4797, -170657, 1.17, true));

                change = "s17";
            }
        }
        else if (region == "s19")
        {
            if (change != "s19")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                generator(6665, 10, 56, 72, 83, 3, 6665, -187521);

                change = "s19";
            }
        }
        else if (region == "s20")
        {
            if (change != "s20")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                generator(794, 2353, 986, 38, 89765, 3, 6732, -197713);
                trimmer(-3078, -197378, -3888, -207313);

                change = "s20";
            }
        }
        else if (region == "s21")
        {
            if (change != "s21")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                generator(673, 20791, 10, 110, 11010, 3, 6703, -207910);
                trimmer(7997, -216466, 7355, -216833, false);


                change = "s21";
            }
        }
        else if (region == "s22")
        {
            if (change != "s22")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                scenicList.push(new Scenery("yeolTree", -1789.9381250000004, -217656.13882572018,4.343001556192405, true)); //copied s21
                scenicList.push(new Scenery("hracklePlant", 3421.228, -217190.30544999999,5.345574630865979, true)); //copied s21
                scenicList.push(new Scenery("pochalPlant", 2478.6633249999995, -217310.3455,4.820169979450494, true)); //copied s21
                generator(74, 3090, 75, 567, 89, 3, 6568, -218179);
                trimmer(6685, -227283, -3236, -229903);


                change = "s22";
            }
        }
        else if (region == "s23")
        {
            if (change != "s23")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (ArtificialIntelligenceAccess[i].playerSeen == false && !ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //REGION CREATION
                generator(27, 150, 9870, 5545, 29, 3, 6727, -228264);
                scenicList.push(new Scenery("selvaTree", 6456, -238578,0.38, 0)); //copied s24
                scenicList.push(new Scenery("selvaTree", 5687.632046935739, -238507.84678797744,3, 0)); //copied s24
                scenicList.push(new Scenery("selvaTree", 1001.1523946130909, -238607.04309654268,2, 0)); //copied s24
                scenicList.push(new Scenery("selvaTree", -2375.632782131061, -238617.4969161959,5, 0)); //copied s24
                scenicList.push(new Scenery("selvaTree", 4621.544364409696, -238546.04183270253,5, 0)); //copied s24
                scenicList.push(new Scenery("selvaTree", 1847.0919853353873, -238827.94306016766,20.04, 0)); //copied s24
                scenicList.push(new Scenery("selvaTree", 3609.163662697182, -238684.98384033298,1, 0)); //copied s24
                scenicList.push(new Scenery("selvaTree", -1095.837109391663, -238770.385976248,1, 0)); //copied s24
                scenicList.push(new Scenery("selvaTree", -2957.990835461984, -238550.7498541408,0, 0)); //copied s24
                scenicList.push(new Scenery("selvaTree", 238.54078903048904, -238534.22047766793,19, 0)); //copied s24


                change = "s23";
            }
        }
    }
    else if (map == "sagesCache")
    {
        if (region == "sagesCache")
        {
            if (change != "sagesCache")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (!ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //barriers
                barrierList.push(new Barrier(1000, -66, 720, 70, true));
                barrierList.push(new Barrier(328, -66, 1546, 70, true)); //long vertical right (entrance)
                barrierList.push(new Barrier(328, 1775, 900, 70, true)); //extension vertical right (entrance)
                barrierList.push(new Barrier(328, -96, 70, 720, true));
                barrierList.push(new Barrier(702, 570, 70, 370, true));
                barrierList.push(new Barrier(702, 630, 2045, 70, true)); //longer vertical left (entrance)
                barrierList.push(new Barrier(30, 2607, 70, 300, true));
                barrierList.push(new Barrier(30, 2607, 990, 70, true));
                barrierList.push(new Barrier(770, 2607, 70, 2031, true)); //bottom left horizontal east
                barrierList.push(new Barrier(1070, 2977, 70, 1731, true)); //top left horizontal east
                barrierList.push(new Barrier(1000, 2976, 650, 70, true));
                barrierList.push(new Barrier(30, 3578, 70, 1020, true));
                barrierList.push(new Barrier(2730, 1738, 886, 70, true)); //east chamber
                barrierList.push(new Barrier(3401, 1738, 1550, 70, true));
                barrierList.push(new Barrier(2730, 1704, 70, 700, true));
                barrierList.push(new Barrier(3100, 3278, 70, 340, true));
                barrierList.push(new Barrier(2730, 3045, 1130, 70, true));
                barrierList.push(new Barrier(3099, 3347, 1430, 70, true));
                barrierList.push(new Barrier(3163, 4704, 70, 1738, true));
                barrierList.push(new Barrier(3100, 5073, 70, 2105, true));
                barrierList.push(new Barrier(2732, 4475, 899, 70, true));
                barrierList.push(new Barrier(3099, 5141, 560, 70, true));
                barrierList.push(new Barrier(1832, 5304, 70, 900, true));
                barrierList.push(new Barrier(1830, 5308, 966, 70, true));
                barrierList.push(new Barrier(2199, 5658, 70, 950, true));
                barrierList.push(new Barrier(2199, 5677, 598, 70, true));
                barrierList.push(new Barrier(5198, 3273, 1850, 70, true));
                barrierList.push(new Barrier(4832, 3208, 70, 415, true));
                barrierList.push(new Barrier(4832, 3208, 1560, 70, true));
                barrierList.push(new Barrier(1535, 6204, 70, 330, true));
                barrierList.push(new Barrier(1535, 6209, 700, 70, true));
                barrierList.push(new Barrier(2270, 6206, 70, 330, true));
                barrierList.push(new Barrier(2497, 6239, 670, 70, true));
                barrierList.push(new Barrier(1552, 6878, 70, 1000, true));
                barrierList.push(new Barrier(-202, 4106, 70, 3000, true));
                barrierList.push(new Barrier(-199, 4478, 70, 3000, true));
                barrierList.push(new Barrier(-196, 4478, 600, 70, true));
                barrierList.push(new Barrier(-1160, 5078, 70, 1010, true));
                barrierList.push(new Barrier(-1173, 4778, 340, 70, true));
                barrierList.push(new Barrier(-1168, 3805, 70, 1010, true));
                barrierList.push(new Barrier(-1169, 3795, 680, 70, true));
                barrierList.push(new Barrier(-202, 3800, 320, 70, true));
                barrierList.push(new Barrier(-1699, 4406, 70, 535, true));
                barrierList.push(new Barrier(-2054, 4777, 70, 910, true));
                barrierList.push(new Barrier(-1701, 1774, 2640, 70, true)); //long vertical
                barrierList.push(new Barrier(-2078, 1403, 70, 380, true));
                barrierList.push(new Barrier(-2068, 1426, 2752, 70, true));
                barrierList.push(new Barrier(-2072, 4477, 390, 70, true));
                barrierList.push(new Barrier(-1786, 202, 70, 740, true));
                barrierList.push(new Barrier(-1766, 200, 1240, 70, true));
                barrierList.push(new Barrier(-1097, 212, 1000, 70, true)); //vertical left side south
                barrierList.push(new Barrier(-1398, 1174, 70, 400, true));
                barrierList.push(new Barrier(-1398, 1174, 262, 70, true));
                barrierList.push(new Barrier(-1404, 1403, 70, 1740, true));
                barrierList.push(new Barrier(-1636, 1778, 70, 1964, true));
                barrierList.push(new Barrier(-4085, 4108, 70, 2060, true)); //bot
                barrierList.push(new Barrier(-4470, 4478, 70, 2417, true)); //top
                barrierList.push(new Barrier(-4100, 3871, 300, 70, true));
                barrierList.push(new Barrier(-4093, 3872, 70, 600, true));
                barrierList.push(new Barrier(-4468, 3874, 620, 70, true)); //right vertical
                barrierList.push(new Barrier(-3506, 2906, 1025, 70, true)); //far left low
                barrierList.push(new Barrier(-5357, 2907, 70, 1900, true)); //bottom low (left)
                barrierList.push(new Barrier(-5370, 2924, 290, 70, true)); // |
                barrierList.push(new Barrier(-5902, 3200, 70, 603, true)); // --
                barrierList.push(new Barrier(-5905, 2898, 320, 70, true)); // |
                barrierList.push(new Barrier(-6890, 2904, 70, 1010, true));
                barrierList.push(new Barrier(-6869, 2900, 1000, 70, true));
                barrierList.push(new Barrier(-6889, 3872, 70, 1010, true)); //top right far horizontal
                barrierList.push(new Barrier(-5359, 3870, 70, 900, true)); //top right near horizontal
                barrierList.push(new Barrier(-5899, 3578, 70, 570, true));
                barrierList.push(new Barrier(-5899, 3581, 360, 70, true));
                barrierList.push(new Barrier(-5373, 3574, 340, 70, true));


                //REGION CREATION
                //Build AI Units

                //first room
                var rndx = Math.random();
                if (rndx >= 0.55)
                {
                    ArtificialIntelligenceAccess.push(new Unit(845, 498, "Nog", true, "Kalp"));
                    ArtificialIntelligenceAccess.push(new Unit(490, 106, "Nog", true, "Dilk"));
                    ArtificialIntelligenceAccess.push(new Unit(757, 144, "Nog", false, "Pesht"));
                }
                else if (rndx >= 0.25)
                {
                    ArtificialIntelligenceAccess.push(new Unit(845, 498, "Frich", true, "Ja"));
                    ArtificialIntelligenceAccess.push(new Unit(490, 106, "Frich", false, "Li"));
                    ArtificialIntelligenceAccess.push(new Unit(757, 144, "Frich", true, "Ko"));
                }
                else if (rndx >= 0.15)
                {
                    ArtificialIntelligenceAccess.push(new Unit(795, 439, "Oolid", true, "Oglomok"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(931, 482, "Oolid", false, "Aglomel"));
                    ArtificialIntelligenceAccess.push(new Unit(672, 35, "Oolid", false, "Eklamil"));
                }
                //hallway ambush or not
                rndx = Math.random();
                if (rndx >= 0.67)
                {
                    ArtificialIntelligenceAccess.push(new Unit(558, 1522, "Nog", false, "Paik"));
                }
                else if (rndx >= 0.46)
                {
                    ArtificialIntelligenceAccess.push(new Unit(558, 1522, "Nog", true, "Paike"));
                }
                else if (rndx >= 0.34)
                {
                    ArtificialIntelligenceAccess.push(new Unit(486, 1607, "Oolid", false, "ilklo"));
                }
                else if (rndx >= 0.26)
                {
                    ArtificialIntelligenceAccess.push(new Unit(558, 1522, "Frich", true, "Zo"));
                    ArtificialIntelligenceAccess.push(new Unit(486, 1607, "Frich", false, "Ka"));
                }

                rndx = Math.random();
                if (rndx >= 0.80)
                {
                    ArtificialIntelligenceAccess.push(new Unit(770, 2982, "Frich", "massive", "Scurr"));
                    ArtificialIntelligenceAccess.push(new Unit(487, 3438, "Frich", "massive", "Relf"));
                }
                else if (rndx >= 0.60)
                {
                    ArtificialIntelligenceAccess.push(new Unit(560, 3189, "Tilk", true, "Poluikeiv"));
                }
                else if (rndx >= 0.40)
                {
                    ArtificialIntelligenceAccess.push(new Unit(853, 3420, "Tilk", false, "Kastur"));
                    ArtificialIntelligenceAccess.push(new Unit(235, 3325, "Tilk", false, "Polukz"));
                }
                else if (rndx >= 0.20)
                {
                    ArtificialIntelligenceAccess.push(new Unit(476, 3362, "Oolid", true, "Merhuv"));
                    ArtificialIntelligenceAccess.push(new Unit(697, 3090, "Oolid", false, "Clotzalk"));
                }
                else
                {
                    if (Math.round(Math.random()))
                    {
                        ArtificialIntelligenceAccess.push(new Unit(538, 3055, "Soldier", false, "Looter", {race: "Thengar", faction: "hostile", con: 4, speed: 0, outfit: ["none", 0], weapon: ["longbow", [0.1, 0.4], 0, 16, 1], ranged: [true, "arrow", 8, 1100, 1, 5, 0, "none", 1.2], patrolStops: 0, patrolLoop: false, route:[[435 - 750, 5563], [400 - 750, 5668], [636 - 750, 5860], [827 - 750, 5357]]}));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(538, 3055, "Soldier", false, "Looter", {race: "Freynor", faction: "hostile", con: 6, speed: 0, outfit: ["none", 0], weapon: ["longbow", [0.1, 0.4], 0, 16, 1], ranged: [true, "arrow", 7, 1275, 1, 4, 0, "none", 1.6], patrolStops: 0, patrolLoop: false, route:[[435 - 750, 5563], [400 - 750, 5668], [636 - 750, 5860], [827 - 750, 5357]]}));
                    }
                    scenicList.push(new Scenery("bearTrap", 629, 2638, 1/8 * Math.PI, true));
                    scenicList.push(new Scenery("bearTrap", 549, 2500, 5.5/8 * Math.PI, true));
                    scenicList.push(new Scenery("bearTrap", 448, 2531, 0 * Math.PI, true));
                    scenicList.push(new Scenery("bearTrap", 409, 2405, 0.5 * Math.PI, true));
                    scenicList.push(new Scenery("bearTrap", 660, 2315, 0.33 * Math.PI, true));
                }
                rndx = Math.random();
                if (rndx <= 0.5)
                {
                    ArtificialIntelligenceAccess.push(new Unit(2981, 1978, "Nog", true, "Pok"));
                    ArtificialIntelligenceAccess.push(new Unit(3332, 1834, "Nog", true, "Zob"));
                    ArtificialIntelligenceAccess.push(new Unit(3253, 2121, "Nog", false, "Zim"));
                    ArtificialIntelligenceAccess.push(new Unit(3089, 2322, "Nog", false, "Zal"));
                    ArtificialIntelligenceAccess.push(new Unit(2903, 2302, "Nog", false, "Zil"));
                    ArtificialIntelligenceAccess.push(new Unit(3297, 2545, "Nog", false, "Zop"));
                    ArtificialIntelligenceAccess.push(new Unit(3198, 2888, "Nog", true, "Zolth"));
                    ArtificialIntelligenceAccess.push(new Unit(3089, 3165, "Nog", false, "Zole"));
                    ArtificialIntelligenceAccess.push(new Unit(3368, 3229, "Nog", false, "Afer"));
                }
                else if (rndx <= 0.8)
                {
                    ArtificialIntelligenceAccess.push(new Unit(2981, 1978, "Frich", false, "Fok"));
                    ArtificialIntelligenceAccess.push(new Unit(3332, 1834, "Frich", false, "Fob"));
                    ArtificialIntelligenceAccess.push(new Unit(3253, 2121, "Frich", true, "Fim"));
                    ArtificialIntelligenceAccess.push(new Unit(3089, 2322, "Frich", true, "Fal"));
                    ArtificialIntelligenceAccess.push(new Unit(2903, 2302, "Frich", false, "Fil"));
                    ArtificialIntelligenceAccess.push(new Unit(3297, 2545, "Frich", false, "Fop"));
                    ArtificialIntelligenceAccess.push(new Unit(3198, 2888, "Frich", true, "Folth"));
                    ArtificialIntelligenceAccess.push(new Unit(3089, 3165, "Frich", true, "Fole"));
                    ArtificialIntelligenceAccess.push(new Unit(3368, 3229, "Frich", false, "Fer"));
                }
                else if (rndx <= 0.95)
                {
                    ArtificialIntelligenceAccess.push(new Unit(3071, 1887, "Oolid", true, "Plutma"));
                    ArtificialIntelligenceAccess.push(new Unit(3219, 2195, "Oolid", true, "Hlolutmor"));
                    ArtificialIntelligenceAccess.push(new Unit(3231, 2657, "Oolid", false, "Hlotm"));
                    ArtificialIntelligenceAccess.push(new Unit(2948, 3245, "Oolid", false, "Flomlaak"));
                    ArtificialIntelligenceAccess.push(new Unit(3293, 2822, "Oolid", false, "Flotmora"));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(3241, 2194, "Tilk", false, "Kolkezafa"));
                    ArtificialIntelligenceAccess.push(new Unit(3153, 1883, "Tilk", false, "Karkefol"));
                }

                rndx = Math.random();
                if (rndx <= 0.25)
                {
                    ArtificialIntelligenceAccess.push(new Unit(5056, 3469, "Tilk", true, "Lestuxlevt"));
                }
                else if (rndx <= 0.5)
                {
                    ArtificialIntelligenceAccess.push(new Unit(5056, 3469, "Olkrin", "baby", "Vaulswarthe"));
                }

                rndx = Math.random();
                if (rndx <= 0.1)
                {
                    ArtificialIntelligenceAccess.push(new Unit(2362, 6727, "Tilk", false, "Ekenveldt"));
                    ArtificialIntelligenceAccess.push(new Unit(1758, 6733, "Tilk", false, "Akenveldt"));
                    ArtificialIntelligenceAccess.push(new Unit(2049, 6625, "Tilk", false, "Ikenveldt"));
                }
                else if (rndx <= 0.2)
                {
                    ArtificialIntelligenceAccess.push(new Unit(2053, 6796, "Olkrin", "baby", "Vonklaove"));
                }
                else if (rndx <= 0.3)
                {
                    ArtificialIntelligenceAccess.push(new Unit(2049, 6558, "Tilk", true, "Kavenveldt"));
                }
                else if (rndx <= 0.8)
                {
                    ArtificialIntelligenceAccess.push(new Unit(2298, 6676, "Nog", false, "Af"));
                    ArtificialIntelligenceAccess.push(new Unit(2115, 6553, "Nog", true, "Aft"));
                    ArtificialIntelligenceAccess.push(new Unit(2039, 6798, "Nog", true, "Afte"));
                    ArtificialIntelligenceAccess.push(new Unit(1814, 6738, "Nog", false, "Afe"));
                    ArtificialIntelligenceAccess.push(new Unit(1707, 6535, "Nog", true, "Tefa"));
                    ArtificialIntelligenceAccess.push(new Unit(1943, 6477, "Nog", false, "Tafe"));
                    ArtificialIntelligenceAccess.push(new Unit(2232, 6520, "Nog", true, "Efat"));
                    ArtificialIntelligenceAccess.push(new Unit(2443, 6387, "Nog", false, "Faet"));
                }
                else if (rndx <= 0.88)
                {
                    ArtificialIntelligenceAccess.push(new Unit(2055, 6547, "MountainFrich", true, "Holof"));
                }

                rndx = Math.random();
                if (rndx <= 0.2)
                {
                    ArtificialIntelligenceAccess.push(new Unit(2016, 4351, "Nog", false, "Atle"));
                }
                else if (rndx <= 0.4)
                {
                    ArtificialIntelligenceAccess.push(new Unit(2016, 4351, "Nog", true, "Etla"));
                }
                else if (rndx <= 0.5)
                {
                    ArtificialIntelligenceAccess.push(new Unit(2016, 4351, "Nog", true, "Etla"));
                    ArtificialIntelligenceAccess.push(new Unit(1959, 4257, "Nog", true, "Leat"));
                }
                else if (rndx <= 0.6)
                {
                    ArtificialIntelligenceAccess.push(new Unit(2011, 4322, "MountainFrich", false, "Kalofer"));
                }
                else if (rndx <= 0.7)
                {
                    ArtificialIntelligenceAccess.push(new Unit(1513, 4426, "Oolid", false, "Koulpil"));
                }
                else if (rndx <= 0.8)
                {
                    ArtificialIntelligenceAccess.push(new Unit(1513, 4426, "Oolid", true, "Foulok"));
                    ArtificialIntelligenceAccess.push(new Unit(1631, 4236, "Oolid", true, "Fowlomn"));
                }

                rndx = Math.random();
                if (rndx <= 0.3)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-670, 1671, "Miter", false, "Cash"));
                }
                else if (rndx <= 0.6)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-670, 1671, "Miter", true, "Cash"));
                }
                else if (rndx <= 0.7)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-670, 1671, "Miter", false, "Cash"));
                    ArtificialIntelligenceAccess.push(new Unit(-863, 1532, "Miter", false, "Grave"));
                }
                else if (rndx <= 0.8)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-815, 1699, "Miter", true, "Cash"));
                    ArtificialIntelligenceAccess.push(new Unit(-568, 1560, "Miter", true, "Grave"));
                }
                else if (rndx <= 0.9)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-815, 1699, "Miter", true, "Cash"));
                    ArtificialIntelligenceAccess.push(new Unit(-568, 1560, "Miter", false, "Grave"));
                }
                else if (rndx <= 1)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-815, 1699, "Miter", false, "Cash"));
                    ArtificialIntelligenceAccess.push(new Unit(-568, 1560, "Miter", true, "Grave"));
                }

                rndx = Math.random();
                if (rndx <= 0.25)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-1257, 873, "Tilk", true, "Thavenveldt"));
                    ArtificialIntelligenceAccess.push(new Unit(-1409, 492, "Tilk", true, "Dgavemxeldt"));
                    ArtificialIntelligenceAccess.push(new Unit(-1199, 474, "Tilk", false, "Jyermovenm"));
                }
                else if (rndx <= 0.6)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-1249, 1029, "Miter", false, "Ditch"));
                    ArtificialIntelligenceAccess.push(new Unit(-1221, 383, "Miter", true, "Cash"));
                    ArtificialIntelligenceAccess.push(new Unit(-1422, 470, "Miter", true, "Grave"));
                    ArtificialIntelligenceAccess.push(new Unit(-1520, 749, "Miter", true, "Dig"));
                }
                else if (rndx <= 1)
                {
                    ArtificialIntelligenceAccess.push(new Unit(-1221, 383, "Miter", true, "Cash"));
                    ArtificialIntelligenceAccess.push(new Unit(-1422, 470, "Miter", true, "Grave"));
                    ArtificialIntelligenceAccess.push(new Unit(-1520, 749, "Miter", true, "Dig"));
                }

                scenicList.push(new Scenery("spindleTrap", -1748, 1715, -0.33 * Math.PI, true));
                scenicList.push(new Scenery("spindleTrap", -1911, 1543, 0.66 * Math.PI, true));
                scenicList.push(new Scenery("spindleTrap", -1904, 1719, 0.2 * Math.PI, true));
                scenicList.push(new Scenery("spindleTrap", -1777, 1588, -0.55 * Math.PI, true));

                //TODO finish this dungeon (include the lightning spear mage as the final boss if you engage the right quest)

                //Build Scenery
                scenicList.push(new Scenery("caveExit", 959, 16, 3/4 * Math.PI, [35773, 1297], "world"));

                scenicList.push(new Scenery("blackBearFurRug", 2049, 6450, 1/2 * Math.PI, 1.6));
                scenicList.push(new Scenery("skeleton", 2058, 6781, 0.2 * Math.PI, 1.6));
                scenicList.push(new Scenery("feastingTable", 2232, 6536, -1/2 * Math.PI, true));
                scenicList.push(new Scenery("feastingTable", 1790, 6536, -1/2 * Math.PI, true));
                scenicList.push(new Scenery("bartop", 2061, 6712, 1 * Math.PI, true));
                scenicList.push(new Scenery("hearth", 2062, 6855, 0 * Math.PI, "ash"));

                scenicList.push(new Scenery("magicButton", 2805, 1935, Math.PI, "magesCache", 1));
                scenicList.push(new Scenery("skeleton", 2881.6936888668993, 1827.604513908504, 0.68 * Math.PI, 1.4));
                scenicList.push(new Scenery("magicButton", -174, 4470, 1/2 * Math.PI, "magesCache", 2));
                scenicList.push(new Scenery("item", -207, 4455, 0, false, ["arrow", 1, 0]));
                scenicList.push(new Scenery("magicButton", -1104, 553, 0, "magesCache", 3));
                scenicList.push(new Scenery("item", -1217, 593, 0, false, ["steelArrow", 1, 0]));
                scenicList.push(new Scenery("magicLock", -967, 4008, 0, "magesCache"));

                scenicList.push(new Scenery("magicOrbPortal", -6341, 3777, 0, "magesCache", [0, 0, "sagesTrap"]));

                if (uniqueChars.vsevolodLDS == true && quests.theSecretOfTheSagesCacheQuest == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Vsevolod")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-4278, 3654, "Soldier", false, "Vsevolod", {race: "Vardan", faction: "loner", con: 7, speed: 1.2, outfit: ["blackMageRobe", 0], weapon: ["drainingI", [9, 4], 0, 200, 3], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, CNX: 200, MR: 7, patrolStops: 1, patrolLoop: false, route:[[-4285, 3646]]}));
                    }
                }

                if (uniqueChars.aleksiLDS == true && quests.theSecretOfTheSagesCacheQuest == true || uniqueChars.aleksiLDS == true && have("garldsMemories", 1))
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "High Magus Aleksi")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-6341.102330659225, 3708.7013251695707, "Soldier", false, "High Magus Aleksi", {race: "Cephrite", faction: "loner", con: 9, speed: 1.4, outfit: ["magusRobesM", 0], weapon: ["lightningCorseque", [12, 6], 5, 43, 1.5], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, CNX: 50, MR: 4, patrolStops: 1, patrolLoop: false, route:[[-6313.101891814239, 3687.254470007552]]}));
                    }
                }




                if (quests.sagesCacheStash)
                {
                    quests.sagesCacheStash = false;
                    worldItems.push([new Item("oiledArrow", 2051, 6782), 9]);
                    worldItems.push([new Item("longbow", 2066, 6646), 1]);
                    worldItems.push([new Item("longsword", 2099, 6821), 1]);
                    worldItems.push([new Item("pintGlass", 2053, 6701), 1]);
                }

                change = "sagesCache";
            }
        }
    }
    else if (map == "sagesTrap")
    {
        if (region == "sagesTrap")
        {
            if (change != "sagesTrap")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (!ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //barriers

                //REGION CREATION
                //Build AI Units

                if (quests.theSecretOfTheSagesCacheQuest == true)
                {
                    quests.theSecretOfTheSagesCacheCompletionStyle = "foundCache";
                    quests.theSecretOfTheSagesCacheQuest = "complete";
                    if (uniqueChars.vsevolodLDS == true)
                    {
                        quests.completeQuests.push({name: "The Secret of the Sage's Cache", description: "You have solved the puzzle and entered the magical realm wherein the sage's treasure lies, but you have been decieved by Vsevolod who has turned on you."});
                    }
                    else
                    {
                        quests.completeQuests.push({name: "The Secret of the Sage's Cache", description: "You have solved the puzzle and entered the magical realm wherein the sage's treasure lies."});
                    }
                    player.thengarFaction += 20;
                    if (player.class == "Mage" || player.class == "Priest" || player.class == "Shaman")
                    {
                        player.magicalExperience += 300;
                    }
                    else
                    {
                        player.experience += 1100;
                    }
                    player.fame += 1;
                }

                scenicList.push(new Scenery("returnOrbPortal", 0, 0, 0, 1, [-6341, 3777, "sagesCache"]));

                if (uniqueChars.vsevolodLDS == true && quests.theSecretOfTheSagesCacheQuest == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Vsevolod")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(200, -100, "Soldier", false, "Vsevolod", {race: "Vardan", faction: "loner", con: 7, speed: 1.2, outfit: ["blackMageRobe", 0], weapon: ["drainingI", [9, 4], 0, 200, 3], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, CNX: 200, MR: 19, patrolStops: 1, patrolLoop: false, route:[[50405, -10488]]}));
                    }
                }

                if (uniqueChars.aleksiLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "High Magus Aleksi")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-100, 200, "Soldier", false, "High Magus Aleksi", {race: "Cephrite", faction: "loner", con: 9, speed: 1.4, outfit: ["magusRobesM", 0], weapon: ["lightningCorseque", [12, 6], 5, 43, 1.5], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, CNX: 50, MR: 4, patrolStops: 1, patrolLoop: false, route:[[-6313.101891814239, 3687.254470007552]]}));
                    }
                }

                ArtificialIntelligenceAccess.push(new Unit(2000, 1000, "AncientBeing", false, "edod"));
                ArtificialIntelligenceAccess.push(new Unit(4000, -4500, "AncientBeing", false, "ezod"));
                ArtificialIntelligenceAccess.push(new Unit(0, -5000, "AncientBeing", false, "ezob"));
                ArtificialIntelligenceAccess.push(new Unit(-1000, 2000, "AncientBeing", true, "elbav"));
                ArtificialIntelligenceAccess.push(new Unit(6500, 4900, "AncientBeing", true, "evohg"));
                ArtificialIntelligenceAccess.push(new Unit(-7200, -8100, "AncientBeing", false, "izub"));
                ArtificialIntelligenceAccess.push(new Unit(3700, 2500, "AncientBeing", false, "izub"));
                ArtificialIntelligenceAccess.push(new Unit(-6600, 1200, "AncientBeing", true, "izud"));


                scenicList.push(new Scenery("skeleton", 2990, 3998, -3/5 * Math.PI, 1.55));
                if (quests.sagesTrapStash)
                {
                    quests.sagesTrapStash = false;
                    worldItems.push([new Item("theCorpseRing", 3000, 4000), 1]);
                    worldItems.push([new Item("summonDemon", 3020, 3980), 1]);
                    worldItems.push([new Item("surge", 4000, 3990), 1]);
                    worldItems.push([new Item("powerDraw", 2650, 3760), 1]);
                    worldItems.push([new Item("theUndyingEdge", 6000, 5000), 1]);
                }

                change = "sagesTrap";
            }

            //endless
            if (X > 11900)
            {
                X = -9400;
            }
            if (X < -9500)
            {
                X = 11800;
            }
            if (Y > 11900)
            {
                Y = -10650;
            }
            if (Y < -10750)
            {
                Y = 11800;
            }
        }
    }
    else if (map == "olkrinCave")
    {
        if (region == "olkrinCave")
        {
            if (change != "olkrinCave")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (!ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //barriers
                barrierList.push(new Barrier((699.2775959526685), (-626.4157589439692), 610, 55, true));
                barrierList.push(new Barrier((53.525631205374566), (-625.4873771085416), 599, 46, true));
                barrierList.push(new Barrier((59.525631205374566), (-665.4873771085416), 40, 678, true));
                barrierList.push(new Barrier((-201.30830598087573), (-58.62361297357552), 34, 300, true));
                barrierList.push(new Barrier((700.5657995280674), (-59.358577294819156), 34, 300, true));
                barrierList.push(new Barrier((-245.4796189509459), (-69.44429392578598), 944, 45, true));
                barrierList.push(new Barrier((-253.19519507655968), (875.750368990627), 49, 427, true));
                barrierList.push(new Barrier((98.80480492344032), (574.750368990627), 342, 49, true));
                barrierList.push(new Barrier((99.78854284546219), (574.5061676967189), 49, 957, true));
                barrierList.push(new Barrier((997.0312725235607), (-79.25240342488746), 1016, 49, true));

                //REGION CREATION
                //Build AI Units

                //first room
                var rndx = Math.random();
                if (currentSeason == "Frost")
                {
                    if (rndx >= 0.55)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(-35.91479298993537, 718.2031138716949, "Olkrin", false, "Vonklaove"));
                    }
                    else if (rndx >= 0.25)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(801.7774826257606, 252.92874679398903, "Olkrin", "baby", "Vonklaove"));
                    }
                    else if (rndx >= 0.15)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(407.2402681626587, -361.597244535653, "Olkrin", false, "Vonklaove"));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(425.5992467516493, 357.74979540429297, "Olkrin", "baby", "Vonklaove"));
                        ArtificialIntelligenceAccess.push(new Unit(411.9739910131497, 145.78208294963602, "Olkrin", "baby", "Vonklaove"));
                    }
                }
                else
                {
                    if (rndx <= 0.25)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(425.5992467516493, 357.74979540429297, "Olkrin", "baby", "Vonklaove"));
                    }
                    else if (rndx <= 0.05)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(801.7774826257606, 252.92874679398903, "Olkrin", false, "Vonklaove"));
                    }
                }


                //Build Scenery
                scenicList.push(new Scenery("caveExit", 959, 16, 3.3/4 * Math.PI, [31111.6597044643, -8937.125409297807], "world"));

                change = "olkrinCave";
            }
        }
    }
    else if (map == "venningCityPrison")
    {
        if (region == "venningCityPrison")
        {
            if (change != "venningCityPrison")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (!ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //barriers
                barrierList.push(new Barrier(1000, -66, 720, 70, true));
                barrierList.push(new Barrier(330, -66, 720, 70, true));
                barrierList.push(new Barrier(320, -99, 70, 750, true));
                barrierList.push(new Barrier(320, 577, 70, 750, true));

                //scenery
                if (player.prisoner != true)
                {
                    scenicList.push(new Scenery("ladder", 483, 45, 0 * Math.PI, [-18450, 44450], "world"));
                }
                //units
                ArtificialIntelligenceAccess.push(new Unit(780, 338, "Soldier", false, "Prisoner", {race: "Freynor", faction: "arena2", con: 2, speed: 1.5, outfit: ["none", 0], weapon: ["none", [0.45, 0.3], 0, 0, 1], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));

                change = "venningCityPrison";
            }
        }
    }
    else if (map == "mrbHQ")
    {
        if (region == "mrbHQ")
        {
            if (change != "mrbHQ")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (!ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //barriers

                //scenery
                scenicList.push(new Scenery("mrbAssets", 6960.7891866820155, -232268.61677319987, 1/2 * Math.PI, 1, [2, 2116, 2253, "world"]));

                change = "mrbHQ";
            }
        }
    }
    else if (map == "venningMineshaft")
    {
        if (region == "venningMineshaft")
        {
            if (change != "venningMineshaft")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (!ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //barriers
                barrierList.push(new Barrier(1000, 277, 1870, 70, true));
                barrierList.push(new Barrier(1000 - 300, 277 + 1800, 70, 300, true));
                barrierList.push(new Barrier(700, 2077 + 70, 230, 70, true));
                barrierList.push(new Barrier(770, 2307, 70, 3900, true));
                barrierList.push(new Barrier(700 + 3900, 2307 + 70, 300, 70, true));
                barrierList.push(new Barrier(700 + 3900 + 70, 2307 + 300, 70, 1500, true));
                barrierList.push(new Barrier(6100, 2607, 2400, 70, true));
                barrierList.push(new Barrier(6100, 5007, 70, 370, true));
                barrierList.push(new Barrier(6400, 5077, 600, 70, true));
                barrierList.push(new Barrier(6400, 5607, 70, 1570, true));
                barrierList.push(new Barrier(7900, 5677, 670, 70, true));
                barrierList.push(new Barrier(7000, 6277, 70, 900, true));
                barrierList.push(new Barrier(7000, 6347, 300, 70, true));
                barrierList.push(new Barrier(5500, 6577, 70, 1500, true));
                barrierList.push(new Barrier(5500, 6647, 300, 70, true));
                barrierList.push(new Barrier(4530, 6877, 70, 970, true));
                barrierList.push(new Barrier(4530, 5907, 970, 70, true));
                barrierList.push(new Barrier(4600, 5907, 70, 900, true));
                barrierList.push(new Barrier(5430, 5607, 300, 70, true));
                barrierList.push(new Barrier(5500, 5607, 70, 300, true));
                barrierList.push(new Barrier(5730, 3277, 2330, 70, true));
                barrierList.push(new Barrier(5730 - 2100, 3277, 70, 2100, true));
                barrierList.push(new Barrier(3630, 2677, 600, 70, true));
                barrierList.push(new Barrier(330, 2677, 70, 3300, true));
                barrierList.push(new Barrier(330, 1407, 1270, 70, true));
                barrierList.push(new Barrier(400, 1407, 70, 300, true));
                barrierList.push(new Barrier(630, 207, 1200, 70, true));
                barrierList.push(new Barrier(700, 207, 70, 370, true));


                //scenery
                scenicList.push(new Scenery("caveExit", 856, 284, 1/2 * Math.PI, [-17477, 39222], "world"));
                //units
                var rnd = Math.random();
                if (rnd <= 0.15 || quests.theMineshaftMysteryQuest == true)
                {
                    if (Math.round(Math.random()) == 1)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(703, 1764, "Balkur", true, "Benjamin"));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(703, 1764, "Balkur", false, "Benjamin"));
                    }
                }

                if (quests.stolenScriptureLilBaskKilled < 4)
                {
                    ArtificialIntelligenceAccess.push(new Unit(6139, 6271, "Basilisk", "baby", "lilBask"));
                    if (quests.stolenScriptureLilBaskKilled < 3)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(5965, 4795, "Basilisk", "baby", "lilBask"));
                        if (quests.stolenScriptureLilBaskKilled < 2)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(5482, 2891, "Basilisk", "baby", "lilBask"));
                            if (quests.stolenScriptureLilBaskKilled < 1)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(4638, 3037, "Basilisk", "baby", "lilBask"));
                            }
                        }
                    }
                }
                if (quests.stolenScriptureBaskKilled < 2)
                {
                    ArtificialIntelligenceAccess.push(new Unit(7221, 5970, "Basilisk", false, "Bask"));
                    if (quests.stolenScriptureBaskKilled < 1)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(5321, 6261, "Basilisk", false, "Bask"));
                    }
                }
                //if (quests.theMineshaftMysteryQuest != "complete")
                //{
                    ArtificialIntelligenceAccess.push(new Unit(4277, 2907, "Soldier", false, "Rafaard the Looter", {race: "Freynor", faction: "Freynor", con: 6, speed: 1.34, outfit: ["northernClothing", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.85], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                //}

                //EVENTS
                if (quests.theMineshaftMysteryQuest == true)
                {
                    scenicList.push(new Scenery("event", 3816, 2529, 25, "theMineshaftMystery0"));
                }

                //ITEMS
                if (quests.stolenScripturePutScroll == false)
                {
                    quests.stolenScripturePutScroll = true;
                    worldItems.push([new Item("stolenTablet", 4851, 6722), 1]);
                    worldItems.push([new Item("rawGold", 7785, 5762), 1]);
                    worldItems.push([new Item("rawGold", 7800, 5751), 1]);
                }

                change = "venningMineshaft";
            }
        }
    }
    else if (map == "arcusMine")
    {
        if (region == "arcusMine")
        {
            if (change != "arcusMine")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (!ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //barriers
                barrierList.push(new Barrier(1000, 277, 300, 70, true));//left
                barrierList.push(new Barrier(700, 207, 70, 370, true));//bototm
                barrierList.push(new Barrier(630, 207, 1270, 70, true));//right

                barrierList.push(new Barrier(630, 207 + 1270, 70, 370, true)); //b

                barrierList.push(new Barrier(700 + 300, 207 + 300, 70, 370, true)); //b

                barrierList.push(new Barrier(1000 - 70, 277 + 1200, 370, 70, true)); //l

                barrierList.push(new Barrier(700 + 600, 277 + 300, 900, 70, true)); //ll

                barrierList.push(new Barrier(700 + 600, 277 + 1200 - 70, 70, 1270, true)); //bb

                barrierList.push(new Barrier(700 + 300, 277 + 1570 - 70, 70, 900, true)); //bb
                barrierList.push(new Barrier(700 + 1800, 277 + 1200, 670, 70, true)); //ll

                barrierList.push(new Barrier(700 + 1200, 277 + 1870 - 70, 70, 670, true)); //uu
                barrierList.push(new Barrier(700 + 1130, 277 + 1570 - 70, 370, 70, true)); //ur

                scenicList.push(new Scenery("alcaStone", 1072 , 608, 1.5, 2, 1));
                scenicList.push(new Scenery("alcaStone", 1167 , 1091, 3, 1.5, 3));
                scenicList.push(new Scenery("alcaStone", 718 , 1006, 6.75, 1, 3));
                scenicList.push(new Scenery("alcaStone", 1054 , 1425, 0, 3, 2));
                scenicList.push(new Scenery("alcaStone", 1720 , 1656, 1.24, 2.5, 1));
                scenicList.push(new Scenery("alcaStone", 2316 , 1653, 8.9, 2, 2));
                scenicList.push(new Scenery("alcaStone", 2339 , 1524, -5, 3, 2));
                scenicList.push(new Scenery("alcaStone", 2451 , 2034, 11.5, 1.5, 3));
                scenicList.push(new Scenery("alcaStone", 2022 , 1937, -16, 3, 1));


                //scenery
                scenicList.push(new Scenery("arcusExit", 856, 284, 1/2 * Math.PI, [-47261, -8859], "world"));

                if (uniqueChars.gavorLDS == true)
                {
                    var hits = 0;
                    for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                    {
                        if (ArtificialIntelligenceAccess[i].ID == "Arcus Mining Co. Foreman Gavor")
                        {
                            hits += 1;
                        }
                    }
                    if (hits == 0)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(774, 598, "Person", false, "Arcus Mining Co. Foreman Gavor", {race: "Nirwaden", faction: "Nirwaden", personality: "violent", outfit: ["nirwadenClothingM", 0], weapon: ["none", [0.65, 0.45], 0, 0, 1.33], ranged: [false, "arrow", 1, 2000, 1, 6, 0, "none", 1.25], patrolStops: 1, patrolLoop: false, route:[[839, 397]]}));
                        for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                        {
                            if (ArtificialIntelligenceAccess[i].ID == "Toggin")
                            {
                                ArtificialIntelligenceAccess[i].healthMAX = 16;
                                ArtificialIntelligenceAccess[i].health = 16;
                            }
                        }
                    }
                }

                scenicList.push(new Scenery("oilLamp", 815, 442, 5.8678137818541137 * Math.PI, true, [1000, 2]));

                change = "arcusMine";
            }
        }
    }
    else if (map == "lethikCityPrison")
    {
        if (region == "lethikCityPrison")
        {
            if (change != "lethikCityPrison")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (!ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //barriers
                barrierList.push(new Barrier(1000, -66, 720, 70, true));
                barrierList.push(new Barrier(-275, -66, 720, 70, true));
                barrierList.push(new Barrier(-291, -99, 70, 1320, true));
                barrierList.push(new Barrier(-291, 577, 70, 1320, true));

                //scenery
                scenicList.push(new Scenery("ladder", 373, 465, 0 * Math.PI, [53014, -6700], "world"));
                //units
                ArtificialIntelligenceAccess.push(new Unit(467, 434, "Soldier", false, "Beulingerr Soldier", {race: "Thengar", faction: "Thengar", con: 7, speed: 1.38, outfit: ["chainArmour", 7], weapon: ["longsword", [10, 5], 0, 16, 1.4], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, patrolStops: 0, patrolLoop: true, route:[]}));
                ArtificialIntelligenceAccess.push(new Unit(852, 495, "Soldier", false, "Slave Man", {race: "Kel", faction: "arena2", con: 1.25, speed: 1, outfit: ["none", 0], weapon: ["none", [0.45, 0.3], 0, 0, 1], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                ArtificialIntelligenceAccess.push(new Unit(855, 252, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena2", con: 1, speed: 1.15, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.85], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                ArtificialIntelligenceAccess.push(new Unit(869, 284, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                ArtificialIntelligenceAccess.push(new Unit(794, 248, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                ArtificialIntelligenceAccess.push(new Unit(520, 319, "Soldier", false, "Slave Man", {race: "Kel", faction: "arena2", con: 1.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.45, 0.3], 0, 0, 1], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                ArtificialIntelligenceAccess.push(new Unit(178, 505, "Soldier", false, "Slave Man", {race: "Kel", faction: "Kel", con: 1.25, speed: 1, outfit: ["none", 0], weapon: ["none", [0.45, 0.3], 0, 0, 1], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                ArtificialIntelligenceAccess.push(new Unit(304, 388, "Soldier", false, "Beulingerr Soldier", {race: "Thengar", faction: "Thengar", con: 7, speed: 1.38, outfit: ["chainArmour", 7], weapon: ["longsword", [10, 5], 0, 16, 1.4], ranged: [false, "arrow", 8, 2100, 1, 7, 0, "stunI", 2.65], rot: -1/2*Math.PI, patrolStops: 0, patrolLoop: true, route:[]}));
                ArtificialIntelligenceAccess.push(new Unit(374, 192, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena2", con: 2, speed: 0, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.85], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                ArtificialIntelligenceAccess.push(new Unit(389, 114, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                ArtificialIntelligenceAccess.push(new Unit(50, 25, "Soldier", false, "Slave Boy", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.075, 0.075], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                ArtificialIntelligenceAccess.push(new Unit(4, 41, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena2", con: 0.25, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                ArtificialIntelligenceAccess.push(new Unit(-14, 74, "Soldier", false, "Slave Girl", {race: "Kel", faction: "arena2", con: 0.75, speed: 0, outfit: ["none", 0], weapon: ["none", [0.045, 0.045], 0, 0, 0.75], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], kid: true, patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                ArtificialIntelligenceAccess.push(new Unit(41, 287, "Soldier", false, "Slave Man", {race: "Kel", faction: "arena2", con: 1.25, speed: 1, outfit: ["none", 0], weapon: ["none", [0.45, 0.3], 0, 0, 1], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                ArtificialIntelligenceAccess.push(new Unit(-70, 429, "Soldier", false, "Slave Man", {race: "Kel", faction: "arena2", con: 1.25, speed: 1, outfit: ["none", 0], weapon: ["none", [0.45, 0.3], 0, 0, 1], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));
                ArtificialIntelligenceAccess.push(new Unit(623, 53, "Soldier", false, "Slave Woman", {race: "Kel", faction: "arena2", con: 1, speed: 1.15, outfit: ["none", 0], weapon: ["none", [0.2, 0.2], 0, 0, 0.85], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[348 - 750, 5428], [391 - 750, 5303], [260 - 750, 5339]]}));

                //If not noble or royal and thengan the guards will attack you for trespassing.
                if (player.raceName != "Thengar" || player.title != "Nobility" && player.title != "Royalty")
                {
                    console.log("pass");
                    for (var ii = 0; ii < ArtificialIntelligenceAccess.length; ii++)
                    {
                        if (ArtificialIntelligenceAccess[ii].team == "Thengar")
                        {
                            ArtificialIntelligenceAccess[ii].disturbedTime = new Date().getTime();
                        }
                    }
                }

                change = "lethikCityPrison";
            }
        }
    }
    else if (map == "atalinDrugLab")
    {
        if (region == "atalinDrugLab")
        {
            if (change != "atalinDrugLab")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (!ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //barriers
                barrierList.push(new Barrier(1000, -66, 700, 70, true));
                barrierList.push(new Barrier(640, -66, 700, 70, true));
                barrierList.push(new Barrier(320, 215, 70, 700, true));
                barrierList.push(new Barrier(320, 577, 70, 700, true));

                //scenery
                scenicList.push(new Scenery("ladder", 955, 331, 0 * Math.PI, [-41189, 724], "world"));
                scenicList.push(new Scenery("oilLamp", 721, 502, 3.86947818541137 * Math.PI, true, [1000, 2]));
                scenicList.push(new Scenery("oilLamp", 988, 440, 0.86947818541137 * Math.PI, true, [1000, 2]));
                scenicList.push(new Scenery("cauldron", 934, 529, 0.2, true));
                scenicList.push(new Scenery("crate", 849, 548, 1.5, 2, [1.2]));
                scenicList.push(new Scenery("crate", 975, 551, 2.36, 1, [0.81]));
                scenicList.push(new Scenery("item", 896, 515, 2.5, "estolGang", ["kolumPowder", 3, -11]));

                scenicList.push(new Scenery("trapdoor", 751, 326, 0 * Math.PI, [4457, -1018], "estolTunnel"));

                //units
                ArtificialIntelligenceAccess.push(new Unit(808, 306, "Soldier", false, "Estol Thug", {race: "Nirwaden", faction: "EstolGang", con: 8, speed: 1.4, outfit: ["blackBearLeatherArmour", 2.5], weapon: ["nirineseSabre", [9, 9], 0, 21, 1.25], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 1, patrolLoop: false, route:[[813, 325]]}));
                ArtificialIntelligenceAccess.push(new Unit(921, 475, "Soldier", false, "Estol Alchemist", {race: "Nirwaden", faction: "EstolGang", con: 3, speed: 1.2, outfit: ["varnFurClothing", 0], weapon: ["hammer", [2, 3], 0, 10, 1.15], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 1, patrolLoop: false, route:[[921, 480]]}));

                if (player.estolgangFaction <= 10)
                {
                    for (var ii = 0; ii < ArtificialIntelligenceAccess.length; ii++)
                    {
                        if (ArtificialIntelligenceAccess[ii].team == "EstolGang")
                        {
                            ArtificialIntelligenceAccess[ii].disturbedTime = new Date().getTime();
                        }
                    }
                }

                change = "atalinDrugLab";
            }
        }
    }
    else if (map == "estolTunnel")
    {
        if (region == "estolTunnel")
        {
            if (change != "estolTunnel")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (!ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //barriers
                barrierList.push(new Barrier(1000, -2126, 2860, 70, true));
                barrierList.push(new Barrier(640, -2958, 3250, 70, true));

                barrierList.push(new Barrier(-30, 220, 70, 670, true));
                barrierList.push(new Barrier(29, 77, 500, 70, true));

                //barrierList.push(new Barrier(320, 215, 70, 700, true));
                barrierList.push(new Barrier(20, 577, 70, 1300, true));

                barrierList.push(new Barrier(1000, -2126, 70, 3300, true));
                barrierList.push(new Barrier(590, -2493, 70, 2210, true));

                barrierList.push(new Barrier(4230, -2126, 1200, 70, true));
                barrierList.push(new Barrier(4600, -2496, 1570, 70, true));
                barrierList.push(new Barrier(4230, -926, 70, 500, true));

                barrierList.push(new Barrier(3100, -2493, 70, 1700, true));

                barrierList.push(new Barrier(3100, -3623, 1200, 70, true));
                barrierList.push(new Barrier(2730, -3623, 1200, 70, true));

                barrierList.push(new Barrier(3100, -3623, 70, 370, true));
                barrierList.push(new Barrier(2360, -3623, 70, 370, true));

                barrierList.push(new Barrier(2430, -4893, 1270, 70, true));

                barrierList.push(new Barrier(3400, -4893, 1270, 70, true));
                barrierList.push(new Barrier(2430, -4893, 70, 970, true));

                //scenery
                scenicList.push(new Scenery("ladder", 4563, -2378, 0 * Math.PI, [-41733, -1760], "world"));
                scenicList.push(new Scenery("ladder", 851, 496, 0 * Math.PI, [-45172, -2201], "world"));
                scenicList.push(new Scenery("ladder", 251, 496, 0 * Math.PI, [-45375, -2205], "world"));
                scenicList.push(new Scenery("ladder", 4457, -1018, 0 * Math.PI, [751, 326], "atalinDrugLab"));
                scenicList.push(new Scenery("oilLamp", 976, 529, 0.86947818541137 * Math.PI, true, [1000, 2]));
                scenicList.push(new Scenery("oilLamp", 4529, -996, 2.86947818541137 * Math.PI, true, [1000, 2]));
                scenicList.push(new Scenery("oilLamp", 3063, -2417, 8.87683723 * Math.PI, true, [1000, 2]));
                scenicList.push(new Scenery("oilLamp", 211, 378, 5.2718276484671 * Math.PI, true, [1000, 2]));
                scenicList.push(new Scenery("oilLamp", 656, 307, 3.86947818541137 * Math.PI, true, [1000, 2]));
                scenicList.push(new Scenery("oilLamp", 903, -2232, -1.86947818541137 * Math.PI, true, [1000, 2]));
                scenicList.push(new Scenery("oilLantern", 2957, -3737, -4.448488284422484 * Math.PI, true, [1000, 2]));
                scenicList.push(new Scenery("oilLantern", 2756, -4110, -6.648488284422484 * Math.PI, true, [1000, 2]));
                scenicList.push(new Scenery("oilLantern", 3189, -4345, -2.228488284422484 * Math.PI, true, [1000, 2]));
                scenicList.push(new Scenery("oilLantern", 2838, -4640, -1.111111284422484 * Math.PI, true, [1000, 2]));
                scenicList.push(new Scenery("oilLantern", 3269, -4745, 3.448488284422484 * Math.PI, true, [1000, 2]));
                scenicList.push(new Scenery("oilLantern", 3148, -3982, 3.448488284422484 * Math.PI, true, [1000, 2]));
                scenicList.push(new Scenery("oilLantern", 2977, -4370, 3.448488284422484 * Math.PI, true, [1000, 2]));
                scenicList.push(new Scenery("oilLamp", 2604, -4412, 0.86947818541137 * Math.PI, true, [1000, 2]));
                scenicList.push(new Scenery("oilLamp", 2615, -3787, -0.55947818541137 * Math.PI, true, [1000, 2]));
                //scenicList.push(new Scenery("cauldron", 934, 529, 0.2, true));
                //scenicList.push(new Scenery("crate", 849, 548, 1.5, 2, [1.2]));
                //scenicList.push(new Scenery("crate", 975, 551, 2.36, 1, [0.81]));
                //scenicList.push(new Scenery("item", 896, 515, 2.5, "estolGang", ["kolumPowder", 3, -11]));

                //units
                ArtificialIntelligenceAccess.push(new Unit(808, 306, "Soldier", false, "Estol Thug", {race: "Nirwaden", faction: "EstolGang", con: 8, speed: 1.4, outfit: ["blackBearLeatherArmour", 2.5], weapon: ["nirineseSabre", [9, 9], 0, 21, 1.25], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 1, patrolLoop: false, route:[[813, 325]]}));
                //ArtificialIntelligenceAccess.push(new Unit(921, 475, "Soldier", false, "Estol Alchemist", {race: "Nirwaden", faction: "EstolGang", con: 3, speed: 1.2, outfit: ["varnFurClothing", 0], weapon: ["hammer", [2, 3], 0, 10, 1.15], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 1, patrolLoop: false, route:[[921, 480]]}));

                if (player.estolgangFaction < 50)
                {
                    for (var ii = 0; ii < ArtificialIntelligenceAccess.length; ii++)
                    {
                        if (ArtificialIntelligenceAccess[ii].team == "EstolGang")
                        {
                            ArtificialIntelligenceAccess[ii].disturbedTime = new Date().getTime();
                        }
                    }
                }

                change = "estolTunnel";
            }
        }
    }
    else if (map == "atalinCityPrison")
    {
        if (region == "atalinCityPrison")
        {
            if (change != "atalinCityPrison")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (!ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //barriers
                barrierList.push(new Barrier(1000, -66, 700, 70, true));
                barrierList.push(new Barrier(640, -66, 700, 70, true));
                barrierList.push(new Barrier(320, 215, 70, 700, true));
                barrierList.push(new Barrier(320, 577, 70, 700, true));

                //scenery
                if (player.nirwadenFaction > -25)
                {
                    scenicList.push(new Scenery("ladder", 764, 513, 0 * Math.PI, [-41071, 1774], "world"));
                }
                else
                {
                    scenicList.push(new Scenery("event", 900, 400, 0, "atalinPrisonSentence"));
                }
                scenicList.push(new Scenery("oilLamp", 856, 430, 2.211984 * Math.PI, true, [1000, 2]));

                //units

                change = "atalinCityPrison";
            }
        }
    }
    else if (map == "atalinTortureChamber")
    {
        if (region == "atalinTortureChamber")
        {
            if (change != "atalinTortureChamber")
            {
                for (var i = 0; i < ArtificialIntelligenceAccess.length; i++)
                {
                    dialogueReset(ArtificialIntelligenceAccess[i]);
                }
                //Delete All Non-native AI Units
                for (var i = ArtificialIntelligenceAccess.length - 1; i >= 0; i--) //Splice will alter the list so the numbers will be off if you loop through beginning to end, so this for loop goes from the end to the beginning.
                {
                    if (!ArtificialIntelligenceAccess[i].guarantee)
                    {
                        ArtificialIntelligenceAccess.splice(i, 1);
                        console.log(i + " in list 'AI access' has been deleted. " + ArtificialIntelligenceAccess.length);
                    }
                    else
                    {
                        console.log(i + " in list 'AI access' has been saved.");
                    }
                }

                //Delete All Non-native Items
                //worldItems = [];

                //Delete All Non-native Structures

                //Delete All Non-native Scenery
                scenicList = [];

                //Delete All Barriers
                barrierList = [];

                //barriers
                barrierList.push(new Barrier(1000, -66, 700, 70, true));
                barrierList.push(new Barrier(640, -66, 700, 70, true));
                barrierList.push(new Barrier(320, 215, 70, 700, true));
                barrierList.push(new Barrier(320, 577, 70, 700, true));

                //scenery
                scenicList.push(new Scenery("ladder", 900, 400, 0 * Math.PI, [-46251, 1177], "world"));
                scenicList.push(new Scenery("nirwadenMueble", 863, 539, -1 * Math.PI, 3)); //rect table
                scenicList.push(new Scenery("deadBody", 903, 540, -1/2 * Math.PI, 1, 1)); //nirwaden
                scenicList.push(new Scenery("blood", 864, 539, -1/2 * Math.PI, 3, 0.9));
                scenicList.push(new Scenery("skeleton", 930, 316, -2/5 * Math.PI, 1.6)); //nirwaden
                scenicList.push(new Scenery("nirwadenMueble", 748, 345, -1/2 * Math.PI, 3)); //rect table
                scenicList.push(new Scenery("deadBody", 746, 365, 0 * Math.PI, 1, 0.65)); //nirwaden
                scenicList.push(new Scenery("blood", 746, 359, -1.2 * Math.PI, 3, 0.724));

                scenicList.push(new Scenery("oilLamp", 800, 464, 3.211984 * Math.PI, true, [1000, 2]));

                //units
                ArtificialIntelligenceAccess.push(new Unit(783, 488, "Soldier", false, "Inquisition Torturer", {race: "Nirwaden", faction: "Nirwaden", con: 10, speed: 1.3, outfit: ["inquisitionOutfit", 4], weapon: ["nirineseSabre", [10, 9], 0, 22, 1.4], ranged: [false, "arrow", 4, 2000, 1, 6, 0, "none", 1.4], patrolStops: 0, patrolLoop: false, route:[[813, 325]]}));


                if (player.inquisitionRank == "none")
                {
                    if (player.title != "Royalty" && player.title != "Nobility" && player.title != "Highfolk" && player.class != "Priest" || player.raceName != "Nirwaden")
                    {
                        for (var ii = 0; ii < ArtificialIntelligenceAccess.length; ii++)
                        {
                            if (ArtificialIntelligenceAccess[ii].team == "Nirwaden" && ArtificialIntelligenceAccess[ii].dmx == map)
                            {
                                ArtificialIntelligenceAccess[ii].disturbedTime = new Date().getTime();
                            }
                        }
                    }
                }

                change = "atalinTortureChamber";
            }
        }
    }
}

function spacer(amt)
{
    return amt - (2 * amt) * Math.random();
}

function sSpacer(amt, seed)
{
    return amt - (2 * amt) * seeder(seed);
}

function generator2(seedA, seedB, seedC, seedD, seedE, biome, xSt, ySt, dontIncludeUnits) //the maps will be generated starting in the top left corner --> down and to the right
{
    var genID = "generated-" + (seeder((seedA + seedB + seedC + seedD + seedE) * (biome + 1)) + Math.random());
    loggedGenID = genID;
    var mapSz = 9750; //this is the aproximate pixle length of a map
    var seededE = seeder(seedE);
    var seededD = seeder(seedD);
    var seededC = seeder(seedC);
    var seededB = seeder(seedB);
    var seededA = seeder(seedA);
    var seeded1;
    var seeded2;
    var seeded3;
    var seeded4;
    var seeded5;

    if (biome == 0) //Kellish Grasslands
    {
        for (var i = 0; i < Math.floor(seededB * 8); i++) //avraks
        {
            seeded2 = seeder(seedA + seedA * i);
            seeded3 = seeder(seedA + seedA / (i + 1));

            ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz, ySt - seeded3 * mapSz, "Avrak", false, "generated"));
        }
        for (var i = 0; i < Math.floor(seededE * 2.15); i++) //anterhills
        {
            seeded2 = seeder(seedB + seedB * i);
            seeded3 = seeder(seedB + seedB / (i + 1));

            scenicList.push(new Scenery("anterHill", xSt - seeded2 * mapSz, ySt - seeded3 * mapSz, 2*Math.PI * Math.random(), true));
        }
        for (var i = 0; i < Math.floor(seededD * 19); i++) //Itlin bushes
        {
            seeded2 = seeder(seedA + seedE * i);
            seeded3 = seeder(seedE + seedC / (i + 1));

            if (seeder(seededB + 89910 * i) > 0.44)
            {
                scenicList.push(new Scenery("itlinPlant", xSt - seeded2 * mapSz, ySt - seeded3 * mapSz, 2*Math.PI * Math.random(), true));
            }
            else
            {
                scenicList.push(new Scenery("ishPlant", xSt - seeded2 * mapSz, ySt - seeded3 * mapSz, 2*Math.PI * Math.random(), true));
            }
        }
        for (var i = 0; i < Math.floor(seededE * 16); i++) //muf plants
        {
            seeded1 = seeder(seedC + seedA * i * 6800);
            seeded5 = seeder(seedB + seedD / (i + 190));


            scenicList.push(new Scenery("mufPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2*Math.PI * Math.random(), true));
        }
        for (var i = 0; i < Math.floor(seededB * 16); i++) //luuf plants
        {
            seeded1 = seeder(seedA + seedD * i * 17890);
            seeded5 = seeder(seedE + seedA * (i + 19560));

            scenicList.push(new Scenery("luufPlant", xSt - seeded1 * mapSz, ySt - seeded5 * mapSz, 2*Math.PI * Math.random(), true));
        }
        for (var i = 0; i < Math.floor(((seededB + seededA) / 2) * 22); i++) //palnt plants
        {
            seeded1 = seeder(seedD + seedE * i * 17890);
            seeded5 = seeder(seedE + seedC * (i + 19560));

            scenicList.push(new Scenery("palntPlant", xSt - seeded1 * mapSz, ySt - seeded5 * mapSz, 2*Math.PI * Math.random(), true));
        }
        for (var i = 0; i < Math.floor(((seededC + seededD + seededE) / 3) * 11); i++) //buttermellow plants
        {
            seeded1 = seeder(seedE + seedE * i);
            seeded5 = seeder(seedD + seedD / (i + 1));


            scenicList.push(new Scenery("butterMellowPlant", xSt - seeded1 * mapSz, ySt - seeded5 * mapSz, 2*Math.PI * Math.random(), true));
        }
        for (var i = 0; i < Math.floor(seededA * 20); i++) //techi plants
        {
            seeded1 = seeder(seedC + seedC * i * 23000);
            seeded5 = seeder(seedC + 100 + seedC * 56 * i * i);


            scenicList.push(new Scenery("techiPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2*Math.PI * Math.random(), true));
        }

        if (elevation == -2 || elevation == -1)
        {
            for (var i = 0; i < (Math.floor(seededD * 9) + 1); i++) //techi plants
            {
                seeded5 = seeder(seedC + seedE * i * 19191);
                seeded1 = seeder(seedE + 19 + seedC * 19 * i);

                if (seeder(seedB + 900 * i) > 0.495)
                {
                    scenicList.push(new Scenery("corneliusPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2*Math.PI * Math.random(), true));
                }
                else
                {
                    scenicList.push(new Scenery("rilthasiaPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2*Math.PI * Math.random(), true));
                }
            }
        }

        if (elevation == 0)
        {
            for (var i = 0; i < Math.floor(seededC * 11); i++) //ardils
            {
                seeded1 = seeder(seedB + seedB * 90000 * i);
                seeded4 = seeder(seedA + seedD * 110201 * i);

                if (seeder(seedE + 88888 * i) > 0.5)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Ardil", true, genID));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Ardil", false, genID));
                }
            }
        }
        else
        {
            for (var i = 0; i < Math.floor(seededC * 5); i++) //ardils
            {
                seeded1 = seeder(seedB + seedB * 90000 * i);
                seeded4 = seeder(seedA + seedD * 110201 * i);

                if (seeder(seedE + 999992 * i) > 0.5)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Ardil", true, genID));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Ardil", false, genID));
                }
            }
        }

        for (var i = 0; i < Math.floor(seededA * 8); i++) //evraks
        {
            seeded2 = seeder(seedA + seedA * 12012 * i);
            seeded3 = seeder(seedD + seedA * 5555 * i);

            ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded2 * mapSz, "Evrak", false, genID));
        }

        if (elevation == 0)
        {
            for (var i = 0; i < Math.floor(seededA * 9); i++) //friches / frich packs
            {
                seeded2 = seeder(seedD + seedD * 12012 * i);
                seeded3 = seeder(seedD + seedD * 5555 * i);

                for (var j = 0; j < Math.floor(seededE * 6); j++)
                {
                    if (seeder(seedB + 76823 * j) > 0.615)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(35), ySt - seeded3 * mapSz + spacer(35), "Frich", true, genID));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(35), ySt - seeded3 * mapSz + spacer(35), "Frich", false, genID));
                    }
                }
            }
        }

        for (var i = 0; i < Math.floor(seededE * 6); i++) //Naaprid herds
        {
            seeded1 = seeder(seedB + seedA * 222 * i);
            seeded2 = seeder(seedD + seedC * 1119 * i);

            for (var j = 0; j < Math.floor(seededE * 9); j++)
            {
                var seeded5 = seeder(seedB + seedD * Math.ceil(76823 / j));

                if (seeded5 < 0.4)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + spacer(130), ySt - seeded2 * mapSz + spacer(130), "Naaprid", true, genID));
                }
                else if (seeded5 < 0.81)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + spacer(130), ySt - seeded2 * mapSz + spacer(130), "Naaprid", false, genID));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + spacer(130), ySt - seeded2 * mapSz + spacer(130), "Naaprid", "baby", genID));
                }
            }
        }

        for (var i = 0; i < Math.floor(((seededA + seededB) / 2) * 17); i++) //tunsk mounds
        {
            seeded1 = seeder(seedC + seedC * 12 * i);
            seeded2 = seeder(seedB + seedB / (39 * i + 5));

            scenicList.push(new Scenery("tunskMound", xSt - seeded2 * mapSz, ySt - seeded1 * mapSz, 2*Math.PI * Math.random(), true));
        }
        for (var i = 0; i < Math.floor(seededC * 14); i++) //grushes / grushweed patches
        {
            seeded1 = seeder(seedB + seedA * 17 * i);
            seeded2 = seeder(seedA + seedB / (5 * i + 3));

            seeded3 = seeder(i * seedA);
            for (var j = 0; j < Math.floor(seeded3 * 7); j++)
            {
                seeded4 = seeder(seedC + seedB * 5 * j);
                seeded5 = seeder(seedA + seedC * 19 * j);

                if (Math.random() <= 0.29)
                {
                    var rand = Math.random();
                    if (rand < 0.2)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + (Math.floor(seeded4 * 50) + 39) * j, ySt - seeded2 * mapSz + (Math.floor(seeded5 * 50) + 39) * j, "Grush", true, genID));
                    }
                    else if (rand < 0.5)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + (Math.floor(seeded4 * 50) + 16) * j, ySt - seeded2 * mapSz + (Math.floor(seeded5 * 50) + 16) * j, "Grush", "baby", genID));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + (Math.floor(seeded4 * 50) + 25) * j, ySt - seeded2 * mapSz + (Math.floor(seeded5 * 50) + 25) * j, "Grush", false, genID));
                    }
                }
                else
                {
                    var rand = Math.random();
                    if (rand < 0.2)
                    {
                        scenicList.push(new Scenery("grushweedPlant", xSt - seeded1 * mapSz + (Math.floor(seeded4 * 50) + 39) * j, ySt - seeded2 * mapSz + (Math.floor(seeded5 * 50) + 39) * j, 2*Math.PI * Math.random(), seeder(seedC + 99 * i + 38 * j) + 0.65));
                    }
                    else if (rand < 0.5)
                    {
                        scenicList.push(new Scenery("grushweedPlant", xSt - seeded1 * mapSz + (Math.floor(seeded4 * 50) + 16) * j, ySt - seeded2 * mapSz + (Math.floor(seeded5 * 50) + 16) * j, 2*Math.PI * Math.random(), seeder(seedB + 99 * i + 49 * j) + 0.05));
                    }
                    else
                    {
                        scenicList.push(new Scenery("grushweedPlant", xSt - seeded1 * mapSz + (Math.floor(seeded4 * 50) + 25) * j, ySt - seeded2 * mapSz + (Math.floor(seeded5 * 50) + 25) * j, 2*Math.PI * Math.random(), seeder(seedA + 99 * i + 27 * j) + 0.25));
                    }
                }
            }
        }

        for (var i = 0; i < Math.floor(((seededB + seededA) / 2) * 9); i++) //mofus and mofu nests
        {
            seeded1 = seeder(seedD + seedC * 17 * i);
            seeded2 = seeder(seedA + seedA / (5 * i + 3));

            seeded3 = seeder(i * seedA);
            for (var j = 0; j < Math.floor(seeded3 * 11); j++)
            {
                seeded4 = seeder(seedB + seedB * 60 * j);
                seeded5 = seeder(seedC + seedC * 390 * j);

                    var rand = Math.random();
                    if (rand < 0.4)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + (Math.floor(seeded4 * 70) + 39) * j, ySt - seeded2 * mapSz + (Math.floor(seeded5 * 50) + 39) * j, "Mofu", true, genID));
                    }
                    else if (rand < 0.5)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + (Math.floor(seeded4 * 50) + 16) * j, ySt - seeded2 * mapSz + (Math.floor(seeded5 * 50) + 16) * j, "Mofu", "baby", genID));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + (Math.floor(seeded4 * 60) + 25) * j, ySt - seeded2 * mapSz + (Math.floor(seeded5 * 50) + 25) * j, "Mofu", false, genID));
                    }

                if (Math.random() <= 0.84)
                {
                    if (rand < 0.4)
                    {
                        scenicList.push(new Scenery("mofuNest", xSt - seeded1 * mapSz + (Math.floor(seeded4 * 70) + 39) * j, ySt - seeded2 * mapSz + (Math.floor(seeded5 * 50) + 39) * j, 2 * Math.PI * Math.random(), seeder(seedC + 99 * i + 38 * j) + 0.65));
                    }
                    else if (rand >= 0.5)
                    {
                        scenicList.push(new Scenery("mofuNest", xSt - seeded1 * mapSz + (Math.floor(seeded4 * 60) + 25) * j, ySt - seeded2 * mapSz + (Math.floor(seeded5 * 50) + 25) * j, 2 * Math.PI * Math.random(), seeder(seedA + 99 * i + 27 * j) + 0.25));
                    }
                }
            }
        }
    }
    else if (biome == 1) //nordic woods
    {
        for (var i = 0; i < Math.floor(261 + seeder(seededE * 9887 + seedA / 100) * 300); i++) //trees
        {
            seeded2 = seeder((seedE + seedD + 87989) * (i + 50));
            seeded3 = seeder(i * ((seedA + 897) + seedC) * 54 + 96 * seedB * (i + 19));

            scenicList.push(new Scenery("pineTree", xSt - seeded2 * mapSz, ySt - seeded3 * mapSz, 2 * Math.PI * Math.random(), true));
        }
        for (var i = 0; i < Math.floor(seededD * 26); i++) //lizard
        {
            seeded2 = seeder(seedB + seedD * i * 23252);
            seeded5 = seeder(seedC + seedC * (i + 4343556));
            seeded3 = seeder(seedA + seedE * (i + 79214956));
            seeded4 = seeder(seedC + seedD * (i + 897462));

            var rnd = seeder(seedD + 208721864 * i);
            if (rnd > 0.3) {
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded5 * mapSz, "Lizard", false, genID));
            }
            else {
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz, ySt - seeded4 * mapSz, "Lizard", true, genID));
            }
        }
        for (var i = 0; i < Math.floor(seededC * 16); i++) //bear
        {
            seeded2 = seeder(seedA + seedD * i * 899122);
            seeded5 = seeder(seedD + seedC * (i + 4826));
            seeded3 = seeder(seedB + seedA * (i + 12222));
            seeded4 = seeder(seedE + seedE * (i + 3222562));

            var rnd = seeder(seedC + 99829761 * i);
            if (rnd > 0.8)
            {
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz, ySt - seeded2 * mapSz, "BlackBear", true, genID));
            }
            else if (rnd > 0.6)
            {
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(25), ySt - seeded4 * mapSz + spacer(25), "BlackBear", true, genID));
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(100),ySt - seeded4 * mapSz + spacer(100), "BlackBear", false, genID));
            }
            else
            {
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded4 * mapSz, ySt - seeded3 * mapSz, "BlackBear", false, genID));
            }
        }

        if (X > 47082) //in Thengaria only (WEST)
        {
            for (var i = 0; i < Math.floor(seededC * 26); i++) //kofke
            {
                seeded1 = seeder(seedA + seedD * i * 17890);
                seeded5 = seeder(seedE + seedA * (i + 19560));

                scenicList.push(new Scenery("kofkePlant", xSt - seeded1 * mapSz, ySt - seeded5 * mapSz, 2 * Math.PI * Math.random(), true));
            }
            for (var i = 0; i < Math.floor(seededE * 7); i++) //steugiurne
            {
                seeded1 = seeder(seedA + seedD * i * 900 + 300 * seedB);
                seeded5 = seeder(seedB + seedD * (i + 283));

                scenicList.push(new Scenery("steugiurnePlant", xSt - seeded1 * mapSz, ySt - seeded5 * mapSz, 2 * Math.PI * Math.random(), true));
            }
            for (var i = 0; i < Math.floor(seededE * 5); i++) //thalis
            {
                seeded1 = seeder(seedC + seedC * i * 89651239283);
                seeded5 = seeder(seedB + seedB * (i + 48627881));

                scenicList.push(new Scenery("thalisPlant", xSt - seeded1 * mapSz, ySt - seeded5 * mapSz, 2 * Math.PI * Math.random(), true));
            }
            for (var i = 0; i < Math.floor(seededE * 19); i++) //callop
            {
                seeded1 = seeder(seedA + seedD * i * 900 + 300 * seedB);
                seeded5 = seeder(seedB + seedD * (i + 283));

                scenicList.push(new Scenery("callopPlant", xSt - seeded1 * mapSz, ySt - seeded5 * mapSz, 2 * Math.PI * Math.random(), true));
            }
            for (var i = 0; i < Math.floor(seededE * 19); i++) //darb
            {
                seeded1 = seeder(seedC + seedC * i * 700 + 100 * seedA);
                seeded2 = seeder(seedA + seedB * (i + 90022343));

                scenicList.push(new Scenery("darbPlant", xSt - seeded1 * mapSz, ySt - seeded2 * mapSz, 2 * Math.PI * Math.random(), true));
            }
            if (seeder(seedE + 9993714638717) > 0.7) {
                for (var i = 0; i < Math.floor(seededA * 2); i++) //brightbloom
                {
                    seeded1 = seeder(seedB + seedA * i * 855 + 366 * seedC);
                    seeded2 = seeder(seedC + seedB * (i + 334456));

                    scenicList.push(new Scenery("brightbloomPlant", xSt - seeded1 * mapSz, ySt - seeded2 * mapSz, 2 * Math.PI * Math.random(), true));
                }
            }
            for (var i = 0; i < Math.floor(seededA * 20); i++) //fletter
            {
                seeded1 = seeder((seedB + seedA) * i * 1225 + 399726 * seedB);
                seeded2 = seeder(seedC + seedE * (i + 33523536));

                var rnd = seeder(seedD + 3259876121 * i);
                if (rnd > 0.6) {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Fletter", true, genID));
                }
                else {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Fletter", false, genID));
                }
            }
            for (var i = 0; i < Math.floor(seededB * 18); i++) //skol
            {
                seeded1 = seeder(seedA + seedD * i * 198790);
                seeded2 = seeder(seedA + seedA * i * 5555);
                seeded4 = seeder(seedE + seedA * (i + 983820));
                seeded3 = seeder(seedC + seedC * (i + 6880));

                var rnd = seeder(seedB + 98568761 * i);
                if (rnd > 0.9) {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Skol", true, genID));
                }
                else if (rnd > 0.8) {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded4 * mapSz, "Skol", false, genID));
                }
                else if (rnd > 0.4) {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz, ySt - seeded4 * mapSz, "Skol", false, genID));
                    ArtificialIntelligenceAccess.push(new Unit(60 + xSt - seeded2 * mapSz, 190 + ySt - seeded4 * mapSz, "Skol", false, genID));
                    ArtificialIntelligenceAccess.push(new Unit(200 + xSt - seeded2 * mapSz, -150 + ySt - seeded4 * mapSz, "Skol", false, genID));
                    ArtificialIntelligenceAccess.push(new Unit(110 + xSt - seeded2 * mapSz, 110 + ySt - seeded4 * mapSz, "Skol", false, genID));
                    ArtificialIntelligenceAccess.push(new Unit(300 + xSt - seeded2 * mapSz, -55 + ySt - seeded4 * mapSz, "Skol", true, genID));
                }
                else {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded3 * mapSz, "Skol", false, genID));
                    ArtificialIntelligenceAccess.push(new Unit(60 + xSt - seeded1 * mapSz, 190 + ySt - seeded3 * mapSz, "Skol", false, genID));
                    ArtificialIntelligenceAccess.push(new Unit(200 + xSt - seeded1 * mapSz, -150 + ySt - seeded3 * mapSz, "Skol", false, genID));
                    ArtificialIntelligenceAccess.push(new Unit(110 + xSt - seeded1 * mapSz, 110 + ySt - seeded3 * mapSz, "Skol", false, genID));
                    ArtificialIntelligenceAccess.push(new Unit(300 + xSt - seeded1 * mapSz, -55 + ySt - seeded3 * mapSz, "Skol", false, genID));
                }
            }
            for (var i = 0; i < Math.floor(seededC * 29); i++) //hoffalgre
            {
                seeded2 = seeder(seedD + seedD * i * 9984722);
                seeded5 = seeder(seedD + seedC * (i + 5343556));
                seeded3 = seeder(seedB + seedE * (i + 89214956));
                seeded4 = seeder(seedB + seedE * (i + 112462));

                var rnd = seeder(seedE + 99829761 * i);
                if (rnd > 0.625) {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz, ySt - seeded2 * mapSz, "Hoffalgre", false, genID));
                }
                else if (rnd > 0.39) {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(30), ySt - seeded4 * mapSz + spacer(30), "Hoffalgre", true, genID));
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(30), ySt - seeded4 * mapSz + spacer(30), "Hoffalgre", true, genID));
                }
                else {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded4 * mapSz, ySt - seeded3 * mapSz, "Hoffalgre", true, genID));
                }
            }
        }
        else {
            if (Y < -13476) //SOUTH
            {
                for (var i = 0; i < Math.floor(seeder(seedE + seedD + 12312378265) * 12); i++) //viper
                {
                    seeded2 = seeder((seedE + seedB) * (4 + i * 749));
                    seeded5 = seeder((seedB + seedA) * (i + 8527));
                    seeded3 = seeder((seedD + seedA) * (i + 12986));
                    seeded4 = seeder((seedB + seedC) * (i + 297864));

                    var rnd = seeder((seedA * seedE / 10980) * i * seedC);
                    if (rnd > 0.65)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded5 * mapSz, "Viper", true, genID));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz, ySt - seeded4 * mapSz, "Viper", false, genID));
                    }
                }
                for (var i = 0; i < Math.floor(seeder(seedE + seedD + 782765737825) * 8); i++) //bequon
                {
                    seeded2 = seeder((seedD + seedB) * (5 + i * 7465));
                    seeded5 = seeder((seedA + seedC) * (i + 8234));
                    seeded3 = seeder((seedE + seedC) * (i + 21486));
                    seeded4 = seeder((seedB + seedD) * (i + 2354));

                    scenicList.push(new Scenery("bequonPlant", xSt - seeded3 * mapSz, ySt - seeded3 * mapSz, 2 * Math.PI * Math.random(), true));
                }
                for (var i = 0; i < Math.floor(seeder(seedB + seedC + 58637825) * 28); i++) //Teppreklia
                {
                    seeded2 = seeder((seedE + seedB) * (5 + i * 338965));
                    seeded5 = seeder((seedA + seedD) * (i + 1434));
                    seeded3 = seeder((seedB + seedE) * (i + 9823686));
                    seeded4 = seeder((seedC + seedB) * (i + 4284));

                    scenicList.push(new Scenery("tepprekliaPlant", xSt - seeded3 * mapSz, ySt - seeded3 * mapSz, 2 * Math.PI * Math.random(), true));
                }
            }
            else {
                for (var i = 0; i < Math.floor(seededB * 4); i++) //viper
                {
                    seeded2 = seeder((seedE + seedB) * (1 + i * 899));
                    seeded5 = seeder((seedB + seedA) * (i + 214096));
                    seeded3 = seeder((seedC + seedA) * (i + 387326));
                    seeded4 = seeder((seedB + seedE) * (i + 21680004));

                    var rnd = seeder((seedA * seedE / 10980) * i * seedC);
                    if (rnd > 0.9)
                    {
                        //ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded5 * mapSz, "Viper", true, genID));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz, ySt - seeded4 * mapSz, "Viper", false, genID));
                    }
                }
                if (seeder(seedA * 55555) < 0.22) {
                    for (var i = 0; i < Math.floor(seededB * 2); i++) //halcif
                    {
                        seeded1 = seeder((seedE + seedE) * i * 65524);
                        seeded5 = seeder(seedD * seedB * (i + 4947));

                        scenicList.push(new Scenery("halcifPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2 * Math.PI * Math.random(), true));
                    }
                }
                for (var i = 0; i < Math.floor(seededE * 4); i++) //cyrinthilim
                {
                    seeded1 = seeder((seedE + seedD) * i * 65524);
                    seeded5 = seeder(seedC * seedA * (i + 4947));

                    if (seeder(seedA * seedD * 5782 + seedB * 9875122) < 0.6) {
                        scenicList.push(new Scenery("cyrinthilimPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2 * Math.PI * Math.random(), true));
                    }
                }
                for (var i = 0; i < Math.floor(seededB * 34); i++) //shehid
                {
                    seeded2 = seeder((seedC + seedD) * i * 987106124);
                    seeded5 = seeder((seedE + seedE) * (i + 72746));
                    seeded3 = seeder((seedC + seedA) * (i + 356));
                    seeded4 = seeder((seedA + seedA) * (i + 214));

                    var rnd = seeder((seedA * seedE / 10980) * i * seedC);
                    if (rnd > 0.8) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded5 * mapSz, "Shehid", true, genID));
                    }
                    else {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz, ySt - seeded4 * mapSz, "Shehid", false, genID));
                    }
                }
                for (var i = 0; i < Math.floor(seeder((seededB + 88632755517832) / seededA) * 20); i++) //glin
                {
                    seeded1 = seeder((seedE + seedD) * i * 948877);
                    seeded5 = seeder(seedC * 787811012 + 3 * seedB * (i + 85215));

                    scenicList.push(new Scenery("glinPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2 * Math.PI * Math.random(), true));
                }
            }


            for (var i = 0; i < Math.floor(seededE * 9); i++) //varn
            {
                seeded2 = seeder(seedC + seedB * i * 1211202);
                seeded5 = seeder(seedC + seedA * (i + 346));
                seeded3 = seeder(seedB + seedB * (i + 98172));
                seeded4 = seeder(seedB + seedB * (i + 79822));

                var rnd = seeder(seedC + 99829761 * i);
                if (rnd > 0.85) {
                    if (Math.random() < 0.5) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz, ySt - seeded2 * mapSz, "Varn", true, genID));
                    }
                    else {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz, ySt - seeded2 * mapSz, "Varn", false, genID));
                    }
                }
                else if (rnd > 0.4) {
                    if (Math.random() < 0.5) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(90), ySt - seeded4 * mapSz + spacer(90), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(90), 75 + ySt - seeded4 * mapSz + spacer(90), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(30), ySt - seeded4 * mapSz + spacer(30), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(30), 75 + ySt - seeded4 * mapSz + spacer(30), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(30), ySt - seeded4 * mapSz + spacer(30), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(100), 75 + ySt - seeded4 * mapSz + spacer(100), "Varn", false, genID));
                    }
                    else {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(30), ySt - seeded4 * mapSz + spacer(30), "Varn", true, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(90), 75 + ySt - seeded4 * mapSz + spacer(90), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(90), ySt - seeded4 * mapSz + spacer(90), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(80), 75 + ySt - seeded4 * mapSz + spacer(80), "Varn", true, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(40), ySt - seeded4 * mapSz + spacer(50), "Varn", true, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(30), 75 + ySt - seeded4 * mapSz + spacer(30), "Varn", false, genID));
                    }
                }
                else {
                    if (Math.random() < 0.5) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(50), ySt - seeded4 * mapSz + spacer(50), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(80), 75 + ySt - seeded4 * mapSz + spacer(80), "Varn", true, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(30), ySt - seeded4 * mapSz + spacer(30), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(30), 75 + ySt - seeded4 * mapSz + spacer(30), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(40), ySt - seeded4 * mapSz + spacer(40), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(55), 75 + ySt - seeded4 * mapSz + spacer(55), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(105), ySt - seeded4 * mapSz + spacer(70), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(45), 75 + ySt - seeded4 * mapSz + spacer(60), "Varn", true, genID));
                    }
                    else {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(40), ySt - seeded4 * mapSz + spacer(40), "Varn", true, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(40), 75 + ySt - seeded4 * mapSz + spacer(40), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(40), ySt - seeded4 * mapSz + spacer(40), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(40), 75 + ySt - seeded4 * mapSz + spacer(40), "Varn", true, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(40), ySt - seeded4 * mapSz + spacer(40), "Varn", true, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(40), 75 + ySt - seeded4 * mapSz + spacer(40), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(40), ySt - seeded4 * mapSz + spacer(40), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(40), 75 + ySt - seeded4 * mapSz + spacer(40), "Varn", true, genID));
                    }
                }
            }
            for (var i = 0; i < Math.floor(seeder(seededB + seedA + seedD) * 3); i++) //beehives
            {
                seeded2 = seeder(seedB + seedB * i);
                seeded3 = seeder(seedB + seedB / (i + 1));

                scenicList.push(new Scenery("beehive", xSt - seeded2 * mapSz, ySt - seeded3 * mapSz, 2 * Math.PI * Math.random(), true));
            }
            for (var i = 0; i < Math.floor(seeder(seededA + 99 * seedB) * 14); i++) //stomwik
            {
                seeded2 = seeder(seedC + seedE * i * 69895);
                seeded4 = seeder(seedE + seedA / (i + 32874914289));

                scenicList.push(new Scenery("stomwikPlant", xSt - seeded4 * mapSz, ySt - seeded2 * mapSz, 2 * Math.PI * Math.random(), true));
            }
            for (var i = 0; i < Math.floor(seeder(seededC + 564341 * seedA) * 25); i++) //neprilne
            {
                seeded2 = seeder(seedA + seedC * i * 5985);
                seeded4 = seeder((seedE * i + seedA) + 2459 * (i + 867));

                scenicList.push(new Scenery("neprilnePlant", xSt - seeded4 * mapSz, ySt - seeded2 * mapSz, 2 * Math.PI * Math.random(), true));
            }
            for (var i = 0; i < Math.floor(seeder(seededD + 7989747231) * 16); i++) //common berry bushes
            {
                seeded2 = seeder(seedA + seedE * i);
                seeded3 = seeder(seedE + seedC / (i + 1));

                if (seeder(seededB + 89910 * i) > 0.34) {
                    scenicList.push(new Scenery("akerPlant", xSt - seeded3 * mapSz, ySt - seeded3 * mapSz, 2 * Math.PI * Math.random(), true));
                }
                else {
                    scenicList.push(new Scenery("pluttPlant", xSt - seeded2 * mapSz, ySt - seeded1 * mapSz, 2 * Math.PI * Math.random(), true));
                }
            }
            for (var i = 0; i < Math.floor(seededE * 18); i++) //culpris
            {
                seeded1 = seeder(seedB + seedD * i * 6800);
                seeded5 = seeder(seedD + seedC / (i + 190));

                scenicList.push(new Scenery("culprisPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2 * Math.PI * Math.random(), true));
            }

            if (X < -30000 && Y < 6278) //in Nirwaden only (EAST)
            {
                for (var i = 0; i < Math.floor(seeder(seedE + seedB + 6879372675365) * 3); i++) //changeling
                {
                    seeded2 = seeder((seedD + seedA) * (5 + i * 666));
                    seeded5 = seeder((seedB + seedC) * (i + 9087827));
                    seeded3 = seeder((seedD + seedA) * (i + 232986));
                    seeded4 = seeder((seedC + seedE) * (i + 280987864));

                    var rnd = seeder((seedC * seedE / 10980) * i * (seedD + seedA));
                    if (rnd > 0.55)
                    {
                        if (Math.random() >= 0.55)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded5 * mapSz, "Changeling", false, genID));
                        }
                    }
                }
                for (var i = 0; i < Math.floor(seeder((seededC + 99761242) / seededA) * 21); i++) //halgom
                {
                    seeded1 = seeder((seedC + seedB) * i * 661727);
                    seeded5 = seeder(seedA * 78652382 + 3 * seedD * (i + 581738765));

                    scenicList.push(new Scenery("halgomPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2 * Math.PI * Math.random(), true));
                }

                for (var i = 0; i < Math.floor(seeder((seededE + 3214576122534)) * 18); i++) //halgom
                {
                    seeded1 = seeder((seedB + seedE) * i * 661727);
                    seeded5 = seeder(seedC * 78652382 + 3 * seedA * (i + 47886865));

                    scenicList.push(new Scenery("iemaPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2 * Math.PI * Math.random(), true));
                }

                for (var i = 0; i < Math.floor(seededB * 10); i++) //boar
                {
                    seeded1 = seeder(seedA + seedD * i * 17890);
                    seeded5 = seeder(seedE + seedA * (i + 19560));

                    var rnd = seeder(seedB + 98568761 * i);
                    if (rnd > 0.7) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Boar", true, genID));
                    }
                    else if (rnd > 0.4) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded4 * mapSz, "Boar", false, genID));
                    }
                    else if (rnd > 0.2) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded2 * mapSz, "Boar", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz + spacer(110), ySt - seeded2 * mapSz + spacer(110), "Boar", false, genID));
                    }
                    else if (rnd > 0.1) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Boar", true, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + spacer(110), ySt - seeded4 * mapSz + spacer(110), "Boar", false, genID));
                    }
                    else {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Boar", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + spacer(110),ySt - seeded4 * mapSz + spacer(110), "Boar", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + spacer(180),ySt - seeded4 * mapSz + spacer(130), "Boar", false, genID));
                    }
                }
                for (var i = 0; i < Math.floor(seeder(18 + seededB) * 8); i++) //molte
                {
                    seeded2 = seeder(seedA + seedD * i * 27758);
                    seeded5 = seeder(seedE + seedC * (i + 1234556));
                    seeded3 = seeder(seedE + seedA * (i + 8645656));
                    seeded4 = seeder(seedC + seedB * (i + 3532));

                    var rnd = seeder(seedB + 99829761 * i);
                    if (rnd > 0.4) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded5 * mapSz, "Molte", false, genID));
                    }
                    else {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz, ySt - seeded4 * mapSz, "Molte", true, genID));
                    }
                }
                for (var i = 0; i < Math.floor(seeder(seededB * 978987 + seedA * 35) * 9); i++) //BorbBeetle
                {
                    seeded2 = seeder(seedE + seedD * i * 27758);
                    seeded5 = seeder(seedE + seedA * (i + 1234556));
                    seeded3 = seeder(seedC + seedA * (i + 8645656));
                    seeded4 = seeder(seedC + seedE * (i + 3532));

                    var rnd = seeder(seedB + 99829761 * i);
                    if (rnd > 0.41) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded5 * mapSz, "BorbBeetle", false, genID));
                    }
                    else {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz, ySt - seeded4 * mapSz, "BorbBeetle", true, genID));
                    }
                }
            }
            else {
                for (var i = 15; i < Math.floor(seeder(seededD + 798974723111241111) * 31); i++) //common berry bushes
                {
                    seeded2 = seeder(seedA * 656412 + seedC * i);
                    seeded3 = seeder(seedB + seedA / (i + 1));

                    if (seeder(seededB + 27856120 * i) > 0.34) {
                        scenicList.push(new Scenery("akerPlant", xSt - seeded3 * mapSz, ySt - seeded3 * mapSz, 2 * Math.PI * Math.random(), true));
                    }
                    else {
                        scenicList.push(new Scenery("pluttPlant", xSt - seeded2 * mapSz, ySt - seeded1 * mapSz, 2 * Math.PI * Math.random(), true));
                    }
                }
                for (var i = 0; i < Math.floor(seededB * 13); i++) //wyr
                {
                    seeded1 = seeder(seedC + seedA * i * 6677278431124);
                    seeded5 = seeder(seedD + seedC / (i + 87637677776));

                    scenicList.push(new Scenery("wyrPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2 * Math.PI * Math.random(), true));
                }
                if (seeder(seedC + 7899) > 0.65) {
                    for (var i = 0; i < Math.floor(seededD * 2); i++) //tylun
                    {
                        seeded1 = seeder(seedE * seedB * i * 855524);
                        seeded5 = seeder(seedB * seedA / (i + 2894677));

                        scenicList.push(new Scenery("tylunPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2 * Math.PI * Math.random(), true));
                    }
                }
                if (seeder(seedB * 31991) > 0.7) {
                    for (var i = 0; i < Math.floor(seededE * 2); i++) //ogard
                    {
                        seeded1 = seeder((seedE + seedD) * i * 65524);
                        seeded5 = seeder(seedC * seedA * (i + 4947));

                        scenicList.push(new Scenery("ogardPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2 * Math.PI * Math.random(), true));
                    }
                }
                for (var i = 0; i < Math.floor(seeder(seededE + 9874 + ((34 + seedA) * seedD)) * 17); i++) //grib
                {
                    seeded2 = seeder(seedB + seedD * i * 1089765602);
                    seeded5 = seeder(seedC + seedB * (i + 332525));
                    seeded3 = seeder(seedB + seedE * (i + 234122));
                    seeded4 = seeder(seedE + seedB * (i + 78623522));

                    var rnd = seeder(seedC + 99829761 * i);
                    if (rnd > 0.65) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz, ySt - seeded2 * mapSz, "Grib", true, genID));
                    }
                    else if (rnd > 0.5) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz, ySt - seeded4 * mapSz, "Grib", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(90), ySt - seeded4 * mapSz + spacer(75), "Grib", false, genID));
                    }
                    else {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded4 * mapSz, ySt - seeded3 * mapSz, "Grib", false, genID));
                    }
                }
                for (var i = 0; i < Math.floor(seeder(seededC + 8976721453687 / (seedE + seedC)) * 26); i++) //narthwarp
                {
                    seeded2 = seeder((seedD + seedB) * (787 + i * 88976729));
                    seeded5 = seeder((seedB + seedD) * (i + 5843796));
                    seeded3 = seeder((seedB + seedA) * (i + 7867326));
                    seeded4 = seeder((seedD + seedE) * (i + 478398004));

                    var rnd = seeder((seedC * seedA / 277910808) * i * seedD);
                    if (rnd > 0.91)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded5 * mapSz, "Narthwarp", true, genID));
                    }
                    else
                    {
                        rnd = seeder((seedB * seedA / 2778657238) * i * seedD);
                        if (rnd > 0.91)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded5 * mapSz, "Narthwarp", false, genID));
                        }
                        else
                        {
                            rnd = seeder((seedC * seedD / 19757491111) * i * seedA);
                            if (rnd > 0.5)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz + spacer(20), ySt - seeded5 * mapSz + spacer(20), "Narthwarp", false, genID));
                                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(20), ySt - seeded4 * mapSz + spacer(20), "Narthwarp", false, genID));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(65), ySt - seeded4 * mapSz + spacer(65), "Narthwarp", false, genID));
                                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz + spacer(65), ySt - seeded5 * mapSz + spacer(65), "Narthwarp", false, genID));
                                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(65), ySt - seeded4 * mapSz + spacer(65), "Narthwarp", false, genID));
                                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz + spacer(65), ySt - seeded5 * mapSz + spacer(65), "Narthwarp", false, genID));
                                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(65), ySt - seeded4 * mapSz + spacer(65), "Narthwarp", false, genID));
                            }
                        }
                    }
                }
            }
        }
    }
    else if (biome == 2) //Nirwaden Grasslands
    {
        for (var i = 0; i < Math.floor(seededB * 6); i++) //naaprid
        {
            seeded2 = seeder(seedD + seedA * i);
            seeded3 = seeder(seedC + seedE / (i + 1));


            for (var j = 0; j < Math.floor(seeder(seededE * (seedD + seededE)) * 8); j++)
            {
                var rando = seeder(seedD * i + 6 * 62 + 1284298 * j * seedA);
                if (rando > 0.75)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(120), ySt - seeded3 * mapSz + spacer(120), "Naaprid", true, genID));
                }
                else if (rando > 0.25)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(120), ySt - seeded3 * mapSz + spacer(120), "Naaprid", false, genID));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(120), ySt - seeded3 * mapSz + spacer(120), "Naaprid", "baby", genID));
                }
            }
        }

        if (map != "n1e4" && map != "n1e5")
        {
            for (var i = 0; i < Math.floor(seededD * 2); i++) //horse
            {
                seeded2 = seeder(seedD + seedE * i);
                seeded3 = seeder(seedB + seedA / (i + 1));

                if (seeder(seedC + 89 + (seedC * 2 * i)) >= 0.5)
                {
                    for (var j = 0; j < Math.floor(seeder(seededA * (seedD + seededB)) * 19); j++)
                    {
                        var rando = seeder(seedE * i + 45 * 22 + 67645 * j * seedB);
                        if (rando > 0.75)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(320), ySt - seeded3 * mapSz + spacer(320), "Horse", true, genID));
                        }
                        else if (rando > 0.25)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(250), ySt - seeded3 * mapSz + spacer(250), "Horse", false, genID));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(200), ySt - seeded3 * mapSz + spacer(200), "Horse", "baby", genID));
                        }
                    }
                }
            }
        }
        for (var i = 0; i < Math.floor(seededC * 4.85); i++) //Wobea Plant
        {
            seeded2 = seeder(seedA + seedB * i);
            seeded3 = seeder(seedB + seedE * (i + 1));

            scenicList.push(new Scenery("wobeaPlant", xSt - seeded2 * mapSz, ySt - seeded3 * mapSz, 2*Math.PI * Math.random(), true));
        }
        for (var i = 0; i < Math.floor(((seededA + seededB) / 2) * 21); i++) //Erguer flowers
        {
            seeded2 = seeder(seedB + seedE * i);
            seeded3 = seeder(seedD * i + seedC * i + 1);


            scenicList.push(new Scenery("erguerPlant", xSt - seeded2 * mapSz, ySt - seeded3 * mapSz, 2*Math.PI * Math.random(), true));
        }
        for (var i = 0; i < Math.floor(seededE * 16); i++) //Chona and polyapa trees
        {
            seeded2 = seeder(seedB * i + seedD + 77 * i);
            seeded3 = seeder(seedC + i * seedC);

            if (seeder(seedB * i + seedD * seedA + 575757578 * i) > 0.49)
            {
                scenicList.push(new Scenery("chonaTree", xSt - seeded2 * mapSz, ySt - seeded3 * mapSz, 2*Math.PI * Math.random(), true));
            }
            else
            {
                scenicList.push(new Scenery("polyapaTree", xSt - seeded2 * mapSz, ySt - seeded3 * mapSz, 2*Math.PI * Math.random(), true));
            }
        }
        for (var i = 0; i < Math.floor(seededB * 18); i++) //techi plants
        {
            seeded1 = seeder(seedA + seedA * i * 23000);
            seeded5 = seeder(seedA * i + 100 + seedD * 56 * i);


            scenicList.push(new Scenery("techiPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2*Math.PI * Math.random(), true));
        }


        for (var i = 0; i < Math.floor(seededC * 3); i++) //ardils
        {
            seeded1 = seeder(seedC + seedD * 7854500 * i);
            seeded4 = seeder(seedA + seedA * 11078651 * i);

            if (seeder(seedE + 88888 * i) > 0.5)
            {
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Ardil", true, genID));
            }
            else
            {
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Ardil", false, genID));
            }
        }

        for (var i = 0; i < Math.floor(seededB * 15); i++) //peacocks
        {
            seeded2 = seeder(seedB + seedA + seedA * 12012 * i);
            seeded3 = seeder(seedD + seedA * 5555 * i);

            if (seeder(seedD + seedE + 999 * i) > 0.55)
            {
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded2 * mapSz, "Peacock", true, genID));
            }
            else
            {
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded2 * mapSz, "Peacock", false, genID));
            }
        }

        for (var i = 0; i < Math.floor(seededE * 11); i++) //friches / frich packs
        {
            seeded2 = seeder(seedB + seedC * 12012 * i);
            seeded3 = seeder(seedA + seedD * 5555 * i);

            for (var j = 0; j < Math.floor(seeder(seededA * 39 + 0.5 * i) * 6); j++)
            {
                var rando = seeder(seedC * 98754673 * j + i * seedA + 30);
                if (rando > 0.94)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(100), ySt - seeded3 * mapSz + spacer(100), "Frich", "massive", genID));
                }
                else if (rando > 0.22)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(75), ySt - seeded3 * mapSz + spacer(75), "Frich", true, genID));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(90), ySt - seeded3 * mapSz + spacer(90), "Frich", false, genID));
                }
            }
        }

        if (Y < -13813)
        {
            for (var i = 0; i < Math.floor(((seededB + seededA) / 2) * 7); i++) //palnt plants
            {
                seeded1 = seeder(seedD + seedE * i * 17890);
                seeded5 = seeder(seedE + seedC * (i + 19560));

                scenicList.push(new Scenery("palntPlant", xSt - seeded1 * mapSz, ySt - seeded5 * mapSz, 2*Math.PI * Math.random(), true));
            }
            for (var i = 0; i < Math.floor(((seededA + seededB) / 2) * 8); i++) //tunsk mounds
            {
                seeded1 = seeder(seedC + seedC * 14.5 * i);
                seeded2 = seeder(seedB + seedB / (82 * i + 16));

                scenicList.push(new Scenery("tunskMound", xSt - seeded2 * mapSz, ySt - seeded1 * mapSz, 2*Math.PI * Math.random(), true));
            }
            for (var i = 0; i < Math.floor(((seededD + seededC) / 2) * 3); i++) //chupacabras
            {
                seeded1 = seeder(seedE + seedC * 13 * i);
                seeded2 = seeder(seedA + seedD / (46 * i + 51));

                var rando = seeder(seedD + seedD + 999 * i + 99 * seedB);
                if (rando > 0.94)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded2 * mapSz, "Chupacabras", true, genID));
                }
                else if (rando < 0.11)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded2 * mapSz, "Chupacabras", false, genID));
                }
            }
        }
        if (elevation < 0)
        {
            for (var i = 0; i < Math.floor(seededB * 2); i++)
            {
                seeded2 = seeder(seedA + seedA * 12012 * i);
                seeded3 = seeder(seedD + seedA * 5555 * i);

                var rando = seeder(seedD + seedD + 999 * i + 99 * seedB);
                if (rando > 0.99)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded2 * mapSz, "Griffin", true, genID));
                }
                else if (rando <= 0.05)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded2 * mapSz, "Griffin", false, genID));
                }
            }
        }

    }
    //console.log(scenicList);

    if (dontIncludeUnits == true)
    {
        for (var trimm = ArtificialIntelligenceAccess.length - 1; trimm >= 0; trimm--)
        {
            if (ArtificialIntelligenceAccess[trimm].ID == genID && !ArtificialIntelligenceAccess[trimm].guarantee)
            {
                ArtificialIntelligenceAccess.splice(trimm, 1);
            }
        }
    }
}

function generator(seedA, seedB, seedC, seedD, seedE, biome, xSt, ySt, dontIncludeUnits) //the maps will be generated starting in the top left corner --> down and to the right
{
    var genID = "generated-" + (seeded((seedA + seedB + seedC + seedD + seedE) * (biome + 1)) + Math.random());
    loggedGenID = genID;
    var mapSz = 9750; //this is the aproximate pixle length of a map
    var seededE = seeded(seedE);
    var seededD = seeded(seedD);
    var seededC = seeded(seedC);
    var seededB = seeded(seedB);
    var seededA = seeded(seedA);
    var seeded1;
    var seeded2;
    var seeded3;
    var seeded4;
    var seeded5;

    if (biome == 0) //Kellish Grasslands
    {
        for (var i = 0; i < Math.floor(seededB * 8); i++) //avraks
        {
            seeded2 = seeded(seedA + seedA * i);
            seeded3 = seeded(seedA + seedA / (i + 1));

            ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz, ySt - seeded3 * mapSz, "Avrak", false, "generated"));
        }
        for (var i = 0; i < Math.floor(seededE * 2.15); i++) //anterhills
        {
            seeded2 = seeded(seedB + seedB * i);
            seeded3 = seeded(seedB + seedB / (i + 1));

            scenicList.push(new Scenery("anterHill", xSt - seeded2 * mapSz, ySt - seeded3 * mapSz, 2*Math.PI * Math.random(), true));
        }
        for (var i = 0; i < Math.floor(seededD * 19); i++) //Itlin bushes
        {
            seeded2 = seeded(seedA + seedE * i);
            seeded3 = seeded(seedE + seedC / (i + 1));

            if (seeded(seededB + 89910 * i) > 0.44)
            {
                scenicList.push(new Scenery("itlinPlant", xSt - seeded2 * mapSz, ySt - seeded3 * mapSz, 2*Math.PI * Math.random(), true));
            }
            else
            {
                scenicList.push(new Scenery("ishPlant", xSt - seeded2 * mapSz, ySt - seeded3 * mapSz, 2*Math.PI * Math.random(), true));
            }
        }
        for (var i = 0; i < Math.floor(seededE * 16); i++) //muf plants
        {
            seeded1 = seeded(seedC + seedA * i * 6800);
            seeded5 = seeded(seedB + seedD / (i + 190));


            scenicList.push(new Scenery("mufPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2*Math.PI * Math.random(), true));
        }
        for (var i = 0; i < Math.floor(seededB * 16); i++) //luuf plants
        {
            seeded1 = seeded(seedA + seedD * i * 17890);
            seeded5 = seeded(seedE + seedA * (i + 19560));

            scenicList.push(new Scenery("luufPlant", xSt - seeded1 * mapSz, ySt - seeded5 * mapSz, 2*Math.PI * Math.random(), true));
        }
        for (var i = 0; i < Math.floor(((seededB + seededA) / 2) * 22); i++) //palnt plants
        {
            seeded1 = seeded(seedD + seedE * i * 17890);
            seeded5 = seeded(seedE + seedC * (i + 19560));

            scenicList.push(new Scenery("palntPlant", xSt - seeded1 * mapSz, ySt - seeded5 * mapSz, 2*Math.PI * Math.random(), true));
        }
        for (var i = 0; i < Math.floor(((seededC + seededD + seededE) / 3) * 11); i++) //buttermellow plants
        {
            seeded1 = seeded(seedE + seedE * i);
            seeded5 = seeded(seedD + seedD / (i + 1));


            scenicList.push(new Scenery("butterMellowPlant", xSt - seeded1 * mapSz, ySt - seeded5 * mapSz, 2*Math.PI * Math.random(), true));
        }
        for (var i = 0; i < Math.floor(seededA * 20); i++) //techi plants
        {
            seeded1 = seeded(seedC + seedC * i * 23000);
            seeded5 = seeded(seedC + 100 + seedC * 56 * i * i);


            scenicList.push(new Scenery("techiPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2*Math.PI * Math.random(), true));
        }

        if (elevation == -2 || elevation == -1)
        {
            for (var i = 0; i < (Math.floor(seededD * 9) + 1); i++) //techi plants
            {
                seeded5 = seeded(seedC + seedE * i * 19191);
                seeded1 = seeded(seedE + 19 + seedC * 19 * i);

                if (seeded(seedB + 900 * i) > 0.495)
                {
                    scenicList.push(new Scenery("corneliusPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2*Math.PI * Math.random(), true));
                }
                else
                {
                    scenicList.push(new Scenery("rilthasiaPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2*Math.PI * Math.random(), true));
                }
            }
        }

        if (elevation == 0)
        {
            for (var i = 0; i < Math.floor(seededC * 11); i++) //ardils
            {
                seeded1 = seeded(seedB + seedB * 90000 * i);
                seeded4 = seeded(seedA + seedD * 110201 * i);

                if (seeded(seedE + 88888 * i) > 0.5)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Ardil", true, genID));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Ardil", false, genID));
                }
            }
        }
        else
        {
            for (var i = 0; i < Math.floor(seededC * 5); i++) //ardils
            {
                seeded1 = seeded(seedB + seedB * 90000 * i);
                seeded4 = seeded(seedA + seedD * 110201 * i);

                if (seeded(seedE + 999992 * i) > 0.5)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Ardil", true, genID));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Ardil", false, genID));
                }
            }
        }

        for (var i = 0; i < Math.floor(seededA * 8); i++) //evraks
        {
            seeded2 = seeded(seedA + seedA * 12012 * i);
            seeded3 = seeded(seedD + seedA * 5555 * i);

            ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded2 * mapSz, "Evrak", false, genID));
        }

        if (elevation == 0)
        {
            for (var i = 0; i < Math.floor(seededA * 9); i++) //friches / frich packs
            {
                seeded2 = seeded(seedD + seedD * 12012 * i);
                seeded3 = seeded(seedD + seedD * 5555 * i);

                for (var j = 0; j < Math.floor(seededE * 6); j++)
                {
                    if (seeded(seedB + 76823 * j) > 0.615)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(35), ySt - seeded3 * mapSz + spacer(35), "Frich", true, genID));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(35), ySt - seeded3 * mapSz + spacer(35), "Frich", false, genID));
                    }
                }
            }
        }

        for (var i = 0; i < Math.floor(seededE * 6); i++) //Naaprid herds
        {
            seeded1 = seeded(seedB + seedA * 222 * i);
            seeded2 = seeded(seedD + seedC * 1119 * i);

            for (var j = 0; j < Math.floor(seededE * 9); j++)
            {
                var seeded5 = seeded(seedB + seedD * Math.ceil(76823 / j));

                if (seeded5 < 0.4)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + spacer(130), ySt - seeded2 * mapSz + spacer(130), "Naaprid", true, genID));
                }
                else if (seeded5 < 0.81)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + spacer(130), ySt - seeded2 * mapSz + spacer(130), "Naaprid", false, genID));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + spacer(130), ySt - seeded2 * mapSz + spacer(130), "Naaprid", "baby", genID));
                }
            }
        }

        for (var i = 0; i < Math.floor(((seededA + seededB) / 2) * 17); i++) //tunsk mounds
        {
            seeded1 = seeded(seedC + seedC * 12 * i);
            seeded2 = seeded(seedB + seedB / (39 * i + 5));

            scenicList.push(new Scenery("tunskMound", xSt - seeded2 * mapSz, ySt - seeded1 * mapSz, 2*Math.PI * Math.random(), true));
        }
        for (var i = 0; i < Math.floor(seededC * 14); i++) //grushes / grushweed patches
        {
            seeded1 = seeded(seedB + seedA * 17 * i);
            seeded2 = seeded(seedA + seedB / (5 * i + 3));

            seeded3 = seeded(i * seedA);
            for (var j = 0; j < Math.floor(seeded3 * 7); j++)
            {
                seeded4 = seeded(seedC + seedB * 5 * j);
                seeded5 = seeded(seedA + seedC * 19 * j);

                if (Math.random() <= 0.29)
                {
                    var rand = Math.random();
                    if (rand < 0.2)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + (Math.floor(seeded4 * 50) + 39) * j, ySt - seeded2 * mapSz + (Math.floor(seeded5 * 50) + 39) * j, "Grush", true, genID));
                    }
                    else if (rand < 0.5)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + (Math.floor(seeded4 * 50) + 16) * j, ySt - seeded2 * mapSz + (Math.floor(seeded5 * 50) + 16) * j, "Grush", "baby", genID));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + (Math.floor(seeded4 * 50) + 25) * j, ySt - seeded2 * mapSz + (Math.floor(seeded5 * 50) + 25) * j, "Grush", false, genID));
                    }
                }
                else
                {
                    var rand = Math.random();
                    if (rand < 0.2)
                    {
                        scenicList.push(new Scenery("grushweedPlant", xSt - seeded1 * mapSz + (Math.floor(seeded4 * 50) + 39) * j, ySt - seeded2 * mapSz + (Math.floor(seeded5 * 50) + 39) * j, 2*Math.PI * Math.random(), seeded(seedC + 99 * i + 38 * j) + 0.65));
                    }
                    else if (rand < 0.5)
                    {
                        scenicList.push(new Scenery("grushweedPlant", xSt - seeded1 * mapSz + (Math.floor(seeded4 * 50) + 16) * j, ySt - seeded2 * mapSz + (Math.floor(seeded5 * 50) + 16) * j, 2*Math.PI * Math.random(), seeded(seedB + 99 * i + 49 * j) + 0.05));
                    }
                    else
                    {
                        scenicList.push(new Scenery("grushweedPlant", xSt - seeded1 * mapSz + (Math.floor(seeded4 * 50) + 25) * j, ySt - seeded2 * mapSz + (Math.floor(seeded5 * 50) + 25) * j, 2*Math.PI * Math.random(), seeded(seedA + 99 * i + 27 * j) + 0.25));
                    }
                }
            }
        }

        for (var i = 0; i < Math.floor(((seededB + seededA) / 2) * 9); i++) //mofus and mofu nests
        {
            seeded1 = seeded(seedD + seedC * 17 * i);
            seeded2 = seeded(seedA + seedA / (5 * i + 3));

            seeded3 = seeded(i * seedA);
            for (var j = 0; j < Math.floor(seeded3 * 11); j++)
            {
                seeded4 = seeded(seedB + seedB * 60 * j);
                seeded5 = seeded(seedC + seedC * 390 * j);

                var rand = Math.random();
                if (rand < 0.4)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + (Math.floor(seeded4 * 70) + 39) * j, ySt - seeded2 * mapSz + (Math.floor(seeded5 * 50) + 39) * j, "Mofu", true, genID));
                }
                else if (rand < 0.5)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + (Math.floor(seeded4 * 50) + 16) * j, ySt - seeded2 * mapSz + (Math.floor(seeded5 * 50) + 16) * j, "Mofu", "baby", genID));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + (Math.floor(seeded4 * 60) + 25) * j, ySt - seeded2 * mapSz + (Math.floor(seeded5 * 50) + 25) * j, "Mofu", false, genID));
                }

                if (Math.random() <= 0.84)
                {
                    if (rand < 0.4)
                    {
                        scenicList.push(new Scenery("mofuNest", xSt - seeded1 * mapSz + (Math.floor(seeded4 * 70) + 39) * j, ySt - seeded2 * mapSz + (Math.floor(seeded5 * 50) + 39) * j, 2 * Math.PI * Math.random(), seeded(seedC + 99 * i + 38 * j) + 0.65));
                    }
                    else if (rand >= 0.5)
                    {
                        scenicList.push(new Scenery("mofuNest", xSt - seeded1 * mapSz + (Math.floor(seeded4 * 60) + 25) * j, ySt - seeded2 * mapSz + (Math.floor(seeded5 * 50) + 25) * j, 2 * Math.PI * Math.random(), seeded(seedA + 99 * i + 27 * j) + 0.25));
                    }
                }
            }
        }
    }
    else if (biome == 1) //nordic woods
    {
        for (var i = 0; i < Math.floor(261 + seeded(seededE * 9887 + seedA / 100) * 300); i++) //trees
        {
            seeded2 = seeded((seedE + seedD + 87989) * (i + 50));
            seeded3 = seeded(i * ((seedA + 897) + seedC) * 54 + 96 * seedB * (i + 19));

            scenicList.push(new Scenery("pineTree", xSt - seeded2 * mapSz, ySt - seeded3 * mapSz, 2 * Math.PI * Math.random(), true));
        }
        for (var i = 0; i < Math.floor(seededD * 26); i++) //lizard
        {
            seeded2 = seeded(seedB + seedD * i * 23252);
            seeded5 = seeded(seedC + seedC * (i + 4343556));
            seeded3 = seeded(seedA + seedE * (i + 79214956));
            seeded4 = seeded(seedC + seedD * (i + 897462));

            var rnd = seeded(seedD + 208721864 * i);
            if (rnd > 0.3) {
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded5 * mapSz, "Lizard", false, genID));
            }
            else {
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz, ySt - seeded4 * mapSz, "Lizard", true, genID));
            }
        }
        for (var i = 0; i < Math.floor(seededC * 16); i++) //bear
        {
            seeded2 = seeded(seedA + seedD * i * 899122);
            seeded5 = seeded(seedD + seedC * (i + 4826));
            seeded3 = seeded(seedB + seedA * (i + 12222));
            seeded4 = seeded(seedE + seedE * (i + 3222562));

            var rnd = seeded(seedC + 99829761 * i);
            if (rnd > 0.8)
            {
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz, ySt - seeded2 * mapSz, "BlackBear", true, genID));
            }
            else if (rnd > 0.6)
            {
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(25), ySt - seeded4 * mapSz + spacer(25), "BlackBear", true, genID));
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(100),ySt - seeded4 * mapSz + spacer(100), "BlackBear", false, genID));
            }
            else
            {
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded4 * mapSz, ySt - seeded3 * mapSz, "BlackBear", false, genID));
            }
        }

        if (X > 47082) //in Thengaria only (WEST)
        {
            for (var i = 0; i < Math.floor(seededC * 26); i++) //kofke
            {
                seeded1 = seeded(seedA + seedD * i * 17890);
                seeded5 = seeded(seedE + seedA * (i + 19560));

                scenicList.push(new Scenery("kofkePlant", xSt - seeded1 * mapSz, ySt - seeded5 * mapSz, 2 * Math.PI * Math.random(), true));
            }
            for (var i = 0; i < Math.floor(seededE * 7); i++) //steugiurne
            {
                seeded1 = seeded(seedC + seedD * i * 900 + 300 * seedB);
                seeded5 = seeded(seedB + seedA * (i + 283));

                scenicList.push(new Scenery("steugiurnePlant", xSt - seeded1 * mapSz, ySt - seeded5 * mapSz, 2 * Math.PI * Math.random(), true));
            }
            for (var i = 0; i < Math.floor(seededE * 5); i++) //thalis
            {
                seeded1 = seeded(seedC + seedC * i * 89651239283);
                seeded5 = seeded(seedB + seedB * (i + 48627881));

                scenicList.push(new Scenery("thalisPlant", xSt - seeded1 * mapSz, ySt - seeded5 * mapSz, 2 * Math.PI * Math.random(), true));
            }
            for (var i = 0; i < Math.floor(seededE * 19); i++) //callop
            {
                seeded1 = seeded(seedA + seedD * i * 900 + 300 * seedB);
                seeded5 = seeded(seedB + seedD * (i + 283));

                scenicList.push(new Scenery("callopPlant", xSt - seeded1 * mapSz, ySt - seeded5 * mapSz, 2 * Math.PI * Math.random(), true));
            }
            for (var i = 0; i < Math.floor(seededE * 19); i++) //darb
            {
                seeded1 = seeded(seedC + seedC * i * 700 + 100 * seedA);
                seeded2 = seeded(seedA + seedB * (i + 90022343));

                scenicList.push(new Scenery("darbPlant", xSt - seeded1 * mapSz, ySt - seeded2 * mapSz, 2 * Math.PI * Math.random(), true));
            }
            if (seeded(seedE + 9993714638717) > 0.7) {
                for (var i = 0; i < Math.floor(seededA * 2); i++) //brightbloom
                {
                    seeded1 = seeded(seedB + seedA * i * 855 + 366 * seedC);
                    seeded2 = seeded(seedC + seedB * (i + 334456));

                    scenicList.push(new Scenery("brightbloomPlant", xSt - seeded1 * mapSz, ySt - seeded2 * mapSz, 2 * Math.PI * Math.random(), true));
                }
            }
            for (var i = 0; i < Math.floor(seededA * 20); i++) //fletter
            {
                seeded1 = seeded((seedB + seedA) * i * 1225 + 399726 * seedB);
                seeded2 = seeded(seedC + seedE * (i + 33523536));

                var rnd = seeded(seedD + 3259876121 * i);
                if (rnd > 0.6) {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Fletter", true, genID));
                }
                else {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Fletter", false, genID));
                }
            }
            for (var i = 0; i < Math.floor(seededB * 18); i++) //skol
            {
                seeded1 = seeded(seedA + seedD * i * 198790);
                seeded2 = seeded(seedA + seedA * i * 5555);
                seeded4 = seeded(seedE + seedA * (i + 983820));
                seeded3 = seeded(seedC + seedC * (i + 6880));

                var rnd = seeded(seedB + 98568761 * i);
                if (rnd > 0.9) {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Skol", true, genID));
                }
                else if (rnd > 0.8) {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded4 * mapSz, "Skol", false, genID));
                }
                else if (rnd > 0.4) {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz, ySt - seeded4 * mapSz, "Skol", false, genID));
                    ArtificialIntelligenceAccess.push(new Unit(60 + xSt - seeded2 * mapSz, 190 + ySt - seeded4 * mapSz, "Skol", false, genID));
                    ArtificialIntelligenceAccess.push(new Unit(200 + xSt - seeded2 * mapSz, -150 + ySt - seeded4 * mapSz, "Skol", false, genID));
                    ArtificialIntelligenceAccess.push(new Unit(110 + xSt - seeded2 * mapSz, 110 + ySt - seeded4 * mapSz, "Skol", false, genID));
                    ArtificialIntelligenceAccess.push(new Unit(300 + xSt - seeded2 * mapSz, -55 + ySt - seeded4 * mapSz, "Skol", true, genID));
                }
                else {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded3 * mapSz, "Skol", false, genID));
                    ArtificialIntelligenceAccess.push(new Unit(60 + xSt - seeded1 * mapSz, 190 + ySt - seeded3 * mapSz, "Skol", false, genID));
                    ArtificialIntelligenceAccess.push(new Unit(200 + xSt - seeded1 * mapSz, -150 + ySt - seeded3 * mapSz, "Skol", false, genID));
                    ArtificialIntelligenceAccess.push(new Unit(110 + xSt - seeded1 * mapSz, 110 + ySt - seeded3 * mapSz, "Skol", false, genID));
                    ArtificialIntelligenceAccess.push(new Unit(300 + xSt - seeded1 * mapSz, -55 + ySt - seeded3 * mapSz, "Skol", false, genID));
                }
            }
            for (var i = 0; i < Math.floor(seededC * 29); i++) //hoffalgre
            {
                seeded2 = seeded(seedD + seedD * i * 9984722);
                seeded5 = seeded(seedD + seedC * (i + 5343556));
                seeded3 = seeded(seedB + seedE * (i + 89214956));
                seeded4 = seeded(seedB + seedE * (i + 112462));

                var rnd = seeded(seedE + 99829761 * i);
                if (rnd > 0.625) {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz, ySt - seeded2 * mapSz, "Hoffalgre", false, genID));
                }
                else if (rnd > 0.39) {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(30), ySt - seeded4 * mapSz + spacer(30), "Hoffalgre", true, genID));
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(30), ySt - seeded4 * mapSz + spacer(30), "Hoffalgre", true, genID));
                }
                else {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded4 * mapSz, ySt - seeded3 * mapSz, "Hoffalgre", true, genID));
                }
            }
        }
        else {
            if (Y < -13476) //SOUTH
            {
                for (var i = 0; i < Math.floor(seeded(seedE + seedD + 12312378265) * 12); i++) //viper
                {
                    seeded2 = seeded((seedE + seedB) * (4 + i * 749));
                    seeded5 = seeded((seedB + seedA) * (i + 8527));
                    seeded3 = seeded((seedD + seedA) * (i + 12986));
                    seeded4 = seeded((seedB + seedC) * (i + 297864));

                    var rnd = seeded((seedA * seedE / 10980) * i * seedC);
                    if (rnd > 0.65)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded5 * mapSz, "Viper", true, genID));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz, ySt - seeded4 * mapSz, "Viper", false, genID));
                    }
                }
                for (var i = 0; i < Math.floor(seeded(seedE + seedD + 782765737825) * 8); i++) //bequon
                {
                    seeded2 = seeded((seedD + seedB) * (5 + i * 7465));
                    seeded5 = seeded((seedA + seedC) * (i + 8234));
                    seeded3 = seeded((seedE + seedC) * (i + 21486));
                    seeded4 = seeded((seedB + seedD) * (i + 2354));

                    scenicList.push(new Scenery("bequonPlant", xSt - seeded3 * mapSz, ySt - seeded3 * mapSz, 2 * Math.PI * Math.random(), true));
                }
                for (var i = 0; i < Math.floor(seeded(seedB + seedC + 58637825) * 28); i++) //Teppreklia
                {
                    seeded2 = seeded((seedE + seedB) * (5 + i * 338965));
                    seeded5 = seeded((seedA + seedD) * (i + 1434));
                    seeded3 = seeded((seedB + seedE) * (i + 9823686));
                    seeded4 = seeded((seedC + seedB) * (i + 4284));

                    scenicList.push(new Scenery("tepprekliaPlant", xSt - seeded3 * mapSz, ySt - seeded3 * mapSz, 2 * Math.PI * Math.random(), true));
                }
            }
            else {
                for (var i = 0; i < Math.floor(seededB * 4); i++) //viper
                {
                    seeded2 = seeded((seedE + seedB) * (1 + i * 899));
                    seeded5 = seeded((seedB + seedA) * (i + 214096));
                    seeded3 = seeded((seedC + seedA) * (i + 387326));
                    seeded4 = seeded((seedB + seedE) * (i + 21680004));

                    var rnd = seeded((seedA * seedE / 10980) * i * seedC);
                    if (rnd > 0.9)
                    {
                        //ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded5 * mapSz, "Viper", true, genID));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz, ySt - seeded4 * mapSz, "Viper", false, genID));
                    }
                }
                if (seeded(seedA * 55555) < 0.22) {
                    for (var i = 0; i < Math.floor(seededB * 2); i++) //halcif
                    {
                        seeded1 = seeded((seedE + seedE) * i * 65524);
                        seeded5 = seeded(seedD * seedB * (i + 4947));

                        scenicList.push(new Scenery("halcifPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2 * Math.PI * Math.random(), true));
                    }
                }
                for (var i = 0; i < Math.floor(seededE * 4); i++) //cyrinthilim
                {
                    seeded1 = seeded((seedE + seedD) * i * 65524);
                    seeded5 = seeded(seedC * seedA * (i + 4947));

                    if (seeded(seedA * seedD * 5782 + seedB * 9875122) < 0.6) {
                        scenicList.push(new Scenery("cyrinthilimPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2 * Math.PI * Math.random(), true));
                    }
                }
                for (var i = 0; i < Math.floor(seededB * 34); i++) //shehid
                {
                    seeded2 = seeded((seedC + seedD) * i * 987106124);
                    seeded5 = seeded((seedE + seedE) * (i + 72746));
                    seeded3 = seeded((seedC + seedA) * (i + 356));
                    seeded4 = seeded((seedA + seedA) * (i + 214));

                    var rnd = seeded((seedA * seedE / 10980) * i * seedC);
                    if (rnd > 0.8) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded5 * mapSz, "Shehid", true, genID));
                    }
                    else {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz, ySt - seeded4 * mapSz, "Shehid", false, genID));
                    }
                }
                for (var i = 0; i < Math.floor(seeded((seededB + 88632755517832) / seededA) * 20); i++) //glin
                {
                    seeded1 = seeded((seedE + seedD) * i * 948877);
                    seeded5 = seeded(seedC * 787811012 + 3 * seedB * (i + 85215));

                    scenicList.push(new Scenery("glinPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2 * Math.PI * Math.random(), true));
                }
            }


            for (var i = 0; i < Math.floor(seededE * 9); i++) //varn
            {
                seeded2 = seeded(seedC + seedB * i * 1211202);
                seeded5 = seeded(seedC + seedA * (i + 346));
                seeded3 = seeded(seedB + seedB * (i + 98172));
                seeded4 = seeded(seedB + seedB * (i + 79822));

                var rnd = seeded(seedC + 99829761 * i);
                if (rnd > 0.85) {
                    if (Math.random() < 0.5) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz, ySt - seeded2 * mapSz, "Varn", true, genID));
                    }
                    else {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz, ySt - seeded2 * mapSz, "Varn", false, genID));
                    }
                }
                else if (rnd > 0.4) {
                    if (Math.random() < 0.5) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(90), ySt - seeded4 * mapSz + spacer(90), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(90), 75 + ySt - seeded4 * mapSz + spacer(90), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(30), ySt - seeded4 * mapSz + spacer(30), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(30), 75 + ySt - seeded4 * mapSz + spacer(30), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(30), ySt - seeded4 * mapSz + spacer(30), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(100), 75 + ySt - seeded4 * mapSz + spacer(100), "Varn", false, genID));
                    }
                    else {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(30), ySt - seeded4 * mapSz + spacer(30), "Varn", true, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(90), 75 + ySt - seeded4 * mapSz + spacer(90), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(90), ySt - seeded4 * mapSz + spacer(90), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(80), 75 + ySt - seeded4 * mapSz + spacer(80), "Varn", true, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(40), ySt - seeded4 * mapSz + spacer(50), "Varn", true, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(30), 75 + ySt - seeded4 * mapSz + spacer(30), "Varn", false, genID));
                    }
                }
                else {
                    if (Math.random() < 0.5) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(50), ySt - seeded4 * mapSz + spacer(50), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(80), 75 + ySt - seeded4 * mapSz + spacer(80), "Varn", true, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(30), ySt - seeded4 * mapSz + spacer(30), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(30), 75 + ySt - seeded4 * mapSz + spacer(30), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(40), ySt - seeded4 * mapSz + spacer(40), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(55), 75 + ySt - seeded4 * mapSz + spacer(55), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(105), ySt - seeded4 * mapSz + spacer(70), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(45), 75 + ySt - seeded4 * mapSz + spacer(60), "Varn", true, genID));
                    }
                    else {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(40), ySt - seeded4 * mapSz + spacer(40), "Varn", true, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(40), 75 + ySt - seeded4 * mapSz + spacer(40), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(40), ySt - seeded4 * mapSz + spacer(40), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(40), 75 + ySt - seeded4 * mapSz + spacer(40), "Varn", true, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(40), ySt - seeded4 * mapSz + spacer(40), "Varn", true, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(40), 75 + ySt - seeded4 * mapSz + spacer(40), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(40), ySt - seeded4 * mapSz + spacer(40), "Varn", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(-90 + xSt - seeded5 * mapSz + spacer(40), 75 + ySt - seeded4 * mapSz + spacer(40), "Varn", true, genID));
                    }
                }
            }
            for (var i = 0; i < Math.floor(seeded(seededB + seedA + seedD) * 3); i++) //beehives
            {
                seeded2 = seeded(seedB + seedB * i);
                seeded3 = seeded(seedB + seedB / (i + 1));

                scenicList.push(new Scenery("beehive", xSt - seeded2 * mapSz, ySt - seeded3 * mapSz, 2 * Math.PI * Math.random(), true));
            }
            for (var i = 0; i < Math.floor(seeded(seededA + 99 * seedB) * 14); i++) //stomwik
            {
                seeded2 = seeded(seedC + seedE * i * 69895);
                seeded4 = seeded(seedE + seedA / (i + 32874914289));

                scenicList.push(new Scenery("stomwikPlant", xSt - seeded4 * mapSz, ySt - seeded2 * mapSz, 2 * Math.PI * Math.random(), true));
            }
            for (var i = 0; i < Math.floor(seeded(seededC + 564341 * seedA) * 25); i++) //neprilne
            {
                seeded2 = seeded(seedA + seedC * i * 5985);
                seeded4 = seeded((seedE * i + seedA) + 2459 * (i + 867));

                scenicList.push(new Scenery("neprilnePlant", xSt - seeded4 * mapSz, ySt - seeded2 * mapSz, 2 * Math.PI * Math.random(), true));
            }
            for (var i = 0; i < Math.floor(seeded(seededD + 7989747231) * 16); i++) //common berry bushes
            {
                seeded2 = seeded(seedA + seedE * i);
                seeded3 = seeded(seedE + seedC / (i + 1));

                if (seeded(seededB + 89910 * i) > 0.34) {
                    scenicList.push(new Scenery("akerPlant", xSt - seeded3 * mapSz, ySt - seeded3 * mapSz, 2 * Math.PI * Math.random(), true));
                }
                else {
                    scenicList.push(new Scenery("pluttPlant", xSt - seeded2 * mapSz, ySt - seeded1 * mapSz, 2 * Math.PI * Math.random(), true));
                }
            }
            for (var i = 0; i < Math.floor(seededE * 18); i++) //culpris
            {
                seeded1 = seeded(seedB + seedD * i * 6800);
                seeded5 = seeded(seedD + seedC / (i + 190));

                scenicList.push(new Scenery("culprisPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2 * Math.PI * Math.random(), true));
            }

            if (X < -30000 && Y < 6278) //in Nirwaden only (EAST)
            {
                for (var i = 0; i < Math.floor(seeded(seedE + seedB + 6879372675365) * 3); i++) //changeling
                {
                    seeded2 = seeded((seedD + seedA) * (5 + i * 666));
                    seeded5 = seeded((seedB + seedC) * (i + 9087827));
                    seeded3 = seeded((seedD + seedA) * (i + 232986));
                    seeded4 = seeded((seedC + seedE) * (i + 280987864));

                    var rnd = seeded((seedC * seedE / 10980) * i * (seedD + seedA));
                    if (rnd > 0.55)
                    {
                        if (Math.random() >= 0.55)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded5 * mapSz, "Changeling", false, genID));
                        }
                    }
                }
                for (var i = 0; i < Math.floor(seeded((seededC + 99761242) / seededA) * 21); i++) //halgom
                {
                    seeded1 = seeded((seedC + seedB) * i * 661727);
                    seeded5 = seeded(seedA * 78652382 + 3 * seedD * (i + 581738765));

                    scenicList.push(new Scenery("halgomPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2 * Math.PI * Math.random(), true));
                }

                for (var i = 0; i < Math.floor(seeded((seededE + 3214576122534)) * 18); i++) //halgom
                {
                    seeded1 = seeded((seedB + seedE) * i * 661727);
                    seeded5 = seeded(seedC * 78652382 + 3 * seedA * (i + 47886865));

                    scenicList.push(new Scenery("iemaPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2 * Math.PI * Math.random(), true));
                }

                for (var i = 0; i < Math.floor(seededB * 10); i++) //boar
                {
                    seeded1 = seeded(seedA + seedD * i * 17890);
                    seeded5 = seeded(seedE + seedA * (i + 19560));

                    var rnd = seeded(seedB + 98568761 * i);
                    if (rnd > 0.7) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Boar", true, genID));
                    }
                    else if (rnd > 0.4) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded4 * mapSz, "Boar", false, genID));
                    }
                    else if (rnd > 0.2) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded2 * mapSz, "Boar", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz + spacer(110), ySt - seeded2 * mapSz + spacer(110), "Boar", false, genID));
                    }
                    else if (rnd > 0.1) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Boar", true, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + spacer(110), ySt - seeded4 * mapSz + spacer(110), "Boar", false, genID));
                    }
                    else {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Boar", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + spacer(110),ySt - seeded4 * mapSz + spacer(110), "Boar", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz + spacer(180),ySt - seeded4 * mapSz + spacer(130), "Boar", false, genID));
                    }
                }
                for (var i = 0; i < Math.floor(seeded(18 + seededB) * 8); i++) //molte
                {
                    seeded2 = seeded(seedA + seedD * i * 27758);
                    seeded5 = seeded(seedE + seedC * (i + 1234556));
                    seeded3 = seeded(seedE + seedA * (i + 8645656));
                    seeded4 = seeded(seedC + seedB * (i + 3532));

                    var rnd = seeded(seedB + 99829761 * i);
                    if (rnd > 0.4) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded5 * mapSz, "Molte", false, genID));
                    }
                    else {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz, ySt - seeded4 * mapSz, "Molte", true, genID));
                    }
                }
                for (var i = 0; i < Math.floor(seeded(seededB * 978987 + seedA * 35) * 9); i++) //BorbBeetle
                {
                    seeded2 = seeded(seedE + seedD * i * 27758);
                    seeded5 = seeded(seedE + seedA * (i + 1234556));
                    seeded3 = seeded(seedC + seedA * (i + 8645656));
                    seeded4 = seeded(seedC + seedE * (i + 3532));

                    var rnd = seeded(seedB + 99829761 * i);
                    if (rnd > 0.41) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded5 * mapSz, "BorbBeetle", false, genID));
                    }
                    else {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz, ySt - seeded4 * mapSz, "BorbBeetle", true, genID));
                    }
                }
            }
            else {
                for (var i = 15; i < Math.floor(seeded(seededD + 798974723111241111) * 31); i++) //common berry bushes
                {
                    seeded2 = seeded(seedA * 656412 + seedC * i);
                    seeded3 = seeded(seedB + seedA / (i + 1));

                    if (seeded(seededB + 27856120 * i) > 0.34) {
                        scenicList.push(new Scenery("akerPlant", xSt - seeded3 * mapSz, ySt - seeded3 * mapSz, 2 * Math.PI * Math.random(), true));
                    }
                    else {
                        scenicList.push(new Scenery("pluttPlant", xSt - seeded2 * mapSz, ySt - seeded1 * mapSz, 2 * Math.PI * Math.random(), true));
                    }
                }
                for (var i = 0; i < Math.floor(seededB * 13); i++) //wyr
                {
                    seeded1 = seeded(seedC + seedA * i * 6677278431124);
                    seeded5 = seeded(seedD + seedC / (i + 87637677776));

                    scenicList.push(new Scenery("wyrPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2 * Math.PI * Math.random(), true));
                }
                if (seeded(seedC + 7899) > 0.65) {
                    for (var i = 0; i < Math.floor(seededD * 2); i++) //tylun
                    {
                        seeded1 = seeded(seedE * seedB * i * 855524);
                        seeded5 = seeded(seedB * seedA / (i + 2894677));

                        scenicList.push(new Scenery("tylunPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2 * Math.PI * Math.random(), true));
                    }
                }
                if (seeded(seedB * 31991) > 0.7) {
                    for (var i = 0; i < Math.floor(seededE * 2); i++) //ogard
                    {
                        seeded1 = seeded((seedE + seedD) * i * 65524);
                        seeded5 = seeded(seedC * seedA * (i + 4947));

                        scenicList.push(new Scenery("ogardPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2 * Math.PI * Math.random(), true));
                    }
                }
                for (var i = 0; i < Math.floor(seeded(seededE + 9874 + ((34 + seedA) * seedD)) * 17); i++) //grib
                {
                    seeded2 = seeded(seedB + seedD * i * 1089765602);
                    seeded5 = seeded(seedC + seedB * (i + 332525));
                    seeded3 = seeded(seedB + seedE * (i + 234122));
                    seeded4 = seeded(seedE + seedB * (i + 78623522));

                    var rnd = seeded(seedC + 99829761 * i);
                    if (rnd > 0.65) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz, ySt - seeded2 * mapSz, "Grib", true, genID));
                    }
                    else if (rnd > 0.5) {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz, ySt - seeded4 * mapSz, "Grib", false, genID));
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz + spacer(90), ySt - seeded4 * mapSz + spacer(75), "Grib", false, genID));
                    }
                    else {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded4 * mapSz, ySt - seeded3 * mapSz, "Grib", false, genID));
                    }
                }
                for (var i = 0; i < Math.floor(seeded(seededC + 8976721453687 / (seedE + seedC)) * 26); i++) //narthwarp
                {
                    seeded2 = seeded((seedD + seedB) * (787 + i * 88976729));
                    seeded5 = seeded((seedB + seedD) * (i + 5843796));
                    seeded3 = seeded((seedB + seedA) * (i + 7867326));
                    seeded4 = seeded((seedD + seedE) * (i + 478398004));

                    var rnd = seeded((seedC * seedA / 277910808) * i * seedD);
                    if (rnd > 0.91)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded5 * mapSz, "Narthwarp", true, genID));
                    }
                    else
                    {
                        rnd = seeded((seedB * seedA / 2778657238) * i * seedD);
                        if (rnd > 0.91)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded5 * mapSz, "Narthwarp", false, genID));
                        }
                        else
                        {
                            rnd = seeded((seedC * seedD / 19757491111) * i * seedA);
                            if (rnd > 0.5)
                            {
                                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz + spacer(20), ySt - seeded5 * mapSz + spacer(20), "Narthwarp", false, genID));
                                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(20), ySt - seeded4 * mapSz + spacer(20), "Narthwarp", false, genID));
                            }
                            else
                            {
                                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(65), ySt - seeded4 * mapSz + spacer(65), "Narthwarp", false, genID));
                                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz + spacer(65), ySt - seeded5 * mapSz + spacer(65), "Narthwarp", false, genID));
                                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(65), ySt - seeded4 * mapSz + spacer(65), "Narthwarp", false, genID));
                                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz + spacer(65), ySt - seeded5 * mapSz + spacer(65), "Narthwarp", false, genID));
                                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(65), ySt - seeded4 * mapSz + spacer(65), "Narthwarp", false, genID));
                            }
                        }
                    }
                }
            }
        }
    }
    else if (biome == 2) //Nirwaden Grasslands
    {
        for (var i = 0; i < Math.floor(seededB * 6); i++) //naaprid
        {
            seeded2 = seeded(seedD + seedA * i);
            seeded3 = seeded(seedC + seedE / (i + 1));


            for (var j = 0; j < Math.floor(seeded(seededE * (seedD + seededE)) * 8); j++)
            {
                var rando = seeded(seedD * i + 6 * 62 + 1284298 * j * seedA);
                if (rando > 0.75)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(120), ySt - seeded3 * mapSz + spacer(120), "Naaprid", true, genID));
                }
                else if (rando > 0.25)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(120), ySt - seeded3 * mapSz + spacer(120), "Naaprid", false, genID));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(120), ySt - seeded3 * mapSz + spacer(120), "Naaprid", "baby", genID));
                }
            }
        }

        if (map != "n1e4" && map != "n1e5")
        {
            for (var i = 0; i < Math.floor(seededD * 2); i++) //horse
            {
                seeded2 = seeded(seedD + seedE * i);
                seeded3 = seeded(seedB + seedA / (i + 1));

                if (seeded(seedC + 89 + (seedC * 2 * i)) >= 0.5)
                {
                    for (var j = 0; j < Math.floor(seeded(seededA * (seedD + seededB)) * 19); j++)
                    {
                        var rando = seeded(seedE * i + 45 * 22 + 67645 * j * seedB);
                        if (rando > 0.75)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(320), ySt - seeded3 * mapSz + spacer(320), "Horse", true, genID));
                        }
                        else if (rando > 0.25)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(250), ySt - seeded3 * mapSz + spacer(250), "Horse", false, genID));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(200), ySt - seeded3 * mapSz + spacer(200), "Horse", "baby", genID));
                        }
                    }
                }
            }
        }
        for (var i = 0; i < Math.floor(seededC * 4.85); i++) //Wobea Plant
        {
            seeded2 = seeded(seedA + seedB * i);
            seeded3 = seeded(seedB + seedE * (i + 1));

            scenicList.push(new Scenery("wobeaPlant", xSt - seeded2 * mapSz, ySt - seeded3 * mapSz, 2*Math.PI * Math.random(), true));
        }
        for (var i = 0; i < Math.floor(((seededA + seededB) / 2) * 21); i++) //Erguer flowers
        {
            seeded2 = seeded(seedB + seedE * i);
            seeded3 = seeded(seedD * i + seedC * i + 1);


            scenicList.push(new Scenery("erguerPlant", xSt - seeded2 * mapSz, ySt - seeded3 * mapSz, 2*Math.PI * Math.random(), true));
        }
        for (var i = 0; i < Math.floor(seededE * 16); i++) //Chona and polyapa trees
        {
            seeded2 = seeded(seedB * i + seedD + 77 * i);
            seeded3 = seeded(seedC + i * seedC);

            if (seeded(seedB * i + seedD * seedA + 575757578 * i) > 0.49)
            {
                scenicList.push(new Scenery("chonaTree", xSt - seeded2 * mapSz, ySt - seeded3 * mapSz, 2*Math.PI * Math.random(), true));
            }
            else
            {
                scenicList.push(new Scenery("polyapaTree", xSt - seeded2 * mapSz, ySt - seeded3 * mapSz, 2*Math.PI * Math.random(), true));
            }
        }
        for (var i = 0; i < Math.floor(seededB * 18); i++) //techi plants
        {
            seeded1 = seeded(seedA + seedA * i * 23000);
            seeded5 = seeded(seedA * i + 100 + seedD * 56 * i);


            scenicList.push(new Scenery("techiPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2*Math.PI * Math.random(), true));
        }


        for (var i = 0; i < Math.floor(seededC * 3); i++) //ardils
        {
            seeded1 = seeded(seedC + seedD * 7854500 * i);
            seeded4 = seeded(seedA + seedA * 11078651 * i);

            if (seeded(seedE + 88888 * i) > 0.5)
            {
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Ardil", true, genID));
            }
            else
            {
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded1 * mapSz, ySt - seeded4 * mapSz, "Ardil", false, genID));
            }
        }

        for (var i = 0; i < Math.floor(seededB * 15); i++) //peacocks
        {
            seeded2 = seeded(seedB + seedA + seedA * 12012 * i);
            seeded3 = seeded(seedD + seedA * 5555 * i);

            if (seeded(seedD + seedE + 999 * i) > 0.55)
            {
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded2 * mapSz, "Peacock", true, genID));
            }
            else
            {
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded2 * mapSz, "Peacock", false, genID));
            }
        }

        for (var i = 0; i < Math.floor(seededE * 11); i++) //friches / frich packs
        {
            seeded2 = seeded(seedB + seedC * 12012 * i);
            seeded3 = seeded(seedA + seedD * 5555 * i);

            for (var j = 0; j < Math.floor(seeded(seededA * 39 + 0.5 * i) * 6); j++)
            {
                var rando = seeded(seedC * 98754673 * j + i * seedA + 30);
                if (rando > 0.94)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(100), ySt - seeded3 * mapSz + spacer(100), "Frich", "massive", genID));
                }
                else if (rando > 0.22)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(75), ySt - seeded3 * mapSz + spacer(75), "Frich", true, genID));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(90), ySt - seeded3 * mapSz + spacer(90), "Frich", false, genID));
                }
            }
        }

        if (Y < -13813)
        {
            for (var i = 0; i < Math.floor(((seededB + seededA) / 2) * 7); i++) //palnt plants
            {
                seeded1 = seeded(seedD + seedE * i * 17890);
                seeded5 = seeded(seedE + seedC * (i + 19560));

                scenicList.push(new Scenery("palntPlant", xSt - seeded1 * mapSz, ySt - seeded5 * mapSz, 2*Math.PI * Math.random(), true));
            }
            for (var i = 0; i < Math.floor(((seededA + seededB) / 2) * 8); i++) //tunsk mounds
            {
                seeded1 = seeded(seedC + seedC * 14.5 * i);
                seeded2 = seeded(seedB + seedB / (82 * i + 16));

                scenicList.push(new Scenery("tunskMound", xSt - seeded2 * mapSz, ySt - seeded1 * mapSz, 2*Math.PI * Math.random(), true));
            }
            for (var i = 0; i < Math.floor(((seededD + seededC) / 2) * 3); i++) //chupacabras
            {
                seeded1 = seeded(seedE + seedC * 13 * i);
                seeded2 = seeded(seedA + seedD / (46 * i + 51));

                var rando = seeded(seedD + seedD + 999 * i + 99 * seedB);
                if (rando > 0.94)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded2 * mapSz, "Chupacabras", true, genID));
                }
                else if (rando < 0.11)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded2 * mapSz, "Chupacabras", false, genID));
                }
            }
        }
        if (elevation < 0)
        {
            for (var i = 0; i < Math.floor(seededB * 2); i++)
            {
                seeded2 = seeded(seedA + seedA * 12012 * i);
                seeded3 = seeded(seedD + seedA * 5555 * i);

                var rando = seeded(seedD + seedD + 999 * i + 99 * seedB);
                if (rando > 0.99)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded2 * mapSz, "Griffin", true, genID));
                }
                else if (rando <= 0.05)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded2 * mapSz, "Griffin", false, genID));
                }
            }
        }

    }
    else if (biome == 3) //savannah
    {
        for (var i = 0; i < Math.floor(seededB * 7 + 1); i++)
        {
            seeded2 = seeded(seedA + seedD * 12012 * i);
            seeded3 = seeded(seedD + seedA * 5555 * i);

            for (var l = 0; l < Math.floor(seeded(seedE * 87 + seedA * 21 * i + seedB * 62 * i) * 6 + 2); l++)
            {
                var sdedX = xSt - seeded3 * mapSz + 1400 * seeded(l + (l + 89 + seedD * l)) - 700;
                var sdedY = ySt - seeded2 * mapSz + 1400 * seeded(l * (l * 21) + 34 * l + 31 + (seedA + seedC) * (l + 1)) - 700;
                scenicList.push(new Scenery("yeolTree", sdedX, sdedY, Math.random() * (2* Math.PI), true));

                var randooo = seeded(seedB * 8 + seedA * 9 + seedD * 55 + seedE * 22 + seedC * 43 + (seedA + seedD) * l + (seedB + 567) * i);
                if (randooo > 0.69)
                {
                    var rando = seeded(seedB * 4 + seedA * 8 + seedD * 16 + seedE * 33 + seedC * 40 + (seedE + seedA) * i * l);

                    if (rando > 0.9)
                    {
                        var randoo = seeded(seedB * 3 + seedA * 14 + seedD * 12 + seedE * 13 + seedC * 45 + (seedC + seedB) * i * l);

                        if (randoo > 0.7)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(sdedX + spacer(85), sdedY + spacer(85), "Taipan", true, genID));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(sdedX + spacer(85), sdedY + spacer(85), "Taipan", false, genID));
                        }
                    }
                    else if (rando > 0.5)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(sdedX + spacer(140), sdedY + spacer(140), "Mugmul", true, genID));
                    }
                    else if (rando > 0.075)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(sdedX + spacer(140), sdedY + spacer(140), "Mugmul", false, genID));
                    }
                    else
                    {
                        var randoo = seeded(seedB * 8 + seedA * 1 + seedD * 15 + seedE * 18 + seedC * 7 + (seedB + seedC) * i * l);

                        if (randoo > 0.8)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(sdedX + spacer(85), sdedY + spacer(85), "Taipan", true, genID));
                            ArtificialIntelligenceAccess.push(new Unit(sdedX + spacer(85), sdedY + spacer(85), "Taipan", true, genID));
                        }
                        else if (randoo > 0.45)
                        {
                            ArtificialIntelligenceAccess.push(new Unit(sdedX + spacer(85), sdedY + spacer(85), "Taipan", true, genID));
                            ArtificialIntelligenceAccess.push(new Unit(sdedX + spacer(85), sdedY + spacer(85), "Taipan", false, genID));
                        }
                        else
                        {
                            ArtificialIntelligenceAccess.push(new Unit(sdedX + spacer(85), sdedY + spacer(85), "Taipan", false, genID));
                            ArtificialIntelligenceAccess.push(new Unit(sdedX + spacer(85), sdedY + spacer(85), "Taipan", false, genID));
                        }
                    }
                }
            }
        }

        for (var i = 0; i < Math.floor(seeded(seedA * 71 + seedB * 80) * 9); i++)
        {
            seeded2 = seeded(seedB + seedB * 38936 * i);
            seeded3 = seeded(seedA + seedA * 1682 * i);

            scenicList.push(new Scenery("yeolTree", xSt - seeded3 * mapSz + 3000 * seeded(i + (i + 17 + seedA * i)) - 1500, ySt - seeded2 * mapSz + 3000 * seeder(i * (i * 13) + 10 * i + 31 + (seedA + seedC) * (i + 1)) - 1500, Math.random() * (2* Math.PI), true));
        }

        for (var i = 0; i < Math.floor(seeded(seedC * 90 + seedC) * 7); i++) //hrackle plant
        {
            seeded1 = seeded(seedB + seedA * i * 98712);
            seeded5 = seeded(seedA * i + 92 + seedE * 11 * i);

            scenicList.push(new Scenery("hracklePlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2*Math.PI * Math.random(), true));
        }

        for (var i = 0; i < Math.floor(seeded(seedD * 90 + seedA) * 4); i++) //apotl plants
        {
            seeded1 = seeded(seedC + 20 + seedB * i * 112);
            seeded5 = seeded(32 + seedA * i + 12 + seedD * 11 * i);

            scenicList.push(new Scenery("apotlPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2*Math.PI * Math.random(), true));
        }

        for (var i = 0; i < Math.floor(seeded(seedB * 61 + seedE) * 8); i++) //aktaltl plants
        {
            seeded1 = seeded(seedC * i + 56 + seedE * i * 112);
            seeded5 = seeded(seedD * i + 12 + seedC * 11 * i);

            scenicList.push(new Scenery("aktaltlPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2*Math.PI * Math.random(), true));
        }

        for (var i = 0; i < Math.floor(seeded(seedC * 32 + seedD * 170) * 6); i++) //pochal plants
        {
            seeded1 = seeded(seedA * i + 88 + seedA * i * 187);
            seeded5 = seeded(seedD * i + 43 + seedB * 213 * i);

            scenicList.push(new Scenery("pochalPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2*Math.PI * Math.random(), true));
        }

        for (var i = 0; i < Math.floor(seeded(seedA * 32 + seedD) * 7); i++) //kwom plants
        {
            seeded1 = seeded(seedB * i + 20 + seedE * i * 187);
            seeded5 = seeded(seedA * i + 43 + seedC * 213 * i);

            scenicList.push(new Scenery("kwomPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2*Math.PI * Math.random(), true));
        }
        for (var i = 0; i < Math.floor(seeded(seedD * 93 + seedD) * 5); i++) //lel plants
        {
            seeded1 = seeded(seedB * i + 25);
            seeded5 = seeded(seedE * i + 14 + seedC * 200 * i);

            scenicList.push(new Scenery("lelPlant", xSt - seeded5 * mapSz, ySt - seeded1 * mapSz, 2*Math.PI * Math.random(), true));
        }

        for (var i = 0; i < Math.floor(seeded(seedA * 2) * 3); i++) //taipan
        {
            seeded2 = seeded(seedD + seedE * i * 234322);
            seeded5 = seeded(seedC + seedD * (i + 9878656));
            seeded3 = seeded(seedA + seedC * (i + 70004956));
            seeded4 = seeded(seedE + seedB * (i + 123425));

            var rnd = seeded(seedA + 22144 * i);
            if (rnd > 0.4)
            {
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded3 * mapSz, ySt - seeded5 * mapSz, "Taipan", false, genID));
            }
            else
            {
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz, ySt - seeded4 * mapSz, "Taipan", true, genID));
            }
        }

        for (var i = 0; i < Math.floor(seeded(seedB * 18 + 4) * 4); i++) //Rhino
        {
            seeded2 = seeded(seedD + seedD * i * 112322);
            seeded5 = seeded(seedA + seedE * (i + 5328656));
            seeded3 = seeded(seedD + seedC * (i + 8654956));
            seeded4 = seeded(seedE + seedA * (i + 9668));

            var rnd = seeded(seedC * i + seedE + 1144 * i);
            if (rnd > 0.7)
            {
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz, ySt - seeded4 * mapSz, "Rhinocerous", false, genID));
            }
            else if (rnd > 0.5)
            {
                ArtificialIntelligenceAccess.push(new Unit(xSt - seeded5 * mapSz, ySt - seeded3 * mapSz, "Rhinocerous", true, genID));
            }
        }

        for (var i = 0; i < Math.floor(seededA * 3); i++)
        {
            seeded2 = seeded(seedB * i + 17 + seedD * 22312 * i);
            seeded3 = seeded(seedD * i + 3 + seedE * 54637 * i);

            for (var l = 0; l < Math.floor(seeded(seededB * 11) * 10); l++)
            {
                var sdedX = xSt - seeded2 * mapSz + (1400 * seeded(l * 12 + seedE * l + seedA * l) - 700);
                var sdedY = ySt - seeded3 * mapSz + (1400 * seeded(l * 15 + seedB * l + seedC * l) - 700);
                if (Math.random() > 0.56)
                {
                    scenicList.push(new Scenery("mofuNest", sdedX, sdedY, Math.random() * (2* Math.PI), Math.random() + 0.8));
                    ArtificialIntelligenceAccess.push(new Unit(sdedX, sdedY, "Mofu", Math.round(Math.random()), genID));
                }
                else
                {
                    if (Math.random() > 0.6)
                    {
                        scenicList.push(new Scenery("mofuNest", sdedX, sdedY, Math.random() * (2* Math.PI), Math.random() + 0.8));
                        ArtificialIntelligenceAccess.push(new Unit(sdedX + 350 * Math.random() - 175, sdedY + 350 * Math.random() - 175, "Mofu", Math.round(Math.random()), genID));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(sdedX + 500 * Math.random() - 250, sdedY + 400 * Math.random() - 200, "Mofu", "baby", genID));
                    }
                }
            }
        }

        for (var i = 0; i < Math.floor(seeded(seedD * 77 + 36) * 6 + 5); i++) //Yioshks
        {
            seeded2 = seeded(seedB + seedB * 1313 * i);
            seeded3 = seeded(seedA + seedA * 66714 * i);

            if (Math.round(seeded((seedB + seedA + seedC) * 54)))
            {
                for (var j = 0; j < Math.floor(seeded(seededC * 48 + 3 * i) * 3); j++)
                {
                    var rando = seeded(seedC * 98754673 * j + i * seedE + 29);
                    if (rando > 0.62)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(100), ySt - seeded3 * mapSz + spacer(100), "Yioshk", true, genID));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(100), ySt - seeded3 * mapSz + spacer(100), "Yioshk", false, genID));
                    }
                }
            }
            else
            {
                var rando = seeded(seedE * 1142467 * j + i * seedD + 19);
                if (rando > 0.72)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(100), ySt - seeded3 * mapSz + spacer(100), "Yioshk", true, genID));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(100), ySt - seeded3 * mapSz + spacer(100), "Yioshk", false, genID));
                }
            }
        }

        for (var i = 0; i < Math.floor(seeded(seedC * 320) * 4); i++) //zarbus
        {
            seeded2 = seeded(seedE + seedE * 33333 * i);
            seeded3 = seeded(seedB + seedC + seedA * 54546 * i);

            if (Math.round(seeded((seedB + seedA + seedC) * 551 + seedB * i)))
            {
                for (var j = 0; j < Math.floor(seeded(seededD * 67 + 91 * i) * 5); j++)
                {
                    var rando = seeded(seedC * 72674 * j + i * seedE + 80);
                    if (rando > 0.5)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(220), ySt - seeded3 * mapSz + spacer(220), "Zarbu", false, genID));
                    }
                    else if (rando > 0.23)
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(220), ySt - seeded3 * mapSz + spacer(220), "Zarbu", "baby", genID));
                    }
                    else
                    {
                        ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(220), ySt - seeded3 * mapSz + spacer(220), "Zarbu", true, genID));
                    }
                }
            }
            else
            {
                var rando = seeded(seedC * 18726 * j + i * seedA + 191);
                if (rando > 0.8)
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(60), ySt - seeded3 * mapSz + spacer(60), "Zarbu", true, genID));
                }
                else
                {
                    ArtificialIntelligenceAccess.push(new Unit(xSt - seeded2 * mapSz + spacer(60), ySt - seeded3 * mapSz + spacer(60), "Zarbu", false, genID));
                }
            }
        }
    }
    //console.log(scenicList);

    if (dontIncludeUnits == true)
    {
        for (var trimm = ArtificialIntelligenceAccess.length - 1; trimm >= 0; trimm--)
        {
            if (ArtificialIntelligenceAccess[trimm].ID == genID && !ArtificialIntelligenceAccess[trimm].guarantee && ArtificialIntelligenceAccess[trimm].team != "player")
            {
                ArtificialIntelligenceAccess.splice(trimm, 1);
            }
        }
    }
}

function trimmer(x1, y1, x2, y2, safe)
{
    if (safe)
    {
        for (var trimm = ArtificialIntelligenceAccess.length - 1; trimm >= 0; trimm--)
        {
            if (ArtificialIntelligenceAccess[trimm].playerSeen == false && !ArtificialIntelligenceAccess[trimm].guarantee && ArtificialIntelligenceAccess[trimm].savified != true && ArtificialIntelligenceAccess[trimm].team != "player")
            {
                if (ArtificialIntelligenceAccess[trimm].X <= x1 && ArtificialIntelligenceAccess[trimm].X >= x2 && ArtificialIntelligenceAccess[trimm].Y <= y1 && ArtificialIntelligenceAccess[trimm].Y >= y2)
                {
                    ArtificialIntelligenceAccess.splice(trimm, 1);
                }
            }
        }

        for (var trimm = scenicList.length - 1; trimm >= 0; trimm--)
        {
            if (scenicList[trimm].savified != true)
            {
                if (scenicList[trimm].X <= x1 && scenicList[trimm].X >= x2 && scenicList[trimm].Y <= y1 && scenicList[trimm].Y >= y2)
                {
                    scenicList.splice(trimm, 1);
                }
            }
        }
    }
    else
    {
        for (var trimm = ArtificialIntelligenceAccess.length - 1; trimm >= 0; trimm--)
        {
            if (!ArtificialIntelligenceAccess[trimm].guarantee && ArtificialIntelligenceAccess[trimm].team != "player")
            {
                if (ArtificialIntelligenceAccess[trimm].X <= x1 && ArtificialIntelligenceAccess[trimm].X >= x2 && ArtificialIntelligenceAccess[trimm].Y <= y1 && ArtificialIntelligenceAccess[trimm].Y >= y2)
                {
                    ArtificialIntelligenceAccess.splice(trimm, 1);
                }
            }
        }

        for (var trimm = scenicList.length - 1; trimm >= 0; trimm--)
        {
            if (scenicList[trimm].X <= x1 && scenicList[trimm].X >= x2 && scenicList[trimm].Y <= y1 && scenicList[trimm].Y >= y2)
            {
                scenicList.splice(trimm, 1);
            }
        }
    }
}

function cropper(x1, y1, x2, y2, safe, salvo)
{
    if (safe)
    {
        for (var cropp = ArtificialIntelligenceAccess.length - 1; cropp >= 0; cropp--)
        {
            if (ArtificialIntelligenceAccess[cropp].playerSeen == false && !ArtificialIntelligenceAccess[cropp].guarantee && ArtificialIntelligenceAccess[cropp].savified != true && ArtificialIntelligenceAccess[cropp].team != "player")
            {
                if (ArtificialIntelligenceAccess[cropp].X > x1 || ArtificialIntelligenceAccess[cropp].X < x2 || ArtificialIntelligenceAccess[cropp].Y > y1 || ArtificialIntelligenceAccess[cropp].Y < y2)
                {
                    ArtificialIntelligenceAccess.splice(cropp, 1);
                }
                else if (salvo == true)
                {
                    ArtificialIntelligenceAccess[cropp].savified = true;
                }
            }
        }

        for (var cropp = scenicList.length - 1; cropp >= 0; cropp--)
        {
            if (scenicList[cropp].savified != true)
            {
                if (scenicList[cropp].X > x1 || scenicList[cropp].X < x2 || scenicList[cropp].Y > y1 || scenicList[cropp].Y < y2)
                {
                    scenicList.splice(cropp, 1);
                }
                else if (salvo == true)
                {
                    scenicList[cropp].savified = true;
                }
            }
        }
    }
    else
    {
        for (var cropp = ArtificialIntelligenceAccess.length - 1; cropp >= 0; cropp--)
        {
            if (!ArtificialIntelligenceAccess[cropp].guarantee && ArtificialIntelligenceAccess[cropp].team != "player")
            {
                if (ArtificialIntelligenceAccess[cropp].X > x1 || ArtificialIntelligenceAccess[cropp].X < x2 || ArtificialIntelligenceAccess[cropp].Y > y1 || ArtificialIntelligenceAccess[cropp].Y < y2)
                {
                    ArtificialIntelligenceAccess.splice(cropp, 1);
                }
                else if (salvo == true)
                {
                    ArtificialIntelligenceAccess[cropp].savified = true;
                }
            }
        }

        for (var cropp = scenicList.length - 1; cropp >= 0; cropp--)
        {
            if (scenicList[cropp].X > x1 || scenicList[cropp].X < x2 || scenicList[cropp].Y > y1 || scenicList[cropp].Y < y2)
            {
                scenicList.splice(cropp, 1);
            }
            else if (salvo == true)
            {
                scenicList[cropp].savified = true;
            }
        }
    }
}

function seeder(seedNum)
{
    seed = seedNum;
    //console.log(seededRandom());
    return seededRandom();
}

function seeded(seedNum)
{
    //console.log(seededRandom());

    /* Simple hash function. */
    var a = 1, c = 0, h, o;
    var s = "" + seedNum;
    a = 0;
    /*jshint plusplus:false bitwise:false*/
    for (h = s.length - 1; h >= 0; h--) {
        o = s.charCodeAt(h);
        a = (a<<6&268435455) + o + (o<<14);
        c = a & 266338304;
        a = c!==0?a^c>>21:a;
    }
    return (a % 10000000) / 10000000;
}

function seededRandom()
{
    var max = 1;
    var min = 0;

    seed = (seed * 9301 + 49297) % 233280;
    var rnd = seed / 233280;

    return min + rnd * (max - min);
}